<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b00d1f4711b6f18447e727ef1130aa4500a8be1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Build.Utilities.ToolLocationHelper.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4858862612e7df85ec2125a0e3d623b5189c9c17</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bf4c233253e9d9beb63f96cc068642f885d7b8d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides utility methods for locating <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> and <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK files and directories.</source>
          <target state="translated">찾기 위한 유틸리티 메서드를 제공 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK 파일 및 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Clears the appDomain wide cache of platform and extension SDKs.</source>
          <target state="translated">플랫폼 및 확장 Sdk의 appDomain 넓은 캐시를 지웁니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets a sorted list of <bpt id="p1">&lt;xref href="Microsoft.Build.Utilities.AssemblyFoldersExInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects which contain information about the directories in which the third party assemblies are registered.</source>
          <target state="translated">정렬된 된 목록을 가져옵니다 <bpt id="p1">&lt;xref href="Microsoft.Build.Utilities.AssemblyFoldersExInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 타사 어셈블리 등록 된 디렉터리에 대 한 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This information is used at build and design time.</source>
          <target state="translated">이 정보는 빌드 및 디자인 타임에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enumerates the <ph id="ph1">`AssemblyFoldersEx`</ph> registry location and returns the list of <ph id="ph2">`AssemblyFoldersExInfo`</ph>in the same order that they are searched for reference assemblies at design and build time.</source>
          <target state="translated">이 메서드는 열거는 <ph id="ph1">`AssemblyFoldersEx`</ph> 레지스트리 위치 목록을 반환 하 고 <ph id="ph2">`AssemblyFoldersExInfo`</ph>디자인에서 참조 어셈블리를 검색 하 고 빌드 시간 순서입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>On a 64-bit operating system, if targeting 64-bit, add in the 64-bit hive then the 32-bit hive; if targeting 32-bit, add in the 32-bit hive then the 64-bit hive.</source>
          <target state="translated">64 비트 운영 체제에서 64 비트를 대상으로 하는 경우, 추가 64 비트 하이브에 다음 32 비트 하이브; 32 비트를 대상으로 하는 경우 추가 32 비트 하이브에서 다음 64 비트 하이브 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>On 32-bit machine only add in the 32-bit hive.</source>
          <target state="translated">32 비트 시스템 에서만 32 비트 하이브에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The root registry location for the targeted framework.</source>
          <target state="translated">대상된 프레임 워크에 대 한 루트 레지스트리 위치입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For .NET this is SOFTWARE\MICROSOFT<ph id="ph1">\\</ph>.NETFramework.</source>
          <target state="translated">이것이 SOFTWARE\MICROSOFT for.net<ph id="ph1">\\</ph>합니다. NETFramework 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The targeted framework version (2.0, 3.0, 3.5, 4.0, ….).</source>
          <target state="translated">대상된 프레임 워크 버전 (2.0, 3.0, 3.5, 4.0,...)입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The name of the folder, (AssemblyFoldersEx) could also be PocketPC\AssemblyFoldersEx, or others.</source>
          <target state="translated">PocketPC\AssemblyFoldersEx, 사용자 또는 다른 사용자 (AssemblyFoldersEx) 폴더의 이름을 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The targeted minimum and maximum OS versions in the registry.</source>
          <target state="translated">대상된 최소 및 최대 OS 버전 레지스트리에입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These values are used to return only directories for OS versions between the declared minimum and maximum.</source>
          <target state="translated">이러한 값은 최소값과 최대값 사이 선언 된 OS 버전에 대 한 디렉터리에만 반환 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If this value is blank or null, no filtering is done.</source>
          <target state="translated">이 값이 비어 있거나 null 이면 필터링을 하지 않고 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The targeted platform GUIDs.</source>
          <target state="translated">대상된 플랫폼 Guid입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Used to return only directories which have a matching platform GUID.</source>
          <target state="translated">일치 하는 플랫폼 GUID를 포함 하는 디렉터리를 반환 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If this value is blank or null no filtering is done.</source>
          <target state="translated">이 값이 비어 있거나 null 필터링을 하지 않고 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The targeted processor architecture.</source>
          <target state="translated">대상된 프로세서 아키텍처입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This determines which registry hives are searched and in which order.</source>
          <target state="translated">검색 되는 레지스트리 하이브를 결정 및 순서입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns list of <bpt id="p1">&lt;xref uid="langword_csharp_AssemblyFoldersExInfo" name="AssemblyFoldersExInfo" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 목록 <bpt id="p1">&lt;xref uid="langword_csharp_AssemblyFoldersExInfo" name="AssemblyFoldersExInfo" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creates a display name given the target framework details.</source>
          <target state="translated">표시 이름이 지정 된 대상 프레임 워크 세부 정보를 만듭니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the equivalent of the target framework moniker, but for display.</source>
          <target state="translated">대상 프레임 워크 모니커의 하지만 표시에 대 한에 해당 하는 이것이입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one cannot be found from the redist list file, a synthesized one is returned, so there is always a display name.</source>
          <target state="translated">반환 되는 합성된 재배포 목록 파일에서 하나를 찾을 수 없습니다 하므로 있는지 항상 표시 이름입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The target framework directory.</source>
          <target state="translated">대상 프레임 워크 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The framework name.</source>
          <target state="translated">프레임 워크 이름입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a display name given the target framework details.</source>
          <target state="translated">표시 이름이 지정 된 대상 프레임 워크 세부 정보를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the full name of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> root registry key.</source>
          <target state="translated">전체 이름을 가져옵니다는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 루트 레지스트리 키입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">버전의는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 대상으로 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A string containing the full name of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> root registry key.</source>
          <target state="translated">전체 이름을 포함 하는 문자열은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 루트 레지스트리 키입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the name of the value under the &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt; that contains the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK installation path.</source>
          <target state="translated">아래에 있는 값의 이름을 가져옵니다는 &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt;를 포함 하는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK 설치 경로&lt;/xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">버전의는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 대상으로 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns a string containing the name of the registry key value under the &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt; that contains the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK installation path.</source>
          <target state="translated">아래에 레지스트리 키 값의 이름을 포함 하는 문자열을 반환 된 &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt;를 포함 하는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK 설치 경로&lt;/xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Name of the value of GetDotNetFrameworkRootRegistryKey that contains the SDK install root path</source>
          <target state="translated">루트 경로 설치 하는 SDK를 포함 하는 GetDotNetFrameworkRootRegistryKey 값의 이름</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio the requested SDK is associated with</source>
          <target state="translated">연결 된 버전의 Visual Studio는 요청 된 SDK</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.String&gt;.</source>
          <target state="translated">&lt;xref:System.String&gt;입니다.&lt;/xref:System.String&gt; 반환</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns the full name of the .NET Framework SDK root registry key.</source>
          <target state="translated">.NET Framework SDK 루트 레지스트리 키의 전체 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the registry key root which indicates where to find the .NETFramework sdk.</source>
          <target state="translated">찾을 위치를 나타내는 레지스트리 키 루트의 문자열 표현을 반환는 합니다. NETFramework sdk입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns the full name of the .NET Framework SDK root registry key</source>
          <target state="translated">.NET Framework SDK 루트 레지스트리 키의 전체 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio the requested SDK is associated with</source>
          <target state="translated">연결 된 버전의 Visual Studio는 요청 된 SDK</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.String&gt;.</source>
          <target state="translated">&lt;xref:System.String&gt;입니다.&lt;/xref:System.String&gt; 반환</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the prefix of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> folder.</source>
          <target state="translated">접두사를 가져옵니다는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 폴더입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of the value returned is the string "v2.0".</source>
          <target state="translated">반환 값의 예는 문자열 "v2.0"입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">버전의는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 대상으로 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns the prefix of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> folder.</source>
          <target state="translated">접두사를 반환 된 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 폴더입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> root directory.</source>
          <target state="translated">정규화 된 경로를 가져옵니다는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 루트 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">버전의는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 대상으로 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> root directory, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) if the targeted version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> is not installed.</source>
          <target state="translated">정규화 된 경로를 포함 하는 문자열은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 루트 디렉터리 또는 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) 하는 경우 대상된 버전의는 <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 설치 되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to the framework's root directory.</source>
          <target state="translated">프레임 워크의 루트 디렉터리를 정규화 된 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Desired architecture, or DotNetFrameworkArchitecture.Current for the architecture this process is currently running under.</source>
          <target state="translated">이 프로세스에서 현재 실행 중인 아키텍처에 대 한 아키텍처 또는 DotNetFrameworkArchitecture.Current 원하는입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns a fully qualified path to the framework's root directory.</source>
          <target state="translated">프레임 워크의 루트 디렉터리에는 정규화 된 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to a file in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> directory.</source>
          <target state="translated">파일의 정규화 된 경로 가져옵니다는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The file to locate in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> directory.</source>
          <target state="translated">찾을 파일은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">버전의는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 대상으로 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the specified file, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) if the targeted version of the <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> is not installed.</source>
          <target state="translated">지정된 된 파일 또는 null 참조를 정규화 된 경로 포함 하는 문자열 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) 하는 경우 대상된 버전의는 <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 설치 되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to a file in the frameworks root directory for the specified architecture.</source>
          <target state="translated">지정된 된 아키텍처에 대 한 프레임 워크 루트 디렉터리에 파일을 정규화 된 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>File name to locate in the .NET Framework directory</source>
          <target state="translated">.NET Framework 디렉터리에서 찾을 수 있도록 파일 이름</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Desired architecture, or DotNetFrameworkArchitecture.Current for the architecture this process is currently running under.</source>
          <target state="translated">이 프로세스에서 현재 실행 중인 아키텍처에 대 한 아키텍처 또는 DotNetFrameworkArchitecture.Current 원하는입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns a fully qualified path to a file in the frameworks root directory.</source>
          <target state="translated">프레임 워크 루트 디렉터리에 파일에는 정규화 된 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns the path to the reference assemblies location for the given framework version.</source>
          <target state="translated">에 지정 된 프레임 워크 버전에 대 한 참조 어셈블리 위치의 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns a string containing the fully qualified path to the Reference Assemblies folder, or a null reference (Nothing in Visual Basic) if the targeted version of the .NET Framework is not installed.</source>
          <target state="translated">.NET Framework의 대상된 버전이 설치 되지 않은 경우 null 참조 (Visual Basic에서는 Nothing) 또는 참조 어셈블리 폴더의 정규화 된 경로 포함 하는 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the fully qualified path to the \bin directory of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK.</source>
          <target state="translated">\bin 디렉터리에 정규화 된 경로 가져옵니다는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">버전의는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 대상으로 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the \bin directory of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) if the targeted version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK is not installed.</source>
          <target state="translated">\bin 디렉터리에 정규화 된 경로 포함 하는 문자열은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK, null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) 하는 경우 대상된 버전의는 <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK 설치 되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns the path to the "bin" directory of the .NET Framework SDK.</source>
          <target state="translated">.NET Framework SDK의 "bin" 디렉터리에 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio the requested SDK is associated with</source>
          <target state="translated">연결 된 버전의 Visual Studio는 요청 된 SDK</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Path string.</source>
          <target state="translated">경로 문자열입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the fully qualified path to a file in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK.</source>
          <target state="translated">파일의 정규화 된 경로 가져옵니다는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The path for the SDK takes in consideration the processor architecture environment information for the calling process, so it might end up being ".../bin/i64", for example.</source>
          <target state="translated">SDK에 대 한 경로 고려 사항에서 호출 하는 프로세스에 대 한 프로세서 아키텍처 환경 정보 되도록 예를 들어 ".../bin/i64" 되 고 생길 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile%2A&gt; and &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile%2A&gt; this method checks for the existence of the file, so that an invalid <ph id="ph1">`fileName`</ph> returns null.</source>
          <target state="translated">와 달리 &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile%2A&gt;및 &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile%2A&gt;이 메서드는 파일의 존재 여부 확인 되도록 잘못 된 <ph id="ph1">`fileName`</ph> null을 반환 합니다.&lt;/xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile%2A&gt; &lt;/xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The file to locate in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK.</source>
          <target state="translated">찾을 파일은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">버전의는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 대상으로 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the \bin directory of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) if the targeted version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK is not installed.</source>
          <target state="translated">\bin 디렉터리에 정규화 된 경로 포함 하는 문자열은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK, null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) 하는 경우 대상된 버전의는 <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK 설치 되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to a file in the .NET Framework SDK.</source>
          <target state="translated">.NET Framework SDK에서 파일의 정규화 된 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>File name to locate in the .NET Framework SDK directory</source>
          <target state="translated">.NET Framework SDK 디렉터리에서 찾을 수 있도록 파일 이름</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The required architecture of the requested file.</source>
          <target state="translated">요청된 된 파일의 필수 아키텍처입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns a fully qualified path to a file in the .NET Framework SDK.</source>
          <target state="translated">.NET Framework SDK에서 파일의 정규화 된 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Throws an error if the .NET Framework SDK can't be found.</source>
          <target state="translated">.NET Framework SDK를 찾을 수 없는 경우 오류를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Get a fully qualified path to a file in the .NET Framework SDK.</source>
          <target state="translated">.NET Framework SDK에서 파일의 정규화 된 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Error if the .NET Framework SDK can't be found.</source>
          <target state="translated">.NET Framework SDK를 찾을 수 없는 경우 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>File name to locate in the .NET Framework SDK directory</source>
          <target state="translated">.NET Framework SDK 디렉터리에서 찾을 수 있도록 파일 이름</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the requested SDK.</source>
          <target state="translated">요청한 SDK와 연결 된 Visual Studio의 버전입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Path string.</source>
          <target state="translated">경로 문자열입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Get a fully qualified path to a file in the .NET Framework SDK.</source>
          <target state="translated">.NET Framework SDK에서 파일의 정규화 된 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Error if the .NET Framework SDK can't be found.</source>
          <target state="translated">.NET Framework SDK를 찾을 수 없는 경우 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>File name to locate in the .NET Framework SDK directory</source>
          <target state="translated">.NET Framework SDK 디렉터리에서 찾을 수 있도록 파일 이름</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">대상된.NET Framework의 버전</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the requested SDK.</source>
          <target state="translated">요청한 SDK와 연결 된 Visual Studio의 버전입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The required architecture of the requested file.</source>
          <target state="translated">요청된 된 파일의 필수 아키텍처입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Path string.</source>
          <target state="translated">경로 문자열입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets the paths to the reference assemblies location for the given target framework.</source>
          <target state="translated">지정 된 대상 프레임 워크에 대 한 참조 어셈블리 위치의 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method assumes that the requested ReferenceAssemblyRoot path will be the ProgramFiles directory that is specified by Environment.SpecialFolder.ProgramFiles.</source>
          <target state="translated">이 메서드는 요청 된 ReferenceAssemblyRoot 경로 Environment.SpecialFolder.ProgramFiles 하 여 지정 된 ProgramFiles 디렉터리 된다는 가정 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5, or 4, the correctly chained reference assembly paths for the legacy .NET Framework versions will be returned.</source>
          <target state="translated">또한,는 합니다. NETFramework 또는.NET Framework targetFrameworkIdentifiers 표시 되 고 targetFrameworkVersion 2.0, 3.0, 3.5 또는 4 이면 올바르게 연결 된 참조 어셈블리 경로 기존.NET Framework 버전에 대 한 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.</source>
          <target state="translated">이 체인의 참조 어셈블리 경로 목록 커진 기존 GetPathToDotNetFrameworkReferenceAssemblies 사용 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The framework name.</source>
          <target state="translated">프레임 워크 이름입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Returns the paths to the reference assemblies location.</source>
          <target state="translated">참조 어셈블리 위치에 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>When the frameworkName is null</source>
          <target state="translated">frameworkName null 인 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets the paths to the reference assemblies location for the given framework version relative to a given targetFrameworkRoot.</source>
          <target state="translated">경로 주어진된 targetFrameworkRoot 기준으로 해당된 프레임 워크 버전에 대 한 참조 어셈블리 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not check to see if the path exists or not.</source>
          <target state="translated">이 메서드는 경로 있는지 여부를 확인 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Root directory which will be used to calculate the reference assembly path.</source>
          <target state="translated">참조 어셈블리 경로 계산 하는 사용할 수 있는 루트 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The references assembies will be generated in the following way TargetFrameworkRootPath\TargetFrameworkIdentifier\TargetFrameworkVersion\SubType\TargetFrameworkSubType.</source>
          <target state="translated">참조 assembies TargetFrameworkRootPath\TargetFrameworkIdentifier\TargetFrameworkVersion\SubType\TargetFrameworkSubType 다음과 같은 방법으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A frameworkName class which represents a TargetFrameworkMoniker.</source>
          <target state="translated">TargetFrameworkMoniker 나타내는 frameworkName 클래스입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This cannot be null.</source>
          <target state="translated">Null 일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns the paths to the reference assemblies location.</source>
          <target state="translated">참조 어셈블리 위치에 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Returns the paths to the reference assemblies location for the given target framework.</source>
          <target state="translated">에 지정 된 대상 프레임 워크에 대 한 참조 어셈블리 위치의 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths for the legacy .NET Framework versions.</source>
          <target state="translated">이 메서드는 요청 된 ReferenceAssemblyRoot 경로 Environment.SpecialFolder.ProgramFiles에 additon로 지정 된 ProgramFiles 디렉터리를 있을 것으로 가정 됩니다 때는 합니다. NETFramework 또는.NET Framework targetFrameworkIdentifiers 표시 되 고 targetFrameworkVersion은 2.0, 3.0, 3.5 또는 4.0에서는 기존.NET Framework 버전에 올바르게 연결 된 참조 어셈블리 경로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.</source>
          <target state="translated">이 체인의 참조 어셈블리 경로 목록 커진 기존 GetPathToDotNetFrameworkReferenceAssemblies 사용 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Identifier being targeted</source>
          <target state="translated">대상 식별자입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Version being targeted</source>
          <target state="translated">대상 버전입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Profile being targeted</source>
          <target state="translated">대상 프로필입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Collection of reference assembly locations.</source>
          <target state="translated">참조 어셈블리 위치의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When the frameworkName is null</source>
          <target state="translated">frameworkName null 인 경우</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Returns the path to the reference assemblies location for the given target framework's standard libraries (i.e. mscorlib).</source>
          <target state="translated">경로 지정한 대상 프레임 워크의 표준 라이브러리 (예: mscorlib)에 대 한 참조 어셈블리 위치를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths for the legacy .NET Framework versions.</source>
          <target state="translated">이 메서드는 요청 된 ReferenceAssemblyRoot 경로 Environment.SpecialFolder.ProgramFiles에 additon로 지정 된 ProgramFiles 디렉터리를 있을 것으로 가정 됩니다 때는 합니다. NETFramework 또는.NET Framework targetFrameworkIdentifiers 표시 되 고 targetFrameworkVersion은 2.0, 3.0, 3.5 또는 4.0에서는 기존.NET Framework 버전에 올바르게 연결 된 참조 어셈블리 경로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.</source>
          <target state="translated">이 체인의 참조 어셈블리 경로 목록 커진 기존 GetPathToDotNetFrameworkReferenceAssemblies 사용 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Identifier being targeted</source>
          <target state="translated">대상 식별자입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Version being targeted</source>
          <target state="translated">대상 버전입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Profile being targeted</source>
          <target state="translated">대상 프로필입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Collection of reference assembly locations.</source>
          <target state="translated">참조 어셈블리 위치의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>When the frameworkName is null</source>
          <target state="translated">frameworkName null 인 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Returns the path to mscorlib and system.dll</source>
          <target state="translated">Mscorlib 및 system.dll에 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Identifier being targeted</source>
          <target state="translated">대상 식별자입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Version being targeted</source>
          <target state="translated">대상 버전입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Profile being targeted</source>
          <target state="translated">대상 프로필입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This is used to determine where we should look for the standard libraries.</source>
          <target state="translated">표준 라이브러리에 대 한 확인 해야 것을 확인 하는이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Note, this parameter is only used for .NET Framework 3.5 or less.</source>
          <target state="translated">단,이 매개 변수는 사용 하는.NET Framework 3.5 이하로 됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Collection of reference assembly locations.</source>
          <target state="translated">참조 어셈블리 위치의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>When the frameworkName is null</source>
          <target state="translated">frameworkName null 인 경우</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to a file in the system directory.</source>
          <target state="translated">파일 시스템 디렉터리에 정규화 된 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This API builds the full path plus filename for a file in the System folder.</source>
          <target state="translated">이 API는 전체 경로 및 파일 시스템 폴더에 대 한 이름을 작성합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>It doesn't check for the existence of the file prior to returning.</source>
          <target state="translated">반환 하기 전에 파일의 존재 여부 검사 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The file to locate in the System folder.</source>
          <target state="translated">시스템 폴더에서 찾을 파일입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the the file in the system directory.</source>
          <target state="translated">정규화 된 경로를 포함 하는 문자열은 파일 시스템 디렉터리에 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Returns the path to the Windows SDK for the desired .NET Framework and Visual Studio version.</source>
          <target state="translated">원하는.NET Framework 및 Visual Studio 버전에 대 한 Windows sdk의 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Note that this is only supported for a targeted .NET Framework version of 4.5 and above.</source>
          <target state="translated">Note이 대상.NET Framework 버전 4.5 이상 에서만 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Target .NET Framework version</source>
          <target state="translated">대상.NET Framework 버전</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the SDK.</source>
          <target state="translated">SDK와 연결 된 Visual Studio의 버전입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Path to the appropriate Windows SDK location</source>
          <target state="translated">적절 한 Windows SDK 위치에 대 한 경로</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Returns the path to a file in the Windows SDK for the desired .NET Framework and Visual Studio version.</source>
          <target state="translated">원하는.NET Framework 및 Visual Studio 버전에 대 한 Windows SDK의 파일 경로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Note that this is only supported for a targeted .NET Framework version of 4.5 and above.</source>
          <target state="translated">Note이 대상.NET Framework 버전 4.5 이상 에서만 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The name of the file being requested.</source>
          <target state="translated">요청 된 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Target .NET Framework version.</source>
          <target state="translated">대상.NET Framework 버전입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the SDK.</source>
          <target state="translated">SDK와 연결 된 Visual Studio의 버전입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Path to the appropriate Windows SDK file</source>
          <target state="translated">적절 한 Windows SDK 파일에 대 한 경로</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Returns the path to a file in the Windows SDK for the desired .NET Framework and Visual Studio version and the desired architecture.</source>
          <target state="translated">원하는.NET Framework 및 Visual Studio 버전 및 원하는 아키텍처에 대 한 Windows SDK의 파일 경로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Note that this is only supported for a targeted .NET Framework version of 4.5 and above.</source>
          <target state="translated">Note이 대상.NET Framework 버전 4.5 이상 에서만 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The name of the file being requested.</source>
          <target state="translated">요청 된 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Target .NET Framework version.</source>
          <target state="translated">대상.NET Framework 버전입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the requested SDK.</source>
          <target state="translated">요청한 SDK와 연결 된 Visual Studio의 버전입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Desired architecture of the resultant file.</source>
          <target state="translated">결과 파일의 아키텍처를 권장합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Path to the appropriate Windows SDK file</source>
          <target state="translated">적절 한 Windows SDK 파일에 대 한 경로</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Given an SDK moniker and the targeted platform get the path to the SDK root if it exists.</source>
          <target state="translated">있는 경우 SDK 루트에 SDK 모니커 및 대상된 플랫폼 get 경로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Moniker for the sdk</source>
          <target state="translated">Sdk에 대 한 모니커</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Identifier for the platform</source>
          <target state="translated">플랫폼에 대 한 식별자</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Version of the platform</source>
          <target state="translated">플랫폼 버전</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A full path to the sdk root if the sdk exists in the targeted platform or an empty string if it does not exist.</source>
          <target state="translated">존재 하지 않는 경우 sdk 대상된 플랫폼 또는 빈 문자열에 있는 경우 sdk 루트에 대 한 전체 경로.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Given an SDKName, targetPlatformIdentifier and TargetPlatformVersion search the default sdk locations for the passed in sdk name.</source>
          <target state="translated">SDKName 들어 targetPlatformIdentifier 및 TargetPlatformVersion 검색 기본 sdk 위치 전달 된 항목에 대 한 sdk 이름이 며에 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The format of the sdk moniker is SDKName, Version=X.X</source>
          <target state="translated">Sdk 모니커 형식이 SDKName, Version=X.X</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Name of the SDK to determine the installation location for.</source>
          <target state="translated">설치 위치를 확인 하려면 SDK의 이름입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">대상된 플랫폼에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">대상된 플랫폼 버전에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Location of the SDK if it is found, empty string if it could not be found</source>
          <target state="translated">SDK의 위치를 찾으면 빈 문자열 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Given an SDKName, targetPlatformIdentifier and TargetPlatformVersion search the default sdk locations for the passed in sdk name.</source>
          <target state="translated">SDKName 들어 targetPlatformIdentifier 및 TargetPlatformVersion 검색 기본 sdk 위치 전달 된 항목에 대 한 sdk 이름이 며에 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The format of the sdk moniker is SDKName, Version=X.X</source>
          <target state="translated">Sdk 모니커 형식이 SDKName, Version=X.X</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Name of the SDK to determine the installation location for.</source>
          <target state="translated">설치 위치를 확인 하려면 SDK의 이름입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">대상된 플랫폼에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">대상된 플랫폼 버전에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>List of disk roots to search for sdks within</source>
          <target state="translated">내에서 sdk에 대 한 검색 하려면 디스크 루트 목록</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Registry root to look for sdks within</source>
          <target state="translated">Sdk 내에서 검색할 레지스트리 루트</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Location of the SDK if it is found, empty string if it could not be found</source>
          <target state="translated">SDK의 위치를 찾으면 빈 문자열 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Given an SDKName, targetPlatformIdentifier and TargetPlatformVersion search the default sdk locations for the passed in sdk name.</source>
          <target state="translated">SDKName 들어 targetPlatformIdentifier 및 TargetPlatformVersion 검색 기본 sdk 위치 전달 된 항목에 대 한 sdk 이름이 며에 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The format of the sdk moniker is SDKName, Version=X.X</source>
          <target state="translated">Sdk 모니커 형식이 SDKName, Version=X.X</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Name of the SDK to determine the installation location for.</source>
          <target state="translated">설치 위치를 확인 하려면 SDK의 이름입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">대상된 플랫폼에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">대상된 플랫폼 버전에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>List of disk roots to search for sdks within</source>
          <target state="translated">내에서 sdk에 대 한 검색 하려면 디스크 루트 목록</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Registry root to look for sdks within</source>
          <target state="translated">Sdk 내에서 검색할 레지스트리 루트</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Location of the SDK if it is found, empty string if it could not be found</source>
          <target state="translated">SDK의 위치를 찾으면 빈 문자열 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Get a list of SDK's installed on the machine for a given target platform</source>
          <target state="translated">지정한 대상 플랫폼에 대 한 컴퓨터에 설치 된 SDK의 목록 가져오기</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">대상된 플랫폼에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">대상된 플랫폼 버전에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>IDictionary of installed SDKS and their location.</source>
          <target state="translated">설치 된 SDK와 그 위치의 IDictionary입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>K:SDKName V:SDK installation location</source>
          <target state="translated">K:SDKName V:SDK 설치 위치</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Get a list of SDK's installed on the machine for a given target platform</source>
          <target state="translated">지정한 대상 플랫폼에 대 한 컴퓨터에 설치 된 SDK의 목록 가져오기</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Array of disk locations to search for sdks</source>
          <target state="translated">Sdk에 대 한 검색 하려면 디스크 위치의 배열</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Root registry location to look for sdks</source>
          <target state="translated">찾을 sdk 루트 레지스트리 위치</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">대상된 플랫폼에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">대상된 플랫폼 버전에 대 한 Sdk를 찾을 수</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>IDictionary of installed SDKS and their location.</source>
          <target state="translated">설치 된 SDK와 그 위치의 IDictionary입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>K:SDKName V:SDK installation location</source>
          <target state="translated">K:SDKName V:SDK 설치 위치</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Given a target platform identifier and a target platform version, search the default SDK locations for the platform SDK for that target platform.</source>
          <target state="translated">대상 플랫폼 식별자와 대상 플랫폼 버전 given을 해당 대상 플랫폼에 대 한 플랫폼 SDK에 대 한 기본 SDK 위치를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Targeted platform for which to find SDK.</source>
          <target state="translated">대상된 플랫폼 SDK를 찾을 수입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Targeted platform version for which to find SDK.</source>
          <target state="translated">찾을 SDK에 대 한 대상된 플랫폼 버전입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Returns the location of the SDK if it is found, otherwise, returns an empty string if the SDK could not be found.</source>
          <target state="translated">SDK의 위치를 찾으면, 그렇지 않으면 빈 문자열을 반환 SDK를 찾을 수 없는 경우 반환 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Given a target platform identifier and a target platform version, search the default SDK locations for the platform SDK for that target platform.</source>
          <target state="translated">대상 플랫폼 식별자와 대상 플랫폼 버전 given을 해당 대상 플랫폼에 대 한 플랫폼 SDK에 대 한 기본 SDK 위치를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Targeted platform for which to find SDK.</source>
          <target state="translated">대상된 플랫폼 SDK를 찾을 수입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Targeted platform version for which to find SDK.</source>
          <target state="translated">찾을 SDK에 대 한 대상된 플랫폼 버전입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Returns the location of the SDK if it is found, otherwise, returns an empty string if the SDK could not be found.</source>
          <target state="translated">SDK의 위치를 찾으면, 그렇지 않으면 빈 문자열을 반환 SDK를 찾을 수 없는 경우 반환 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Given a target platform identifier and a target platform version, search the default SDK locations for the platform SDK for that target platform.</source>
          <target state="translated">대상 플랫폼 식별자와 대상 플랫폼 버전 given을 해당 대상 플랫폼에 대 한 플랫폼 SDK에 대 한 기본 SDK 위치를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Targeted platform for which to find SDK.</source>
          <target state="translated">대상된 플랫폼 SDK를 찾을 수입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Targeted platform version for which to find SDK.</source>
          <target state="translated">찾을 SDK에 대 한 대상된 플랫폼 버전입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Array of disk roots within which to search for SDK.</source>
          <target state="translated">SDK에 대 한 검색할 디스크 루트의 배열입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Registry root within which to search for SDK.</source>
          <target state="translated">SDK에 대 한 검색할 레지스트리 루트입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Returns the location of the SDK if it is found, otherwise, returns an empty string if the SDK could not be found.</source>
          <target state="translated">SDK의 위치를 찾으면, 그렇지 않으면 빈 문자열을 반환 SDK를 찾을 수 없는 경우 반환 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Given a target platform identifier and a target platform version, search the default SDK locations for the platform SDK for that target platform.</source>
          <target state="translated">대상 플랫폼 식별자와 대상 플랫폼 버전 given을 해당 대상 플랫폼에 대 한 플랫폼 SDK에 대 한 기본 SDK 위치를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Targeted platform for which to find SDK.</source>
          <target state="translated">대상된 플랫폼 SDK를 찾을 수입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Targeted platform version for which to find SDK.</source>
          <target state="translated">찾을 SDK에 대 한 대상된 플랫폼 버전입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Array of disk roots within which to search for SDK.</source>
          <target state="translated">SDK에 대 한 검색할 디스크 루트의 배열입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Registry root within which to search for SDK.</source>
          <target state="translated">SDK에 대 한 검색할 레지스트리 루트입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Returns the location of the SDK if it is found, otherwise, returns an empty string if the SDK could not be found.</source>
          <target state="translated">SDK의 위치를 찾으면, 그렇지 않으면 빈 문자열을 반환 SDK를 찾을 수 없는 경우 반환 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Gets the root location for the reference assembly directory under the program files directory.</source>
          <target state="translated">프로그램 파일 디렉터리에서 참조 어셈블리 디렉터리에 대 한 루트 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Returns the root location for the reference assembly directory.</source>
          <target state="translated">참조 어셈블리 디렉터리에 대 한 루트 위치를 반환합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the design-time files for the SDK at the specified SDK root.</source>
          <target state="translated">지정된 된 SDK 루트에서 SDK에 대 한 디자인 타임 파일이 들어 있는 SDK 폴더의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">목록은 참조에 대 한 검색에 사용 되는 순서입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK, must contain a design-time folder.</source>
          <target state="translated">루트 폴더는 SDK에 대 한 디자인 타임 폴더를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for design-time files in the SDK, in the order that must be used for the search.</source>
          <target state="translated">검색에 사용 해야 하는 순서로 SDK의 디자인 타임 파일을 검색 하는 데 사용할 폴더의 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the design-time files for the SDK at the specified SDK root.</source>
          <target state="translated">지정된 된 SDK 루트에서 SDK에 대 한 디자인 타임 파일이 들어 있는 SDK 폴더의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">목록은 참조에 대 한 검색에 사용 되는 순서입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK, must contain a design-time folder.</source>
          <target state="translated">루트 폴더는 SDK에 대 한 디자인 타임 폴더를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The configuration the SDK is targeting.</source>
          <target state="translated">SDK를 대상으로 하는 구성입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This is “Debug” or “Retail”.</source>
          <target state="translated">"Debug" 또는 "Retail"입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The architecture the SDK is targeting.</source>
          <target state="translated">SDK의 대상 아키텍처입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for design-time files in the SDK, in the order that must be used for the search.</source>
          <target state="translated">검색에 사용 해야 하는 순서로 SDK의 디자인 타임 파일을 검색 하는 데 사용할 폴더의 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the redist files for the SDK at the specified SDK root.</source>
          <target state="translated">지정된 된 SDK 루트에서 SDK에 대 한 재배포 가능 패키지 파일이 들어 있는 SDK 폴더의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">목록은 참조에 대 한 검색에 사용 되는 순서입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK, must contain a redist folder.</source>
          <target state="translated">SDK에 대 한 루트 폴더 redist 폴더를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for redist files in the SDK, in the order that must be used for the search.</source>
          <target state="translated">검색에 사용 해야 하는 순서로 sdk 재배포 파일을 검색 하는 데 사용할 폴더의 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the redist files for the SDK at the specified SDK root.</source>
          <target state="translated">지정된 된 SDK 루트에서 SDK에 대 한 재배포 가능 패키지 파일이 들어 있는 SDK 폴더의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">목록은 참조에 대 한 검색에 사용 되는 순서입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK, must contain a redist folder.</source>
          <target state="translated">SDK에 대 한 루트 폴더 redist 폴더를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The configuration the SDK is targeting.</source>
          <target state="translated">SDK를 대상으로 하는 구성입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This is “Debug” or “Retail”.</source>
          <target state="translated">"Debug" 또는 "Retail"입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The architecture the SDK is targeting.</source>
          <target state="translated">SDK의 대상 아키텍처입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for redist files in the SDK, in the order that must be used for the search.</source>
          <target state="translated">검색에 사용 해야 하는 순서로 sdk 재배포 파일을 검색 하는 데 사용할 폴더의 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the references for the SDK at the specified SDK root.</source>
          <target state="translated">지정된 된 SDK 루트에서 SDK에 대 한 참조를 포함 하는 SDK 폴더의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">목록은 참조에 대 한 검색에 사용 되는 순서입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK.</source>
          <target state="translated">SDK에 대 한 루트 폴더입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for references in the SDK, in the order that must be used for the search.</source>
          <target state="translated">검색에 사용 해야 하는 순서로 SDK에 대 한 참조를 검색 하는 데 사용할 폴더의 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the references for the SDK at the specified SDK root.</source>
          <target state="translated">지정된 된 SDK 루트에서 SDK에 대 한 참조를 포함 하는 SDK 폴더의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">목록은 참조에 대 한 검색에 사용 되는 순서입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK.</source>
          <target state="translated">SDK에 대 한 루트 폴더입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The configuration the SDK is targeting.</source>
          <target state="translated">SDK를 대상으로 하는 구성입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This is “Debug” or “Retail”.</source>
          <target state="translated">"Debug" 또는 "Retail"입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The architecture the SDK is targeting.</source>
          <target state="translated">SDK의 대상 아키텍처입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for references in the SDK, in the order that must be used for the search.</source>
          <target state="translated">검색에 사용 해야 하는 순서로 SDK에 대 한 참조를 검색 하는 데 사용할 폴더의 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Gets a list of supported target framework monikers.</source>
          <target state="translated">지원 되는 대상 프레임 워크 모니커 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>list of supported target framework monikers</source>
          <target state="translated">지원 되는 대상 프레임 워크 모니커 목록</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Get a list of target platform SDKs on the machine.</source>
          <target state="translated">컴퓨터에서 대상 플랫폼 Sdk의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>List of Target Platform SDKs, Item1: TargetPlatformName Item2: Version of SDK Item3: Path to sdk root</source>
          <target state="translated">대상 플랫폼 Sdk Item1 목록이: TargetPlatformName Item2: 버전의 SDK Item3: sdk 루트 경로</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Get a list of target platform SDKs on the machine.</source>
          <target state="translated">컴퓨터에서 대상 플랫폼 Sdk의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>List of disk locations to search for platform SDKs.</source>
          <target state="translated">플랫폼 Sdk에 대 한 검색 하려면 디스크 위치의 목록입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Registry root location to look for platform SDKs.</source>
          <target state="translated">레지스트리 루트 위치를 플랫폼 Sdk 찾아보십시오입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Returns a list of target platform SDKs.</source>
          <target state="translated">대상 플랫폼 Sdk의 목록을 반환합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Gets the highest version of a target framework moniker based on the identifier.</source>
          <target state="translated">식별자에 따라 대상 프레임 워크 모니커의 가장 높은 버전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Target framework root directory.</source>
          <target state="translated">대상 프레임 워크 루트 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Framework identifier.</source>
          <target state="translated">프레임 워크 식별자입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Returns the highest version of a target framework moniker based on the identifier.</source>
          <target state="translated">식별자에 따라 대상 프레임 워크 모니커의 가장 높은 버전을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>This method will only find full frameworks; no profiles will be returned.</source>
          <target state="translated">이 메서드는 전체 프레임 워크; 찾을 프로필이 없음이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Gets the fully qualified path of the system directory.</source>
          <target state="translated">시스템 디렉터리의 정규화 된 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of the value returned is the string "C:\WinNT\System32".</source>
          <target state="translated">반환 값의 예는 "C:\WinNT\System32" 문자열입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>A string containing a directory path to the system directory.</source>
          <target state="translated">시스템 디렉터리에 디렉터리 경로가 포함 된 문자열입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>