<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36da134bb1d16ea78037367c0709d3ee22f12ce8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Configuration.SettingsProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec33b47e90767ecd1f042985943a51285c64ad78</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45f9be8e3f06fd366d6ff88b5053da662d44505e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Acts as a base class for deriving custom settings providers in the application settings architecture.</source>
          <target state="translated">응용 프로그램 설정 아키텍처에서 사용자 지정 설정 공급자를 파생 하기 위한 기본 클래스 역할을 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A settings provider defines the mechanism for storing configuration data used in the application settings architecture.</source>
          <target state="translated">설정 공급자 응용 프로그램 설정 아키텍처에서 사용 되는 구성 데이터를 저장 하기 위한 메커니즘을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework contains a single default settings provider, &lt;xref:System.Configuration.LocalFileSettingsProvider&gt;, which stores configuration data to the local file system.</source>
          <target state="translated">단일 기본 설정 공급자를 포함 하는.NET Framework &lt;xref:System.Configuration.LocalFileSettingsProvider&gt;, 로컬 파일 시스템에 구성 데이터를 저장 하는.&lt;/xref:System.Configuration.LocalFileSettingsProvider&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can create alternate storage mechanisms by deriving from the abstract SettingsProvider class.</source>
          <target state="translated">그러나 추상 SettingsProvider 클래스에서에서 파생 하 여 대체 저장소 메커니즘을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provider that a wrapper class uses is determined by decorating the wrapper class with the &lt;xref:System.Configuration.SettingsProviderAttribute&gt;.</source>
          <target state="translated">래퍼 클래스를 사용 하는 공급자 &lt;xref:System.Configuration.SettingsProviderAttribute&gt;.&lt;/xref:System.Configuration.SettingsProviderAttribute&gt; 래퍼 클래스에 의해 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this attribute is not provided, the default, &lt;xref:System.Configuration.LocalFileSettingsProvider&gt;, is used.</source>
          <target state="translated">이 특성을 제공 하지 않으면 기본값인 경우 &lt;xref:System.Configuration.LocalFileSettingsProvider&gt;, 사용 됩니다.&lt;/xref:System.Configuration.LocalFileSettingsProvider&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a custom settings provider, at minimum, you must provide implementations for the three methods of this class: &lt;xref:System.Configuration.SettingsProvider.GetPropertyValues%2A&gt;, &lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt; and &lt;xref:System.Configuration.SettingsProvider.ApplicationName%2A&gt;.</source>
          <target state="translated">최소한 사용자 지정 설정 공급자를 만들 때이 클래스의 세 가지 방법에 대 한 구현을 제공 해야: &lt;xref:System.Configuration.SettingsProvider.GetPropertyValues%2A&gt; &lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt; &lt;xref:System.Configuration.SettingsProvider.ApplicationName%2A&gt;.&lt;/xref:System.Configuration.SettingsProvider.ApplicationName%2A&gt; 하 고&lt;/xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt; ,&lt;/xref:System.Configuration.SettingsProvider.GetPropertyValues%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For client applications, you can add more standardized functionality to a custom provider by also implementing the &lt;xref:System.Configuration.IApplicationSettingsProvider&gt; interface.</source>
          <target state="translated">클라이언트 응용 프로그램에 추가할 수 있습니다 더 표준화 된 기능 사용자 지정 공급자를 구현 하 여는 &lt;xref:System.Configuration.IApplicationSettingsProvider&gt;인터페이스.&lt;/xref:System.Configuration.IApplicationSettingsProvider&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface mirrors methods found in the &lt;xref:System.Configuration.ApplicationSettingsBase&gt; class, which mainly enables versioning support.</source>
          <target state="translated">이 인터페이스 메서드를에 반영 된 &lt;xref:System.Configuration.ApplicationSettingsBase&gt;클래스를 주로 지원 버전 관리를 통해.&lt;/xref:System.Configuration.ApplicationSettingsBase&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you should design settings providers to be single-instanced to avoid storage resource contention.</source>
          <target state="translated">일반적으로 단일 인스턴스가 저장소 리소스 경합 방지 하려면 되도록 설정 공급자를 디자인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Providers should also be thread-safe because they can be called simultaneously from multiple wrapper instances in a single application domain or from multiple applications in different domains.</source>
          <target state="translated">공급자는 단일 응용 프로그램 도메인의 여러 래퍼 인스턴스에 또는 서로 다른 도메인에 여러 응용 프로그램에서 동시에 호출할 수 있습니다 때문에 스레드로부터 안전 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>At minimum, a settings provider must recognize three attributes—&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;, &lt;xref:System.Configuration.UserScopedSettingAttribute&gt;, and &lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;.</source>
          <target state="translated">설정 공급자에 최소한 특성을 인식 해야-&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;, &lt;xref:System.Configuration.UserScopedSettingAttribute&gt;, 및 &lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;.&lt;/xref:System.Configuration.DefaultSettingValueAttribute&gt; &lt;/xref:System.Configuration.UserScopedSettingAttribute&gt; &lt;/xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a full listing of attributes that can be applied to application settings, see <bpt id="p1">[</bpt>Application Settings Attributes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">응용 프로그램 설정에 적용할 수 있는 특성의 전체 목록을 보려면 <bpt id="p1">[</bpt>응용 프로그램 설정 특성<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom setting provider should resolve attributes applied to settings properties in the following manner:      1.</source>
          <target state="translated">사용자 지정 설정 공급자는 다음과 같이 설정 속성에 적용 된 특성을 확인 합니다: 1입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provider can fulfill the request implied by the attribute, obviously it should do so.</source>
          <target state="translated">공급자는 특성 사용 권한에 포함 된 요청을 수행할 수, 하는 경우 분명을 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provider cannot fulfill the request, it should ignore it silently.</source>
          <target state="translated">공급자는 요청을 수행할 수 없습니다, 자동으로 무시 해야 것입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two or more properties conflict; for example, a property being decorated with both &lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt; and &lt;xref:System.Configuration.UserScopedSettingAttribute&gt;; the provider should throw a &lt;xref:System.Configuration.ConfigurationException&gt;.</source>
          <target state="translated">둘 이상의 속성 충돌; 하는 경우 예를 들어 두 &lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt; &lt;xref:System.Configuration.UserScopedSettingAttribute&gt;공급자에 &lt;xref:System.Configuration.ConfigurationException&gt;.&lt;/xref:System.Configuration.ConfigurationException&gt; throw 해야&lt;/xref:System.Configuration.UserScopedSettingAttribute&gt; ;&lt;/xref:System.Configuration.ApplicationScopedSettingAttribute&gt; 로 데코레이팅 되 고 속성</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes an instance of the <bpt id="p1">&lt;xref href="System.Configuration.SettingsProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Configuration.SettingsProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is this default protected constructor for this abstract class.</source>
          <target state="translated">이 추상 클래스에 대 한이 기본 보호 된 생성자입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived custom settings providers are not required to provide an explicit constructor because the &lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt; method typically performs all initialization.</source>
          <target state="translated">파생 된 사용자 지정 설정 공급자 때문에 명시적 생성자를 제공 하지 않아도 됩니다는 &lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;메서드는 일반적으로 모든 초기화 수행 합니다.&lt;/xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Client code typically does not directly instantiate a settings provider; instead, you use the following procedure to find a settings provider for a particular settings property:      1.</source>
          <target state="translated">클라이언트 코드 일반적으로 직접 인스턴스화하지 않습니다 설정 공급자입니다. 대신, 다음 절차는 특정 설정 속성에 대 한 설정 공급자를 찾을 수 사용: 1입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.ComponentModel.Component.GetService%2A&gt; method on the current &lt;xref:System.ComponentModel.Component&gt; or &lt;xref:System.ComponentModel.ISite&gt; to return a reference to the current &lt;xref:System.Configuration.ISettingsProviderService&gt;.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component.GetService%2A&gt;현재 &lt;xref:System.ComponentModel.Component&gt;또는 &lt;xref:System.ComponentModel.ISite&gt;현재 &lt;xref:System.Configuration.ISettingsProviderService&gt;.&lt;/xref:System.Configuration.ISettingsProviderService&gt; 에 대 한 참조를 반환 하&lt;/xref:System.ComponentModel.ISite&gt; &lt;/xref:System.ComponentModel.Component&gt; 는 메서드&lt;/xref:System.ComponentModel.Component.GetService%2A&gt; 호출</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A&gt; method of the &lt;xref:System.Configuration.ISettingsProviderService&gt; retrieved in the first step to return the settings provider.</source>
          <target state="translated">호출 된 &lt;xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A&gt;의 메서드는 &lt;xref:System.Configuration.ISettingsProviderService&gt;설정 공급자를 반환할 첫 번째 단계에서 검색 합니다.&lt;/xref:System.Configuration.ISettingsProviderService&gt; &lt;/xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the currently running application.</source>
          <target state="translated">현재 실행 중인 응용 프로그램의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ApplicationName and &lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt; properties help to disambiguate similarly named setting properties in different applications.</source>
          <target state="translated">응용 프로그램 이름 및 &lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;속성 마찬가지로 서로 다른 응용 프로그램에서 속성을 명명 된 설정 명확히 구분 하는 데 도움이 됩니다.&lt;/xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the application's shortened name, which does not contain a full path or extension, for example, <ph id="ph1">`SimpleAppSettings`</ph>.</source>
          <target state="translated">A &lt;xref:System.String&gt;포함 하지 않는 전체 경로 또는 확장, 예를 들어, 응용 프로그램의 약식된 이름이 포함 된 <ph id="ph1">`SimpleAppSettings`</ph>.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns the collection of settings property values for the specified application instance and settings property group.</source>
          <target state="translated">지정 된 응용 프로그램 인스턴스 및 설정 속성 그룹에 대 한 속성 값 설정의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetPropertyValues method must be implemented to handle special settings, those marked with &lt;xref:System.Configuration.SpecialSettingAttribute&gt;, as well as reconcile application and user settings.</source>
          <target state="translated">특수 설정을 처리 하기 GetPropertyValues 메서드를 구현 되어야 합니다, 표시 된 &lt;xref:System.Configuration.SpecialSettingAttribute&gt;뿐만 아니라 응용 프로그램 및 사용자 설정 조정 합니다.&lt;/xref:System.Configuration.SpecialSettingAttribute&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Configuration.SettingsContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> describing the current application use.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Configuration.SettingsContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 응용 프로그램 사용을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Configuration.SettingsPropertyCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the settings property group whose values are to be retrieved.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Configuration.SettingsPropertyCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 검색할 수 있는 값은 설정 속성 그룹을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Configuration.SettingsPropertyValueCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the values for the specified settings property group.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Configuration.SettingsPropertyValueCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 설정 속성 그룹에 대 한 값이 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Sets the values of the specified group of property settings.</source>
          <target state="translated">속성 설정의 지정된 된 그룹의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Configuration.ApplicationSettingsBase&gt; contains the &lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt; method, which is called to persist the values of all of its settings properties.</source>
          <target state="translated">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;포함 된 &lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;메서드 설정 속성의 모든 값을 유지 하기 위해 호출 됩니다.&lt;/xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;&lt;/xref:System.Configuration.ApplicationSettingsBase&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enumerates through all the settings providers associated with its settings properties, and calls the SetPropertyValues method for each &lt;xref:System.Configuration.SettingsProvider&gt; to perform the actual serialization operation.</source>
          <target state="translated">이 메서드는 모든 설정 공급자 설정 속성, 연관 및 SetPropertyValues 메서드 각각에 대 한 호출을 통해 열거 &lt;xref:System.Configuration.SettingsProvider&gt;실제 serialization 작업을 수행할 수 있습니다.&lt;/xref:System.Configuration.SettingsProvider&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetPropertyValues method should be implemented with security in mind:      -   Only fully trusted code should be allowed to update application settings.</source>
          <target state="translated">보안을 염두 SetPropertyValues 메서드를 구현 해야 합니다: 코드를 응용 프로그램 설정을 업데이트할 수 있어야 완전히 신뢰할 수 있는-합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Partially trusted code should be allowed to update only user application settings.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드가 사용자 응용 프로그램 설정에만 업데이트 되도록 허용 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Untrusted code is not typically allowed to update application settings.</source>
          <target state="translated">신뢰할 수 없는 코드는 일반적으로 응용 프로그램 설정을 업데이트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Usage quotas should be considered to guard against resource attacks by partially trusted applications.</source>
          <target state="translated">-사용 할당량을 부분적으로 신뢰할 수 있는 응용 프로그램에서 리소스 공격 으로부터 보호 하기 위해 고려해 야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Configuration.SettingsContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> describing the current application usage.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Configuration.SettingsContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 응용 프로그램 사용을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Configuration.SettingsPropertyValueCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the group of property settings to set.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Configuration.SettingsPropertyValueCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 설정할 속성 설정의 그룹을 표시 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>