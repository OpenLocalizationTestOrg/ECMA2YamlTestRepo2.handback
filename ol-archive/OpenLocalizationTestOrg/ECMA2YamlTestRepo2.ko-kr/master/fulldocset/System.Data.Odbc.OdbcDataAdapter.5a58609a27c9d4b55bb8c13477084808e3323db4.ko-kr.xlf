<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b47d6e8940f2b48f7b0868df1318882ac3b97dff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Odbc.OdbcDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cee45be747e7f638629ff2816c7fb65079ab084</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b92e79878539c8aeaa0db1366c599b32c55f5692</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of data commands and a connection to a data source that are used to fill the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and update the data source.</source>
          <target state="translated">채우는 데 사용 되는 데이터 원본에 대 한 연결 및 데이터 명령 집합을 나타냅니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OdbcDataAdapter serves as a bridge between a <ph id="ph1">`DataSet`</ph> and data source for retrieving and saving data.</source>
          <target state="translated">OdbcDataAdapter 사이의 브리지 역할을 <ph id="ph1">`DataSet`</ph> 와 데이터 소스를 검색 하 고 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OdbcDataAdapter provides this bridge by using &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; to load data from the data source into the &lt;xref:System.Data.DataSet&gt;, and using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; to send changes made in the &lt;xref:System.Data.DataSet&gt; back to the data source.</source>
          <target state="translated">OdbcDataAdapter를 사용 하 여이 연결을 제공 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;에 데이터 원본에서 데이터를 로드 하는 &lt;xref:System.Data.DataSet&gt;, 및를 사용 하 여 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;에서 변경 내용을 보낼는 &lt;xref:System.Data.DataSet&gt;데이터 소스에 다시.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the OdbcDataAdapter fills a &lt;xref:System.Data.DataSet&gt;, it creates the required tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">OdbcDataAdapter 채우는 경우는 &lt;xref:System.Data.DataSet&gt;, 존재 하지 않을 경우 필요한 테이블 및 반환된 된 데이터에 대 한 열을 만듭니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, primary key information is not included in the implicitly created schema unless the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to &lt;xref:System.Data.MissingSchemaAction&gt;.</source>
          <target state="translated">그러나 기본 키 정보에에서 없는 암시적으로 만든된 스키마 하지 않는 한 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;xref:System.Data.MissingSchemaAction&gt;.&lt;/xref:System.Data.MissingSchemaAction&gt; 속성&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also have the OdbcDataAdapter create the schema of the &lt;xref:System.Data.DataSet&gt;, including primary key information, before filling it with data using &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet&gt;포함 하 여 기본 키 정보, &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; 를 사용 하 여 데이터를 채우기 전에&lt;/xref:System.Data.DataSet&gt; 스키마를 만들 OdbcDataAdapter 할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기존 제약 조건 데이터 집합에 추가<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you call the <ph id="ph2">`Fill`</ph> method on a data source that does not have a primary key column, the OdbcDataAdapter tries to promote the unique constraint column to the primary key.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 호출 하는 경우는 <ph id="ph2">`Fill`</ph> 메서드는 기본 키 열이 없는 데이터 원본에는 OdbcDataAdapter 승격 하려고 unique 제약 조건 열에서 기본 키입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the process, the OdbcDataAdapter marks the unique constraint as not nullable.</source>
          <target state="translated">프로세스는 OdbcDataAdapter null 허용 안 함으로 unique 제약 조건을 표시합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior works unless there is a null value in the unique constraint column.</source>
          <target state="translated">이 동작은 unique 제약 조건 열에서 null 값이 있으면 작동 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a null value, the <ph id="ph1">`Fill`</ph> method fails with a constraint violation.</source>
          <target state="translated">Null 값이 있는 경우는 <ph id="ph1">`Fill`</ph> 메서드는 제약 조건 위반으로 인해 실패 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this situation, do not allow null values in the unique constraint column.</source>
          <target state="translated">이러한 상황을 방지 하려면 unique 제약 조건 열에서 null 값을 허용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Due to the limitations of native ODBC drivers, only one &lt;xref:System.Data.DataTable&gt; is ever returned when you call &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 하나만 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; 를 호출 하는 경우 반환 되&lt;/xref:System.Data.DataTable&gt; 는 네이티브 ODBC 드라이버의 제한으로 인해</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is true even when executing SQL batch statements from which multiple &lt;xref:System.Data.DataTable&gt; objects would be expected.</source>
          <target state="translated">이 어떤 다중에서 SQL 일괄 처리 문을 실행 하는 경우에 &lt;xref:System.Data.DataTable&gt;개체가 있을 수 있습니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OdbcDataAdapter also includes the &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;, &lt;xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt;, &lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt;, and <ph id="ph1">`TableMappings`</ph> properties to facilitate loading and updating of data.</source>
          <target state="translated">OdbcDataAdapter도 포함 되어는 &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;, &lt;xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt;, &lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt;, 및 <ph id="ph1">`TableMappings`</ph> 속성을 로드 하 고 데이터의 업데이트를 용이 하 게.&lt;/xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;, the following write-only and read-only properties are set to their default values, as shown in the table.</source>
          <target state="translated">인스턴스를 만들 때 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;, 테이블에 표시 된 대로 다음 쓰기 전용 및 읽기 전용 속성이 해당 기본값으로 설정 됩니다.&lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Default value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 기본 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified SQL SELECT statement.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 SQL SELECT 문 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt; constructor sets the &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; property to the value specified in the <ph id="ph1">`selectCommand`</ph> parameter.</source>
          <target state="translated">이 구현에서 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;생성자는 &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;속성에 지정 된 값을는 <ph id="ph1">`selectCommand`</ph> 매개 변수.&lt;/xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;, the following write-only and read-only properties are set to their default values, as shown in the table.</source>
          <target state="translated">인스턴스를 만들 때 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;, 테이블에 표시 된 대로 다음 쓰기 전용 및 읽기 전용 속성이 해당 기본값으로 설정 됩니다.&lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is an SQL SELECT statement or stored procedure, and is set as the &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*&gt; property of the <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 SQL SELECT 문 또는 저장된 프로시저를이 고로 설정 하는 &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*&gt;의 속성은 <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an SQL SELECT statement and an <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> SQL SELECT 문 사용 하 여 클래스 및 <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt; can be useful in an application that must call the <ph id="ph1">`Fill`</ph> method for two or more &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt; objects.</source>
          <target state="translated">이 구현에서 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;호출 해야 하는 응용 프로그램에 유용할 수는 <ph id="ph1">`Fill`</ph> 둘 이상에 대 한 메서드 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;개체.&lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A string that is a SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">SQL SELECT 문 또는 저장된 프로시저에서 사용 되는 문자열은 &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*&gt;의 속성은 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the connection.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연결을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an SQL SELECT statement and a connection string.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> SQL SELECT 문 및 연결 문자열을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt; constructor uses the <ph id="ph1">`selectConnectionString`</ph> parameter to set the &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">이 오버 로드는 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;생성자 사용 하 여는 <ph id="ph1">`selectConnectionString`</ph> 매개 변수를 설정 된 &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;속성.&lt;/xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it does not open the connection.</source>
          <target state="translated">그러나 연결이 열리지 않습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You still must explicitly open the connection.</source>
          <target state="translated">여전히 명시적으로 열어야 연결 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A string that is a SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">SQL SELECT 문 또는 저장된 프로시저에서 사용 되는 문자열은 &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*&gt;의 속성은 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The connection string.</source>
          <target state="translated">연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to delete records in the data source.</source>
          <target state="translated">SQL 문 또는 데이터 원본에서 레코드를 삭제 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the DeleteCommand property is assigned to a previously created &lt;xref:System.Data.Odbc.OdbcCommand&gt;, the &lt;xref:System.Data.Odbc.OdbcCommand&gt; is not cloned.</source>
          <target state="translated">DeleteCommand 속성 할당 된 경우에 이전에 만든 &lt;xref:System.Data.Odbc.OdbcCommand&gt;, &lt;xref:System.Data.Odbc.OdbcCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.Odbc.OdbcCommand&gt; &lt;/xref:System.Data.Odbc.OdbcCommand&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the DeleteCommand maintains a reference to the previously created &lt;xref:System.Data.Odbc.OdbcCommand&gt;.</source>
          <target state="translated">DeleteCommand에 이전에 만든된 &lt;xref:System.Data.Odbc.OdbcCommand&gt;.&lt;/xref:System.Data.Odbc.OdbcCommand&gt; 에 대 한 참조를 유지 하는 대신,</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>During an update operation, if DeleteCommand is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, you can use the &lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt; class to automatically generate the DeleteCommand, and additional commands needed to reconcile the &lt;xref:System.Data.DataSet&gt; to the data source.</source>
          <target state="translated">DeleteCommand를 설정 하지 않으면, 기본 키 정보에 존재 하는 경우에 업데이트 작업 중의 &lt;xref:System.Data.DataSet&gt;를 사용할 수 있습니다는 &lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;클래스는 DeleteCommand를 자동으로 생성 하 고 조정 하는 데 필요한 추가 명령을 &lt;xref:System.Data.DataSet&gt;데이터 원본에.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Odbc.OdbcCommandBuilder&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;.</source>
          <target state="translated">이 작업을 수행 하려면 &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;.&lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt; 속성&lt;/xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; 설정</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generation logic also requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">생성 논리는 또한 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보 필요</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update operation to delete records in the data source that correspond to deleted rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 삭제 된 행에 해당 하는 데이터 원본의 레코드를 삭제 하는 업데이트 작업 중에 사용 된 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</source>
          <target state="translated">SQL 문 또는 데이터 원본에 새 레코드를 삽입 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the InsertCommand property is assigned to a previously created &lt;xref:System.Data.Odbc.OdbcCommand&gt; object, the &lt;xref:System.Data.Odbc.OdbcCommand&gt; is not cloned.</source>
          <target state="translated">InsertCommand 속성 할당 된 경우에 이전에 만든 &lt;xref:System.Data.Odbc.OdbcCommand&gt;개체는 &lt;xref:System.Data.Odbc.OdbcCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.Odbc.OdbcCommand&gt; &lt;/xref:System.Data.Odbc.OdbcCommand&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, InsertCommand maintains a reference to the previously created &lt;xref:System.Data.Odbc.OdbcCommand&gt;.</source>
          <target state="translated">InsertCommand에 이전에 만든된 &lt;xref:System.Data.Odbc.OdbcCommand&gt;.&lt;/xref:System.Data.Odbc.OdbcCommand&gt; 에 대 한 참조를 유지 하는 대신,</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>During an update operation, if InsertCommand is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, you can use the &lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt; class to automatically generate InsertCommand, and additional commands needed to reconcile the &lt;xref:System.Data.DataSet&gt; to the data source.</source>
          <target state="translated">InsertCommand 설정 하지 않으면, 기본 키 정보에 존재 하는 경우에 업데이트 작업 중의 &lt;xref:System.Data.DataSet&gt;를 사용할 수 있습니다는 &lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;InsertCommand를 자동으로 생성 하는 클래스 및 조정 하는 데 필요한 추가 명령을 &lt;xref:System.Data.DataSet&gt;데이터 원본에.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Odbc.OdbcCommandBuilder&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;.</source>
          <target state="translated">이 작업을 수행 하려면 &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;.&lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt; 속성&lt;/xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; 설정</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generation logic also requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">생성 논리는 또한 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보 필요</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be added to the &lt;xref:System.Data.DataSet&gt; depending upon how you set the &lt;xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.Odbc.OdbcCommand&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 반환 하는이 명령 실행 하는 경우 이러한 행에 추가할 수 있습니다는 &lt;xref:System.Data.DataSet&gt;설정 하는 방법에 따라는 &lt;xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt;의 속성은 &lt;xref:System.Data.Odbc.OdbcCommand&gt;개체입니다.&lt;/xref:System.Data.Odbc.OdbcCommand&gt; &lt;/xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update operation to insert records in the data source that correspond to new rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새 행에 해당 하는 데이터 원본에서 레코드를 삽입 업데이트 작업 중에 사용 된 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Occurs during an update operation after a command is executed against the data source.</source>
          <target state="translated">데이터 원본에 대해 명령이 실행 된 후 업데이트 작업 중 발생 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">실행 순서는 다음과 같습니다: 1.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Occurs during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; before a command is executed against the data source.</source>
          <target state="translated">중에 발생 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 원본에 대해 명령을 실행 하기 전에.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">실행 순서는 다음과 같습니다: 1.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to select records in the data source.</source>
          <target state="translated">SQL 문 또는 데이터 원본에서 레코드를 선택 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>When SelectCommand is assigned to a previously created &lt;xref:System.Data.Odbc.OdbcCommand&gt;, the &lt;xref:System.Data.Odbc.OdbcCommand&gt; is not cloned.</source>
          <target state="translated">SelectCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.Odbc.OdbcCommand&gt;, &lt;xref:System.Data.Odbc.OdbcCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.Odbc.OdbcCommand&gt; &lt;/xref:System.Data.Odbc.OdbcCommand&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the SelectCommand maintains a reference to the previously created &lt;xref:System.Data.Odbc.OdbcCommand&gt; object.</source>
          <target state="translated">SelectCommand 이전에 만든에 대 한 참조를 유지 하는 대신, &lt;xref:System.Data.Odbc.OdbcCommand&gt;개체입니다.&lt;/xref:System.Data.Odbc.OdbcCommand&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If SelectCommand returns no rows, no tables are added to the &lt;xref:System.Data.DataSet&gt;, and no exception is raised.</source>
          <target state="translated">에 테이블이 추가 된 SelectCommand 행을 반환 하는 경우는 &lt;xref:System.Data.DataSet&gt;, 예외가 발생 하지 않습니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during a fill operation to select records from data source for placement in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 배치 하기 위해 데이터 원본에서 레코드를 선택 하는 데 채우기 작업 중 사용 되는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트 하는 동안 데이터 집합에서 삭제 된 행에 대 한 데이터 원본에서 레코드를 삭제 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.InsertCommand*&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during an update to insert records from a data source for placement in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데 사용 되는 업데이트 하는 동안 데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during an update to select records from a data source for placement in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트 중에 사용 하는 데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update to update records in the data source for modified rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 집합의 수정 된 행에 대 한 데이터 원본에는 업데이트에 업데이트 레코드 중에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이 멤버에 대 한 참조 <ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.ICloneable&gt;인터페이스.&lt;/xref:System.ICloneable&gt; &lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A new &lt;xref:System.Object&gt; that is a copy of this instance.</source>
          <target state="translated">새 &lt;xref:System.Object&gt;이 인스턴스의 복사본입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to update records in the data source.</source>
          <target state="translated">SQL 문 또는 데이터 원본에서 레코드를 업데이트 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>When UpdateCommand is assigned to a previously created &lt;xref:System.Data.Odbc.OdbcCommand&gt;, the &lt;xref:System.Data.Odbc.OdbcCommand&gt; is not cloned.</source>
          <target state="translated">UpdateCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.Odbc.OdbcCommand&gt;, &lt;xref:System.Data.Odbc.OdbcCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.Odbc.OdbcCommand&gt; &lt;/xref:System.Data.Odbc.OdbcCommand&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the UpdateCommand maintains a reference to the previously created &lt;xref:System.Data.Odbc.OdbcCommand&gt; object.</source>
          <target state="translated">UpdateCommand 이전에 만든에 대 한 참조를 유지 하는 대신, &lt;xref:System.Data.Odbc.OdbcCommand&gt;개체입니다.&lt;/xref:System.Data.Odbc.OdbcCommand&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>During an update operation, if UpdateCommand is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, you can use the &lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt; class to automatically generate UpdateCommand, and additional commands needed to reconcile the &lt;xref:System.Data.DataSet&gt; to the data source.</source>
          <target state="translated">UpdateCommand 설정 하지 않으면, 기본 키 정보에 존재 하는 경우에 업데이트 작업 중의 &lt;xref:System.Data.DataSet&gt;를 사용할 수 있습니다는 &lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;UpdateCommand를 자동으로 생성 하는 클래스 및 조정 하는 데 필요한 추가 명령을 &lt;xref:System.Data.DataSet&gt;데이터 원본에.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Odbc.OdbcCommandBuilder&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;.</source>
          <target state="translated">이 작업을 수행 하려면 &lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;.&lt;/xref:System.Data.Odbc.OdbcDataAdapter&gt; 속성&lt;/xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt; 설정</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generation logic also requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">생성 논리는 또한 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보 필요</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be merged with the &lt;xref:System.Data.DataSet&gt; depending upon how you set the &lt;xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.Odbc.OdbcCommand&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 반환 하는이 명령 실행 하는 경우 이러한 행으로 병합 될 수 있습니다는 &lt;xref:System.Data.DataSet&gt;설정 하는 방법에 따라는 &lt;xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt;의 속성은 &lt;xref:System.Data.Odbc.OdbcCommand&gt;개체입니다.&lt;/xref:System.Data.Odbc.OdbcCommand&gt; &lt;/xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update operation to update records in the data source that correspond to modified rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트 작업 중에 수정 된 행에 해당 하는 데이터 원본에서 레코드를 업데이트 하는 데 사용 된 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>