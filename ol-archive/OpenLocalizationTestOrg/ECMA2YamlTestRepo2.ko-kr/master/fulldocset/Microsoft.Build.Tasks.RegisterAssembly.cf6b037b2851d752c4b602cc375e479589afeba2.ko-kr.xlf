<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c364965c7f0c140521751cd17a0209002275f31b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Build.Tasks.RegisterAssembly.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51cbdc5420fa81b874c0f150ebaf7f31a9a0e477</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b568a63b660adfecb8071ca1291904fdd3f7ecf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements the <ph id="ph1">`RegisterAssembly`</ph> task.</source>
          <target state="translated">구현 된 <ph id="ph1">`RegisterAssembly`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`RegisterAssembly`</ph> element in your project file to create and execute this task.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`RegisterAssembly`</ph> 생성 하 고이 작업을 실행 하기 위해 프로젝트 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For usage and parameter information, see <bpt id="p1">[</bpt>RegisterAssembly Task<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">사용 및 매개 변수 정보를 참조 하십시오. <bpt id="p1">[</bpt>RegisterAssembly 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.RegisterAssembly"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.RegisterAssembly"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets the assemblies to be registered with COM.</source>
          <target state="translated">Com에 등록 하려면 어셈블리를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The assemblies to be registered with COM.</source>
          <target state="translated">어셈블리를 COM에 등록</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets information about the state between the <ph id="ph1">`RegisterAssembly`</ph> task and the <bpt id="p1">[</bpt>UnregisterAssembly<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> task.</source>
          <target state="translated">사이의 상태에 대 한 정보를 가져오거나는 <ph id="ph1">`RegisterAssembly`</ph> 작업 및 <bpt id="p1">[</bpt>UnregisterAssembly<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This prevents the <ph id="ph1">`UnregisterAssembly`</ph> task from attempting to unregister an assembly that failed to register in the <ph id="ph2">`RegisterAssembly`</ph> task.</source>
          <target state="translated">이렇게 하면는 <ph id="ph1">`UnregisterAssembly`</ph> 등록에 실패 하는 어셈블리의 등록을 취소 하려고 하는 작업은 <ph id="ph2">`RegisterAssembly`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The state information necessary for the <ph id="ph1">`UnregisterAssembly`</ph> task to do proper clean-up.</source>
          <target state="translated">에 대 한 필요한 상태 정보는 <ph id="ph1">`UnregisterAssembly`</ph> 적절 한 정리 작업을 수행 하는 작업입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether the task creates a codebase entry in the registry, which specifies the file path for an assembly that is not installed in the global assembly cache.</source>
          <target state="translated">작업이 레지스트리에 전역 어셈블리 캐시에 설치 되어 있지 않은 어셈블리에 대 한 파일 경로 지정 하는 코드 베이스 항목을 만들지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not specify this option if you will subsequently install the assembly that you are registering into the global assembly cache.</source>
          <target state="translated">등록 중인 어셈블리를 전역 어셈블리 캐시에 설치 이후에이 옵션을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the task creates a codebase entry in the registry; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>작업이; 레지스트리에 코드 베이스 항목을 만들면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Executes the <ph id="ph1">`RegisterAssembly`</ph> task.</source>
          <target state="translated">실행 된 <ph id="ph1">`RegisterAssembly`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if task execution succeeded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>작업 실행 성공 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Callback method for reporting the type library export events.</source>
          <target state="translated">형식 라이브러리를 보고에 대 한 콜백 메서드는 이벤트를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Describes the callbacks that the type library exporter makes when exporting a type library.</source>
          <target state="translated">형식 라이브러리를 내보낼 때 형식 라이브러리 내보내기가 만드는 콜백을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The error code of the export event.</source>
          <target state="translated">내보내기 이벤트의 오류 코드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The message of the export event.</source>
          <target state="translated">내보내기 이벤트의 메시지입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Callback method for finding the type library for the specified assembly.</source>
          <target state="translated">지정된 된 어셈블리에 대 한 형식 라이브러리를 찾기 위한 콜백 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logs an error indicating that the specified assembly is not registered for COM interop in all cases.</source>
          <target state="translated">지정된 된 어셈블리 모든 경우에에서는 COM interop에 등록 되지 않은 나타내는 오류를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The assembly to find type libraries for.</source>
          <target state="translated">에 대 한 형식 라이브러리를 찾을 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in all cases.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>모든 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets the type library to generate from the specified assembly.</source>
          <target state="translated">지정된 된 어셈블리에서 생성할 형식 라이브러리를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generated type library contains definitions of the accessible types defined within the assembly.</source>
          <target state="translated">생성된 된 형식 라이브러리의 어셈블리 내에 정의 된 액세스할 수 있는 형식 정의 포함 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type library is only generated if one of the following is true:      -   A type library of that name does not exist at that location.</source>
          <target state="translated">형식 라이브러리는 다음 중 하나에 경우에 생성 됩니다.-해당 이름의 형식 라이브러리 해당 위치에 존재 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A type library exists but it is older than the assembly being passed in.</source>
          <target state="translated">-A 형식 라이브러리가 있지만에 전달 되는 어셈블리 보다 오래 된 것입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type library is newer than the assembly being passed, a new one will not be created, but the assembly will still be registered.</source>
          <target state="translated">형식 라이브러리에서 전달 되는 어셈블리 보다 최신인 경우 새 만들어지지 하지만 어셈블리는 계속 등록 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is specified, it must have the same number of items as the &lt;xref:Microsoft.Build.Tasks.RegisterAssembly.Assemblies%2A&gt; property or the task will fail.</source>
          <target state="translated">이 속성을 지정 하는 경우에 따라 항목의 수가 있어야는 &lt;xref:Microsoft.Build.Tasks.RegisterAssembly.Assemblies%2A&gt;속성 또는 작업이 실패 합니다.&lt;/xref:Microsoft.Build.Tasks.RegisterAssembly.Assemblies%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no inputs are specified, the task will default to the name of the assembly and change the extension of the item to .tlb.</source>
          <target state="translated">없는 입력을 지정 하는 경우 작업 기본적으로 어셈블리의 이름으로를 업데이트 하 고 항목의 확장명.tlb을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The type library to generate from the specified assembly.</source>
          <target state="translated">지정된 된 어셈블리에서 생성할 형식 라이브러리.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>