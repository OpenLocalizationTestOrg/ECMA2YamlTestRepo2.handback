<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d116adf6ac54b0769c077cefe69e74068024c0c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.XmlResolver.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea160c7a4c60ad53260261a5e4463fe6e80e9af7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3b9f46892b511c7eea4baaa472c07ef996e3c03</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Resolves external XML resources named by a Uniform Resource Identifier (URI).</source>
          <target state="translated">여는 식별자 URI (Uniform Resource)을 명명 된 외부 XML 리소스를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XmlResolver type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas.</source>
          <target state="translated">XmlResolver 형식이 엔터티, 문서 유형 정의 (Dtd) 또는 스키마와 같은 외부 XML 리소스를 확인에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</source>
          <target state="translated">사용 하는 것도 프로세스 포함 및 스타일 시트 XSL (Extensible Language) 스타일 시트 또는 XML 스키마 정의 언어 (XSD) 스키마에 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlResolver handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type.</source>
          <target state="translated">XmlResolver 보안 자격 증명 처리, 데이터 원본에 연결을 열어 리소스 스트림 또는 다른 개체 형식의 형태로 반환 등의 리소스에 대 한 연결을 협상의 모든 측면을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object that calls XmlResolver has the task of interpreting the stream.</source>
          <target state="translated">XmlResolver를 호출 하는 개체에 스트림 해석의 작업이 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xml&gt; namespace includes two concrete implementations of the XmlResolver class:      -   &lt;xref:System.Xml.XmlUrlResolver&gt; is the default resolver for all classes in the &lt;xref:System.Xml&gt; namespace.</source>
          <target state="translated">&lt;xref:System.Xml&gt;네임 스페이스는 XmlResolver 클래스의 두 가지 구체적 구현을 포함:- &lt;xref:System.Xml.XmlUrlResolver&gt;모든 클래스에 대 한 기본 해결 프로그램은는 &lt;xref:System.Xml&gt;네임 스페이스.&lt;/xref:System.Xml&gt; &lt;/xref:System.Xml.XmlUrlResolver&gt; &lt;/xref:System.Xml&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It supports the <ph id="ph1">`file://`</ph> and <ph id="ph2">`http://`</ph> protocols and requests from the &lt;xref:System.Net.WebRequest?displayProperty=fullName&gt; class.</source>
          <target state="translated">지원 된 <ph id="ph1">`file://`</ph> 및 <ph id="ph2">`http://`</ph> 프로토콜 및 &lt;xref:System.Net.WebRequest?displayProperty=fullName&gt;클래스&lt;/xref:System.Net.WebRequest?displayProperty=fullName&gt; 와에서 요청</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples of extending the class to improve performance, see the &lt;xref:System.Xml.XmlUrlResolver&gt; reference page.</source>
          <target state="translated">성능 향상을 위해 클래스를 확장의 예 참조는 &lt;xref:System.Xml.XmlUrlResolver&gt;참조 페이지.&lt;/xref:System.Xml.XmlUrlResolver&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Xml.XmlSecureResolver&gt; helps secure another XmlResolver object by wrapping the object object and restricting the resources that it can access.</source>
          <target state="translated">- &lt;xref:System.Xml.XmlSecureResolver&gt;object 개체 배치 및 액세스할 수 있는 리소스를 제한 하 여 다른 XmlResolver 개체를 보호 하는 데 도움이 됩니다.&lt;/xref:System.Xml.XmlSecureResolver&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the &lt;xref:System.Xml.XmlSecureResolver&gt; can prohibit access to specific Internet sites or zones.</source>
          <target state="translated">예를 들어는 &lt;xref:System.Xml.XmlSecureResolver&gt;특정 인터넷 사이트나 영역에 대 한 액세스 하지 못할 수 있습니다.&lt;/xref:System.Xml.XmlSecureResolver&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create and specify your own resolver.</source>
          <target state="translated">만들 수 있으며 해결 프로그램을 직접 지정.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you don't specify a resolver, the reader uses a default &lt;xref:System.Xml.XmlUrlResolver&gt; with no user credentials.</source>
          <target state="translated">판독기는 기본 해결 프로그램을 지정 하지 않으면, &lt;xref:System.Xml.XmlUrlResolver&gt;사용자 자격 증명 없이.&lt;/xref:System.Xml.XmlUrlResolver&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the XmlResolver to use by setting the &lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName&gt; property and passing the &lt;xref:System.Xml.XmlReaderSettings&gt; object to the &lt;xref:System.Xml.XmlReader.Create%2A&gt; method.</source>
          <target state="translated">설정 하 여 사용할 지정 된 &lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName&gt;속성과 전달은 &lt;xref:System.Xml.XmlReaderSettings&gt;개체를 &lt;xref:System.Xml.XmlReader.Create%2A&gt;메서드.&lt;/xref:System.Xml.XmlReader.Create%2A&gt; &lt;/xref:System.Xml.XmlReaderSettings&gt; &lt;/xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resource is stored on a system that requires authentication, you use the &lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt; property to specify the necessary credentials.</source>
          <target state="translated">사용 리소스에 인증을 요구 하는 시스템에 저장 된 경우는 &lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt;속성을 통해 필요한 자격 증명을 지정 합니다.&lt;/xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Supplying authentication credentials    The file that contains the XML data to read may have a restricted access policy.</source>
          <target state="translated">인증 자격 증명을 제공 하 여 XML 데이터 읽기를 포함 하는 파일 제한 된 액세스 정책이 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If authentication is required to access a network resource, use the &lt;xref:System.Xml.XmlResolver.Credentials%2A&gt; property to specify the necessary credentials.</source>
          <target state="translated">사용 하 여 네트워크 리소스에 액세스 하는 데 인증이 필요는 &lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;속성을 통해 필요한 자격 증명을 지정 합니다.&lt;/xref:System.Xml.XmlResolver.Credentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Xml.XmlResolver.Credentials%2A&gt; property is not set, credentials are set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">경우는 &lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;속성이 설정 되지 않은 경우 자격 증명으로 설정 됩니다 <ph id="ph1">`null`</ph>.&lt;/xref:System.Xml.XmlResolver.Credentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, assume that credentials are needed when requesting data from the web for authentication purposes.</source>
          <target state="translated">예를 들어 인증을 위해 웹에서 데이터를 요청할 때 자격 증명이 필요 하다는 것으로 가정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the web virtual directory allows anonymous access, you must set the &lt;xref:System.Xml.XmlResolver.Credentials%2A&gt; property to supply credentials.</source>
          <target state="translated">웹 가상 디렉터리에서 익명 액세스를 허용 하지 않는 한 설정 해야 합니다는 &lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;속성 자격 증명을 제공 합니다.&lt;/xref:System.Xml.XmlResolver.Credentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example creates an &lt;xref:System.Xml.XmlReader&gt; object that uses an &lt;xref:System.Xml.XmlUrlResolver&gt; with default credentials to access the http://localhost/bookstore/inventory.xml site.</source>
          <target state="translated">다음 예제에서는 &lt;xref:System.Xml.XmlReader&gt;사용 하는 개체는 &lt;xref:System.Xml.XmlUrlResolver&gt;http://localhost/bookstore/inventory.xml 사이트에 액세스 하는 기본 자격 증명을 사용 합니다.&lt;/xref:System.Xml.XmlUrlResolver&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XmlReaderSettings.cctor#2<ept id="p2">](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XmlReaderSettings.cctor#2<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XmlReaderSettings.cctor#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb)</ept><ept id="p5">]</ept>       You can supply different credentials for different URIs and add them to a cache.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XmlReaderSettings.cctor#2<ept id="p2">](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XmlReaderSettings.cctor#2<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XmlReaderSettings.cctor#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb)</ept> <ept id="p5">]</ept> 다른 Uri에 대 한 서로 다른 자격 증명을 제공 하 고 캐시에 추가할 수 있습니다.    </target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>These credentials are used to check authentication for the different URIs regardless of the original source of the XML.</source>
          <target state="translated">이러한 자격 증명은 XML의 원본 소스와 다른 Uri에 대 한 인증을 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how to add credentials to a cache.</source>
          <target state="translated">다음 예에서는 자격 증명 캐시에 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>XslCompiledTransform.Load#11<ept id="p2">](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XslCompiledTransform.Load#11<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs)</ept><ept id="p3">]</ept>      ## Security considerations    Consider the following items when working with the XmlResolver class.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>XslCompiledTransform.Load#11<ept id="p2">](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XslCompiledTransform.Load#11<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs)</ept> <ept id="p3">]</ept> # # 보안 고려 사항 XmlResolver 클래스와 함께 작업 하는 경우 다음 항목을 고려 하십시오.  </target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   XmlResolver objects can contain sensitive information such as user credentials.</source>
          <target state="translated">-XmlResolver 개체는 사용자 자격 증명과 같은 중요 한 정보를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should be careful when caching XmlResolver objects and should not pass the XmlResolver object to an untrusted component.</source>
          <target state="translated">XmlResolver 개체 캐싱과 XmlResolver 개체 신뢰할 수 없는 구성 요소에 전달 하지 않아야 하는 경우 주의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If you are designing a class property that uses the XmlResolver class, the property should be defined as a write-only property.</source>
          <target state="translated">-XmlResolver 클래스를 사용 하는 클래스 속성을 디자인 하는 경우 쓰기 전용 속성으로 속성을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property can be used to specify the XmlResolver to use, but it cannot be used to return an XmlResolver object.</source>
          <target state="translated">XmlResolver를 사용 하려면를 지정 하는 속성을 사용할 수 있지만 XmlResolver 개체를 반환 하는 데 사용 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If your application accepts XmlResolver objects from untrusted code, you cannot assume that the URI passed into the &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt; method will be the same as that returned by the &lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt; method.</source>
          <target state="translated">-에 전달 된 URI를 가정할 수 없습니다 응용 프로그램에서 신뢰할 수 없는 코드에서 XmlResolver 개체를 허용 하는 경우는 &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;메서드가 반환한 것과 동일한 됩니다는 &lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;메서드.&lt;/xref:System.Xml.XmlResolver.ResolveUri%2A&gt; &lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes derived from the XmlResolver class can override the &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt; method and return data that is different than what was contained in the original URI.</source>
          <target state="translated">XmlResolver 클래스에서 파생 된 클래스에서 재정의할 수는 &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;메서드 데이터를 반환할 원래 URI에 포함 된 다릅니다.&lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Your application can mitigate memory denial of service threats to the &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt; method by implementing an &lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt; that limits the number of bytes read.</source>
          <target state="translated">-응용 프로그램 메모리에 대 한 서비스 거부를 줄일 수는 &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;메서드를 구현 하 여 프로그램 &lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;읽은 바이트 수를 제한 하는.&lt;/xref:System.Runtime.InteropServices.ComTypes.IStream&gt; &lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt; method.</source>
          <target state="translated">이렇게 하면 악의적인 코드 여기서 바이트는 무한 스트림을 전달 하려고 하는 상황에 대비해는 &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;메서드.&lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">이 생성자는이 형식으로 상태를 초기화 하는 파생된 클래스 생성자에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, sets the credentials used to authenticate web requests.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 웹 요청을 인증 하는 데 사용 되는 자격 증명을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the virtual directory does not require authentication, this property doesn't have to be set.</source>
          <target state="translated">가상 디렉터리는 인증에 필요 하지 않으면이 속성을 설정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the credentials of the user must be supplied.</source>
          <target state="translated">그렇지 않으면 사용자의 자격 증명이 제공 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code sets credentials on the &lt;xref:System.Xml.XmlResolver&gt; object.</source>
          <target state="translated">다음 C# 코드에서 자격 증명을 설정는 &lt;xref:System.Xml.XmlResolver&gt;개체입니다.&lt;/xref:System.Xml.XmlResolver&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```</ph>       You can associate different credentials with different URIs and add them to a cache.</source>
          <target state="translated"><ph id="ph1">```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```</ph>다양 한 Uri에 다른 자격 증명을 연결 하 고 캐시에 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.</source>
          <target state="translated">다음 XML의 원본 소스와 다른 Uri에 대 한 인증을 확인 하려면 자격 증명을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The credentials to be used to authenticate web requests.</source>
          <target state="translated">웹 요청을 인증 하는 데 사용할 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If this property is not set, the value defaults to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; that is, the <bpt id="p2">&lt;xref uid="langword_csharp_XmlResolver" name="XmlResolver" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has no user credentials.</source>
          <target state="translated">기본값은이 속성을 설정 하지 않으면 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 즉는 <bpt id="p2">&lt;xref uid="langword_csharp_XmlResolver" name="XmlResolver" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에 사용자 자격 증명이 없습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, maps a URI to an object that contains the actual resource.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 실제 리소스가 포함 된 개체로 URI를 매핑합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents.</source>
          <target state="translated">이 메서드는 호출자가 URI가 나타내는 실제 리소스를 포함 하는 개체에 지정된 된 URI에 매핑할 때 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of object returned is negotiable; however, the implementation must always support &lt;xref:System.IO.Stream?displayProperty=fullName&gt;.</source>
          <target state="translated">반환 된 개체의 형식이 negotiable; 그러나 구현 &lt;xref:System.IO.Stream?displayProperty=fullName&gt;.&lt;/xref:System.IO.Stream?displayProperty=fullName&gt; 지원 항상 해야</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the asynchronous version of this method, see &lt;xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt;.</source>
          <target state="translated">이 메서드의 비동기 버전 &lt;xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt;.&lt;/xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Your application can mitigate memory denial of service threats to the GetEntity method by implementing an &lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt; that limits the number of bytes read.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 응용 프로그램을 구현 하 여 메모리 GetEntity 메서드에 대 한 서비스 거부를 줄일 수는 &lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;읽은 바이트 수를 제한 하는.&lt;/xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method.</source>
          <target state="translated">이렇게 하면 악의적인 코드 여기서 GetEntity 메서드에 무한 바이트 스트림을 전달 하려고 하는 상황을 방지 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.&lt;/xref:System.Xml.XmlResolver.ResolveUri*&gt; 에서 반환 된 URI</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
          <target state="translated">현재 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
          <target state="translated">반환할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The current version only returns System.IO.Stream objects.</source>
          <target state="translated">현재 버전 System.IO.Stream 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A stream object or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a type other than stream is specified.</source>
          <target state="translated">Stream 개체 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스트림 외의 다른 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is not a <bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> type.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph>않습니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유형입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The specified URI is not an absolute URI.</source>
          <target state="translated">지정된 된 URI는 절대 URI가 아닙니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
          <target state="translated">런타임 오류 (예를 들어 중단 된 서버 연결)입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">실제 리소스가 포함 된 개체로 URI를 비동기적으로 매핑합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the asynchronous version of &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;, 같은 기능을 갖춘.&lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this method, you must set the &lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt; flag to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 &lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;나타내는 플래그입니다. <ph id="ph1">`true`</ph>.&lt;/xref:System.Xml.XmlReaderSettings.Async%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.&lt;/xref:System.Xml.XmlResolver.ResolveUri*&gt; 에서 반환 된 URI</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
          <target state="translated">현재 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
          <target state="translated">반환할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The current version only returns &lt;xref:System.IO.Stream&gt; objects.</source>
          <target state="translated">현재 버전에만 반환 &lt;xref:System.IO.Stream&gt;개체입니다.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A stream object or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a type other than stream is specified.</source>
          <target state="translated">Stream 개체 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스트림 외의 다른 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, resolves the absolute URI from the base and relative URIs.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 기본 및 상대 Uri에서 절대 URI를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.</source>
          <target state="translated">이 URI를 기준으로 하는 엔터티에 대 한 후속 요청에 대 한 기본 URI로 절대 URI는 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">기본 URI는 상대 URI를 확인 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The URI to resolve.</source>
          <target state="translated">확인할 URI입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">절대 또는 상대 URI 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If absolute, this value effectively replaces the <ph id="ph1">`baseUri`</ph> value.</source>
          <target state="translated">경우 절대이 값이 대체는 <ph id="ph1">`baseUri`</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If relative, it combines with the <ph id="ph1">`baseUri`</ph> to make an absolute URI.</source>
          <target state="translated">경우 상대와 결합 하 여는 <ph id="ph1">`baseUri`</ph> 를 절대 URI를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The absolute URI or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the relative URI cannot be resolved.</source>
          <target state="translated">절대 URI 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 상대 URI를 확인할 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;relativeUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Enables the resolver to return types other than <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이외의 형식을 반환 하도록 확인자를 사용 하면 <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The URI.</source>
          <target state="translated">URI입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The type to return.</source>
          <target state="translated">반환할 형식입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p2">&lt;/code&gt;</ept> is supported; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p2">&lt;/code&gt;</ept> 지원 되 고, 그러지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>