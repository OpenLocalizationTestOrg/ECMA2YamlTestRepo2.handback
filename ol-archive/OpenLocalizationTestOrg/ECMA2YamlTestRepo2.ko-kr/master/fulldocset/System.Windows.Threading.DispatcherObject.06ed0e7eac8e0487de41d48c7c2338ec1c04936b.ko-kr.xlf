<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dccb4aa4f25f3fea9a69d3e9e4ca0a7c46d2d816</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Threading.DispatcherObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cc17fbab308215568ca2ac25fd77172f9443feb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec931dc4703c807b6b08a63d6ffda0b7ea3dbcb3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an object that is associated with a <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">연결 된 개체를 나타냅니다는 <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the thread that the &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt; was created on may access the DispatcherObject directly.</source>
          <target state="translated">스레드만 하는 &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;생성에 DispatcherObject에 직접 액세스할 수 있습니다.&lt;/xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access a DispatcherObject from a thread other than the thread the DispatcherObject was created on, call &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; or &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; on the &lt;xref:System.Windows.Threading.Dispatcher&gt; the DispatcherObject is associated with.</source>
          <target state="translated">호출에 DispatcherObject 만들어진 스레드가 아닌 스레드에서 DispatcherObject에 액세스 하려면 &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;또는 &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;에 &lt;xref:System.Windows.Threading.Dispatcher&gt;는 DispatcherObject 연관.&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subclasses of DispatcherObject that need to enforce thread safety can do so by calling &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; on all public methods.</source>
          <target state="translated">스레드로부터의 안전성을 적용 해야 하는 DispatcherObject의 서브 클래스 그렇게 할 수를 호출 하 여 &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;에서 모든 공용 메서드.&lt;/xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This guarantees the calling thread is the thread that the DispatcherObject was created on.</source>
          <target state="translated">이렇게 호출 하는 스레드에서 DispatcherObject 생성 된 스레드입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A DispatcherObject cannot be independently instantiated; that is, all constructors are protected.</source>
          <target state="translated">DispatcherObject 독립적으로 인스턴스화할 수 없습니다. 즉, 모든 생성자 보호 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects that derive from DispatcherObject have thread affinity.</source>
          <target state="translated">DispatcherObject에서 파생 된 개체는 스레드 선호도 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects that derive from &lt;xref:System.Windows.Freezable&gt; are free-threaded when they are frozen.</source>
          <target state="translated">파생 된 개체 &lt;xref:System.Windows.Freezable&gt;는 자유 스레드 고정 된 경우.&lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조는 <bpt id="p1">[</bpt>Freezable 개체 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Determines whether the calling thread has access to this <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">호출 스레드가이에 액세스할 수 있는지 여부를 결정 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the thread the &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt; was created on may access the &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">스레드는 &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;만들어진 &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; 액세스할 수 있습니다&lt;/xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any thread can check to see whether it has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">모든 스레드에서이 &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; 를 수행할 액세스 권한이 있는지 여부를 확인 하려면 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The difference between CheckAccess and &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; is that CheckAccess returns a Boolean that specifies whether the calling thread has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt; and &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; throws an exception if the calling thread does not have access to the this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">CheckAccess 사이의 차이 및 &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;은 CheckAccess 호출 스레드에서이에 액세스할 수 있는지 여부를 지정 하는 부울 값을 반환 하는 &lt;xref:System.Windows.Threading.DispatcherObject&gt;및 &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;호출 스레드가이 권한이 없는 경우 예외를 throw &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is identical to calling &lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt; on the associated &lt;xref:System.Windows.Threading.Dispatcher&gt; object.</source>
          <target state="translated">이 메서드를 호출 하는 것은 호출 동일 &lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;은 관련 &lt;xref:System.Windows.Threading.Dispatcher&gt;개체.&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the calling thread has access to this object; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>호출 스레드가이 개체에 액세스할 수 있으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this <bpt id="p2">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is associated with.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 <bpt id="p2">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 연관 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the thread that the Dispatcher was created on may access the &lt;xref:System.Windows.Threading.DispatcherObject&gt; directly.</source>
          <target state="translated">발송자 생성 된 스레드에서만 액세스할 수 있습니다는 &lt;xref:System.Windows.Threading.DispatcherObject&gt;직접.&lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access a &lt;xref:System.Windows.Threading.DispatcherObject&gt; from a thread other than the thread the &lt;xref:System.Windows.Threading.DispatcherObject&gt; was created on, call &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; and &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; on the &lt;xref:System.Windows.Threading.Dispatcher&gt; the &lt;xref:System.Windows.Threading.DispatcherObject&gt; is associated with.</source>
          <target state="translated">에 액세스 하려면는 &lt;xref:System.Windows.Threading.DispatcherObject&gt;스레드가 아닌 스레드에서 &lt;xref:System.Windows.Threading.DispatcherObject&gt;만들어진 켜 짐 호출 &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;및 &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;에 &lt;xref:System.Windows.Threading.Dispatcher&gt;는 &lt;xref:System.Windows.Threading.DispatcherObject&gt;관련 된.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The dispatcher.</source>
          <target state="translated">발송자입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Enforces that the calling thread has access to this <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">호출 스레드가이 액세스 권한이 있는 적용 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the thread the &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt; was created on may access the &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">스레드는 &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;만들어진 &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; 액세스할 수 있습니다&lt;/xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any thread can check to see whether it has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">모든 스레드에서이 &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; 를 수행할 액세스 권한이 있는지 여부를 확인 하려면 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The difference between &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt; and VerifyAccess is that &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt; returns a Boolean that specifies whether the calling thread has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt; and VerifyAccess throws an exception if the calling thread does not have access to the this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">차이 &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;and VerifyAccess &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;호출 스레드에서이에 액세스할 수 있는지 여부를 지정 하는 부울 값을 반환 &lt;xref:System.Windows.Threading.DispatcherObject&gt;VerifyAccess 호출 스레드가이 권한이 없는 경우 예외를 throw &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>the calling thread does not have access to this <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">호출 스레드를이 권한이 않은 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>