<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2b050d8511707ba03bb38ec1f4b28e8a26d81e8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Automation.Provider.IInvokeProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">793739a608277f56f01925d1f1390c4c42754a92</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4dd9d71bc4d3ceaabc59ae6c05999cf731c4faab</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</source>
          <target state="translated">또는 시작 하 고,는 명확한 단일 작업을 수행 하 고, 활성화 되었을 때 상태를 유지 하지 않는 하는 컨트롤에 대 한 UI 자동화 클라이언트 액세스를 지원 하도록 메서드 및 속성을 노출 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implemented on a UI Automation provider that must support the &lt;xref:System.Windows.Automation.InvokePattern&gt; control pattern.</source>
          <target state="translated">지원 해야 하는 UI 자동화 공급자에서 구현 되는 &lt;xref:System.Windows.Automation.InvokePattern&gt;컨트롤 패턴.&lt;/xref:System.Windows.Automation.InvokePattern&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls implement IInvokeProvider if the same behavior is not exposed through another control pattern provider.</source>
          <target state="translated">동일한 동작이 다른 컨트롤 패턴 공급자를 통해 노출 되지 않는 경우 IInvokeProvider를 구현 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt; method on a control performs the same action as the &lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt; or &lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt; method, the control should not implement IInvokeProvider.</source>
          <target state="translated">예를 들어 경우는 &lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;메서드가 동일한 작업을 수행 된 &lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;또는 &lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;메서드를 컨트롤 IInvokeProvider를 구현 하지 않아야 합니다.&lt;/xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt; &lt;/xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt; &lt;/xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Sends a request to activate a control and initiate its single, unambiguous action.</source>
          <target state="translated">컨트롤을 활성화 하 고 해당 명확한 단일 작업을 시작 하는 요청을 보냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke is an asynchronous call and must return immediately without blocking.</source>
          <target state="translated">호출는 비동기 호출 이며 차단 하지 않고 즉시 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;이 문제는 직접 또는 간접적으로 호출 되 면 모달 대화 상자를 시작 하는 컨트롤에 특히 중요 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.</source>
          <target state="translated">이벤트를 발생 시킨 모든 UI 자동화 클라이언트는 모달 대화 상자를 닫을 때까지 차단 된 상태로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke raises the &lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt; event.</source>
          <target state="translated">생성 호출의 &lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;이벤트.&lt;/xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If possible, the event should be raised after the control has completed its associated action.</source>
          <target state="translated">가능 하면 컨트롤이 연결된 된 작업을 완료 된 후의 이벤트를 발생 시켜야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt; should be raised before servicing the Invoke request in the following scenarios:      -   It is not possible or practical to wait until the action is complete.</source>
          <target state="translated">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;다음과 같은 시나리오에서 호출 요청을 처리 하기 전에 발생 해야:-수 없으면 하거나 작업 될 때까지 대기 하는 유용한 완료 되었습니다.&lt;/xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The action requires user interaction.</source>
          <target state="translated">-작업에는 사용자 상호 작용이 필요합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The action is time-consuming and will cause the calling client to block for a significant length of time.</source>
          <target state="translated">-작업은 시간이 오래 걸리므로 않으며 중요 한 기간에 대 한 차단 호출 클라이언트가 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the control is not enabled.</source>
          <target state="translated">컨트롤을 해제 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>