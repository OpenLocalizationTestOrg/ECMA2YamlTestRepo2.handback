<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">618b521e541f6f29da9a8d035e99b93b033e3324</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UnvalidatedRequestValues.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05e211b4910efb8f9fafe402b5a52ec9b25ce544</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1902aefb8d1f8f9d0c3d288cbade94d665b965c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to HTTP request values without triggering ASP.NET request validation.</source>
          <target state="translated">ASP.NET 요청 유효성 검사를 트리거하지 않고 HTTP 요청 값에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When ASP.NET reads the values in HTTP request collections (such as the &lt;xref:System.Web.HttpRequest.Form%2A&gt;, &lt;xref:System.Web.HttpRequest.QueryString%2A&gt;, and &lt;xref:System.Web.HttpRequest.Cookies%2A&gt; collections), it performs <bpt id="p1">*</bpt>request validation<ept id="p1">*</ept>.</source>
          <target state="translated">ASP.NET 컬렉션을 요청 하는 HTTP의 값을 읽을 때 (같은 &lt;xref:System.Web.HttpRequest.Form%2A&gt;, &lt;xref:System.Web.HttpRequest.QueryString%2A&gt;, 및 &lt;xref:System.Web.HttpRequest.Cookies%2A&gt;컬렉션), 수행 <bpt id="p1">*</bpt>요청 유효성 검사를<ept id="p1">*</ept>.&lt;/xref:System.Web.HttpRequest.Cookies%2A&gt; &lt;/xref:System.Web.HttpRequest.QueryString%2A&gt; &lt;/xref:System.Web.HttpRequest.Form%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>During request validation, ASP.NET examines the posted values and determines whether they contain markup, script, or reserved characters.</source>
          <target state="translated">요청 유효성 검사 중 ASP.NET 게시 된 값을 검사 하 고 태그, 스크립트 또는 예약 된 문자를 포함 되어 있는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, if ASP.NET detects any of these types of input, it throws an &lt;xref:System.Web.HttpRequestValidationException&gt; exception.</source>
          <target state="translated">기본적으로 ASP.NET의 이러한 유형의 입력을 발견 하면 throw 된 &lt;xref:System.Web.HttpRequestValidationException&gt;예외.&lt;/xref:System.Web.HttpRequestValidationException&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps prevent malicious script injection attacks on your website.</source>
          <target state="translated">이렇게 하면 웹 사이트에 악성 스크립트 삽입 공격을 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in some cases, you might want to bypass ASP.NET request validation and allow values that contain markup, script, or reserved characters.</source>
          <target state="translated">하지만, 경우에 따라 ASP.NET 요청 유효성 검사를 무시 하 고 태그, 스크립트 또는 예약 된 문자를 포함 하는 값을 허용 하려면 필요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if your application uses a rich-text editor that enables users to submit HTML markup as formatted content, you can use the members of the UnvalidatedRequestValues class to retrieve the rich-text request values without triggering the default ASP.NET request validation.</source>
          <target state="translated">예를 들어 응용 프로그램에서 형식이 지정 된 내용으로 HTML 태그를 제출할 수 있도록 하는 서식 있는 텍스트 편집기를 사용 하는 경우 기본 ASP.NET 요청 유효성 검사를 트리거하지 않고 서식 있는 텍스트 요청 값을 검색 하 여 UnvalidatedRequestValues 클래스의 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In your code, you access members of this class by using the &lt;xref:System.Web.HttpRequest.Unvalidated%2A&gt; property.</source>
          <target state="translated">코드를 사용 하 여이 클래스의 멤버 액세스는 &lt;xref:System.Web.HttpRequest.Unvalidated%2A&gt;속성.&lt;/xref:System.Web.HttpRequest.Unvalidated%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you use this class, you must manually check the data for potential cross-site scripting attacks.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;이 클래스를 사용 하는 경우 수동으로 잠재적인 교차 사이트 스크립팅 공격에 대 한 데이터를 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the collection of cookies that the client sent, without triggering ASP.NET request validation.</source>
          <target state="translated">ASP.NET 요청 유효성 검사를 트리거하지 않고 클라이언트가 보낸 쿠키의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  If you use this property, you must manually check the data for potential cross-site scripting attacks.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;이 속성을 사용 하는 경우 잠재적인 교차 사이트 스크립팅 공격에 대 한 데이터를 수동으로 확인 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>