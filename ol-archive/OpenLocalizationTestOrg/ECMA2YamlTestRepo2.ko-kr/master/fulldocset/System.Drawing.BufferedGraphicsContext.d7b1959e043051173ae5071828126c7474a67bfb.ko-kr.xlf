<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e75aa9863f9714064b120698ce846b61604564d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Drawing.BufferedGraphicsContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6bff0750e1a158f94be791560022bb58a6534c3a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ac5567ba7e61d5c0fcdb02fd2c2059eb5cbac09</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods for creating graphics buffers that can be used for double buffering.</source>
          <target state="translated">이중 버퍼링 하는 데 사용할 수 있는 그래픽 버퍼를 만드는 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BufferedGraphicsContext class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated">BufferedGraphicsContext 클래스를 사용 하면 해당 그래픽에 대 한 사용자 지정 이중 버퍼링을 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">이중 버퍼링을 사용 하는 그래픽 줄이거나 깜빡임을 표시 화면을 그려서 발생 하는 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The simplest way to use double buffering is to set the &lt;xref:System.Windows.Forms.ControlStyles&gt; control style flag on a control using the &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 설정 하는 이중 버퍼링을 사용 하는 가장 간단한 방법은 &lt;xref:System.Windows.Forms.ControlStyles&gt;컨트롤 사용 하 여 컨트롤 스타일 플래그는 &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;메서드.&lt;/xref:System.Windows.Forms.Control.SetStyle%2A&gt; &lt;/xref:System.Windows.Forms.ControlStyles&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the &lt;xref:System.Windows.Forms.ControlStyles&gt; control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">설정의 &lt;xref:System.Windows.Forms.ControlStyles&gt;컨트롤 스타일 플래그는 컨트롤에 대 한 코드를 추가 하지 않고도 기본 그래픽 버퍼를 통해 컨트롤에 대 한 모든 그리기를 리디렉션합니다.&lt;/xref:System.Windows.Forms.ControlStyles&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">이 플래그가로 설정 되어 <ph id="ph1">`true`</ph> 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BufferedGraphicsContext class provides methods for creating and configuring a graphics buffer.</source>
          <target state="translated">BufferedGraphicsContext 클래스 만들고 그래픽 버퍼를 구성 하기 위한 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method creates a &lt;xref:System.Drawing.BufferedGraphics&gt;, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;메서드 만듭니다는 &lt;xref:System.Drawing.BufferedGraphics&gt;도 버퍼에 쓸 출력 장치에 해당 콘텐츠를 렌더링 하는 데 사용할 메서드를 제공 하는 그래픽 버퍼에 대 한 래퍼 변수인.&lt;/xref:System.Drawing.BufferedGraphics&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the BufferedGraphicsContext for the current application domain from the static &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">정적에서은 현재 어플리케이션 도메인에 대 한 BufferedGraphicsContext를 검색할 수 있습니다 &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For graphically intensive applications such as animation, you can create a dedicated BufferedGraphicsContext using the constructor, but for most applications the &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt; property will be sufficient.</source>
          <target state="translated">애니메이션 같은 그래픽 위주의 응용 프로그램에 대 한 생성자를 사용 하는 전용된 BufferedGraphicsContext를 만들 수 있습니다 하지만 대부분의 응용 프로그램의 &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;속성 만으로도 충분 합니다.&lt;/xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on drawing buffered graphics and custom buffering implementations, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">그리기 버퍼링 된 그래픽 및 버퍼링을 사용자 지정 구현에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>이중 버퍼링 그래픽<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 버퍼링 된 그래픽 수동 관리<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphicsContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphicsContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated &lt;xref:System.Drawing.BufferedGraphicsContext&gt; instead of the default instance provided by the &lt;xref:System.Drawing.BufferedGraphicsManager&gt;.</source>
          <target state="translated">애니메이션 같은 그래픽 위주의 응용 프로그램에 대 한 경우에 따라 성능을 개선할 수 있습니다는 전용 &lt;xref:System.Drawing.BufferedGraphicsContext&gt; &lt;xref:System.Drawing.BufferedGraphicsManager&gt;.&lt;/xref:System.Drawing.BufferedGraphicsManager&gt; 에서 제공 하는 기본 인스턴스 대신&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; 사용 하 여</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to create and manage graphics buffers individually.</source>
          <target state="translated">이 통해 만들고 그래픽 버퍼를 개별적으로 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should always call &lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt; when you finish using a dedicated &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; &lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;에 전용된 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; 를 사용 하 여 완료 하면&lt;/xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt; 항상 호출 해야</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about dedicated graphics buffers, see <bpt id="p1">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">전용된 그래픽 버퍼에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 버퍼링 된 그래픽 수동 관리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 픽셀 형식을 사용 하 여 지정된 된 크기의 그래픽 버퍼를 만듭니다 <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the Allocate method with a rectangle whose size exceeds the value of the &lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt; property, a temporary &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">값을 초과 하는 사각형이 Allocate 메서드를 호출할 때 필요에 따라 크기가 &lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;속성, 임시 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;버퍼를 할당 하 고 버퍼의 임시 컨텍스트를 제공 하기 위해 만들어집니다.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is distinct from the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; for the application domain and it is disposed automatically when the &lt;xref:System.Drawing.BufferedGraphics&gt; returned by the Allocate method is disposed.</source>
          <target state="translated">새 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;와 다릅니다.는 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;응용 프로그램에 대 한 도메인은 자동으로 삭제 시기는 &lt;xref:System.Drawing.BufferedGraphics&gt;메서드 삭제 된 할당에 의해 반환 된.&lt;/xref:System.Drawing.BufferedGraphics&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match the pixel format for the new buffer to.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새 버퍼에 대 한 픽셀 형식을 일치 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating the size of the buffer to create.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 생성 하기 위해 버퍼의 크기를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 크기의 버퍼를 그리는 데 사용할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 픽셀 형식을 사용 하 여 지정된 된 크기의 그래픽 버퍼를 만듭니다 <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method with a rectangle whose size exceeds the value of the &lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt; property, a temporary &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">호출 하는 경우는 &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;메서드 값을 초과 하는 필요에 따라 크기가 사각형과는 &lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;속성, 임시 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;버퍼를 할당 하 고 버퍼의 임시 컨텍스트를 제공 하기 위해 만들어집니다.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is distinct from the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; for the application domain and it is disposed automatically when the &lt;xref:System.Drawing.BufferedGraphics&gt; returned by the &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method is disposed.</source>
          <target state="translated">새 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;와 다릅니다.는 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;응용 프로그램에 대 한 도메인 자동으로 삭제 됩니다 때는 &lt;xref:System.Drawing.BufferedGraphics&gt;에서 반환 되는 &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;메서드 삭제 됩니다.&lt;/xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; &lt;/xref:System.Drawing.BufferedGraphics&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; to a device context to match the pixel format of the new buffer to.</source>
          <target state="translated">&lt;xref:System.IntPtr&gt;새 버퍼의 픽셀 형식에 맞게 장치 컨텍스트를.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating the size of the buffer to create.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 생성 하기 위해 버퍼의 크기를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 크기의 버퍼를 그리는 데 사용할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphicsContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphicsContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when you are finished using the &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.</source>
          <target state="translated">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; in an unusable state.</source>
          <target state="translated">Dispose 메서드는 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;불안정 한 상태가.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; was occupying.</source>
          <target state="translated">Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;가비지 수집기는 메모리를 회수할 수 있도록 하는 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;차지한.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Object.Finalize%2A&gt; method of the &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.</source>
          <target state="translated">가비지 수집기 &lt;xref:System.Object.Finalize%2A&gt; &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.&lt;/xref:System.Drawing.BufferedGraphicsContext&gt; 메서드&lt;/xref:System.Object.Finalize%2A&gt; 를 호출할 때까지 사용 중인 리소스를 해제 되지 않습니다 그렇지 않은 경우</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">개체가를 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</source>
          <target state="translated">버퍼 할당 된 아직 삭제 되지 않았습니다 하는 경우 현재 그래픽 버퍼를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</source>
          <target state="translated">그래픽 버퍼를 사용 하는 경우 표시 됩니다 삭제 되는 무료; 즉시 그렇지 않으면 삭제 됩니다 즉시 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum size of the buffer to use.</source>
          <target state="translated">사용할 버퍼의 최대 크기를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</source>
          <target state="translated">이 속성을 사용 하면 메모리에 유지 해야 하는 버퍼에 대 한 최대 크기를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can allocate a buffer of any size, however any buffer with dimensions greater than the MaximumBuffer size will be used temporarily and then discarded when the &lt;xref:System.Drawing.BufferedGraphics&gt; object is released.</source>
          <target state="translated">그러나 모든 크기의 버퍼를 할당할 수, 됩니다 MaximumBuffer 크기 보다 큰 크기 버퍼 일시적으로 사용 하 고 때 삭제는 &lt;xref:System.Drawing.BufferedGraphics&gt;개체를 해제 합니다.&lt;/xref:System.Drawing.BufferedGraphics&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating the maximum size of the buffer dimensions.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 버퍼 크기의 최대 크기를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The height or width of the size is less than or equal to zero.</source>
          <target state="translated">높이 또는 크기의 너비 보다 작거나&amp;0;입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>