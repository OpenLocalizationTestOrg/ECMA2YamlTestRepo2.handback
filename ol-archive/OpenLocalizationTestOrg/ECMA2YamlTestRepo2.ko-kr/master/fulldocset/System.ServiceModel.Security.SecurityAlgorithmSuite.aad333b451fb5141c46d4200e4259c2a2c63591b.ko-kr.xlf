<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1ae7f0b6f29480d13bad83487da4b73b79b8851</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Security.SecurityAlgorithmSuite.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a779c2250b9e33abaf0a8586602d247d08191a49</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1554f8b779a9f49ee9c4373d0b86b5add436ea2f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies properties of algorithms.</source>
          <target state="translated">알고리즘의 속성을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This is an <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">이 한 <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.</source>
          <target state="translated">이 클래스의 인스턴스는 메시지를 보호할 때 사용 되는 알고리즘의 암호화 특성을 지정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms.</source>
          <target state="translated">이 클래스를 보안 알고리즘 모음을 인스턴스화할 파생된 클래스에서 사용 하며 보안 알고리즘을 설명 하는 속성이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">`wsBasicHttp`</ph> binding uses an internal derived class to specify the properties of its security algorithms.</source>
          <target state="translated">예를 들어는 <ph id="ph1">`wsBasicHttp`</ph> 바인딩은 내부 파생된 클래스를 사용 하 여 보안 알고리즘의 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.</source>
          <target state="translated">이 클래스의 인스턴스 생성자는 모든 속성을 초기화 하지 않는 하므로 정적 속성 및 읽기 전용 속성으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the Basic128 algorithm suite.</source>
          <target state="translated">Basic128 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, AES-128 is used as the encryption algorithm.</source>
          <target state="translated">기본적으로 aes-128 암호화 알고리즘으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The 128-bit Basic <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">128 비트 Basic <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 128 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 128 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 128 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 128 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 서명 다이제스트에 s h a 256 및 128 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 서명 다이제스트에 s h a 256 및 128 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Basic을 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, AES-192 is used as the encryption algorithm.</source>
          <target state="translated">기본적으로 AES&amp;192; 암호화 알고리즘으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Basic을 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">키 래핑 알고리즘으로 192 비트 Basic 메시지 암호화 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">키 래핑 알고리즘으로 192 비트 Basic 메시지 암호화 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Basic 및 서명 다이제스트에 s h a 256 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Basic 및 서명 다이제스트에 s h a 256 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 256 비트 Basic을 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, AES-256 is used for the encryption algorithm.</source>
          <target state="translated">기본적으로 aes-256 암호화 알고리즘에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 256 비트 Basic을 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 256 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 256 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 256 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 256 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 서명 다이제스트에 s h a 256 및 256 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 서명 다이제스트에 s h a 256 및 256 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the default algorithm suite.</source>
          <target state="translated">기본 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 메서드 뿐 아니라 기본 값을 지정 하는 속성을 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The default <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</source>
          <target state="translated">기본 <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 은 &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;, 대칭 암호화 알고리즘으로 256 비트 AES 고급 암호화 표준 ()를 지정 하는.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the default asymmetric key wrap algorithm as a string.</source>
          <target state="translated">기본 비대칭 키 래핑 알고리즘을 문자열로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When overridden, provides a string value that will be used for comparison in the &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A&gt; method.</source>
          <target state="translated">를 재정의 하는 경우 비교에 사용할 문자열 값을 제공 된 &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A&gt;메서드.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The default asymmetric key wrap algorithm.</source>
          <target state="translated">기본 비대칭 키 래핑 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets the default asymmetric signature algorithm as a string.</source>
          <target state="translated">기본 비대칭 서명 알고리즘을 문자열로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>When overridden, provides a string value that will be used for comparison in the &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A&gt; method.</source>
          <target state="translated">를 재정의 하는 경우 비교에 사용할 문자열 값을 제공 된 &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A&gt;메서드.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default asymmetric signature algorithm.</source>
          <target state="translated">기본 비대칭 서명 알고리즘인입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the default canonicalization algorithm as a string.</source>
          <target state="translated">기본 정형화 알고리즘을 문자열로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>When overridden, provides a string value that will be used for comparison in the method &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A&gt;.</source>
          <target state="translated">재정의 된 경우, &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A&gt; 메서드에서 비교에 사용 됩니다 하는 문자열 값을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The default canonicalization algorithm.</source>
          <target state="translated">기본 정형화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the default digest algorithm as a string.</source>
          <target state="translated">기본 다이제스트 알고리즘을 문자열로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>When overridden, provides a string value that will be used for comparison in the &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A&gt; method.</source>
          <target state="translated">를 재정의 하는 경우 비교에 사용할 문자열 값을 제공 된 &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A&gt;메서드.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The default digest algorithm.</source>
          <target state="translated">기본 다이제스트 알고리즘인입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the default encryption algorithm as a string.</source>
          <target state="translated">기본 암호화 알고리즘을 문자열로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>When overridden, provides a string value that will be used for comparison in the &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A&gt; method.</source>
          <target state="translated">를 재정의 하는 경우 비교에 사용할 문자열 값을 제공 된 &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A&gt;메서드.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The default encryption algorithm.</source>
          <target state="translated">기본 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the default encryption key derivation length as an &lt;xref:System.Int32&gt; value.</source>
          <target state="translated">으로 기본 암호화 키 파생 길이 가져옵니다는 &lt;xref:System.Int32&gt;값.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value will vary depending on the subclass that implements it.</source>
          <target state="translated">반환 되는 값은 구현 하는 서브 클래스에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">`Basic256`</ph> encryption, it returns 256.</source>
          <target state="translated">에 대 한 <ph id="ph1">`Basic256`</ph> 암호화의 경우 256을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default encryption key derivation length.</source>
          <target state="translated">기본 암호화 키 파생 길이입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the default signature key derivation length as an &lt;xref:System.Int32&gt; value.</source>
          <target state="translated">으로 기본 서명 키 파생 길이 가져옵니다는 &lt;xref:System.Int32&gt;값.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value will vary depending on the subclass that implements it.</source>
          <target state="translated">반환 되는 값은 구현 하는 서브 클래스에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">`Basic256`</ph> encryption, it returns 192.</source>
          <target state="translated">에 대 한 <ph id="ph1">`Basic256`</ph> 암호화, 192을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default signature key derivation length.</source>
          <target state="translated">기본 서명 키 파생 길이입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets the default symmetric key length as an &lt;xref:System.Int32&gt; value.</source>
          <target state="translated">으로 기본 대칭 키 길이 가져옵니다는 &lt;xref:System.Int32&gt;값.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value will vary depending on the subclass that implements it.</source>
          <target state="translated">반환 되는 값은 구현 하는 서브 클래스에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">`Basic256`</ph> encryption, it returns 256.</source>
          <target state="translated">에 대 한 <ph id="ph1">`Basic256`</ph> 암호화의 경우 256을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default symmetric key length.</source>
          <target state="translated">기본 대칭 키 길이입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the default symmetric key wrap algorithm as a string.</source>
          <target state="translated">기본 대칭 키 래핑 알고리즘을 문자열로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default symmetric key wrap algorithm.</source>
          <target state="translated">기본 대칭 키 래핑 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets the default symmetric signature algorithm as a string.</source>
          <target state="translated">기본 대칭 서명 알고리즘을 문자열로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The default symmetric signature algorithm.</source>
          <target state="translated">기본 대칭 서명 알고리즘인입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Indicates whether a particular key length is supported by the asymmetric algorithm.</source>
          <target state="translated">특정 키 길이가 비대칭 알고리즘에서 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typical key lengths are 128, 192, and 256 bits.</source>
          <target state="translated">일반적인 키 길이 128, 192 및 256 비트는 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The key length to check.</source>
          <target state="translated">키 길이를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the key length is supported by the asymmetric algorithm; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>키 길이가 비대칭 알고리즘;에서 지원 되는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Indicates whether an asymmetric key wrap algorithm is supported.</source>
          <target state="translated">비대칭 키 래핑 알고리즘이 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A&gt; 에서 반환 하는 문자열과 비교</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The algorithm to check.</source>
          <target state="translated">확인할 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the asymmetric key wrap algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>비대칭 키 래핑 알고리즘이 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Indicates whether an asymmetric signature algorithm is supported.</source>
          <target state="translated">비대칭 서명 알고리즘이 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A&gt; 에서 반환 하는 문자열과 비교</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">확인할 알고리즘 이름입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the asymmetric signature algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>비대칭 서명 알고리즘이 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Indicates whether a canonicalization algorithm is supported.</source>
          <target state="translated">정형화 알고리즘이 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A&gt; 에서 반환 하는 문자열과 비교</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">확인할 알고리즘 이름입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the canonicalization algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>정형화 알고리즘이 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Indicates whether a digest algorithm is supported.</source>
          <target state="translated">다이제스트 알고리즘이 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A&gt; 에서 반환 하는 문자열과 비교</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">확인할 알고리즘 이름입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the digest algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>다이제스트 알고리즘이 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Indicates whether an encryption algorithm is supported.</source>
          <target state="translated">암호화 알고리즘이 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A&gt; 에서 반환 하는 문자열과 비교</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">확인할 알고리즘 이름입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the encryption algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>암호화 알고리즘이 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Indicates whether an encryption key derivation algorithm is supported.</source>
          <target state="translated">암호화 키 파생 알고리즘이 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">확인할 알고리즘 이름입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the encryption key derivation algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>암호화 키 파생 알고리즘이 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Indicates whether a signature key derivation algorithm is supported.</source>
          <target state="translated">서명 키 파생 알고리즘이 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">확인할 알고리즘 이름입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature key derivation algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>서명 키 파생 알고리즘이 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, indicates whether a particular symmetric key length is supported.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 특정 대칭 키 길이가 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`length`</ph> is compared to a range of values depending on the subclass.</source>
          <target state="translated"><ph id="ph1">`length`</ph> 하위 클래스에 따라 값의 범위와 비교 됩니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the <ph id="ph1">`TripleDES`</ph> subclass, this method verifies that <ph id="ph2">`length`</ph> is between 192 and 256, inclusive.</source>
          <target state="translated">예를 들어는 <ph id="ph1">`TripleDES`</ph> 이 메서드를 하위 클래스를 확인 하는 <ph id="ph2">`length`</ph> 192와 256의 사이입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The key length to check.</source>
          <target state="translated">키 길이를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the symmetric key length is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>대칭 키 길이가 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Indicates whether a symmetric key wrap algorithm is supported.</source>
          <target state="translated">대칭 키 래핑 알고리즘이 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">확인할 알고리즘 이름입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the symmetric key wrap algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>대칭 키 래핑 알고리즘이 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Indicates whether a symmetric signature algorithm is supported.</source>
          <target state="translated">대칭 서명 알고리즘이 지원 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">확인할 알고리즘 이름입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the symmetric signature algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>대칭 서명 알고리즘이 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets the Triple Data Encryption Standard (DES) algorithm suite.</source>
          <target state="translated">Triple 데이터 암호화 표준 (DES) 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The Triple DES <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Triple DES <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">키 래핑 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 메시지 암호화 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">키 래핑 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 메시지 암호화 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 및 서명 다이제스트에 s h a 256 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">메시지 암호화 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 및 서명 다이제스트에 s h a 256 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>