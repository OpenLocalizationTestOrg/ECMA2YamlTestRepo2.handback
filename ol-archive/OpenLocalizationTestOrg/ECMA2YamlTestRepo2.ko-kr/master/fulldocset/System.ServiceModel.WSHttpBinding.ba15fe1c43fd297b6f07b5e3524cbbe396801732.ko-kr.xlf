<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82234bd7ec11d666cd5bfab22aa8e73c2dd722ff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.WSHttpBinding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ba53553129b73e3b5636106a1bb6af404f4ff2b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64e444df1997d1f1f68eb7fc94e55c2f9560260a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an interoperable binding that supports distributed transactions and secure, reliable sessions.</source>
          <target state="translated">분산 트랜잭션과 안전 하 고 신뢰할 수 있는 세션을 지 원하는 상호 운용 가능한 바인딩을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WSHttpBinding is similar to the &lt;xref:System.ServiceModel.BasicHttpBinding&gt; but provides more Web service features.</source>
          <target state="translated">WSHttpBinding는 비슷합니다는 &lt;xref:System.ServiceModel.BasicHttpBinding&gt;더 많은 웹 서비스 기능을 제공 합니다.&lt;/xref:System.ServiceModel.BasicHttpBinding&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It uses the HTTP transport and provides message security, as does &lt;xref:System.ServiceModel.BasicHttpBinding&gt;, but it also provides transactions, reliable messaging, and WS-Addressing, either enabled by default or available through a single control setting.</source>
          <target state="translated">HTTP 전송을 사용 하 고 메시지 보안을 마찬가지로 제공 &lt;xref:System.ServiceModel.BasicHttpBinding&gt;, 트랜잭션, 신뢰할 수 있는 메시징 및 Ws-addressing, 기본적으로 활성화 되어 또는 단일 제어 설정을 통해 사용할 수 있는 제공 합니다.&lt;/xref:System.ServiceModel.BasicHttpBinding&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified type of security used by the binding.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 지정 된 바인딩에 사용 되는 보안 형식 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The value of &lt;xref:System.ServiceModel.SecurityMode&gt; that specifies the type of security that is used with the SOAP message and for the client.</source>
          <target state="translated">값 &lt;xref:System.ServiceModel.SecurityMode&gt;클라이언트와 SOAP 메시지와 함께 사용 되는 보안 형식을 지정 하.&lt;/xref:System.ServiceModel.SecurityMode&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a binding specified by its configuration name.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구성 이름으로 지정 된 바인딩 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The binding configuration name for the <bpt id="p1">&lt;xref href="System.ServiceModel.Configuration.WSHttpBindingElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 바인딩 구성 이름은 <bpt id="p1">&lt;xref href="System.ServiceModel.Configuration.WSHttpBindingElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The binding element with the name <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">configName</ph><ept id="p1">&lt;/code&gt;</ept> was not found.</source>
          <target state="translated">이름으로 바인딩 요소 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">configName</ph> <ept id="p1">&lt;/code&gt;</ept> 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 지정 된 신뢰할 수 있는 세션을 사용할지 여부를 나타내는 값과 바인딩에서 사용 되는 보안 형식 사용 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The value of &lt;xref:System.ServiceModel.SecurityMode&gt; that specifies the type of security that is used with the SOAP message and for the client.</source>
          <target state="translated">값 &lt;xref:System.ServiceModel.SecurityMode&gt;클라이언트와 SOAP 메시지와 함께 사용 되는 보안 형식을 지정 하.&lt;/xref:System.ServiceModel.SecurityMode&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a reliable session is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>신뢰할 수 있는 세션을 사용 하면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the WCF client will automatically store and resend any cookies sent by a single web service.</source>
          <target state="translated">WCF 클라이언트 자동으로 저장 되 고 하나의 웹 서비스에서 보낸 모든 쿠키를 다시 전송 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting AllowCookies to <ph id="ph1">`true`</ph> is useful when a client is interacting with one web service that uses cookies.</source>
          <target state="translated">AllowCookies 설정 <ph id="ph1">`true`</ph> 클라이언트가 쿠키를 사용 하는 하나의 웹 서비스 상호 작용 하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are accessing multiple services with the same cookie, set AllowCookies to <ph id="ph1">`false`</ph> and you will have to manually add the cookie header to each outgoing message.</source>
          <target state="translated">같은 쿠키를 사용 하 여 여러 서비스에 액세스 하는 경우 설정 AllowCookies <ph id="ph1">`false`</ph> 보내는 각 메시지에 쿠키 헤더를 수동으로 추가 해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code shows how to do this:      <ph id="ph1">```c#   MyWebServiceClient client = new MyWebServiceClient();              using (new OperationContextScope(client.InnerChannel))           {               client.DoSomething();                  // Extract the cookie embedded in the received web service response               // and stores it locally               HttpResponseMessageProperty response = (HttpResponseMessageProperty)               OperationContext.Current.IncomingMessageProperties[                   HttpResponseMessageProperty.Name];               sharedCookie = response.Headers["Set-Cookie"];           }              MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();              using (new OperationContextScope(otherClient.InnerChannel))           {               // Embeds the extracted cookie in the next web service request               // Note that we manually have to create the request object since               // since it doesn't exist yet at this stage                HttpRequestMessageProperty request = new HttpRequestMessageProperty();               request.Headers["Cookie"] = sharedCookie;               OperationContext.Current.OutgoingMessageProperties[                   HttpRequestMessageProperty.Name] = request;                  otherClient.DoSomethingElse();           }      ```</ph></source>
          <target state="translated">다음 코드에는이 작업을 수행 하는 방법을 보여 줍니다.<ph id="ph1">```c#   MyWebServiceClient client = new MyWebServiceClient();              using (new OperationContextScope(client.InnerChannel))           {               client.DoSomething();                  // Extract the cookie embedded in the received web service response               // and stores it locally               HttpResponseMessageProperty response = (HttpResponseMessageProperty)               OperationContext.Current.IncomingMessageProperties[                   HttpResponseMessageProperty.Name];               sharedCookie = response.Headers["Set-Cookie"];           }              MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();              using (new OperationContextScope(otherClient.InnerChannel))           {               // Embeds the extracted cookie in the next web service request               // Note that we manually have to create the request object since               // since it doesn't exist yet at this stage                HttpRequestMessageProperty request = new HttpRequestMessageProperty();               request.Headers["Cookie"] = sharedCookie;               OperationContext.Current.OutgoingMessageProperties[                   HttpRequestMessageProperty.Name] = request;                  otherClient.DoSomethingElse();           }      ```</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if automatic cookies processing is required; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>처리 하는 자동 쿠키; 필요한 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns an ordered collection of binding elements contained in the current binding.</source>
          <target state="translated">현재 바인딩에 포함 된 요소를 바인딩의 정렬된 된 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the binding elements is important.</source>
          <target state="translated">바인딩 요소의 순서가 중요 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>It reflects the order in which the protocol and transport channels are constructed and stacked.</source>
          <target state="translated">프로토콜 및 전송 채널이 생성 되 고 스택 순서를 반영 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt; that contains the ordered stack of binding elements described by the <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> binding.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;으로 설명 된 바인딩 요소의 순서가 지정 된 스택을 포함 하는 <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 바인딩.&lt;/xref:System.ServiceModel.Channels.BindingElementCollection&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The transport security mode set cannot provide the reliable session that has been enabled.</source>
          <target state="translated">전송 보안 모드 집합이 설정 된 신뢰할 수 있는 세션을 제공할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns the security binding element from the current binding.</source>
          <target state="translated">현재 바인딩의 보안 바인딩 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt; from the current binding.</source>
          <target state="translated">A &lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;현재 바인딩 으로부터.&lt;/xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns the transport binding element from the current binding.</source>
          <target state="translated">현재 바인딩 으로부터 전송 바인딩 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt; from the current binding.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;현재 바인딩 으로부터.&lt;/xref:System.ServiceModel.Channels.TransportBindingElement&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the security settings used with this binding.</source>
          <target state="translated">이 바인딩과 함께 사용 되는 보안 설정을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use something other than the default security type, use the &lt;xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29&gt; constructor.</source>
          <target state="translated">기본 보안 형식 이외의 값을 사용 하려면 사용 된 &lt;xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29&gt;생성자.&lt;/xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used with this binding.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.WSHttpSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 바인딩과 함께 사용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default value &lt;xref:System.ServiceModel.WSHttpSecurity.Mode<bpt id="p1">*</bpt>&gt; property is &lt;xref:System.ServiceModel.WSHttpSecurity.Message<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">기본값 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 속성은 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the &lt;xref:System.ServiceModel.WSHttpBinding.Security*&gt; property has changed from its default value and should be serialized.</source>
          <target state="translated">나타내는 값을 반환 여부는 &lt;xref:System.ServiceModel.WSHttpBinding.Security*&gt;속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.&lt;/xref:System.ServiceModel.WSHttpBinding.Security*&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.ServiceModel.WSHttpBinding.Security*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 &lt;xref:System.ServiceModel.WSHttpBinding.Security*&gt;고, 그렇지 않으면 직렬화 된 속성 값은 여야 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.ServiceModel.WSHttpBinding.Security*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>