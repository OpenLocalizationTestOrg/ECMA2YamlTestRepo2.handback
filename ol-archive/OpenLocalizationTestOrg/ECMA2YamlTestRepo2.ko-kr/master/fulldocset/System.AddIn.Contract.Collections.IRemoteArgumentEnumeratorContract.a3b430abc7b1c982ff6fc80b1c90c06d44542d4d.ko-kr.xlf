<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65db54b6aded2204767c5f002b421546038b5b64</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34ac00c20b8cd7e451cb1b89db18ce04cd82e01d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8c4fbe60444b9def5d8dca3adee4c1ed087fba5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enumerates the elements of a collection of <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">컬렉션의 요소를 열거 <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.</source>
          <target state="translated">반환 값이이 위치에서 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;정의 되지 않습니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before calling &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; 를 호출 하기 전에 컬렉션의 첫 번째 요소로 열거자를&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; returns the same object until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;반환 될 때까지 동일한 개체 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;호출 됩니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; sets the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;반환 값이 설정 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;를 다음 요소로.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">경우 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; &lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;반환할 수도 <ph id="ph1">`false`</ph>.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.</source>
          <target state="translated">마지막으로 호출 하는 경우 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>의 반환 값 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;정의 되지 않습니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; &lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the collection at the current position of the enumerator.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션에서 열거자의 현재 위치에 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of GetCurrent is undefined under any of the following conditions:      -   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; is called.</source>
          <target state="translated">다음 조건에서 정의 되지 않은 해 주는 GetCurrent의 반환 값:-열거자를 만든 직후 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다 또는 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;호출 됩니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before calling GetCurrent.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;호출 하는 열거자를 해 주는 GetCurrent를 호출 하기 전에 컬렉션의 첫 번째 요소로 이동 되어야 합니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The last call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">-마지막으로 호출한 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>, 컬렉션의 끝을 나타내는.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</source>
          <target state="translated">-열거자는 컬렉션을 추가, 수정 또는 삭제 요소와 같은 변경 작업으로 인해 무효화 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetCurrent returns the same object until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; is called.</source>
          <target state="translated">해 주는 GetCurrent 반환 될 때까지 동일한 개체 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;호출 됩니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; sets the return value of GetCurrent to the next element.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;다음 요소로 해 주는 GetCurrent의 반환 값을 설정합니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the collection at the current position of the enumerator.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션에서 열거자의 현재 위치에 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">열거자는 컬렉션의 다음 요소로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after the &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; method is called, an enumerator is positioned before the first element of the collection.</source>
          <target state="translated">열거자를 만든 후 또는 이후에 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;메서드가 호출 되 면 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first call to the MoveNext method moves the enumerator to the first element of the collection.</source>
          <target state="translated">MoveNext 메서드를 처음 호출할 열거자를 컬렉션의 첫 번째 요소로 이동합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">MoveNext 컬렉션의 끝을 통과 열거자는 컬렉션의 마지막 요소 뒤에 배치 되 고 MoveNext 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to MoveNext also return <ph id="ph1">`false`</ph> until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; is called.</source>
          <target state="translated">이 위치에 열거자는 복구 불가능, 이후에 MoveNext 호출 또한 반환 <ph id="ph1">`false`</ph> 될 때까지 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;호출 됩니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 MoveNext 또는 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; throw&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; 을 다음에 호출할 컬렉션 변경 될 경우</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>열거자를 다음 요소로 이동 성공 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 열거자가 컬렉션의 끝을 통과 하는 경우.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">컬렉션은 열거자를 만든 후 수정 되었습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you call Reset, the value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.</source>
          <target state="translated">다시 설정의 값을 호출한 후 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;정의 되지 않습니다.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; method to move the enumerator to the first element of the collection.</source>
          <target state="translated">호출 된 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;열거자는 컬렉션의 첫 번째 요소로 이동 하는 메서드.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; or Reset throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;재설정 &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; throw 또는&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; 을 다음에 호출</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">컬렉션은 열거자를 만든 후 수정 되었습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>