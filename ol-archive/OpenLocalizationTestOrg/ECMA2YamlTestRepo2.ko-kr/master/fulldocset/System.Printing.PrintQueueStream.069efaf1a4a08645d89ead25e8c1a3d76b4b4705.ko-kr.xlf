<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbca6bc3a00ff2171ef895ef841e396e11bc4583</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Printing.PrintQueueStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8ca467e5174c62df854c63b6098557dcaad1799</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4bd3d80ffb147e42c882a15b12d164e6774ff59</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A stream that represents a spooled print job in a print queue.</source>
          <target state="translated">인쇄 대기열에 스풀링된 인쇄 작업을 나타내는 스트림.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this class to write device specific information to a spool file that is not automatically included by the <ph id="ph1">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph> spooler.</source>
          <target state="translated">이 클래스를 사용 하 여 스풀 파일을 자동으로 포함 되지 않는 장치 관련 정보를 작성 하는 <ph id="ph1">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph> 스풀러 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Of course, you need to know whether the spool file is <ph id="ph1">[!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)]</ph> or <ph id="ph2">[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]</ph>.</source>
          <target state="translated">스풀 파일 인지 확인 해야 하는 물론, <ph id="ph1">[!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)]</ph> 또는 <ph id="ph2">[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you prefer working with a &lt;xref:System.Byte&gt; array, you can also use two of the overloads of the &lt;xref:System.Printing.PrintQueue.AddJob%2A&gt; method and the &lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt; property to write to the spool file.</source>
          <target state="translated">사용 하는 경우는 &lt;xref:System.Byte&gt;배열에 사용할 수도 있습니다 두 오버 로드는 &lt;xref:System.Printing.PrintQueue.AddJob%2A&gt;메서드 및 &lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt;스풀 파일에 쓸 속성입니다.&lt;/xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt; &lt;/xref:System.Printing.PrintQueue.AddJob%2A&gt; &lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Classes within the &lt;xref:System.Printing&gt; namespace are not supported for use within a Windows service or ASP.NET application or service.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 내에서 클래스는 &lt;xref:System.Printing&gt;Windows 서비스 또는 ASP.NET 응용 프로그램 또는 서비스 내에서 사용 하기 위해 네임 스페이스를 사용할 수 없습니다.&lt;/xref:System.Printing&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</source>
          <target state="translated">이러한 응용 프로그램 종류 중 하나에서 이러한 클래스를 사용 하는 동안 예기치 않은 문제가 발생할 수 있습니다, 그리고 감소와 같은 서비스 성능 및 런타임 예외입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to print from a Windows Forms application, see the &lt;xref:System.Drawing.Printing&gt; namespace.</source>
          <target state="translated">Windows Forms 응용 프로그램에서 인쇄 하는 경우 참조는 &lt;xref:System.Drawing.Printing&gt;네임 스페이스.&lt;/xref:System.Drawing.Printing&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified print job that is hosted in the specified <bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호스트 되는 지정 된 인쇄 작업에 대 한 클래스에 지정 된 <bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that hosts the print job that provides the content of the stream.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스트림의 내용을 제공 하는 인쇄 작업을 호스팅하는 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the print job that provides the content of the stream.</source>
          <target state="translated">스트림 콘텐츠를 제공 하는 인쇄 작업의 이름입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified print job that is hosted in the specified <bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, with an indication of whether data in the <bpt id="p3">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> should be committed when the stream is closed.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호스트 되는 지정 된 인쇄 작업에 대 한 클래스에 지정 된 <bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 여부를 표시 하 여 데이터에는 <bpt id="p3">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 스트림이 닫힐 때 적용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that hosts the print job that provides the content of the stream.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스트림의 내용을 제공 하는 인쇄 작업을 호스팅하는 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The name of the print job that provides the content of the stream.</source>
          <target state="translated">스트림 콘텐츠를 제공 하는 인쇄 작업의 이름입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to commit data in the <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> when the &lt;xref:System.Printing.PrintQueueStream.Close*&gt; method is called; otherwise,<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>데이터를 커밋하려면는 <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 때는 &lt;xref:System.Printing.PrintQueueStream.Close*&gt;메서드 호출, 되지 않았으면<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Printing.PrintQueueStream.Close*&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified print job that is hosted in the specified <bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, with the specified settings and an indication of whether data in the <bpt id="p3">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> should be committed when the stream is closed.</source>
          <target state="translated">새 인스턴스를 초기화 합니다는 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호스트 되는 지정 된 인쇄 작업에 대 한 클래스에 지정 된 <bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 지정 된 설정 및 여부를 사용 하 여 데이터에는 <bpt id="p3">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 스트림이 닫힐 때 적용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that hosts the print job that provides the content of the stream.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스트림의 내용을 제공 하는 인쇄 작업을 호스팅하는 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name of the print job that provides the content of the stream.</source>
          <target state="translated">스트림 콘텐츠를 제공 하는 인쇄 작업의 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to commit data in the <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> when the &lt;xref:System.Printing.PrintQueueStream.Close*&gt; method is called; otherwise,<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>데이터를 커밋하려면는 <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 때는 &lt;xref:System.Printing.PrintQueueStream.Close*&gt;메서드 호출, 되지 않았으면<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Printing.PrintQueueStream.Close*&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The settings of the print job.</source>
          <target state="translated">인쇄 작업의 설정입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The buffer from which to write data.</source>
          <target state="translated">데이터를 쓸 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The byte offset in the buffer from which to begin writing.</source>
          <target state="translated">바이트 쓰기를 시작할 버퍼의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">쓸 바이트의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An asynchronous callback, which is called when the writing operation is complete.</source>
          <target state="translated">쓰기 작업이 완료 될 때 호출 되는 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this asynchronous writing request from other requests.</source>
          <target state="translated">이 비동기 쓰기 요청을 다른 요청과 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous write, which might still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;나타내는 비동기 쓰기를 보류 중일 수 있습니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports reading.</source>
          <target state="translated">스트림이 읽기를 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if reading is supported; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>읽기가 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.</source>
          <target state="translated">읽기/쓰기 위치를 스트림의 새 위치로 이동 하는 스트림이 검색을 지원 하는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if seeking is supported; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>찾기를 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports writing.</source>
          <target state="translated">스트림이 쓰기를 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if writing is supported; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>쓰기 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.</source>
          <target state="translated">스트림을 닫고 소켓 및 연결 된 파일 핸들 등의 모든 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources that are used by the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 되는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Object.Finalize%2A&gt;메서드.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 로 설정 하는 명명 되지 않은 부울 매개 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with the unnamed Boolean parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;호출 <ph id="ph1">`Dispose`</ph> 로 설정 명명 되지 않은 부울 매개 변수와 함께 <ph id="ph2">`false`</ph>합니다.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the unnamed Boolean parameter is <ph id="ph1">`true`</ph>, this method releases all resources that are held by any managed objects that this &lt;xref:System.Printing.PrintQueueStream&gt; references.</source>
          <target state="translated">부울 매개 변수 명명 되지 않은 경우 <ph id="ph1">`true`</ph>,이 메서드는 관리 개체가 보유 하 고 있는 모든 리소스를 해제 합니다.이 &lt;xref:System.Printing.PrintQueueStream&gt;참조.&lt;/xref:System.Printing.PrintQueueStream&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose()`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndWrite must be called exactly once on every &lt;xref:System.IAsyncResult&gt; that is returned from a call to &lt;xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt; &lt;xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;.&lt;/xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt; 에 대 한 호출에서 반환 되는&lt;/xref:System.IAsyncResult&gt; 모든 대해 EndWrite는 한 번만 호출 해야</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A reference to the pending asynchronous I/O request.</source>
          <target state="translated">보류 중인 비동기 I/O 요청에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enables a <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to attempt to free resources and perform other cleanup operations before the <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is reclaimed by garbage collection.</source>
          <target state="translated">수 있도록는 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 리소스를 해제 하 고 다른 정리 작업 하기 전에 수행할 하려고 하는 <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 가비지 수집에서 회수 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A&gt; method.</source>
          <target state="translated">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 <ph id="ph1">`Finalize`</ph> 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 &lt;xref:System.GC.SuppressFinalize%2A&gt;메서드.&lt;/xref:System.GC.SuppressFinalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Finalize 메서드 및 소멸자<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>관리 되지 않는 리소스 정리<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, 및 <bpt id="p3">[</bpt>Finalize 메서드를 재정의<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Clears all the buffers for this stream and writes any buffered data to the underlying device.</source>
          <target state="translated">이 스트림에 대 한 모든 버퍼를 지우고 버퍼링 된 모든 데이터가 내부 장치에 씁니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Enables the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to respond to the packaging progress by handling the <bpt id="p2">&lt;xref href="System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하도록 설정 된 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 패키징 진행 상황을 처리 하 여 응답할 수는 <bpt id="p2">&lt;xref href="System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The source of the event.</source>
          <target state="translated">이벤트의 소스입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets the ID number of the print job.</source>
          <target state="translated">인쇄 작업의 ID 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; that represents an ID number.</source>
          <target state="translated">&lt;xref:System.Int32&gt;ID 번호를 나타내는입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets the length of the stream in bytes.</source>
          <target state="translated">바이트 스트림 길이 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int64&gt; that represents the length of the stream in bytes.</source>
          <target state="translated">&lt;xref:System.Int64&gt;바이트에서 스트림의 길이 나타내는입니다.&lt;/xref:System.Int64&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets the current read/write position in the stream.</source>
          <target state="translated">스트림에서 현재 읽기/쓰기 위치를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int64&gt; that represents the current position in the stream.</source>
          <target state="translated">&lt;xref:System.Int64&gt;스트림 내의 현재 위치를 나타내는입니다.&lt;/xref:System.Int64&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.</source>
          <target state="translated">스트림에서 바이트 시퀀스를 읽고 읽은 바이트 수 만큼 스트림에서 읽기/쓰기 위치를 앞으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.</source>
          <target state="translated">반환 값은 대부분의 바이트를 현재 사용할 수 없는 경우 요청 된 바이트 수보다 작을 수 있습니다. 또는 읽기/쓰기 위치가 스트림 끝에 있으면 수 영 (0) 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method returns, <ph id="ph1">`buffer`</ph> contains the specified byte array and the values between <ph id="ph2">`offset`</ph> and (offset + count - 1) are replaced by the bytes that are read from the source.</source>
          <target state="translated">이 메서드가 반환 될 때 <ph id="ph1">`buffer`</ph> 사이의 값을 지정된 된 바이트 배열을 포함 <ph id="ph2">`offset`</ph> 및 (오프셋 + 개수-1) 원본에서 읽은 바이트로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An array of bytes.</source>
          <target state="translated">바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.</source>
          <target state="translated">스트림에서 읽은 데이터를 저장 하기 시작 하려는 버퍼의&amp;0;부터 시작 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to be read from the stream.</source>
          <target state="translated">스트림에서 읽을 바이트의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; that holds the total number of bytes that are read into the buffer.</source>
          <target state="translated">&lt;xref:System.Int32&gt;버퍼로 읽어 온 바이트의 총 수를 보유 하는.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Sets the read/write position within the stream.</source>
          <target state="translated">스트림 내에서 읽기/쓰기 위치를 설정합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A byte offset that is relative to the origin parameter.</source>
          <target state="translated">원본 매개 변수에 상대적인 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.IO.SeekOrigin&gt; that indicates the reference point that is used to obtain the new position.</source>
          <target state="translated">형식의 값 &lt;xref:System.IO.SeekOrigin&gt;는 새 위치를 가져오는 데 사용 되는 참조 지점을 나타내는.&lt;/xref:System.IO.SeekOrigin&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int64&gt; that represents the new read/write position.</source>
          <target state="translated">&lt;xref:System.Int64&gt;새 읽기/쓰기 위치를 나타내는입니다.&lt;/xref:System.Int64&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Sets the length of the stream.</source>
          <target state="translated">스트림의 길이 설정합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>A stream must support both writing and seeking for SetLength to work.</source>
          <target state="translated">스트림이 쓰기와 작동 하도록 SetLength 검색을 모두 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Printing.PrintQueueStream.CanWrite%2A&gt; property to determine whether the current instance supports writing, and use the &lt;xref:System.Printing.PrintQueueStream.CanSeek%2A&gt; property to determine whether seeking is supported.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Printing.PrintQueueStream.CanWrite%2A&gt;속성을 현재 인스턴스가 쓰기를 지원 하는지 확인 하 고 사용 하 여는 &lt;xref:System.Printing.PrintQueueStream.CanSeek%2A&gt;검색을 지원 하는지 여부를 결정 하는 속성.&lt;/xref:System.Printing.PrintQueueStream.CanSeek%2A&gt; &lt;/xref:System.Printing.PrintQueueStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The needed length, in bytes, of the current stream.</source>
          <target state="translated">현재 스트림의 원하는 길이 바이트입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.</source>
          <target state="translated">스트림에 바이트 시퀀스를 쓰고 쓸 바이트 수 만큼 스트림에서 읽기/쓰기 위치를 앞으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An array of bytes from which to copy to the stream.</source>
          <target state="translated">스트림에 복사할 바이트의 배열입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in the <ph id="ph1">`buffer`</ph> where you want to begin copying bytes to the stream.</source>
          <target state="translated">0부터 시작 하는 바이트 오프셋은 <ph id="ph1">`buffer`</ph> 스트림에 바이트 복사를 시작 하려면.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The number of bytes to write to the stream.</source>
          <target state="translated">스트림에 쓸 바이트 수입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>