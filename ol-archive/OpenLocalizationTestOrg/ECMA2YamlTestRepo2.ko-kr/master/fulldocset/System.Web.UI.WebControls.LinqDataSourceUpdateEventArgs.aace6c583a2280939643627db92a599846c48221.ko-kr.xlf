<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9449f1b2530f887d13eaf6106e6fc952d8cfe41a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ea25b5e9239f24ffcc3c2218d62900ff2d3fc49</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac46f910eedf5a0f401e64d85ad77d943d286e58</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource.Updating"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 데이터를 제공는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource.Updating"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LinqDataSourceUpdateEventArgs object is passed to any event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt; event.</source>
          <target state="translated">LinqDataSourceUpdateEventArgs 개체에 대 한 모든 이벤트 처리기에 전달 되는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the LinqDataSourceUpdateEventArgs object to examine the data before the update operation is executed in the data source.</source>
          <target state="translated">데이터 원본에서 업데이트 작업이 실행 되기 전에 데이터를 검사할 수 LinqDataSourceUpdateEventArgs 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then validate the data, examine validation exceptions thrown by the data class, or change a value before the update.</source>
          <target state="translated">그런 다음 데이터 유효성 검사, 데이터 클래스에서 throw 되는 유효성 검사 예외를 검사 하거나 변경할 수 있습니다는 값을 업데이트 하기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also cancel the update operation.</source>
          <target state="translated">업데이트 작업을 취소할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt; object contains the data that was originally retrieved from the data source.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;개체를 원래 데이터 원본에서 데이터를 포함 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt; object contains the data that will be saved in the data source during the update operation.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;개체 업데이트 작업 중 데이터 원본에 저장 될 데이터를 포함 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object that represents the data source throws a validation exception before updating the data, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt; property contains an instance of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; class.</source>
          <target state="translated">데이터 소스를 나타내는 개체 &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt; &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;클래스&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; 의 인스턴스를 포함 하는 속성&lt;/xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt; 데이터를 업데이트 하기 전에 유효성 검사 예외를 throw 하는 경우</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve all the validation exceptions through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt; property.</source>
          <target state="translated">통해 모든 유효성 검사 예외를 검색할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no validation exception is thrown, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt; property contains <ph id="ph1">`null`</ph>.</source>
          <target state="translated">유효성 검사 예외가 throw 되 면는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;속성 포함 <ph id="ph1">`null`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you handle the validation exceptions and do not want the exception to be re-thrown, set the &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">유효성 검사 예외를 처리 하 고 예외를 다시 throw 하지 않을 경우에 설정 된 &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;속성을 <ph id="ph1">`true`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control stores the original values from the data source in view state on the Web page, except those whose &lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt; attribute is marked as <ph id="ph1">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">기본적으로는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어 원래 값을 데이터 원본에서 보기에 상태 저장 제외 하 고 웹 페이지에서 해당 &lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;특성으로 표시 되어 <ph id="ph1">`UpdateCheck.Never`</ph>.&lt;/xref:System.Data.Linq.Mapping.ColumnAttribute&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>LINQ to SQL automatically checks the integrity of the data before updating the data.</source>
          <target state="translated">LINQ to SQL은 자동으로 데이터를 업데이트 하기 전에 데이터의 무결성을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does this by comparing the current values in the data source with the original values stored in view state.</source>
          <target state="translated">뷰 상태에 저장 된 원래 값으로 데이터 원본에 있는 현재 값을 비교 하 여 수행 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>LINQ to SQL raises an exception if the values in the data source have changed.</source>
          <target state="translated">LINQ to SQL 데이터 원본에 있는 값 변경 된 경우 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can perform additional data validation by creating a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt; event.</source>
          <target state="translated">에 대 한 처리기를 만들어 추가적인 데이터 유효성 검사를 수행할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified exception.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 예외 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The exception that occurred when validating the data to update.</source>
          <target state="translated">업데이트할 데이터 유효성을 검사할 때 발생 한 예외입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An object of the type specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt; property that contains the initial values that were retrieved from the data source.</source>
          <target state="translated">에 지정 된 형식의 개체는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;데이터 원본에서 검색 된 초기 값을 포함 하는 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An object of the type specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt; property that contains the values that will be saved in the data source.</source>
          <target state="translated">에 지정 된 형식의 개체는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;데이터 원본에 저장 될 값을 포함 하는 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the exception that was thrown while the data was being validated before the update operation.</source>
          <target state="translated">업데이트 작업 전의 데이터 유효성을 검사 하는 동안 throw 된 예외를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a validation exception is raised before the update operation is performed, the exception is stored in the Exception property.</source>
          <target state="translated">업데이트 작업을 수행 하기 전에 유효성 검사 예외가 발생 하는 경우 예외는 Exception 속성에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>In an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt; event, you can retrieve the exception through the Exception property.</source>
          <target state="translated">에 대 한 이벤트 처리기에는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;이벤트, 예외 속성을 통해 예외를 검색할 수 있습니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The exception, if an error occurred; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">오류가 발생 하는 경우 해당 예외 그렇지 않으면 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</source>
          <target state="translated">예외가 처리 되었는지 여부와 그 해야 throw 되지 않도록 다시를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt; event to examine validation exceptions that occurred before the update operation.</source>
          <target state="translated">에 대 한 이벤트 처리기를 만들 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;업데이트 작업 이전에 수행 된 유효성 검사 예외를 확인 하려면.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you handle the exception and do not want it to be thrown again, set the ExceptionHandled property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">예외를 처리 하 고 다시 throw 하 여 원하지 않는 경우 ExceptionHandled 속성을 설정 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the ExceptionHandled property to <ph id="ph1">`true`</ph>, the exception will be propagated to the next event handler in the call stack.</source>
          <target state="translated">ExceptionHandled 속성을 설정 하지 않는 경우 <ph id="ph1">`true`</ph>, 예외 호출 스택에 있는 다음 이벤트 처리기에 전파 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the exception was handled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>예외가 처리 되었습니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the object that contains the values that will be saved in the data source.</source>
          <target state="translated">데이터 원본에 저장 될 값을 포함 하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt; event and retrieve the NewObject property to validate the data.</source>
          <target state="translated">에 대 한 이벤트 처리기를 만들고는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;이벤트 및 검색에서 데이터 유효성 검사 NewObject 속성을 포함 하 고.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also change the data or cancel the update operation.</source>
          <target state="translated">데이터를 변경 하거나 업데이트 작업을 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object of the type specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt; property that contains the data to save.</source>
          <target state="translated">에 지정 된 형식의 개체는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;저장 하려면 데이터를 포함 하는 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets the object that contains the values that were originally retrieved from the data source.</source>
          <target state="translated">원래 데이터 원본에서 검색 된 값이 포함 된 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the OriginalObject property to check the original values against the current values in the data source and to cancel the update operation or take other action.</source>
          <target state="translated">데이터 원본에 있는 현재 값에 대 한 원래 값을 확인 하 고 업데이트 작업을 취소 하거나 다른 작업을 수행할를 OriginalObject 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OriginalObject property contains values for only the properties that are persisted in view state in the Web page.</source>
          <target state="translated">속성에 대해서는 값을 포함 하는 속성 OriginalObject 뷰에서 웹 페이지에는 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>A property is persisted under these circumstances:      -   When it is displayed in a data-bound control.</source>
          <target state="translated">이러한 경우에는 속성은 유지:-이 데이터 바인딩된 컨트롤에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   When the &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=fullName&gt; property of the &lt;xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=fullName&gt; attribute is set to <ph id="ph1">`Always`</ph> or <ph id="ph2">`WhenChanged`</ph>.</source>
          <target state="translated">-는 &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=fullName&gt;의 속성은 &lt;xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=fullName&gt;특성이로 설정 된 <ph id="ph1">`Always`</ph> 또는 <ph id="ph2">`WhenChanged`</ph>.&lt;/xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=fullName&gt; &lt;/xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A&gt; property is set to <ph id="ph1">`Never`</ph> and the value is not displayed in a data-bound control, the value is not stored in the Web page.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A&gt;속성이 <ph id="ph1">`Never`</ph> 및 데이터 바인딩된 컨트롤에는 값이 표시 되지, 웹 페이지에는 값이 저장 되지 않습니다.&lt;/xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, it cannot be assigned to the OriginalObject property.</source>
          <target state="translated">이 경우 OriginalObject 속성에 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An object of the type specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt; property that contains the data that was retrieved from the data source.</source>
          <target state="translated">에 지정 된 형식의 개체는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;데이터 원본에서 검색 된 데이터를 포함 하는 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>