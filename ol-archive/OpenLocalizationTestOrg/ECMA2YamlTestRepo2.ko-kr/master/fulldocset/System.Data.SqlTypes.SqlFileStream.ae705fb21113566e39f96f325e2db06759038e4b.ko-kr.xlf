<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0fbe1474b80238431b358b91c8f9c975727d6a40</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.SqlTypes.SqlFileStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc5a7f78e1dd0214ffc36362f74e5067e216b77e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bf291f2e6258e871507bc2ebacc0b09eb7747d7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes SQL Server data that is stored with the FILESTREAM column attribute as a sequence of bytes.</source>
          <target state="translated">SQL Server 데이터 바이트의 시퀀스로 저장 된 FILESTREAM 열 특성을 노출 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SqlFileStream class is used to work with <ph id="ph1">`varbinary(max)`</ph> data stored with the FILESTREAM attribute in a SQL Server 2008 database.</source>
          <target state="translated">SqlFileStream 클래스 작업에 사용 되는 <ph id="ph1">`varbinary(max)`</ph> SQL Server 2008 데이터베이스에 FILESTREAM 특성이 있는 저장 된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must install the .NET Framework 3.5 SP1 (or later) to use &lt;xref:System.Data.SqlTypes.SqlFileStream&gt; to work with FILESTREAM data.</source>
          <target state="translated">.NET Framework 3.5 s p 1을 설치 해야 합니다 (또는 이상) 사용 하도록 &lt;xref:System.Data.SqlTypes.SqlFileStream&gt;FILESTREAM 데이터에 사용할 수 있습니다.&lt;/xref:System.Data.SqlTypes.SqlFileStream&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying the FILESTREAM attribute on a <ph id="ph1">`varbinary(max)`</ph> column causes SQL Server to store the data in the local NTFS file system instead of in the database file.</source>
          <target state="translated">특성에 FILESTREAM을 지정 하는 <ph id="ph1">`varbinary(max)`</ph> 열 사용 하면 SQL Server 데이터베이스 파일에 로컬 NTFS 파일 시스템 대신에 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transact-SQL statements provide data manipulation capabilities within the server, and Win32 file system interfaces provide streaming access to the data.</source>
          <target state="translated">서버, 데이터 조작 기능을 제공 하는 TRANSACT-SQL 문 및 Win32 파일 시스템 인터페이스는 데이터에 대 한 스트리밍 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Individual files stored in a FILESTREAM column cannot be opened directly from the NTFS file system.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; FILESTREAM 열에 저장 된 개별 파일은 NTFS 파일 시스템에서 직접 열 수 없습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Streaming FILESTREAM data works only in the context of a SQL Server transaction.</source>
          <target state="translated">스트리밍 FILESTREAM 데이터는 SQL Server 트랜잭션 컨텍스트 에서만에서 작동 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SqlFileStream class is derived from the &lt;xref:System.IO.Stream&gt; class, which represents an abstraction of a sequence of bytes from some arbitrary data source such as a file or a block of memory.</source>
          <target state="translated">SqlFileStream 클래스에서 파생 된 &lt;xref:System.IO.Stream&gt;클래스 파일 또는 메모리 블록을 등 임의의 데이터 원본의 바이트 시퀀스에 대 한 추상화를 나타냅니다.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can read from a FILESTREAM by transferring data from a stream into a data structure such as an array of bytes.</source>
          <target state="translated">스트림에서 바이트 배열과 같은 데이터 구조에 데이터를 전송 하 여 FILESTREAM에서 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can write to a FILESTREAM by transferring the data from a data structure into a stream.</source>
          <target state="translated">FILESTREAM 데이터 구조에서 데이터를 스트림으로 전송 하 여 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also seek within the stream, which allows you to query and modify data at the current position within the stream.</source>
          <target state="translated">또한 쿼리 및 스트림 내의 현재 위치에서 데이터를 수정할 수 있는 스트림 내에서 검색 수입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For conceptual documentation and code examples, see <bpt id="p1">[</bpt>FILESTREAM Data<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">개념 설명서 및 코드 예제에 대 한 참조 <bpt id="p1">[</bpt>FILESTREAM 데이터<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For documentation about setting up and configuring FILESTREAM data on SQL Server,  see <bpt id="p1">[</bpt>Designing and Implementing FILESTREAM Storage<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=121499)</ept> in SQL Server 2008 Books Online.</source>
          <target state="translated">설정 하 고 SQL Server에서 FILESTREAM 데이터를 구성 하는 방법에 대 한 설명서를 참조 하십시오. <bpt id="p1">[</bpt>and Implementing FILESTREAM<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=121499)</ept> SQL Server 2008 온라인 설명서의 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown, any open transactions should be rolled back.</source>
          <target state="translated">예외가 throw 되 면 열려 있는 모든 트랜잭션은 롤백해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, data loss can occur.</source>
          <target state="translated">그렇지 않으면 데이터가 손실 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The logical path to the file.</source>
          <target state="translated">파일에 논리 경로입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.</source>
          <target state="translated">경로는 테이블의 기본 FILESTREAM 열에 대해 TRANSACT-SQL Pathname 함수를 사용 하 여 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The transaction context for the <bpt id="p1">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 트랜잭션 컨텍스트는 <bpt id="p1">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.</source>
          <target state="translated">응용 프로그램은 GET_FILESTREAM_TRANSACTION_CONTEXT 메서드를 호출 하 여 반환 된 바이트 배열을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The access mode to use when opening the file.</source>
          <target state="translated">파일을 열 때 사용할 액세스 모드입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Supported <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values are <bpt id="p2">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Supported <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values are <bpt id="p2">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When using <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Read" name="FileAccess.Read" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object can be used to read all of the existing data.</source>
          <target state="translated">사용 하는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Read" name="FileAccess.Read" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체의 모든 기존 데이터를 읽는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When using <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Write" name="FileAccess.Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> points to a zero byte file.</source>
          <target state="translated">사용 하는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Write" name="FileAccess.Write" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 은&amp;0; 바이트 파일을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Existing data will be overwritten when the object is closed and the transaction is committed.</source>
          <target state="translated">개체가 닫히고 트랜잭션이 커밋되면 기존 데이터를 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When using <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.ReadWrite" name="FileAccess.ReadWrite" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> points to a file which has all the existing data in it.</source>
          <target state="translated">사용 하는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.ReadWrite" name="FileAccess.ReadWrite" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 기존의 모든 데이터에 표시 되는 파일을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The handle is positioned at the beginning of the file.</source>
          <target state="translated">핸들은 파일의 시작 부분에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can use one of the <bpt id="p1">&lt;xref uid="langword_csharp_System.IO" name="System.IO" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_Seek" name="Seek" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> methods to move the handle position within the file to write or append new data.</source>
          <target state="translated">하나를 사용할 수는 <bpt id="p1">&lt;xref uid="langword_csharp_System.IO" name="System.IO" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_Seek" name="Seek" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 핸들 위치를 쓰거나 새 데이터를 첨부할 파일 내에서 이동 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is a null reference, or <ph id="ph2">&lt;code&gt;transactionContext&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>가 null 참조 또는 <ph id="ph2">&lt;code&gt;transactionContext&lt;/code&gt;</ph> null입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The file cannot be found.</source>
          <target state="translated">파일을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정 된 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept> 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The access requested is not permitted by the operating system for the specified path.</source>
          <target state="translated">지정된 된 경로 대 한 운영 체제에서 요청 된 액세스를 허용 하지는.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.</source>
          <target state="translated">Write 또는 ReadWrite 액세스를 지정 하 고 파일 또는 디렉터리가 읽기 전용 액세스를 위해 설정 된 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.</source>
          <target state="translated">NtCreateFile 실패 오류 코드가 ERROR_SHARING_VIOLATION으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown, any open transactions should be rolled back.</source>
          <target state="translated">예외가 throw 되 면 열려 있는 모든 트랜잭션은 롤백해야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, data loss can occur.</source>
          <target state="translated">그렇지 않으면 데이터가 손실 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The logical path to the file.</source>
          <target state="translated">파일에 논리 경로입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.</source>
          <target state="translated">경로는 테이블의 기본 FILESTREAM 열에 대해 TRANSACT-SQL Pathname 함수를 사용 하 여 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The transaction context for the <bpt id="p1">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 트랜잭션 컨텍스트는 <bpt id="p1">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When set to null, an implicit transaction will be used for the <bpt id="p1">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">암시적 트랜잭션 null로 설정에 사용할 때의 <bpt id="p1">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.</source>
          <target state="translated">응용 프로그램은 GET_FILESTREAM_TRANSACTION_CONTEXT 메서드를 호출 하 여 반환 된 바이트 배열을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The access mode to use when opening the file.</source>
          <target state="translated">파일을 열 때 사용할 액세스 모드입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Supported <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values are <bpt id="p2">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Supported <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values are <bpt id="p2">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When using <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Read" name="FileAccess.Read" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object can be used to read all of the existing data.</source>
          <target state="translated">사용 하는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Read" name="FileAccess.Read" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체의 모든 기존 데이터를 읽는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When using <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Write" name="FileAccess.Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> points to a zero byte file.</source>
          <target state="translated">사용 하는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Write" name="FileAccess.Write" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 은&amp;0; 바이트 파일을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Existing data will be overwritten when the object is closed and the transaction is committed.</source>
          <target state="translated">개체가 닫히고 트랜잭션이 커밋되면 기존 데이터를 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When using <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.ReadWrite" name="FileAccess.ReadWrite" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> points to a file which has all the existing data in it.</source>
          <target state="translated">사용 하는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.ReadWrite" name="FileAccess.ReadWrite" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_SqlFileStream" name="SqlFileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 기존의 모든 데이터에 표시 되는 파일을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The handle is positioned at the beginning of the file.</source>
          <target state="translated">핸들은 파일의 시작 부분에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can use one of the <bpt id="p1">&lt;xref uid="langword_csharp_System.IO" name="System.IO" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_Seek" name="Seek" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> methods to move the handle position within the file to write or append new data.</source>
          <target state="translated">하나를 사용할 수는 <bpt id="p1">&lt;xref uid="langword_csharp_System.IO" name="System.IO" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_Seek" name="Seek" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 핸들 위치를 쓰거나 새 데이터를 첨부할 파일 내에서 이동 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Specifies the option to use while opening the file.</source>
          <target state="translated">파일을 여는 동안 사용 하는 옵션을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Supported <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values are <bpt id="p2">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, and <bpt id="p5">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Supported <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values are <bpt id="p2">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, and <bpt id="p5">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The allocation size to use while creating a file.</source>
          <target state="translated">파일을 만드는 동안 사용할 할당 크기입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If set to 0, the default value is used.</source>
          <target state="translated">기본값 0으로 설정 사용 하는 경우 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is a null reference, or <ph id="ph2">&lt;code&gt;transactionContext&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>가 null 참조 또는 <ph id="ph2">&lt;code&gt;transactionContext&lt;/code&gt;</ph> null입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The file cannot be found.</source>
          <target state="translated">파일을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정 된 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept> 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The access requested is not permitted by the operating system for the specified path.</source>
          <target state="translated">지정된 된 경로 대 한 운영 체제에서 요청 된 액세스를 허용 하지는.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.</source>
          <target state="translated">Write 또는 ReadWrite 액세스를 지정 하 고 파일 또는 디렉터리가 읽기 전용 액세스를 위해 설정 된 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.</source>
          <target state="translated">NtCreateFile 실패 오류 코드가 ERROR_SHARING_VIOLATION으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">비동기 읽기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;속성을 현재 인스턴스에 읽기를 지원 하는지를 확인 합니다.&lt;/xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The buffer to read the data into.</source>
          <target state="translated">데이터를 읽어올 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data read from the stream.</source>
          <target state="translated">바이트 오프셋 <ph id="ph1">`buffer`</ph> 스트림에서 읽은 데이터를 쓰기 시작할입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">읽을 바이트 수의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the read is complete.</source>
          <target state="translated">읽기가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests</source>
          <target state="translated">다른 요청에서 특정 비동기 읽기 요청을 구별 하는 사용자 제공 개체</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous read, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중일 수 있는 비동기 읽기를 나타내는입니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Reading data is not supported on the stream.</source>
          <target state="translated">데이터 읽기는 스트림에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt; property to determine whether the current instance supports writing.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;속성을 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 합니다.&lt;/xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The buffer to write data from.</source>
          <target state="translated">데이터를 쓸 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> from which to begin writing.</source>
          <target state="translated">바이트 오프셋 <ph id="ph1">`buffer`</ph> 쓰기를 시작할입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">쓸 바이트의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the write is complete.</source>
          <target state="translated">쓰기 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">다른 요청에서 특정 비동기 쓰기 요청을 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous write, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중일 수 있는 비동기 쓰기를 나타내는입니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Writing data is not supported on the stream.</source>
          <target state="translated">데이터를 쓰기는 스트림에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">현재 스트림이 읽기를 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current stream supports reading; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재 스트림이 읽기를 지원 합니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">현재 스트림이 검색을 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current stream supports seeking; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재 스트림이 검색을 지원 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream can time out.</source>
          <target state="translated">현재 스트림이 시간 초과 될 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current stream can time out; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재 스트림이 시간 초과; 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">현재 스트림이 쓰기를 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current stream supports writing; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재 스트림이 쓰기를 지원 합니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Waits for the pending asynchronous read to complete.</source>
          <target state="translated">보류 중인 비동기 읽기가 완료 되기를 기다립니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The reference to the pending asynchronous request to finish.</source>
          <target state="translated">완료할 보류 중인 비동기 요청에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</source>
          <target state="translated">영 (0)과 요청한 바이트 수 사이의 스트림에서 읽은 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</source>
          <target state="translated">스트림은 스트림의 끝 에서만&amp;0;을 반환, 그렇지 않으면 사용할 수 있는 바이트가&amp;1; 바이트 이상이 될 때까지 하며 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; object did not come from the corresponding <bpt id="p1">&lt;xref uid="langword_csharp_BeginRead" name="BeginRead" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;는 해당 개체를 가져오지 않았거나 <bpt id="p1">&lt;xref uid="langword_csharp_BeginRead" name="BeginRead" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">처리 중인 비동기 I/O 요청에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; object did not come from the corresponding <bpt id="p1">&lt;xref uid="langword_csharp_BeginWrite" name="BeginWrite" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;는 해당 개체를 가져오지 않았거나 <bpt id="p1">&lt;xref uid="langword_csharp_BeginWrite" name="BeginWrite" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">리소스가 해제 되 고 가비지 수집기가 회수 하는 경우 다른 정리 작업이 수행 되도록는 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>clears all buffers for this stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">이 스트림에 대 한 모든 버퍼를 지우고 버퍼링 된 모든 데이터가 내부 장치에 쓰여지도록 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets a value indicating the length of the current stream in bytes.</source>
          <target state="translated">현재 스트림에 바이트에서의 길이 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int64&gt; indicating the length of the current stream in bytes.</source>
          <target state="translated">&lt;xref:System.Int64&gt;현재 스트림에 바이트에서의 길이 나타내는.&lt;/xref:System.Int64&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets the logical path of the <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> passed to the constructor.</source>
          <target state="translated">논리 경로 가져옵니다는 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 생성자에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A string value indicating the name of the <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이름을 나타내는 문자열 값은 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets or sets the position within the current stream.</source>
          <target state="translated">현재 스트림 내의 위치를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The current position within the <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">내의 현재 위치에서 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">현재 스트림에서 바이트 시퀀스를 읽고 읽은 바이트 수 만큼 스트림 내 위치를 앞으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt; property to determine whether the current instance supports writing.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;속성을 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 합니다.&lt;/xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>An array of bytes.</source>
          <target state="translated">바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</source>
          <target state="translated">이 메서드가 반환 될 때 버퍼는 지정 된 바이트 배열의 오프셋 및 (오프셋 + 개수-1) 사이 현재 원본 으로부터 읽어온 바이트로 교체 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</source>
          <target state="translated">현재 스트림에서 읽은 데이터를 저장 하기 시작 하는 버퍼는&amp;0;부터 시작 하는 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">현재 스트림에서 읽을 바이트의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">바이트은 버퍼 안으로 읽어들인 총 수입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</source>
          <target state="translated">이 바이트 수가 경우 요청 된 바이트 수를 현재 사용할 수 없는 스트림 끝에 도달 하면&amp;0; 보다 작을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The object does not support reading of data.</source>
          <target state="translated">개체가는 데이터 읽기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</source>
          <target state="translated">스트림에서 바이트를 읽고 및&amp;1; 바이트 만큼 스트림 내 위치를 앞으로 이동 하거나 스트림 끝 일 경우-1을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;속성을 현재 인스턴스에 읽기를 지원 하는지를 확인 합니다.&lt;/xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The unsigned byte cast to an &lt;xref:System.Int32&gt;, or -1 if at the end of the stream.</source>
          <target state="translated">로 캐스팅 된 부호 없는 바이트는 &lt;xref:System.Int32&gt;, 스트림 끝 일 경우-1.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The object does not support reading of data.</source>
          <target state="translated">개체가는 데이터 읽기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets a value, in milliseconds, that determines how long the stream will attempt to read before timing out.</source>
          <target state="translated">스트림이 시간 초과 전 읽기를 시도할 기간을 결정 하는 밀리초는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A value, in milliseconds, that determines how long the stream will attempt to read before timing out.</source>
          <target state="translated">스트림 결정 하는 값을 밀리초 단위로 시간 초과 전 읽기를 시도 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Sets the position within the current stream.</source>
          <target state="translated">현재 스트림 내의 위치를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A byte offset relative to the <ph id="ph1">`origin`</ph> parameter</source>
          <target state="translated">변수에 상대적인 바이트 오프셋은 <ph id="ph1">`origin`</ph> 매개 변수</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.IO.SeekOrigin&gt; indicating the reference point used to obtain the new position</source>
          <target state="translated">&lt;xref:System.IO.SeekOrigin&gt;새 위치를 가져오는 데 참조 지점을 나타내는&lt;/xref:System.IO.SeekOrigin&gt; 유형 값</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The new position within the current stream.</source>
          <target state="translated">현재 스트림 내의 새 위치입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Sets the length of the current stream.</source>
          <target state="translated">현재 스트림의 길이 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;속성을 현재 인스턴스에 읽기를 지원 하는지를 확인 합니다.&lt;/xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The desired length of the current stream in bytes.</source>
          <target state="translated">현재 스트림에 바이트에서의 원하는 길이입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The object does not support reading of data.</source>
          <target state="translated">개체가는 데이터 읽기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets or sets the transaction context for this <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 대 한 트랜잭션 컨텍스트를 가져오거나 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionContext</ph><ept id="p1">&lt;/code&gt;</ept> array that was passed to the constructor for this <bpt id="p2">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">transactionContext</ph> <ept id="p1">&lt;/code&gt;</ept> 이 생성자에 전달 된 배열이 <bpt id="p2">&lt;xref href="System.Data.SqlTypes.SqlFileStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</source>
          <target state="translated">현재 스트림에 바이트 시퀀스를 쓰고 쓴 바이트 수 만큼이 스트림 내의 현재 위치를 앞으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt; property to determine whether the current instance supports writing.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;속성을 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 합니다.&lt;/xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An array of bytes.</source>
          <target state="translated">바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This method copies <ph id="ph1">`count`</ph> bytes from <ph id="ph2">`buffer`</ph> to the current stream.</source>
          <target state="translated">이 메서드는 복사 <ph id="ph1">`count`</ph> 바이트 <ph id="ph2">`buffer`</ph> 를 현재 스트림에 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">0부터 시작 하는 바이트 오프셋 <ph id="ph1">`buffer`</ph> 를 현재 스트림에 바이트 복사를 시작 하는 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The number of bytes to be written to the current stream.</source>
          <target state="translated">현재 스트림에 쓸 바이트의 수입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The object does not support writing of data.</source>
          <target state="translated">개체는 데이터 쓰기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the stream and advances the position within the stream by one byte.</source>
          <target state="translated">바이트 스트림 내의 현재 위치를 쓰고 및 스트림 내의 위치를&amp;1; 바이트씩 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt; property to determine whether the current instance supports writing.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;속성을 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 합니다.&lt;/xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The byte to write to the stream.</source>
          <target state="translated">스트림에 쓸 바이트입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The object does not support writing of data.</source>
          <target state="translated">개체는 데이터 쓰기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Gets or sets a value, in milliseconds, that determines how long the stream will attempt to write before timing out.</source>
          <target state="translated">스트림이 시간 초과 전 쓰기를 시도할 기간을 결정 하는 밀리초는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A value, in milliseconds, that determines how long the stream will attempt to write before timing out.</source>
          <target state="translated">스트림 결정 하는 값을 밀리초 단위로 시간 초과 전 쓰기를 시도 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>