<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61d85c814ebf10b9f8d176a503774a85d867787d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Text.DecoderExceptionFallbackBuffer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90153ba3143364a531a13fb638b88abe59c4e33d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60410f3efe624f6cae99cb61aacf39842e90b0e7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.Text.DecoderFallbackException&gt; when an encoded input byte sequence cannot be converted to a decoded output character.</source>
          <target state="translated">Throw &lt;xref:System.Text.DecoderFallbackException&gt;인코딩된 입력된 바이트 시퀀스 없습니다 디코딩된 출력 문자로 변환할.&lt;/xref:System.Text.DecoderFallbackException&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Text.DecoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Text.DecoderExceptionFallbackBuffer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.Text.DecoderFallbackException&gt; when the input byte sequence cannot be decoded.</source>
          <target state="translated">Throw &lt;xref:System.Text.DecoderFallbackException&gt;입력된 바이트 시퀀스를 디코딩할 수 없습니다.&lt;/xref:System.Text.DecoderFallbackException&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The nominal return value is not used.</source>
          <target state="translated">명목 반환 값은 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Decoder.Convert%2A&gt; methods call Fallback if they encounter an unknown byte in their input.</source>
          <target state="translated">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;및 &lt;xref:System.Text.Decoder.Convert%2A&gt;메서드는 입력에 알 수 없는 바이트에 도달할 경우 대체 (fallback)를 호출 합니다.&lt;/xref:System.Text.Decoder.Convert%2A&gt; &lt;/xref:System.Text.Encoding.GetBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In response, the Fallback method always throws &lt;xref:System.Text.DecoderFallbackException&gt; and displays the input data.</source>
          <target state="translated">에 대 한 응답 대체 (fallback) 메서드에서 항상 throw &lt;xref:System.Text.DecoderFallbackException&gt;입력된 데이터를 표시 합니다.&lt;/xref:System.Text.DecoderFallbackException&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Fallback method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.</source>
          <target state="translated">대체 (fallback) 메서드는 명목상으로 입력된 바이트 시퀀스를 디코딩할 수 없는 경우 예외가 throw 됩니다 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An input array of bytes.</source>
          <target state="translated">바이트의 입력된 배열입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The index position of a byte in the input.</source>
          <target state="translated">입력에서 바이트의 인덱스 위치입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">없음.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>No value is returned because the Fallback method always throws an exception.</source>
          <target state="translated">대체 방법은 항상 예외를 throw 하기 때문에 아무 값도 반환 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The nominal return value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">명목 반환 값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.</source>
          <target state="translated">이 메서드는 항상 디코딩할 수 없는 입력된 바이트의 값과 인덱스 위치를 보고 하는 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Retrieves the next character in the exception data buffer.</source>
          <target state="translated">예외 데이터 버퍼의 다음 문자를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because &lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the GetNextChar method always returns the Unicode NULL character.</source>
          <target state="translated">때문에 &lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;는 실제 예외 데이터 버퍼가 없으므로 GetNextChar 메서드 항상 유니코드 NULL 문자를 반환 합니다.&lt;/xref:System.Text.DecoderExceptionFallbackBuffer&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The return value is always the Unicode character NULL (U+0000).</source>
          <target state="translated">반환 값은 항상 NULL 유니코드 문자 (U +&amp;0000;)입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Causes the next call to &lt;xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*&gt; to access the exception data buffer character position that is prior to the current position.</source>
          <target state="translated">다음 호출이 &lt;xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*&gt;현재 위치 앞 예외 데이터 버퍼 문자 위치에 액세스할 수 있습니다.&lt;/xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because &lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the MovePrevious method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">때문에 &lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;는 실제 예외 데이터 버퍼가 없으므로 MovePrevious 메서드는 항상 반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.Text.DecoderExceptionFallbackBuffer&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The return value is always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 값은 항상 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the current <bpt id="p1">&lt;xref href="System.Text.DecoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that remain to be processed.</source>
          <target state="translated">현재에서 문자 수를 가져옵니다 <bpt id="p1">&lt;xref href="System.Text.DecoderExceptionFallbackBuffer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 계속 처리 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because &lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the Remaining property always returns zero.</source>
          <target state="translated">때문에 &lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;는 실제 예외 데이터 버퍼가 없으므로 남은 속성은 항상&amp;0;을 반환 합니다.&lt;/xref:System.Text.DecoderExceptionFallbackBuffer&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The return value is always zero.</source>
          <target state="translated">반환 값은 항상&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>