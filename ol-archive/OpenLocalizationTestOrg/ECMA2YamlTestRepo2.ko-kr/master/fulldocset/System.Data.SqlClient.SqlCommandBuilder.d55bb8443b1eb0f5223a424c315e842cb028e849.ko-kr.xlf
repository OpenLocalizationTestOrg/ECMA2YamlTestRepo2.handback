<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c32d0b882a779f931e8bb875e7daf43dfad8da89</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.SqlClient.SqlCommandBuilder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7452ad8ae94deffe83471bc917ab113ca0ca15ac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">413c14e9eee4c274b4210d40c34fe1d651ed6509</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Automatically generates single-table commands that are used to reconcile changes made to a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the associated SQL Server database.</source>
          <target state="translated">변경 내용을 조정 하는 데 사용 되는 단일 테이블 명령을 자동으로 생성 한 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 와 연결 된 SQL Server 데이터베이스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; does not automatically generate the Transact-SQL statements required to reconcile changes made to a &lt;xref:System.Data.DataSet&gt; with the associated instance of SQL Server.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;변경 내용을 조정 하는 데 필요한 TRANSACT-SQL 문을 자동으로 생성 되지 않습니다는 &lt;xref:System.Data.DataSet&gt;와 SQL Server의 연결 된 인스턴스.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can create a SqlCommandBuilder object to automatically generate Transact-SQL statements for single-table updates if you set the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">그러나 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; 의 속성&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; 을 설정 하는 경우 단일 테이블 업데이트에 대 한 TRANSACT-SQL 문을 자동으로 생성 하는 SqlCommandBuilder 개체를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional Transact-SQL statements that you do not set are generated by the SqlCommandBuilder.</source>
          <target state="translated">그런 다음 설정 하지 않으면 모든 추가 TRANSACT-SQL 문이 SqlCommandBuilder에 의해 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SqlCommandBuilder registers itself as a listener for &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; events whenever you set the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt; property.</source>
          <target state="translated">SqlCommandBuilder 자체에 대 한 수신기로 등록 &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;설정할 때마다 이벤트는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;속성.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only associate one &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; or SqlCommandBuilder object with each other at one time.</source>
          <target state="translated">만 연결할 수 있습니다 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;개체나 SqlCommandBuilder 서로 한 번에.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generate INSERT, UPDATE, or DELETE statements, the SqlCommandBuilder uses the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property to retrieve a required set of metadata automatically.</source>
          <target state="translated">SqlCommandBuilder 사용 하 여 INSERT, UPDATE 또는 DELETE 문을 생성 하려면는 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;속성을 필수 메타 데이터 집합을 자동으로 검색 합니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; after the metadata has been retrieved, such as after the first update, you should call the &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; method to update the metadata.</source>
          <target state="translated">변경 하는 경우는 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;후 메타 데이터를 검색 한 첫 번째 업데이트 이후 호출 해야 하는 등의 &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;메서드 메타 데이터를 업데이트 합니다.&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph> 고유 열 이나 기본 키를 하나 이상 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If none are present, an <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> exception is generated, and the commands are not generated.</source>
          <target state="translated">아무 특성도 없으면는 <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> 예외가 생성 되 고 명령은 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SqlCommandBuilder also uses the &lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;, &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;, and &lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt; properties referenced by the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">SqlCommandBuilder 또한 사용 하 여는 &lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;, &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; &lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;에 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; 참조 되는 속성&lt;/xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt; 및&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user should call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if one or more of these properties are modified, or if the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; itself is replaced.</source>
          <target state="translated">호출 해야 합니다 &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;경우 또는 이러한 속성 중 하나 이상이 수정 되는 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;자체 바뀝니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise the &lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;, and &lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt; properties retain their previous values.</source>
          <target state="translated">그렇지 않은 경우는 &lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;, 및 &lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;속성 이전 값을 유지 합니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call &lt;xref:System.ComponentModel.Component.Dispose%2A&gt;, the SqlCommandBuilder is disassociated from the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;, and the generated commands are no longer used.</source>
          <target state="translated">호출 하는 경우 &lt;xref:System.ComponentModel.Component.Dispose%2A&gt;는 SqlCommandBuilder에서 분리는 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;, 생성된 된 명령을 더 이상 사용 됩니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the associated <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스와 연결 된 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; registers itself as a listener for &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; events that are generated by the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; specified in this property.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;자체에 대 한 수신기로 등록 &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;에서 생성 되는 이벤트는 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;이 속성에 지정 된.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new instance of &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;, any existing &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; associated with this &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is released.</source>
          <target state="translated">새 인스턴스를 만들 때 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;, 모든 기존 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;이 연관 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;해제 됩니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이름에서 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Sets or gets the <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an instance of the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">설정 하거나 가져옵니다는 <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스의 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Sets or gets a string used as the catalog separator for an instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">인스턴스는 카탈로그 구분 기호로 사용 되는 문자열을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A string that indicates the catalog separator for use with an instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">인스턴스와 함께 사용 하 여 카탈로그 구분 기호를 나타내는 스트링을 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체는 TRANSACT-SQL 문이 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; registers itself as a listener for &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; events that are generated by the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; specified in this property.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;자체에 대 한 수신기로 등록 &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;에서 생성 되는 이벤트는 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;이 속성에 지정 된.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new instance of &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;, any existing &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; associated with this &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is released.</source>
          <target state="translated">새 인스턴스를 만들 때 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;, 모든 기존 &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;이 연관 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;해제 됩니다.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Retrieves parameter information from the stored procedure specified in the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and populates the &lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt; collection of the specified <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 지정 된 저장된 프로시저에서 매개 변수 정보를 검색 된 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 채웁니다는 &lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;는 지정 된 컬렉션 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DeriveParameters`</ph> overwrites any existing parameter information for the <ph id="ph2">`SqlDbCommand`</ph>.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph>에 대 한 모든 기존 매개 변수 정보는 <ph id="ph2">`SqlDbCommand`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DeriveParameters`</ph> requires an additional call to the database to obtain the information.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph>정보를 가져올 데이터베이스를 추가로 호출을 해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">매개 변수 정보는 사전에 알고 있는 경우 정보를 명시적으로 설정 하 여 매개 변수 컬렉션을 채우는 데 더 효율적입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only use <ph id="ph1">`DeriveParameters`</ph> with stored procedures.</source>
          <target state="translated">만 사용할 수 있습니다 <ph id="ph1">`DeriveParameters`</ph> 저장된 프로시저와 함께 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> with extended stored procedures.</source>
          <target state="translated">사용할 수 없습니다 <ph id="ph1">`DeriveParameters`</ph> 확장된 저장된 프로시저를 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> to populate the &lt;xref:System.Data.SqlClient.SqlParameterCollection&gt; with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">사용할 수 없습니다 <ph id="ph1">`DeriveParameters`</ph> 채우는 데는 &lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;임의의 Transact SQL 문, 매개 변수가 있는 SELECT 문 처럼.&lt;/xref:System.Data.SqlClient.SqlParameterCollection&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>구성 매개 변수 및 매개 변수 데이터 형식<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 있는 매개 변수 정보 파생 되어야 하는 저장된 프로시저를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The derived parameters are added to the &lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt; collection of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생 된 매개 변수를 추가 &lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;의 컬렉션은 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The command text is not a valid stored procedure name.</source>
          <target state="translated">명령 텍스트가 잘못 된 저장된 프로시저 이름이 아닙니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions on the database.</source>
          <target state="translated">자동으로 생성 된 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터베이스에서 삭제를 수행 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can use the GetDeleteCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">반환 하기 때문에 응용 프로그램 문제 해결을 위해 GetDeleteCommand 방법을 사용할 수는 &lt;xref:System.Data.SqlClient.SqlCommand&gt;실행할 개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use GetDeleteCommand as the basis of a modified command.</source>
          <target state="translated">또한 수정 된 명령 기반으로 GetDeleteCommand를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might call GetDeleteCommand and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">GetDeleteCommand를 호출 하 고 수정 &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;값을 명시적으로 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; 에 설정할&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; 수 예를 들어</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;문을 어떤 식으로든에서 변경 하는 경우.&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the GetDeleteCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">그렇지 않은 경우는 GetDeleteCommand 됩니다 여전히 정보를에서 사용는 이전 문을 올바르지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetDeleteCommand.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;또는 GetDeleteCommand.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions.</source>
          <target state="translated">자동으로 생성 된 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삭제를 수행 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform deletions on the database.</source>
          <target state="translated">자동으로 생성 된 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터베이스에서 삭제를 수행 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">응용 프로그램이 사용할 수는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 &lt;xref:System.Data.SqlClient.SqlCommand&gt;실행할 개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;의 수정 된 명령 기반으로 합니다.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might call &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">예를 들어 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;수정 &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;값을 명시적으로 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; 를 설정&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; 하 고&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; 을 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;문을 어떤 식으로든에서 변경 하는 경우.&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">그렇지 않은 경우는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;.</source>
          <target state="translated">SQL 문은 처음으로 생성 됩니다는 응용 프로그램 중 하나 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;나 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 호출 하는 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, 다양 한 매개 변수 대.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">전달 <ph id="ph1">`true`</ph> 에 대 한는 <ph id="ph2">`useColumnsForParameterNames`</ph> 매개 변수에 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;대신 열 이름에 따라 매개 변수를 생성 합니다.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">다음 조건에 해당 하는 경우에이 작업은 성공:- &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;에서 반환 되는 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> 메서드를 호출 하 고 있는 &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;컬렉션이 지정 하 고 길이 생성 된 매개 변수 이름 보다 크거나 같은.&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection regular expression.</source>
          <target state="translated">-생성 된 매개 변수 이름에 지정 된 조건에 부합는 &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;에서 반환 되는 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> 메서드를 호출 하 고 있는 &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;변수.&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection is specified.</source>
          <target state="translated">-A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;에서 반환 되는 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> 메서드를 호출 하 고 있는 &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;컬렉션을 지정 합니다.&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names if possible.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 가능한 경우 열 이름이 일치 하는 매개 변수 이름을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 생성 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>등입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform deletions.</source>
          <target state="translated">자동으로 생성 된 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 삭제 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions on the database.</source>
          <target state="translated">자동으로 생성 된 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터베이스에서 삽입을 수행 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can use the GetInsertCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">반환 하기 때문에 응용 프로그램 문제 해결을 위해 GetInsertCommand 방법을 사용할 수는 &lt;xref:System.Data.SqlClient.SqlCommand&gt;실행할 개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use GetInsertCommand as the basis of a modified command.</source>
          <target state="translated">또한 수정 된 명령 기반으로 GetInsertCommand를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might call GetInsertCommand and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">GetInsertCommand를 호출 하 고 수정 &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;값을 명시적으로 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; 에 설정할&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; 수 예를 들어</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">TRANSACT-SQL 문을 처음을 생성 한 후 응용 프로그램이 명시적으로 호출 해야 &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;문을 어떤 식으로든에서 변경 하는 경우.&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the GetInsertCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">그렇지 않은 경우는 GetInsertCommand 됩니다 여전히 정보를에서 사용는 이전 문을 올바르지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetInsertCommand.</source>
          <target state="translated">TRANSACT-SQL 문을 처음으로 생성 됩니다는 응용 프로그램 중 하나를 호출 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;또는 GetInsertCommand.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions.</source>
          <target state="translated">자동으로 생성 된 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 삽입 하는 데 필요 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform insertions on the database.</source>
          <target state="translated">자동으로 생성 된 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터베이스에서 삽입을 수행 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">응용 프로그램이 사용할 수는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 &lt;xref:System.Data.SqlClient.SqlCommand&gt;실행할 개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;의 수정 된 명령 기반으로 합니다.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might call &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">예를 들어 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;수정 &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;값을 명시적으로 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; 를 설정&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; 하 고&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; 을 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">TRANSACT-SQL 문을 처음을 생성 한 후 응용 프로그램이 명시적으로 호출 해야 &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;문을 어떤 식으로든에서 변경 하는 경우.&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">그렇지 않은 경우는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;.</source>
          <target state="translated">TRANSACT-SQL 문은 처음으로 생성 됩니다는 응용 프로그램 중 하나 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;나 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 호출 하는 경우</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, 다양 한 매개 변수 대.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">전달 <ph id="ph1">`true`</ph> 에 대 한는 <ph id="ph2">`useColumnsForParameterNames`</ph> 매개 변수에 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;대신 열 이름에 따라 매개 변수를 생성 합니다.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">다음 조건에 해당 하는 경우에이 작업은 성공:- &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;에서 반환 되는 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> 메서드를 호출 하 고 있는 &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;컬렉션이 지정 하 고 길이 생성 된 매개 변수 이름 보다 크거나 같은.&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection regular expression.</source>
          <target state="translated">-생성 된 매개 변수 이름에 지정 된 조건에 부합는 &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;에서 반환 되는 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> 메서드를 호출 하 고 있는 &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;변수.&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection is specified.</source>
          <target state="translated">-A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;에서 반환 되는 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> 메서드를 호출 하 고 있는 &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;컬렉션을 지정 합니다.&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names if possible.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 가능한 경우 열 이름이 일치 하는 매개 변수 이름을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 생성 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>등입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform insertions.</source>
          <target state="translated">자동으로 생성 된 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삽입 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates on the database.</source>
          <target state="translated">자동으로 생성 된 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터베이스에서 업데이트를 수행 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can use the GetUpdateCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">반환 하기 때문에 응용 프로그램 문제 해결을 위해 GetUpdateCommand 방법을 사용할 수는 &lt;xref:System.Data.SqlClient.SqlCommand&gt;실행할 개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use GetUpdateCommand as the basis of a modified command.</source>
          <target state="translated">또한 수정 된 명령 기반으로 GetUpdateCommand를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might call GetUpdateCommand and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">GetUpdateCommand를 호출 하 고 수정 &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;값을 명시적으로 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; 에 설정할&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; 수 예를 들어</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">TRANSACT-SQL 문을 처음을 생성 한 후 응용 프로그램이 명시적으로 호출 해야 &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;문을 어떤 식으로든에서 변경 하는 경우.&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the GetUpdateCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">그렇지 않은 경우는 GetUpdateCommand 됩니다 여전히 정보를에서 사용는 이전 문을 올바르지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetUpdateCommand.</source>
          <target state="translated">TRANSACT-SQL 문을 처음으로 생성 됩니다는 응용 프로그램 중 하나를 호출 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;또는 GetUpdateCommand.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform updates.</source>
          <target state="translated">자동으로 생성 된 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates on the database.</source>
          <target state="translated">자동으로 생성 된 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터베이스에서 업데이트를 수행 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">응용 프로그램이 사용할 수는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 &lt;xref:System.Data.SqlClient.SqlCommand&gt;실행할 개체입니다.&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;의 수정 된 명령 기반으로 합니다.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might call &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">예를 들어 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;수정 &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;값을 명시적으로 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; 를 설정&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; 하 고&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; 을 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">TRANSACT-SQL 문을 처음을 생성 한 후 응용 프로그램이 명시적으로 호출 해야 &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;문을 어떤 식으로든에서 변경 하는 경우.&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">그렇지 않은 경우는 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;.</source>
          <target state="translated">TRANSACT-SQL 문은 처음으로 생성 됩니다는 응용 프로그램 중 하나 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;나 &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;.&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 호출 하는 경우</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, 다양 한 매개 변수 대.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">전달 <ph id="ph1">`true`</ph> 에 대 한는 <ph id="ph2">`useColumnsForParameterNames`</ph> 매개 변수에 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;대신 열 이름에 따라 매개 변수를 생성 합니다.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">다음 조건에 해당 하는 경우에이 작업은 성공:- &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;에서 반환 되는 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> 메서드를 호출 하 고 있는 &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;컬렉션이 지정 하 고 길이 생성 된 매개 변수 이름 보다 크거나 같은.&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection regular expression.</source>
          <target state="translated">-생성 된 매개 변수 이름에 지정 된 조건에 부합는 &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;에서 반환 되는 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> 메서드를 호출 하 고 있는 &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;변수.&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection is specified.</source>
          <target state="translated">-A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;에서 반환 되는 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> 메서드를 호출 하 고 있는 &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;컬렉션을 지정 합니다.&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names if possible.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 가능한 경우 열 이름이 일치 하는 매개 변수 이름을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 생성 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>등입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates.</source>
          <target state="translated">자동으로 생성 된 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트를 수행 하는 데 필요한 개체입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">제공 되는 올바른 카탈로그에서는 따옴표가 없는 식별자 올바른 반환 형식의 해당 식별자를 따옴표로 묶을 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">여기에 식별자에 포함 된 따옴표를 이스케이프 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The original unquoted identifier.</source>
          <target state="translated">원래 따옴표가 없는 식별자입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The quoted version of the identifier.</source>
          <target state="translated">따옴표 붙은 식별자의 버전입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">식별자에 포함 된 따옴표가 이스케이프 올바르게 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">시작 문자 또는 SQL Server 데이터베이스 개체와 같은 테이블 또는 열 이름에 포함 된 공백이 나 예약 된 토큰과 등의 문자를 지정할 때 사용할 문자를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The starting character or characters to use.</source>
          <target state="translated">시작 문자 또는 문자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.</source>
          <target state="translated">DELETE 명령을 생성 한 후 또는 삽입, 업데이트,이 속성을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">끝 문자 (들) 같은 테이블 또는 열 이름 공백 또는 예약 된 토큰과 같은 문자가 포함 된 SQL Server 데이터베이스 개체를 지정할 때 사용할 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The ending character or characters to use.</source>
          <target state="translated">끝 문자 (들) 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">삽입, 업데이트 또는 삭제 명령이 생성 한 후에이 속성을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">스키마 식별자는 다른 식별자와 구분 기호에 사용할 문자를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">일반적으로 데이터베이스 서버는 식별자에 대 한 스키마를 스키마 이름과 식별자 일부 문자로 구분 하 여 나타냅니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">예를 들어 SQL Server는 전체 식별자 Person.CustomerName, "Person" 스키마 이름이 고 "CustomerName"는 식별자 등을 만드는 마침표를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property lets developers modify this behavior.</source>
          <target state="translated">이 속성을 설정 개발자를이 동작을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">스키마 구분 기호로 사용할 문자입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          <target state="translated">따옴표 붙은 식별자가 제공 따옴표가 없는 올바른 형식의 해당 식별자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This includes correctly unescaping any embedded quotes in the identifier.</source>
          <target state="translated">여기에 식별자에 포함 된 따옴표를 올바르게 이스케이프 취소 됩니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">포함 된 따옴표 제거 하는 식별자입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The unquoted identifier, with embedded quotes properly unescaped.</source>
          <target state="translated">포함 된 따옴표가 이스케이프 되지 않은 제대로 따옴표가 없는 식별자입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>