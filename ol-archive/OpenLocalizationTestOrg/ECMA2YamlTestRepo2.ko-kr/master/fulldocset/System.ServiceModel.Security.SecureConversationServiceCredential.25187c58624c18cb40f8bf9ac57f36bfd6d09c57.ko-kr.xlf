<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebd56cc968183bb7e522f6acd8cca2a35ac51fe2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Security.SecureConversationServiceCredential.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8a0a7b13605327a94a5f8436a463d79158cd39a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e66880c7e7494ac10e27611cff7ce56032d606f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides credential settings for a secure conversation service.</source>
          <target state="translated">보안 대화 서비스에 대 한 자격 증명 설정을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</source>
          <target state="translated">보안 대화에서는 여러 메시지를 교환 하 고 보안을 유지 하려면 보안 컨텍스트 토큰 (SCT)를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SCT is shared among the communicating parties for the lifetime of a communications session.</source>
          <target state="translated">SCT는 통신 세션의 수명 동안 통신 당사자 간에 공유 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A service can issue two different kinds of SCTs:      -   The first is a session-based SCT that contains a unique id.</source>
          <target state="translated">서비스는 두 가지 종류의 Sct 발급할 수 있습니다:-첫 번째는 고유 id를 포함 하는 세션 기반 SCT입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</source>
          <target state="translated">메시지의 id를 전달 하 고 서비스에서 SCT id와 콘텐츠 (예: 클레임, 보안 키 및 등) 간을 매핑하는 상태 매핑 캐시를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</source>
          <target state="translated">제대로 작동 하는 클라이언트는 서비스가 캐시 리소스를 최적화할 수 있도록 SCT 취소를 보내야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you instantiate this class by calling &lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt; with the <ph id="ph1">`requireCancellation`</ph> parameter equal to <ph id="ph2">`true`</ph>, the SCT is issued in this manner.</source>
          <target state="translated">호출 하 여이 클래스를 인스턴스화하는 경우 &lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;와 <ph id="ph1">`requireCancellation`</ph> 매개 변수를 <ph id="ph2">`true`</ph>, SCT이 방식이으로 실행 됩니다.&lt;/xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The second is a self-contained SCT that resides in a cookie on the client.</source>
          <target state="translated">-두 번째는 클라이언트의 쿠키에 상주 하는 독립적인된 SCT입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</source>
          <target state="translated">이 SCT는 전체 상태 정보를 포함, 따라서 상태 관리 서비스에서 아니고 클라이언트의 SCT 취소가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is sometimes called a "cookie-mode" SCT.</source>
          <target state="translated">이 "쿠키 모드" SCT 라고도 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the SCT contains the entire state information, its size is larger than in the session-based case.</source>
          <target state="translated">SCT는 전체 상태 정보에 포함 되어 있으므로 해당 크기는 세션 기반 경우에서 보다 큰입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>With session-based SCTs, the service stores much of the state information.</source>
          <target state="translated">세션 기반 Sct와 함께 서비스 상태 정보를 저장합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</source>
          <target state="translated">그러나 독립적 이므로 서비스 수명이 사용할 수 있으며 서비스 종료 및 다시 시작 하더라도 지속 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets a collection of the &lt;xref:System.Type&gt; claims for cookie serialization.</source>
          <target state="translated">컬렉션을 가져옵니다는 &lt;xref:System.Type&gt;쿠키 serialization 위한 클레임.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To serialize claims into SCT cookies, <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> uses &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; as the default.</source>
          <target state="translated">클레임을 SCT 쿠키로 serialize 하는 데 <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> 사용 하 여 &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;기본값으로.&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the Claim resource is extensible, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> allows you to provide a list of known resource types.</source>
          <target state="translated">클레임 리소스는 확장할 수 있으므로 <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 알려진된 리소스 형식의 목록을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This assists the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</source>
          <target state="translated">이 지원의 &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;할 때 원래의 강력한 형식 개체를 반환할 수 있도록 하는 쿠키의 클레임을 역직렬화 하는 동안.&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A collection of the &lt;xref:System.Type&gt; claims for cookie serialization.</source>
          <target state="translated">컬렉션은 &lt;xref:System.Type&gt;쿠키 serialization 위한 클레임.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a customized <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityStateEncoder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for encoding and decoding cookie serialization.</source>
          <target state="translated">사용자 지정 설정 하거나 가져옵니다 <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityStateEncoder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인코딩 및 디코딩 쿠키 serialization에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</source>
          <target state="translated">"쿠키 모드" 서비스 발생 하는 클라이언트 보안 컨텍스트 토큰 (SCT) 쿠키의 형태로 클라이언트에 보안 상태를 유지 하기 위해 보유 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</source>
          <target state="translated">클라이언트는 서비스의 보호를 해제 하 고 요청 메시지를 확인 하는 방법을 알 수 있도록 요청 메시지에서 다시 쿠키를 보냅니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the SCT is often transmitted over a non-secure network, it must be protected.</source>
          <target state="translated">SCT는 비보안 네트워크를 통해 전송 되는 경우가, 보호 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> uses the &lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt; class to protect the cookie using the Data Protection API (DPAPI).</source>
          <target state="translated">기본적으로 <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> 사용 하 여는 &lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;(DPAPI (데이터 보호 API)를 사용 하 여 쿠키를 보호 하는 클래스입니다.&lt;/xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</source>
          <target state="translated">웹 팜 환경에서 작동 하도록 DPAPI에 대 한 모든 백 엔드 서비스는 동일한 도메인 사용자 계정으로 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</source>
          <target state="translated">즉,는 서비스가 웹 호스팅되는 경우 인터넷 정보 서비스 (IIS) 작업자 프로세스는 도메인 사용자로 실행 되도록 구성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property enables you to use a customized &lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt; to encrypt and decrypt the cookie and not depend on DPAPI.</source>
          <target state="translated">이 속성을 사용 하면 사용자 지정을 사용 하도록 &lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;를 암호화 하 고 쿠키를 암호 해독 DPAPI에 종속 되지 않습니다.&lt;/xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityStateEncoder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which is a customization of <bpt id="p2">&lt;xref href="System.ServiceModel.Security.DataProtectionSecurityStateEncoder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityStateEncoder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체는 사용자 지정의 <bpt id="p2">&lt;xref href="System.ServiceModel.Security.DataProtectionSecurityStateEncoder"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>