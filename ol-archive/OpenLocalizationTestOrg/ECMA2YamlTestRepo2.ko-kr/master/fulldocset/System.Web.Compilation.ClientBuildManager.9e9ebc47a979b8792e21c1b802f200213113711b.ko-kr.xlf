<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">740b118c4a91a6f7abc89628967f5fb01d6c2ed5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Compilation.ClientBuildManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c94eb3b02fb7c42613bbafdd3ed4702f4e54861b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65aaedd70277deb0e6ac687f72d41b723c0af11d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides compilation services for ASP.NET applications.</source>
          <target state="translated">ASP.NET 응용 프로그램에 대 한 컴파일 서비스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ClientBuildManager class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.</source>
          <target state="translated">ClientBuildManager 클래스 ASP.NET 웹 응용 프로그램을 컴파일 및 생성 된 어셈블리를 검색 하기 위한 메서드와 속성을 제공 합니다. 또는 소스 코드를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).</source>
          <target state="translated">클래스의 인스턴스는 클라이언트의 응용 프로그램 도메인에서 설정 및 Microsoft 인터넷 정보 서비스 (IIS) 외부에서 ASP.NET 빌드 시스템에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class can be used to develop customized tools for compiling Web applications.</source>
          <target state="translated">웹 응용 프로그램 컴파일을 위한 사용자 지정 된 도구를 개발 하는 클래스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command-line tool <ph id="ph1">`aspnet_compiler`</ph> uses the ClientBuildManager class.</source>
          <target state="translated">명령줄 도구 <ph id="ph1">`aspnet_compiler`</ph> ClientBuildManager 클래스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class without a specified target directory or precompilation flags.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 대상 디렉터리 또는 미리 컴파일 플래그 없이 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The virtual path to the application root.</source>
          <target state="translated">응용 프로그램 루트 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The physical path to the application root.</source>
          <target state="translated">응용 프로그램 루트를 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified target directory.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 대상 디렉터리를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.</source>
          <target state="translated">이 형식의 생성자가 미리 컴파일 대상 디렉터리를 지정 하므로 일반적으로 미리 컴파일에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The virtual path to the application root.</source>
          <target state="translated">응용 프로그램 루트 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The physical path to the application root.</source>
          <target state="translated">응용 프로그램 루트를 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The target directory for precompilation.</source>
          <target state="translated">미리 컴파일에 대 한 대상 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified target directory and compilation parameter.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 대상 디렉터리와 컴파일 매개 변수를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.</source>
          <target state="translated">미리 컴파일 대상 디렉터리와 미리 컴파일 플래그를 지정 하므로이 형식의 생성자가 일반적으로 미리 컴파일에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The virtual path to the application root.</source>
          <target state="translated">응용 프로그램 루트 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The physical path to the application root.</source>
          <target state="translated">응용 프로그램 루트를 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The target directory for precompilation.</source>
          <target state="translated">미리 컴파일에 대 한 대상 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Values that determine the precompilation behavior.</source>
          <target state="translated">미리 컴파일 동작을 결정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 가상 디렉터리, 소스 디렉터리, 대상 디렉터리, 컴파일 매개 변수 및 형식 설명 공급자를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The virtual path of the application root.</source>
          <target state="translated">응용 프로그램 루트의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The physical path of the application root.</source>
          <target state="translated">응용 프로그램 루트의 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The target directory for precompilation.</source>
          <target state="translated">미리 컴파일에 대 한 대상 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Values that determine the precompilation behavior.</source>
          <target state="translated">미리 컴파일 동작을 결정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The type-description provider to use.</source>
          <target state="translated">사용할 형식 설명 공급자입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.</source>
          <target state="translated">이 매개 변수는 Visual Studio의 멀티 타기 팅 인프라를 지 원하는 데 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.</source>
          <target state="translated">.NET Framework의 특정 버전에 대 한 필터링 된 형식에 대 한 메타 데이터를 검색 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Occurs when an application domain is shut down.</source>
          <target state="translated">응용 프로그램 도메인이 종료 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Occurs when an application domain is started.</source>
          <target state="translated">응용 프로그램 도메인을 시작할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Occurs when an application domain is unloaded.</source>
          <target state="translated">응용 프로그램 도메인이 언로드될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the physical path to the directory used for code generation.</source>
          <target state="translated">코드 생성에 사용 되는 디렉터리에 실제 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The directory for code generation is typically in the temporary ASP.NET files directory.</source>
          <target state="translated">코드 생성에 대 한 디렉터리는 일반적으로 임시 ASP.NET 파일 디렉터리에 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the directory path used for code generation.</source>
          <target state="translated">A &lt;xref:System.String&gt;코드 생성에 사용 되는 디렉터리 경로가 포함 된.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.</source>
          <target state="translated">App_Code 디렉터리에 파일, Global.asax 파일, 리소스 파일 및 웹 참조와 같은 응용 프로그램에 따라 파일을 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CompileApplicationDependencies method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.</source>
          <target state="translated">CompileApplicationDependencies 메서드를 사용 하면 리소스, 웹 참조, App_Code 디렉터리에 파일, App_Browsers 디렉터리에 있는 브라우저 파일 및 Global.asax 파일은 컴파일됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Compiles the file represented by the virtual path.</source>
          <target state="translated">가상 경로 나타내는 파일을 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The path to the file to be compiled.</source>
          <target state="translated">컴파일할 파일 경로입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.</source>
          <target state="translated">가상 경로 나타내는 파일을 컴파일하고 빌드에 대 한 상태 정보를 수신 하는 콜백 클래스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The path to the file to be compiled.</source>
          <target state="translated">컴파일할 파일 경로입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The object to receive status information from compilation.</source>
          <target state="translated">컴파일에서 상태 정보를 수신 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates an object in the application domain of the ASP.NET runtime.</source>
          <target state="translated">ASP.NET 런타임 응용 프로그램 도메인에서 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The type of object to be created.</source>
          <target state="translated">만들 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ASP.NET 런타임;의 응용 프로그램 도메인에 개체가 이미 만들어져 있는 경우 예외를 throw 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An object in the application domain of the ASP.NET runtime.</source>
          <target state="translated">ASP.NET 런타임 응용 프로그램 도메인에서 사용 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The object already exists in the application domain and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">failIfExists</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">응용 프로그램 도메인에 개체가 이미 및 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">failIfExists</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Generates code from the contents of a file.</source>
          <target state="translated">파일의 내용에서 코드를 생성합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">파일 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The contents of the file.</source>
          <target state="translated">파일의 내용입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">이 메서드가 반환 될 때 줄 pragma의 사전이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the generated code.</source>
          <target state="translated">A &lt;xref:System.String&gt;생성 된 코드가 포함 된.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</source>
          <target state="translated">CodeDOM 트리, 컴파일러 유형 및 가상 경로 의해 표시 되는 파일에 대 한 컴파일러 매개 변수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GenerateCodeCompileUnit method retrieves information needed to compile a file.</source>
          <target state="translated">GenerateCodeCompileUnit 메서드는 파일을 컴파일하는 데 필요한 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to a &lt;xref:System.CodeDom.CodeCompileUnit&gt; object as a return value, it returns three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">이외에 &lt;xref:System.CodeDom.CodeCompileUnit&gt;개체를 반환 값으로&amp;3; 개 반환 <ph id="ph1">`out`</ph> 매개 변수.&lt;/xref:System.CodeDom.CodeCompileUnit&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph> 매개 변수 생성 및 컴파일 파일에 대 한 공급자 유형을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph> 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.</source>
          <target state="translated"><ph id="ph1">`linePragmasTable`</ph> 매개 변수 줄 pragma의 사전이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">파일 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the codeDOM provider type used for code generation and compilation.</source>
          <target state="translated">이 메서드가 반환 될 때 코드 생성 및 컴파일을 사용 된 codeDOM 공급자 형식을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">이 메서드가 반환 될 때 파일을 컴파일하는 방법을 정의 하는 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">이 메서드가 반환 될 때 줄 pragma의 사전이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the given file.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</source>
          <target state="translated">내용, codeDOM 트리, 컴파일러 형식 및 가상 경로 의해 표시 되는 파일에 대 한 컴파일러 매개 변수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GenerateCodeCompileUnit method retrieves information needed to compile a file.</source>
          <target state="translated">GenerateCodeCompileUnit 메서드는 파일을 컴파일하는 데 필요한 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to a &lt;xref:System.CodeDom.CodeCompileUnit&gt; object as a return value, it returns three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">이외에 &lt;xref:System.CodeDom.CodeCompileUnit&gt;개체를 반환 값으로&amp;3; 개 반환 <ph id="ph1">`out`</ph> 매개 변수.&lt;/xref:System.CodeDom.CodeCompileUnit&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph> 매개 변수 생성 및 컴파일 파일에 대 한 공급자 유형을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph> 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.</source>
          <target state="translated"><ph id="ph1">`linePragmasTable`</ph> 매개 변수 줄 pragma의 사전이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">파일 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The contents of the file represented by the <ph id="ph1">`virtualPath`</ph> parameter.</source>
          <target state="translated">가 나타내는 파일의 콘텐츠는 <ph id="ph1">`virtualPath`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the codeDOM provider type used for code generation and compilation.</source>
          <target state="translated">이 메서드가 반환 될 때 코드 생성 및 컴파일을 사용 된 codeDOM 공급자 형식을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file represented by the <ph id="ph1">`virtualPath`</ph> parameter will be compiled.</source>
          <target state="translated">이 메서드가 반환 될 때 포함 하 여 파일을 표시 하는 방법을 정의 하는 속성은 <ph id="ph1">`virtualPath`</ph> 매개 변수 식이 컴파일됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">이 메서드가 반환 될 때 줄 pragma의 사전이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the given file.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets the directories with files that, when changed, cause the application domain to shut down.</source>
          <target state="translated">디렉터리 파일과 함께 가져옵니다을 변경 하면 응용 프로그램 도메인이 종료 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to files in specific top-level directories cause the application domain to shut down.</source>
          <target state="translated">특정 최상위 디렉터리에 파일 변경이 응용 프로그램 도메인이 종료 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.</source>
          <target state="translated">변경 내용을 검색 하는 Bin, App_Code, Global_Resources, 웹 참조 및 App_Browsers 디렉터리 내의 파일 모니터링 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>When changes are detected, the application domain is shut down.</source>
          <target state="translated">변경 내용이 검색 되 면 응용 프로그램 도메인이 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array containing the top-level directory names.</source>
          <target state="translated">A &lt;xref:System.String&gt;최상위 디렉터리 이름이 포함 된 배열.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets a collection of browser elements.</source>
          <target state="translated">브라우저 요소의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object contains browser names for the keys and &lt;xref:System.Web.UI.Triplet&gt; objects for the values.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;개체 키에 대 한 브라우저 이름을 포함 하 고 &lt;xref:System.Web.UI.Triplet&gt;값에 대 한 개체입니다.&lt;/xref:System.Web.UI.Triplet&gt; &lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Triplet&gt; objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.</source>
          <target state="translated">&lt;xref:System.Web.UI.Triplet&gt;각 개체에는 부모 브라우저 요소, 설명 및 브라우저 요소 트리의 깊이의 이름이 포함 되어 있습니다.&lt;/xref:System.Web.UI.Triplet&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; containing browser elements.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;브라우저 요소를 포함 합니다.&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.</source>
          <target state="translated">컴파일러 형식, 컴파일러 변수와.wsdl 파일과 같은 비 코드 파일에서 생성 된 코드 파일을 저장할 디렉터리에 대 한 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetCodeDirectoryInformation method retrieves information needed to build a code directory.</source>
          <target state="translated">GetCodeDirectoryInformation 메서드 코드 디렉터리를 만드는 데 필요한 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns this information through three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">이 정보를 통해&amp;3; 개 반환 <ph id="ph1">`out`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the files in the code directory.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph> 매개 변수를 생성 하 고 코드 디렉터리에 파일을 컴파일하여 공급자 유형을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph> 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`generatedFilesDir`</ph> parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.</source>
          <target state="translated"><ph id="ph1">`generatedFilesDir`</ph> .wsdl 파일 등 코드 디렉터리에 비 코드 파일에서 생성 된 모든 코드 파일이 포함 된 디렉터리 경로 저장 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The directory about which to retrieve information.</source>
          <target state="translated">정보를 검색할에 대 한 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the provider type used for code generation and compilation.</source>
          <target state="translated">이 메서드가 반환 될 때 코드 생성 및 컴파일에 사용 되는 공급자 유형을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">이 메서드가 반환 될 때 파일을 컴파일하는 방법을 정의 하는 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the directory for files generated from non-code files.</source>
          <target state="translated">이 메서드가 반환 될 때에 비 코드 파일에서 생성 된 파일의 디렉터리를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualCodeDir&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualCodeDir&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Compiles the file represented by the virtual path and returns its compiled type.</source>
          <target state="translated">가상 경로 나타내는 파일을 컴파일하고 컴파일된 형식을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The virtual path of the file to compile.</source>
          <target state="translated">컴파일할 파일의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the compiled file.</source>
          <target state="translated">&lt;xref:System.Type&gt;컴파일된 파일의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Returns the compiler type and parameters that are used to build a file represented by a virtual path.</source>
          <target state="translated">컴파일러 형식 및 가상 경로 의해 표시 되는 파일을 작성 하는 데 사용 되는 매개 변수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">파일 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the provider type used for code generation and compilation.</source>
          <target state="translated">이 메서드가 반환 될 때 코드 생성 및 컴파일에 사용 되는 공급자 유형을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">이 메서드가 반환 될 때 파일을 컴파일하는 방법을 정의 하는 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns the virtual path of a generated file.</source>
          <target state="translated">생성된 된 파일의 가상 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The full physical path to a generated file.</source>
          <target state="translated">생성 된 파일의 전체 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the virtual path for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filePath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.String&gt;에 대 한 가상 경로 포함 하 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">filePath</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filePath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;filePath&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets the physical path to the generated file for a virtual path.</source>
          <target state="translated">생성 된 파일 가상 경로 대 한 실제 경로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The virtual path of the file to retrieve.</source>
          <target state="translated">검색할 파일의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the physical path to the generated file.</source>
          <target state="translated">A &lt;xref:System.String&gt;실제 경로가 생성된 된 파일에 포함 된.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns an array of the assemblies defined in the Bin directory and the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section of the Web configuration file.</source>
          <target state="translated">Bin 디렉터리에 정의 된 어셈블리의 배열을 반환 하며 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 웹 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The configuration name and path.</source>
          <target state="translated">구성 이름 및 경로입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array containing paths to code bases in the Bin directory and the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section of the Web configuration file.</source>
          <target state="translated">A &lt;xref:System.String&gt;Bin 디렉터리에 기본 경로 코드를 포함 하는 배열 및 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 웹 구성 파일의 섹션.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.</source>
          <target state="translated">App_code 및 ASP.NET 응용 프로그램에서 하위 디렉터리에 가상 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array containing all the virtual paths to code directories in an application.</source>
          <target state="translated">A &lt;xref:System.String&gt;응용 프로그램의 코드 디렉터리에 대 한 모든 가상 경로가 포함 된 배열.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gives the application domain an infinite lifetime by preventing a lease from being created.</source>
          <target state="translated">응용 프로그램 도메인에는 무한 제공 임대가 만들어지는 것을 방지 하 여 수명입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides the &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; method in its base class.</source>
          <target state="translated">이 메서드 &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;기본 클래스에서 메서드&lt;/xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; 를 재정의합니다</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>It always returns <ph id="ph1">`null`</ph> and thereby prevents a lease from being created that would limit the application domain's lifetime.</source>
          <target state="translated">액세스할 수 있으려면 <ph id="ph1">`null`</ph> 및 응용 프로그램 도메인의 수명을 제한 하는 임대가 만들어지지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Indicates whether an assembly is a code assembly.</source>
          <target state="translated">어셈블리는 코드 어셈블리 인지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The name of the assembly to be identified as a code assembly.</source>
          <target state="translated">코드 어셈블리로 식별 되어야 하는 어셈블리의 이름입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">assemblyName</ph><ept id="p2">&lt;/code&gt;</ept> parameter matches one of the generated code assemblies; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">assemblyName</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수는 생성 된 코드 어셈블리 중 하 나와 일치, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph>null입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.</source>
          <target state="translated">ASP.NET 웹 응용 프로그램을 컴파일하는 데 응용 프로그램 도메인 생성 되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ASP.NET 웹 응용 프로그램을 컴파일하는 데 응용 프로그램 도메인 생성 되었음을 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Precompiles an ASP.NET application.</source>
          <target state="translated">ASP.NET 응용을 프로그램을 미리 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application to precompile is defined through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; constructor.</source>
          <target state="translated">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 &lt;xref:System.Web.Compilation.ClientBuildManager&gt;생성자.&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt; object of the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;의 개체는 &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.&lt;/xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; &lt;/xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the PrecompileApplication method.</source>
          <target state="translated">개발자는 웹 사이트를 미리 컴파일할 수는 <ph id="ph1">`aspnet_compiler`</ph> 명령줄 도구 또는 PrecompileApplication 메서드를 호출 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Precompiles an ASP.NET application and provides a callback method to receive status information about the build.</source>
          <target state="translated">ASP.NET 응용 프로그램 미리 컴파일한 빌드에 대 한 상태 정보를 수신 하는 콜백 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callback`</ph> parameter contains the method to call when reporting the result of compilation.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> 매개 변수에는 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application to precompile is defined through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; constructor.</source>
          <target state="translated">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 &lt;xref:System.Web.Compilation.ClientBuildManager&gt;생성자.&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt; object of the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;의 개체는 &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.&lt;/xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; &lt;/xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the PrecompileApplication method.</source>
          <target state="translated">개발자는 웹 사이트를 미리 컴파일할 수는 <ph id="ph1">`aspnet_compiler`</ph> 명령줄 도구 또는 PrecompileApplication 메서드를 호출 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the method to call when reporting the result of compilation.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.</source>
          <target state="translated">ASP.NET 응용 프로그램을 컴파일한 빌드에 대 한 상태 정보를 수신 하는 콜백 메서드를 제공 깨끗 한 빌드를 만들지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callback`</ph> parameter contains the method to call when reporting the result of compilation.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> 매개 변수에는 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application to precompile is defined through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; constructor.</source>
          <target state="translated">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 &lt;xref:System.Web.Compilation.ClientBuildManager&gt;생성자.&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt; object of the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;의 개체는 &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.&lt;/xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; &lt;/xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the &lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt; method.</source>
          <target state="translated">개발자는 웹 사이트를 미리 컴파일할 수는 <ph id="ph1">`aspnet_compiler`</ph> 명령줄 도구 또는 호출 하 여는 &lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;메서드.&lt;/xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the method to call when reporting the result of compilation.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to perform a clean build, which will first delete all object and intermediate files; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to rebuild only those files that have changed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>모든 개체와 중간 파일 먼저 삭제 하는 클린 빌드를 수행 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 변경 된 파일을 다시 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Set to true if there is a chance that a dependency might not be picked up by the build environment.</source>
          <target state="translated">종속성 수 선택 되지 빌드 환경에 의해 된 경우 true로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Terminates the current ASP.NET application.</source>
          <target state="translated">현재 ASP.NET 응용 프로그램을 종료합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Unloads the application domain for compiling ASP.NET Web applications.</source>
          <target state="translated">ASP.NET 웹 응용 프로그램을 컴파일하는 데 응용 프로그램 도메인을 언로드합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain is unloaded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>응용 프로그램 도메인이 언로드되면; 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>