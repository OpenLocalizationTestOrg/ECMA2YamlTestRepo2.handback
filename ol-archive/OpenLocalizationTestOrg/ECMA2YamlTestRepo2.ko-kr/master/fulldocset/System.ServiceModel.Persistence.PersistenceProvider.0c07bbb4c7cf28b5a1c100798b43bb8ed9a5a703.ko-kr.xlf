<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34d137b0bd75e6250459e432410542e249eabdb9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Persistence.PersistenceProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7836bc5ac63da822f5e005700ba76d0911ae138c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b87fc190f082c28f889e5f527de7e571b7410f4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class from which all durable service persistence providers are derived.</source>
          <target state="translated">모든 영 속 서비스 지 속성 공급자는 파생 된 추상 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can create classes derived from this type to create durable service persistence providers that use custom persistence stores, such as third-party databases, the file system, or storage systems accessed remotely.</source>
          <target state="translated">타사 데이터베이스, 파일 시스템 또는 원격으로 액세스 한 저장소 시스템과 같은 사용자 지정 지 속성 저장소를 사용 하는 영 속 서비스 지 속성 공급자를 만드는이 형식에서 파생 된 클래스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a system-provided implementation of this type that uses Microsoft SQL Server as a persistence store, see &lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;.</source>
          <target state="translated">Microsoft SQL Server 지 속성 저장소로 사용 하 여이 형식의 시스템 제공 구현을 만들려면 &lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;.&lt;/xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt; 를 참조 하세요.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When creating persistence provider implementations, it is important to maintain the thread's original identity in the new provider's methods (such as &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; (예: &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A&gt;.&lt;/xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A&gt; 새 공급자의 메서드에서 스레드의 원래 id를 유지 하기 위해 반드시 지 속성 공급자 구현을 만들 때</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, security loopholes could be created, because operations would then run under the wrong identity.</source>
          <target state="translated">이렇게 하지 않으면 잘못 된 id로 실행 작업 되어 보안 루프 홀 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Persistence.PersistenceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우의 새 인스턴스를 초기화 합니다.는 <bpt id="p1">&lt;xref href="System.ServiceModel.Persistence.PersistenceProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The unique identifier of the service state data being saved.</source>
          <target state="translated">저장 하는 서비스 상태 데이터의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, represents the beginning of the Create phase.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 Create 단계의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Create phase occurs when service instance records are first created in the persistence store.</source>
          <target state="translated">Create 단계는 서비스 인스턴스 레코드가 지 속성 저장소에서 처음 만들어질 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The actual instance state.</source>
          <target state="translated">실제 인스턴스 상태입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">작업이 완료 될 때 호출 될 메서드.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">이 특정 비동기 작업을 다른 작업과 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The state of the BeginCreate asynchronous method call.</source>
          <target state="translated">BeginCreate 비동기 메서드 호출의 상태입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, represents the beginning of the Delete phase.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 Delete 단계의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Delete phase occurs when service state data is permanently deleted from the persistence store.</source>
          <target state="translated">Delete 단계는 서비스 상태 데이터가 지 속성 저장소에서 영구적으로 삭제 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The actual instance state.</source>
          <target state="translated">실제 인스턴스 상태입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">작업이 완료 될 때 호출 될 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">이 특정 비동기 작업을 다른 작업과 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The state of the BeginDelete asynchronous method call.</source>
          <target state="translated">BeginDelete 비동기 메서드 호출의 상태입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, represents the beginning of the Load phase.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 Load 단계의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</source>
          <target state="translated">Load 단계는 상태 데이터가 지 속성 저장소에서 지 속성 제공자로 로드 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">작업이 완료 될 때 호출 될 메서드.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">이 특정 비동기 작업을 다른 작업과 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The state of the BeginLoad asynchronous method call.</source>
          <target state="translated">BeginLoad 비동기 메서드 호출의 상태입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 LoadIfChanged 단계의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</source>
          <target state="translated">LoadIfChanged 단계는 상태 데이터가 지 속성 저장소에서 변경 된 상태 데이터가 지 속성 저장소에서 지 속성 제공자로 로드 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The token returned by a previous &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.Create<bpt id="p1">*</bpt>&gt; or &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.Update<ept id="p1">*</ept>&gt; that represents the current state held by the caller.</source>
          <target state="translated">이전에서 반환 된 토큰 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 또는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;는 호출자가 보유 한 현재 상태를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">작업이 완료 될 때 호출 될 메서드.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">이 특정 비동기 작업을 다른 작업과 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The state of the BeginLoadIfChanged asynchronous method call.</source>
          <target state="translated">BeginLoadIfChanged 비동기 메서드 호출의 상태입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, represents the beginning of the Update phase.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 Update 단계의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The Update phase occurs when service state data is updated in the persistence store.</source>
          <target state="translated">Update 단계는 서비스 상태 데이터가 지 속성 저장소에서 업데이트 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The actual instance state.</source>
          <target state="translated">실제 인스턴스 상태입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">작업이 완료 될 때 호출 될 메서드.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">이 특정 비동기 작업을 다른 작업과 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The state of the BeginUpdate asynchronous method call.</source>
          <target state="translated">BeginUpdate 비동기 메서드 호출의 상태입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, creates a service state record in the persistence store.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 지 속성 저장소에서 서비스 상태 레코드를 만듭니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The actual instance state.</source>
          <target state="translated">실제 인스턴스 상태입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The instance token corresponding to the state just saved.</source>
          <target state="translated">방금 저장 한 상태에 해당 하는 인스턴스 토큰입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This can be passed to &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt; to determine whether the state in the persistence store differs from the state when Create was called.</source>
          <target state="translated">에 전달 될 수 &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt;지 속성 저장소의 상태가 Create가 호출 될 때 상태에서 다른 지 여부를 확인 하려면.&lt;/xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, permanently deletes service state information from the persistence store.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 서비스 상태 정보가 지 속성 저장소에서 영구적으로 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The actual instance state.</source>
          <target state="translated">실제 인스턴스 상태입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, represents the end of the Create phase.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 Create 단계의 끝을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The Create phase occurs when service state records are first created in the persistence store.</source>
          <target state="translated">Create 단계는 서비스 상태 레코드가 지 속성 저장소에서 처음 만들어질 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A reference to the result of the operation.</source>
          <target state="translated">작업의 결과에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The instance token corresponding to the state just saved.</source>
          <target state="translated">방금 저장 한 상태에 해당 하는 인스턴스 토큰입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This can be passed to &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt; to determine whether the state in the persistence store differs from the state when Create was called.</source>
          <target state="translated">에 전달 될 수 &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt;지 속성 저장소의 상태가 Create가 호출 될 때 상태에서 다른 지 여부를 확인 하려면.&lt;/xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, represents the end of the Delete phase.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 Delete 단계의 끝을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Delete phase occurs when state data is permanently deleted from the persistence store.</source>
          <target state="translated">Delete 단계는 상태 데이터가 지 속성 저장소에서 영구적으로 삭제 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A reference to the result of the operation.</source>
          <target state="translated">작업의 결과에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, represents the end of the Load phase.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 Load 단계의 끝을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</source>
          <target state="translated">Load 단계는 상태 데이터가 지 속성 저장소에서 지 속성 제공자로 로드 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A reference to the result of the operation.</source>
          <target state="translated">작업의 결과에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The service state information.</source>
          <target state="translated">서비스 상태 정보입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, represents the end of the LoadIfChanged phase.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 LoadIfChanged 단계의 끝을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</source>
          <target state="translated">LoadIfChanged 단계는 상태 데이터가 지 속성 저장소에서 변경 된 상태 데이터가 지 속성 저장소에서 지 속성 제공자로 로드 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A reference to the result of the operation.</source>
          <target state="translated">작업의 결과에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The actual instance state.</source>
          <target state="translated">실제 인스턴스 상태입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the instance <bpt id="p2">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> parameter has been set with the latest copy from the persistence store; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the locally cached state is already up-to-date.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 인스턴스 <bpt id="p2">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 매개 변수; 지 속성 저장소에서 최신 복사본으로 설정 되었고 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 로컬로 캐시 된 상태가 이미 최신입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Represents the end of the Update phase.</source>
          <target state="translated">Update 단계의 끝을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Update phase occurs when service state records are updated in the persistence store.</source>
          <target state="translated">Update 단계는 서비스 상태 레코드가 지 속성 저장소에서 업데이트 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A reference to the result of the operation.</source>
          <target state="translated">작업의 결과에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The instance token corresponding to the state just saved.</source>
          <target state="translated">방금 저장 한 상태에 해당 하는 인스턴스 토큰입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This can be passed to &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt; to determine whether the state in the persistence store differs from the state when Create was called.</source>
          <target state="translated">에 전달 될 수 &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt;지 속성 저장소의 상태가 Create가 호출 될 때 상태에서 다른 지 여부를 확인 하려면.&lt;/xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Represents the &lt;xref:System.Guid&gt; associated with this instance.</source>
          <target state="translated">나타냅니다는 &lt;xref:System.Guid&gt;이 인스턴스와 연결 된.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The GUID associated with this instance.</source>
          <target state="translated">이 인스턴스와 연결 된 GUID입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, loads service state information from the persistence store.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우 지 속성 저장소에서 서비스 상태 정보를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes made to the security token in the Load method, if not reverted, stay in effect for the remainder of that message's processing.</source>
          <target state="translated">변경 내용에는 Load 메서드에서에서 보안 토큰을 수행 하지 않은 경우, 해당 메시지 처리의 나머지 부분에서는 계속 적용 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the service operation's user code, the response message path through the dispatcher, as well as any error paths, run in the changed security context.</source>
          <target state="translated">즉, 서비스 작업의 사용자 코드, 디스패처를 통한 응답 메시지 경로 뿐만 아니라 모든 오류 경로도 변경 된 보안 컨텍스트에서 실행 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The loaded instance state.</source>
          <target state="translated">로드 된 인스턴스 상태입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, loads service state information from the persistence store if that data has been changed.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우는 해당 데이터 변경 된 경우 지 속성 저장소에서 서비스 상태 정보를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The token returned by a previous &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.Create<bpt id="p1">*</bpt>&gt; or &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.Update<ept id="p1">*</ept>&gt;, which represents the current state held by the caller.</source>
          <target state="translated">이전에서 반환 된 토큰 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 또는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;, 호출자가 보유 한 현재 상태를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The actual instance state.</source>
          <target state="translated">실제 인스턴스 상태입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">instance</ph><ept id="p2">&lt;/code&gt;</ept><bpt id="p3">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> parameter has been set with the latest copy from the persistence store; <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> if the locally cached state is already up to date.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">instance</ph> <ept id="p2">&lt;/code&gt;</ept> <bpt id="p3">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 매개 변수; 지 속성 저장소에서 최신 복사본으로 설정 되었고 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 로컬로 캐시 된 상태가 이미 최신입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, updates service state records in the persistence store.</source>
          <target state="translated">파생된 클래스에서 구현 하는 경우 상태 레코드가 지 속성 저장소에서 서비스 업데이트입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The actual instance state.</source>
          <target state="translated">실제 인스턴스 상태입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">기간을 지 속성 공급자는이 시도 중단입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The instance token corresponding to the state just saved.</source>
          <target state="translated">방금 저장 한 상태에 해당 하는 인스턴스 토큰입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This can be passed to &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt; to determine whether the state in the persistence store differs from the state when Create was called.</source>
          <target state="translated">에 전달 될 수 &lt;xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt;지 속성 저장소의 상태가 Create가 호출 될 때 상태에서 다른 지 여부를 확인 하려면.&lt;/xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>