<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2574b4138d687024cd80aae48fd644711df84f86</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Drawing.BufferedGraphics.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb25a430a15971f91146dbdf1d94297a1d15ba9a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75a6ce1081c0c7a594e0eca56eba07e3a43f0f64</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a graphics buffer for double buffering.</source>
          <target state="translated">이중 버퍼링 그래픽 버퍼를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BufferedGraphics class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated">BufferedGraphics 클래스를 사용 하면 해당 그래픽에 대 한 사용자 지정 이중 버퍼링을 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated">버퍼에 쓸 출력 장치에 해당 콘텐츠를 렌더링 하는 데 사용할 수 있는 메서드를 제공 하는 그래픽 버퍼에 대 한 래퍼를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">이중 버퍼링을 사용 하는 그래픽 줄이거나 깜빡임을 표시 화면을 그려서 발생 하는 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</source>
          <target state="translated">이중 버퍼링을 사용 하면 업데이트 된 그래픽 먼저 메모리에 버퍼에 그려지고이 버퍼의 내용이 표시 된 화면의 일부 또는 전부에 신속 하 게 기록 다음 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</source>
          <target state="translated">표시 된 그래픽이 상대적으로 간단 하 게 덮어쓰는 일반적으로 줄이거나 없앨 수 깜빡임을 가끔씩 그래픽을 업데이트할 때 발생 하 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The simplest way to use double buffering is to set the &lt;xref:System.Windows.Forms.ControlStyles&gt; control style flag on a control using the &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 설정 하는 이중 버퍼링을 사용 하는 가장 간단한 방법은 &lt;xref:System.Windows.Forms.ControlStyles&gt;컨트롤 사용 하 여 컨트롤 스타일 플래그는 &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;메서드.&lt;/xref:System.Windows.Forms.Control.SetStyle%2A&gt; &lt;/xref:System.Windows.Forms.ControlStyles&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the &lt;xref:System.Windows.Forms.ControlStyles&gt; flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">설정의 &lt;xref:System.Windows.Forms.ControlStyles&gt;컨트롤 추가 코드가 필요 없이 기본 그래픽 버퍼를 통해 컨트롤에 대 한 모든 그리기를 리디렉션할에 대 한 플래그를 지정 합니다.&lt;/xref:System.Windows.Forms.ControlStyles&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">이 플래그가로 설정 되어 <ph id="ph1">`true`</ph> 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BufferedGraphics class has no public constructor and must be created by the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; for an application domain using its &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method.</source>
          <target state="translated">BufferedGraphics 클래스도 작성 되어야 하며 public 생성자가 없습니다는 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;사용 하 여 응용 프로그램 도메인에 대 한 해당 &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;메서드.&lt;/xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; for the current application domain from the static &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">검색할 수 있습니다는 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;정적에서은 현재 어플리케이션 도메인에 대 한 &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt; property can be used for drawing to the graphics buffer.</source>
          <target state="translated">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;그래픽 버퍼에 그리기에 대 한 속성을 사용할 수 있습니다.&lt;/xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides access to the &lt;xref:System.Drawing.Graphics&gt; object that draws to the graphics buffer allocated for this BufferedGraphics object.</source>
          <target state="translated">이 속성에 대 한 액세스를 제공는 &lt;xref:System.Drawing.Graphics&gt;이 BufferedGraphics 개체에 대해 할당 된 그래픽 버퍼에 그릴 수 있는 개체입니다.&lt;/xref:System.Drawing.Graphics&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt; method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</source>
          <target state="translated">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;메서드 화면으로 그래픽의 콘텐츠를 버퍼링 없는 인수 그리기를 지정 하면 버퍼를 할당할.&lt;/xref:System.Drawing.BufferedGraphics.Render%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other overloads of the &lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt; method allow you to specify a &lt;xref:System.Drawing.Graphics&gt; object or an &lt;xref:System.IntPtr&gt; object that points to a device context to which to draw the contents of the graphics buffer.</source>
          <target state="translated">다른 오버 로드는 &lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;메서드를 사용 하면 지정할 수는 &lt;xref:System.Drawing.Graphics&gt;개체 또는 &lt;xref:System.IntPtr&gt;장치 컨텍스트를 그릴 그래픽 버퍼의 내용을를 가리키는 개체입니다.&lt;/xref:System.IntPtr&gt; &lt;/xref:System.Drawing.Graphics&gt; &lt;/xref:System.Drawing.BufferedGraphics.Render%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about drawing double-buffered graphics, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이중 버퍼링 된 그래픽 그리기에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이중 버퍼링 그래픽<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Drawing.BufferedGraphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when you are finished using the &lt;xref:System.Drawing.BufferedGraphics&gt; object.</source>
          <target state="translated">완료 했으면 Dispose를 호출 합니다. 사용 하는 &lt;xref:System.Drawing.BufferedGraphics&gt;개체입니다.&lt;/xref:System.Drawing.BufferedGraphics&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the &lt;xref:System.Drawing.BufferedGraphics&gt; object in an unusable state.</source>
          <target state="translated">Dispose 메서드는 &lt;xref:System.Drawing.BufferedGraphics&gt;불안정 한 상태가 개체입니다.&lt;/xref:System.Drawing.BufferedGraphics&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.Drawing.BufferedGraphics&gt; object so the garbage collector can reclaim the memory that the &lt;xref:System.Drawing.BufferedGraphics&gt; object was occupying.</source>
          <target state="translated">Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 &lt;xref:System.Drawing.BufferedGraphics&gt;개체는 가비지 수집기는 메모리를 회수할 수 있도록 하는 &lt;xref:System.Drawing.BufferedGraphics&gt;개체 차지한.&lt;/xref:System.Drawing.BufferedGraphics&gt; &lt;/xref:System.Drawing.BufferedGraphics&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Drawing.BufferedGraphics&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 항상 호출 Dispose에 대 한 마지막 참조를 해제 하기 전에 &lt;xref:System.Drawing.BufferedGraphics&gt;개체입니다.&lt;/xref:System.Drawing.BufferedGraphics&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Drawing.BufferedGraphics&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 &lt;xref:System.Drawing.BufferedGraphics&gt;개체의 <ph id="ph1">`Finalize`</ph> 메서드.&lt;/xref:System.Drawing.BufferedGraphics&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">개체가를 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that outputs to the graphics buffer.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 그래픽 버퍼에 출력 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides a &lt;xref:System.Drawing.Graphics&gt; object that draws to the graphics buffer allocated for this &lt;xref:System.Drawing.BufferedGraphics&gt; object.</source>
          <target state="translated">이 속성은 제공 된 &lt;xref:System.Drawing.Graphics&gt;이 할당 된 그래픽 버퍼에 그릴 수 있는 개체 &lt;xref:System.Drawing.BufferedGraphics&gt;개체입니다.&lt;/xref:System.Drawing.BufferedGraphics&gt; &lt;/xref:System.Drawing.Graphics&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that outputs to the graphics buffer.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 그래픽 버퍼에 출력 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Writes the contents of the graphics buffer to the default device.</source>
          <target state="translated">그래픽 버퍼의 내용을 기본 장치에 씁니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method writes the contents of the graphics buffer to the device specified by calling the &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method of the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; used to create this &lt;xref:System.Drawing.BufferedGraphics&gt; object.</source>
          <target state="translated">이 메서드를 호출 하 여 지정 된 장치를 그래픽 버퍼의 내용을 작성는 &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;의 메서드는 &lt;xref:System.Drawing.BufferedGraphicsContext&gt;만드는 데 사용한 &lt;xref:System.Drawing.BufferedGraphics&gt;개체입니다.&lt;/xref:System.Drawing.BufferedGraphics&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext&gt; &lt;/xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Writes the contents of the graphics buffer to the specified <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">지정 된 그래픽 버퍼의 내용을 씁니다 <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method writes the contents of the graphics buffer to the specified &lt;xref:System.Drawing.Graphics&gt; object.</source>
          <target state="translated">이 메서드를 지정 된 그래픽 버퍼의 내용을 씁니다 &lt;xref:System.Drawing.Graphics&gt;개체입니다.&lt;/xref:System.Drawing.Graphics&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to which to write the contents of the graphics buffer.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Drawing.Graphics"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 그래픽 버퍼의 내용을 쓸 대상 개체입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Writes the contents of the graphics buffer to the device context associated with the specified &lt;xref:System.IntPtr&gt; handle.</source>
          <target state="translated">그래픽 버퍼의 내용을 지정 된 연결 된 장치 컨텍스트에 씁니다 &lt;xref:System.IntPtr&gt;처리 합니다.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method writes the contents of the graphics buffer to the device context associated with the specified &lt;xref:System.IntPtr&gt; handle.</source>
          <target state="translated">이 메서드는 지정 된 연결 된 장치 컨텍스트에 그래픽 버퍼의 내용을 씁니다 &lt;xref:System.IntPtr&gt;처리 합니다.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; that points to the device context to which to write the contents of the graphics buffer.</source>
          <target state="translated">&lt;xref:System.IntPtr&gt;그래픽 버퍼의 내용을 쓸 대상 장치 컨텍스트를 가리키는.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>