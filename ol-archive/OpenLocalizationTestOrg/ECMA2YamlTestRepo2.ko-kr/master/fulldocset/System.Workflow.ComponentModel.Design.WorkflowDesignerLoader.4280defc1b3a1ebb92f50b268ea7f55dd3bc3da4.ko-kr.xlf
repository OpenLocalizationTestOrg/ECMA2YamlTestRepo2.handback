<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d89187147c4094d38c5a5a357ae5efcb26c0c01</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd2d7f9faed9c88d089691d2467db5ee459f8d36</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f58fc6f969f682c0f2505eea9d75fe94f103125</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides common designer loader functionality that can be used to implement custom workflow designer loaders.</source>
          <target state="translated">사용자 지정 워크플로 디자이너 로더를 구현 하는 데 사용할 수 있는 공용 디자이너 로더 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       Designer loader classes are used to load the designer and save any changes to the state of the designer when the user so instructs.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>디자이너 로더 클래스 디자이너를 로드 하 고 사용자가 변경을 지시한 경우 디자이너의 상태 변경 내용을 저장 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WorkflowDesignerLoader class can be implemented to support custom loading of a workflow designer and workflow designer components.</source>
          <target state="translated">워크플로 디자이너와 워크플로 디자이너 구성 요소 사용자 지정 로딩을 지원 하도록 WorkflowDesignerLoader 클래스를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the &lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt; method is called.</source>
          <target state="translated">또한 워크플로 디자이너 로더는 후 문서 로딩 시 로더가 사용한 저장소에 다시 열려 있는 문서에 변경 내용을 기록 합니다는 &lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;메서드를 호출 합니다.&lt;/xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">파생된 클래스에서 구현 된 경우의 새 인스턴스를 초기화 합니다.는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adds an activity to the designer host after it has been added to the parent activities collection.</source>
          <target state="translated">활동이 부모 활동 컬렉션에 추가한 후에 디자이너 호스트에 활동을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>추가 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dispose releases all services used by the designer host, but it does not write pending changes to the designer loader.</source>
          <target state="translated">Dispose 디자이너 호스트에서 사용 되는 모든 서비스를 해제 하지만 것는 보류 중인 변경 내용을 디자이너 로더에 기록 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to save any pending changes prior to releasing all resources, call &lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt; before you call Dispose.</source>
          <target state="translated">모든 리소스를 해제 하기 전에 보류 중인 변경 내용을 저장 호출 하려는 경우 &lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;Dispose를 호출 하기 전에.&lt;/xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the file name of the designer to load.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 로드할 디자이너의 파일 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A string that contains the file name of the designer to load.</source>
          <target state="translated">로드할 디자이너의 파일 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Writes pending changes to the location that the designer was loaded from.</source>
          <target state="translated">디자이너에서 로드 된 위치에 보류 중인 변경 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, causes <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to reload the designer.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 하면 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 디자이너를 다시 로드 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, retrieves an object that <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses to read from the specified file.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 개체를 검색 하는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 지정된 된 파일에서 읽어 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A string that contains a path to the file to read from.</source>
          <target state="translated">읽을 파일에 대 한 경로 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextReader&gt; to read the specified file.</source>
          <target state="translated">A &lt;xref:System.IO.TextReader&gt;지정 된 파일을 읽을 수 있습니다.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets an object that the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses to write to the specified file.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 개체를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 지정된 된 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how to create and return a <ph id="ph1">`TextWriter`</ph> object when the GetFileWriter overloaded method is called.</source>
          <target state="translated">만들고 반환 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">`TextWriter`</ph> 는 GetFileWriter 메서드 오버 로드 된 경우 개체를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>WF_Samples#34<ept id="p2">](~/add/codesnippet/csharp/wf_snippets/snippets.cs#34)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WF_Samples#34<ept id="p4">](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#34)</ept><ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>WF_Samples&amp;#34;<ept id="p2">](~/add/codesnippet/csharp/wf_snippets/snippets.cs#34)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WF_Samples&amp;#34;  <ept id="p4">](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#34)</ept><ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A string that contains the path to the file to write to.</source>
          <target state="translated">에 쓸 수 파일의 경로를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; to write to the file.</source>
          <target state="translated">A &lt;xref:System.IO.TextWriter&gt;파일에 쓸 수 있습니다.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the workflow should be loaded in debug mode.</source>
          <target state="translated">디버그 모드에서 워크플로 로드할지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the workflow should be loaded in debug mode; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>디버그 모드에서 워크플로 로드 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with any services required by the designer loader host.</source>
          <target state="translated">초기화는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 디자이너 로더 호스트가 필요로 하는 서비스를 통해 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Applies the serialized layout to the root designer in the current designer host.</source>
          <target state="translated">Serialize 된 레이아웃이 현재 디자이너 호스트의 루트 디자이너에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; that is created for the serialized layout.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;serialize 된 레이아웃에 대해 만들어집니다.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>List of errors that occurred during the deserialization.</source>
          <target state="translated">역직렬화 하는 동안 발생 한 오류의 목록입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Retrieves the specified resource and calls the &lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout*&gt; method that applies the serialized layout to the root designer in the current designer host.</source>
          <target state="translated">지정 된 리소스 및 호출을 검색 된 &lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout*&gt;serialize 된 레이아웃이 현재 디자이너 호스트의 루트 디자이너에 적용 되는 메서드.&lt;/xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout*&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Type&gt; that the resource is associated with.</source>
          <target state="translated">&lt;xref:System.Type&gt;리소스와 연결 된 됩니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Name of the resource.</source>
          <target state="translated">리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Errors encountered during the call to &lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout*&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout*&gt;.&lt;/xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout*&gt; 호출 하는 동안 발생 한 오류</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Called when loading of the designer is completed.</source>
          <target state="translated">디자이너 로딩이 완료 되 면 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if load operation is successful; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>로드 작업에 성공 하면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Contains the load errors.</source>
          <target state="translated">로드 오류를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Writes cached changes to the location that the designer was loaded from.</source>
          <target state="translated">캐시 된 디자이너에서 로드 된 위치에 대 한 변경을 씁니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Class that implements the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface, which manages design-time serialization.</source>
          <target state="translated">클래스를 구현 하는 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 디자인 타임 serialization을 관리 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Loads the designer from a design document.</source>
          <target state="translated">디자인 문서에서 디자이너를 로드합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Class that implements the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface, which manages design-time serialization.</source>
          <target state="translated">클래스를 구현 하는 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 디자인 타임 serialization을 관리 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes an activity from the designer host after it has been added to the parent activities collection.</source>
          <target state="translated">활동이 부모 활동 컬렉션에 추가한 후 디자이너 호스트에서 활동을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Activity to be removed from the designer.</source>
          <target state="translated">디자이너에서 제거할 활동입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Serializes the designer layout.</source>
          <target state="translated">디자이너 레이아웃을 serialize합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used to serialize the layout into.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>레이아웃을 serialize 하는 데 사용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Root activity from which you get the layout information.</source>
          <target state="translated">레이아웃 정보를 가져올 수 있는 루트 활동입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Errors encountered during serialization.</source>
          <target state="translated">Serialization 중에 발생 한 오류입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> metadata of the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대상의 메타 데이터 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> metadata of the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대상의 메타 데이터 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>