<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20740d64e3567d2606548ada30262b9e29332953</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.IComponentDiscoveryService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2de33e8f87cdace72f48d4faf21a6f62e535132</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7850d5f16ca245a9e9d5db22e816e01a6d096f1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables enumeration of components at design time.</source>
          <target state="translated">디자인 타임에 구성 요소 열거할 수 있도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the IComponentDiscoveryService interface enables design-time enumeration of components in the Toolbox.</source>
          <target state="translated">IComponentDiscoveryService 인터페이스의 기본 구현은 도구 상자에서 구성 요소의 디자인 타임 열거할 수 있도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could provide a custom implementation that enumerates across other types available at design time.</source>
          <target state="translated">디자인 타임에 사용할 수 있는 다른 형식으로 열거 하는 사용자 지정 구현을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, your implementation could enumerate the components that are present in a particular designer.</source>
          <target state="translated">예를 들어 구현 특정 디자이너에 있는 구성 요소를 열거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the list of available component types.</source>
          <target state="translated">사용 가능한 구성 요소 유형 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetComponentTypes method retrieves the list of available component types, which are types implementing the &lt;xref:System.ComponentModel.IComponent&gt; interface.</source>
          <target state="translated">메서드는 사용 가능한 구성 요소 형식 목록이 검색 GetComponentTypes 형식을 구현 하는 &lt;xref:System.ComponentModel.IComponent&gt;인터페이스.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`baseType`</ph> parameter is <ph id="ph2">`null`</ph>, all components are retrieved; otherwise, only component types derived from <ph id="ph3">`baseType`</ph> are returned.</source>
          <target state="translated">경우는 <ph id="ph1">`baseType`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 모든 구성 요소를 검색, 그렇지 않으면에서 파생 된 구성 요소 형식만 <ph id="ph3">`baseType`</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you pass in a value for the <ph id="ph1">`designerHost`</ph> parameter, type resolution is scoped to <ph id="ph2">`designerHost`</ph>.</source>
          <target state="translated">에 대 한 값에서 전달 하는 경우는 <ph id="ph1">`designerHost`</ph> 매개 변수를 형식 확인 되는 범위가 <ph id="ph2">`designerHost`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that if there is a &lt;xref:System.Drawing.Design.ToolboxItem&gt; whose type is on disk, and not in the global assembly cache, its type will fail to load through <ph id="ph1">`designerHost`</ph>.</source>
          <target state="translated">즉, 없는 경우는 &lt;xref:System.Drawing.Design.ToolboxItem&gt;형식이 디스크에 해당 하 고 전역 어셈블리 캐시에 없는 해당 형식이 로드 되지 않는 통해 <ph id="ph1">`designerHost`</ph>.&lt;/xref:System.Drawing.Design.ToolboxItem&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you pass in <ph id="ph1">`null`</ph> for <ph id="ph2">`designerHost`</ph>, it returns all types that can be queried from the global assembly cache or the &lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">에 전달 하는 경우 <ph id="ph1">`null`</ph> 에 대 한 <ph id="ph2">`designerHost`</ph>, 전역 어셈블리 캐시에서 쿼리할 수 있는 모든 형식이 반환 또는 &lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The designer host providing design-time services.</source>
          <target state="translated">디자인 타임 서비스를 제공 하는 디자이너 호스트입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The base type specifying the components to retrieve.</source>
          <target state="translated">기본 구성 요소를 지정 하 검색할 형식입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The list of available component types.</source>
          <target state="translated">목록 사용 가능한 구성 요소 형식입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>