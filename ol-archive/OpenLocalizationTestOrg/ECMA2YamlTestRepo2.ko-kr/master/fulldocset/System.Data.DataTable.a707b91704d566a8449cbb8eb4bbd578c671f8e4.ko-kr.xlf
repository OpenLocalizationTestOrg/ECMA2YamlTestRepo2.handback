<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7344a8fe9e12bf984b5fe93e5626bc7c187720a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.DataTable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8e17659149b33b92146ac129dd7595d817c07d1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62c242c51be7748f4d5cc03e5bf7858dd720407d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents one table of in-memory data.</source>
          <target state="translated">메모리 내 데이터의 한 테이블을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DataTable is a central object in the ADO.NET library.</source>
          <target state="translated">DataTable은 ADO.NET 라이브러리는 중앙 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other objects that use the DataTable include the &lt;xref:System.Data.DataSet&gt; and the &lt;xref:System.Data.DataView&gt;.</source>
          <target state="translated">DataTable을 사용 하는 다른 개체를 포함 &lt;xref:System.Data.DataSet&gt;하 고 있는 &lt;xref:System.Data.DataView&gt;.&lt;/xref:System.Data.DataView&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When accessing DataTable objects, note that they are conditionally case sensitive.</source>
          <target state="translated">DataTable 개체에 액세스할 때 조건에 따라 대/소문자 구분 되는지 note 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if one DataTable is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</source>
          <target state="translated">예를 들어 하나의 DataTable "mydatatable" 라고 하는 경우 "Mydatatable" 라는 다른 테이블 중 하나를 검색 하는 데 사용 하는 문자열은 대/소문자 구분로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</source>
          <target state="translated">그러나 "mydatatable" 있으며 "Mydatatable" 하지 않는 경우 검색 문자열 소문자 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.DataSet&gt; can contain two DataTable objects that have the same &lt;xref:System.Data.DataTable.TableName%2A&gt; property value but different &lt;xref:System.Data.DataTable.Namespace%2A&gt; property values.</source>
          <target state="translated">A &lt;xref:System.Data.DataSet&gt;동일한 두 개의 DataTable 개체를 포함할 수 &lt;xref:System.Data.DataTable.TableName%2A&gt;속성 값은 다른 &lt;xref:System.Data.DataTable.Namespace%2A&gt;속성 값.&lt;/xref:System.Data.DataTable.Namespace%2A&gt; &lt;/xref:System.Data.DataTable.TableName%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about working with DataTable objects, see <bpt id="p1">[</bpt>Creating a DataTable<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">DataTable 개체를 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable 만들기<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are creating a DataTable programmatically, you must first define its schema by adding &lt;xref:System.Data.DataColumn&gt; objects to the &lt;xref:System.Data.DataColumnCollection&gt; (accessed through the &lt;xref:System.Data.DataTable.Columns%2A&gt; property).</source>
          <target state="translated">추가 하 여 해당 스키마를 먼저 정의 해야 DataTable을 프로그래밍 방식으로 만들려는 경우 &lt;xref:System.Data.DataColumn&gt;개체는 &lt;xref:System.Data.DataColumnCollection&gt;(통해 액세스는 &lt;xref:System.Data.DataTable.Columns%2A&gt;속성).&lt;/xref:System.Data.DataTable.Columns%2A&gt; &lt;/xref:System.Data.DataColumnCollection&gt; &lt;/xref:System.Data.DataColumn&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about adding &lt;xref:System.Data.DataColumn&gt; objects, see <bpt id="p1">[</bpt>Adding Columns to a DataTable<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">추가 하는 방법에 대 한 자세한 내용은 &lt;xref:System.Data.DataColumn&gt;개체 참조 <bpt id="p1">[</bpt>DataTable에 열 추가<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.&lt;/xref:System.Data.DataColumn&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add rows to a DataTable, you must first use the &lt;xref:System.Data.DataTable.NewRow%2A&gt; method to return a new &lt;xref:System.Data.DataRow&gt; object.</source>
          <target state="translated">DataTable에 행을 추가 하려면 먼저 사용 해야는 &lt;xref:System.Data.DataTable.NewRow%2A&gt;새 반환 하는 메서드 &lt;xref:System.Data.DataRow&gt;개체입니다.&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable.NewRow%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.NewRow%2A&gt; method returns a row with the schema of the DataTable, as it is defined by the table's &lt;xref:System.Data.DataColumnCollection&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.NewRow%2A&gt;테이블의 &lt;xref:System.Data.DataColumnCollection&gt;.&lt;/xref:System.Data.DataColumnCollection&gt; 에 의해 정의 된 대로 메서드는 데이터 테이블의 스키마와 함께 행을 반환&lt;/xref:System.Data.DataTable.NewRow%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum number of rows that a DataTable can store is 16,777,216.</source>
          <target state="translated">DataTable을 저장할 수 있는 행의 최대는 16777216 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Data to a DataTable<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable에 데이터 추가<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DataTable also contains a collection of &lt;xref:System.Data.Constraint&gt; objects that can be used to ensure the integrity of the data.</source>
          <target state="translated">DataTable에는 또한 컬렉션을 포함 &lt;xref:System.Data.Constraint&gt;데이터의 무결성을 보장 하는 데 사용할 수 있습니다.&lt;/xref:System.Data.Constraint&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>DataTable Constraints<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable 제약 조건<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are many DataTable events that can be used to determine when changes are made to a table.</source>
          <target state="translated">테이블에 변경 내용이 시기를 결정 하는 데 사용할 수 있는 많은 DataTable 이벤트가 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include &lt;xref:System.Data.DataTable.RowChanged&gt;, &lt;xref:System.Data.DataTable.RowChanging&gt;, &lt;xref:System.Data.DataTable.RowDeleting&gt;, and &lt;xref:System.Data.DataTable.RowDeleted&gt;.</source>
          <target state="translated">여기에 &lt;xref:System.Data.DataTable.RowChanged&gt;, &lt;xref:System.Data.DataTable.RowChanging&gt;, &lt;xref:System.Data.DataTable.RowDeleting&gt;, 및 &lt;xref:System.Data.DataTable.RowDeleted&gt;.&lt;/xref:System.Data.DataTable.RowDeleted&gt; &lt;/xref:System.Data.DataTable.RowDeleting&gt; &lt;/xref:System.Data.DataTable.RowChanging&gt; &lt;/xref:System.Data.DataTable.RowChanged&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the events that can be used with a DataTable, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">DataTable에 사용할 수 있는 이벤트에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable 이벤트 처리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of DataTable is created, some of the read/write properties are set to initial values.</source>
          <target state="translated">DataTable의 인스턴스를 만들 때 읽기/쓰기 속성 중 일부를 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of these values, see the &lt;xref:System.Data.DataTable.%23ctor%2A?displayProperty=fullName&gt; constructor topic.</source>
          <target state="translated">이러한 값의 목록에 대 한 참조는 &lt;xref:System.Data.DataTable.%23ctor%2A?displayProperty=fullName&gt;생성자 항목.&lt;/xref:System.Data.DataTable.%23ctor%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Data.DataSet&gt; and DataTable objects inherit from &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;, and support the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface for .NET Framework remoting.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.Data.DataSet&gt;DataTable 개체에서 상속 &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;, 및 지원에서 &lt;xref:System.Runtime.Serialization.ISerializable&gt;.NET Framework remoting에 대 한 인터페이스입니다.&lt;/xref:System.Runtime.Serialization.ISerializable&gt; &lt;/xref:System.ComponentModel.MarshalByValueComponent&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are the only ADO.NET objects that you can use for .NET Framework remoting.</source>
          <target state="translated">이들은.NET Framework remoting에 사용할 수 있는 유일한 ADO.NET 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with no arguments.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인수가 없는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructor sets initial values for all properties of the &lt;xref:System.Data.DataTable&gt; object.</source>
          <target state="translated">모든 속성에 대 한 초기 값을 설정 하는 생성자는 &lt;xref:System.Data.DataTable&gt;개체입니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the properties and their default values.</source>
          <target state="translated">다음 표에서 속성 및 기본값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an instance of &lt;xref:System.Data.DataTable&gt; is created, the following read/write properties are set to initial values.</source>
          <target state="translated">인스턴스가 &lt;xref:System.Data.DataTable&gt;만들어지면 다음 읽기/쓰기 속성은 초기 값으로 설정 됩니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Default value|   |--------------|-------------------|   |<bpt id="p1">**</bpt>CaseSensitive<ept id="p1">**</ept>|Same as the parent &lt;xref:System.Data.DataSet&gt;, if it belongs to one.</source>
          <target state="translated">| 속성 | 기본 값 |   |--------------|-------------------|   | <bpt id="p1">**</bpt>CaseSensitive<ept id="p1">**</ept>| 부모와 동일한 &lt;xref:System.Data.DataSet&gt;하나에 속하게 하는 경우.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, <ph id="ph1">`false`</ph>.|   |<bpt id="p1">**</bpt>DisplayExpression<ept id="p1">**</ept>|Empty string ("")|   |<bpt id="p2">**</bpt>Locale<ept id="p2">**</ept>|Same as the parent &lt;xref:System.Data.DataSet&gt; object's &lt;xref:System.Globalization.CultureInfo&gt; (returned by the &lt;xref:System.Data.DataSet.Locale%2A&gt; property); if no parent exists, the default is the current system &lt;xref:System.Globalization.CultureInfo&gt;.|   |<bpt id="p3">**</bpt>MinimumCapacity<ept id="p3">**</ept>|50 rows.|       You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">`false`</ph>. |   | <bpt id="p1">**</bpt>DisplayExpression<ept id="p1">**</ept>| 빈 문자열 ("") |   | <bpt id="p2">**</bpt>Locale<ept id="p2">**</ept>| &lt;xref:System.Data.DataSet&gt;부모와 동일한 개체의 &lt;xref:System.Globalization.CultureInfo&gt;( &lt;xref:System.Data.DataSet.Locale%2A&gt;속성으로 반환 됨); 기본값은 현재 시스템 &lt;xref:System.Globalization.CultureInfo&gt;부모가 없으면. |   | <bpt id="p3">**</bpt>Minimumcapacity는<ept id="p3">**</ept>|&amp;50; 개 행입니다. |       속성에 대 한 별도 호출을 통해 이러한 속성에 대 한 값을 변경할 수 있습니다.&lt;/xref:System.Globalization.CultureInfo&gt; &lt;/xref:System.Data.DataSet.Locale%2A&gt; &lt;/xref:System.Globalization.CultureInfo&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified table name.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 테이블 이름 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The name to give the table.</source>
          <target state="translated">테이블에 대 한 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`tableName`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty string, a default name is given when added to the <bpt id="p2">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">경우 <ph id="ph1">`tableName`</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 빈 문자열인 경우에 추가 될 때 기본 이름이 지정 되는 <bpt id="p2">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the &lt;xref:System.Runtime.Serialization.StreamingContext&gt;.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스와 <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 &lt;xref:System.Runtime.Serialization.StreamingContext&gt;.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the &lt;xref:System.Data.DataTable&gt; constructor is required for &lt;xref:System.Runtime.Serialization.ISerializable&gt;.</source>
          <target state="translated">이 구현은 하는 &lt;xref:System.Data.DataTable&gt;생성자가 &lt;xref:System.Runtime.Serialization.ISerializable&gt;.&lt;/xref:System.Runtime.Serialization.ISerializable&gt; 필요&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The data needed to serialize or deserialize an object.</source>
          <target state="translated">Serialize 하거나 개체를 역직렬화 하는 데 필요한 데이터입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The source and destination of a given serialized stream.</source>
          <target state="translated">원본 및 대상 지정 된 직렬화 된 스트림의 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified table name and namespace.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정한 테이블 이름 및 네임 스페이스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name to give the table.</source>
          <target state="translated">테이블에 대 한 이름입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`tableName`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty string, a default name is given when added to the <bpt id="p2">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">경우 <ph id="ph1">`tableName`</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 빈 문자열인 경우에 추가 될 때 기본 이름이 지정 되는 <bpt id="p2">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The namespace for the XML representation of the data stored in the <bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 저장 된 데이터의 XML 표현에 대 한 네임 스페이스는 <bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Commits all the changes made to this table since the last time AcceptChanges was called.</source>
          <target state="translated">마지막으로 AcceptChanges가 호출 된 이후이 테이블에 대 한 모든 변경 내용을 커밋합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>When AcceptChanges is called, any &lt;xref:System.Data.DataRow&gt; object still in edit mode successfully ends its edits.</source>
          <target state="translated">AcceptChanges 호출 될 때 모든 &lt;xref:System.Data.DataRow&gt;아직 편집 모드에에서는 개체의 편집을 성공적으로 종료 합니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataRowState&gt; also changes: all <ph id="ph1">`Added`</ph> and <ph id="ph2">`Modified`</ph> rows become <ph id="ph3">`Unchanged`</ph>, and <ph id="ph4">`Deleted`</ph> rows are removed.</source>
          <target state="translated">&lt;xref:System.Data.DataRowState&gt;설치 경로도 변경: 모든 <ph id="ph1">`Added`</ph> 및 <ph id="ph2">`Modified`</ph> 될 행 <ph id="ph3">`Unchanged`</ph>, 및 <ph id="ph4">`Deleted`</ph> 행이 제거 됩니다.&lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AcceptChanges method is generally called on a &lt;xref:System.Data.DataTable&gt; after you attempt to update the &lt;xref:System.Data.DataSet&gt; using the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">일반적으로 AcceptChanges 메서드가 호출 되는 &lt;xref:System.Data.DataTable&gt;후 업데이트 하 려 하면는 &lt;xref:System.Data.DataSet&gt;를 사용 하 여는 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Begins the initialization of a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or used by another component.</source>
          <target state="translated">초기화를 시작는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 폼에 사용 되거나 다른 구성 요소에서 사용 하 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">초기화는 런타임에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio 디자인 환경이이 메서드를 사용 하 여 폼에 사용 되거나 다른 구성 요소에서 사용 하는 구성 요소 초기화를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.EndInit%2A&gt; method ends the initialization.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.EndInit%2A&gt;메서드 초기화를 끝냅니다.&lt;/xref:System.Data.DataTable.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the BeginInit and &lt;xref:System.Data.DataTable.EndInit%2A&gt; methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">BeginInit를 사용 하 여 및 &lt;xref:System.Data.DataTable.EndInit%2A&gt;메서드는 컨트롤이 완전히 초기화 되기 전에 사용 되지 않습니다.&lt;/xref:System.Data.DataTable.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Turns off notifications, index maintenance, and constraints while loading data.</source>
          <target state="translated">데이터를 로드 하는 동안 알림, 인덱스 유지 관리 및 제약 조건 해제 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use BeginLoadData in conjunction with &lt;xref:System.Data.DataTable.LoadDataRow%2A&gt; and &lt;xref:System.Data.DataTable.EndLoadData%2A&gt;.</source>
          <target state="translated">BeginLoadData &lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;및 &lt;xref:System.Data.DataTable.EndLoadData%2A&gt;.&lt;/xref:System.Data.DataTable.EndLoadData%2A&gt; &lt;/xref:System.Data.DataTable.LoadDataRow%2A&gt; 와 함께에서 사용 하 여</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Indicates whether string comparisons within the table are case-sensitive.</source>
          <target state="translated">테이블 내에서 문자열 비교는 대/소문자 구분 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CaseSensitive property affects string comparisons in sorting, searching, and filtering.</source>
          <target state="translated">CaseSensitive 속성 정렬, 검색 및 필터링에 대 한 문자열 비교를 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the comparison is case-sensitive; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>비교는 대/소문자 구분; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The default is set to the parent <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object's &lt;xref:System.Data.DataSet.CaseSensitive*&gt; property, or <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> was created independently of a <bpt id="p4">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 parent로 설정 된 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체의 &lt;xref:System.Data.DataSet.CaseSensitive*&gt;속성을 또는 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 경우는 <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 와 독립적으로 만들어진는 <bpt id="p4">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.DataSet.CaseSensitive*&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the collection of child relations for this <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 대 한 자식 관계의 컬렉션을 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.DataRelation&gt; defines the relationship between two tables.</source>
          <target state="translated">A &lt;xref:System.Data.DataRelation&gt;두 테이블 간의 관계를 정의 합니다.&lt;/xref:System.Data.DataRelation&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, two tables are linked through a single field that contains the same data.</source>
          <target state="translated">일반적으로 두 테이블은 동일한 데이터를 포함 하는 단일 필드를 통해 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a table which contains address data may have a single field containing codes that represent countries/regions.</source>
          <target state="translated">예를 들어 주소 데이터를 포함 하는 테이블에는 국가/지역을 나타내는 코드를 포함 하는 단일 필드가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</source>
          <target state="translated">국가/지역 데이터를 포함 하는 두 번째 테이블에서 국가/지역을 식별 하는 코드를 포함 하는 단일 필드 있으며이 코드가 첫 번째 테이블의 해당 필드에 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.DataRelation&gt;, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</source>
          <target state="translated">A &lt;xref:System.Data.DataRelation&gt;, 그런 다음 최소한 다음&amp;4; 가지 정보를 포함: (1) 첫 번째 테이블의 이름, 첫 번째 테이블의 열 이름 (2), (3) 두 번째 테이블의 이름 및 (4) 두 번째 테이블의 열 이름입니다.&lt;/xref:System.Data.DataRelation&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the child relations for the table.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 테이블에 대 한 자식 관계를 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">없는 경우에 빈 컬렉션이 반환 됩니다 <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 존재 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Clears the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of all data.</source>
          <target state="translated">지웁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 모든 데이터입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>All rows in all tables are removed.</source>
          <target state="translated">모든 테이블의 모든 행이 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</source>
          <target state="translated">테이블에 자식 관계가 적용된 해야 하는 자식 행이 분리 될 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.DataSet&gt; is bound to an &lt;xref:System.Xml.XmlDataDocument&gt;, calling &lt;xref:System.Data.DataSet.Clear%2A?displayProperty=fullName&gt; or Clear raises the &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">경우 &lt;xref:System.Data.DataSet&gt;에 &lt;xref:System.Xml.XmlDataDocument&gt;, 호출 &lt;xref:System.Data.DataSet.Clear%2A?displayProperty=fullName&gt;하거나 선택 취소 &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; 를 발생 시킵니다.&lt;/xref:System.Data.DataSet.Clear%2A?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlDataDocument&gt; 바인딩된&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this situation, traverse each table, removing each row one at a time.</source>
          <target state="translated">이러한 상황을 방지 하려면 한 번에 하나씩 행을 제거, 각 테이블을 이동 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use &lt;xref:System.Data.DataTable.NewRow%2A&gt; to create new rows, the rows must be processed before you call Clear.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.DataTable.NewRow%2A&gt;새 행을 만들려면는 행을 처리 해야 지우기 호출 하기 전에.&lt;/xref:System.Data.DataTable.NewRow%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Clones the structure of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, including all <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> schemas and constraints.</source>
          <target state="translated">구조를 복제 하는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 모든 포함 하 여 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 스키마 및 제약 조건입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If these classes have been derived, the clone will also be of the same derived classes.</source>
          <target state="translated">이러한 클래스를 파생 된 경우 동일한 파생된 클래스가 복제가 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clone creates a new &lt;xref:System.Data.DataTable&gt; with the same structure as the original &lt;xref:System.Data.DataTable&gt;, but does not copy any data (the new &lt;xref:System.Data.DataTable&gt; will not contain any <ph id="ph1">`DataRows`</ph>).</source>
          <target state="translated">복제 대상을 새 &lt;xref:System.Data.DataTable&gt;원본과 같은 구조와 &lt;xref:System.Data.DataTable&gt;, 하지만 모든 데이터를 복사 하지 않습니다 (새 &lt;xref:System.Data.DataTable&gt;포함 되지 것입니다 <ph id="ph1">`DataRows`</ph>).&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>To copy both the structure and data into a new &lt;xref:System.Data.DataTable&gt;, use &lt;xref:System.Data.DataTable.Copy%2A&gt;.</source>
          <target state="translated">에는 새 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataTable.Copy%2A&gt;.&lt;/xref:System.Data.DataTable.Copy%2A&gt; 를 사용 하 여&lt;/xref:System.Data.DataTable&gt; 구조와 데이터를 복사 하려면</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same schema as the current <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 스키마 같은 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Occurs after a value has been changed for the specified <bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in a <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">값이 변경 후에 발생에 대 한 지정 된 <bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable 이벤트 처리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Occurs when a value is being changed for the specified <bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in a <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">값 변경 중일 때 발생 합니다. 지정 된 <bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable 이벤트 처리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets the collection of columns that belong to this table.</source>
          <target state="translated">이 테이블에 속하는 열의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataColumnCollection&gt; determines the schema of a table by defining the data type of each column.</source>
          <target state="translated">&lt;xref:System.Data.DataColumnCollection&gt;각 열의 데이터 형식을 정의 하 여 테이블의 스키마를 결정 합니다.&lt;/xref:System.Data.DataColumnCollection&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataColumnCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection of <bpt id="p2">&lt;xref href="System.Data.DataColumn"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects for the table.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataColumnCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 컬렉션을 포함 하는 <bpt id="p2">&lt;xref href="System.Data.DataColumn"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 테이블에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">없는 경우에 빈 컬렉션이 반환 됩니다 <bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 존재 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Computes the given expression on the current rows that pass the filter criteria.</source>
          <target state="translated">필터 조건을 전달 하는 현재 행에서 지정된 된 식을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`expression`</ph> parameter requires an aggregate function.</source>
          <target state="translated"><ph id="ph1">`expression`</ph> 매개 변수는 집계 함수가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following is a legal expression:       <ph id="ph1">`Count(Quantity)`</ph>       But this expression is not:       <ph id="ph2">`Sum (Quantity * UnitPrice)`</ph>       If you must perform an operation on two or more columns, you should create a &lt;xref:System.Data.DataColumn&gt;, set its &lt;xref:System.Data.DataColumn.Expression%2A&gt; property to an appropriate expression, and use an aggregate expression on the resulting column.</source>
          <target state="translated">예를 들어 다음은 올바른 식: <ph id="ph1">`Count(Quantity)`</ph> 되지만이 식은 않습니다: <ph id="ph2">`Sum (Quantity * UnitPrice)`</ph> 두 개 이상의 열에 대 한 작업을 수행 해야 하는 경우 만든는 &lt;xref:System.Data.DataColumn&gt;설정, 해당 &lt;xref:System.Data.DataColumn.Expression%2A&gt;속성을 적절 한 식이 다음 결과 열에 집계 식 사용 합니다.&lt;/xref:System.Data.DataColumn.Expression%2A&gt; &lt;/xref:System.Data.DataColumn&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, given a &lt;xref:System.Data.DataColumn&gt; with the name "total", and the &lt;xref:System.Data.DataColumn.Expression%2A&gt; property set to this:       <ph id="ph1">`"Quantity * UnitPrice"`</ph>       The expression argument for the Compute method would then be this:       <ph id="ph2">`Sum(total)`</ph>       The second parameter, <ph id="ph3">`filter`</ph>, determines which rows are used in the expression.</source>
          <target state="translated">지정 된 경우에 &lt;xref:System.Data.DataColumn&gt;이름이 "total"와 및 &lt;xref:System.Data.DataColumn.Expression%2A&gt;이 설정 된 속성: <ph id="ph1">`"Quantity * UnitPrice"`</ph> 계산 메서드에 대 한 식 인수 것이: <ph id="ph2">`Sum(total)`</ph> 두 번째 매개 변수 <ph id="ph3">`filter`</ph>, 식에 사용 될 행을 결정 합니다.&lt;/xref:System.Data.DataColumn.Expression%2A&gt; &lt;/xref:System.Data.DataColumn&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:       <ph id="ph1">`colDate &gt; 1/1/99 AND colDate &lt; 17/1/99`</ph>       For rules on creating expressions for both parameters, see the &lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">예를 들어 테이블에 있는 경우 "colDate" 라는 날짜 열을 다음 식으로 행을 제한할 수: <ph id="ph1">`colDate &gt; 1/1/99 AND colDate &lt; 17/1/99`</ph> 매개 변수가 모두에 대 한 식을 만드는 방법에 대 한 규칙을 참조 하십시오.는 &lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Data.DataColumn.Expression%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The expression to compute.</source>
          <target state="translated">계산할 식입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The filter to limit the rows that evaluate in the expression.</source>
          <target state="translated">필터 식에서 계산 되는 행을 제한입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt;, set to the result of the computation.</source>
          <target state="translated">&lt;xref:System.Object&gt;, 계산의 결과로 설정 합니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to null, the return value will be <bpt id="p1">&lt;xref href="System.DBNull.Value"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">식이 null로 반환 값에서 됩니다 <bpt id="p1">&lt;xref href="System.DBNull.Value"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets the collection of constraints maintained by this table.</source>
          <target state="translated">이 테이블에서 유지 관리 하는 제약 조건의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.ForeignKeyConstraint&gt; restricts the action performed when a value in a column (or columns) is either deleted or updated.</source>
          <target state="translated">A &lt;xref:System.Data.ForeignKeyConstraint&gt;열 또는 열에 값이 삭제 되거나 업데이트할 때 수행 하는 작업을 제한 합니다.&lt;/xref:System.Data.ForeignKeyConstraint&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such a constraint is intended to be used with primary key columns.</source>
          <target state="translated">이러한 제약 조건은 기본 키 열과 함께 사용 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</source>
          <target state="translated">두 테이블 간에 부모/자식 관계에서 부모 테이블에서 값을 삭제할 영향을 줄 수 자식 행에서 다음 방법 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The child rows can also be deleted (a cascading action).</source>
          <target state="translated">-자식 행 수도 있습니다 (연계 동작)를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The values in the child column (or columns) can be set to null values.</source>
          <target state="translated">-자식 열 (또는 열)의 값은 null 값으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The values in the child column (or columns) can be set to default values.</source>
          <target state="translated">-자식 열 (또는 열)의 값을 기본값으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   An exception can be generated.</source>
          <target state="translated">-예외를 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.UniqueConstraint&gt; becomes active when attempting to set a value in a primary key to a non-unique value.</source>
          <target state="translated">A &lt;xref:System.Data.UniqueConstraint&gt;값이 고유 기본 키의 값을 설정 하려고 할 때 활성화 됩니다.&lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.ConstraintCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection of <bpt id="p2">&lt;xref href="System.Data.Constraint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects for the table.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.ConstraintCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 컬렉션을 포함 하는 <bpt id="p2">&lt;xref href="System.Data.Constraint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 테이블에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.Constraint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">없는 경우에 빈 컬렉션이 반환 됩니다 <bpt id="p1">&lt;xref href="System.Data.Constraint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 존재 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Copies both the structure and data for this <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 구조와 데이터를 모두 복사 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same structure (table schemas and constraints) and data as this <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구조 (테이블 스키마 및 제약 조건) 및 데이터 이와 동일한 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If these classes have been derived, the copy will also be of the same derived classes.</source>
          <target state="translated">이러한 클래스를 파생 된 경우 동일한 파생된 클래스가 복사가 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Copy creates a new <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same structure and data as the original <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">복사를 새로 만들고 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구조 및 데이터 원본과 동일한 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To copy the structure to a new <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but not the data, use &lt;xref:System.Data.DataTable.Clone*&gt;.</source>
          <target state="translated">새 구조를 복사 하려면 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 데이터가 아닌 &lt;xref:System.Data.DataTable.Clone*&gt;.&lt;/xref:System.Data.DataTable.Clone*&gt; 사용 하지만</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> corresponding to the data within this <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 내의 데이터에 해당 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing one result set, corresponding to the source <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 소스에 해당 하는 하나의 결과 집합에 포함 된 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Creates a new instance of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 만듭니다 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The new expression.</source>
          <target state="translated">새 식입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which this table belongs.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 테이블이 속해 있는 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a control is data bound to a &lt;xref:System.Data.DataTable&gt;, and the table belongs to a &lt;xref:System.Data.DataSet&gt;, you can get to the &lt;xref:System.Data.DataSet&gt; through this property.</source>
          <target state="translated">컨트롤 데이터에 바인딩된는 &lt;xref:System.Data.DataTable&gt;, 테이블에 속해는 &lt;xref:System.Data.DataSet&gt;에 가져올 수 있습니다는 &lt;xref:System.Data.DataSet&gt;이 속성을 통해.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which this table belongs.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 테이블이 속해 있는 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets a customized view of the table that may include a filtered view, or a cursor position.</source>
          <target state="translated">필터링된 된 뷰 또는 커서 위치를 포함할 수 있는 테이블의 사용자 지정된 뷰를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DefaultView property returns a &lt;xref:System.Data.DataView&gt; you can use to sort, filter, and search a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataView&gt;정렬, 필터링 및 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 를 검색 하는 데&lt;/xref:System.Data.DataView&gt; 는 DefaultView 속성 반환</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연관 된 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets or sets the expression that returns a value used to represent this table in the user interface.</source>
          <target state="translated">사용자 인터페이스에서이 테이블을 나타내는 데 사용 되는 값을 반환 하는 식을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DisplayExpression" name="DisplayExpression" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property lets you display the name of this table in a user interface.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DisplayExpression" name="DisplayExpression" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성을 사용 하면 사용자 인터페이스에서이 테이블의 이름을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A display string.</source>
          <target state="translated">표시 문자열입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Ends the initialization of a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or used by another component.</source>
          <target state="translated">초기화를 종료 한 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 폼에 사용 되거나 다른 구성 요소에서 사용 하 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">초기화는 런타임에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio 디자인 환경이이 메서드를 사용 하 여 폼에 사용 되거나 다른 구성 요소에서 사용 하는 구성 요소 초기화를 끝냅니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.BeginInit%2A&gt; method starts the initialization.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;메서드 초기화를 시작 합니다.&lt;/xref:System.Data.DataTable.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the &lt;xref:System.Data.DataTable.BeginInit%2A&gt; and EndInit methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Data.DataTable.BeginInit%2A&gt;하 고 컨트롤을 완전히 초기화 되기 전에 사용 되지 않도록 하 EndInit 메서드.&lt;/xref:System.Data.DataTable.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Turns on notifications, index maintenance, and constraints after loading data.</source>
          <target state="translated">데이터를 로드 한 후 알림, 인덱스 유지 관리 및 제약 조건을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use EndLoadData in conjunction with &lt;xref:System.Data.DataTable.LoadDataRow%2A&gt; and &lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;.</source>
          <target state="translated">EndLoadData &lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;및 &lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;.&lt;/xref:System.Data.DataTable.BeginLoadData%2A&gt; &lt;/xref:System.Data.DataTable.LoadDataRow%2A&gt; 와 함께에서 사용 하 여</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Gets the collection of customized user information.</source>
          <target state="translated">사용자 지정된 사용자 정보의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ExtendedProperties to add custom information to a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">ExtendedProperties를 사용 하 여 사용자 지정 정보에 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 를 추가 하려면</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add information with the <ph id="ph1">`Add`</ph> method.</source>
          <target state="translated">추가 정보는 <ph id="ph1">`Add`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieve information with the <ph id="ph1">`Item`</ph> method.</source>
          <target state="translated">정보를 검색할는 <ph id="ph1">`Item`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Extended properties must be of type &lt;xref:System.String&gt;.</source>
          <target state="translated">확장된 속성 &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties that are not of type String are not persisted when the &lt;xref:System.Data.DataTable&gt; is written as XML.</source>
          <target state="translated">문자열 형식이 아닌 속성 유지 되지 않습니다 때는 &lt;xref:System.Data.DataTable&gt;XML로 기록 됩니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.PropertyCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains custom user information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.PropertyCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 사용자 지정 사용자 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Checks whether initialization is in progress.</source>
          <target state="translated">초기화가 진행 하는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">초기화는 런타임에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets a copy of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains all changes made to it since it was loaded or &lt;xref:System.Data.DataTable.AcceptChanges*&gt; was last called.</source>
          <target state="translated">복사본을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 내용을 로드 된 이후 모든 변경 내용이 들어 있는 또는 &lt;xref:System.Data.DataTable.AcceptChanges*&gt;마지막으로 호출한.&lt;/xref:System.Data.DataTable.AcceptChanges*&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new &lt;xref:System.Data.DataSet&gt; containing a copy of all rows in the original &lt;xref:System.Data.DataSet&gt; that have pending changes.</source>
          <target state="translated">새 &lt;xref:System.Data.DataSet&gt;원래에 모든 행의 복사본이 포함 된 &lt;xref:System.Data.DataSet&gt;보류 중인 변경 내용이 있는.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Relationship constraints can cause additional unchanged rows to be added to the new &lt;xref:System.Data.DataSet&gt; if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</source>
          <target state="translated">관계 제약 조건으로 인해 새에 추가할 추가 변경 되지 않은 행 &lt;xref:System.Data.DataSet&gt;변경 되지 않은 행에는 변경 된 행에서 외래 키에 해당 하는 기본 키를 포함 하는 경우.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method returns <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if there are no rows in the original &lt;xref:System.Data.DataSet&gt; with pending changes.</source>
          <target state="translated">메서드가 반환 <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> Visual basic에서)는 원본에서 행이 없는 경우 &lt;xref:System.Data.DataSet&gt;와 보류 중인 변경 내용.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A copy of the changes from this <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if no changes are found.</source>
          <target state="translated">이 변경의 복사본 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 또는 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 없는 변경 내용이 발견 되는 경우.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets a copy of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing all changes made to it since it was last loaded, or since &lt;xref:System.Data.DataTable.AcceptChanges*&gt; was called, filtered by <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">복사본을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 내용을 마지막 로드 된 이후 또는 이후 모든 변경 내용이 포함 된 &lt;xref:System.Data.DataTable.AcceptChanges*&gt;호출을 기준으로 필터링 <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.DataTable.AcceptChanges*&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.GetChanges%2A&gt; method is used to produce a second &lt;xref:System.Data.DataTable&gt; object that contains only the changes introduced into the original.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;초를 생성 하기 위해 메서드를 사용 하는 &lt;xref:System.Data.DataTable&gt;원래에 도입 된 변경 내용만 포함 하는 개체입니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`rowStates`</ph> argument to specify the type of changes the new object should include.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`rowStates`</ph> 인수를 새 개체에 포함 될 변경 유형을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Relationship constraints may cause unchanged parent rows to be included.</source>
          <target state="translated">관계 제약 조건 하면 변경 되지 않은 부모 행이 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A filtered copy of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can have actions performed on it, and later be merged back in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> using &lt;xref:System.Data.DataSet.Merge*&gt;.</source>
          <target state="translated">필터링 된 복사본은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 작업에 수행, 나중에 다시 병합 될 수 있는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> &lt;xref:System.Data.DataSet.Merge*&gt;.&lt;/xref:System.Data.DataSet.Merge*&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If no rows of the desired <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> are found, the method returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">원하는 행이 없으면 <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 발견 되 면 메서드가 반환 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This method returns an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance containing the Web Services Description Language (WSDL) that describes the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> for Web Services.</source>
          <target state="translated">이 메서드는 반환 된 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 WSDL 웹 서비스 설명 언어 ()에 대해 설명 하는 포함 하는 인스턴스는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 웹 서비스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Gets an array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contain errors.</source>
          <target state="translated">배열을 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 오류가 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns the list of &lt;xref:System.Data.DataRow&gt; objects that have &lt;xref:System.Data.DataRow.RowError%2A&gt; set.</source>
          <target state="translated">목록을 반환 &lt;xref:System.Data.DataRow&gt;개체 &lt;xref:System.Data.DataRow.RowError%2A&gt;설정.&lt;/xref:System.Data.DataRow.RowError%2A&gt; &lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, errors can occur when calling &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; with &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt; set to <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">호출할 때 오류가 발생할 수 있습니다는 예를 들어 &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;와 &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;로 설정 <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.&lt;/xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not invoke &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; on the &lt;xref:System.Data.DataTable&gt; until you resolve all errors and resubmit the &lt;xref:System.Data.DataSet&gt; for updating.</source>
          <target state="translated">호출 하지 말고 &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;에 &lt;xref:System.Data.DataTable&gt;모든 오류를 해결 하 고 다시 전송 될 때까지 &lt;xref:System.Data.DataSet&gt;업데이트에 대 한.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that have errors.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 오류가 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Populates a serialization information object with the data needed to serialize the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Serialization 정보 개체를 serialize 하는 데 필요한 데이터로 채우는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that holds the serialized data associated with the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체와 관련 된 serialize 된 데이터를 보유 하는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object that contains the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;소스와 연결 된 serialize 된 스트림의 대상이 들어 있는 개체는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a null reference (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">info</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 null 참조 (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Gets the row type.</source>
          <target state="translated">행 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Returns the type of the <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">형식을 반환 된 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이 멤버에 대 한 참조 <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchema&gt; that describes the XML representation of the object that is produced by the &lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml<bpt id="p1">*</bpt>&gt; method and consumed by the &lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml<ept id="p1">*</ept>&gt; method.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;의해 생성 되는 개체의 XML 표현을 설명 하는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 메서드 및에서 소비 되는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 메서드.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether there are errors in any of the rows in any of the tables of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the table belongs.</source>
          <target state="translated">모든 테이블의 행에 오류가 있는지 여부를 나타내는 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 테이블이 속해 있는 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>As users work on a set of data contained in a &lt;xref:System.Data.DataTable&gt;, you can mark each change with an error if the change causes some validation failure.</source>
          <target state="translated">사용자가 작업에 포함 된 데이터 집합에는 &lt;xref:System.Data.DataTable&gt;, 변경으로 인해 일부 유효성 검사 실패 하는 경우 오류가 발생 하 여 각 변경을 표시할 수 있습니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can mark an entire &lt;xref:System.Data.DataRow&gt; with an error message using the &lt;xref:System.Data.DataRow.RowError%2A&gt; property.</source>
          <target state="translated">전체를 표시할 수 있습니다 &lt;xref:System.Data.DataRow&gt;사용 하 여 오류 메시지는 &lt;xref:System.Data.DataRow.RowError%2A&gt;속성.&lt;/xref:System.Data.DataRow.RowError%2A&gt; &lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set errors on each column of the row with the &lt;xref:System.Data.DataRow.SetColumnError%2A&gt; method.</source>
          <target state="translated">오류가 있는 행의 각 열에 설정할 수도 있습니다는 &lt;xref:System.Data.DataRow.SetColumnError%2A&gt;메서드.&lt;/xref:System.Data.DataRow.SetColumnError%2A&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before updating a data source with a &lt;xref:System.Data.DataSet&gt;, it's recommended that you first invoke the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method on the target &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">된 &lt;xref:System.Data.DataSet&gt; &lt;xref:System.Data.DataSet.GetChanges%2A&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 대상에서 메서드&lt;/xref:System.Data.DataSet.GetChanges%2A&gt; 를 먼저 호출 하는 것이 좋습니다.&lt;/xref:System.Data.DataSet&gt; 데이터 소스를 업데이트 하기 전에</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method results in a &lt;xref:System.Data.DataSet&gt; that contains only the changes made to the original.</source>
          <target state="translated">이렇게 한 &lt;xref:System.Data.DataSet&gt;원본에 대 한 변경 내용만 포함 하는.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before sending the &lt;xref:System.Data.DataSet&gt; to the data source for updating, check the HasErrors property of each table to see if any errors have been attached to the rows or columns in the rows.</source>
          <target state="translated">보내기 전에 &lt;xref:System.Data.DataSet&gt;업데이트에 대 한 데이터 원본에 오류 행 또는 행의 열에 연결 되는 경우를 확인 하려면 각 테이블의 HasErrors 속성을 확인 하십시오.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>After reconciling each error, clear the errors with the &lt;xref:System.Data.DataRow.ClearErrors%2A&gt; method of the <ph id="ph1">`DataRow`</ph>.</source>
          <target state="translated">각 오류를 해결 한 후 사용 하 여 오류를 지울는 &lt;xref:System.Data.DataRow.ClearErrors%2A&gt;의 메서드는 <ph id="ph1">`DataRow`</ph>.&lt;/xref:System.Data.DataRow.ClearErrors%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if errors exist; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>오류가 없으면; 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Copies a <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into a <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving any property settings, as well as original and current values.</source>
          <target state="translated">복사는 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 원래 및 현재 값 뿐만 아니라 모든 속성 설정을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.Data.DataTable.NewRow%2A&gt; adds a row to the table using the existing table schema, but with default values for the row, and sets the &lt;xref:System.Data.DataRowState&gt; to <ph id="ph1">`Detached`</ph>.</source>
          <target state="translated">호출 &lt;xref:System.Data.DataTable.NewRow%2A&gt;행에 대 한 기본값을 사용 하면서 기존 테이블 스키마를 사용 하 여 테이블 행을 추가 하 고 설정 된 &lt;xref:System.Data.DataRowState&gt;를 <ph id="ph1">`Detached`</ph>.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataTable.NewRow%2A&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling ImportRow preserves the existing &lt;xref:System.Data.DataRowState&gt; along with other values in the row.</source>
          <target state="translated">기존 ImportRow 전처리 호출 &lt;xref:System.Data.DataRowState&gt;행에 다른 값과 함께.&lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`DataRow`</ph> that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</source>
          <target state="translated">경우는 <ph id="ph1">`DataRow`</ph> 분리 된 상태에는 매개 변수는, 무시 되 고 예외가 throw 되지 않습니다 변수로 전달 된입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new row will be added to the end of the data table.</source>
          <target state="translated">새 행의 데이터 테이블 끝에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the new row violates a Constraint it won’t be added to the data table.</source>
          <target state="translated">새 행에는 제약 조건을 위반 하는 경우에 데이터 테이블에 추가 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</source>
          <target state="translated">DataTable.Rows.Find 및 DataTable.Rows.IndexOf로 새 행의 인덱스를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Data.DataRowCollection&gt; and &lt;xref:System.Data.DataTable.Rows%2A&gt; for more information.</source>
          <target state="translated">참조 &lt;xref:System.Data.DataRowCollection&gt;및 &lt;xref:System.Data.DataTable.Rows%2A&gt;자세한 내용은.&lt;/xref:System.Data.DataTable.Rows%2A&gt; &lt;/xref:System.Data.DataRowCollection&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be imported.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Occurs after the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">뒤에 오는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 초기화 됩니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Data.DataTable.IsInitialized%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Data.DataTable.IsInitialized%2A&gt;.&lt;/xref:System.Data.DataTable.IsInitialized%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 초기화 됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns the status of the &lt;xref:System.Data.DataTable&gt; while it’s being constructed, for instance by Visual Studio.</source>
          <target state="translated">상태를 반환 하는 &lt;xref:System.Data.DataTable&gt;것은 생성 되 고, 예를 들어 Visual Studio에서 동안.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.BeginInit%2A&gt; method sets it to <ph id="ph1">`false`</ph> and &lt;xref:System.Data.DataTable.EndInit%2A&gt; method sets it to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;메서드를 설정 <ph id="ph1">`false`</ph> 및 &lt;xref:System.Data.DataTable.EndInit%2A&gt;메서드를 설정 <ph id="ph2">`true`</ph>.&lt;/xref:System.Data.DataTable.EndInit%2A&gt; &lt;/xref:System.Data.DataTable.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate the component has completed initialization; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>초기화가 완료를 나타내는 구성 요소 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">채웁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 제공 된 데이터 원본의 값으로 <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> already contains rows, the incoming data from the data source is merged with the existing rows.</source>
          <target state="translated">경우는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 행이 이미 포함 되어 기존 행과 데이터 원본에서 들어오는 데이터를 병합 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides a result set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 결과 집합을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">채웁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 제공 된 데이터 원본의 값으로 <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">loadOption</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">경우는 <bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 행이 이미 포함 되어 데이터 원본에서 들어오는 데이터의 값에 따라 기존 행과 병합 되는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">loadOption</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하나 이상의 결과 집합을 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> are combined with incoming rows that share the same primary key.</source>
          <target state="translated">값은 <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 나타내는 열거형입니다 방법을 있는 행는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 동일한 기본 키를 공유 하는 들어오는 행과 결합 됩니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> using an error-handling delegate.</source>
          <target state="translated">채웁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 제공 된 데이터 원본의 값으로 <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 오류 처리 대리자를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides a result set.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 결과 집합을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> are combined with incoming rows that share the same primary key.</source>
          <target state="translated">값은 <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 나타내는 열거형입니다 방법을 있는 행는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 동일한 기본 키를 공유 하는 들어오는 행과 결합 됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.FillErrorEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate to call when an error occurs while loading data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.FillErrorEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 로드 하는 동안 오류가 발생할 때 호출할 대리자입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Finds and updates a specific row.</source>
          <target state="translated">찾아 특정 행을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">일치 하는 특성이 있는 경우 지정된 된 값을 사용 하 여 새 행이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LoadDataRow method takes an array of values and finds the matching value(s) in the primary key column(s).</source>
          <target state="translated">LoadDataRow 메서드 값의 배열을 사용 하 고 기본 키 열에 일치 하는 값을 찾습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a column has a default value, pass a null value in the array to set the default value for that column.</source>
          <target state="translated">열에 기본 값, 해당 열에 대 한 기본값을 설정 하는 배열에 null 값을 전달 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, if a column has its &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt; property set to true, pass a null value in the array to set the automatically generated value for the row.</source>
          <target state="translated">마찬가지로, 열에 있으면 해당 &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;속성이 행에 대해 자동으로 생성 된 값을 설정 하는 배열에 null 값을 전달 합니다. true로 설정 합니다.&lt;/xref:System.Data.DataColumn.AutoIncrement%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`fAcceptChanges`</ph> parameter is <ph id="ph2">`true`</ph> or not specified, the new data is added and then &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; is called to accept all changes in the &lt;xref:System.Data.DataTable&gt;; if the argument is <ph id="ph3">`false`</ph>, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</source>
          <target state="translated">경우는 <ph id="ph1">`fAcceptChanges`</ph> 매개 변수는 <ph id="ph2">`true`</ph> 하거나 지정 하지 않으면 새 데이터가 추가 되 차례로 &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;에서 모든 변경 내용을 적용 하기 위해 호출 됩니다는 &lt;xref:System.Data.DataTable&gt;인수가; <ph id="ph3">`false`</ph>, 새로 추가 된 행 삽입으로 표시 되 고 기존 행에 대 한 변경 내용은 수정으로 표시 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions can also occur during either a &lt;xref:System.Data.DataTable.ColumnChanging&gt; or &lt;xref:System.Data.DataTable.RowChanging&gt; event.</source>
          <target state="translated">예외도 수행 하는 동안 발생할 수 있습니다는 &lt;xref:System.Data.DataTable.ColumnChanging&gt;또는 &lt;xref:System.Data.DataTable.RowChanging&gt;이벤트.&lt;/xref:System.Data.DataTable.RowChanging&gt; &lt;/xref:System.Data.DataTable.ColumnChanging&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">예외가 발생 하는 경우 테이블에 행 추가 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use LoadDataRow in conjunction with &lt;xref:System.Data.DataTable.BeginLoadData%2A&gt; and &lt;xref:System.Data.DataTable.EndLoadData%2A&gt;.</source>
          <target state="translated">LoadDataRow &lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;및 &lt;xref:System.Data.DataTable.EndLoadData%2A&gt;.&lt;/xref:System.Data.DataTable.EndLoadData%2A&gt; &lt;/xref:System.Data.DataTable.BeginLoadData%2A&gt; 와 함께에서 사용 하 여</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>An array of values used to create the new row.</source>
          <target state="translated">새 행을 만들고 사용 하는 값의 배열입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to accept changes; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>변경 사항을 적용 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The array is larger than the number of columns in the table.</source>
          <target state="translated">배열의는 테이블의 열 개수 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A value doesn't match its respective column type.</source>
          <target state="translated">값을 해당 열 형식과 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Adding the row invalidates a constraint.</source>
          <target state="translated">제약 조건을 무효화 행을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Attempting to put a null in a column where &lt;xref:System.Data.DataColumn.AllowDBNull*&gt; is false.</source>
          <target state="translated">열에 null을 입력 하려고 합니다. 여기서 &lt;xref:System.Data.DataColumn.AllowDBNull*&gt;false.&lt;/xref:System.Data.DataColumn.AllowDBNull*&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Finds and updates a specific row.</source>
          <target state="translated">찾아 특정 행을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">일치 하는 특성이 있는 경우 지정된 된 값을 사용 하 여 새 행이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.LoadDataRow%2A&gt; method takes an array of values and finds the matching value(s) in the primary key column(s).</source>
          <target state="translated">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;메서드 값의 배열을 사용 하 고 기본 키 열에 일치 하는 값을 찾습니다.&lt;/xref:System.Data.DataTable.LoadDataRow%2A&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a column has a default value, pass a null value in the array to set the default value for that column.</source>
          <target state="translated">열에 기본 값, 해당 열에 대 한 기본값을 설정 하는 배열에 null 값을 전달 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, if a column has its &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt; property set to true, pass a null value in the array to set the automatically generated value for the row.</source>
          <target state="translated">마찬가지로, 열에 있으면 해당 &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;속성이 행에 대해 자동으로 생성 된 값을 설정 하는 배열에 null 값을 전달 합니다. true로 설정 합니다.&lt;/xref:System.Data.DataColumn.AutoIncrement%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`loadOption`</ph> parameter is used to determine how the values in the array are applied to an existing row.</source>
          <target state="translated">값은 <ph id="ph1">`loadOption`</ph> 매개 변수를 사용 하는 배열의 값이 기존 행에 적용 되는 방식을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`loadOption`</ph> is set to <ph id="ph2">`OverwriteChanges`</ph>, the <ph id="ph3">`Original`</ph> and <ph id="ph4">`Current`</ph> values of each column are replaced with the values in the incoming row and the <ph id="ph5">`RowState`</ph> property is set to <ph id="ph6">`Unchanged`</ph>.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`loadOption`</ph> 로 설정 된 <ph id="ph2">`OverwriteChanges`</ph>, <ph id="ph3">`Original`</ph> 및 <ph id="ph4">`Current`</ph> 각 열의 값이 들어오는 행의 값으로 바뀌는 및 <ph id="ph5">`RowState`</ph> 속성이로 설정 된 <ph id="ph6">`Unchanged`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions can also occur during either a &lt;xref:System.Data.DataTable.ColumnChanging&gt; or &lt;xref:System.Data.DataTable.RowChanging&gt; event.</source>
          <target state="translated">예외도 수행 하는 동안 발생할 수 있습니다는 &lt;xref:System.Data.DataTable.ColumnChanging&gt;또는 &lt;xref:System.Data.DataTable.RowChanging&gt;이벤트.&lt;/xref:System.Data.DataTable.RowChanging&gt; &lt;/xref:System.Data.DataTable.ColumnChanging&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">예외가 발생 하는 경우 테이블에 행 추가 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Data.DataTable.LoadDataRow%2A&gt; in conjunction with &lt;xref:System.Data.DataTable.BeginLoadData%2A&gt; and &lt;xref:System.Data.DataTable.EndLoadData%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt; &lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;및 &lt;xref:System.Data.DataTable.EndLoadData%2A&gt;.&lt;/xref:System.Data.DataTable.EndLoadData%2A&gt; &lt;/xref:System.Data.DataTable.BeginLoadData%2A&gt; 와 함께에서&lt;/xref:System.Data.DataTable.LoadDataRow%2A&gt; 사용 하 여</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>An array of values used to create the new row.</source>
          <target state="translated">새 행을 만들고 사용 하는 값의 배열입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Used to determine how the array values are applied to the corresponding values in an existing row.</source>
          <target state="translated">배열 값은 기존 행에 해당 값에 적용 되는 방식을 결정 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Gets or sets the locale information used to compare strings within the table.</source>
          <target state="translated">테이블 내의 문자열을 비교 하는 데 로캘 정보를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; represents the software preferences of a particular culture or community.</source>
          <target state="translated">A &lt;xref:System.Globalization.CultureInfo&gt;특정 문화권 또는 커뮤니티의 소프트웨어 기본 설정을 나타냅니다.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used for string comparisons, the &lt;xref:System.Globalization.CultureInfo&gt; affects sorting, comparisons, and filtering.</source>
          <target state="translated">문자열 비교에 사용 되는 경우는 &lt;xref:System.Globalization.CultureInfo&gt;비교, 정렬 및 필터링에 영향을 줍니다.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In columns that contain expressions, the &lt;xref:System.StringComparison&gt; is used.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 식이 포함 된 열에는 &lt;xref:System.StringComparison&gt;사용 됩니다.&lt;/xref:System.StringComparison&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.StringComparison&gt; is ignored.</source>
          <target state="translated">&lt;xref:System.StringComparison&gt;는 무시 됩니다.&lt;/xref:System.StringComparison&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; that contains data about the user's machine locale.</source>
          <target state="translated">A &lt;xref:System.Globalization.CultureInfo&gt;사용자의 컴퓨터 로캘에 대 한 데이터가 들어 있는.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The default is the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object's &lt;xref:System.Globalization.CultureInfo&gt; (returned by the &lt;xref:System.Data.DataSet.Locale*&gt; property) to which the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> belongs; if the table doesn't belong to a <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, the default is the current system &lt;xref:System.Globalization.CultureInfo&gt;.</source>
          <target state="translated">기본값은는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체의 &lt;xref:System.Globalization.CultureInfo&gt;(에서 반환 되는 &lt;xref:System.Data.DataSet.Locale*&gt;속성)을는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 속한; 테이블에 속하지는 <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, 기본값은 현재 시스템 &lt;xref:System.Globalization.CultureInfo&gt;.&lt;/xref:System.Globalization.CultureInfo&gt; &lt;/xref:System.Data.DataSet.Locale*&gt; &lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Merge the specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the current <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 병합 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재의 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Merge method is used to merge two &lt;xref:System.Data.DataTable&gt; objects that have largely similar schemas.</source>
          <target state="translated">Merge 메서드 두 개를 병합 하는 데는 &lt;xref:System.Data.DataTable&gt;비슷하긴 하지만 스키마가 포함 된 개체입니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">데이터 원본에서 최신 변경 내용을 기존 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 통합 하는 클라이언트 응용 프로그램에는 병합은 일반적으로 사용</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataTable&gt; with the latest data from the data source.</source>
          <target state="translated">이렇게 하면 클라이언트 응용 프로그램을 새로 고칠 수 있습니다. &lt;xref:System.Data.DataTable&gt;데이터 원본에서 최신 데이터로.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">병합 작업은 원래 테이블만 병합 될 테이블을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Child tables are not affected or included.</source>
          <target state="translated">자식 테이블은 영향을 하지 않거나 포함 하십시오.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">테이블 관계의 일부분으로 정의 된 하나 이상의 자식 테이블에 각 자식 테이블은 개별적으로 병합 해야 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph> 메서드는 일반적으로 일련의 변경 내용의 유효성 검사, 오류 조정으로 변경 되는 데이터 소스 업데이트 및 기존 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 새로 고침 관련 된 절차의 끝에 호출</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</source>
          <target state="translated">병합을 수행할 때 기존 데이터를 병합 하기 전에 변경 내용이 병합 작업 동안 기본적으로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">개발자는이 메서드에 대 한 호출 하는 다른 두 오버 로드 중 하나에 대 한 값이 false를 지정 하 여이 동작을 수정할 수는 <ph id="ph1">`preserveChanges`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">클라이언트 응용 프로그램에는 단일 단추가 사용자가 클릭할 수 있는 변경 된 데이터를 수집 하 고 중간 계층 구성 요소에 다시 보내기 전에 유효성 검사를 수행 하는 별로있지 않습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataTable.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">이 시나리오는 &lt;xref:System.Data.DataTable.GetChanges%2A&gt;메서드가 먼저 호출 됩니다.&lt;/xref:System.Data.DataTable.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataTable&gt; optimized for validating and merging.</source>
          <target state="translated">이 메서드는 두 번째 &lt;xref:System.Data.DataTable&gt;유효성 검사 및 병합에 대 한 액세스에 최적화 된.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataTable&gt; object contains only the &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">이 두 번째 &lt;xref:System.Data.DataTable&gt;개체는 &lt;xref:System.Data.DataRow&gt;원래 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 의 하위 집합을 변경 된 개체&lt;/xref:System.Data.DataRow&gt; 에 대해서만 포함&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller and thus more efficiently passed back to a middle tier component.</source>
          <target state="translated">이 하위 집합은 일반적으로 더 작은 때문에 보다 효율적으로 중간 계층 구성 요소에 다시 전달 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">중간 계층 구성 요소는 다음 저장된 프로시저를 통해 변경 내용으로 원래 데이터 소스를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataTable&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">중간 계층은 새 다시 보낼 수 있습니다 &lt;xref:System.Data.DataTable&gt;(다시 실행 하 여 원래 쿼리), 원래 데이터와 데이터 원본에서 최신 데이터를 포함 하는 또는 데이터 원본에서 변경 된 내용이 있는 하위 집합을 클라이언트로 보낼 수 있습니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataTable&gt; can be merged back into the client application's original &lt;xref:System.Data.DataTable&gt; with the Merge method.</source>
          <target state="translated">(예를 들어 데이터 원본에서 자동으로 고유 기본 키 값을 만드는 경우 이러한 값 수에 다시 전파할 수 클라이언트 응용 프로그램입니다.) 두 경우 모두 반환 된 &lt;xref:System.Data.DataTable&gt;클라이언트 응용 프로그램의 원래로 다시 병합 되어야 &lt;xref:System.Data.DataTable&gt;병합 메서드로.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataTable&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph>, is matched to target rows with the same primary key values.</source>
          <target state="translated">새 소스를 병합할 때 &lt;xref:System.Data.DataTable&gt;대상에 모든 소스 행 한 &lt;xref:System.Data.DataRowState&gt;값 <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, 또는 <ph id="ph3">`Deleted`</ph>, 동일한 기본 키 값을 가진 대상 행에 일치 합니다.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">소스 행 한 &lt;xref:System.Data.DataRowState&gt;값 <ph id="ph1">`Added`</ph> 새 원본 행과 동일한 기본 키 값을 가진 새 대상 행에 대응 됩니다.&lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be merged with the current <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재와 병합 될 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Merge the specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the current <bpt id="p2">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, indicating whether to preserve changes in the current <bpt id="p3">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 병합 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재의 <bpt id="p2">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 현재에서 변경 내용을 유지할지 여부를 나타내는 <bpt id="p3">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Merge method is used to merge two &lt;xref:System.Data.DataTable&gt; objects that have largely similar schemas.</source>
          <target state="translated">Merge 메서드 두 개를 병합 하는 데는 &lt;xref:System.Data.DataTable&gt;비슷하긴 하지만 스키마가 포함 된 개체입니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">데이터 원본에서 최신 변경 내용을 기존 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 통합 하는 클라이언트 응용 프로그램에는 병합은 일반적으로 사용</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataTable&gt; with the latest data from the data source.</source>
          <target state="translated">이렇게 하면 클라이언트 응용 프로그램을 새로 고칠 수 있습니다. &lt;xref:System.Data.DataTable&gt;데이터 원본에서 최신 데이터로.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">병합 작업은 원래 테이블만 병합 될 테이블을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>Child tables are not affected or included.</source>
          <target state="translated">자식 테이블은 영향을 하지 않거나 포함 하십시오.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">테이블 관계의 일부분으로 정의 된 하나 이상의 자식 테이블에 각 자식 테이블은 개별적으로 병합 해야 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph> 메서드는 일반적으로 일련의 변경 내용의 유효성 검사, 오류 조정으로 변경 되는 데이터 소스 업데이트 및 기존 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 새로 고침 관련 된 절차의 끝에 호출</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">개발자에 대해서는 false를 지정 하지 않은 경우 기존 데이터를 병합 하기 전에 변경 내용이 병합 작업 동안 유지 됩니다 병합을 수행할 때의 <ph id="ph1">`preserveChanges`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`true`</ph>, incoming values do not overwrite existing values in the Current row version of the existing row.</source>
          <target state="translated">경우는 <ph id="ph1">`preserveChanges`</ph> 로 설정 된 <ph id="ph2">`true`</ph>, 들어오는 값은 기존 행의 현재 행 버전의 기존 값을 덮어쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`false`</ph>, incoming values do overwrite the existing values in the Current row version of the existing row.</source>
          <target state="translated">경우는 <ph id="ph1">`preserveChanges`</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 들어오는 값은 기존 행의 현재 행 버전의 기존 값을 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row versions, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">행 버전에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>행 상태 및 행 버전<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">클라이언트 응용 프로그램에는 단일 단추가 사용자가 클릭할 수 있는 변경 된 데이터를 수집 하 고 중간 계층 구성 요소에 다시 보내기 전에 유효성 검사를 수행 하는 별로있지 않습니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataTable.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">이 시나리오는 &lt;xref:System.Data.DataTable.GetChanges%2A&gt;메서드가 먼저 호출 됩니다.&lt;/xref:System.Data.DataTable.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataTable&gt; optimized for validating and merging.</source>
          <target state="translated">이 메서드는 두 번째 &lt;xref:System.Data.DataTable&gt;유효성 검사 및 병합에 대 한 액세스에 최적화 된.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataTable&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">이 두 번째 &lt;xref:System.Data.DataTable&gt;개체는 포함 &lt;xref:System.Data.DataTable&gt;하 고 &lt;xref:System.Data.DataRow&gt;원래 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 의 하위 집합을 변경 된 개체&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</source>
          <target state="translated">이 하위 집합 일반적으로 더 작은 이며 따라서이 하위 집합은 보다 효율적으로 중간 계층 구성 요소에 다시 전달 합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">중간 계층 구성 요소는 다음 저장된 프로시저를 통해 변경 내용으로 원래 데이터 소스를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataTable&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">중간 계층은 새 다시 보낼 수 있습니다 &lt;xref:System.Data.DataTable&gt;(다시 실행 하 여 원래 쿼리), 원래 데이터와 데이터 원본에서 최신 데이터를 포함 하는 또는 데이터 원본에서 변경 된 내용이 있는 하위 집합을 클라이언트로 보낼 수 있습니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataTable&gt; can be merged back into the client application's original &lt;xref:System.Data.DataTable&gt; with the &lt;xref:System.Data.DataTable.Merge%2A&gt; method.</source>
          <target state="translated">(예를 들어 데이터 원본에서 자동으로 고유 기본 키 값을 만드는 경우 이러한 값 수에 다시 전파할 수 클라이언트 응용 프로그램입니다.) 두 경우 모두 반환 된 &lt;xref:System.Data.DataTable&gt;클라이언트 응용 프로그램의 원래로 다시 병합 되어야 &lt;xref:System.Data.DataTable&gt;와 &lt;xref:System.Data.DataTable.Merge%2A&gt;메서드.&lt;/xref:System.Data.DataTable.Merge%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataTable&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">새 소스를 병합할 때 &lt;xref:System.Data.DataTable&gt;대상에 모든 소스 행 한 &lt;xref:System.Data.DataRowState&gt;값 <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, 또는 <ph id="ph3">`Deleted`</ph> 동일한 기본 키 값을 가진 대상 행에 대응 됩니다.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">소스 행 한 &lt;xref:System.Data.DataRowState&gt;값 <ph id="ph1">`Added`</ph> 새 원본 행과 동일한 기본 키 값을 가진 새 대상 행에 대응 됩니다.&lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be merged with the current <bpt id="p2">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재와 병합 될 <bpt id="p2">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, to preserve changes in the current <bpt id="p2">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.<bpt id="p4">&lt;xref uid="langword_csharp_" name="" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재에서 변경 내용을 유지 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>고, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.<bpt id="p4">&lt;xref uid="langword_csharp_" name="" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Merge the specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the current <bpt id="p2">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, indicating whether to preserve changes and how to handle missing schema in the current <bpt id="p3">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 병합 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재의 <bpt id="p2">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 변경 내용을 유지할지 여부와 현재의 누락 된 스키마를 처리 하는 방법을 나타내는 <bpt id="p3">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Merge`</ph> method is used to merge two &lt;xref:System.Data.DataTable&gt; objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph> 병합할 두 개의 메서드를 사용 하는 &lt;xref:System.Data.DataTable&gt;비슷하긴 하지만 스키마가 포함 된 개체입니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">데이터 원본에서 최신 변경 내용을 기존 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 통합 하는 클라이언트 응용 프로그램에는 병합은 일반적으로 사용</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataTable&gt; with the latest data from the data source.</source>
          <target state="translated">이렇게 하면 클라이언트 응용 프로그램을 새로 고칠 수 있습니다. &lt;xref:System.Data.DataTable&gt;데이터 원본에서 최신 데이터로.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">병합 작업은 원래 테이블만 병합 될 테이블을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Child tables are not affected or included.</source>
          <target state="translated">자식 테이블은 영향을 하지 않거나 포함 하십시오.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">테이블 관계의 일부분으로 정의 된 하나 이상의 자식 테이블에 각 자식 테이블은 개별적으로 병합 해야 합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph> 메서드는 일반적으로 일련의 변경 내용의 유효성 검사, 오류 조정으로 변경 되는 데이터 소스 업데이트 및 기존 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 새로 고침 관련 된 절차의 끝에 호출</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">개발자에 대해서는 false를 지정 하지 않은 경우 기존 데이터를 병합 하기 전에 변경 내용이 병합 작업 동안 유지 됩니다 병합을 수행할 때의 <ph id="ph1">`preserveChanges`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`true`</ph>, incoming values do not overwrite existing values in the Current row version of the existing row.</source>
          <target state="translated">경우는 <ph id="ph1">`preserveChanges`</ph> 로 설정 된 <ph id="ph2">`true`</ph>, 들어오는 값은 기존 행의 현재 행 버전의 기존 값을 덮어쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`false`</ph>, incoming values do overwrite the existing values in the Current row version of the existing row.</source>
          <target state="translated">경우는 <ph id="ph1">`preserveChanges`</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 들어오는 값은 기존 행의 현재 행 버전의 기존 값을 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row versions, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">행 버전에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>행 상태 및 행 버전<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">클라이언트 응용 프로그램에는 단일 단추가 사용자가 클릭할 수 있는 변경 된 데이터를 수집 하 고 중간 계층 구성 요소에 다시 보내기 전에 유효성 검사를 수행 하는 별로있지 않습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataTable.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">이 시나리오는 &lt;xref:System.Data.DataTable.GetChanges%2A&gt;메서드가 먼저 호출 됩니다.&lt;/xref:System.Data.DataTable.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataTable&gt; optimized for validating and merging.</source>
          <target state="translated">이 메서드는 두 번째 &lt;xref:System.Data.DataTable&gt;유효성 검사 및 병합에 대 한 액세스에 최적화 된.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataTable&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">이 두 번째 &lt;xref:System.Data.DataTable&gt;개체는 포함 &lt;xref:System.Data.DataTable&gt;하 고 &lt;xref:System.Data.DataRow&gt;원래 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 의 하위 집합을 변경 된 개체&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</source>
          <target state="translated">이 하위 집합 일반적으로 더 작은 이며 따라서이 하위 집합은 보다 효율적으로 중간 계층 구성 요소에 다시 전달 합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">중간 계층 구성 요소는 다음 저장된 프로시저를 통해 변경 내용으로 원래 데이터 소스를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataTable&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">중간 계층은 새 다시 보낼 수 있습니다 &lt;xref:System.Data.DataTable&gt;(다시 실행 하 여 원래 쿼리), 원래 데이터와 데이터 원본에서 최신 데이터를 포함 하는 또는 데이터 원본에서 변경 된 내용이 있는 하위 집합을 클라이언트로 보낼 수 있습니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataTable&gt; can be merged back into the client application's original &lt;xref:System.Data.DataTable&gt; with the &lt;xref:System.Data.DataTable.Merge%2A&gt; method.</source>
          <target state="translated">(예를 들어 데이터 원본에서 자동으로 고유 기본 키 값을 만드는 경우 이러한 값 수에 다시 전파할 수 클라이언트 응용 프로그램입니다.) 두 경우 모두 반환 된 &lt;xref:System.Data.DataTable&gt;클라이언트 응용 프로그램의 원래로 다시 병합 되어야 &lt;xref:System.Data.DataTable&gt;와 &lt;xref:System.Data.DataTable.Merge%2A&gt;메서드.&lt;/xref:System.Data.DataTable.Merge%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.DataTable.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataTable&gt; objects are compared, because it is possible that the schemas may have been changed.</source>
          <target state="translated">경우는 &lt;xref:System.Data.DataTable.Merge%2A&gt;메서드가 호출 되 면 두 스키마 &lt;xref:System.Data.DataTable&gt;개체는 스키마 변경 되었을 수 있기 때문에 비교 됩니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">예를 들어, 기업 간 시나리오에서 새 열 수 있습니다에 추가한 XML 스키마는 자동화 된 프로세스에 의해 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source &lt;xref:System.Data.DataTable&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">경우 소스 &lt;xref:System.Data.DataTable&gt;스키마 요소를 포함 (추가 &lt;xref:System.Data.DataColumn&gt;개체) 대상에 누락 된, 스키마 요소를 설정 하 여 대상에 추가할 수는 <ph id="ph1">`missingSchemaAction`</ph> 인수 <ph id="ph2">`MissingSchemaAction.Add`</ph>.&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the merged &lt;xref:System.Data.DataTable&gt; contains the added schema and data.</source>
          <target state="translated">병합 된 경우에서 &lt;xref:System.Data.DataTable&gt;추가 된 스키마와 데이터를 포함 합니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">스키마를 병합 한 후 데이터를 병합 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataTable&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">새 소스를 병합할 때 &lt;xref:System.Data.DataTable&gt;대상에 모든 소스 행 한 &lt;xref:System.Data.DataRowState&gt;값 <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, 또는 <ph id="ph3">`Deleted`</ph> 동일한 기본 키 값을 가진 대상 행에 대응 됩니다.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">소스 행 한 &lt;xref:System.Data.DataRowState&gt;값 <ph id="ph1">`Added`</ph> 새 원본 행과 동일한 기본 키 값을 가진 새 대상 행에 대응 됩니다.&lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be merged with the current <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재와 병합 될 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, to preserve changes in the current <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재에서 변경 내용을 유지 하려면 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>고, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Gets or sets the initial starting size for this table.</source>
          <target state="translated">이 테이블에 대 한 초기 시작 크기를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MinimumCapacity allows the system to create an appropriate set of resources before fetching data.</source>
          <target state="translated">minimumcapacity는 시스템을에 데이터를 인출 하기 전에 리소스의 적절 한 세트를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a situation when performance is critical, setting this property can optimize performance.</source>
          <target state="translated">상황에서이 속성을 설정할 경우 성능 상태가 심각 하면 성능을 최적화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The initial starting size in rows of this table.</source>
          <target state="translated">이 테이블의 행에 대 한 초기 시작 크기입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The default is 50.</source>
          <target state="translated">기본값은 50입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace for the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 저장 된 데이터의 XML 표현에 대 한 네임 스페이스를 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The namespace of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">네임 스페이스는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same schema as the table.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 테이블과 동일한 스키마와 함께 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use the NewRow method to create new &lt;xref:System.Data.DataRow&gt; objects with the same schema as the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">새 &lt;xref:System.Data.DataRow&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 와 동일한 스키마를 사용 하 여 개체&lt;/xref:System.Data.DataRow&gt; 를 만들 NewRow 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>After creating a &lt;xref:System.Data.DataRow&gt;, you can add it to the &lt;xref:System.Data.DataRowCollection&gt;, through the &lt;xref:System.Data.DataTable&gt; object's &lt;xref:System.Data.DataTable.Rows%2A&gt; property.</source>
          <target state="translated">만든 후는 &lt;xref:System.Data.DataRow&gt;를에 추가할 수 있습니다는 &lt;xref:System.Data.DataRowCollection&gt;통해는 &lt;xref:System.Data.DataTable&gt;개체의 &lt;xref:System.Data.DataTable.Rows%2A&gt;속성.&lt;/xref:System.Data.DataTable.Rows%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataRowCollection&gt; &lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use NewRow to create new rows, the rows must be added to or deleted from the data table before you call &lt;xref:System.Data.DataTable.Clear%2A&gt;.</source>
          <target state="translated">NewRow를 사용 하 여 새 행을 만들 때 행은에 추가 하거나 &lt;xref:System.Data.DataTable.Clear%2A&gt;.&lt;/xref:System.Data.DataTable.Clear%2A&gt; 를 호출 하기 전에 데이터 테이블에서 삭제 해야</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same schema as the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 와 동일한 스키마와는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Returns an array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">배열을 반환 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; value that describes the size of the array.</source>
          <target state="translated">A &lt;xref:System.Int32&gt;배열 크기를 설명 하는 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The new array.</source>
          <target state="translated">새 배열입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Creates a new row from an existing row.</source>
          <target state="translated">기존 행에서 새 행을 만듭니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRowBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRowBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스를 파생 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Data.DataTable.ColumnChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Data.DataTable.ColumnChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataColumnChangeEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataColumnChangeEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Data.DataTable.ColumnChanging"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Data.DataTable.ColumnChanging"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataColumnChangeEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataColumnChangeEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Raises the &lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt; event.</source>
          <target state="translated">발생 된 &lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;이벤트.&lt;/xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt; that contains the event data.</source>
          <target state="translated">A &lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.ComponentModel.PropertyChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Notifies the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that a <bpt id="p2">&lt;xref href="System.Data.DataColumn"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is being removed.</source>
          <target state="translated">알립니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 <bpt id="p2">&lt;xref href="System.Data.DataColumn"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 제거 하는 중입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> being removed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제거 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Data.DataTable.RowChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Data.DataTable.RowChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRowChangeEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRowChangeEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Data.DataTable.RowChanging"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Data.DataTable.RowChanging"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRowChangeEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRowChangeEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Data.DataTable.RowDeleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Data.DataTable.RowDeleted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRowChangeEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRowChangeEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Data.DataTable.RowDeleting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Data.DataTable.RowDeleting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRowChangeEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRowChangeEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Data.DataTable.TableCleared"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Data.DataTable.TableCleared"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raises the &lt;xref:System.Data.DataTable.TableCleared&gt; event, which is fired immediately after all rows have been successfully cleared but before the &lt;xref:System.Data.DataTable.Clear%2A&gt; method returns control back to the caller.</source>
          <target state="translated">발생는 &lt;xref:System.Data.DataTable.TableCleared&gt;모든 행이 성공적으로 지워진 하기 전에 직후 발생 하는 이벤트는 &lt;xref:System.Data.DataTable.Clear%2A&gt;메서드 호출자에 게 제어를 반환 합니다.&lt;/xref:System.Data.DataTable.Clear%2A&gt; &lt;/xref:System.Data.DataTable.TableCleared&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableClearEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTableClearEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Data.DataTable.TableClearing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Data.DataTable.TableClearing"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raises the &lt;xref:System.Data.DataTable.TableClearing&gt; event, which is fired before processing of the &lt;xref:System.Data.DataTable.Clear%2A&gt; operation begins.</source>
          <target state="translated">발생 된 &lt;xref:System.Data.DataTable.TableClearing&gt;처리 되기 전에 발생 하는 이벤트는 &lt;xref:System.Data.DataTable.Clear%2A&gt;작업이 시작.&lt;/xref:System.Data.DataTable.Clear%2A&gt; &lt;/xref:System.Data.DataTable.TableClearing&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableClearEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTableClearEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Data.DataTable.TableNewRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Data.DataTable.TableNewRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raises the &lt;xref:System.Data.DataTable.TableNewRow&gt; event, which fires after a new &lt;xref:System.Data.DataRow&gt; has been created using &lt;xref:System.Data.DataTable.NewRow%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.TableNewRow&gt;새 &lt;xref:System.Data.DataRow&gt; &lt;xref:System.Data.DataTable.NewRow%2A&gt;.&lt;/xref:System.Data.DataTable.NewRow%2A&gt; 를 사용 하 여 만든&lt;/xref:System.Data.DataRow&gt; 후에 발생 하는 이벤트&lt;/xref:System.Data.DataTable.TableNewRow&gt; 를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">에 대 한 개요 <bpt id="p1">[</bpt>NIB: 이벤트를 발생 시키는<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableNewRowEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTableNewRowEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Gets the collection of parent relations for this <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 대 한 부모 관계의 컬렉션을 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the parent relations for the table.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 테이블에 대 한 부모 관계를 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">없는 경우에 빈 컬렉션이 반환 됩니다 <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 존재 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace for the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 저장 된 데이터의 XML 표현에 대 한 네임 스페이스를 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The prefix of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">접두사는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Gets or sets an array of columns that function as primary keys for the data table.</source>
          <target state="translated">데이터 테이블에 대 한 기본 키로 열 배열 해당 함수를 설정 하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>The primary key of a table must be unique to identify the record in the table.</source>
          <target state="translated">테이블의 기본 키 테이블의 레코드를 식별 하 고유 해야 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>It's also possible to have a table with a primary key made up of two or more columns.</source>
          <target state="translated">두 개 이상의 열으로 구성 하는 기본 키가 있는 테이블을 가질 수 이기도 합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>This occurs when a single column can't contain enough unique values.</source>
          <target state="translated">단일 열 충분 한 고유 값을 포함할 수 없는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a two column primary key might consist of a "FirstName" and "LastName" column.</source>
          <target state="translated">예를 들어 두 개의 열 기본 키 "FirstName" 및 "LastName" 열의 구성 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because primary keys can be made up of more than one column, the PrimaryKey property consists of an array of &lt;xref:System.Data.DataColumn&gt; objects.</source>
          <target state="translated">기본 키 열이 여러 개 구성 될 수 있습니다, 때문에 PrimaryKey 속성의 배열로 구성 됩니다 &lt;xref:System.Data.DataColumn&gt;개체입니다.&lt;/xref:System.Data.DataColumn&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataColumn"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The key is a foreign key.</source>
          <target state="translated">키는 외래 키입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">XML 스키마와 데이터를는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt; 지정된을 사용 하 여</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current &lt;xref:System.Data.DataTable&gt; and its descendents are loaded with the data from the supplied &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">현재 &lt;xref:System.Data.DataTable&gt;및 &lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt; 제공 된 데이터와 함께 로드 되는 종속 항목&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method is identical to that of the &lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=fullName&gt; method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">이 메서드의 동작은 동일 합니다는 &lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=fullName&gt;메서드와 비슷하지만 경우에 데이터는 현재 테이블 및 해당 하위 항목에 대해서만 로드 됩니다.&lt;/xref:System.Data.DataSet.ReadXml%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReadXml method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataTable&gt; from an XML document, whereas the &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">ReadXml 메서드에 데이터와 스키마를를 모두만 데이터를 읽을 수 있습니다는 &lt;xref:System.Data.DataTable&gt;XML 문서 로부터 반면는 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드는 스키마만 읽습니다.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; and &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;및 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 작성 하는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`WriteXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">스키마만을 작성 하기 위해 사용 하 여는 <ph id="ph1">`WriteXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">인라인 스키마를 지정 하는 경우 데이터를 로드 하기 전에 기존 관계형 구조를 확장 하는 인라인 스키마 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">충돌이 있는지 (예를 들어 다른 데이터 형식으로 정의 된 동일한 테이블에 동일한 열)에 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">인라인 스키마를 지정 하는 경우 XML 문서의 구조에 따라 동일한 관계형 구조를 필요에 따라 유추를 통해 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">유추를 통해 모든 데이터를 노출 하기 위해 스키마를 확장할 수 없습니다, 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 <ph id="ph2">`DataSet`</ph> 해당 XML 요소를 연결 하지는 않습니다 <ph id="ph3">`DataColumn`</ph> 또는 <ph id="ph4">`DataTable`</ph> 는 serialize 된 xml ("_")와 같은 문자가 올바른 XML 문자는 이스케이프 하는 경우.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> XML 요소 이름에 잘못 된 XML 문자가 이스케이프 자신과 따라서만 사용할 수는 동일 합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">XML 요소 이름에 사용할 수 있는 문자는 이스케이프 처리 하는 동안 요소가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>An object that derives from &lt;xref:System.IO.Stream&gt;</source>
          <target state="translated">파생 되는 개체&lt;xref:System.IO.Stream&gt;&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 읽는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">XML 스키마와 데이터를는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.TextReader&gt;.&lt;/xref:System.IO.TextReader&gt; 지정된을 사용 하 여</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current &lt;xref:System.Data.DataTable&gt; and its descendents are loaded with the data from the supplied &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">현재 &lt;xref:System.Data.DataTable&gt;및 &lt;xref:System.IO.TextReader&gt;.&lt;/xref:System.IO.TextReader&gt; 제공 된 데이터와 함께 로드 되는 종속 항목&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method is identical to that of the &lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=fullName&gt; method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">이 메서드의 동작은 동일 합니다는 &lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=fullName&gt;메서드와 비슷하지만 경우에 데이터는 현재 테이블 및 해당 하위 항목에 대해서만 로드 됩니다.&lt;/xref:System.Data.DataSet.ReadXml%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReadXml method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataTable&gt; from an XML document, whereas the &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">ReadXml 메서드에 데이터와 스키마를를 모두만 데이터를 읽을 수 있습니다는 &lt;xref:System.Data.DataTable&gt;XML 문서 로부터 반면는 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드는 스키마만 읽습니다.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; and &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;및 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 작성 하는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`WriteXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">스키마만을 작성 하기 위해 사용 하 여는 <ph id="ph1">`WriteXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">인라인 스키마를 지정 하는 경우 데이터를 로드 하기 전에 기존 관계형 구조를 확장 하는 인라인 스키마 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">충돌이 있는지 (예를 들어 다른 데이터 형식으로 정의 된 동일한 테이블에 동일한 열)에 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">인라인 스키마를 지정 하는 경우 XML 문서의 구조에 따라 동일한 관계형 구조를 필요에 따라 유추를 통해 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">유추를 통해 모든 데이터를 노출 하기 위해 스키마를 확장할 수 없습니다, 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 <ph id="ph2">`DataSet`</ph> 해당 XML 요소를 연결 하지는 않습니다 <ph id="ph3">`DataColumn`</ph> 또는 <ph id="ph4">`DataTable`</ph> 는 serialize 된 xml ("_")와 같은 문자가 올바른 XML 문자는 이스케이프 하는 경우.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> XML 요소 이름에 잘못 된 XML 문자가 이스케이프 자신과 따라서만 사용할 수는 동일 합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">XML 요소 이름에 사용할 수 있는 문자는 이스케이프 처리 하는 동안 요소가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; that will be used to read the data.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;데이터를 읽을 사용할.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 읽는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified file.</source>
          <target state="translated">XML 스키마와 데이터를는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일에서 합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current &lt;xref:System.Data.DataTable&gt; and its descendents are loaded with the data from the file named in the supplied &lt;xref:System.String&gt;.</source>
          <target state="translated">현재 &lt;xref:System.Data.DataTable&gt;및 그 하위 항목에 제공 된 &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; 에 표시 된 파일에서 데이터와 함께 로드 되는&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method is identical to that of the &lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=fullName&gt; method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">이 메서드의 동작은 동일 합니다는 &lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=fullName&gt;메서드와 비슷하지만 경우에 데이터는 현재 테이블 및 해당 하위 항목에 대해서만 로드 됩니다.&lt;/xref:System.Data.DataSet.ReadXml%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReadXml method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataTable&gt; from an XML document, whereas the &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">ReadXml 메서드에 데이터와 스키마를를 모두만 데이터를 읽을 수 있습니다는 &lt;xref:System.Data.DataTable&gt;XML 문서 로부터 반면는 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드는 스키마만 읽습니다.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; and &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;및 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 작성 하는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`WriteXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">스키마만을 작성 하기 위해 사용 하 여는 <ph id="ph1">`WriteXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">인라인 스키마를 지정 하는 경우 데이터를 로드 하기 전에 기존 관계형 구조를 확장 하는 인라인 스키마 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">충돌이 있는지 (예를 들어 다른 데이터 형식으로 정의 된 동일한 테이블에 동일한 열)에 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">인라인 스키마를 지정 하는 경우 XML 문서의 구조에 따라 동일한 관계형 구조를 필요에 따라 유추를 통해 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">유추를 통해 모든 데이터를 노출 하기 위해 스키마를 확장할 수 없습니다, 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 <ph id="ph2">`DataSet`</ph> 해당 XML 요소를 연결 하지는 않습니다 <ph id="ph3">`DataColumn`</ph> 또는 <ph id="ph4">`DataTable`</ph> 는 serialize 된 xml ("_")와 같은 문자가 올바른 XML 문자는 이스케이프 하는 경우.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> XML 요소 이름에 잘못 된 XML 문자가 이스케이프 자신과 따라서만 사용할 수는 동일 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">XML 요소 이름에 사용할 수 있는 문자는 이스케이프 처리 하는 동안 요소가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The name of the file from which to read the data.</source>
          <target state="translated">데이터를 읽을 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 읽는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Reads XML Schema and Data into the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">XML 스키마와 데이터를는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt; 지정된을 사용 하 여</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current &lt;xref:System.Data.DataTable&gt; and its descendents are loaded with the data from the file named in the supplied &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">현재 &lt;xref:System.Data.DataTable&gt;및 그 하위 항목에 제공 된 &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt; 에 표시 된 파일에서 데이터와 함께 로드 되는&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method is identical to that of the ReadXml method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">이 메서드는 제외 하 고 현재 테이블 및 해당 하위 항목에 대해서만 데이터가 로드 되는 예에서 ReadXml 메서드와 동일 합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReadXml method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataTable&gt; from an XML document, whereas the &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">ReadXml 메서드에 데이터와 스키마를를 모두만 데이터를 읽을 수 있습니다는 &lt;xref:System.Data.DataTable&gt;XML 문서 로부터 반면는 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드는 스키마만 읽습니다.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; and &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;및 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 작성 하는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`WriteXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">스키마만을 작성 하기 위해 사용 하 여는 <ph id="ph1">`WriteXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">인라인 스키마를 지정 하는 경우 데이터를 로드 하기 전에 기존 관계형 구조를 확장 하는 인라인 스키마 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">충돌이 있는지 (예를 들어 다른 데이터 형식으로 정의 된 동일한 테이블에 동일한 열)에 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">인라인 스키마를 지정 하는 경우 XML 문서의 구조에 따라 동일한 관계형 구조를 필요에 따라 유추를 통해 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">유추를 통해 모든 데이터를 노출 하기 위해 스키마를 확장할 수 없습니다, 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 <ph id="ph2">`DataSet`</ph> 해당 XML 요소를 연결 하지는 않습니다 <ph id="ph3">`DataColumn`</ph> 또는 <ph id="ph4">`DataTable`</ph> 는 serialize 된 xml ("_")와 같은 문자가 올바른 XML 문자는 이스케이프 하는 경우.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> XML 요소 이름에 잘못 된 XML 문자가 이스케이프 자신과 따라서만 사용할 수는 동일 합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">XML 요소 이름에 사용할 수 있는 문자는 이스케이프 처리 하는 동안 요소가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; that will be used to read the data.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;데이터를 읽을 사용할.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 읽는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Reads an XML schema into the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified stream.</source>
          <target state="translated">XML 스키마에 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 스트림을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ReadXmlSchema method to create the schema for a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">ReadXmlSchema 메서드를 사용 하 여에 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 스키마를 만들려면</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">스키마는 XML 문서를 작성 하려면 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준에 따라 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">msdata:DataType 및 xs:type 형식 일치 하지 않는 경우 데이터 손상이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception will be thrown.</source>
          <target state="translated">예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph> 메서드는 일반적으로 &lt;xref:System.Data.DataTable.ReadXml%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 를 채우는 데 사용 되는 메서드&lt;/xref:System.Data.DataTable.ReadXml%2A&gt; 를 호출 하기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">XML 스키마를 사용 하 여 중첩된 관계를 만들려면 암시적 중첩 된 요소를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also configure the nested relation to use explicit column names.</source>
          <target state="translated">명시적 열 이름을 사용 하도록 중첩된 관계를 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">요소 중첩된 관계에 참여 하도록 해당 Datatable에 대 한 순서 대로 암시적으로 중첩 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The stream used to read the schema.</source>
          <target state="translated">스키마를 읽는 데 사용 되는 스트림.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Reads an XML schema into the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">XML 스키마에 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.TextReader&gt;.&lt;/xref:System.IO.TextReader&gt; 지정된을 사용 하 여</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ReadXmlSchema method to create the schema for a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">ReadXmlSchema 메서드를 사용 하 여에 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 스키마를 만들려면</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">스키마는 XML 문서를 작성 하려면 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준에 따라 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">msdata:DataType 및 xs:type 형식 일치 하지 않는 경우 데이터 손상이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception will be thrown.</source>
          <target state="translated">예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph> 메서드는 일반적으로 &lt;xref:System.Data.DataTable.ReadXml%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 를 채우는 데 사용 되는 메서드&lt;/xref:System.Data.DataTable.ReadXml%2A&gt; 를 호출 하기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">XML 스키마를 사용 하 여 중첩된 관계를 만들려면 암시적 중첩 된 요소를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also reconfigure the nested relation to use explicit column names.</source>
          <target state="translated">명시적 열 이름을 사용 하도록 중첩된 관계를 재구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">요소 중첩된 관계에 참여 하도록 해당 Datatable에 대 한 순서 대로 암시적으로 중첩 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; used to read the schema information.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;스키마 정보를 사용 합니다.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Reads an XML schema into the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified file.</source>
          <target state="translated">XML 스키마에 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일에서 합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ReadXmlSchema method to create the schema for a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">ReadXmlSchema 메서드를 사용 하 여에 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 스키마를 만들려면</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">스키마는 XML 문서를 작성 하려면 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준에 따라 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">msdata:DataType 및 xs:type 형식 일치 하지 않는 경우 데이터 손상이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception will be thrown.</source>
          <target state="translated">예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; method which is used to fill the <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph> 일반적으로 메서드를 호출 하기 전에 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;채우는 데 사용 되는 메서드는 <ph id="ph2">`DataTable`</ph>.&lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">XML 스키마를 사용 하 여 중첩된 관계를 만들려면 암시적 중첩 된 요소를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also reconfigure the nested relation to use explicit column names.</source>
          <target state="translated">명시적 열 이름을 사용 하도록 중첩된 관계를 재구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">요소 중첩된 관계에 참여 하도록 해당 Datatable에 대 한 순서 대로 암시적으로 중첩 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>The name of the file from which to read the schema information.</source>
          <target state="translated">스키마 정보를 읽을 수 있는 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Reads an XML schema into the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">XML 스키마에 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt; 지정된을 사용 하 여</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ReadXmlSchema method to create the schema for a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">ReadXmlSchema 메서드를 사용 하 여에 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 대 한 스키마를 만들려면</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">스키마는 XML 문서를 작성 하려면 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준에 따라 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">msdata:DataType 및 xs:type 형식 일치 하지 않는 경우 데이터 손상이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception will be thrown.</source>
          <target state="translated">예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph> 메서드는 일반적으로 &lt;xref:System.Data.DataTable.ReadXml%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 를 채우는 데 사용 되는 메서드&lt;/xref:System.Data.DataTable.ReadXml%2A&gt; 를 호출 하기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The way to create a nested relation using XML schema is to have implicit nested elements.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 하는 XML 스키마를 사용 하 여 중첩된 관계를 만들려면 방법은 암시적 중첩 된 요소가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the nested relation could be re-wired, to use explicit column names.</source>
          <target state="translated">또한 중첩된 관계 명시적 열 이름을 사용 하도록 다시 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">암시적으로 중첩된 관계에 참여 하도록 해당 Datatable에 대 한 중첩 된 요소에 대 한 필수입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; used to read the schema information.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;스키마 정보를 사용 합니다.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Reads from an XML stream.</source>
          <target state="translated">XML 스트림에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlReader&gt; object.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlReader&gt;개체입니다.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;xref:System.Data.DataTable.AcceptChanges*&gt; was called.</source>
          <target state="translated">로드 된 이후 테이블 또는 마지막으로 적용 된 모든 변경 내용이 롤백됩니다 &lt;xref:System.Data.DataTable.AcceptChanges*&gt;호출 되었습니다.&lt;/xref:System.Data.DataTable.AcceptChanges*&gt;</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>When RejectChanges is called, any &lt;xref:System.Data.DataRow&gt; objects that are still in edit-mode cancel their edits.</source>
          <target state="translated">RejectChanges 호출 될 때 모든 &lt;xref:System.Data.DataRow&gt;아직 편집 모드에에서 있는 개체의 편집이 취소 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>New rows are removed.</source>
          <target state="translated">새 행이 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rows with the &lt;xref:System.Data.DataRowState&gt; set to <ph id="ph1">`Modified`</ph> or <ph id="ph2">`Deleted`</ph> return back to their original state.</source>
          <target state="translated">행의 &lt;xref:System.Data.DataRowState&gt;로 설정 <ph id="ph1">`Modified`</ph> 또는 <ph id="ph2">`Deleted`</ph> 를 원래 상태로 반환 합니다.&lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Gets or sets the serialization format.</source>
          <target state="translated">Serialization 형식을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration specifying either <bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_Xml" name="Xml" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> serialization.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 중 하나를 지정 하는 열거형 <bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_Xml" name="Xml" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Resets the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to its original state.</source>
          <target state="translated">다시 설정 된 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 원래 상태로 있습니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Reset removes all data, indexes, relations, and columns of the table.</source>
          <target state="translated">원래 대로 모든 데이터, 인덱스, 관계 및 테이블의 열을 제거합니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</source>
          <target state="translated">DataSet에 DataTable가 포함 된 경우 테이블 여전히 일부가 될 데이터 집합의 표를 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Occurs after a <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been changed successfully.</source>
          <target state="translated">다음에 발생 한 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 성공적으로 변경 되었습니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable 이벤트 처리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is changing.</source>
          <target state="translated">발생 경우는 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변경 됩니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable 이벤트 처리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Occurs after a row in the table has been deleted.</source>
          <target state="translated">테이블의 행이 삭제 된 후 발생 합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable 이벤트 처리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Occurs before a row in the table is about to be deleted.</source>
          <target state="translated">테이블의 행이 삭제 될 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>DataTable 이벤트 처리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Gets the collection of rows that belong to this table.</source>
          <target state="translated">이 테이블에 속하는 행의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a new &lt;xref:System.Data.DataRow&gt;, you must use the &lt;xref:System.Data.DataTable.NewRow%2A&gt; method to return a new object.</source>
          <target state="translated">새로 만들려면 &lt;xref:System.Data.DataRow&gt;를 사용 해야 합니다는 &lt;xref:System.Data.DataTable.NewRow%2A&gt;새 개체를 반환 하는 메서드.&lt;/xref:System.Data.DataTable.NewRow%2A&gt; &lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such an object is automatically configured according to the schema defined for the &lt;xref:System.Data.DataTable&gt; through its collection of &lt;xref:System.Data.DataColumn&gt; objects.</source>
          <target state="translated">이러한 개체에 대해 정의 된 스키마에 따라 자동으로 구성 되는 &lt;xref:System.Data.DataTable&gt;의 컬렉션을 통해 &lt;xref:System.Data.DataColumn&gt;개체.&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>After creating a new row and setting the values for each column in the row, add the row to the &lt;xref:System.Data.DataRowCollection&gt; using the <ph id="ph1">`Add`</ph> method.</source>
          <target state="translated">새 행을 만드는 행의 각 열에 대 한 값을 설정 후, 행을 추가 하는 &lt;xref:System.Data.DataRowCollection&gt;를 사용 하는 <ph id="ph1">`Add`</ph> 메서드.&lt;/xref:System.Data.DataRowCollection&gt;</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each &lt;xref:System.Data.DataRow&gt; in the collection represents a row of data in the table.</source>
          <target state="translated">각 &lt;xref:System.Data.DataRow&gt;컬렉션에는 테이블에 데이터의 행을 나타냅니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>To commit a change to the value of a column in the row, you must invoke the &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; method.</source>
          <target state="translated">행의 열 값에는 변경 내용을 커밋하지를 호출 해야는 &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;메서드.&lt;/xref:System.Data.DataTable.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRowCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects; otherwise a null value if no <bpt id="p3">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRowCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 포함 된 <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체이 고, 그렇지 않은 경우에 null 값이 없는 경우 <bpt id="p3">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 개체가 존재 합니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Gets an array of all <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">모든 배열을 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure the proper sort order, specify sort criteria with &lt;xref:System.Data.DataTable.Select%2A&gt; or &lt;xref:System.Data.DataTable.Select%2A&gt;.</source>
          <target state="translated">적절 한 정렬 순서를 보장 하려면 또는 &lt;xref:System.Data.DataTable.Select%2A&gt; &lt;xref:System.Data.DataTable.Select%2A&gt;.&lt;/xref:System.Data.DataTable.Select%2A&gt; &lt;/xref:System.Data.DataTable.Select%2A&gt; 정렬 조건을 지정합니다</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Gets an array of all <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that match the filter criteria.</source>
          <target state="translated">모든 배열을 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 필터 조건과 일치 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create the <ph id="ph1">`filterExpression`</ph> argument, use the same rules that apply to the &lt;xref:System.Data.DataColumn&gt; class's &lt;xref:System.Data.DataColumn.Expression%2A&gt; property value for creating filters.</source>
          <target state="translated">만들려는 <ph id="ph1">`filterExpression`</ph> 인수에 적용 되는 동일한 규칙을 사용는 &lt;xref:System.Data.DataColumn&gt;클래스의 &lt;xref:System.Data.DataColumn.Expression%2A&gt;필터를 만들기 위한 속성 값.&lt;/xref:System.Data.DataColumn.Expression%2A&gt; &lt;/xref:System.Data.DataColumn&gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure the proper sort order, specify sort criteria with &lt;xref:System.Data.DataTable.Select%2A&gt; or &lt;xref:System.Data.DataTable.Select%2A&gt;.</source>
          <target state="translated">적절 한 정렬 순서를 보장 하려면 또는 &lt;xref:System.Data.DataTable.Select%2A&gt; &lt;xref:System.Data.DataTable.Select%2A&gt;.&lt;/xref:System.Data.DataTable.Select%2A&gt; &lt;/xref:System.Data.DataTable.Select%2A&gt; 정렬 조건을 지정합니다</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">필터에 열에 null 값이 포함 된 결과에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">행을 필터링 하는 데 사용 되는 조건입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax <ph id="ph1">\[</ph>C#<ph id="ph2">\]</ph><ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">행을 필터링 하는 방법에 예제를 보려면 <bpt id="p1">[</bpt>DataView RowFilter 구문 <ph id="ph1">\[</ph>C#<ph id="ph2">\]</ph><ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Gets an array of all <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that match the filter criteria, in the specified sort order.</source>
          <target state="translated">모든 배열을 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 필터 조건을 지정 된 정렬 순서에서 일치 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>To form the <ph id="ph1">`filterExpression`</ph> argument, use the same rules for creating the &lt;xref:System.Data.DataColumn&gt; class's &lt;xref:System.Data.DataColumn.Expression%2A&gt; property value.</source>
          <target state="translated">양식에 <ph id="ph1">`filterExpression`</ph> 인수를 동일한 규칙을 만들기 위한 사용은 &lt;xref:System.Data.DataColumn&gt;클래스의 &lt;xref:System.Data.DataColumn.Expression%2A&gt;속성 값.&lt;/xref:System.Data.DataColumn.Expression%2A&gt; &lt;/xref:System.Data.DataColumn&gt;</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Sort`</ph> argument also uses the same rules for creating class's &lt;xref:System.Data.DataColumn.Expression%2A&gt; strings.</source>
          <target state="translated"><ph id="ph1">`Sort`</ph> 인수 클래스의를 만들기 위한 동일한 규칙에도 사용 &lt;xref:System.Data.DataColumn.Expression%2A&gt;문자열.&lt;/xref:System.Data.DataColumn.Expression%2A&gt;</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">필터에 열에 null 값이 포함 된 결과에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">행을 필터링 하는 데 사용 되는 조건입니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax <ph id="ph1">\[</ph>C#<ph id="ph2">\]</ph><ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">행을 필터링 하는 방법에 예제를 보려면 <bpt id="p1">[</bpt>DataView RowFilter 구문 <ph id="ph1">\[</ph>C#<ph id="ph2">\]</ph><ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>A string specifying the column and sort direction.</source>
          <target state="translated">열과 정렬 방향을 지정 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects matching the filter expression.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 필터 식과 일치 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Gets an array of all <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that match the filter in the order of the sort that match the specified state.</source>
          <target state="translated">모든 배열을 가져옵니다 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 상태와 일치 하는 필터와 일치 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>To form the <ph id="ph1">`filterExpression`</ph> argument, use the same rules for creating the &lt;xref:System.Data.DataColumn&gt; class's &lt;xref:System.Data.DataColumn.Expression%2A&gt; property value.</source>
          <target state="translated">양식에 <ph id="ph1">`filterExpression`</ph> 인수를 동일한 규칙을 만들기 위한 사용은 &lt;xref:System.Data.DataColumn&gt;클래스의 &lt;xref:System.Data.DataColumn.Expression%2A&gt;속성 값.&lt;/xref:System.Data.DataColumn.Expression%2A&gt; &lt;/xref:System.Data.DataColumn&gt;</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Sort`</ph> argument also uses the same rules for creating class's &lt;xref:System.Data.DataColumn.Expression%2A&gt; strings.</source>
          <target state="translated"><ph id="ph1">`Sort`</ph> 인수 클래스의를 만들기 위한 동일한 규칙에도 사용 &lt;xref:System.Data.DataColumn.Expression%2A&gt;문자열.&lt;/xref:System.Data.DataColumn.Expression%2A&gt;</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">필터에 열에 null 값이 포함 된 결과에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">행을 필터링 하는 데 사용 되는 조건입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax <ph id="ph1">\[</ph>C#<ph id="ph2">\]</ph><ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">행을 필터링 하는 방법에 예제를 보려면 <bpt id="p1">[</bpt>DataView RowFilter 구문 <ph id="ph1">\[</ph>C#<ph id="ph2">\]</ph><ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>A string specifying the column and sort direction.</source>
          <target state="translated">열과 정렬 방향을 지정 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.DataViewRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.DataViewRowState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대 한는 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sites bind a &lt;xref:System.ComponentModel.Component&gt; to a &lt;xref:System.ComponentModel.Container&gt; and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">사이트 바인딩는 &lt;xref:System.ComponentModel.Component&gt;에 &lt;xref:System.ComponentModel.Container&gt;서로 통신할 수 있도록 할 뿐만 아니라 컨테이너에서 해당 구성 요소를 관리할 수 있는 방법을 제공 합니다.&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이 멤버에 대 한 참조 <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataTable&gt; instance is cast to an &lt;xref:System.ComponentModel.IListSource&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.DataTable&gt;인스턴스로 캐스팅 되는 &lt;xref:System.ComponentModel.IListSource&gt;인터페이스.&lt;/xref:System.ComponentModel.IListSource&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the collection is a collection of &lt;xref:System.Collections.IList&gt; objects; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>컬렉션의 컬렉션의 경우 &lt;xref:System.Collections.IList&gt;개체이 고, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이 멤버에 대 한 참조 <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataTable&gt; instance is cast to an &lt;xref:System.ComponentModel.IListSource&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.DataTable&gt;인스턴스로 캐스팅 되는 &lt;xref:System.ComponentModel.IListSource&gt;인터페이스.&lt;/xref:System.ComponentModel.IListSource&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; that can be bound to a data source from the object.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;개체에서 데이터 원본에 바인딩할 수 있습니다.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이 멤버에 대 한 참조 <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.DataSet&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;인터페이스.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchema&gt; that describes the XML representation of the object that is produced by the &lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml<bpt id="p1">*</bpt>&gt; method and consumed by the &lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml<ept id="p1">*</ept>&gt; method.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;의해 생성 되는 개체의 XML 표현을 설명 하는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 메서드 및에서 소비 되는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 메서드.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이 멤버에 대 한 참조 <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.DataSet&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;인터페이스.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>An XmlReader.</source>
          <target state="translated">XmlReader입니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이 멤버에 대 한 참조 <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.DataSet&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;인터페이스.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>An XmlWriter.</source>
          <target state="translated">XmlWriter입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>Occurs after a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is cleared.</source>
          <target state="translated">다음에 발생 한 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지워집니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TableCleared event is fired immediately after all rows have been successfully cleared but before the &lt;xref:System.Data.DataTable.Clear%2A&gt; method returns control back to the caller.</source>
          <target state="translated">모든 행이 성공적으로 지워진 하기 전에 직후 TableCleared 이벤트가 발생 된 &lt;xref:System.Data.DataTable.Clear%2A&gt;메서드 호출자에 게 제어를 반환 합니다.&lt;/xref:System.Data.DataTable.Clear%2A&gt;</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TableCleared event is not fired if there are any exceptions during the clear operation.</source>
          <target state="translated">지우기 작업 중 모든 예외가 있는 경우 TableCleared 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is cleared.</source>
          <target state="translated">발생 경우는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지워집니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TableClearing event is fired before processing of the &lt;xref:System.Data.DataTable.Clear%2A&gt; operation begins.</source>
          <target state="translated">TableClearing 이벤트가 처리 되기 전에 &lt;xref:System.Data.DataTable.Clear%2A&gt;작업이 시작.&lt;/xref:System.Data.DataTable.Clear%2A&gt;</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is always fired when the &lt;xref:System.Data.DataTable.Clear%2A&gt; method is invoked, even if the table contains zero rows.</source>
          <target state="translated">이 이벤트는 시기는 &lt;xref:System.Data.DataTable.Clear%2A&gt;테이블&amp;0; 개의 행을 포함 하는 경우에 메서드를 호출 합니다.&lt;/xref:System.Data.DataTable.Clear%2A&gt;</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이름을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TableName is used to return this table from the parent &lt;xref:System.Data.DataSet&gt; object's &lt;xref:System.Data.DataTableCollection&gt; (returned by the &lt;xref:System.Data.DataSet.Tables%2A&gt; property).</source>
          <target state="translated">TableName를 사용 하 여 부모 개체에서이 테이블을 반환 하 &lt;xref:System.Data.DataSet&gt;개체의 &lt;xref:System.Data.DataTableCollection&gt;(에서 반환 되는 &lt;xref:System.Data.DataSet.Tables%2A&gt;속성).&lt;/xref:System.Data.DataSet.Tables%2A&gt; &lt;/xref:System.Data.DataTableCollection&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이름에서 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or empty string ("") is passed in and this table belongs to a collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>또는 빈 문자열 ("")에 전달 되 고이 테이블 컬렉션에 속하는 합니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>The table belongs to a collection that already has a table with the same name.</source>
          <target state="translated">같은 이름의 테이블이 이미 있는 컬렉션에 속해 있습니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>(Comparison is case-sensitive).</source>
          <target state="translated">(비교는 대/소문자 구분)입니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Occurs when a new <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is inserted.</source>
          <target state="translated">새 발생 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>Fires after a new &lt;xref:System.Data.DataRow&gt; has been created using &lt;xref:System.Data.DataTable.NewRow%2A&gt;.</source>
          <target state="translated">새 &lt;xref:System.Data.DataRow&gt; &lt;xref:System.Data.DataTable.NewRow%2A&gt;.&lt;/xref:System.Data.DataTable.NewRow%2A&gt; 를 사용 하 여 만든&lt;/xref:System.Data.DataRow&gt; 후에 발생</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is fired before the invoked <ph id="ph1">`NewRow`</ph> method returns.</source>
          <target state="translated">이 이벤트가 발생 하기 전에 호출 된 <ph id="ph1">`NewRow`</ph> 메서드 반환 합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new &lt;xref:System.Data.DataRow&gt; instance is detached; it has not been added to the collection.</source>
          <target state="translated">새 &lt;xref:System.Data.DataRow&gt;인스턴스는 분리 되어 컬렉션에 추가 되지 않으면.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Data.DataTable.TableName<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Data.DataTable.DisplayExpression<ept id="p1">*</ept>&gt;, if there is one as a concatenated string.</source>
          <target state="translated">가져옵니다는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 연결 된 문자열로 하나 하는 경우.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>Gets the &lt;xref:System.Data.DataTable.TableName%2A&gt; and &lt;xref:System.Data.DataTable.DisplayExpression%2A&gt; for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">가져옵니다 &lt;xref:System.Data.DataTable.TableName%2A&gt;및 &lt;xref:System.Data.DataTable.DisplayExpression%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.DisplayExpression%2A&gt; &lt;/xref:System.Data.DataTable.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>A string consisting of the &lt;xref:System.Data.DataTable.TableName<bpt id="p1">*</bpt>&gt; and the &lt;xref:System.Data.DataTable.DisplayExpression<ept id="p1">*</ept>&gt; values.</source>
          <target state="translated">구성 된 문자열은 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 값입니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as XML using the specified &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">현재 내용을 씁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt; 지정된을 사용 하 여 XML로</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>The stream to which the data will be written.</source>
          <target state="translated">데이터를 기록할 스트림.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as XML using the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">현재 내용을 씁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; 지정된을 사용 하 여 XML로</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; with which to write the content.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;콘텐츠 쓰기에 사용할.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as XML using the specified file.</source>
          <target state="translated">현재 내용을 씁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일을 사용 하 여 XML로 합니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>The file to which to write the XML data.</source>
          <target state="translated">XML 데이터를 쓸 파일입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as XML using the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">현재 내용을 씁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt; 지정된을 사용 하 여 XML로</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that include the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; with which to write the contents.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;내용을 쓰기에 사용할.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as XML using the specified &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">현재 내용을 씁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt; 지정된을 사용 하 여 XML로</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>To save the data for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 데이터를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataTable&gt; to an XML document.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;에 대 한 스키마를 작성 하는 메서드는 &lt;xref:System.Data.DataTable&gt;XML 문서에.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method.</source>
          <target state="translated">XML 문서에 데이터 쓰기를 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 모든 하위 항목에 대 한 데이터를 쓸 관련 테이블,이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The stream to which the data will be written.</source>
          <target state="translated">데이터를 기록할 스트림.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the contents of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the data for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 데이터를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file using the specified <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 현재 데이터 및 필요에 따라 스키마에 기록 된 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 지정된 된 파일에 <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">스키마를 작성 하려면 설정에 대 한 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>The stream to which the data will be written.</source>
          <target state="translated">데이터를 기록할 스트림.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as XML using the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">현재 내용을 씁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; 지정된을 사용 하 여 XML로</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>To save the data for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 데이터를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data for the current table and all its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 모든 하위 항목, 관련 테이블에 대 한 데이터를 작성 하려면이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; with which to write the content.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;콘텐츠 쓰기에 사용할.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the contents of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the data for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 데이터를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 현재 데이터를 쓰고 필요에 따라 스키마를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 지정 된 &lt;xref:System.IO.TextWriter&gt;및 <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">스키마를 작성 하려면 설정에 대 한 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; used to write the document.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;에서는 문서를 작성 하는 데 사용 합니다.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as XML using the specified file.</source>
          <target state="translated">현재 내용을 씁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일을 사용 하 여 XML로 합니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>To save the data for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 데이터를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 모든 하위 항목에 대 한 데이터를 쓸 관련 테이블,이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>The file to which to write the XML data.</source>
          <target state="translated">XML 데이터를 쓸 파일입니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the contents of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the data for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 데이터를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified file and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 현재 데이터를 쓰고 필요에 따라 스키마를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일을 사용 하 여 및 <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">스키마를 작성 하려면 설정에 대 한 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that include the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>The name of the file to which the data will be written.</source>
          <target state="translated">데이터를 기록할 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Writes the current contents of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as XML using the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">현재 내용을 씁니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt; 지정된을 사용 하 여 XML로</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that include the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 데이터를 작성 하려면이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; with which to write the contents.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;내용을 쓰기에 사용할.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the contents of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the data for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 데이터를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.Xml.XmlWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 현재 데이터를 쓰고 필요에 따라 스키마를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 지정 된 &lt;xref:System.Xml.XmlWriter&gt;및 <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">스키마를 작성 하려면 설정에 대 한 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that include the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; used to write the document.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;에서는 문서를 작성 하는 데 사용 합니다.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file using the specified <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 현재 데이터 및 필요에 따라 스키마에 기록 된 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 지정된 된 파일에 <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">스키마를 작성 하려면 설정에 대 한 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>To save the data for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 데이터를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a <ph id="ph1">`DataTable`</ph> into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 <ph id="ph1">`DataTable`</ph> XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`XmlWriteMode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 <ph id="ph1">`XmlWriteMode`</ph> 매개 변수를 해당 값을 설정 하 고 <ph id="ph2">`WriteSchema`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">`DataTable`</ph> into an XML document, whereas the <ph id="ph3">`WriteXmlSchema`</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph> 메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 <ph id="ph2">`DataTable`</ph> XML 문서로 반면는 <ph id="ph3">`WriteXmlSchema`</ph> 메서드는 스키마만 씁니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`XmlWriteMode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 <ph id="ph1">`XmlWriteMode`</ph> 매개 변수를 해당 값을 설정 하 고 <ph id="ph2">`WriteSchema`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 모든 하위 항목에 대 한 데이터를 쓸 관련 테이블,이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>The stream to which the data will be written.</source>
          <target state="translated">데이터를 기록할 스트림.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the contents of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the data for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 데이터를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 현재 데이터를 쓰고 필요에 따라 스키마를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 지정 된 &lt;xref:System.IO.TextWriter&gt;및 <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">스키마를 작성 하려면 설정에 대 한 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>To save the data for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 데이터를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 모든 하위 항목에 대 한 데이터를 쓸 관련 테이블,이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; used to write the document.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;에서는 문서를 작성 하는 데 사용 합니다.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the contents of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the data for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 데이터를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified file and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 현재 데이터를 쓰고 필요에 따라 스키마를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일을 사용 하 여 및 <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">스키마를 작성 하려면 설정에 대 한 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>To save the data for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 데이터를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that include the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to save the data for the current table and all of schema, the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">현재 테이블 및 모든 스키마에 대 한 데이터를 저장 하려는 경우는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that include the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data for the current table and all descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 모든 하위 항목, 관련 테이블에 대 한 데이터를 작성 하려면이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>The name of the file to which the data will be written.</source>
          <target state="translated">데이터를 기록할 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the contents of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the data for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 데이터를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.Xml.XmlWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 현재 데이터를 쓰고 필요에 따라 스키마를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하 여 지정 된 &lt;xref:System.Xml.XmlWriter&gt;및 <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">스키마를 작성 하려면 설정에 대 한 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>To save the data for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 데이터를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataTable&gt; into an XML document, whereas the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드 데이터와에서 스키마를 모두만 데이터를 작성 하는 방법을 제공는 &lt;xref:System.Data.DataTable&gt;XML 문서로 반면는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;메서드는 스키마만 씁니다.&lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that include the &lt;xref:System.Data.XmlWriteMode&gt; parameter, and set its value to <ph id="ph1">`WriteSchema`</ph>.</source>
          <target state="translated">데이터와 스키마를 작성 하려면 포함 하는 오버 로드 중 하나를 사용는 &lt;xref:System.Data.XmlWriteMode&gt;매개 변수를 해당 값을 설정 하 고 <ph id="ph1">`WriteSchema`</ph>.&lt;/xref:System.Data.XmlWriteMode&gt;</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataTable.ReadXml%2A&gt; and &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">동일한은 대 한 적용 된 &lt;xref:System.Data.DataTable.ReadXml%2A&gt;및 &lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;메서드를 각각.&lt;/xref:System.Data.DataTable.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataTable.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">XML 데이터 또는 둘 다 스키마와 데이터를 읽을 수는 <ph id="ph1">`DataTable`</ph>를 사용 하 여는 <ph id="ph2">`ReadXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">사용 하 여 스키마만 읽을 수는 <ph id="ph1">`ReadXmlSchema`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXml`</ph> 메서드는 현재 테이블에 대 한 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 데이터를 작성 하려면이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.InvalidOperationException&gt;경우의 열 유형이 throw 됩니다는 <ph id="ph2">`DataRow`</ph> 에서 읽거나 implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; 를 구현 하지 않으므로&lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; 에 기록 되 고&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; used to write the document.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;에서는 문서를 작성 하는 데 사용 합니다.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the contents of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the data for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 데이터를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>Writes the current data structure of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an XML schema to the specified stream.</source>
          <target state="translated">현재 데이터 구조를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 스트림에 XML 스키마로 합니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataTable&gt; to an XML document.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;에 대 한 스키마를 작성 하는 메서드는 &lt;xref:System.Data.DataTable&gt;XML 문서에.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method.</source>
          <target state="translated">XML 문서에 데이터 쓰기를 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>The stream to which the XML schema will be written.</source>
          <target state="translated">XML 스키마를 기록할 스트림.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>Writes the current data structure of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an XML schema using the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">현재 데이터 구조를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; 지정된을 사용 하 여 XML 스키마로</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataTable&gt; to an XML document.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;에 대 한 스키마를 작성 하는 메서드는 &lt;xref:System.Data.DataTable&gt;XML 문서에.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method.</source>
          <target state="translated">XML 문서에 데이터 쓰기를 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; with which to write.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;쓰기에 사용할.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>Writes the current data structure of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an XML schema to the specified file.</source>
          <target state="translated">현재 데이터 구조를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일에 XML 스키마로 합니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataTable&gt; to an XML document.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;에 대 한 스키마를 작성 하는 메서드는 &lt;xref:System.Data.DataTable&gt;XML 문서에.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method.</source>
          <target state="translated">XML 문서에 데이터 쓰기를 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>The name of the file to use.</source>
          <target state="translated">사용할 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>Writes the current data structure of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an XML schema using the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">현재 데이터 구조를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt; 지정된을 사용 하 여 XML 스키마로</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataTable&gt; to an XML document.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;에 대 한 스키마를 작성 하는 메서드는 &lt;xref:System.Data.DataTable&gt;XML 문서에.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method.</source>
          <target state="translated">XML 문서에 데이터 쓰기를 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; to use.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;사용할.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>Writes the current data structure of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an XML schema to the specified stream.</source>
          <target state="translated">현재 데이터 구조를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 스트림에 XML 스키마로 합니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>To save the schema for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 스키마를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataTable&gt; to an XML document.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;에 대 한 스키마를 작성 하는 메서드는 &lt;xref:System.Data.DataTable&gt;XML 문서에.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method.</source>
          <target state="translated">XML 문서에 데이터 쓰기를 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXmlSchema`</ph> 메서드는 현재 테이블에 대 한 스키마를 씁니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 스키마를 작성 하려면이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>The stream to which the XML schema will be written.</source>
          <target state="translated">XML 스키마를 기록할 스트림.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the schema of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 스키마를 씁니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the schema for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 스키마를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>Writes the current data structure of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an XML schema using the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">현재 데이터 구조를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; 지정된을 사용 하 여 XML 스키마로</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>To save the schema for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 스키마를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataTable&gt; to an XML document.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;에 대 한 스키마를 작성 하는 메서드는 &lt;xref:System.Data.DataTable&gt;XML 문서에.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method.</source>
          <target state="translated">XML 문서에 데이터 쓰기를 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXmlSchema`</ph> 메서드는 현재 테이블에 대 한 스키마를 씁니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 스키마를 작성 하려면이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; with which to write.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;쓰기에 사용할.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the schema of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 스키마를 씁니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the schema for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 스키마를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Writes the current data structure of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an XML schema to the specified file.</source>
          <target state="translated">현재 데이터 구조를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파일에 XML 스키마로 합니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>To save the schema for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 스키마를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataTable&gt; to an XML document.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;에 대 한 스키마를 작성 하는 메서드는 &lt;xref:System.Data.DataTable&gt;XML 문서에.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method.</source>
          <target state="translated">XML 문서에 데이터 쓰기를 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXmlSchema`</ph> 메서드는 현재 테이블에 대 한 스키마를 씁니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 스키마를 작성 하려면이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>The name of the file to use.</source>
          <target state="translated">사용할 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the schema of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 스키마를 씁니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the schema for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 스키마를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Writes the current data structure of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an XML schema using the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">현재 데이터 구조를 작성은 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt; 지정된을 사용 하 여 XML 스키마로</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>To save the schema for the table and all its descendants, set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">writeHierarchy</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">테이블 및 모든 하위 항목에 대 한 스키마를 저장 하려면는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">writeHierarchy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataTable&gt; to an XML document.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;에 대 한 스키마를 작성 하는 메서드는 &lt;xref:System.Data.DataTable&gt;XML 문서에.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">스키마에 테이블, 관계 및 제약 조건 정의가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML 스키마는 XSD 표준을 사용 하 여 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataTable.WriteXml%2A&gt; method.</source>
          <target state="translated">XML 문서에 데이터 쓰기를 사용 하 여는 &lt;xref:System.Data.DataTable.WriteXml%2A&gt;메서드.&lt;/xref:System.Data.DataTable.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">일반적으로 <ph id="ph1">`WriteXmlSchema`</ph> 메서드는 현재 테이블에 대 한 스키마를 씁니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">현재 테이블 및 해당 하위 항목, 관련 테이블을 전체에 대 한 스키마를 작성 하려면이 메서드를 호출할는 <ph id="ph1">`writeHierarchy`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; used to write the document.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;에서는 문서를 작성 하는 데 사용 합니다.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, write the schema of the current table and all its descendants.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 현재 테이블 및 모든 하위 항목의 스키마를 씁니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the default value), write the schema for the current table only.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (기본값), 현재 테이블에 대 한 스키마를 작성 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>