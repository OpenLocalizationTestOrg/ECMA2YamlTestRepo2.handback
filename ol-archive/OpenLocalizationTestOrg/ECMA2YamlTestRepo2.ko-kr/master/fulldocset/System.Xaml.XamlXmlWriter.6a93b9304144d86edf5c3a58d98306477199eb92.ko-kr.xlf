<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d90c4454e49a35c08352d37af99b66400473be61</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlXmlWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5eedc6dbe8b6564e6ac11fa19c62c09d659b78db</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e3fb2721dc7655c2bd7c979445b7dce746533f3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Uses a &lt;xref:System.IO.TextWriter&gt; or &lt;xref:System.Xml.XmlWriter&gt; support class to write a XAML node stream to a text or markup serialized form.</source>
          <target state="translated">사용 하 여 한 &lt;xref:System.IO.TextWriter&gt;또는 &lt;xref:System.Xml.XmlWriter&gt;지원 클래스 XAML 노드 스트림을 텍스트 또는 태그를 작성 하는 폼을 serialize 합니다.&lt;/xref:System.Xml.XmlWriter&gt; &lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is typically used in serialization scenarios.</source>
          <target state="translated">이 클래스는 serialization 시나리오에서 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>How to Use XamlXmlWriter    The &lt;xref:System.Xaml.XamlWriter&gt; API has several methods that write different types of XAML nodes.</source>
          <target state="translated">XamlXmlWriter 사용 하는 방법의 &lt;xref:System.Xaml.XamlWriter&gt;API에는 다양 한 유형의 XAML 노드를 작성 하는 여러 메서드가 있습니다.&lt;/xref:System.Xaml.XamlWriter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Collectively, these are referred to in documentation as the <ph id="ph1">`Write`</ph> methods of a &lt;xref:System.Xaml.XamlWriter&gt;.</source>
          <target state="translated">을 통칭 하 여 이러한 포트를 라고으로 설명서에는 <ph id="ph1">`Write`</ph> &lt;xref:System.Xaml.XamlWriter&gt;.&lt;/xref:System.Xaml.XamlWriter&gt; 메서드</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>XamlXmlWriter uses several internal state classes to determine what to do when one of its <ph id="ph1">`Write`</ph> implementations is called.</source>
          <target state="translated">XamlXmlWriter 내부 상태는 여러 클래스를 사용 하 여를 결정 방법 중 하나는 <ph id="ph1">`Write`</ph> 구현이 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`Write`</ph> call uses the states to determine whether the requested element, attribute, or value can be written, or whether an exception is thrown.</source>
          <target state="translated">A <ph id="ph1">`Write`</ph> 호출의 상태를 사용 하 여 여부 요청 된 요소, 특성 또는 값을 작성할 수 있습니다, 또는 예외가 throw 되는 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you call &lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt; and the state of the XamlXmlWriter current node position is on a value or within a member, an exception is thrown.</source>
          <target state="translated">예를 들어, 호출 하는 경우 &lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;및 현재 노드 위치에 적합 한지 값 멤버 내 XamlXmlWriter의 상태, 예외가 throw 됩니다.&lt;/xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, callers of the XamlXmlWriter API should be aware of the type of the current XAML node that is coming from the XAML reader and the XAML node stream.</source>
          <target state="translated">일반적으로 XamlXmlWriter API의 호출자는 XAML 판독기 및 XAML 노드 스트림의에서 오는 현재 XAML 노드 유형의 알고 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Based on this knowledge, callers should avoid calling <ph id="ph1">`Write`</ph> APIs that are not relevant to the current node type.</source>
          <target state="translated">이 정보에 따라, 호출자가 호출 하지 않아야 <ph id="ph1">`Write`</ph> 현재 노드 형식과 관련이 없는 Api를 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Namespaces and XamlXmlWriter    The XAML namespace writing behavior of XamlXmlWriter is complex and is not limited to explicit calls to &lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;.</source>
          <target state="translated">XamlXmlWriter의 동작을 작성 하는 XAML 네임 스페이스 및 XamlXmlWriter XAML 네임 스페이스는 복잡 하며 &lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;.&lt;/xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt; 에 대 한 명시적 호출에 국한 되지 않음</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, other <ph id="ph1">`Write`</ph> calls, such as &lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;, might require that the namespace declaration be written at particular points in the node structure.</source>
          <target state="translated">대신, 다른 <ph id="ph1">`Write`</ph> 와 같은 호출 &lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;, 네임 스페이스 선언 노드 구조에서 특정 지점에 쓸 수 필요할 수 있습니다.&lt;/xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XAML writer either generates a prefix by its own logic, or uses information from the &lt;xref:System.Xaml.INamespacePrefixLookup&gt; service to determine a preferred prefix.</source>
          <target state="translated">XAML 작성기 자체 논리를 통해 접두사를 생성 하거나 정보를 사용 하 여 &lt;xref:System.Xaml.INamespacePrefixLookup&gt;기본 접두사를 확인 하려면 서비스.&lt;/xref:System.Xaml.INamespacePrefixLookup&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, explicit &lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt; calls might defer or might return nothing if the XAML namespace declaration is already applicable and declared elsewhere.</source>
          <target state="translated">또한 명시적 &lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;호출을 지연할 수 또는 아무 것도 반환할 수 있습니다는 XAML 네임 스페이스 선언 인지 이미 적용 가능 하며 선언 된 다른 곳에서.&lt;/xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write Method Exceptions    Exceptions thrown by the XamlXmlWriter<ph id="ph1">`Write`</ph> methods are typically either &lt;xref:System.InvalidOperationException&gt; or &lt;xref:System.Xaml.XamlXmlWriterException&gt;.</source>
          <target state="translated">메서드는 XamlXmlWriter에서 발생 한 예외 예외 쓰기<ph id="ph1">`Write`</ph> 메서드는 일반적으로 중 하나 &lt;xref:System.InvalidOperationException&gt;나 &lt;xref:System.Xaml.XamlXmlWriterException&gt;.&lt;/xref:System.Xaml.XamlXmlWriterException&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>An &lt;xref:System.InvalidOperationException&gt; often indicates that a XAML reader passed an invalid node structure into the XAML node stream.</source>
          <target state="translated">&lt;xref:System.InvalidOperationException&gt;나타내는 XAML 판독기를 XAML 노드 스트림에 잘못 된 노드 구조를 전달 하는 경우가 많습니다.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the node structure is invalid for reasons that are not related to validation of a XAML schema or a XAML schema context.</source>
          <target state="translated">이 경우 노드 구조 올바르지 않은 XAML 스키마 컨텍스트 또는 XAML 스키마의 유효성 검사와 관련 되지 않은 이유입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather, the node stream is invalid in its basic form.</source>
          <target state="translated">대신,는 노드 스트림의 기본적인 형태에서 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a faulty XAML reader implementation generated a XAML node stream that contained two consecutive <ph id="ph1">`StartObject`</ph> nodes, the attempt to call the second &lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt; would throw an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">예를 들어 잘못 된 XAML 판독기 구현에 포함 된 두 개의 연속 된 XAML 노드 스트림을 생성 하는 경우 <ph id="ph1">`StartObject`</ph> 노드, 두 번째 &lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt; &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; throw 되는&lt;/xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt; 호출할 수 없습니다</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>All XAML writers would consider such an operation to be invalid.</source>
          <target state="translated">XAML 작성기에서 모든 것을 고려할 이러한 작업이 유효 하지 않은 것입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another example of an &lt;xref:System.InvalidOperationException&gt; is when XAML namespace information is unavailable through the XAML schema context that applies to the current node stream position.</source>
          <target state="translated">또 다른 예는 &lt;xref:System.InvalidOperationException&gt;XAML 네임 스페이스 정보를 현재 노드 스트림 위치에 적용 되는 XAML 스키마 컨텍스트를 통해 사용할 수 없는 경우.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Xaml.XamlXmlWriterException&gt; indicates an exception where this particular XAML writer implementation chooses to throw an exception based on its intended functionality.</source>
          <target state="translated">A &lt;xref:System.Xaml.XamlXmlWriterException&gt;예외가 특정 XAML 작성기 구현이 원하는 기능에 따라 예외를 throw 하도록 선택 하는 위치를 나타냅니다.&lt;/xref:System.Xaml.XamlXmlWriterException&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Xaml.XamlXmlWriterException&gt; can indicate specific cases where a XamlXmlWriter violates its own state or settings.</source>
          <target state="translated">A &lt;xref:System.Xaml.XamlXmlWriterException&gt;구체적인 경우는 XamlXmlWriter 상태 또는 설정을 위반 하는 위치를 나타낼 수 있습니다.&lt;/xref:System.Xaml.XamlXmlWriterException&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a &lt;xref:System.Xaml.XamlXmlWriterException&gt; might result from attempts to write XAML namespace information into a position that the XamlXmlWriter and its serialization format do not support, or writing duplicate members when the instance's &lt;xref:System.Xaml.XamlXmlWriterSettings&gt; forbid it.</source>
          <target state="translated">예를 들어, 한 &lt;xref:System.Xaml.XamlXmlWriterException&gt;쓰기는 XamlXmlWriter 및 serialization 형식을 지원 하지 않는 위치에 XAML 네임 스페이스 정보 또는 인스턴스의 &lt;xref:System.Xaml.XamlXmlWriterSettings&gt;금지 합니다.&lt;/xref:System.Xaml.XamlXmlWriterSettings&gt; 경우에 중복 된 멤버를 쓰기 시도 결과로 발생할 수 있습니다&lt;/xref:System.Xaml.XamlXmlWriterException&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a stream.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스트림에서 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The stream to write.</source>
          <target state="translated">쓸 스트림입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 작성기에 대 한 XAML 스키마 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a &lt;xref:System.IO.TextWriter&gt; basis.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 클래스는 &lt;xref:System.IO.TextWriter&gt;별로.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; that writes the output.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;출력을 쓰는.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 작성기에 대 한 XAML 스키마 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;textWriter&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;textWriter&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a &lt;xref:System.Xml.XmlWriter&gt; basis.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 클래스는 &lt;xref:System.Xml.XmlWriter&gt;별로.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; that writes the output.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;출력을 쓰는.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 작성기에 대 한 XAML 스키마 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xmlWriter&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xmlWriter&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a stream using a writer settings object.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 작성기 설정 개체를 사용 하 여 스트림에서 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the &lt;xref:System.Xaml.XamlXmlWriter&gt; instance is constructed.</source>
          <target state="translated">값을 변경 하지 않습니다는 <ph id="ph1">`settings`</ph> 후 개체의 &lt;xref:System.Xaml.XamlXmlWriter&gt;인스턴스 생성.&lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xaml.XamlXmlWriter&gt; cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlXmlWriter&gt;런타임 시 변경할 수 있는 설정 값에 따라 내부 설정을 업데이트할 수 없습니다.&lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">만 초기화에 대 한 설정은 제공 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can merge settings from an active XAML writer by using one of the &lt;xref:System.Xaml.XamlXmlWriterSettings&gt; constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">하지만 활성 XAML 작성기에서 설정 중 하나를 사용 하 여 병합할 수 있습니다는 &lt;xref:System.Xaml.XamlXmlWriterSettings&gt;생성자 서명, 기존 조정 하는 대신 새 XAML 작성기 인스턴스에 이러한 설정은 다음 적용 해야.&lt;/xref:System.Xaml.XamlXmlWriterSettings&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The stream to write.</source>
          <target state="translated">쓸 스트림입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 작성기에 대 한 XAML 스키마 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An instance of <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which typically has specific non-default settings.</source>
          <target state="translated">인스턴스 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 일반적으로 특정 기본이 아닌 설정이 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a &lt;xref:System.IO.TextWriter&gt; basis using a settings object.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 클래스는 &lt;xref:System.IO.TextWriter&gt;설정 개체를 사용 하 여 별로.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the &lt;xref:System.Xaml.XamlXmlWriter&gt; instance is constructed.</source>
          <target state="translated">값을 변경 하지 않습니다는 <ph id="ph1">`settings`</ph> 후 개체의 &lt;xref:System.Xaml.XamlXmlWriter&gt;인스턴스 생성.&lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xaml.XamlXmlWriter&gt; cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlXmlWriter&gt;런타임 시 변경할 수 있는 설정 값에 따라 내부 설정을 업데이트할 수 없습니다.&lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">만 초기화에 대 한 설정은 제공 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can merge settings from an active XAML writer by using one of the &lt;xref:System.Xaml.XamlXmlWriterSettings&gt; constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">하지만 활성 XAML 작성기에서 설정 중 하나를 사용 하 여 병합할 수 있습니다는 &lt;xref:System.Xaml.XamlXmlWriterSettings&gt;생성자 서명, 기존 조정 하는 대신 새 XAML 작성기 인스턴스에 이러한 설정은 다음 적용 해야.&lt;/xref:System.Xaml.XamlXmlWriterSettings&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; that writes the output.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;출력을 쓰는.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 작성기에 대 한 XAML 스키마 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An instance of <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which typically has specific non-default settings.</source>
          <target state="translated">인스턴스 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 일반적으로 특정 기본이 아닌 설정이 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;textWriter&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;textWriter&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a &lt;xref:System.Xml.XmlWriter&gt; basis using a settings object.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 클래스는 &lt;xref:System.Xml.XmlWriter&gt;설정 개체를 사용 하 여 별로.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the &lt;xref:System.Xaml.XamlXmlWriter&gt; instance is constructed.</source>
          <target state="translated">값을 변경 하지 않습니다는 <ph id="ph1">`settings`</ph> 후 개체의 &lt;xref:System.Xaml.XamlXmlWriter&gt;인스턴스 생성.&lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xaml.XamlXmlWriter&gt; cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlXmlWriter&gt;런타임 시 변경할 수 있는 설정 값에 따라 내부 설정을 업데이트할 수 없습니다.&lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">만 초기화에 대 한 설정은 제공 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can merge settings from an active XAML writer by using one of the &lt;xref:System.Xaml.XamlXmlWriterSettings&gt; constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">하지만 활성 XAML 작성기에서 설정 중 하나를 사용 하 여 병합할 수 있습니다는 &lt;xref:System.Xaml.XamlXmlWriterSettings&gt;생성자 서명, 기존 조정 하는 대신 새 XAML 작성기 인스턴스에 이러한 설정은 다음 적용 해야.&lt;/xref:System.Xaml.XamlXmlWriterSettings&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; that writes the output.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;출력을 쓰는.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 작성기에 대 한 XAML 스키마 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An instance of <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which typically has specific non-default settings.</source>
          <target state="translated">인스턴스 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriterSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 일반적으로 특정 기본이 아닌 설정이 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xmlWriter&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xmlWriter&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation calls <ph id="ph1">`Close`</ph> on the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt; for cases where &lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A&gt; is <ph id="ph2">`true`</ph> in any supplied &lt;xref:System.Xaml.XamlXmlWriterSettings&gt;.</source>
          <target state="translated">이 구현에서는 호출 <ph id="ph1">`Close`</ph> 은 기본 &lt;xref:System.Xml.XmlWriter&gt;또는 &lt;xref:System.IO.TextWriter&gt;경우 여기서 &lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A&gt;는 <ph id="ph2">`true`</ph> 모든 &lt;xref:System.Xaml.XamlXmlWriterSettings&gt;.&lt;/xref:System.Xaml.XamlXmlWriterSettings&gt; 제공&lt;/xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A&gt; &lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it calls &lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt;.&lt;/xref:System.Xaml.XamlXmlWriter.Flush%2A&gt; 호출</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release the unmanaged resources; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되지 않는 리소스만 해제 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Calls the <bpt id="p1">&lt;xref uid="langword_csharp_Flush" name="Flush" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method of the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt;, which writes anything that is currently in the buffer, and then closes the writer.</source>
          <target state="translated">호출의 <bpt id="p1">&lt;xref uid="langword_csharp_Flush" name="Flush" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 내부 메서드 &lt;xref:System.Xml.XmlWriter&gt;또는 &lt;xref:System.IO.TextWriter&gt;, 작성 하는 버퍼에 현재 합니다 것.&lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> behavior for a &lt;xref:System.Xaml.XamlXmlWriter&gt; can be influenced by its writer settings, especially by &lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=fullName&gt;.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> &lt;xref:System.Xaml.XamlXmlWriter&gt; &lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=fullName&gt;.&lt;/xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=fullName&gt; 에서 특히 작성기 설정, 영향을 받을 수&lt;/xref:System.Xaml.XamlXmlWriter&gt; 에 대 한 동작</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets the XAML schema context that this <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses for processing.</source>
          <target state="translated">XAML 스키마 컨텍스트를 가져옵니다이 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 처리를 위해 사용 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>A XAML writer typically gets its XAML schema context from the associated XAML reader that is supplying the XAML node stream.</source>
          <target state="translated">XAML 작성기는 일반적으로 XAML 노드 스트림을 제공 하는 연결 된 XAML 판독기에서 해당 XAML 스키마 컨텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The XAML schema context that this <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses for XAML processing.</source>
          <target state="translated">XAML 스키마 컨텍스트가 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XAML 처리를 위해 사용 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets the writer settings that this <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses for XAML processing.</source>
          <target state="translated">작성기 설정을 가져옵니다이 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XAML 처리를 위해 사용 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value that you get from this property is a copy and not a reference.</source>
          <target state="translated">이 속성에서 얻을 수 있는 값이 복사본 및 참조가 아닌 경우</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing property values on the settings does not affect the active &lt;xref:System.Xaml.XamlXmlWriter&gt;.</source>
          <target state="translated">활성 &lt;xref:System.Xaml.XamlXmlWriter&gt;.&lt;/xref:System.Xaml.XamlXmlWriter&gt; 영향을 주지 않습니다 설정에 속성 값 변경</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The writer settings that this <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses for XAML processing.</source>
          <target state="translated">작성기 설정에 따라이 <bpt id="p1">&lt;xref href="System.Xaml.XamlXmlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XAML 처리를 위해 사용 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Writes a XAML end member node to the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">내부 &lt;xref:System.Xml.XmlWriter&gt;또는 &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt; XAML 최종 멤버 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.</source>
          <target state="translated">XAML 노드 스트림의 현재 위치 한 멤버에 없는 경우 또는 내부 작성기 상태가 end 멤버에 쓰기를 지원 하지 않는 경우 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The current position of the XAML node stream is not within a member.</source>
          <target state="translated">XAML 노드 스트림의 현재 위치 구성원 벗어났습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The current writer state does not support writing an end member.</source>
          <target state="translated">현재 작성기 상태 end 멤버를 작성 하는 것을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Writes a XAML end object node to the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">내부 &lt;xref:System.Xml.XmlWriter&gt;또는 &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt; XAML 최종 개체 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.</source>
          <target state="translated">처리 중인 XAML 노드 스트림의 현재 위치에 끝 개체 쓰기와 호환 되지 않으면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>In markup and text representations of XAML, an end object is a closing tag.</source>
          <target state="translated">Xaml 태그 및 텍스트 표시에 끝 개체는 닫는 태그를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most common case where &lt;xref:System.InvalidOperationException&gt; is thrown by WriteEndObject is when the current XAML node stream position is still within a member, and WriteEndObject is called.</source>
          <target state="translated">가장 일반적인 사례 &lt;xref:System.InvalidOperationException&gt;에 의해 throw 되는 멤버 내에 있는 현재 XAML 노드 스트림 위치가 것 WriteEndObject 라고 하는 경우에 WriteEndObject.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The current position of the XAML node stream is not in a scope where an end member can be written.</source>
          <target state="translated">XAML 노드 스트림의 현재 위치를 end 멤버를 쓸 수 있는 범위에 없습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The current writer state does not support writing an end object.</source>
          <target state="translated">현재 작성기 상태 끝 개체를 작성 하는 것을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.</source>
          <target state="translated">여기서 지정된 된 개체는 기본 또는 입력된 XAML 노드 집합에서 개체 값으로 지정 되지 않고 기록 되는 속성의 암시적 값의 경우에 대 한 개체를 씁니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Writes namespace information to the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">내부 &lt;xref:System.Xml.XmlWriter&gt;또는 &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt; 네임 스페이스 정보를 기록합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.</source>
          <target state="translated">예외가 throw 될 수 특정 상태; 그러나 네임 스페이스 정보 기록기 및 처리 되는 XAML 노드 스트림의 될 때까지 XAML 네임 스페이스 선언을 삽입할 수 있는 위치에 도달 하면 쓰기를 연기할 대신 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The XAML namespace declaration to write.</source>
          <target state="translated">작성 하는 XAML 네임 스페이스 선언</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;namespaceDeclaration&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;namespaceDeclaration&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;namespaceDeclaration&lt;/code&gt;</ph> is not a valid XAML namespace declaration (has a null prefix or null identifier component).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;namespaceDeclaration&lt;/code&gt;</ph>올바른 XAML 네임 스페이스 선언 되었습니다 (null 접두사 또는 null 식별자 구성 요소 있음).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The current writer state does not support writing a XAML namespace declaration.</source>
          <target state="translated">현재 작성기 상태 XAML 네임 스페이스 선언을 작성 하는 것을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Writes a XAML start member node to the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">내부 &lt;xref:System.Xml.XmlWriter&gt;또는 &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt; XAML 시작 멤버 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.</source>
          <target state="translated">XAML 노드 스트림의 현재 위치는 다른 멤버 내 또는 범위 또는 작성기 상태 시작 멤버를 쓸 수 없는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internal default logic in the &lt;xref:System.Xaml.XamlXmlWriter&gt; first attempts to write the member in attribute form.</source>
          <target state="translated">내부 기본 논리는 &lt;xref:System.Xaml.XamlXmlWriter&gt;먼저 특성 형식에서 멤버를 쓰려고 시도 합니다.&lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no attribute form is supported because the property or its value does not support text syntax, a property element is written instead.</source>
          <target state="translated">속성 또는 해당 값은 텍스트 구문을 지원 하지 않으므로 특성 양식이 지원 속성 요소 대신 작성 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is a XAML content property, a <ph id="ph1">`GetObject`</ph> case, or an implicit property, other XAML forms might be written, such as inner text or an object child that has no intervening member.</source>
          <target state="translated">속성이 XAML 콘텐츠 속성인 경우는 <ph id="ph1">`GetObject`</ph> 사례 또는 암시적 속성을 내부 텍스트 또는 개체의 자식 멤버가 없는 중간 XAML의 다른 폼에 작성, 될 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The duplicate member exception is never thrown if &lt;xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A&gt; is <ph id="ph1">`true`</ph> in the &lt;xref:System.Xaml.XamlXmlWriterSettings&gt; object that was used for settings for this &lt;xref:System.Xaml.XamlXmlWriter&gt;.</source>
          <target state="translated">중복 멤버 예외가 throw 되지 경우 &lt;xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A&gt;은 <ph id="ph1">`true`</ph> &lt;xref:System.Xaml.XamlXmlWriterSettings&gt; &lt;xref:System.Xaml.XamlXmlWriter&gt;.&lt;/xref:System.Xaml.XamlXmlWriter&gt; 설정에 대해 사용 하는 개체&lt;/xref:System.Xaml.XamlXmlWriterSettings&gt; 에&lt;/xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The XAML member identifier for the member to write.</source>
          <target state="translated">작성 하는 멤버에 대 한 XAML 멤버 식별자입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;property&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;property&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;property&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;property&lt;/code&gt;</ph>유효 하지 않거나 <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The current position of the XAML node stream is invalid for writing a start member.</source>
          <target state="translated">XAML 노드 스트림의 현재 위치 시작 멤버를 작성 하기 위한 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The writer state is not valid for writing a start member.</source>
          <target state="translated">작성기 상태가 시작 멤버를 작성 하기 위한 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-or-       The XAML writer attempted to write a duplicate member.</source>
          <target state="translated">-또는-XAML 작성기 중복 멤버를 쓰려고 했습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This exception may have a more precise inner exception.</source>
          <target state="translated">이 예외는 내부 예외를 보다 정확 하 게 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Writes a XAML start object node to the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">내부 &lt;xref:System.Xml.XmlWriter&gt;또는 &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt; XAML 시작 개체 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.</source>
          <target state="translated">XAML 노드 스트림의 현재 위치 시작 개체에 쓸 수 있는, 범위에 없는 경우 또는 작성기 시작 개체를 쓸 수 있는 상태에 없는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (XAML type identifier) for the object to write.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (XAML 형식 식별자) 작성 하는 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>유효 하지 않거나 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The current position of the XAML node stream is not valid for writing a new start object.</source>
          <target state="translated">XAML 노드 스트림의 현재 위치는 새 시작 개체를 작성 하기 위한 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The state of the XAML writer is not valid for writing a new start object.</source>
          <target state="translated">XAML 작성기의 상태는 새 시작 개체를 작성 하기 위한 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Writes a XAML value node to the underlying &lt;xref:System.Xml.XmlWriter&gt; or &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">XAML 값 노드에 기본 씁니다 &lt;xref:System.Xml.XmlWriter&gt;나 &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt; &lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.</source>
          <target state="translated">XAML 노드 스트림의 현재 위치 값을 작성 하기 위한 유효 하지 않거나 작성기가 상태 값을 쓸 수 없습니다 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input <ph id="ph1">`value`</ph> may be <ph id="ph2">`null`</ph>, which supports explicitly writing out null as a serialized value.</source>
          <target state="translated">입력 <ph id="ph1">`value`</ph> 수 <ph id="ph2">`null`</ph>, 직렬화 된 값으로 null을 쓰는 명시적으로 지 원하는 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior uses the &lt;xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=fullName&gt; definition as &lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt; input and then immediately calls &lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;.</source>
          <target state="translated">이 동작은 &lt;xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=fullName&gt; &lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;입력과 &lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;.&lt;/xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt; 를 즉시 호출&lt;/xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt; 로 정의&lt;/xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=fullName&gt; 사용합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The value information to write.</source>
          <target state="translated">쓸 값 정보입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The current position of the XAML node stream is not valid for writing a value.</source>
          <target state="translated">XAML 노드 스트림의 현재 위치 값을 쓰기에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The XAML writer state does not support the writing of a value node.</source>
          <target state="translated">XAML 작성기 상태 값 노드를 기록 하는 작업을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> specifies a value that is not null or a string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>null이 아닌 값 또는 문자열을 지정 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>