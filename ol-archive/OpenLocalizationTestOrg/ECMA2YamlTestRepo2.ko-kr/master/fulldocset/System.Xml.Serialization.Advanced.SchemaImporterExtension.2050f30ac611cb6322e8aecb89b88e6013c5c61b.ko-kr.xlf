<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f11965b5d6926136b37a84f845d100c2c27649df</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Serialization.Advanced.SchemaImporterExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9f5d282b8faf509ae61f4f2881c2f231516a8d6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb57b5dacd476f9ba936e5ec981972630e274742</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows you to customize the code generated from a Web Services Description Language (WSDL) document when using automated query tools.</source>
          <target state="translated">자동화 된 쿼리 도구를 사용 하는 경우 WSDL 웹 서비스 설명 언어 () 문서에서 생성 된 코드를 사용자 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Serialization.Advanced.SchemaImporterExtension"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xml.Serialization.Advanced.SchemaImporterExtension"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Handles the importation of the <ph id="ph1">&amp;lt;</ph>xsd:any<ph id="ph2">&amp;gt;</ph> elements in the schema.</source>
          <target state="translated">가져오기를 처리는 <ph id="ph1">&amp;lt;</ph>xsd: 모든<ph id="ph2">&amp;gt;</ph> 스키마의 요소입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to control the generation of the code, you must use the classes found in the &lt;xref:System.CodeDom&gt; namespace.</source>
          <target state="translated">코드 생성을 제어 하기 위해에서 찾은 클래스를 사용 해야 합니다는 &lt;xref:System.CodeDom&gt;네임 스페이스.&lt;/xref:System.CodeDom&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using the CodeDOM<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>CodeDOM Quick Reference<ept id="p2">](http://msdn.microsoft.com/en-us/c77b8bfd-0a32-4e36-b59a-4f687f32c524)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>CodeDOM을 사용 하 여<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>CodeDOM 빠른 참조<ept id="p2">](http://msdn.microsoft.com/en-us/c77b8bfd-0a32-4e36-b59a-4f687f32c524)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAny"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the <bpt id="p2">&lt;xref uid="langword_csharp_xsd:any" name="xsd:any" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element found in the XML Schema Document (XSD).</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAny"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 나타내는 <bpt id="p2">&lt;xref uid="langword_csharp_xsd:any" name="xsd:any" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 요소에는 문서 XSD (XML 스키마)를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; that indicates whether the XSD <bpt id="p1">&lt;xref uid="langword_csharp_complex" name="complex" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute has been set to "mixed".</source>
          <target state="translated">A &lt;xref:System.Boolean&gt;나타내는 여부 XSD <bpt id="p1">&lt;xref uid="langword_csharp_complex" name="complex" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 특성이 "mixed"로 설정 되어 있습니다.&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if the attribute has been set to mixed, otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>특성이 설정 된 경우 mixed로, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemas"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection of schemas found in the XSD.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemas"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XSD에 있는 스키마의 컬렉션을 포함 하는 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemaImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the importer being used.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemaImporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 중인 가져오기입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which you can add CodeDOM structures to generate alternative code for the XSD.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> CodeDOM XSD에 대 한 대체 코드를 생성 하는 구조를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeNamespace"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the current namespace for the element.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeNamespace"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소에 대 한 현재 네임 스페이스를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Serialization.CodeGenerationOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the setting options on the code compiler.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xml.Serialization.CodeGenerationOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 코드 컴파일러에서 옵션 설정에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the CodeDOM provider used to generate the new code.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새 코드를 생성 하는 데 사용 하는 CodeDOM 공급자 즉 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of the CLR type that the element maps to.</source>
          <target state="translated">요소에 매핑되는 CLR 형식의 이름입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Allows you to specify the default value for the XSD type being imported.</source>
          <target state="translated">가져오려는 XSD 형식에 대 한 기본값을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to control the generation of the code, you must use the classes found in the &lt;xref:System.CodeDom&gt; namespace.</source>
          <target state="translated">코드 생성을 제어 하기 위해에서 찾은 클래스를 사용 해야 합니다는 &lt;xref:System.CodeDom&gt;네임 스페이스.&lt;/xref:System.CodeDom&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using the CodeDOM<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>CodeDOM Quick Reference<ept id="p2">](http://msdn.microsoft.com/en-us/c77b8bfd-0a32-4e36-b59a-4f687f32c524)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>CodeDOM을 사용 하 여<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>CodeDOM 빠른 참조<ept id="p2">](http://msdn.microsoft.com/en-us/c77b8bfd-0a32-4e36-b59a-4f687f32c524)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The value found in the original XSD.</source>
          <target state="translated">원래 XSD에 있는 값입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The XSD type name.</source>
          <target state="translated">XSD 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> setting the new default value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새 기본값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</source>
          <target state="translated">가져온된 스키마를 검사 하 고 매핑되는 CLR 형식을 지정 하 여 생성 된 코드를 조작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the XSD type.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XSD 형식을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents schema information, such as the line number of the XML element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XML 요소의 줄 번호 등의 스키마 정보를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemas"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection of schemas in the document.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemas"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 문서에 포함 된 스키마의 컬렉션을 포함 하는 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemaImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the importer being used.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemaImporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 중인 가져오기입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which you can add CodeDOM structures to generate alternative code for the XSD.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> CodeDOM XSD에 대 한 대체 코드를 생성 하는 구조를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeNamespace"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the current namespace for the element.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeNamespace"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소에 대 한 현재 네임 스페이스를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Serialization.CodeGenerationOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the setting options on the code compiler.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xml.Serialization.CodeGenerationOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 코드 컴파일러에서 옵션 설정에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used to generate the new code.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새 코드를 생성 하는 데 사용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The name of the CLR type that this maps to.</source>
          <target state="translated">매핑되는 CLR 형식의 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</source>
          <target state="translated">가져온된 스키마를 검사 하 고 매핑되는 CLR 형식을 지정 하 여 생성 된 코드를 조작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to control the generation of the code, you must use the classes found in the &lt;xref:System.CodeDom&gt; namespace.</source>
          <target state="translated">코드 생성을 제어 하기 위해에서 찾은 클래스를 사용 해야 합니다는 &lt;xref:System.CodeDom&gt;네임 스페이스.&lt;/xref:System.CodeDom&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using the CodeDOM<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>CodeDOM Quick Reference<ept id="p2">](http://msdn.microsoft.com/en-us/c77b8bfd-0a32-4e36-b59a-4f687f32c524)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>CodeDOM을 사용 하 여<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>CodeDOM 빠른 참조<ept id="p2">](http://msdn.microsoft.com/en-us/c77b8bfd-0a32-4e36-b59a-4f687f32c524)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The name of the element.</source>
          <target state="translated">요소 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The namespace of the element.</source>
          <target state="translated">네임 스페이스 요소입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents schema information, such as the line number of the XML element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XML 요소의 줄 번호 등의 스키마 정보를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemas"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection of schemas in the document.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemas"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 문서에 포함 된 스키마의 컬렉션을 포함 하는 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemaImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the importer being used.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemaImporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 중인 가져오기입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which you can add CodeDOM structures to generate alternative code for the XSD.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> CodeDOM XSD에 대 한 대체 코드를 생성 하는 구조를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeNamespace"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the current namespace for the element.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeNamespace"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소에 대 한 현재 네임 스페이스를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Serialization.CodeGenerationOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the setting options on the code compiler.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xml.Serialization.CodeGenerationOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 코드 컴파일러에서 옵션 설정에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used to generate the new code.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새 코드를 생성 하는 데 사용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The name of the CLR type that this maps to.</source>
          <target state="translated">매핑되는 CLR 형식의 이름입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>