<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cfa45f68646cbd57cc98594809f6390adde1dc7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Compilation.IAssemblyPostProcessor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">720908f51f73b4713e537f6670856e3741336885</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d552fda60c72535f12a0d40a0f25df7f6654a1ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the method a class implements to process an assembly after the assembly has been built.</source>
          <target state="translated">어셈블리를 빌드한 후에 어셈블리를 처리 하기 위해 구현 하는 클래스 메서드를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A class implementing this interface can access an assembly after it has been compiled.</source>
          <target state="translated">이 인터페이스를 구현 하는 클래스에 컴파일된 후 어셈블리를 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; class compiles assemblies and then checks to see whether an IAssemblyPostProcessor interface has been registered in the Web configuration file.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;클래스는 어셈블리를 컴파일한 다음 IAssemblyPostProcessor 인터페이스 웹 구성 파일에 등록 되었는지 여부를 확인 합니다.&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, the &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; instance calls the &lt;xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt; method for the IAssemblyPostProcessor interface to perform any action after the compilation and before loading the assembly.</source>
          <target state="translated">이 경우는 &lt;xref:System.Web.Compilation.AssemblyBuilder&gt;호출 인스턴스는 &lt;xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt;컴파일한 후 및 어셈블리를 로드 하기 전에 동작을 수행 하려면 IAssemblyPostProcessor 인터페이스에 대 한 메서드.&lt;/xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt; &lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a profiler tool could implement this interface to establish probes in the assembly.</source>
          <target state="translated">예를 들어 프로파일러 도구는이 인터페이스는 어셈블리에 검색을 설정할 구현 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an IAssemblyPostProcessor interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.</source>
          <target state="translated">IAssemblyPostProcessor 인터페이스를 등록할 때 ASP.NET 응용 프로그램 및 해당 어셈블리 항상 컴파일되는 디버그 모드에서.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Called before the assembly is loaded to allow the implementing class to modify the assembly.</source>
          <target state="translated">어셈블리를 구현 하는 클래스는 어셈블리를 수정할 수 있도록 로드 되기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; class calls this method after the assembly has been compiled.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;클래스는 어셈블리를 컴파일한 후에이 메서드를 호출 합니다.&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any actions to be taken before loading the assembly should be included in this method.</source>
          <target state="translated">이 메서드에서 어셈블리를 로드 하기 전에 수행할 작업 포함 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The path to the assembly.</source>
          <target state="translated">어셈블리에 대 한 경로입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>