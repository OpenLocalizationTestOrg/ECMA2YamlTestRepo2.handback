<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3fff38db79070ec98d24b9e25500764313bb8b9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Channels.IReplyChannel.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7533e325521336f36c2dd0f62b3ae475307dc49e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3498a4f16cf1f679f8e10ca2a89443b060c8781</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints.</source>
          <target state="translated">메시징 끝점 간 요청-회신 통신의 수신측에 있도록 하기 위해 채널이 구현 해야 하는 인터페이스를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IReplyChannel interface includes synchronous and asynchronous variants of a &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; method return an &lt;xref:System.ServiceModel.Channels.RequestContext&gt; that can be used to construct replies to received requests.</source>
          <target state="translated">IReplyChannel 인터페이스 동기 및 비동기 variant가 포함 됩니다는 &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;메서드가 반환 된 &lt;xref:System.ServiceModel.Channels.RequestContext&gt;수신된 된 요청에 응답을 생성 하는 데 사용 하는.&lt;/xref:System.ServiceModel.Channels.RequestContext&gt; &lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.</source>
          <target state="translated">계약 수신, 수신 시도 및 대기에 대 한-메시지 기능의 동기 및 비동기 variant가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>An IReplyChannel is not necessarily bound to a single sender.</source>
          <target state="translated">IReplyChannel 반드시 단일 발신자에 바인딩되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other channels and channel interfaces provide correlation between the sender and the reply channel, but the base contract makes no such restriction.</source>
          <target state="translated">다른 채널과 채널 인터페이스는 발신자와 응답 채널 간의 상관 관계를 제공 하지만 기본 계약 이와 같은 제한이 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The pull model is used with an IReplyChannel to receive messages.</source>
          <target state="translated">끌어오기 모델은 메시지를 받을 IReplyChannel으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This model consists of calling &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; (or one of its variants) and then waiting for a message to arrive.</source>
          <target state="translated">이 모델은 호출 구성 &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;(또는 해당 변형 중 하나) 이며 다음 메시지가 도착할 때까지 대기 합니다.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to receive an available request with a default timeout.</source>
          <target state="translated">기본 제한 시간으로 사용 가능한 요청을 수신 하기 위해 비동기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BeginReceiveRequest method implements the standard pattern for invoking &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest&gt; asynchronously.</source>
          <target state="translated">BeginReceiveRequest 메서드를 호출 하기 위한 표준 패턴을 구현 &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest&gt;비동기적으로.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default timeout is 1 minute.</source>
          <target state="translated">기본 제한 시간은 1 분입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a receive timeout is set on the binding used to configure the connection, then that value is used.</source>
          <target state="translated">연결을 구성 하는 데 사용 하는 바인딩 수신 시간 제한을 설정 되 면 해당 값이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; if you want to specify an explicit timeout with the call that overrides these other values.</source>
          <target state="translated">사용 하 여 &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;이 다른 값을 재정의 하는 호출 하 여 명시적 시간 제한을 지정 하려는 경우.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">수신 된 요청 메시지가 사용 되는 바인딩에서 허용 하는 크기는 최대 메시지 큰 경우는 &lt;xref:System.ServiceModel.QuotaExceededException&gt;throw 됩니다.&lt;/xref:System.ServiceModel.QuotaExceededException&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">설정 하는 최대 메시지 크기는 &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;속성.&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;비동기에 대 한 알림을 받는 대리자 수신 요청 작업을 완료 합니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">요청 작업의 비동기 receive와 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous reception of the request.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;비동기 요청 수신을 참조 하는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to receive an available request with a specified timeout.</source>
          <target state="translated">지정 된 시간 제한으로 사용할 수 있는 요청을 수신 하기 위해 비동기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BeginReceiveRequest method implements the standard pattern for invoking &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29&gt;asynchronously.</source>
          <target state="translated">BeginReceiveRequest 메서드를 호출 하기 위한 표준 패턴을 구현 &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29&gt;비동기적으로.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The timeout set on this method overrides a receive timeout set on the binding that is used to configure the connection.</source>
          <target state="translated">이 메서드에 설정 시간 제한은 연결을 구성 하는 데 사용 되는 바인딩에 설정 된 수신 시간 제한을 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">수신 된 요청 메시지가 사용 되는 바인딩에서 허용 하는 크기는 최대 메시지 큰 경우는 &lt;xref:System.ServiceModel.QuotaExceededException&gt;throw 됩니다.&lt;/xref:System.ServiceModel.QuotaExceededException&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">설정 하는 최대 메시지 크기는 &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;속성.&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies the interval of time to wait for the reception of an available request.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;사용 가능한 요청 수신 대기 하는 시간 간격을 지정 하는.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;비동기에 대 한 알림을 받는 대리자 수신 요청 작업을 완료 합니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">요청 작업의 비동기 receive와 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous reception of the request.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;비동기 요청 수신을 참조 하는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it.</source>
          <target state="translated">지정 된 시간 제한 및 연결 된 상태 개체가 있는 요청 메시지를 수신 하기 위한 비동기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the asynchronous BeginTryReceiveRequest method when you need the application processing to continue without waiting.</source>
          <target state="translated">대기 하지 않고 계속 하려면 응용 프로그램 처리 해야 하는 경우 비동기 BeginTryReceiveRequest 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use one of the synchronous &lt;xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt; methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.</source>
          <target state="translated">동기 중 하나를 사용 하 여 &lt;xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt;메서드가 있는 경우 현재 스레드를 시간 제한 간격을 초과할 때까지 또는 요청 메시지에 응답 하는 동안 차단할 수 있습니다.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">이 메서드는 콜백을 통해 작업에 대 한 이벤트 처리기 id의 알림을 받습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operation is not complete until either a message becomes available in the channel or the time out occurs.</source>
          <target state="translated">작업이 메시지를 채널에 사용할 수 있거나 시간 초과가 발생할 때까지 완료 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies how long the receive request operation has to complete before timing out and returning <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;요청 수신 작업에서 반환 제한 시간 초과 되기 전에 완료 해야 기간을 지정 하는 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;비동기에 대 한 알림을 받는 대리자 수신 요청 작업을 완료 합니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">요청 작업의 비동기 receive와 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous receive request operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;는 비동기 요청 수신 작업을 참조 하는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous request operation that has a specified time out and state object associated with it.</source>
          <target state="translated">지정 된 시간 제한 및 연결 된 상태 개체가 있는 비동기 요청 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the synchronous &lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt; method when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</source>
          <target state="translated">동기 버전을 사용 하 여 &lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;메서드를 차단 하 여 요청 메시지를 큐에 도착할 때까지 대기 하는 동안 현재 스레드는 것이 좋습니다.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">지정 된까지 스레드가 차단 <ph id="ph1">`timeout`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">이 메서드는 콜백을 통해 작업에 대 한 이벤트 처리기 id의 알림을 받습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operation is not complete until either a request message becomes available in the channel or the time out occurs.</source>
          <target state="translated">요청 메시지를 채널에 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies the interval of time to wait for the reception of an available request.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;사용 가능한 요청 수신 대기 하는 시간 간격을 지정 하는.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;비동기에 대 한 알림을 받는 대리자 수신 요청 작업을 완료 합니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">요청 작업의 비동기 receive와 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation to wait for a request message to arrive.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;요청 메시지가 도착할 때까지 대기 하는 비동기 작업을 참조 하는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to receive an available request.</source>
          <target state="translated">사용 가능한 요청을 수신 하기 위한 비동기 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">수신 된 요청 메시지가 사용 되는 바인딩에서 허용 하는 크기는 최대 메시지 큰 경우는 &lt;xref:System.ServiceModel.QuotaExceededException&gt;throw 됩니다.&lt;/xref:System.ServiceModel.QuotaExceededException&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">설정 하는 최대 메시지 크기는 &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;속성.&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; returned by a call to the &lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;에 대 한 호출에서 반환 되는 &lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*&gt;메서드.&lt;/xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; used to construct a reply to the request.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;요청에 대 한 회신을 생성 하는 데 사용 합니다.&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Completes the specified asynchronous operation to receive a request message.</source>
          <target state="translated">요청 메시지를 받고 지정된 된 비동기 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; returned by a call to the <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;에 대 한 호출에서 반환 되는 <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29<ph id="ph2">&amp;gt;</ph> 메서드.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; received.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;받은.&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a request message is received before the specified interval of time elapses; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 시간 간격이 경과 되기 전에; 요청 메시지를 수신 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Completes the specified asynchronous wait-for-a-request message operation.</source>
          <target state="translated">비동기 대기에 대 한-요청 메시지를 지정 된 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that identifies the <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29<ph id="ph2">&amp;gt;</ph> operation to finish, and from which to retrieve an end result.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;식별 하는 <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29<ph id="ph2">&amp;gt;</ph> 작업 및 최종 결과 검색 하려는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a request is received before the specified interval of time elapses; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 시간 간격이 경과 되기 전에; 요청이 수신 되는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets the address on which this reply channel receives messages.</source>
          <target state="translated">이 응답 채널이 메시지 수신 하는 주소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.EndpointAddress&gt; on which this reply channel receives messages.</source>
          <target state="translated">&lt;xref:System.ServiceModel.EndpointAddress&gt;이 응답 채널이 메시지 수신 하는.&lt;/xref:System.ServiceModel.EndpointAddress&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns the context of the request received, if one is available.</source>
          <target state="translated">사용 가능한 경우 수신 된 요청의 컨텍스트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If a context is not available, waits until there is one available.</source>
          <target state="translated">컨텍스트를 사용할 수 없는 하나도 사용할 수 있을 때까지 기다립니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.ServiceModel.Channels.RequestContext&gt; encapsulates the request message and a mechanism for replying to that message.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;요청 메시지와 메시지에 응답 하기 위한 메커니즘을 캡슐화 합니다.&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>ReceiveRequest can be called multiple times or concurrently.</source>
          <target state="translated">ReceiveRequest 여러 번 호출할 수 있습니다 또는 동시에 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one ReceiveRequest call completes per request received.</source>
          <target state="translated">수신 된 요청 별로 하나의 ReceiveRequest 호출만 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">수신 된 요청 메시지가 사용 되는 바인딩에서 허용 하는 크기는 최대 메시지 큰 경우는 &lt;xref:System.ServiceModel.QuotaExceededException&gt;throw 됩니다.&lt;/xref:System.ServiceModel.QuotaExceededException&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">설정 하는 최대 메시지 크기는 &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;속성.&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; used to construct replies.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;응답을 생성 하는 데 사용 합니다.&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Returns the context of the request received, if one is available.</source>
          <target state="translated">사용 가능한 경우 수신 된 요청의 컨텍스트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a context is not available, waits until there is one available.</source>
          <target state="translated">컨텍스트를 사용할 수 없는 하나도 사용할 수 있을 때까지 기다립니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.ServiceModel.Channels.RequestContext&gt; encapsulates the request message and a mechanism for replying to that message.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;요청 메시지와 메시지에 응답 하기 위한 메커니즘을 캡슐화 합니다.&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; can be called multiple times or concurrently.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;여러 번 호출할 수 있습니다 또는 동시에 합니다.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; call completes per request received.</source>
          <target state="translated">하나의 &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;호출이 완료 당 요청을 받았습니다.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">수신 된 요청 메시지가 사용 되는 바인딩에서 허용 하는 크기는 최대 메시지 큰 경우는 &lt;xref:System.ServiceModel.QuotaExceededException&gt;throw 됩니다.&lt;/xref:System.ServiceModel.QuotaExceededException&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">설정 하는 최대 메시지 크기는 &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;속성.&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">기본값은 65536 바이트입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies how long the receive of a request operation has to complete before timing out and returning <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;수신 요청 작업이 제한 시간 초과 반환 되기 전에 완료 해야 기간을 지정 하는 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; used to construct replies.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;응답을 생성 하는 데 사용 합니다.&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether a request is received before a specified interval of time elapses.</source>
          <target state="translated">지정 된 시간 간격이 경과 되기 전에 요청이 수신 되는지 여부를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use TryReceiveRequest when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</source>
          <target state="translated">현재 스레드를 큐에 도착 하는 요청 메시지를 기다리는 동안 차단 되었을 때 TryReceiveRequest를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">지정 된까지 스레드가 차단 <ph id="ph1">`timeout`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need the application processing to continue without waiting, use the asynchronous &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method.</source>
          <target state="translated">응용 프로그램 처리를 대기 하지 않고 계속 필요한 경우 사용 하 여 비동기 &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;메서드.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies how long the receive of a request operation has to complete before timing out and returning <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;수신 요청 작업이 제한 시간 초과 반환 되기 전에 완료 해야 기간을 지정 하는 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; received.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;받은.&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a request message is received before the specified interval of time elapses; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 시간 간격이 경과 되기 전에; 요청 메시지를 수신 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether a request message is received before a specified interval of time elapses.</source>
          <target state="translated">지정 된 시간 간격이 경과 되기 전에 요청 메시지를 수신 하는지 여부를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling WaitForRequest does not result in a request message being received or processed in any way.</source>
          <target state="translated">호출 WaitForRequest 수신 되거나 어떤 식으로든에서 처리 되 고 요청 메시지에서 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method exists primarily for transacted scenarios where the user wants to receive the message using a transaction.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;주로 사용자 위치는 트랜잭션을 사용 하 여 메시지를 수신 하려는 트랜잭션 처리 시나리오에 대 한 메서드가 있습니다.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using just &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; normally for this, the user must create the transaction, and then call &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; and hope the message arrives before the transaction times out, which may not be possible.</source>
          <target state="translated">사용 하면 &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;여기에 일반적으로 사용자 트랜잭션을 만들고 해야 다음 호출 &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;트랜잭션이 시간이 초과 되기 전에, 가능 하지 않을 수 있는 메시지가 도착 하기를 기대 하 고.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; &lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the user can call WaitForRequest and specify the time out (even infinite), then when a message arrives they can open the transaction, call &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; and be confident that they can get the message back before the transaction expires.</source>
          <target state="translated">대신, 사용자 수 WaitForRequest를 호출 하 고 시간 제한 (무한도 가능)을 지정 합니다. 다음 메시지가 도착할 때 트랜잭션을 열고 호출 &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;및 확실 한 후 트랜잭션이 만료 되기 전에 메시지를 가져올 수 있습니다.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use WaitForRequest when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">현재 스레드를 메시지가 큐에 도착 하기를 기다리는 동안 차단 되었을 때 WaitForRequest를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">지정 된까지 스레드가 차단 <ph id="ph1">`timeout`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need the application processing to continue without waiting, use the asynchronous &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method.</source>
          <target state="translated">응용 프로그램 처리를 대기 하지 않고 계속 필요한 경우 사용 하 여 비동기 &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;메서드.&lt;/xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies how long a request operation has to complete before timing out and returning <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;요청 기간을 지정 하는 작업에서 반환 제한 시간 초과 되기 전에 완료 해야 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a request is received before the specified interval of time elapses; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 시간 간격이 경과 되기 전에; 요청이 수신 되는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>