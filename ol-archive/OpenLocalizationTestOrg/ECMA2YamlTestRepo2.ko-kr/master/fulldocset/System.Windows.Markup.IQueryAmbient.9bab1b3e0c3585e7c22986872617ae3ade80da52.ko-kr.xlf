<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc0f9059ccdb447123ce112112b6b992f363b51d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.IQueryAmbient.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">221ec5dc9b35b0373bb12c493685e4c3643f1a5a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7525a30dae94d83fc1bdca8158dd99215e943b06</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Queries for whether a specified property should be treated as ambient in the current scope.</source>
          <target state="translated">있는지 여부를 지정 된 속성을 처리 해야 앰비언트로 현재 범위에 대 한 쿼리.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</source>
          <target state="translated">앰비언트 속성 메커니즘의 목적은 구문 분석 시간을 개선 하기 위해 여 알고 있는 경우 것은 임시 및 일반적인 런타임 응용 프로그램에 유용 하지 않은 값에 대 한 개체는 특정 개체를 인스턴스화하지 방지 하기 위해 XAML 개체 작성기입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</source>
          <target state="translated">일반적으로 XAML 조회 또는 속성 get 접근자의 XAML 처리를 즉시 사용할 값이 포함 된 개체 그래프 표현에 맞게 이러한 개체를 인스턴스화하 해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>IQueryAmbient has one member: &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;.</source>
          <target state="translated">IQueryAmbient 멤버 하나가지고: &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;.&lt;/xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>IQueryAmbient is a parallel mechanism to &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.</source>
          <target state="translated">IQueryAmbient는 &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt; 병렬 메커니즘</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>IQueryAmbient is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> for &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;), whereas the attribute is essentially static analysis).</source>
          <target state="translated">IQueryAmbient는 리플렉션을 사용 하 여 정보를 확인 하 고 또한 수 act 상황을 방지 하는 특별 한 메커니즘 (지정된 된 개체는 보고서를 선택할 수 <ph id="ph1">`true`</ph> 또는 <ph id="ph2">`false`</ph> 에 대 한 &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;),이 특성은 기본적으로 정적 분석 하는 반면,).&lt;/xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Markup.AmbientAttribute&gt; is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties &lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt; and &lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;XAML 개체 작성기에서 사용할 수 있는 전용 XAML 형식 시스템 속성 &lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;및 &lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsAmbient%2A&gt; &lt;/xref:System.Xaml.XamlMember.IsAmbient%2A&gt; 에 연결 하는 일반 메커니즘&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF Implementations of IQueryAmbient    In WPF, IQueryAmbient is used for the resource dictionary lookup process.</source>
          <target state="translated">WPF 구현은의 IQueryAmbient WPF의, IQueryAmbient 리소스 사전 조회 프로세스에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lookup process gets successive <ph id="ph1">`Resources`</ph> values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</source>
          <target state="translated">조회 프로세스 가져옵니다 연속 <ph id="ph1">`Resources`</ph> 값 WPF 논리 트리 전체에서 발견 되는 키 될 때까지 리소스 범위의 루트를 향해 진행 또는 키 범위에 존재 하지 않도록 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, doing so would require instantiating a &lt;xref:System.Windows.ResourceDictionary&gt; each time to receive the results.</source>
          <target state="translated">일반적으로 이렇게 해야 인스턴스화하는 &lt;xref:System.Windows.ResourceDictionary&gt;결과를 받을 때마다.&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Declaring the contents of <ph id="ph1">`Resources`</ph> as ambient so long as <ph id="ph2">`Resources`</ph> exists optimizes this lookup process.</source>
          <target state="translated">내용을 선언 <ph id="ph1">`Resources`</ph> 한 앰비언트로 <ph id="ph2">`Resources`</ph> 존재이 조회 프로세스를 최적화 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In WPF, this interface is implemented in the following cases:      -   &lt;xref:System.Windows.FrameworkElement&gt; implements &lt;xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A&gt; to return <ph id="ph1">`true`</ph> for all property names if it contains an existing &lt;xref:System.Windows.ResourceDictionary&gt; for &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;, and so long as the query is not for the &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt; property itself.</source>
          <target state="translated">WPF에서이 인터페이스는 다음과 같은 경우에 구현:- &lt;xref:System.Windows.FrameworkElement&gt;구현 &lt;xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A&gt;반환할 <ph id="ph1">`true`</ph> 기존의 포함 된 모든 속성 이름을 &lt;xref:System.Windows.ResourceDictionary&gt;에 대 한 &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;에 대 한 쿼리가 하지 않으면 하다 고는 &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;속성 자체.&lt;/xref:System.Windows.FrameworkElement.Resources%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Resources%2A&gt; &lt;/xref:System.Windows.ResourceDictionary&gt; &lt;/xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Style&gt; implements the same pattern for its &lt;xref:System.Windows.Style.Resources%2A&gt;.</source>
          <target state="translated">- &lt;xref:System.Windows.Style&gt;해당 &lt;xref:System.Windows.Style.Resources%2A&gt;.&lt;/xref:System.Windows.Style.Resources%2A&gt; 동일한 패턴을 구현&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Application&gt; implements the same pattern for its &lt;xref:System.Windows.Application.Resources%2A&gt;.</source>
          <target state="translated">- &lt;xref:System.Windows.Application&gt;해당 &lt;xref:System.Windows.Application.Resources%2A&gt;.&lt;/xref:System.Windows.Application.Resources%2A&gt; 동일한 패턴을 구현&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.FrameworkContentElement&gt; implements the same pattern for its &lt;xref:System.Windows.FrameworkContentElement.Resources%2A&gt;.</source>
          <target state="translated">- &lt;xref:System.Windows.FrameworkContentElement&gt;해당 &lt;xref:System.Windows.FrameworkContentElement.Resources%2A&gt;.&lt;/xref:System.Windows.FrameworkContentElement.Resources%2A&gt; 동일한 패턴을 구현&lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.FrameworkTemplate&gt; implements the same pattern for its &lt;xref:System.Windows.FrameworkTemplate.Resources%2A&gt;.</source>
          <target state="translated">- &lt;xref:System.Windows.FrameworkTemplate&gt;해당 &lt;xref:System.Windows.FrameworkTemplate.Resources%2A&gt;.&lt;/xref:System.Windows.FrameworkTemplate.Resources%2A&gt; 동일한 패턴을 구현&lt;/xref:System.Windows.FrameworkTemplate&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also reports &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt; content as ambient but returns <ph id="ph1">`false`</ph> if querying for &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt; itself.</source>
          <target state="translated">또한 보고 &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;앰비언트 서로 반환 콘텐츠 <ph id="ph1">`false`</ph> 을 쿼리 하는 경우 &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;자체.&lt;/xref:System.Windows.FrameworkTemplate.Template%2A&gt; &lt;/xref:System.Windows.FrameworkTemplate.Template%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   In each of these cases, the relevant <ph id="ph1">`Resources`</ph> property (and &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;) are attributed as &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.</source>
          <target state="translated">기능 각각의이 경우, 관련을 <ph id="ph1">`Resources`</ph> 속성 (및 &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;) &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt; 특성을 사용 하는&lt;/xref:System.Windows.FrameworkTemplate.Template%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical usage is to query for the properties that are NOT the &lt;xref:System.Windows.Markup.AmbientAttribute&gt; attributed properties of the object that defines the interface.</source>
          <target state="translated">일반적인 사용법은 없는 속성에 대 한 쿼리는 &lt;xref:System.Windows.Markup.AmbientAttribute&gt;특성이 지정 된 인터페이스를 정의 하는 개체의 속성입니다.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</source>
          <target state="translated">즉, 개체 그래프를 만들 때 잠재적 실행된 시간 값을 제공 하기 위해 리소스 사전 있으면, 리소스 사전 속성 컨테이너 외에도 다른 속성과 수 앰비언트로 처리 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Queries for whether a specified named property can be considered ambient in the current scope.</source>
          <target state="translated">여부 지정된 된 명명 된 속성 간주할 수 앰비언트 현재 범위에 대 한 쿼리.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name of the property to check for ambience state.</source>
          <target state="translated">앰비언트 상태를 확인 하는 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested property can be considered ambient; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요청된 된 속성을 앰비언트;로 간주할 수 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>