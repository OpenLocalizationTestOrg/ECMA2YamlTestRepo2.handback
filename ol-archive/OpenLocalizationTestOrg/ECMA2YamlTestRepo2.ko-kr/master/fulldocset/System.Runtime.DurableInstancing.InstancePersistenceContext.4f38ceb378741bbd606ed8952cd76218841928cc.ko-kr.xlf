<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f86253333e53ca3871219758020441b2d701ecce</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.DurableInstancing.InstancePersistenceContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28da28f7812a2668d1f6a96a95502e17436e3b1b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">990124a075b4e789241961da4beb47ac45bb9a0e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents execution state information while a persistence command is being executed.</source>
          <target state="translated">지 속성 명령을 실행 하는 동안 실행 상태 정보를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance of this class is passed to the TryCommand method of persistence provider implementations.</source>
          <target state="translated">이 클래스의 인스턴스는 지 속성 공급자 구현의 TryCommand 메서드로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persistence providers use this class to inspect the in-memory view of the instance as well as indicate the results of operations on the external store which may affect the view or other in-memory context.</source>
          <target state="translated">지 속성 공급자 인스턴스의 메모리 내 뷰를 검사 하는 뷰 또는 기타 메모리 내 컨텍스트에 영향을 줄 수 있는 외부 저장소에 대 한 작업의 결과 나타내는이 클래스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully associated a key to the current instance in the instance store.</source>
          <target state="translated">지 속성 공급자는 인스턴스 저장소에서 현재 인스턴스에 키를 성공적으로 연결 되어 있다는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The identifier of the key is specified as a parameter.</source>
          <target state="translated">키의 식별자를 매개 변수로 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance key must be unassociated.</source>
          <target state="translated">인스턴스 키는 연결 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance as well as a lock on that instance.</source>
          <target state="translated">해당 인스턴스에서 현재 인스턴스 핸들이 인스턴스 잠금에 바인딩되어야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The instance key identifier  for the key that has been associated.</source>
          <target state="translated">연결 된 키에 대 한 인스턴스 키 식별자입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Must not be Guid.Empty.</source>
          <target state="translated">Guid.empty가 아니어야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Begin an asynchronous operation to bind an existing lock on an instance to the current instance handle.</source>
          <target state="translated">기존 잠금을 현재 인스턴스 핸들에 인스턴스에서 바인딩할는 비동기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The version of the existing lock is passed as a parameter.</source>
          <target state="translated">기존 잠금의 버전은 매개 변수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</source>
          <target state="translated">잠금을 획득을 시도할 때 지 속성 공급자는 현재 인스턴스가 현재 저장소에서 이미 잠겨 있다고 결정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the lock token matches the current handle’s lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BeginBindReclaimedLock.</source>
          <target state="translated">잠금 토큰이 현재 핸들의 잠금 토큰과 일치 하는 경우 지 속성 공급자는 해당 버전을 검사 BeginBindReclaimedLock으로 전달 하 여 잠금을 회수할 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</source>
          <target state="translated">지 속성 공급자는 잠금이 회수가 될 때까지 인스턴스를 변경 하면 안 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no other handle is bound to the lock, then the BeginBindReclaimedLock operation succeeds and the current handle becomes bound to the lock.</source>
          <target state="translated">없는 다른 핸들이 잠금에 바인딩되어 않으면 BeginBindReclaimedLock 작업이 성공 하 고 현재 핸들이 잠금에 바인딩됩니다 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, BeginBindReclaimedLock or EndBindReclaimedLock throws InstanceHandleConflictException.</source>
          <target state="translated">그렇지 않으면 BeginBindReclaimedLock 또는 EndBindReclaimedLock이 InstanceHandleConflictException을 throw 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If commands are in progress on other handles, the operation may not complete while waiting for the outcome of those commands to decide whether the lock can be reclaimed.</source>
          <target state="translated">에서 명령이 진행 중이면 다른 핸들, 잠금을 다시 사용할 수 있는지 여부를 결정 하려면 해당 명령의 결과 기다리는 동안 작업이 완료 되지 않을 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance and a lock owner.</source>
          <target state="translated">현재 인스턴스 핸들이 인스턴스와 잠금 소유자에 바인딩되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance must not be completed.</source>
          <target state="translated">인스턴스가 완료 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lock token associated with the lock owner is used to identify the owner of the lock.</source>
          <target state="translated">잠금 소유자와 연결 된 잠금 토큰은 잠금의 소유자를 식별 하 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</source>
          <target state="translated">잠금이 핸들에 바인딩되면 핸들의 수명 동안 바인딩 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither the lock token nor the instance version can be changed.</source>
          <target state="translated">잠금 토큰이 나 인스턴스 버전을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</source>
          <target state="translated">지 속성 공급자는 잠금 버전을 구현 하지 않는 경우 인스턴스나&amp;0; 보유 잠금의 버전입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The timeout period for the asynchronous operation.</source>
          <target state="translated">비동기 작업에 대 한 제한 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">작업이 완료 될 때 호출 될 메서드.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The state information associated with the asynchronous operation.</source>
          <target state="translated">비동기 작업과 연결 된 상태 정보입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Begins executing a persistence command asynchronously.</source>
          <target state="translated">지 속성 명령을 비동기적으로 실행을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A persistence provider can use this method to execute sub-commands as part of a command.</source>
          <target state="translated">지 속성 공급자는이 메서드를 사용 하위 명령을 명령의 일부로 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sub-command will be executed using BeginTryCommand, similar to commands passed to InstanceStore.BeginExecute.</source>
          <target state="translated">BeginTryCommand를 사용 하 여 하위 명령이 실행 되며, InstanceStore.BeginExecute로 전달 된 명령과 유사 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Commands can be nested, but a command must not execute more than one sub-command at a time.</source>
          <target state="translated">명령을 중첩 시킬 수 있지만 명령을 한 번에 둘 이상의 하위 명령을 실행 해서는 안 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The persistence command to be executed.</source>
          <target state="translated">실행할 지 속성 명령입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The time-out value for the operation.</source>
          <target state="translated">작업에 대 한 제한 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">비동기에 대 한 알림을 수신 하는 대리자 수신 요청 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The state information.</source>
          <target state="translated">상태 정보입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Binds a newly acquired lock on an instance to the current instance handle.</source>
          <target state="translated">현재 인스턴스 핸들에 인스턴스에서 새로 획득 한 잠금에 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The version of the acquired lock is passed as a parameter.</source>
          <target state="translated">획득 한 잠금의 버전은 매개 변수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a persistence provider implements lock versioning, then each time a lock is acquired on the instance, the version must be incremented by one in the external store.</source>
          <target state="translated">지 속성 공급자가 잠금 버전 관리를 구현 하는 경우 다음 인스턴스의 잠금이 획득 될 때마다 버전 해야&amp;1; 씩 증가 외부 저장소에서 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first time the instance is locked, the version should be 1.</source>
          <target state="translated">인스턴스를 잠갔기 처음으로 버전 1 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each lock acquisition invalidates the previous lock.</source>
          <target state="translated">잠금을 획득할 때마다 이전 잠금이 무효화 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance and a lock owner.</source>
          <target state="translated">현재 인스턴스 핸들이 인스턴스와 잠금 소유자에 바인딩되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance must not be completed.</source>
          <target state="translated">인스턴스가 완료 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lock token associated with the lock owner is used to identify the owner of the lock       Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</source>
          <target state="translated">잠금 소유자와 연결 된 잠금 토큰은 잠금이 핸들에 바인딩되면 잠금의 소유자를 식별 하는 데, 핸들의 수명 동안 바인딩 상태가 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither the lock token nor the instance version can be changed.</source>
          <target state="translated">잠금 토큰이 나 인스턴스 버전을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Version of the lock acquired on the instance, or zero if the persistence provider does not implement lock versions.</source>
          <target state="translated">지 속성 공급자는 잠금 버전을 구현 하지 않는 경우 인스턴스나&amp;0; 획득 한 잠금의 버전입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Binds an <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstancePersistenceEvent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to an instance handle.</source>
          <target state="translated">바인딩하는 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstancePersistenceEvent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스 핸들에 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstancePersistenceEvent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing information about the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstancePersistenceEvent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트에 대 한 정보가 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Binds an instance whose identifier is specified as a parameter to the current instance handle.</source>
          <target state="translated">현재 인스턴스 핸들에 대 한 매개 변수로 해당 식별자가 지정 하는 인스턴스를 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an instance is bound to a handle, it remains bound for the lifetime of the handle.</source>
          <target state="translated">인스턴스 핸들에 바인딩되면 핸들의 수명 동안 바인딩 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>No other instance can ever be bound to the handle.</source>
          <target state="translated">다른 인스턴스에서 수 절대이 핸들에 바인딩될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An instance identifier.</source>
          <target state="translated">인스턴스 식별자입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Must not be Guid.Empty.</source>
          <target state="translated">Guid.empty가 아니어야 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Binds an instance owner to the current instance handle.</source>
          <target state="translated">인스턴스 소유자를 현재 인스턴스 핸들에 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an instance owner is bound to a handle, it remains bound for the lifetime of the handle.</source>
          <target state="translated">인스턴스 소유자 핸들에 바인딩되면 핸들의 수명 동안 바인딩 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>No other instance owner can ever be bound to the handle.</source>
          <target state="translated">다른 인스턴스 소유자 수 절대이 핸들에 바인딩될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The identifier for the instance owner.</source>
          <target state="translated">인스턴스 소유자에 대 한 식별자입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The lock token of the instance owner.</source>
          <target state="translated">인스턴스 소유자의 잠금 토큰입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A persistence provider may choose to use the same value for the instance owner identifier and the owner’s lock token.</source>
          <target state="translated">지 속성 공급자는 인스턴스 소유자 식별자와 소유자의 잠금 토큰에 대 한 동일한 값을 사용 하도록 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Binds an existing lock on an instance to the current instance handle.</source>
          <target state="translated">기존 잠금을 현재 인스턴스 핸들에 인스턴스에 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The version of the existing lock is passed as a parameter.</source>
          <target state="translated">기존 잠금의 버전은 매개 변수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</source>
          <target state="translated">잠금을 획득을 시도할 때 지 속성 공급자는 현재 인스턴스가 현재 저장소에서 이미 잠겨 있다고 결정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the lock token matches the current handle’s lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BindReclaimedLock.</source>
          <target state="translated">잠금 토큰이 현재 핸들의 잠금 토큰과 일치 하는 경우 지 속성 공급자는 해당 버전을 검사 BindReclaimedLock으로 전달 하 여 잠금을 회수할 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</source>
          <target state="translated">지 속성 공급자는 잠금이 회수가 될 때까지 인스턴스를 변경 하면 안 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no other handle is bound to the lock, then BindReclaimedLock succeeds and the current handle becomes bound to the lock.</source>
          <target state="translated">없는 다른 핸들이 잠금에 바인딩되어, 않으면 BindReclaimedLock이 성공 하 고 현재 핸들이 잠금에 바인딩됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, BindReclaimedLock throws InstanceHandleConflictException.</source>
          <target state="translated">그렇지 않으면 BindReclaimedLock이 InstanceHandleConflictException을 throw 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If commands are in progress on other handles, BindReclaimedLock may block waiting for the outcome of those commands before deciding whether the lock can be reclaimed.</source>
          <target state="translated">에서 명령이 진행 중이면 다른 핸들, BindReclaimedLock 잠금을 다시 사용할 수 있는지 여부를 결정 하기 전에 해당 명령의 결과 대 한 대기를 차단할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance and a lock owner.</source>
          <target state="translated">현재 인스턴스 핸들이 인스턴스와 잠금 소유자에 바인딩되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance must not be completed.</source>
          <target state="translated">인스턴스가 완료 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lock token associated with the lock owner is used to identify the owner of the lock.</source>
          <target state="translated">잠금 소유자와 연결 된 잠금 토큰은 잠금의 소유자를 식별 하 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</source>
          <target state="translated">잠금이 핸들에 바인딩되면 핸들의 수명 동안 바인딩 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither the lock token nor the instance version can be changed.</source>
          <target state="translated">잠금 토큰이 나 인스턴스 버전을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</source>
          <target state="translated">지 속성 공급자는 잠금 버전을 구현 하지 않는 경우 인스턴스나&amp;0; 보유 잠금의 버전입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The time-out value for the operation.</source>
          <target state="translated">작업에 대 한 제한 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully marked the current instance as complete in the instance store.</source>
          <target state="translated">지 속성 공급자가 인스턴스 저장소에서 현재 인스턴스가 완료로 표시 했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance as well as a lock on that instance.</source>
          <target state="translated">해당 인스턴스에서 현재 인스턴스 핸들이 인스턴스 잠금에 바인딩되어야 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance must be initialized and not be already completed.</source>
          <target state="translated">인스턴스를 초기화 하 고 이미을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>(An instance is initialized if a set of instance data has ever been persisted to it.) All of the keys associated to the instance must be completed.</source>
          <target state="translated">(인스턴스는 초기화 인스턴스 데이터 집합을 지속 된 적이 있는 경우.) 인스턴스에 연결 된 키를 모두 완료 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully marked a key as complete in the external store.</source>
          <target state="translated">지 속성 공급자가 외부 저장소에서 키를 완료로 표시 했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The identifier of the key is specified as a parameter.</source>
          <target state="translated">키의 식별자를 매개 변수로 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance as well as a lock on that instance.</source>
          <target state="translated">해당 인스턴스에서 현재 인스턴스 핸들이 인스턴스 잠금에 바인딩되어야 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance key must be associated to the current instance and not be already completed.</source>
          <target state="translated">인스턴스 키는 현재 인스턴스에 연결 되어 있어야 하며 이미 완료 하지 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The instance key identifier for the key that has been completed.</source>
          <target state="translated">완료 된 키에 대 한 인스턴스 키 식별자입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Must not be Guid.Empty.</source>
          <target state="translated">Guid.empty가 아니어야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Creates an instance of an exception which can be thrown from TryCommand to trigger BindReclaimedLock behavior.</source>
          <target state="translated">BindReclaimedLock 동작을 트리거하기 위해 TryCommand에서 throw 될 수 있는 예외 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sample code:      <ph id="ph1">```      protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       throw context.CreateBindReclaimedLockException(5);   }   is equivalent to   protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       context.BindReclaimedLock(5, timeout);       throw new OperationCanceledException();   }      ```</ph></source>
          <target state="translated">샘플 코드:<ph id="ph1">```      protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       throw context.CreateBindReclaimedLockException(5);   }   is equivalent to   protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       context.BindReclaimedLock(5, timeout);       throw new OperationCanceledException();   }      ```</ph></target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</source>
          <target state="translated">지 속성 공급자는 잠금 버전을 구현 하지 않는 경우 인스턴스나&amp;0; 보유 잠금의 버전입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>An exception.</source>
          <target state="translated">예외입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Ends the asynchronous operation started by the &lt;xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*&gt; method.</source>
          <target state="translated">에 의해 시작 비동기 작업을 종료 하는 &lt;xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*&gt;메서드.&lt;/xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The result of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 결과입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Ends the asynchronous operation.</source>
          <target state="translated">비동기 작업을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Executes a persistence command.</source>
          <target state="translated">지 속성 명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>A persistence provider can use this method to execute sub-commands as part of a command.</source>
          <target state="translated">지 속성 공급자는이 메서드를 사용 하위 명령을 명령의 일부로 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sub-command will be executed using TryCommand, similar to commands passed to InstanceStore.Execute.</source>
          <target state="translated">InstanceStore.Execute로 전달 된 명령과 유사를 TryCommand를 사용 하 여 하위 명령을 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Commands can be nested, but a command must not execute more than one sub-command at a time.</source>
          <target state="translated">명령을 중첩 시킬 수 있지만 명령을 한 번에 둘 이상의 하위 명령을 실행 해서는 안 됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The persistence command to be executed.</source>
          <target state="translated">실행할 지 속성 명령입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The time-out value for the operation.</source>
          <target state="translated">작업에 대 한 제한 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets the current instance handle.</source>
          <target state="translated">현재 인스턴스 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The current instance handle.</source>
          <target state="translated">현재 인스턴스 핸들입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets the version of the lock held on the current instance by the current instance handle.</source>
          <target state="translated">현재 인스턴스 핸들이 현재 인스턴스에서 보유 한 잠금의 버전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The persistence provider should check this value against the lock version of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</source>
          <target state="translated">지 속성 공급자는 잠금에 바인딩됩니다 (예: 인스턴스 데이터 지속) 핸들을 사용 하 여 잠금이 필요로 하는 작업을 수행 하는 경우 인스턴스 저장소에서 인스턴스가 보유 하는 잠금의 잠금 버전과이 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the lock version doesn’t match, the command should fail with InstanceLockLostException.</source>
          <target state="translated">잠금 버전이 일치 하지 않으면 명령이 실패 하며 instancelocklostexception 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The version of the instance lock bound to the current instance handle, or -1 if the handle isn’t bound to a lock.</source>
          <target state="translated">인스턴스 잠금 버전 핸들이 잠금에 바인딩되어 있지 않은 경우 현재 인스턴스 핸들이 나-1에 바인딩됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets the instance view object that represents the in-memory state of the current instance.</source>
          <target state="translated">현재 인스턴스의 메모리 내 상태를 나타내는 인스턴스 뷰 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This view reflects updates as they are made by the command in progress.</source>
          <target state="translated">이 뷰는 진행 중인 명령을 통해 적용 된 업데이트를 반영 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The instance view object.</source>
          <target state="translated">인스턴스 뷰 개체입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully retrieved the current instance from the instance store.</source>
          <target state="translated">지 속성 공급자를 인스턴스 저장소에서 현재 인스턴스를 검색에 성공적으로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance.</source>
          <target state="translated">현재 인스턴스 핸들이 인스턴스에 바인딩해야 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the instance handle is bound to a lock or the loaded instance is marked as complete, the loaded data is considered to be consistent; otherwise, it is considered to be in doubt.</source>
          <target state="translated">인스턴스 핸들이 잠금에 바인딩되어 또는 로드 된 인스턴스가 완료로 표시 되어, 로드 된 데이터 일관성이;으로 간주 됩니다. 그렇지 않으면 불확실 한 상태에 있는 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The instance state information.</source>
          <target state="translated">인스턴스 상태 정보입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The instance data as a dictionary of &lt;xref:System.Xml.Linq.XName&gt; and <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">사전으로 인스턴스 데이터 &lt;xref:System.Xml.Linq.XName&gt;및 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Instance metadata as a collection of &lt;xref:System.Xml.Linq.XName&gt; and <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">인스턴스 메타 데이터의 컬렉션으로 &lt;xref:System.Xml.Linq.XName&gt;및 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Associated instance key metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of &lt;xref:System.Xml.Linq.XName&gt; and <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">인스턴스 식별자 및 인스턴스 키 메타 데이터의 사전으로 연결 된 인스턴스 키 메타 데이터의 사전 인 &lt;xref:System.Xml.Linq.XName&gt;및 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Completed instance metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of &lt;xref:System.Xml.Linq.XName&gt; and <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">인스턴스 식별자 및 인스턴스 키 메타 데이터의 사전으로 인스턴스 메타 데이터를 완료 하는의 사전 &lt;xref:System.Xml.Linq.XName&gt;및 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Gets the lock token of the instance owner bound to the current instance handle.</source>
          <target state="translated">잠금을 현재 인스턴스 핸들에 바인딩된 인스턴스 소유자의 토큰을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The persistence provider should check this value against the lock token of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</source>
          <target state="translated">지 속성 공급자는 잠금에 바인딩됩니다 (예: 인스턴스 데이터 지속) 핸들을 사용 하 여 잠금이 필요로 하는 작업을 수행 하는 경우 인스턴스 저장소에서 인스턴스가 보유 하는 잠금의 잠금 토큰과이 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the lock token doesn’t match, the command should fail with InstanceLockLostException.</source>
          <target state="translated">잠금 토큰이 일치 하지 않으면 명령이 실패 하며 instancelocklostexception 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The persistence provider should use this value as the lock token when acquiring a new lock on an instance (such as persisting instance data using a handle not already bound to a lock).</source>
          <target state="translated">지 속성 공급자 (예: 아직 바인딩되어 있지 않은 잠금에 대 한 핸들을 사용 하 여 인스턴스 데이터 지속) 인스턴스에서 새 잠금을 획득할 때 잠금 토큰으로이 값을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the instance is already locked in the instance store and the lock token matches this lock token, the persistence provider can attempt to reclaim the instance using BindReclaimedLock.</source>
          <target state="translated">인스턴스가 인스턴스 저장소에서 이미 잠겨 잠금 토큰이이 잠금 토큰과 일치 하는 경우 지 속성 공급자 BindReclaimedLock을 사용 하 여 인스턴스를 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The lock token bound to the current instance handle, or Guid.Empty if the handle isn’t bound to an instance owner.</source>
          <target state="translated">핸들이 인스턴스 소유자에 바인딩되어 있지 않은 경우 Guid.Empty는 현재 인스턴스 핸들에 바인딩되어 있는 잠금 토큰입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully persisted a set of instance data to the instance store.</source>
          <target state="translated">지 속성 공급자가 성공적으로 인스턴스 저장소에 인스턴스 데이터 집합이 한 레코드가 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This has the effect of initializing the instance if it wasn’t already.</source>
          <target state="translated">이미 되지 않은 경우 인스턴스를 초기화 것과 효과가 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance as well as a lock on that instance.</source>
          <target state="translated">해당 인스턴스에서 현재 인스턴스 핸들이 인스턴스 잠금에 바인딩되어야 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each set of instance data completely replaces the previous set.</source>
          <target state="translated">각 인스턴스 데이터 집합이 이전 집합을 완전히 바꿉니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of instance data may be null – this is the same as empty.</source>
          <target state="translated">인스턴스 데이터 집합이 null 이며 비어 있는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persisting a null set of instance data deletes the existing set of instance data.</source>
          <target state="translated">기존 인스턴스 데이터 집합이 삭제 null 집합을 인스턴스 데이터 지속 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>(Persisting a set of instance data has no effect on instance metadata.)</source>
          <target state="translated">있습니다 (집합을 인스턴스 데이터 지속의 인스턴스 메타 데이터에 영향을 주지 않습니다.)</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Instance data as a dictionary of &lt;xref:System.Xml.Linq.XName&gt; and <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">인스턴스 데이터의 사전으로 &lt;xref:System.Xml.Linq.XName&gt;및 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Adds the <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceStoreQueryResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> passed as a parameter to a list of <bpt id="p2">&lt;xref href="System.Runtime.DurableInstancing.InstanceStoreQueryResult"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects in an <bpt id="p3">&lt;xref href="System.Runtime.DurableInstancing.InstanceView"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">추가 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceStoreQueryResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 목록에 매개 변수로 전달 <bpt id="p2">&lt;xref href="System.Runtime.DurableInstancing.InstanceStoreQueryResult"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체에 <bpt id="p3">&lt;xref href="System.Runtime.DurableInstancing.InstanceView"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The results of a query against an instance store.</source>
          <target state="translated">인스턴스 저장소에 대 한 쿼리의 결과입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully read some instance key metadata for a key associated to the current instance from the instance store.</source>
          <target state="translated">지 속성 공급자가 인스턴스 저장소에서 현재 인스턴스에 연결 된 키에 대 한 일부 인스턴스 키 메타 데이터 읽었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance.</source>
          <target state="translated">현재 인스턴스 핸들이 인스턴스에 바인딩해야 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</source>
          <target state="translated">메타 데이터; 일관 된 것으로 간주 됩니다 인스턴스 핸들이 잠금에 바인딩되어 않거나 현재 인스턴스가 완료로 표시 되어, 그렇지 않으면 불확실 한 상태에 있는 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The instance key identifier for the key whose metadata was read.</source>
          <target state="translated">해당 메타 데이터를 읽은 키에 대 한 인스턴스 키 식별자입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Must not be Guid.Empty.</source>
          <target state="translated">Guid.empty가 아니어야 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The metadata as a dictionary of &lt;xref:System.Xml.Linq.XName&gt; and <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">메타 데이터의 사전으로 &lt;xref:System.Xml.Linq.XName&gt;및 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the metadata represents all of the metadata associated to the instance key, otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>그렇지 않으면 인스턴스 키에 연결 된 메타 데이터의 모든 메타 데이터 나타내면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully read some instance metadata for the current instance from the instance store.</source>
          <target state="translated">지 속성 공급자가 인스턴스 저장소에서 현재 인스턴스에 대 한 인스턴스 메타 데이터 일부를 읽을 성공적으로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The metadata as a dictionary of &lt;xref:System.Xml.Linq.XName&gt; and <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">메타 데이터의 사전으로 &lt;xref:System.Xml.Linq.XName&gt;및 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the metadata represents all of the metadata associated to the instance, otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메타 데이터 모든 인스턴스에, 그렇지 않으면 연결 된 메타 데이터를 나타내는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Sets the instance owner metadata using the data passed in the parameter.</source>
          <target state="translated">매개 변수에 전달 되는 데이터를 사용 하 여 인스턴스 소유자 메타 데이터를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance.</source>
          <target state="translated">현재 인스턴스 핸들이 인스턴스에 바인딩해야 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</source>
          <target state="translated">메타 데이터; 일관 된 것으로 간주 됩니다 인스턴스 핸들이 잠금에 바인딩되어 않거나 현재 인스턴스가 완료로 표시 되어, 그렇지 않으면 불확실 한 상태에 있는 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The dictionary of &lt;xref:System.Xml.Linq.XName&gt; and <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">사전 &lt;xref:System.Xml.Linq.XName&gt;및 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The value to specify whether the consistency to be set to <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValueConsistency"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Runtime.DurableInstancing.InstanceValueConsistency"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정할 값 여부를 설정할 수 일관성 <bpt id="p1">&lt;xref href="System.Runtime.DurableInstancing.InstanceValueConsistency"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Runtime.DurableInstancing.InstanceValueConsistency"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Sets the cancellation handler to be called when the cancel of an operation is requested.</source>
          <target state="translated">작업의 취소가 요청 될 때 호출 될 취소 처리기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cancellation handler is called, the persistence provider should cancel all pending operations and throw OperationCanceledException from TryCommand to indicate that the persistence command was interrupted before it could be completed.</source>
          <target state="translated">취소 처리기가 호출 되는 경우 지 속성 공급자는 보류 중인 모든 작업을 취소 하 고 완료 되기 전에 지 속성 명령이 중단 되었습니다 나타내기 위해 TryCommand에서 OperationCanceledException을 throw 해야 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The reference to a function to be called.</source>
          <target state="translated">함수를 호출할 수에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully disassociated a key from the current instance in the instance store.</source>
          <target state="translated">지 속성 공급자가 인스턴스 저장소에 현재 인스턴스에서 키와 분리 성공적으로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The identifier of the key is specified as a parameter.</source>
          <target state="translated">키의 식별자를 매개 변수로 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance as well as a lock on that instance.</source>
          <target state="translated">해당 인스턴스에서 현재 인스턴스 핸들이 인스턴스 잠금에 바인딩되어야 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance key must be associated to the current instance and must be marked complete.</source>
          <target state="translated">인스턴스 키는 현재 인스턴스에 연결 되어 있어야 하며 완료로 표시 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance must not be marked complete.</source>
          <target state="translated">현재 인스턴스가 표시 되 면 안 완료 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The instance key identifier for the key that has been unassociated.</source>
          <target state="translated">연결 된 키에 대 한 인스턴스 키 식별자입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Must not be Guid.Empty.</source>
          <target state="translated">Guid.empty가 아니어야 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets the user context information attached to the current instance handle.</source>
          <target state="translated">현재 인스턴스 핸들에 연결 된 사용자 컨텍스트 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object is the one that is returned from InstanceStore.OnNewInstanceHandle for the current instance handle.</source>
          <target state="translated">개체는 현재 인스턴스 핸들의 InstanceStore.OnNewInstanceHandle에서 반환 된 것입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The user context information.</source>
          <target state="translated">사용자 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully written a metadata value for an instance key that is associated with the current instance to the instance store</source>
          <target state="translated">지 속성 공급자가 인스턴스 저장소에 현재 인스턴스와 연결 된 인스턴스 키에 대 한 메타 데이터 값을 기록 했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance as well as a lock on that instance.</source>
          <target state="translated">해당 인스턴스에서 현재 인스턴스 핸들이 인스턴스 잠금에 바인딩되어야 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance key must be associated with the current instance and must not be completed.</source>
          <target state="translated">인스턴스 키는 현재 인스턴스에 연결 되어야 합니다 하며 완료 해야 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The instance key identifier for the key.</source>
          <target state="translated">키에 대 한 인스턴스 키 식별자입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Must not be Guid.Empty.</source>
          <target state="translated">Guid.empty가 아니어야 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The name of the metadata property.</source>
          <target state="translated">메타 데이터 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The value of the metadata property.</source>
          <target state="translated">메타 데이터 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully written a metadata value for the current instance to the external instance store.</source>
          <target state="translated">지 속성 공급자가 외부 인스턴스 저장소에 현재 인스턴스에 대 한 메타 데이터 값을 기록 했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance as well as has a lock on that instance.</source>
          <target state="translated">현재 인스턴스 핸들이 인스턴스에 바인딩되어 있어야 뿐만 아니라 해당 인스턴스에 대 한 잠금을 보유 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance must not be completed.</source>
          <target state="translated">인스턴스가 완료 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The name of the metadata property.</source>
          <target state="translated">메타 데이터 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The value of the metadata property.</source>
          <target state="translated">메타 데이터 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Indicates that the persistence provider has successfully written a metadata value for the current instance owner to the instance store.</source>
          <target state="translated">지 속성 공급자가 성공적으로 작성 된 메타 데이터 값을 현재 인스턴스 소유자에 대 한 인스턴스 저장소에 나타냅니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance handle must be bound to an instance owner.</source>
          <target state="translated">현재 인스턴스 핸들이 인스턴스 소유자에 바인딩해야 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The name of the metadata property.</source>
          <target state="translated">메타 데이터 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The value of the metadata property.</source>
          <target state="translated">메타 데이터 속성의 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>