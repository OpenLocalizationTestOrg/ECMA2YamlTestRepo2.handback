<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0d7456eba4e9cc29b97efd14fef948108ee7f17</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlSchemaContextSettings.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c1f732188f80af2d3b3e45665a442d67e77fd1f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f031bef30cff9d7ff6498ac315b744e90b27a74</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides optional settings for a <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 선택적 설정을 제공는 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContextSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContextSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContextSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the values of an existing <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContextSettings"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContextSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 기존 열의 값을 복사 하 여 <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContextSettings"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An existing <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContextSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기존 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContextSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</source>
          <target state="translated">XAML 스키마와 해당 컨텍스트 조회 API에 의해 반환 되는 값에 정규화 된 어셈블리 이름을 사용 하는지 여부를 지정 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property influences the strings that are returned by &lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt; in the constructed schema context.</source>
          <target state="translated">이 속성의 값에 의해 반환 된 문자열에 영향을 줍니다 &lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;생성 된 스키마 컨텍스트에서.&lt;/xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt; is <ph id="ph1">`true`</ph>, the assembly part of the string reports the equivalent of &lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">경우 &lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;은 <ph id="ph1">`true`</ph>, assembly 부분 문자열의 &lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;.&lt;/xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt; 을 해당 하는 보고&lt;/xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>XAML 스키마와 해당 컨텍스트 조회 Api;에 의해 반환 되는 값에서 정규화 된 어셈블리 이름을 사용 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether a XAML schema context allows for markup extensions that have two constructors with the same arity (number of input parameters).</source>
          <target state="translated">XAML 스키마 컨텍스트를 동일한 인자 수 (입력된 매개 변수 수)를 갖는 두 명의 생성자가 있는 태그 확장에 대 한 허용 하는지 여부를 지정 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>From a &lt;xref:System.Xaml.XamlSchemaContext&gt;, you cannot read the settings directly.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlSchemaContext&gt;, 설정을 직접 읽을 수 없습니다.&lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you receive values from specific read-only properties, such as &lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;, which report the settings-based values.</source>
          <target state="translated">대신 값에서에서 받은 특정 읽기 전용 속성을 같은 &lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;, 설정을 기반으로 값을 보고 있는.&lt;/xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schema context allows for markup extensions that have duplicate arity; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>스키마 컨텍스트; 중복 인자가 있는 태그 확장에 대 한 허용 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>