<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a2192078d0290ee4a6dfbd2e024e07ecaa38bb2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices._FieldInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">189322c2f8e5d91b5e9b7ab5efe227390f00425a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a6903d970ed316f4e71a8ed7a5e63fd2306eee8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the public members of the <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.FieldInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> class to unmanaged code.</source>
          <target state="translated">public 멤버를 노출는 <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.FieldInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 비관리 코드에는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 인터페이스는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface preserves the vtable order of the &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">vtable 순서를 유지 하는이 인터페이스는 &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;클래스 관리 되지 않는 COM 개체에서 액세스할 수 있는 멤버.&lt;/xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.Attributes*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.Attributes*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.Attributes*&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.Attributes%2A&gt; property gets the attributes associated with this field.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.Attributes%2A&gt;속성이이 필드와 연결 된 특성을 가져옵니다.&lt;/xref:System.Reflection.FieldInfo.Attributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.FieldAttributes&gt; for this field.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldAttributes&gt;이 필드에 대 한.&lt;/xref:System.Reflection.FieldAttributes&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.DeclaringType*&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;이 멤버를 선언 하는 클래스 속성을 가져옵니다.&lt;/xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object for the class that declares this member.</source>
          <target state="translated">&lt;xref:System.Type&gt;이 멤버를 선언 하는 클래스에 대 한 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.Equals*&gt;메서드.&lt;/xref:System.Object.Equals*&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object.Equals%2A&gt;메서드 확인 여부를 지정 된 &lt;xref:System.Object&gt;현재 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 같은지&lt;/xref:System.Object&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;현재 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 와 비교할 개체&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하는 경우 지정 된 &lt;xref:System.Object&gt;현재 같은지 &lt;xref:System.Object&gt;, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.FieldHandle*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.FieldHandle*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.FieldHandle*&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.FieldHandle%2A&gt; property gets a &lt;xref:System.RuntimeFieldHandle&gt;, which is a handle to the internal metadata representation of a field.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.FieldHandle%2A&gt;속성 get는 &lt;xref:System.RuntimeFieldHandle&gt;, 필드의 내부 메타 데이터 표현에 대 한 핸들 인.&lt;/xref:System.RuntimeFieldHandle&gt; &lt;/xref:System.Reflection.FieldInfo.FieldHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A handle to the internal metadata representation of a field.</source>
          <target state="translated">필드의 내부 메타 데이터 표현에 대 한 핸들입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.FieldType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.FieldType*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.FieldType*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.FieldType%2A&gt; property gets the type of this field object.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.FieldType%2A&gt;속성이 필드 개체의 형식을 가져옵니다.&lt;/xref:System.Reflection.FieldInfo.FieldType%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The type of this field object.</source>
          <target state="translated">이 필드 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;메서드.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;메서드 모든 사용자 지정 특성을 포함 하는 배열을 반환 합니다.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">이 멤버의 상속 체인 특성을 찾기 위해 검색할 것인지 지정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</source>
          <target state="translated">모든 사용자 지정 특성을 포함 하는 배열 또는 정의 된 특성이 없는 경우 요소가 없는 배열입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;메서드.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;메서드는 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 으로 식별 된 사용자 지정 특성의 배열을 반환합니다 합니다.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">이 형식에 할당할 수 있는 특성만 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">이 멤버의 상속 체인 특성을 찾기 위해 검색할 것인지 지정 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">이 멤버에 적용 하는 사용자 지정 특성의 배열 또는 특성이 적용 된 경우 (0) 요소의 개수가&amp;0; 인 배열.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.GetHashCode*&gt;메서드.&lt;/xref:System.Object.GetHashCode*&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;메서드는 특정 형식에 대 한 해시 함수 역할을 합니다.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures like a hash table.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;해시 테이블 같은 해시 알고리즘 및 데이터 구조에서 사용 하기 위해 적합 합니다.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The hash code for the current instance.</source>
          <target state="translated">현재 인스턴스에 대 한 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">이름 집합을 해당 디스패치 식별자 집합에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">나중에 사용하도록 예약되어 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">IID_NULL 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Passed-in array of names to be mapped.</source>
          <target state="translated">전달 된 이름의 배열을 매핑할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Count of the names to be mapped.</source>
          <target state="translated">매핑할 이름의 수입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">이름을 해석할 로캘 컨텍스트.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Caller-allocated array that receives the IDs corresponding to the names.</source>
          <target state="translated">이름에 해당 하는 Id를 받는 호출자가 할당 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.GetType*&gt;메서드.&lt;/xref:System.Object.GetType*&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.</source>
          <target state="translated">&lt;xref:System.Object.GetType%2A&gt;메서드는 현재 인스턴스의 형식을 가져옵니다.&lt;/xref:System.Object.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object.</source>
          <target state="translated">A &lt;xref:System.Type&gt;개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Retrieves the type information for an object, which can then be used to get the type information for an interface.</source>
          <target state="translated">인터페이스에 대 한 형식 정보를 얻으려면 다음 사용할 수 있는 개체에 대 한 형식 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The type information to return.</source>
          <target state="translated">반환할 형식 정보입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The locale identifier for the type information.</source>
          <target state="translated">형식 정보에 대 한 로캘 식별자입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Receives a pointer to the requested type information object.</source>
          <target state="translated">요청 된 형식 정보 개체에 대 한 포인터를 받습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">개체 (0 또는 1)를 제공 하는 형식 정보 인터페이스의 수를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Points to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">개체에서 제공 하는 형식 정보 인터페이스의 수를 받는 위치를 가리킵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.GetValue*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.GetValue*&gt;메서드.&lt;/xref:System.Reflection.FieldInfo.GetValue*&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.GetValue%2A&gt; method returns the value of a field supported by a given object.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.GetValue%2A&gt;메서드는 지정된 된 개체에서 지 원하는 필드의 값을 반환 합니다.&lt;/xref:System.Reflection.FieldInfo.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The object whose field value will be returned.</source>
          <target state="translated">해당 필드 값이 반환 될 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An object containing the value of the field reflected by this instance.</source>
          <target state="translated">이 인스턴스에서 반영한 필드의 값을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.GetValueDirect*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.GetValueDirect*&gt;메서드.&lt;/xref:System.Reflection.FieldInfo.GetValueDirect*&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.GetValueDirect%2A&gt; method returns the value of a field supported by a given object.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.GetValueDirect%2A&gt;메서드는 지정된 된 개체에서 지 원하는 필드의 값을 반환 합니다.&lt;/xref:System.Reflection.FieldInfo.GetValueDirect%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.TypedReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that encapsulates a managed pointer to a location and a runtime representation of the type that might be stored at that location.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.TypedReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위치와 해당 위치에 저장 될 수 있는 형식의 런타임 표현이에 대 한 관리를 캡슐화 하는 구조입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; containing a field value.</source>
          <target state="translated">&lt;xref:System.Object&gt;필드 값이 포함 된.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">개체에서 노출 하는 메서드와 속성에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`IDispatch::Invoke`</ph>, MSDN Library를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Identifies the member.</source>
          <target state="translated">멤버를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">나중에 사용하도록 예약되어 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">IID_NULL 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">인수를 해석할 로캘 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Flags describing the context of the call.</source>
          <target state="translated">호출의 컨텍스트를 설명 하는 플래그입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">인수의 배열, 명명 된 인수 및 배열에 있는 요소 수에 대 한 수에 대 한 인수 Dispid의 배열에 포함 된 구조체에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Pointer to the location where the result is to be stored.</source>
          <target state="translated">결과 저장 될 위치에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Pointer to a structure that contains exception information.</source>
          <target state="translated">예외 정보가 포함 된 구조에 대 한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">오류가 있는 첫 번째 인수의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsAssembly*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsAssembly*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsAssembly%2A&gt; property gets a value indicating whether this field has <ph id="ph1">`Assembly`</ph> level visibility.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsAssembly%2A&gt;속성이이 필드에 있는지 여부를 나타내는 값을 가져옵니다 <ph id="ph1">`Assembly`</ph> 표시 유형 수준.&lt;/xref:System.Reflection.FieldInfo.IsAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the field has the <bpt id="p2">&lt;xref uid="langword_csharp_Assembly" name="Assembly" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>필드에는 <bpt id="p2">&lt;xref uid="langword_csharp_Assembly" name="Assembly" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그렇지 않으면 설정 특성 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt;메서드.&lt;/xref:System.Reflection.MemberInfo.IsDefined*&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; method indicates whether one or more instance of <ph id="ph1">`attributeType`</ph> is applied to this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;메서드 나타냅니다 하나 또는 더 많은 인스턴스의 <ph id="ph1">`attributeType`</ph> 이 멤버에 적용 됩니다.&lt;/xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object to which the custom attributes are applied.</source>
          <target state="translated">&lt;xref:System.Type&gt;개체를 사용자 지정 특성이 적용 됩니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">이 멤버의 상속 체인 특성을 찾기 위해 검색할 것인지 지정 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if one or more instance of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">attributeType</ph><ept id="p2">&lt;/code&gt;</ept> is applied to this member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하나 또는 더 많은 인스턴스의 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">attributeType</ph> <ept id="p2">&lt;/code&gt;</ept> 이 멤버에 적용 되 고, 그러지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsFamily*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsFamily*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsFamily*&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsFamily%2A&gt; property gets a value indicating whether this field has <ph id="ph1">`Family`</ph> level visibility.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsFamily%2A&gt;속성이이 필드에 있는지 여부를 나타내는 값을 가져옵니다 <ph id="ph1">`Family`</ph> 표시 유형 수준.&lt;/xref:System.Reflection.FieldInfo.IsFamily%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the field has the <bpt id="p2">&lt;xref uid="langword_csharp_Family" name="Family" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>필드에는 <bpt id="p2">&lt;xref uid="langword_csharp_Family" name="Family" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그렇지 않으면 설정 특성 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsFamilyAndAssembly*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsFamilyAndAssembly*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsFamilyAndAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A&gt; property gets a value indicating whether this field has <ph id="ph1">`FamilyAndAssembly`</ph> level visibility.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A&gt;속성이이 필드에 있는지 여부를 나타내는 값을 가져옵니다 <ph id="ph1">`FamilyAndAssembly`</ph> 표시 유형 수준.&lt;/xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the field has the <bpt id="p2">&lt;xref uid="langword_csharp_FamANDAssem" name="FamANDAssem" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>필드에는 <bpt id="p2">&lt;xref uid="langword_csharp_FamANDAssem" name="FamANDAssem" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그렇지 않으면 설정 특성 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsFamilyOrAssembly*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsFamilyOrAssembly*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsFamilyOrAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A&gt; property gets a value indicating whether this field has <ph id="ph1">`FamilyOrAssembly`</ph> level visibility.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A&gt;속성이이 필드에 있는지 여부를 나타내는 값을 가져옵니다 <ph id="ph1">`FamilyOrAssembly`</ph> 표시 유형 수준.&lt;/xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the field has the <bpt id="p2">&lt;xref uid="langword_csharp_FamORAssem" name="FamORAssem" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>필드에는 <bpt id="p2">&lt;xref uid="langword_csharp_FamORAssem" name="FamORAssem" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그렇지 않으면 설정 특성 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsInitOnly*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsInitOnly*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsInitOnly*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsInitOnly%2A&gt; property gets a value indicating whether the field can only be set in the body of the constructor.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsInitOnly%2A&gt;속성 필드 생성자의 본문에만 설정할 수 있는지 여부를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.FieldInfo.IsInitOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the field has the <bpt id="p2">&lt;xref uid="langword_csharp_InitOnly" name="InitOnly" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>필드에는 <bpt id="p2">&lt;xref uid="langword_csharp_InitOnly" name="InitOnly" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그렇지 않으면 설정 특성 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsLiteral*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsLiteral*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsLiteral*&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsLiteral%2A&gt; property gets a value indicating whether the value is written at compile time and cannot be changed.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsLiteral%2A&gt;속성 값은 컴파일 타임에 작성 된 변경할 수 없습니다 하는지 여부를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.FieldInfo.IsLiteral%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the field has the <bpt id="p2">&lt;xref uid="langword_csharp_Literal" name="Literal" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>필드에는 <bpt id="p2">&lt;xref uid="langword_csharp_Literal" name="Literal" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그렇지 않으면 설정 특성 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsNotSerialized*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsNotSerialized*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsNotSerialized*&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsNotSerialized%2A&gt; property gets a value indicating whether this field has the <ph id="ph1">`NotSerialized`</ph> attribute.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsNotSerialized%2A&gt;속성이이 필드에 있는지 여부를 나타내는 값을 가져옵니다는 <ph id="ph1">`NotSerialized`</ph> 특성.&lt;/xref:System.Reflection.FieldInfo.IsNotSerialized%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the field has the <bpt id="p2">&lt;xref uid="langword_csharp_NotSerialized" name="NotSerialized" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>필드에는 <bpt id="p2">&lt;xref uid="langword_csharp_NotSerialized" name="NotSerialized" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그렇지 않으면 설정 특성 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsPinvokeImpl*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsPinvokeImpl*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsPinvokeImpl*&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A&gt; property gets a value indicating whether the corresponding <ph id="ph1">`PinvokeImpl`</ph> attribute is set in &lt;xref:System.Reflection.FieldAttributes&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A&gt;속성 나타내는 값을 가져옵니다 여부는 해당 <ph id="ph1">`PinvokeImpl`</ph> &lt;xref:System.Reflection.FieldAttributes&gt;.&lt;/xref:System.Reflection.FieldAttributes&gt; 특성이 설정 되어&lt;/xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_PinvokeImpl" name="PinvokeImpl" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute is set in &lt;xref:System.Reflection.FieldAttributes&gt;; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref uid="langword_csharp_PinvokeImpl" name="PinvokeImpl" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 특성에 설정 되어 &lt;xref:System.Reflection.FieldAttributes&gt;, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.FieldAttributes&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsPrivate*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsPrivate*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsPrivate*&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsPrivate%2A&gt; property gets a value indicating whether the field is private.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsPrivate%2A&gt;속성 필드 전용인 지 여부를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.FieldInfo.IsPrivate%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the field is private; otherwise; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개인; 필드의 경우 그렇지 않으면; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsPublic*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsPublic*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsPublic*&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsPublic%2A&gt; property gets a value indicating whether the field is public.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsPublic%2A&gt;속성 필드 공용 인지를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.FieldInfo.IsPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this field is public; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 필드는 공용 필드 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsSpecialName*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsSpecialName*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsSpecialName*&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsSpecialName%2A&gt; property gets a value indicating whether the corresponding <ph id="ph1">`SpecialName`</ph> attribute is set in the &lt;xref:System.Reflection.FieldAttributes&gt; enumerator.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsSpecialName%2A&gt;속성 나타내는 값을 가져옵니다 여부는 해당 <ph id="ph1">`SpecialName`</ph> 특성에 설정 되어는 &lt;xref:System.Reflection.FieldAttributes&gt;열거자.&lt;/xref:System.Reflection.FieldAttributes&gt; &lt;/xref:System.Reflection.FieldInfo.IsSpecialName%2A&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_SpecialName" name="SpecialName" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute is set in &lt;xref:System.Reflection.FieldAttributes&gt;; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref uid="langword_csharp_SpecialName" name="SpecialName" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 특성에 설정 되어 &lt;xref:System.Reflection.FieldAttributes&gt;, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.FieldAttributes&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsStatic*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.IsStatic*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.IsStatic*&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.IsStatic%2A&gt; property gets a value indicating whether the field is static.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.IsStatic%2A&gt;속성 필드가 정적 인지를 나타내는 값을 가져옵니다.&lt;/xref:System.Reflection.FieldInfo.IsStatic%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this field is static; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 필드는 정적; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.MemberType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.MemberType*&gt;속성.&lt;/xref:System.Reflection.FieldInfo.MemberType*&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating that this member is a field.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.MemberType%2A&gt;속성 get는 &lt;xref:System.Reflection.MemberTypes&gt;이 멤버는 필드를 나타내는 값입니다.&lt;/xref:System.Reflection.MemberTypes&gt; &lt;/xref:System.Reflection.FieldInfo.MemberType%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating that this member is a field.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 멤버는 필드를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.Name*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.Name*&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;속성의 현재 멤버의 이름을 가져옵니다.&lt;/xref:System.Reflection.MemberInfo.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of this member.</source>
          <target state="translated">A &lt;xref:System.String&gt;이 멤버의 이름을 포함 합니다.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt;속성.&lt;/xref:System.Reflection.MemberInfo.ReflectedType*&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 속성 액세스 관리 되는 클래스를 비관리 코드에서 되며 관리 되는 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this instance of &lt;xref:System.Reflection.MemberInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;속성 &lt;xref:System.Reflection.MemberInfo&gt;.&lt;/xref:System.Reflection.MemberInfo&gt; 의이 인스턴스를 가져오는 데 사용 된 클래스 개체를 가져옵니다.&lt;/xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object through which this object was obtained.</source>
          <target state="translated">&lt;xref:System.Type&gt;개체를 통해이 개체를 가져온.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.SetValue*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.SetValue*&gt;메서드.&lt;/xref:System.Reflection.FieldInfo.SetValue*&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.SetValue%2A&gt; method sets the value of the field supported by the given object.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.SetValue%2A&gt;메서드는 지정 된 개체에서 지 원하는 필드의 값을 설정 합니다.&lt;/xref:System.Reflection.FieldInfo.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The object whose field value will be set.</source>
          <target state="translated">해당 필드 값이 설정 될 개체입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The value to assign to the field.</source>
          <target state="translated">필드에 할당할 값입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.SetValue*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.PropertyInfo.SetValue*&gt;메서드.&lt;/xref:System.Reflection.PropertyInfo.SetValue*&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.PropertyInfo.SetValue%2A&gt; method sets the value of the field supported by the given object.</source>
          <target state="translated">&lt;xref:System.Reflection.PropertyInfo.SetValue%2A&gt;메서드는 지정 된 개체에서 지 원하는 필드의 값을 설정 합니다.&lt;/xref:System.Reflection.PropertyInfo.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The object whose field value will be set.</source>
          <target state="translated">해당 필드 값이 설정 될 개체입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The value to assign to the field.</source>
          <target state="translated">필드에 할당할 값입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A field of <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the type of binding that is desired (for example, <bpt id="p2">&lt;xref uid="langword_csharp_Binder.CreateInstance" name="Binder.CreateInstance" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_Binder.ExactBinding" name="Binder.ExactBinding" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">필드 <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 필요한 바인딩 유형을 지정 하는 (예를 들어 <bpt id="p2">&lt;xref uid="langword_csharp_Binder.CreateInstance" name="Binder.CreateInstance" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_Binder.ExactBinding" name="Binder.ExactBinding" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection.</source>
          <target state="translated">바인딩, 인수 형식의 강제 변환 및 멤버 리플렉션을 통해 호출 하는 속성 집합이 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The software preferences of a particular culture.</source>
          <target state="translated">특정 문화권의 소프트웨어 기본 설정입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.SetValueDirect*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Reflection.FieldInfo.SetValueDirect*&gt;메서드.&lt;/xref:System.Reflection.FieldInfo.SetValueDirect*&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.FieldInfo.SetValueDirect%2A&gt; method sets the value of the field supported by the given object.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldInfo.SetValueDirect%2A&gt;메서드는 지정 된 개체에서 지 원하는 필드의 값을 설정 합니다.&lt;/xref:System.Reflection.FieldInfo.SetValueDirect%2A&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The object whose field value will be set.</source>
          <target state="translated">해당 필드 값이 설정 될 개체입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The value to assign to the field.</source>
          <target state="translated">필드에 할당할 값입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.</source>
          <target state="translated">에 대 한 버전 독립 액세스 권한이 있는 COM 개체를 제공는 &lt;xref:System.Object.ToString*&gt;메서드.&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A string that represents the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">현재 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 를 나타내는 문자열</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>