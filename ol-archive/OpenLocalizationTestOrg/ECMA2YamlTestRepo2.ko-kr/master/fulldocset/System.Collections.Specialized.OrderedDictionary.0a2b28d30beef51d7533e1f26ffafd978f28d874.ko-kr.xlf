<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58b79cff0f6e105ed67fef6f5f8a137c3c550017</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Specialized.OrderedDictionary.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4f12d2e64915785810972cc6cc780863c580e80</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22c9e61a931827e30fa49e9448bf5f456fd3a2eb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of key/value pairs that are accessible by the key or index.</source>
          <target state="translated">키나 인덱스에서 액세스할 수 있는 키/값 쌍의 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each element is a key/value pair stored in a &lt;xref:System.Collections.DictionaryEntry&gt; object.</source>
          <target state="translated">각 요소에 저장 된 키/값 쌍은는 &lt;xref:System.Collections.DictionaryEntry&gt;개체입니다.&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">키 일 수 없습니다 <ph id="ph1">`null`</ph>, 하지만 값이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements of an OrderedDictionary are not sorted by the key, unlike the elements of a &lt;xref:System.Collections.Generic.SortedDictionary%602&gt; class.</source>
          <target state="translated">OrderedDictionary 요소 &lt;xref:System.Collections.Generic.SortedDictionary%602&gt;클래스&lt;/xref:System.Collections.Generic.SortedDictionary%602&gt; 의 요소와는 달리는 키에 따라 정렬 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access elements either by the key or by the index.</source>
          <target state="translated">요소 키 또는 인덱스에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns objects that are of the type of each element in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`For Each`</ph> Visual basic에서) 컬렉션의 각 요소 형식의 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since each element of the OrderedDictionary collection is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">OrderedDictionary 컬렉션의 각 요소는 키/값 쌍에 요소 유형 키의 형식 또는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.</source>
          <target state="translated">대신, 요소 형식이 &lt;xref:System.Collections.DictionaryEntry&gt;.&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code shows C#, Visual Basic and C++ syntax.</source>
          <target state="translated">다음 코드는 C#, Visual Basic 및 c + + 구문을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.OrderedDictionary1#06<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.spe_5_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.OrderedDictionary1#06<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.spe_5_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.OrderedDictionary1#06<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.spe_5_1.vb)</ept><ept id="p5">]</ept>       The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.OrderedDictionary1#06<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.spe_5_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.OrderedDictionary1#06<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.spe_5_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.OrderedDictionary1#06<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.spe_5_1.vb)</ept> <ept id="p5">]</ept> 는 <ph id="ph1">`foreach`</ph> 문에 열거자를 컬렉션에 쓰는 것부터 읽기 가능 주변 래퍼입니다.    </target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.</source>
          <target state="translated">모든 키에는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션은 고유 해야 합니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;안내 하십시오.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; 키의 구현</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified comparer.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정된 된 비교자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.</source>
          <target state="translated">모든 키에는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션은 고유 해야 합니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;안내 하십시오.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; 키의 구현</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The custom comparer enables such scenarios as doing lookups with case-insensitive strings.</source>
          <target state="translated">사용자 지정 비교자 조회를 대/소문자 구분 문자열 이러한 시나리오를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;를 사용 하는 두 개의 키가 같은지 여부를 확인 합니다.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기본 비교자를 사용 하려면 각 키의 구현인 <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정된 된 초기 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.</source>
          <target state="translated">모든 키에는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션은 고유 해야 합니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;안내 하십시오.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; 키의 구현</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection can contain.</source>
          <target state="translated">초기 요소 수는는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션에 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity and comparer.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스는 지정 된 초기 용량 및 비교자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.</source>
          <target state="translated">모든 키에는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션은 고유 해야 합니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;안내 하십시오.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; 키의 구현</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The custom comparer enables such scenarios as doing lookups with case-insensitive strings.</source>
          <target state="translated">사용자 지정 비교자 조회를 대/소문자 구분 문자열 이러한 시나리오를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection can contain.</source>
          <target state="translated">초기 요소 수는는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션에 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;를 사용 하는 두 개의 키가 같은지 여부를 확인 합니다.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기본 비교자를 사용 하려면 각 키의 구현인 <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is serializable using the specified <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and &lt;xref:System.Runtime.Serialization.StreamingContext&gt; objects.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스를 사용 하 여 지정 된 직렬화 가능 <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 및 &lt;xref:System.Runtime.Serialization.StreamingContext&gt;개체입니다.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">비교자 두 키가 같은지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every key in a &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection must be unique.</source>
          <target state="translated">모든 키에는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션은 고유 해야 합니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">기본 비교자는 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;안내 하십시오.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; 키의 구현</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 serialize 하는 데 필요한 정보를 포함 하는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;소스와 연결 된 직렬화 된 스트림의 대상이 들어 있는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Adds an entry with the specified key and value into the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection with the lowest available index.</source>
          <target state="translated">지정 된 키와 값에 항목을 추가 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용할 수 있는 가장 낮은 인덱스를 사용 하 여 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">키 일 수 없습니다 <ph id="ph1">`null`</ph>, 하지만 값이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection; however, if the specified key already exists in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;, setting the &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt; property overwrites the old value.</source>
          <target state="translated">사용할 수도 있습니다는 &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt;에 속성 키의 값을 설정 하 여 새 요소를 추가할 수 없습니다.는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션 소비량이 적어지지만에 지정된 된 키가 이미 있는 경우는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;설정는 &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt;속성 이전 값을 덮어씁니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt; &lt;/xref:System.Collections.Specialized.OrderedDictionary&gt; &lt;/xref:System.Collections.Specialized.OrderedDictionary&gt; &lt;/xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the Add method does not modify existing elements.</source>
          <target state="translated">반면, Add 메서드는 기존 요소를 수정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The key of the entry to add.</source>
          <target state="translated">추가할 항목의 키입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The value of the entry to add.</source>
          <target state="translated">추가할 항목의 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 값 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns a read-only copy of the current <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">현재 읽기 전용 복사본을 반환 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AsReadOnly method creates a read-only wrapper around the current &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.</source>
          <target state="translated">AsReadOnly 메서드는 현재 읽기 전용 래퍼를 만듭니다 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes made to the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection are reflected in the read-only copy.</source>
          <target state="translated">변경 내용을 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션은 읽기 전용 복사본에 반영 됩니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A read-only copy of the current <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">현재 읽기 전용 복사본 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Removes all elements from the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">모든 요소를 제거는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling the Clear method, the &lt;xref:System.Collections.Specialized.OrderedDictionary.Count%2A&gt; property is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated">Clear 메서드를 호출한 후의 &lt;xref:System.Collections.Specialized.OrderedDictionary.Count%2A&gt;속성이&amp;0;으로 설정 되 고 컬렉션의 요소에 다른 개체에 대 한 참조도 해제 됩니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity is not changed as a result of calling this method.</source>
          <target state="translated">이 메서드를 호출 하 여 용량 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection contains a specific key.</source>
          <target state="translated">결정 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션에 특정 키를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt; property can return a null value if the key does not exist or if the key is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt;속성 키가 없는 경우 또는 키가 null 값을 반환할 수 <ph id="ph1">`null`</ph>.&lt;/xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Contains method to determine if a specific key exists in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.</source>
          <target state="translated">Contains 메서드를 사용 하 여 특정 키에 존재 하는지 확인 하 고 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether <ph id="ph2">`item`</ph> exists.</source>
          <target state="translated">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;에 대 한 메서드 <ph id="ph1">`item`</ph> 확인 하려면 여부 <ph id="ph2">`item`</ph> 존재 합니다.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework의 이전 버전에서는이 확인 작업을 수행를 사용 하 여는 &lt;xref:System.Object.Equals%2A&gt;및 &lt;xref:System.IComparable.CompareTo%2A&gt;의 메서드는 <ph id="ph1">`item`</ph> 컬렉션의 개체에 대 한 매개 변수.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">찾을 수 있는 키의 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> collection contains an element with the specified key; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컬렉션에 지정 된 요소가 고, 그렇지 않으면 키 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> elements to a one-dimensional &lt;xref:System.Array&gt; object at the specified index.</source>
          <target state="translated">복사본의 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요소를 사용 하는&amp;1; 차원 &lt;xref:System.Array&gt;지정된 된 인덱스에는 개체입니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CopyTo method is not guaranteed to preserve the order of the elements in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.</source>
          <target state="translated">CopyTo 메서드에 있는 요소의 순서를 유지 되도록 보장 되지 않으므로 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; object that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">1 차원 &lt;xref:System.Array&gt;의 대상인 개체는 &lt;xref:System.Collections.DictionaryEntry&gt;에서 복사한 개체 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션.&lt;/xref:System.Collections.DictionaryEntry&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0부터 시작 하는 인덱스가 있어야 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">인덱스는&amp;0;부터 시작 <ph id="ph1">`array`</ph> 복사가 시작 되는 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets the number of key/values pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">가져옵니다 수가 키/값 쌍에 포함 된는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The number of key/value pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">에 포함 된 키/값 쌍의 수는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that iterates through the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.IDictionaryEnumerator&gt;개체를 반복 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic, C#]       <ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`for each`</ph> Visual basic에서)은 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">따라서 사용 하 여 <ph id="ph1">`foreach`</ph> 열거자를 직접 조작 하는 대신 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">컬렉션에 여러 스레드에서 읽기 및 쓰기에 대 한 액세스를 허용 하려면 사용자 지정 동기화를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">이 메서드는 o (1) 작업.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; object for the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionaryEnumerator&gt;개체에 대 한는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and returns the data needed to serialize the <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">구현 하는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스를 serialize 하는 데 필요한 데이터를 반환 된 <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 serialize 하는 데 필요한 정보를 포함 하는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;소스와 연결 된 직렬화 된 스트림의 대상이 들어 있는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Inserts a new entry into the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection with the specified key and value at the specified index.</source>
          <target state="translated">새 항목을 삽입 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 키와 지정된 된 인덱스에 값을 사용 하 여 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`index`</ph> parameter is equal to the number of entries in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection, the <ph id="ph2">`key`</ph> and <ph id="ph3">`value`</ph> parameters are appended to the end of the collection.</source>
          <target state="translated">경우는 <ph id="ph1">`index`</ph> 매개 변수는에 있는 항목의 수와 같지는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션은 <ph id="ph2">`key`</ph> 및 <ph id="ph3">`value`</ph> 매개 변수 컬렉션의 끝에 추가 됩니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entries that follow the insertion point move down to accommodate the new entry and the indexes of the moved entries are also updated.</source>
          <target state="translated">삽입 지점 다음에 나오는 항목 이동 된 엔트리의 인덱스 업데이트와 새로운 항목이 반영를 아래로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The zero-based index at which the element should be inserted.</source>
          <target state="translated">요소를 삽입할&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The key of the entry to add.</source>
          <target state="translated">추가할 항목의 키입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the entry to add.</source>
          <target state="translated">추가할 항목의 값입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">값일 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>범위를 벗어났습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This collection is read-only.</source>
          <target state="translated">이 컬렉션이 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection is read-only.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">읽기 전용 컬렉션에서는 컬렉션을 만든 후에 추가, 제거 또는 요소를 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modification of the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">읽기 전용 컬렉션은 지정 된 컬렉션의 수정을 방지 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 될 경우 읽기 전용 컬렉션 해당 변경 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> collection is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컬렉션은 읽기 전용이 아니면, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets or sets the value at the specified index.</source>
          <target state="translated">지정된 된 인덱스에 대 한 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property allows you to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">이 속성을 사용 하면 다음 구문을 사용 하 여 컬렉션의 특정 요소에 액세스할 수 있습니다: <ph id="ph1">`myCollection[index]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the Item property.</source>
          <target state="translated">C# 언어는 키워드를 사용 하 여 항목 속성을 구현 하는 대신 인덱서를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Basic implements &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt; as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 구현 &lt;xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt;동일한 인덱싱 기능을 제공 하는 기본 속성으로.&lt;/xref:System.Collections.Specialized.OrderedDictionary.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The zero-based index of the value to get or set.</source>
          <target state="translated">가져오거나 설정할 값의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The value of the item at the specified index.</source>
          <target state="translated">지정된 된 인덱스에 있는 항목의 값입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The property is being set and the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection is read-only.</source>
          <target state="translated">속성을 설정 하 고 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.Specialized.OrderedDictionary.Count*&gt;</ph>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> 보다 크거나 같으면 <ph id="ph2">&lt;xref:System.Collections.Specialized.OrderedDictionary.Count*&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets the value with the specified key.</source>
          <target state="translated">지정된 된 키와 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property allows you to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">이 속성을 사용 하면 다음 구문을 사용 하 여 컬렉션의 특정 요소에 액세스할 수 있습니다: <ph id="ph1">`myCollection[key]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the Item property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection (for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">에 존재 하지 않는 키의 값을 설정 하 여 새 요소를 추가 하는 항목 속성을 사용할 수도 있습니다는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션 (예를 들어 <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>).&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;, setting the Item property overwrites the old value.</source>
          <target state="translated">그러나 지정된 된 키에 이미 있는 경우는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;, 이전 값을 덮어씁니다 항목 속성을 설정 합니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the &lt;xref:System.Collections.Specialized.OrderedDictionary.Add%2A&gt; method does not modify existing elements.</source>
          <target state="translated">반면,는 &lt;xref:System.Collections.Specialized.OrderedDictionary.Add%2A&gt;메서드는 기존 요소를 수정 하지 않습니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">키 일 수 없습니다 <ph id="ph1">`null`</ph>, 하지만 값이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the &lt;xref:System.Collections.Hashtable.Contains%2A&gt; method to determine if the key exists in the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;.</source>
          <target state="translated">구분 하기 위해 <ph id="ph1">`null`</ph> 지정된 된 키를 찾을 수 없으므로 반환 되는 및 <ph id="ph2">`null`</ph> 지정된 된 키의 값은 반환 되는 <ph id="ph3">`null`</ph>, &lt;xref:System.Collections.Hashtable.Contains%2A&gt; &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt; 키가 있는 경우를 결정 하는 메서드&lt;/xref:System.Collections.Hashtable.Contains%2A&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The key of the value to get or set.</source>
          <target state="translated">가져오거나 설정할 값의 키입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The value associated with the specified key.</source>
          <target state="translated">지정된 된 키와 연결 된 값입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If the specified key is not found, attempting to get it returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and attempting to set it creates a new element using the specified key.</source>
          <target state="translated">지정된 된 키가 없으면 get 반환 하려고 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>가 지정된 된 키를 사용 하 여 새 요소를 만들어 설정 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The property is being set and the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection is read-only.</source>
          <target state="translated">속성을 설정 하 고 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Collections.ICollection&gt;키를 포함 하는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; object is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the keys in the original &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.ICollection&gt;개체가 정적 복사본이 아닙니다; 대신는 &lt;xref:System.Collections.ICollection&gt;원래에서 키를 다시 참조할 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, changes to the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;계속 &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 반영&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt; 변경</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;키를 포함 하는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and is called back by the deserialization event when deserialization is complete.</source>
          <target state="translated">구현 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스와 deserialization이 완료 되 면 deserialization 이벤트에 의해 콜백 됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden.</source>
          <target state="translated">이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The source of the deserialization event.</source>
          <target state="translated">Deserialization 이벤트의 소스입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the current <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> collection is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체와 현재 연결 된 <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컬렉션이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Removes the entry with the specified key from the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">지정된 된 키를 가지는 엔트리를 제거는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.</source>
          <target state="translated">제거 된 항목에 나오는 항목 위로 이동 하 여 빈된 지점을 차지 하 고 이동 하는 항목의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection does not contain an entry with the specified key, the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; remains unchanged and no exception is thrown.</source>
          <target state="translated">경우는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션 포함 항목이 지정된 된 키와는 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;바뀌지 않으며 예외가 throw 되지 않습니다.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt; &lt;/xref:System.Collections.Specialized.OrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The key of the entry to remove.</source>
          <target state="translated">제거할 엔트리의 키입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Removes the entry at the specified index from the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">지정된 된 인덱스에서 엔트리를 제거는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.</source>
          <target state="translated">제거 된 항목에 나오는 항목 위로 이동 하 여 빈된 지점을 차지 하 고 이동 하는 항목의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The zero-based index of the entry to remove.</source>
          <target state="translated">제거할 엔트리의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is synchronized (thread-safe).</source>
          <target state="translated">에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체는 동기화 (스레드로부터 안전한 지).</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This method always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 메서드는 항상 반환 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고정 되어 고, 그렇지 않으면 크기가 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that iterates through the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.IDictionaryEnumerator&gt;개체를 반복 하는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; object for the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionaryEnumerator&gt;개체에 대 한는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and is called back by the deserialization event when deserialization is complete.</source>
          <target state="translated">구현 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스와 deserialization이 완료 되 면 deserialization 이벤트에 의해 콜백 됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The source of the deserialization event.</source>
          <target state="translated">Deserialization 이벤트의 소스입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Collections.ICollection&gt;값을 포함 하는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; object is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the values in the original &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; collection.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.ICollection&gt;개체가 정적 복사본이 아닙니다; 대신는 &lt;xref:System.Collections.ICollection&gt;원래에서 값을 다시 참조 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;컬렉션.&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, changes to the &lt;xref:System.Collections.Specialized.OrderedDictionary&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Collections.Specialized.OrderedDictionary&gt;계속 &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 반영&lt;/xref:System.Collections.Specialized.OrderedDictionary&gt; 변경</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;값을 포함 하는 개체는 <bpt id="p1">&lt;xref href="System.Collections.Specialized.OrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>