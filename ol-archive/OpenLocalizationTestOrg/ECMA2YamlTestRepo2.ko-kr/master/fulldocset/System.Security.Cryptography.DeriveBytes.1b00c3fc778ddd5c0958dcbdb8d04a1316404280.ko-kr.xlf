<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4bcc958342c8daf5874a257990e60f8a27d68026</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.DeriveBytes.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dcfede6184111e7e0d7de890f9eee9689231b9a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccfec5e723ecb6145ae03f99d5584a45d1d7faec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class from which all classes that derive byte sequences of a specified length inherit.</source>
          <target state="translated">지정 된 길이의 바이트 시퀀스를 파생 시키는 모든 클래스가 상속 되는 추상 기본 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.DeriveBytes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.DeriveBytes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.DeriveBytes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면의 현재 인스턴스에서 사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.DeriveBytes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.DeriveBytes&gt;.</source>
          <target state="translated">호출 <ph id="ph1">`Dispose`</ph> &lt;xref:System.Security.Cryptography.DeriveBytes&gt;.&lt;/xref:System.Security.Cryptography.DeriveBytes&gt; 를 사용 하 여 작업을 마쳤으면</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.DeriveBytes&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 메서드는 &lt;xref:System.Security.Cryptography.DeriveBytes&gt;불안정 한 상태가.&lt;/xref:System.Security.Cryptography.DeriveBytes&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.DeriveBytes&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.DeriveBytes&gt; was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">`Dispose`</ph>에 대 한 모든 참조를 해제 해야는 &lt;xref:System.Security.Cryptography.DeriveBytes&gt;가비지 수집기는 메모리를 회수할 수 있도록 하는 &lt;xref:System.Security.Cryptography.DeriveBytes&gt;차지한.&lt;/xref:System.Security.Cryptography.DeriveBytes&gt; &lt;/xref:System.Security.Cryptography.DeriveBytes&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.DeriveBytes&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 항상 호출 <ph id="ph2">`Dispose`</ph> &lt;xref:System.Security.Cryptography.DeriveBytes&gt;.&lt;/xref:System.Security.Cryptography.DeriveBytes&gt; 에 대 한 마지막 참조를 해제 하기 전에</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.DeriveBytes&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 &lt;xref:System.Security.Cryptography.DeriveBytes&gt;개체의 <ph id="ph1">`Finalize`</ph> 메서드.&lt;/xref:System.Security.Cryptography.DeriveBytes&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.DeriveBytes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and optionally releases the managed resources.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.DeriveBytes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 및 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">`Finalize`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.DeriveBytes&gt; references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수는 <ph id="ph2">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.Security.Cryptography.DeriveBytes&gt;참조.&lt;/xref:System.Security.Cryptography.DeriveBytes&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose()`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns pseudo-random key bytes.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 의사 (pseudo) 난수 키 바이트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The number of pseudo-random key bytes to generate.</source>
          <target state="translated">생성할 의사 (pseudo) 난수 키 바이트의 수입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A byte array filled with pseudo-random key bytes.</source>
          <target state="translated">바이트 배열 의사 (pseudo) 난수 키 바이트로 채워진입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, resets the state of the operation.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 작업의 상태를 다시 설정 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>