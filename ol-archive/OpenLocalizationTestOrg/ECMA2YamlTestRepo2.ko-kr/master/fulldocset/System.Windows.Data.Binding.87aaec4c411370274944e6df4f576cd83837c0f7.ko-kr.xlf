<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f93ce7e9b2a0f9b0985803f63e6c190a6b0214f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Data.Binding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd2ae635e8ef73c25813b62b214eb6890cad5d31</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17459f3f91ae940db9d8aabd12cd8d467a3666fd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> elements), and any data source (for example, a database, an <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> file, or any object that contains data).</source>
          <target state="translated">바인딩 대상 개체의 속성을 연결 하는 바인딩의 정의에 고급 액세스 제공 (일반적으로 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> 요소), 임의 데이터 원본 (예를 들어 데이터베이스는 <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> 파일 또는 데이터를 포함 하는 모든 개체).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> data binding provides a simple and consistent way for applications to present and interact with data.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>데이터 바인딩 응용 프로그램 데이터와 상호 작용 하는 간단 하 고 일관적인 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data binding enables you to synchronize the values of the properties of two different objects.</source>
          <target state="translated">데이터 바인딩을 사용 하면 두 개의 다른 개체의 속성 값을 동기화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To establish a binding, use the Binding class or one of the other classes that inherit &lt;xref:System.Windows.Data.BindingBase&gt;.</source>
          <target state="translated">바인딩을 설정 하려면 바인딩 클래스 또는 &lt;xref:System.Windows.Data.BindingBase&gt;.&lt;/xref:System.Windows.Data.BindingBase&gt; 상속 하는 다른 클래스 중 하나를 사용합니다</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</source>
          <target state="translated">바인딩 개체에 관계 없이 및 데이터 원본의 특성, 각 바인딩에 다음 그림에서 설명 하는 모델을 따릅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Basic data binding diagram<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>Basic data binding diagram<ept id="p2">")</ept>       The figure demonstrates the following fundamental <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding concepts.</source>
          <target state="translated"><bpt id="p1">![</bpt>기본 데이터 바인딩 다이어그램<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>기본 데이터 바인딩 다이어그램<ept id="p2">")</ept> 그림에서는 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> 데이터 바인딩 개념입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Each binding typically has these four components: a binding target object, a target property, a binding source, and a &lt;xref:System.Windows.Data.Binding.Path%2A&gt; to the value in the binding source to use.</source>
          <target state="translated">-각 바인딩에 일반적으로 이러한 네 가지 구성 요소는: 대상 속성 바인딩 대상 개체, 바인딩 소스 및 &lt;xref:System.Windows.Data.Binding.Path%2A&gt;사용할 바인딩 소스에서 값으로.&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you want to bind the content of a &lt;xref:System.Windows.Controls.TextBox&gt; to the Name property of an Employee object, your target object is the &lt;xref:System.Windows.Controls.TextBox&gt;, the target property is the &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt; property, the value to use is Name, and the source object is the Employee object.</source>
          <target state="translated">예를 들어의 콘텐츠를 바인딩할 경우는 &lt;xref:System.Windows.Controls.TextBox&gt;대상 개체는 Employee 개체의 Name 속성에는 &lt;xref:System.Windows.Controls.TextBox&gt;, target 속성이 &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;속성을 사용 하는 값은 이름 및 원본 개체는 Employee 개체.&lt;/xref:System.Windows.Controls.TextBox.Text%2A&gt; &lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The target property must be a dependency property.</source>
          <target state="translated">-Target 속성에는 종속성 속성 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This also means that you cannot bind a field.</source>
          <target state="translated">즉, 필드를 바인딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most properties of &lt;xref:System.Windows.UIElement&gt; objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</source>
          <target state="translated">속성을 대부분 &lt;xref:System.Windows.UIElement&gt;개체는 종속성 속성 및 읽기 전용 것을 제외한 대부분의 종속성 속성을 기본적으로 데이터 바인딩을 지원 합니다.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>(Only &lt;xref:System.Windows.DependencyObject&gt; types can define dependency properties and all &lt;xref:System.Windows.UIElement&gt; objects derive from &lt;xref:System.Windows.DependencyObject&gt;.)      -   Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object.</source>
          <target state="translated">( &lt;xref:System.Windows.DependencyObject&gt;형식만 종속성 속성을 정의할 수와 모든 &lt;xref:System.Windows.UIElement&gt;개체 &lt;xref:System.Windows.DependencyObject&gt;에서 파생)      -그림에서을 지정 하지 않지만 용도로 사용자 지정 바인딩 소스 개체는 제한 되지 않는지 <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> 개체입니다.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding supports data in the form of <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> objects and <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>데이터 바인딩 형식으로 데이터를 지원 <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> 개체 및 <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide some examples, your binding source may be a &lt;xref:System.Windows.UIElement&gt;, any list object, a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object that is associated with <ph id="ph2">[!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)]</ph> data or Web Services, or an XmlNode that contains your <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> data.</source>
          <target state="translated">바인딩 소스 몇 가지 예를 제공 하는 것을 &lt;xref:System.Windows.UIElement&gt;, 목록 개체는 <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> 연결 된 개체에 <ph id="ph2">[!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)]</ph> 데이터 또는 웹 서비스 또는 들어 있는 XmlNode 프로그램 <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> 데이터.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Data.Binding.Mode%2A&gt; property to specify the direction of the data flow.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Windows.Data.Binding.Mode%2A&gt;속성을 통해 데이터 흐름의 방향을 지정 합니다.&lt;/xref:System.Windows.Data.Binding.Mode%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.</source>
          <target state="translated">단방향 또는 양방향 바인딩이 소스 변경 내용을 검색 하려면 원본 &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt; 같은 적절 한 속성 변경 알림 메커니즘을 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 속성 변경 알림을 구현<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; property specifies the timing of source updates.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;속성 소스 업데이트의 타이밍을 지정 합니다.&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see "Basic Data Binding Concepts" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은의 "기본 데이터 바인딩 개념" 참조 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_PriorityBinding"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="{Binding  declaration}"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_PriorityBinding"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>declaration<ept id="p3">*</ept>    Zero or more attribute-assignment clauses separated by commas (,).</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_PriorityBinding"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <ph id="ph1">```   &lt;object property="{Binding  declaration}"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_PriorityBinding"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>선언<ept id="p3">*</ept> 쉼표 (,)로 구분 된&amp;0; 개 이상의 특성 할당 클래스입니다.      </target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Binding Declarations Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>바인딩 태그 확장<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 또는 <bpt id="p2">[</bpt>바인딩 선언 개요<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an initial path.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 초기 경로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The initial &lt;xref:System.Windows.Data.Binding.Path*&gt; for the binding.</source>
          <target state="translated">초기 &lt;xref:System.Windows.Data.Binding.Path*&gt;바인딩에 대 한.&lt;/xref:System.Windows.Data.Binding.Path*&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Adds a handler for the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; attached event.</source>
          <target state="translated">에 대 한 처리기는 &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;연결 된 이벤트입니다.&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 지원에 연결 된 이벤트 사용 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하는 이벤트를 수신 대기 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The handler to add.</source>
          <target state="translated">추가할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Adds a handler for the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; attached event.</source>
          <target state="translated">에 대 한 처리기는 &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;연결 된 이벤트입니다.&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 지원에 연결 된 이벤트 사용 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하는 이벤트를 수신 대기 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The handler to add.</source>
          <target state="translated">추가할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets opaque data passed to the asynchronous data dispatcher.</source>
          <target state="translated">비동기 데이터 디스패처에 전달 되는 불투명 한 데이터를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Data passed to the asynchronous data dispatcher.</source>
          <target state="translated">데이터는 비동기 데이터 발송자에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to evaluate the &lt;xref:System.Windows.Data.Binding.Path*&gt; relative to the data item or the <bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">평가할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 &lt;xref:System.Windows.Data.Binding.Path*&gt;데이터 항목을 기준으로 또는 <bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Windows.Data.Binding.Path*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The normal behavior (when this property is <ph id="ph1">`false`</ph>) includes special treatment for &lt;xref:System.Windows.Data.DataSourceProvider&gt; objects.</source>
          <target state="translated">일반적인 동작 (이 속성이 <ph id="ph1">`false`</ph>)에 대 한 특별 한 처리 포함 &lt;xref:System.Windows.Data.DataSourceProvider&gt;개체입니다.&lt;/xref:System.Windows.Data.DataSourceProvider&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the binding engine evaluates the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; relative to the object obtained from the &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; property.</source>
          <target state="translated">바인딩 엔진 평가 하는 경우에 &lt;xref:System.Windows.Data.Binding.Path%2A&gt;에서 가져온 개체를 기준으로 &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;속성.&lt;/xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; &lt;/xref:System.Windows.Data.Binding.Path%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, the binding listens for the &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt; event and reacts accordingly.</source>
          <target state="translated">에 대 한 바인딩을 수신 대기 하는 또한는 &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;이벤트 및 그에 따라 반응 합니다.&lt;/xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`true`</ph> overrides this behavior and gives the binding access to properties of the &lt;xref:System.Windows.Data.DataSourceProvider&gt; object itself.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`true`</ph> 의 속성에 바인딩 파일에 대 한 액세스를 제공 하 고이 동작 재정의 &lt;xref:System.Windows.Data.DataSourceProvider&gt;개체 자체입니다.&lt;/xref:System.Windows.Data.DataSourceProvider&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to evaluate the path relative to the data item itself; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>데이터 항목 자체;에 상대적인 경로 계산 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets or sets the converter to use.</source>
          <target state="translated">사용할 변환기를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</source>
          <target state="translated">바인딩 소스 값과 대상 값 사이의 형식 변환 수행 하려고 하는 기본 변환기를 암시적으로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a conversion cannot be made, the default converter returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 변환기를 반환 하는 경우 변환을 수행할 수 없는 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to associate a custom value converter with a binding, you should create a class that implements the &lt;xref:System.Windows.Data.IValueConverter&gt; interface and supply implementations for the &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; methods.</source>
          <target state="translated">구현 하는 클래스 사용자 지정 값 변환기는 바인딩으로 연결 하려는 경우 만든는 &lt;xref:System.Windows.Data.IValueConverter&gt;인터페이스에 대 한 구현을 제공 하 고는 &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;및 &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;메서드.&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</source>
          <target state="translated">값 변환기 형식 간에 데이터 변경, 문자 집합을 같은 문화권 정보 사이 변환 하거나 프레젠테이션의 다른 기능을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples of typical conversion scenarios, see "Data Conversion" in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">"데이터 변환" 참조 일반적인 변환 시나리오의 예는 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Converter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Converter="myConverter"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Converter"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>myConverter<ept id="p3">*</ept>    A resource reference to a class that implements the &lt;xref:System.Windows.Data.IValueConverter&gt; interface, which includes implementations of the &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; methods.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Converter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <ph id="ph1">```   &lt;object Converter="myConverter"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Converter"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>myConverter<ept id="p3">*</ept> 구현 하는 클래스에 대 한 리소스 참조는 &lt;xref:System.Windows.Data.IValueConverter&gt;구현이 포함 된 인터페이스는 &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;및 &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;메서드.&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter&gt;      </target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>To refer to a value converter, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">값 변환기를 참조 하려면 사용 된 <bpt id="p1">[</bpt>StaticResource 태그 확장<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.Data.IValueConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">형식의 값 <bpt id="p1">&lt;xref href="System.Windows.Data.IValueConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the culture in which to evaluate the converter.</source>
          <target state="translated">변환기를 평가할 문화권을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set this property, the binding engine uses the <ph id="ph1">`Language`</ph> property of the binding target object.</source>
          <target state="translated">이 속성을 설정 하지 않으면 바인딩 엔진에서 사용 된 <ph id="ph1">`Language`</ph> 바인딩 대상 개체의 속성입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> "EN-US"를 기본값으로 사용 하거나 속성을 명시적으로 설정 된 경우 페이지의 루트 요소 (또는 요소)에서 값이 상속 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about data conversion, see the Data Conversion section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">데이터 변환에 대 한 내용은의 데이터 변환 섹션을 참조 하십시오.는 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the parameter to pass to the &lt;xref:System.Windows.Data.Binding.Converter*&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.Converter*&gt;.&lt;/xref:System.Windows.Data.Binding.Converter*&gt; 에 전달할 매개 변수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the ConverterParameter property to specify how an object is converted.</source>
          <target state="translated">개체 변환 하는 방법을 지정 하려면 ConverterParameter 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property passes additional information to a converter that you use on a binding.</source>
          <target state="translated">이 속성은 바인딩에서 사용 하는 변환기를 추가 정보를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you specify a ConverterParameter, the value is passed to the &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; methods as the <ph id="ph1">`parameter`</ph> parameter.</source>
          <target state="translated">에 전달 된 값에는 ConverterParameter을 지정 하면는 &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;및 &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;와 메서드는 <ph id="ph1">`parameter`</ph> 매개 변수.&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Produce a Value Based on a List of Bound Items<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 생성 된 항목의 목록 바인딩된에 따라 값<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>That example shows an implementation of an &lt;xref:System.Windows.Data.IMultiValueConverter&gt; but the usage still applies.</source>
          <target state="translated">그 예에서의 구현을 보여 줍니다.는 &lt;xref:System.Windows.Data.IMultiValueConverter&gt;않지만 여전히 사용에 적용 됩니다.&lt;/xref:System.Windows.Data.IMultiValueConverter&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The parameter to pass to the &lt;xref:System.Windows.Data.Binding.Converter*&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.Converter*&gt;.&lt;/xref:System.Windows.Data.Binding.Converter*&gt; 에 전달할 매개 변수</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Used as a returned value to instruct the binding engine not to perform any action.</source>
          <target state="translated">반환 된 값으로는 작업은 수행 하지 바인딩 엔진에 지시 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>A binding source property or a converter can return DoNothing to instruct the binding engine not to perform any action.</source>
          <target state="translated">바인딩 소스 속성 또는 변환기는 바인딩 엔진 작업을 수행 하지 않도록 지시 하려면 DoNothing 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next &lt;xref:System.Windows.Data.Binding&gt; in a &lt;xref:System.Windows.Data.PriorityBinding&gt;, or not to use the <ph id="ph1">`FallBackValue`</ph> or default value.</source>
          <target state="translated">바인딩 엔진을 다음으로 이동 하지 바인딩 대상 값을 전송 하지 않도록 지시 하기 위해 &lt;xref:System.Windows.Data.Binding&gt;에 &lt;xref:System.Windows.Data.PriorityBinding&gt;, 또는를 사용 하지 않는 <ph id="ph1">`FallBackValue`</ph> 값 또는 기본값.&lt;/xref:System.Windows.Data.PriorityBinding&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the element to use as the binding source object.</source>
          <target state="translated">바인딩 소스 개체로 사용할 요소의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is useful when you want to bind to the property of another element in your application.</source>
          <target state="translated">이 속성은 응용 프로그램에서 다른 요소의 속성에 바인딩할 때 유용 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you want to use a &lt;xref:System.Windows.Controls.Slider&gt; to control the height of another control in your application, or if you want to bind the &lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt; of your control to the &lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt; property of your &lt;xref:System.Windows.Controls.ListBox&gt; control.</source>
          <target state="translated">예를 들어, 사용 하려는 경우는 &lt;xref:System.Windows.Controls.Slider&gt;응용 프로그램에서 다른 컨트롤의 높이를 조정할 바인딩할 경우 또는 &lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;사용자 컨트롤의는 &lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;속성의 프로그램 &lt;xref:System.Windows.Controls.ListBox&gt;컨트롤.&lt;/xref:System.Windows.Controls.ListBox&gt; &lt;/xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt; &lt;/xref:System.Windows.Controls.ContentControl.Content%2A&gt; &lt;/xref:System.Windows.Controls.Slider&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">기본적으로 바인딩은 상속으로 지정 된 데이터 컨텍스트는 <ph id="ph1">`DataContext`</ph> 속성에 설정 된 경우.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the ElementName property is one of the ways you can explicitly set the source of a &lt;xref:System.Windows.Data.Binding&gt; and override the inherited data context.</source>
          <target state="translated">그러나 ElementName 속성은의 원본을 명시적으로 설정할 수는 방법 중 하나는 &lt;xref:System.Windows.Data.Binding&gt;상속 된 데이터 컨텍스트를 재정의 하 고.&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 바인딩 소스를 지정<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Data.Binding.Source%2A&gt; and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt; properties of the &lt;xref:System.Windows.Data.Binding&gt; class also enable you to set the source of the binding explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;및 &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;의 속성은 &lt;xref:System.Windows.Data.Binding&gt;클래스도 설정할 수 있도록는 바인딩 소스를 명시적으로.&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt; &lt;/xref:System.Windows.Data.Binding.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, only one of the three properties, ElementName, &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;, should be set for each binding, or a conflict might occur.</source>
          <target state="translated">그러나 ElementName, 세 개의 속성 중 하나만 &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, 및 &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;집합 각각에 대 한 바인딩 해야, 또는 충돌이 발생할 수 있습니다.&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt; &lt;/xref:System.Windows.Data.Binding.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">바인딩 소스 충돌 하는 경우이 속성에서 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;xref uid="langword_csharp_Name" name="Name" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property or <bpt id="p2">[</bpt>x:Name Directive<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> of the element of interest.</source>
          <target state="translated">값은 <bpt id="p1">&lt;xref uid="langword_csharp_Name" name="Name" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성 또는 <bpt id="p2">[</bpt>X:name 지시문<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> 원하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can refer to elements in code only if they are registered to the appropriate &lt;xref:System.Windows.NameScope&gt; through <bpt id="p1">&lt;xref uid="langword_csharp_RegisterName" name="RegisterName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">적절 한에 등록 되어 있는 경우에 코드의 요소를 참조할 수 &lt;xref:System.Windows.NameScope&gt;통해 <bpt id="p1">&lt;xref uid="langword_csharp_RegisterName" name="RegisterName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WPF XAML 이름 범위<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> namespace manager object used by the binding attached to the specified object.</source>
          <target state="translated">반환 된 <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> 지정된 된 개체에 연결 된 바인딩에 사용 되는 네임 스페이스 관리자 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports attached property usage for the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt; attached property.</source>
          <target state="translated">이 메서드는 연결된 속성의 사용에 대 한 지원의 &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;연결 된 속성입니다.&lt;/xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> namespace managers are relevant only if the data in the binding came from an <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> binding source (&lt;xref:System.Windows.Data.XmlDataProvider&gt; object).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>네임 스페이스 관리자 바인딩에 데이터에서 제공 하는 경우에 적용 되는 <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> 바인딩 소스 (&lt;xref:System.Windows.Data.XmlDataProvider&gt; 개체).&lt;/xref:System.Windows.Data.XmlDataProvider&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling &lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt; on the binding, then this method will return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">네임 스페이스 관리자는 원래 데이터 소스를 만들 또는 이후에 호출 하 여 구체적으로 적용 되지 않은 경우 &lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;바인딩에 대 한 다음이 메서드는 반환 <ph id="ph1">`null`</ph>.&lt;/xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will always return <ph id="ph1">`null`</ph> if the data behind the binding is not <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 항상 반환 <ph id="ph1">`null`</ph> 바인딩에 데이터가 없으면 <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The object from which to get namespace information.</source>
          <target state="translated">네임 스페이스 정보를 얻을 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A returned object used for viewing <ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> namespaces that relate to the binding on the passed object element.</source>
          <target state="translated">보기에 사용 되는 반환 된 개체 <ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> 전달된 된 개체 요소의 바인딩과 관련 된 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This object should be cast as <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">로이 개체를 캐스팅 해야 <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수 여야 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Used as the &lt;xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*&gt; of <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> to indicate that an indexer property has changed.</source>
          <target state="translated">로 사용 된 &lt;xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*&gt;의 <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 인덱서 속성이 변경 되었음을 나타내도록.&lt;/xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should get and set values asynchronously.</source>
          <target state="translated">표시 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 가져오고 값을 비동기적으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the IsAsync property when the <ph id="ph1">`get`</ph> accessor of your binding source property might take a long time.</source>
          <target state="translated">IsAsync 속성을 사용 하는 경우는 <ph id="ph1">`get`</ph> 바인딩 소스 속성의 접근자에는 시간이 오래 걸릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>One example is an image property with a <ph id="ph1">`get`</ph> accessor that downloads from the Web.</source>
          <target state="translated">한 가지 예는 있는 이미지 속성을는 <ph id="ph1">`get`</ph> 는 웹에서 다운로드 하는 접근자입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting IsAsync to <ph id="ph1">`true`</ph> avoids blocking the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> while the download occurs.</source>
          <target state="translated">IsAsync 설정 <ph id="ph1">`true`</ph> 차단 되지 않습니다는 <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 다운로드 하는 동안 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>While waiting for the value to arrive, the binding reports the &lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;, if one is available, or the default value of the binding target property.</source>
          <target state="translated">바인딩 값을 받을 기다리는 동안 보고 된 &lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;기본값인 바인딩 대상 속성, 사용 가능한 경우.&lt;/xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, there should not be many scenarios where you need to use the IsAsync property.</source>
          <target state="translated">그러나 있으면 안 IsAsync 속성을 사용 해야 하는 많은 시나리오입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> 지침 속성 필드 집합 보다 더 느린 대량 주문 인을 정의 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are creating your class, consider handling extremely slow operations outside of the <ph id="ph1">`get`</ph> accessor and caching the result.</source>
          <target state="translated">클래스를 만들 때 고려 너무 느린 작업 외부의 처리는 <ph id="ph1">`get`</ph> 접근자 및 결과 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Choosing Between Properties and Methods<ept id="p1">](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 메서드와 속성 사이의 선택<ept id="p1">](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the direction of the data flow in the binding.</source>
          <target state="translated">바인딩에서 데이터 흐름의 방향을 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>To support &lt;xref:System.Windows.Data.BindingMode&gt; and &lt;xref:System.Windows.Data.BindingMode&gt; bindings, the underlying data must implement &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.BindingMode&gt; &lt;xref:System.Windows.Data.BindingMode&gt; &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt; 를 구현 해야 바인딩, 기본 데이터&lt;/xref:System.Windows.Data.BindingMode&gt; 및&lt;/xref:System.Windows.Data.BindingMode&gt; 지원 하기 위해</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 속성 변경 알림을 구현<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For &lt;xref:System.Windows.Data.BindingMode&gt; or &lt;xref:System.Windows.Data.BindingMode&gt; bindings, you can control the target-to-source updates by setting the &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; property.</source>
          <target state="translated">에 대 한 &lt;xref:System.Windows.Data.BindingMode&gt;또는 &lt;xref:System.Windows.Data.BindingMode&gt;바인딩을 설정 하 여 대상 소스로 업데이트를 제어할 수는 &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;속성.&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.BindingMode&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;.&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the different binding modes, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">서로 다른 바인딩 모드에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default binding mode value of the target dependency property.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 대상 종속성 속성의 기본 바인딩 모드 값을 반환 하 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>However, the default value varies for each dependency property.</source>
          <target state="translated">그러나 각 종속성 속성에 대 한 기본값이 다릅니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</source>
          <target state="translated">일반적으로 텍스트 상자 및 확인란 처럼 사용자가 편집 가능한 컨트롤 속성의 기본값은 양방향 바인딩으로 설정 되지만 대부분의 다른 속성 기본값은 단방향 바인딩으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<bpt id="p1">*</bpt>&gt; and then check the Boolean value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault<ept id="p1">*</ept>&gt; property.</source>
          <target state="translated">종속성 속성이 단방향 또는 양방향 기본적으로 바인드 되는지를 결정 하는 프로그래밍 방법을 사용 하 여 속성의 속성 메타 데이터를 가져오려는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 다음의 부울 값을 확인 하 고는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 속성.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; event when a value is transferred from the binding target to the binding source.</source>
          <target state="translated">발생시킬지 여부를 나타내는 값을 가져오거나 설정 합니다.는 &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;값은 바인딩 대상에서에서 바인딩 소스로 전송 될 때 이벤트.&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; event should be raised when the binding source value is updated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;바인딩 소스 값이 고, 그렇지 않으면 업데이트 된 경우 이벤트를 발생 하도록 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; event when a value is transferred from the binding source to the binding target.</source>
          <target state="translated">발생시킬지 여부를 나타내는 값을 가져오거나 설정 합니다.는 &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;값이 바인딩 소스에서 바인딩 대상으로 전송 될 때 이벤트.&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; event should be raised when the binding target value is updated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;바인딩 대상 값이 고, 그렇지 않으면 업데이트 된 경우 이벤트를 발생 하도록 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event on the bound object.</source>
          <target state="translated">발생시킬지 여부를 나타내는 값을 가져오거나 설정 합니다.는 &lt;xref:System.Windows.Controls.Validation.Error&gt;바인딩된 개체에서 연결 된 이벤트입니다.&lt;/xref:System.Windows.Controls.Validation.Error&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the binding has &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt; associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</source>
          <target state="translated">바인딩에 다음과 같은 경우 &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;연결 된 바인딩 엔진 검사 때마다 각 규칙 source 속성을 대상 속성 값을 전송 합니다.&lt;/xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a rule invalidates a value, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; object and adds it to the &lt;xref:System.Windows.Controls.Validation&gt;.&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt; collection of the bound object.</source>
          <target state="translated">규칙 값을 무효화 하는 경우 바인딩 엔진 만듭니다는 &lt;xref:System.Windows.Controls.ValidationError&gt;개체에 추가 합니다.는 &lt;xref:System.Windows.Controls.Validation&gt;.&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt; 바인딩된 개체의 컬렉션입니다.&lt;/xref:System.Windows.Controls.Validation.Errors%2A&gt; &lt;/xref:System.Windows.Controls.Validation&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; property is not empty, the &lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt; attached property of the object is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;속성이 비어는 &lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt;개체의 연결된 속성이로 설정 되어 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the NotifyOnValidationError property of the &lt;xref:System.Windows.Data.Binding&gt; is set to <ph id="ph1">`true`</ph>, then the binding engine raises the &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; attached event on the object.</source>
          <target state="translated">경우 NotifyOnValidationError 속성의는 &lt;xref:System.Windows.Data.Binding&gt;로 설정 되어 <ph id="ph1">`true`</ph>, 바인딩 엔진에서 발생 한 다음는 &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;연결 된 개체에는 이벤트입니다.&lt;/xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">유효성 검사 프로세스를 대 한 자세한 내용은 데이터 유효성 검사 섹션을 참조 하십시오.는 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 &lt;xref:System.Windows.Controls.Validation.Error&gt;연결 된 이벤트는 고, 그렇지 않으면 원본 업데이트 중에 유효성 검사 오류가 있을 때 바인딩된 개체에서 발생 해야 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Controls.Validation.Error&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets or sets the path to the binding source property.</source>
          <target state="translated">바인딩 소스 속성에 경로 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</source>
          <target state="translated">일반적으로 각 바인딩에 이러한 네 가지 구성 요소: 바인딩 대상 개체, 대상 속성, 바인딩 소스 및 사용 하는 바인딩 원본의 값에 대 한 경로입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about these data binding concepts, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이러한 데이터 바인딩 개념에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Path property to specify the source value you want to bind to:      -   In the simplest case, the Path property value is the name of the property of the source object to use for the binding, such as <ph id="ph1">`Path=PropertyName`</ph>.</source>
          <target state="translated">에 바인딩 소스 값을 지정 하려면 경로 속성을 사용:-가장 간단한 경우 속성 값은 바인딩의 경우와 같은 사용할 소스 개체의 속성 이름 경로 <ph id="ph1">`Path=PropertyName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Subproperties of a property can be specified by a syntax similar to that used in <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph>.</source>
          <target state="translated">-속성의 하위 속성에 사용한 것과 비슷한 구문을 사용 하 여 지정할 수 있습니다 <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart.Order`</ph> sets the binding to the subproperty <ph id="ph2">`Order`</ph> of the object or property <ph id="ph3">`ShoppingCart`</ph>.</source>
          <target state="translated">예를 들어, 절 <ph id="ph1">`Path=ShoppingCart.Order`</ph> 하위 속성에 바인딩을 가져오거나 설정 <ph id="ph2">`Order`</ph> 개체 또는 속성의 <ph id="ph3">`ShoppingCart`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To bind to an attached property, place parentheses around the attached property.</source>
          <target state="translated">-연결된 된 속성에 바인딩할에 연결 된 속성 주위에 괄호를 배치 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to bind to the attached property &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;, the syntax is <ph id="ph1">`Path=(DockPanel.Dock)`</ph>.</source>
          <target state="translated">예를 들어, 연결된 된 속성에 바인딩할 &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;, 구문은 <ph id="ph1">`Path=(DockPanel.Dock)`</ph>.&lt;/xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</source>
          <target state="translated">-속성의 인덱서 속성 이름 뒤에 인덱서가 적용 되는 대괄호 안에 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart[0]`</ph> sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</source>
          <target state="translated">예를 들어, 절 <ph id="ph1">`Path=ShoppingCart[0]`</ph> 속성의 내부 인덱싱 리터럴 문자열 "0"을 처리 하는 방법에 해당 하는 인덱스에 바인딩을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple indexers are also supported.</source>
          <target state="translated">여러 인덱서가 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Indexers and subproperties can be mixed in a <ph id="ph1">`Path`</ph> clause; for example, <ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph>      -   Inside indexers you can have multiple indexer parameters separated by commas (,).</source>
          <target state="translated">-인덱서과 하위 속성 함께 사용할 수 있습니다는 <ph id="ph1">`Path`</ph> 절; 예를 들면 <ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph> -내부 인덱서 쉼표 (,)로 구분 된 여러 인덱서 매개 변수를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of each parameter can be specified with parentheses.</source>
          <target state="translated">각 매개 변수의 형식은 괄호와 함께 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can have <ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>, where <ph id="ph2">`sys`</ph> is mapped to the <ph id="ph3">`System`</ph> namespace.</source>
          <target state="translated">예를 들어 할 수 있습니다 <ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>여기서 <ph id="ph2">`sys`</ph> 매핑되는 <ph id="ph3">`System`</ph> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   When the source is a collection view, the current item can be specified with a slash (/).</source>
          <target state="translated">-원본 컬렉션 뷰의 경우, 현재 항목 슬래시 (/)로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the clause <ph id="ph1">`Path=/`</ph> sets the binding to the current item in the view.</source>
          <target state="translated">예를 들어 절 <ph id="ph1">`Path=/`</ph> 보기에서 현재 항목에 바인딩을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the source is a collection, this syntax specifies the current item of the default collection view.</source>
          <target state="translated">원본 컬렉션 경우이 구문은 기본 컬렉션 뷰의 현재 항목을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Property names and slashes can be combined to traverse properties that are collections.</source>
          <target state="translated">-속성 이름과 슬래시를 조합 하 속성 컬렉션을 이동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`Path=/Offices/ManagerName`</ph> specifies the current item of the source collection, which contains an <ph id="ph2">`Offices`</ph> property that is also a collection.</source>
          <target state="translated">예를 들어 <ph id="ph1">`Path=/Offices/ManagerName`</ph> 포함 하는 소스 컬렉션의 현재 항목을 지정 된 <ph id="ph2">`Offices`</ph> 속성 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its current item is an object that contains a <ph id="ph1">`ManagerName`</ph> property.</source>
          <target state="translated">현재 항목은 포함 하는 개체는 <ph id="ph1">`ManagerName`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Optionally, a period (.) path can be used to bind to the current source.</source>
          <target state="translated">-필요에 따라 현재 소스에 바인딩하는 마침표 (.) 경로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`Text="{Binding}"`</ph> is equivalent to <ph id="ph2">`Text="{Binding Path=.}"`</ph>.</source>
          <target state="translated">예를 들어 <ph id="ph1">`Text="{Binding}"`</ph> 같습니다 <ph id="ph2">`Text="{Binding Path=.}"`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about path syntax, see <bpt id="p1">[</bpt>Binding Declarations Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>PropertyPath XAML Syntax<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">경로 구문에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>바인딩 선언 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 또는 <bpt id="p2">[</bpt>PropertyPath XAML 구문<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> bindings, see the &lt;xref:System.Windows.Data.Binding.XPath%2A&gt; property.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> 바인딩 참조는 &lt;xref:System.Windows.Data.Binding.XPath%2A&gt;속성.&lt;/xref:System.Windows.Data.Binding.XPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>To bind to an entire object, you do not need to specify the Path property.</source>
          <target state="translated">전체 개체에 바인딩할 경로 속성을 지정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see "Specifying the Path to the Value" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../Topic/Data%20Binding%20Overview.md)</ept>.</source>
          <target state="translated">자세한 내용은의 "를 지정 하는 경로 값에" 참조 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](../Topic/Data%20Binding%20Overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The path to the binding source.</source>
          <target state="translated">바인딩 소스에 대 한 경로입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets or sets the binding source by specifying its location relative to the position of the binding target.</source>
          <target state="translated">바인딩 대상의 위치를 기준으로 해당 위치를 지정 하 여 바인딩 소스를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</source>
          <target state="translated">이 속성은 동일한 개체의 다른 속성에 속성 개체 중 하나를 바인딩할 하거나 스타일이 나 템플릿을에서 바인딩을 정의 하는 데 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">기본적으로 바인딩은 상속으로 지정 된 데이터 컨텍스트는 <ph id="ph1">`DataContext`</ph> 속성에 설정 된 경우.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the RelativeSource property is one of the ways you can explicitly set the source of a &lt;xref:System.Windows.Data.Binding&gt; and override the inherited data context.</source>
          <target state="translated">그러나 RelativeSource 속성은의 원본을 명시적으로 설정할 수는 방법 중 하나는 &lt;xref:System.Windows.Data.Binding&gt;상속 된 데이터 컨텍스트를 재정의 하 고.&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 바인딩 소스를 지정<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt; properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;및 &lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt;속성도 설정할 수 있도록는 바인딩 소스를 명시적으로.&lt;/xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, only one of the three properties, &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, and RelativeSource, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">그러나 세 개의 속성 중 하나만 &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, 및 각 바인딩에 대해 RelativeSource를 설정할지 또는 충돌이 발생할 수 있습니다.&lt;/xref:System.Windows.Data.Binding.Source%2A&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">바인딩 소스 충돌 하는 경우이 속성에서 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 정보 참조 <bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_RelativeSource"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_RelativeSource"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Data.RelativeSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object specifying the relative location of the binding source to use.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Data.RelativeSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용할 바인딩 소스의 상대 위치를 지정 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Removes a handler for the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; attached event.</source>
          <target state="translated">에 대 한 처리기를 제거는 &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;연결 된 이벤트입니다.&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 지원에 연결 된 이벤트 사용 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하는 이벤트를 수신 대기 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The handler to remove.</source>
          <target state="translated">제거할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Removes a handler for the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; attached event.</source>
          <target state="translated">에 대 한 처리기를 제거는 &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;연결 된 이벤트입니다.&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 지원에 연결 된 이벤트 사용 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하는 이벤트를 수신 대기 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The handler to remove.</source>
          <target state="translated">제거할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Sets a namespace manager object used by the binding attached to the provided element.</source>
          <target state="translated">지정된 된 요소에 연결 된 바인딩에 사용 되는 네임 스페이스 관리자 개체를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports attached property usage for the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt; attached property.</source>
          <target state="translated">이 메서드는 연결된 속성의 사용에 대 한 지원의 &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;연결 된 속성입니다.&lt;/xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The object from which to get namespace information.</source>
          <target state="translated">네임 스페이스 정보를 얻을 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> to use for namespace evaluation in the passed element.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 전달된 된 요소에서 네임 스페이스 평가에 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.Binding.Path*&gt; property should be persisted.</source>
          <target state="translated">표시 여부는 &lt;xref:System.Windows.Data.Binding.Path*&gt;속성을 유지 해야 합니다.&lt;/xref:System.Windows.Data.Binding.Path*&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; property does not have a simple default value.</source>
          <target state="translated">이 <ph id="ph1">`ShouldSerialize`</ph> 메서드가 때문에 제공 되는 &lt;xref:System.Windows.Data.Binding.Path%2A&gt;속성 간단한 기본 값이 없는.&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.Binding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.Binding&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding&gt;또는 &lt;xref:System.Windows.Data.Binding&gt;.&lt;/xref:System.Windows.Data.Binding&gt; 통합 제어 자체 개발&lt;/xref:System.Windows.Data.Binding&gt; 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성 값이 기본값에서 변경 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.Binding.Source*&gt; property should be persisted.</source>
          <target state="translated">표시 여부는 &lt;xref:System.Windows.Data.Binding.Source*&gt;속성을 유지 해야 합니다.&lt;/xref:System.Windows.Data.Binding.Source*&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.Binding.Source%2A&gt; property does not have a simple default value.</source>
          <target state="translated">이 <ph id="ph1">`ShouldSerialize`</ph> 메서드가 때문에 제공 되는 &lt;xref:System.Windows.Data.Binding.Source%2A&gt;속성 간단한 기본 값이 없는.&lt;/xref:System.Windows.Data.Binding.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.Binding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.Binding&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding&gt;또는 &lt;xref:System.Windows.Data.Binding&gt;.&lt;/xref:System.Windows.Data.Binding&gt; 통합 제어 자체 개발&lt;/xref:System.Windows.Data.Binding&gt; 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성 값이 기본값에서 변경 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.Binding.ValidationRules*&gt; property should be persisted.</source>
          <target state="translated">표시 여부는 &lt;xref:System.Windows.Data.Binding.ValidationRules*&gt;속성을 유지 해야 합니다.&lt;/xref:System.Windows.Data.Binding.ValidationRules*&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt; property does not have a simple default value.</source>
          <target state="translated">이 <ph id="ph1">`ShouldSerialize`</ph> 메서드가 때문에 제공 되는 &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;속성 간단한 기본 값이 없는.&lt;/xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.Binding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.Binding&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding&gt;또는 &lt;xref:System.Windows.Data.Binding&gt;.&lt;/xref:System.Windows.Data.Binding&gt; 통합 제어 자체 개발&lt;/xref:System.Windows.Data.Binding&gt; 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성 값이 기본값에서 변경 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Gets or sets the object to use as the binding source.</source>
          <target state="translated">바인딩 소스로 사용할 개체를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">기본적으로 바인딩은 상속으로 지정 된 데이터 컨텍스트는 <ph id="ph1">`DataContext`</ph> 속성에 설정 된 경우.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the Source property is one of the ways you can explicitly set the source of a &lt;xref:System.Windows.Data.Binding&gt; and override the inherited data context.</source>
          <target state="translated">그러나 Source 속성은의 원본을 명시적으로 설정할 수는 방법 중 하나는 &lt;xref:System.Windows.Data.Binding&gt;상속 된 데이터 컨텍스트를 재정의 하 고.&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the Source property instead of the <ph id="ph1">`DataContext`</ph> property.</source>
          <target state="translated">대신 Source 속성을 사용할 수 있는 여러 속성을 동일한 데이터 컨텍스트를 상속 하는 범위를 설정의 기능을 필요 하지 않은 경우는 <ph id="ph1">`DataContext`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt; properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;및 &lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt;속성도 설정할 수 있도록는 바인딩 소스를 명시적으로.&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, only one of the three properties, &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, Source, and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">그러나 세 개의 속성 중 하나만 &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, 원본 및 &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;집합 각각에 대 한 바인딩 해야, 또는 충돌이 발생할 수 있습니다.&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">바인딩 소스 충돌 하는 경우이 속성에서 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear this property, set it to &lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;.</source>
          <target state="translated">이 속성을 지우려면 &lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;.&lt;/xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt; 로 설정</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Source"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Source="object"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Source"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>object<ept id="p3">*</ept>    An existing object.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Source"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <ph id="ph1">```   &lt;object Source="object"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Source"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>개체<ept id="p3">*</ept> 기존 개체입니다.      </target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>To refer to an existing object, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept></source>
          <target state="translated">기존 개체를 참조 하려면 사용 된 <bpt id="p1">[</bpt>StaticResource 태그 확장<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept></target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The object to use as the binding source.</source>
          <target state="translated">바인딩 소스로 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; attached event.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;연결 된 이벤트입니다.&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; attached event.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;연결 된 이벤트입니다.&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">바인딩 소스 값을 업데이트 하는 동안 바인딩 엔진에서 발생 하는 예외를 처리 하기 위한 사용자 지정 논리를 제공 하는 데 사용할 수 있는 처리기를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>This is only applicable if you have associated an <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with your binding.</source>
          <target state="translated">만 연결한 경우에 적용 됩니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 바인딩을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;바인딩 소스 속성을 업데이트 하는 동안 발생 한 예외를 검사 하는 기본 제공 유효성 검사 규칙.&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have associated the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; with your &lt;xref:System.Windows.Data.Binding&gt; object, you can use this property to set a handler to provide custom logic for handling these exceptions.</source>
          <target state="translated">연결한 경우는 &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;와 프로그램 &lt;xref:System.Windows.Data.Binding&gt;개체를 이러한 예외를 처리 하기 위한 사용자 지정 논리를 제공 하는 처리기를 설정 하려면이 속성을 사용할 수 있습니다.&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an UpdateSourceExceptionFilter is not specified on the &lt;xref:System.Windows.Data.Binding&gt;, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">에 UpdateSourceExceptionFilter 지정 되지 않은 경우는 &lt;xref:System.Windows.Data.Binding&gt;, 바인딩 엔진을 만듭니다는 &lt;xref:System.Windows.Controls.ValidationError&gt;예외와에 추가 &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;바인딩된 요소의 컬렉션입니다.&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">바인딩 소스 값을 업데이트 하는 동안 바인딩 엔진에서 발생 하는 예외를 처리 하기 위한 사용자 지정 논리를 제공 하는 메서드.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines the timing of binding source updates.</source>
          <target state="translated">바인딩 소스 업데이트의 타이밍을 결정 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>Bindings that are &lt;xref:System.Windows.Data.BindingMode&gt; or &lt;xref:System.Windows.Data.BindingMode&gt; listen for changes in the target property and propagate them back to the source.</source>
          <target state="translated">바인딩 &lt;xref:System.Windows.Data.BindingMode&gt;또는 &lt;xref:System.Windows.Data.BindingMode&gt;대상 속성에 대 한 변경 내용을 수신 대기 하 고 소스 전파.&lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.BindingMode&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is known as updating the source.</source>
          <target state="translated">이 소스 업데이트 라고 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Usually, these updates happen whenever the target property changes.</source>
          <target state="translated">일반적으로 이러한 업데이트는 대상 속성이 변경 될 때마다 발생 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</source>
          <target state="translated">다른 단순 컨트롤 및 확인란에 대 한 문제가 것만 일반적으로 텍스트 필드에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</source>
          <target state="translated">업데이트 하면 새 값을 커밋하기 전에 입력 오류를 수정 하 고 백스페이스를 일반적인 기회 사용자 거부 하 고 모든 키 입력에는 성능이 저하 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the default UpdateSourceTrigger value of the &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt; property is &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt; and not &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.</source>
          <target state="translated">따라서 UpdateSourceTrigger 기본값인은 &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;속성은 &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;아닌 &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.&lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt; &lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt; &lt;/xref:System.Windows.Controls.TextBox.Text%2A&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the UpdateSourceTrigger value to &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;, you must call the &lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt; method or the changes will not propagate back to the source.</source>
          <target state="translated">UpdateSourceTrigger 값을 설정 하면 &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;를 호출 해야 합니다는 &lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;소스에 다시 메서드 또는 변경 내용을 전파 하지 것입니다.&lt;/xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt; &lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value of the target dependency property.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 기본값을 반환 하는 <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 대상 종속성 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>However, the default value for most dependency properties is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, while the &lt;xref:System.Windows.Controls.TextBox.Text<bpt id="p2">*</bpt>&gt; property has a default value of <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.       A programmatic way to determine the default UpdateSourceTrigger value of a dependency property is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<ept id="p2">*</ept>&gt; and then check the value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*&gt; property.</source>
          <target state="translated">그러나 대부분의 종속성 속성에 대 한 기본 값은 <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 동안는 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; 속성의 기본값은 <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.       종속성 속성의 기본 UpdateSourceTrigger 값을 확인 하는 프로그래밍 방식으로 사용 하 여 속성의 속성 메타 데이터를 가져오려는 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt;의 값을 확인 한 다음는 &lt;xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*&gt;속성.&lt;/xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">포함할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; element explicitly.</source>
          <target state="translated">사용 하는 대신 제공이 속성은 &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;요소 명시적으로.&lt;/xref:System.Windows.Controls.DataErrorValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; is a built-in validation rule that checks for errors that are raised by the &lt;xref:System.ComponentModel.IDataErrorInfo&gt; implementation of the source object.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;에 의해 발생 하는 오류를 검사 하는 기본 제공 유효성 검사 규칙의 &lt;xref:System.ComponentModel.IDataErrorInfo&gt;소스 개체의 구현.&lt;/xref:System.ComponentModel.IDataErrorInfo&gt; &lt;/xref:System.Windows.Controls.DataErrorValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error is raised, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the error and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">오류가 발생 하는 경우 바인딩 엔진 만듭니다는 &lt;xref:System.Windows.Controls.ValidationError&gt;오류로 추가 &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;바인딩된 요소의 컬렉션입니다.&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 피드백을 지웁니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>ValidatesOnDataErrors is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">ValidatesOnDataErrors는.NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework 버전 및 종속성<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>포함 하는 <bpt id="p2">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">포함할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; element explicitly.</source>
          <target state="translated">사용 하는 대신 제공이 속성은 &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;요소 명시적으로.&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;source 속성을 업데이트 하는 동안 throw 되는 예외를 확인 하는 기본 제공 유효성 검사 규칙은.&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">예외가 발생 하는 경우 바인딩 엔진 만듭니다는 &lt;xref:System.Windows.Controls.ValidationError&gt;예외와에 추가 &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;바인딩된 요소의 컬렉션입니다.&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ValidationError&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 피드백을 지웁니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>ValidatesOnExceptions is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">ValidatesOnExceptions는.NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework 버전 및 종속성<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>포함 하는 <bpt id="p2">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">포함할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>When ValidatesOnNotifyDataErrors is <ph id="ph1">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements &lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;.</source>
          <target state="translated">ValidatesOnNotifyDataErrors 다음과 같은 경우 <ph id="ph1">`true`</ph>, 바인딩을 확인 하 고 &lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;.&lt;/xref:System.ComponentModel.INotifyDataErrorInfo&gt; 를 구현 하는 데이터 원본에 의해 발생 하는 오류를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>포함 하는 <bpt id="p2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Gets a collection of rules that check the validity of the user input.</source>
          <target state="translated">사용자 입력의 유효성을 검사 하는 규칙의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding model enables you to associate ValidationRules with your &lt;xref:System.Windows.Data.Binding&gt; or &lt;xref:System.Windows.Data.MultiBinding&gt; object.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> 데이터 바인딩 모델을 사용 하면 Validationrule와 연결할 수 있습니다 프로그램 &lt;xref:System.Windows.Data.Binding&gt;또는 &lt;xref:System.Windows.Data.MultiBinding&gt;개체입니다.&lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create custom rules by deriving from the &lt;xref:System.Windows.Controls.ValidationRule&gt; class and implementing the &lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt; method, or you can use the built-in &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;, which invalidates a value if there are exceptions during source updates.</source>
          <target state="translated">파생 하 여 사용자 지정 규칙을 만들 수는 &lt;xref:System.Windows.Controls.ValidationRule&gt;클래스 및 구현는 &lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;메서드를 하거나 사용할 수 있습니다는 기본 제공 &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;, 원본 업데이트 중에 예외가 있는 경우 값을 무효화 하는.&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt; &lt;/xref:System.Windows.Controls.ValidationRule.Validate%2A&gt; &lt;/xref:System.Windows.Controls.ValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binding engine checks each &lt;xref:System.Windows.Controls.ValidationRule&gt; associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</source>
          <target state="translated">바인딩 엔진에서는 각 검사 &lt;xref:System.Windows.Controls.ValidationRule&gt;될 때마다 바인딩 소스 속성에는 입력된 값 (바인딩 대상 속성 값)을 전송 되는 바인딩과 연결 된.&lt;/xref:System.Windows.Controls.ValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">유효성 검사 프로세스를 대 한 자세한 내용은 데이터 유효성 검사 섹션을 참조 하십시오.는 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property can be set in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;에서이 속성을 설정할 수 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> 표시 된 컬렉션 구문을 사용 하거나 컬렉션 개체에 액세스 하 고와 같은 여러 메서드를 사용 하 여 <ph id="ph3">`Add`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property to access the collection object is read-only, whereas the collection itself is read-write.</source>
          <target state="translated">컬렉션 개체에 액세스 하려면 속성은 읽기 전용 컬렉션 자체는 읽기 / 쓰기 이지만 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ValidationRules"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.ValidationRules&gt;       oneOrMoreValidationRules     &lt;/object.ValidationRules&gt;   &lt;/object&gt;      ```</ph>      <bpt id="p2">&lt;a name="xamlValues_ValidationRules"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreValidationRules<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Controls.ValidationRule&gt; objects.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ValidationRules"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 속성 요소 사용 <ph id="ph1">```   &lt;object&gt;     &lt;object.ValidationRules&gt;       oneOrMoreValidationRules     &lt;/object.ValidationRules&gt;   &lt;/object&gt;      ```</ph> <bpt id="p2">&lt;a name="xamlValues_ValidationRules"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 값 <bpt id="p3">*</bpt>oneOrMoreValidationRules<ept id="p3">*</ept> 하나 이상의 &lt;xref:System.Windows.Controls.ValidationRule&gt;개체입니다.&lt;/xref:System.Windows.Controls.ValidationRule&gt;      </target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; class or create custom rules by subclassing the &lt;xref:System.Windows.Controls.ValidationRule&gt; class.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;클래스 또는 &lt;xref:System.Windows.Controls.ValidationRule&gt;클래스&lt;/xref:System.Windows.Controls.ValidationRule&gt; 서브클래싱 하 여 사용자 지정 규칙을 만들&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt; 를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A collection of <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">컬렉션 <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager*&gt; attached property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager*&gt;연결 된 속성입니다.&lt;/xref:System.Windows.Data.Binding.XmlNamespaceManager*&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> query that returns the value on the <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> binding source to use.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 값을 반환 하는 쿼리는 <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> 사용할 바인딩 소스입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the binding source is <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> data instead of a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> object, the XPath property is used instead of the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; property to indicate the path to the value on the binding source to use.</source>
          <target state="translated">바인딩 소스 <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> 대신 데이터는 <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> 개체 대신 XPath 속성은 사용 된 &lt;xref:System.Windows.Data.Binding.Path%2A&gt;의 경로를 사용 하 여 바인딩 소스에 값을 나타내는 속성을.&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>By setting the XPath property, you are creating an <ph id="ph1">`XPath`</ph> query to select a node or a collection of nodes (&lt;xref:System.Xml.XmlElement?displayProperty=fullName&gt; and &lt;xref:System.Xml.XmlAttribute?displayProperty=fullName&gt; both derive from &lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;).</source>
          <target state="translated">XPath 속성을 설정 하 여 만드는 <ph id="ph1">`XPath`</ph> 노드 또는 노드의 컬렉션을 선택 하는 쿼리 (&lt;xref:System.Xml.XmlElement?displayProperty=fullName&gt; 및 &lt;xref:System.Xml.XmlAttribute?displayProperty=fullName&gt;에서 파생 되 &lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;).&lt;/xref:System.Xml.XmlNode?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlAttribute?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlElement?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt; is a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> object, which means you can bind to its properties using the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;이 <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> 개체를 사용 하 여 해당 속성에 바인딩할 수 있습니다는 &lt;xref:System.Windows.Data.Binding.Path%2A&gt;속성.&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;&lt;/xref:System.Xml.XmlNode?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt; method handles the <ph id="ph1">`XPath`</ph> expressions from the XPath property.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;메서드 핸들은 <ph id="ph1">`XPath`</ph> XPath 속성에서 식을.&lt;/xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`XPath`</ph> functions are not supported.</source>
          <target state="translated"><ph id="ph1">`XPath`</ph>함수는 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">`XPath`</ph> expression information, see the &lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt; documentation and some examples provided in the Example section.</source>
          <target state="translated">에 대 한 <ph id="ph1">`XPath`</ph> 식 정보 참조는 &lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;설명서 및 "예" 섹션에 제공 된 몇 가지 예입니다.&lt;/xref:System.Xml.XmlNode.SelectNodes%2A&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>LINQ to XML objects &lt;xref:System.Xml.Linq.XDocument&gt; and &lt;xref:System.Xml.Linq.XElement&gt; do not use <ph id="ph1">`XPath`</ph>.</source>
          <target state="translated">LINQ to XML 개체 &lt;xref:System.Xml.Linq.XDocument&gt;및 &lt;xref:System.Xml.Linq.XElement&gt;사용 하지 않는 <ph id="ph1">`XPath`</ph>.&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>How to: Bind to XDocument, XElement, or LINQ for XML Query Results<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: XML 쿼리 결과 대 한 XDocument, XElement, 또는 LINQ를 바인딩할<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> query.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>