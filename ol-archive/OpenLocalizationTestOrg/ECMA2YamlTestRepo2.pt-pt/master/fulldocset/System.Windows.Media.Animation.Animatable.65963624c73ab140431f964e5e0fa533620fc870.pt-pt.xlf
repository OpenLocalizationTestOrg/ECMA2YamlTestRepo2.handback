<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54987b145df524e2c04721d4c6bffcfcc50ba9e3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Media.Animation.Animatable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d973be9894147b9bea2019d00d682956589f9b1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7b2f884eff8b4afc58e95a4cd67f1658436c86c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Abstract class that provides animation support.</source>
          <target state="translated">Classe abstracta que fornece suporte de animação.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies an <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Aplica-se um <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para especificado <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the property is already animated, the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> handoff behavior is used.</source>
          <target state="translated">Se a propriedade já está a ser animada, o <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> comportamento handoff é utilizado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that using this method to removing clocks from a property does not stop those clocks.</source>
          <target state="translated">Tenha em atenção que utilizar este método para remover os relógios de uma propriedade não parar os relógios.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">A propriedade para animar.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">O relógio com a qual animar a propriedade especificada.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`clock`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">Se <ph id="ph1">`clock`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, todas as animações serão removidas da propriedade especificada (mas não parar).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Applies an <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Aplica-se um <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para especificado <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the property is already animated, the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">Se a propriedade já está a ser animada, especificado <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é utilizado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that using this method to remove clocks from a property does not stop those clocks.</source>
          <target state="translated">Tenha em atenção que ao utilizar este método para remover os relógios de uma propriedade não parar os relógios.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">Utilizar a compor HandoffBehavior quando aplica um &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, ou &lt;xref:System.Windows.Media.Animation.AnimationClock&gt;para uma propriedade utilizando o &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, qualquer &lt;xref:System.Windows.Media.Animation.Clock&gt;objetos anteriormente associados essa propriedade continuam a consumir recursos de sistema; o sistema de temporização não remove estas relógios automaticamente.&lt;/xref:System.Windows.Media.Animation.Clock&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid performance issues when you apply a large number of clocks using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">Para evitar problemas de desempenho quando aplica um grande número de relógios utilizando &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, deve remover os relógios composição da propriedade animada depois de estarem concluídas.&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">Existem várias formas para remover um relógio.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">-Para remover todos os relógios de uma propriedade, utilize o &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;ou &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;método do objeto animado.&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; &lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">Especifique a propriedade que está a ser animada como o primeiro parâmetro e <ph id="ph1">`null`</ph> como o segundo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">Isto irá remover todos os relógios de animação da propriedade.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-Para remover um específico &lt;xref:System.Windows.Media.Animation.AnimationClock&gt;de uma lista de relógios, utilize a &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;propriedade de &lt;xref:System.Windows.Media.Animation.AnimationClock&gt;obter um &lt;xref:System.Windows.Media.Animation.ClockController&gt;em seguida, chame o &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;método de &lt;xref:System.Windows.Media.Animation.ClockController&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController&gt; &lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">Isto é geralmente feito o &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;processador de eventos para um clock.&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock will return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Tenha em atenção que os relógios de raiz apenas podem ser controlados por um &lt;xref:System.Windows.Media.Animation.ClockController&gt;; o &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;irá devolver a propriedade de um relógio subordinado <ph id="ph1">`null`</ph>.&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">Tenha em atenção que o &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;evento não será chamado se a duração efetiva do relógio é indefinidamente.&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the user will need to determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">Nesse caso, o utilizador terá de determinar quando deve chamar &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">Isto é principalmente um problema para animações em objetos que têm uma duração de tempo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">Quando um objeto é memória libertada, os relógios também serão desligados e libertação da memória.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre os objetos de relógio, consulte o <bpt id="p1">[</bpt>animação e descrição geral do sistema de temporização<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">A propriedade para animar.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">O relógio com a qual animar a propriedade especificada.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`handoffBehavior`</ph> is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">`clock`</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">Se <ph id="ph1">`handoffBehavior`</ph> é <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <ph id="ph2">`clock`</ph> é <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, todas as animações serão removidas da propriedade especificada (mas não parar).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`handoffBehavior`</ph> is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and clock is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method has no effect.</source>
          <target state="translated">Se <ph id="ph1">`handoffBehavior`</ph> é <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e o relógio está <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, este método não tem qualquer efeito.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">Um valor que especifica como a nova animação deve interagir com quaisquer animações atuais já que afetam o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Applies an animation to the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Aplica-se um animação a especificado <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">A animação é iniciada quando o intervalo seguinte é composto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the specified property is already animated, the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> handoff behavior is used.</source>
          <target state="translated">Se a propriedade especificada já está a ser animada, o <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> comportamento handoff é utilizado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the animation has a &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">Se a animação tem um &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;que é maior que zero, a animação começa depois desse período de tempo decorrido desde a altura da moldura seguinte é composta.&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">A propriedade para animar.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">A animação utilizada para animar a propriedade especificada.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the animation's &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">Se a animação &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt;é <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, serão removidas qualquer animações atuais e o valor da propriedade atual será retido.&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`animation`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">Se <ph id="ph1">`animation`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, todas as animações serão removidas da propriedade e o valor da propriedade irá reverter para o valor base.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Applies an animation to the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Aplica-se um animação a especificado <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">A animação é iniciada quando o intervalo seguinte é composto.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the specified property is already animated, the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">Se a propriedade especificada já está a ser animada, especificado <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é utilizado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the animation has a &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">Se a animação tem um &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;que é maior que zero, a animação começa depois desse período de tempo decorrido desde a altura da moldura seguinte é composta.&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">Utilizar a compor HandoffBehavior quando aplica um &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, ou &lt;xref:System.Windows.Media.Animation.AnimationClock&gt;para uma propriedade utilizando o &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, qualquer &lt;xref:System.Windows.Media.Animation.Clock&gt;objetos anteriormente associados essa propriedade continuam a consumir recursos de sistema; o sistema de temporização não remove estas relógios automaticamente.&lt;/xref:System.Windows.Media.Animation.Clock&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid performance issues when you apply a large number of clocks using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">Para evitar problemas de desempenho quando aplica um grande número de relógios utilizando &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, deve remover os relógios composição da propriedade animada depois de estarem concluídas.&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">Existem várias formas para remover um relógio.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">-Para remover todos os relógios de uma propriedade, utilize o &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;ou &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;método do objeto animado.&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; &lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">Especifique a propriedade que está a ser animada como o primeiro parâmetro e <ph id="ph1">`null`</ph> como o segundo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">Isto irá remover todos os relógios de animação da propriedade.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-Para remover um específico &lt;xref:System.Windows.Media.Animation.AnimationClock&gt;de uma lista de relógios, utilize a &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;propriedade de &lt;xref:System.Windows.Media.Animation.AnimationClock&gt;obter um &lt;xref:System.Windows.Media.Animation.ClockController&gt;em seguida, chame o &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;método de &lt;xref:System.Windows.Media.Animation.ClockController&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController&gt; &lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">Isto é geralmente feito o &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;processador de eventos para um clock.&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock will return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Tenha em atenção que os relógios de raiz apenas podem ser controlados por um &lt;xref:System.Windows.Media.Animation.ClockController&gt;; o &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;irá devolver a propriedade de um relógio subordinado <ph id="ph1">`null`</ph>.&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">Tenha em atenção que o &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;evento não será chamado se a duração efetiva do relógio é indefinidamente.&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the user will need to determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">Nesse caso, o utilizador terá de determinar quando deve chamar &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">Isto é principalmente um problema para animações em objetos que têm uma duração de tempo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">Quando um objeto é memória libertada, os relógios também serão desligados e libertação da memória.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre os objetos de relógio, consulte o <bpt id="p1">[</bpt>animação e descrição geral do sistema de temporização<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">A propriedade para animar.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">A animação utilizada para animar a propriedade especificada.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`handoffBehavior`</ph> is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the animation's &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime<bpt id="p2">*</bpt>&gt; is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, any current animations will be removed and the current value of the property will be held.       If <ph id="ph2">`handoffBehavior`</ph> is <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and <ph id="ph3">`animation`</ph> is a <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> reference, all animations will be removed from the property and the property value will revert back to its base value.       If <ph id="ph4">`handoffBehavior`</ph> is <bpt id="p6">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, this method will have no effect if the animation or its &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime<ept id="p2">*</ept>&gt; is <bpt id="p7">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se <ph id="ph1">`handoffBehavior`</ph> é <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e a animação &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; é <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, serão removidas qualquer animações atuais e o valor da propriedade atual será retido.       Se <ph id="ph2">`handoffBehavior`</ph> é <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> e <ph id="ph3">`animation`</ph> é um <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> referência, todos os animações serão removidas da propriedade e o valor da propriedade irá reverter para o valor base.       Se <ph id="ph4">`handoffBehavior`</ph> é <bpt id="p6">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p6">&lt;/xref&gt;</ept>, este método não tem qualquer efeito se a animação ou respetivas &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; é <bpt id="p7">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p7">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">Um valor que especifica como a nova animação deve interagir com quaisquer animações atuais já que afetam o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of this <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, making deep copies of this object's values.</source>
          <target state="translated">Cria um clone modificável deste <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, efetuar cópias profundas de valores deste objeto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">Quando copiar propriedades de dependência deste objeto, este método copia enlaces de referências e os dados de recursos (mas já não poderão resolver), mas não animações ou os respetivos valores atuais.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Clone method can be used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects.</source>
          <target state="translated">O método de Clone pode ser utilizado para produzir modificável cópias congeladas &lt;xref:System.Windows.Freezable&gt;objetos.&lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For convenience, this method shadows the inherited &lt;xref:System.Windows.Freezable.Clone%2A&gt; method to provide a strongly typed implementation.</source>
          <target state="translated">Para sua comodidade, este método funciona como sombra o herdados &lt;xref:System.Windows.Freezable.Clone%2A&gt;método para fornecer uma implementação com tipo seguro.&lt;/xref:System.Windows.Freezable.Clone%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A modifiable clone of this instance.</source>
          <target state="translated">Um clone modificável desta instância.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The returned clone is effectively a deep copy of the current object.</source>
          <target state="translated">O clone devolvido eficazmente é uma cópia profunda do objeto atual.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The clone's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id="p1">*</bpt>&gt; property is <ept id="p1">*</ept><bpt id="p2">*</bpt>false<ept id="p2">*</ept>*.</source>
          <target state="translated">O clone &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; propriedade é <ept id="p1">*</ept> <bpt id="p2">*</bpt>falso<ept id="p2">*</ept>*.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Makes this <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object unmodifiable or determines whether it can be made unmodifiable.</source>
          <target state="translated">Faz com que esta <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto unmodifiable ou determina se que pode ser efetuado unmodifiable.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will return <bpt id="p1">**</bpt>false<ept id="p1">**</ept> when &lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt; is <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="translated">Este método irá devolver <bpt id="p1">**</bpt>falso<ept id="p1">**</ept> quando &lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;é <bpt id="p2">**</bpt>verdadeiro<ept id="p2">**</ept>.&lt;/xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call this method directly (except when calling base in an implementation).</source>
          <target state="translated">Não chame este método diretamente (exceto quando chamar base de uma implementação).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called internally by &lt;xref:System.Windows.Freezable.CanFreeze%2A&gt; (with <ph id="ph1">`isChecking`</ph> equal to <ph id="ph2">`true`</ph>) and  &lt;xref:System.Windows.Freezable.Freeze%2A&gt; (with <ph id="ph3">`isChecking`</ph> equal to <ph id="ph4">`false`</ph>).</source>
          <target state="translated">Este método é denominado internamente pelo &lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;(com <ph id="ph1">`isChecking`</ph> igual a <ph id="ph2">`true`</ph>) e &lt;xref:System.Windows.Freezable.Freeze%2A&gt;(com <ph id="ph3">`isChecking`</ph> igual a <ph id="ph4">`false`</ph>).&lt;/xref:System.Windows.Freezable.Freeze%2A&gt; &lt;/xref:System.Windows.Freezable.CanFreeze%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method should simply determine whether this instance can be frozen.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este método simplesmente deve determinar se esta instância pode ser congelada.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this instance should actually freeze itself when this method is called.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se esta instância, na verdade, deve parar próprio quando este método é chamado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method returns <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if this <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> can be made unmodifiable, or <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> if it cannot be made unmodifiable.</source>
          <target state="translated">Se <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">isChecking</ph> <ept id="p1">&lt;/code&gt;</ept> é <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, este método devolve <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> se <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> podem ser efetuadas unmodifiable, ou <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> se não é possível efetuar unmodifiable.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method returns <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the if this <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> is now unmodifiable, or <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</source>
          <target state="translated">Se <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">isChecking</ph> <ept id="p1">&lt;/code&gt;</ept> é <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, este método devolve <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> se a caso isto <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> está agora unmodifiable, ou <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> se não é possível efetuar unmodifiable, com o efeito de ter iniciado alterar o estado deste objeto congelado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Returns the non-animated value of the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Devolve o valor não animada de especificado <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified property is not animated, this method returns the same result as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.</source>
          <target state="translated">Se a propriedade especificada não está a ser animada, este método devolve o mesmo resultado como &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Identifies the property whose base (non-animated) value should be retrieved.</source>
          <target state="translated">Identifica a propriedade cujo valor base (não animada) deve ser obtido.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The value that would be returned if the specified property were not animated.</source>
          <target state="translated">O valor que deverá ser devolvido se a propriedade especificada não foram animada.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether one or more <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects is associated with any of this object's dependency properties.</source>
          <target state="translated">Obtém um valor que indica se um ou mais <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos está associado a qualquer uma das propriedades de dependência deste objeto.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property does not indicate whether this object contains animated sub-objects.</source>
          <target state="translated">Esta propriedade indica se este objeto contém os objetos secundárias animados.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies whether a dependency object should be serialized.</source>
          <target state="translated">Especifica se deve ser serializado um objeto de dependência.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor&gt; class uses the ShouldSerializeStoredWeakReference method to determine if a property should be serialized.</source>
          <target state="translated">O &lt;xref:System.ComponentModel.TypeDescriptor&gt;classe utiliza o método ShouldSerializeStoredWeakReference para determinar se uma propriedade deverá ser serializada.&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">Representa um objeto que participa no sistema de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to serialize <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>to serialize <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A predefinição é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>