<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48866610ef8d80da05371b0b6ef7e6d9609661bd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Messaging.MessageEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a570860269ef6d3d9454ac1b94ae9a92fb373c77</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">033622fbc69b34a2532b7f1b35be969738c8cd13</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">Fornece um cursor apenas de reencaminhamento para enumerar através de mensagens em fila de mensagens.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use MessageEnumerator for dynamic interaction with messages in a queue.</source>
          <target state="translated">Utilize MessageEnumerator para dinâmica interação com mensagens numa fila.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods available through the &lt;xref:System.Messaging.MessageQueue&gt; class can return either a MessageEnumerator pointing to a dynamic list of messages in the queue, or an array that contains a copy at a given instant - a snapshot - of the queue at the time the specified method was called.</source>
          <target state="translated">Métodos disponíveis através do &lt;xref:System.Messaging.MessageQueue&gt;classe pode devolver um MessageEnumerator a apontar para uma lista dinâmica de mensagens em fila ou uma matriz que contenha uma cópia numa determinado instantâneas - um instantâneo - da fila no momento de chamar o método especificado.&lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike a static snapshot, an enumerator allows you to modify the collection.</source>
          <target state="translated">Ao contrário de um instantâneo estático, um enumerador permite-lhe modificar a coleção.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a MessageEnumerator, you can remove messages from the queue, and the change is immediately reflected in the queue.</source>
          <target state="translated">Utilizar um MessageEnumerator, pode remover mensagens da fila, e a alteração é imediatamente refletida na fila.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator does not remove the messages from the queue when it queries the queue.</source>
          <target state="translated">Um enumerador não remove as mensagens da fila quando a consulta a fila.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns information about the message at the current cursor position, but it leaves the message in the queue.</source>
          <target state="translated">Devolve informações sobre a mensagem na posição atual do cursor, mas sai a mensagem na fila.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A MessageEnumerator is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">Um MessageEnumerator é um cursor, inicializado para o cabeçalho de uma lista dinâmica.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list order is the same as the order of the messages in the queue, according to message priority.</source>
          <target state="translated">A ordem da lista é a mesma que a ordem das mensagens na fila de acordo com a prioridade da mensagem.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can move the cursor to the first message in the queue by calling &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">Pode mover o cursor para a primeira mensagem da fila ao chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the enumerator has been initialized, you can use &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; to step forward through the remaining messages.</source>
          <target state="translated">Depois do enumerador foi inicializado, pode utilizar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;para seguir reencaminhar as mensagens restantes.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify whether to wait for a message to become available by passing a timeout into the &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; method.</source>
          <target state="translated">Pode especificar se a aguardar de uma mensagem para se tornar disponível através da transmissão de um tempo limite para o &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;método.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the enumerator is dynamic, a message that is appended beyond the cursor's current position (for example, due to low priority), can be accessed by the enumerator.</source>
          <target state="translated">Porque o enumerador for dinâmico, uma mensagem que é acrescentada para além da posição atual do cursor (por exemplo, devido a prioridade baixa), podem ser acedidos pelo enumerador.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A message that is inserted before the cursor's current position cannot be accessed.</source>
          <target state="translated">Uma mensagem que é inserida antes de posição atual do cursor não pode ser acedida.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not possible to step backward with a MessageEnumerator.</source>
          <target state="translated">Não é possível para trás passo com um MessageEnumerator.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cursor allows forward-only movement.</source>
          <target state="translated">Um cursor permite movimento apenas de reencaminhamento.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt; method enables you to place the cursor back at the beginning of the queue.</source>
          <target state="translated">O &lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;método permite-lhe colocar o cursor novamente no início da fila.&lt;/xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of MessageEnumerator for a given queue work independently.</source>
          <target state="translated">Instâncias do MessageEnumerator para uma determinada fila funcionam independentemente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create two MessageEnumerator instances that apply to the same queue.</source>
          <target state="translated">Pode criar duas instâncias de MessageEnumerator que se aplicam à mesma fila.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The changes that one MessageEnumerator makes to the messages in the queue will be reflected immediately in a second enumerator if the second enumerator is positioned before the first.</source>
          <target state="translated">As alterações que uma MessageEnumerator forma para as mensagens na fila serão imediatamente refletidas num enumerador segundo se o segundo o enumerador está posicionado antes do primeiro.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if two enumerators have the same position and one of them removes the message at that position, an exception is thrown if the other enumerator attempts to get the value of the &lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt; property on the now-deleted message.</source>
          <target state="translated">No entanto, se dois enumeradores tenham a mesma posição e um deles remove a mensagem nessa posição, é emitida uma exceção se a outro enumerador tentar obter o valor do &lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt;propriedade na mensagem eliminado por agora.&lt;/xref:System.Messaging.MessageEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you create an instance of &lt;xref:System.Messaging.MessageQueue&gt; with &lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName&gt; set to <ph id="ph2">`true`</ph>, no other application can modify the messages in your enumerator while you have the connection to the queue.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Se criar uma instância de &lt;xref:System.Messaging.MessageQueue&gt;com &lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName&gt;definido como <ph id="ph2">`true`</ph>, nenhuma outra aplicação pode modificar as mensagens existentes na sua enumerador enquanto tiver a ligação para a fila.&lt;/xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">Liberta os recursos associados com o enumerador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system retains an open handle to the queue during the lifetime of the cursor.</source>
          <target state="translated">O sistema operativo mantém um identificador aberto para a fila durante a duração do cursor.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished working with the enumerator, call Close to release the resources associated with the handle.</source>
          <target state="translated">Quando tiver concluído a trabalhar com o enumerador, chamada fechar para libertar os recursos associados com o identificador.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the current <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that this enumerator points to.</source>
          <target state="translated">Obtém atual <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que este enumerador aponta para.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is created, it points to the head of the queue, at a location before the first message.</source>
          <target state="translated">Quando o enumerador está criado, aponte para o cabeçalho da fila, numa localização antes da primeira mensagem.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, Current is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Neste caso, o atual não é válido e irá gerar uma exceção se está acessível.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; to position the cursor at the first message in the queue.</source>
          <target state="translated">Tem de chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;para posicione o cursor a primeira mensagem da fila.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The current message.</source>
          <target state="translated">A mensagem atual.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You called Current before the first call to &lt;xref:System.Messaging.MessageEnumerator.MoveNext<bpt id="p1">*</bpt>&gt;. The cursor is located before the first element of the message enumeration.       -or-       You called Current after a call to &lt;xref:System.Messaging.MessageEnumerator.MoveNext<ept id="p1">*</ept>&gt; had returned <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> (indicating the cursor is located after the last element of the message enumeration.)</source>
          <target state="translated">Chamado atual antes da primeira chamada para &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;. O cursor está localizado antes do primeiro elemento da enumeração de mensagem.       - ou - chamar atual depois de uma chamada para &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; tinha devolvido <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> (que indica que o cursor está localizado após o último elemento da enumeração de mensagem.)</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The message the enumerator is currently pointing to no longer exists.</source>
          <target state="translated">A mensagem que o enumerador está atualmente a apontar para já não existe.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It might have been deleted.</source>
          <target state="translated">Poderá ter sido eliminado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the native Message Queuing cursor handle used to browse messages in the queue.</source>
          <target state="translated">Obtém o colocação de mensagens em fila cursor identificador nativo utilizado para procurar mensagens na fila.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property contains the native handle to the enumeration.</source>
          <target state="translated">Esta propriedade contém o identificador nativo para a enumeração.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished working with the enumerator, call &lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt; to release this resource.</source>
          <target state="translated">Quando tiver concluído a trabalhar com o enumerador, chamar &lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt;para este recurso de versão.&lt;/xref:System.Messaging.MessageEnumerator.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The native cursor handle.</source>
          <target state="translated">O identificador nativo do cursor.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The handle does not exist.</source>
          <target state="translated">O identificador não existe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Versões de todos os recursos utilizados pelo <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Dispose allows the resources used by the &lt;xref:System.Messaging.MessageEnumerator&gt; to be reallocated for other purposes.</source>
          <target state="translated">Chamar Dispose permite que os recursos utilizados pelo &lt;xref:System.Messaging.MessageEnumerator&gt;para possível reatribuir porque para outros fins.&lt;/xref:System.Messaging.MessageEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre Dispose, consulte <bpt id="p1">[</bpt>recursos não geridos limpeza<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">Liberta os recursos não geridos utilizados pelo <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e opcionalmente liberta os recursos geridos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public &lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">Este método é denominado pelo público &lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;método e o &lt;xref:System.Object.Finalize%2A&gt;método.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>invoca protegida <ph id="ph2">`Dispose(Boolean)`</ph> método com o <ph id="ph3">`disposing`</ph> parâmetro definido como <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;invoca <ph id="ph1">`Dispose`</ph> com <ph id="ph2">`disposing`</ph> definido como <ph id="ph3">`false`</ph>.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Messaging.MessageEnumerator&gt; references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`true`</ph>, este método versões retidos por quaisquer objetos geridos de todos os recursos que este &lt;xref:System.Messaging.MessageEnumerator&gt;referências.&lt;/xref:System.Messaging.MessageEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o <ph id="ph1">`Dispose()`</ph> método de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Para libertar recursos geridos e; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> para libertar recursos apenas não geridos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next message in the queue, if one is currently available.</source>
          <target state="translated">Avança o enumerador para a mensagem seguinte na fila, se estiver atualmente disponível.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload returns immediately if there is no message in the queue.</source>
          <target state="translated">Esta sobrecarga de devolve imediatamente se não houver nenhuma mensagem na fila.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is another overload that waits a specified &lt;xref:System.TimeSpan&gt; for a message to arrive.</source>
          <target state="translated">Há outra sobrecarga que aguarda uma determinada &lt;xref:System.TimeSpan&gt;de uma mensagem a chegada.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, MoveNext returns <ph id="ph1">`false`</ph> to the calling method.</source>
          <target state="translated">Se uma mensagem não está atualmente disponível, porque a fila está vazia ou porque moveu além do último elemento da coleção, MoveNext devolve <ph id="ph1">`false`</ph> para o método de chamada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon creation, an enumerator is conceptually positioned before the first message of the queue, and the first call to MoveNext brings the first message of the queue into view.</source>
          <target state="translated">Após a criação, um enumerador está posicionado, essencialmente, antes da primeira mensagem da fila e a primeira chamada para MoveNext coloca a primeira mensagem da fila na vista.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was succesfully advanced to the next message; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has reached the end of the queue.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o enumerador foi com êxito avançado para a mensagem seguinte; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se o enumerador atingiu o fim da fila.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An exception specific to Message Queuing was thrown.</source>
          <target state="translated">Foi emitida uma exceção específica para a colocação de mensagens em fila.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next message in the queue.</source>
          <target state="translated">Avança o enumerador para a mensagem seguinte na fila.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the enumerator is positioned at the end of the queue, &lt;xref:System.Messaging.MessageEnumerator.MoveNext*&gt; waits until a message is available or the given timeout expires.</source>
          <target state="translated">Se o enumerador está posicionado no final da fila, &lt;xref:System.Messaging.MessageEnumerator.MoveNext*&gt;aguarda até que uma mensagem está disponível ou o tempo limite fornecido expira.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext*&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload waits if there is no message in the queue or if the cursor has reached the end of the queue.</source>
          <target state="translated">Esta sobrecarga de aguarda se não houver nenhuma mensagem na fila de espera ou se o cursor atingiu o fim da fila.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; waits the specified timeout.</source>
          <target state="translated">Se uma mensagem não está atualmente disponível porque a fila está vazia ou porque moveu além do último elemento da coleção, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;aguarda o tempo limite especificado.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is already at the end of the queue, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; only returns <ph id="ph1">`true`</ph> if the new message arrives within the specified time interval, has lower priority than all messages currently in the queue and is placed at the end of the queue.</source>
          <target state="translated">Se o cursor já está no final da fila, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;só devolve <ph id="ph1">`true`</ph> se chegar a nova mensagem dentro do intervalo de tempo especificado, tem de prioridade mais baixa que todas as mensagens actualmente na fila e é colocado no final da fila.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>An overload with no parameter returns immediately if no further messages are in the queue.</source>
          <target state="translated">Uma sobrecarga com nenhum parâmetro devolve imediatamente se não existem mensagens adicionais estão disponíveis na fila.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon creation, an enumerator is conceptually positioned before the first message of the enumeration, and the first call to &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; brings the first message of the enumeration into view.</source>
          <target state="translated">Após a criação, um enumerador concecionais está posicionado antes da primeira mensagem da enumeração e a primeira chamada para &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;coloca a primeira mensagem da enumeração numa vista.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; to wait for a message to be available if the enumerator is positioned at the end of the queue.</source>
          <target state="translated">O &lt;xref:System.TimeSpan&gt;de espera de uma mensagem a estar disponíveis se o enumerador está posicionado no final da fila.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator successfully advanced to the next message; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has reached the end of the queue and a message does not become available within the time specified by the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p3">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o enumerador produzida com êxito para a mensagem seguinte; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se o enumerador atingiu o fim da fila e uma mensagem não ficar disponível dentro do período de tempo especificado pelo <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p3">&lt;/code&gt;</ept> parâmetro.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value specified for the timeout parameter is invalid.</source>
          <target state="translated">O valor especificado para o parâmetro de tempo limite é inválido.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It might represent a negative number.</source>
          <target state="translated">-Pode representar um número negativo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An exception specific to Message Queuing was thrown.</source>
          <target state="translated">Foi emitida uma exceção específica para a colocação de mensagens em fila.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-or-       The timeout has expired.</source>
          <target state="translated">- ou - o tempo limite expirou.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Removes the current message from a transactional or non-transactional queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual a partir de uma fila transacional ou não transacional e devolve a mensagem para a aplicação de chamada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Não há nenhum tempo limite especificado de uma mensagem a chegada na fila.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>RemoveCurrent removes and returns the message at the cursor's current location.</source>
          <target state="translated">RemoveCurrent remove e devolve a mensagem na localização atual do cursor.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se estiver a utilizar o registo em diário de fila, removendo-a faz com que uma cópia que serão guardadas na fila de diário de alterações, tal como o &lt;xref:System.Messaging.MessageQueue&gt;dessa classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando remover a mensagem atual, o cursor é movido para a mensagem seguinte.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling RemoveCurrent.</source>
          <target state="translated">Não é necessário chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;depois de chamar RemoveCurrent.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</source>
          <target state="translated">Se chamar esta sobrecarga de uma fila transacional, a colocação de mensagens em fila cria uma única transação interna.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que referencia a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Removes the current message from a transactional queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual a partir de uma fila transacional e devolve a mensagem para a aplicação de chamada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Não há nenhum tempo limite especificado de uma mensagem a chegada na fila.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location, using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e devolve a mensagem na localização atual do cursor, utilizando o contexto de transação interna definido pelo <ph id="ph1">`transaction`</ph> parâmetro.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se estiver a utilizar o registo em diário de fila, removendo-a faz com que uma cópia que serão guardadas na fila de diário de alterações, tal como o &lt;xref:System.Messaging.MessageQueue&gt;dessa classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Ao trabalhar com as filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;deve ser devolvida para a fila.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">A remoção não é irreversível até que a transação foi consolidada.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando remover a mensagem atual, o cursor é movido para a mensagem seguinte.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Não é necessário chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;depois de chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies the transaction in which the message will be removed.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que especifica a transação em que a mensagem será removida.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que referencia a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Removes the current message from a queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual a partir de uma fila e devolve a mensagem para a aplicação de chamada.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Não há nenhum tempo limite especificado de uma mensagem a chegada na fila.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location, using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e devolve a mensagem na localização atual do cursor, utilizando um contexto de transação definido pelo <ph id="ph1">`transactionType`</ph> parâmetro.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">Especifique <ph id="ph1">`Automatic`</ph> para o <ph id="ph2">`transactionType`</ph> parâmetro se já existir um contexto de transação externa ligada para o thread que pretende utilizar para receber a mensagem.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">Especifique <ph id="ph1">`Single`</ph> se pretender receber a mensagem como uma única transação interna.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">Pode especificar <ph id="ph1">`None`</ph> se pretender receber uma mensagem a partir de uma fila transacional fora de um contexto de transação.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se estiver a utilizar o registo em diário de fila, removendo-a faz com que uma cópia que serão guardadas na fila de diário de alterações, tal como o &lt;xref:System.Messaging.MessageQueue&gt;dessa classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Ao trabalhar com as filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;deve ser devolvida para a fila.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">A remoção não é irreversível até que a transação foi consolidada.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando remover a mensagem atual, o cursor é movido para a mensagem seguinte.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Não é necessário chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;depois de chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated">Um do <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valores, que descreve o tipo de contexto de transação para associar a mensagem.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que referencia a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> members.</source>
          <target state="translated">O <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">transactionType</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro não é um do <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> membros.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Removes the current message from the queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual da fila e devolve a mensagem para a aplicação de chamada.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Se existir uma mensagem para remover, o método devolve a mesma imediatamente.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">Caso contrário, o método tem de aguardar o tempo limite especificado para uma nova mensagem de chegada.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e devolve a mensagem na localização atual do cursor.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Se o cursor no fim da fila, esta sobrecarga do método aguarda até que o intervalo especificado por ou uma mensagem está disponível a <ph id="ph1">`timeout`</ph> parâmetro expirou.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se estiver a utilizar o registo em diário de fila, removendo-a faz com que uma cópia que serão guardadas na fila de diário de alterações, tal como o &lt;xref:System.Messaging.MessageQueue&gt;dessa classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando remover a mensagem atual, o cursor é movido para a mensagem seguinte.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Não é necessário chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;depois de chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</source>
          <target state="translated">Se chamar esta sobrecarga de uma fila transacional, a colocação de mensagens em fila cria uma única transação interna.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The interval of time to wait for a message to arrive in the queue.</source>
          <target state="translated">Intervalo de tempo de espera de uma mensagem a chegada na fila.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que referencia a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated">O valor especificado para o <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro é inválido.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The timeout has expired.</source>
          <target state="translated">O tempo limite expirou.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Removes the current message from a transactional queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual a partir de uma fila transacional e devolve a mensagem para a aplicação de chamada.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Se existir uma mensagem para remover, o método devolve a mesma imediatamente.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">Caso contrário, o método tem de aguardar o tempo limite especificado para uma nova mensagem de chegada.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e devolve a mensagem na localização atual do cursor.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Se o cursor no fim da fila, esta sobrecarga do método aguarda até que o intervalo especificado por ou uma mensagem está disponível a <ph id="ph1">`timeout`</ph> parâmetro expirou.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Ao trabalhar com as filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;deve ser devolvida para a fila.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">A remoção não é irreversível até que a transação foi consolidada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se estiver a utilizar o registo em diário de fila, removendo-a faz com que uma cópia que serão guardadas na fila de diário de alterações, tal como o &lt;xref:System.Messaging.MessageQueue&gt;dessa classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando remover a mensagem atual, o cursor é movido para a mensagem seguinte.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Não é necessário chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;depois de chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The interval of time to wait for the message to be removed.</source>
          <target state="translated">Intervalo de tempo de espera para a mensagem a serem removidos.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies the transaction context for the message.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que especifica o contexto de transação para a mensagem.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que referencia a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated">O valor especificado para o <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro é inválido.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The timeout has expired.</source>
          <target state="translated">O tempo limite expirou.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Removes the current message from a queue and returns the message to the calling application.</source>
          <target state="translated">Remove a mensagem atual a partir de uma fila e devolve a mensagem para a aplicação de chamada.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Se existir uma mensagem para remover, o método devolve a mesma imediatamente.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">Caso contrário, o método tem de aguardar o tempo limite especificado para uma nova mensagem de chegada.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location, using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;Remove e devolve a mensagem na localização atual do cursor, utilizando um contexto de transação definido pelo <ph id="ph1">`transactionType`</ph> parâmetro.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Se o cursor no fim da fila, esta sobrecarga do método aguarda até que o intervalo especificado por ou uma mensagem está disponível a <ph id="ph1">`timeout`</ph> parâmetro expirou.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">Especifique <ph id="ph1">`Automatic`</ph> para o <ph id="ph2">`transactionType`</ph> parâmetro se já existir um contexto de transação externa ligada para o thread que pretende utilizar para receber a mensagem.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">Especifique <ph id="ph1">`Single`</ph> se pretender receber a mensagem como uma única transação interna.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">Pode especificar <ph id="ph1">`None`</ph> se pretender receber uma mensagem a partir de uma fila transacional fora de um contexto de transação.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Se estiver a utilizar o registo em diário de fila, removendo-a faz com que uma cópia que serão guardadas na fila de diário de alterações, tal como o &lt;xref:System.Messaging.MessageQueue&gt;dessa classe &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;método.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Ao trabalhar com as filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;deve ser devolvida para a fila.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">A remoção não é irreversível até que a transação foi consolidada.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Quando remover a mensagem atual, o cursor é movido para a mensagem seguinte.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">Não é necessário chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;depois de chamar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The interval of time to wait for the message to be removed.</source>
          <target state="translated">Intervalo de tempo de espera para a mensagem a serem removidos.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated">Um do <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valores, que descreve o tipo de contexto de transação para associar a mensagem.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que referencia a primeira mensagem disponível na fila.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated">O valor especificado para o <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro é inválido.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The timeout has expired.</source>
          <target state="translated">O tempo limite expirou.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> members.</source>
          <target state="translated">O <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">transactionType</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro não é um do <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> membros.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Resets the current enumerator so it points to the head of the queue.</source>
          <target state="translated">Repõe o enumerador atual para que aponte para o cabeçalho da fila.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator can only move in a forward direction.</source>
          <target state="translated">Um enumerador só pode mover uma direção de reencaminhar.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to start over at the beginning of the queue.</source>
          <target state="translated">Utilize este método para começar de novo no início da fila.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Reset, the cursor points to the first message.</source>
          <target state="translated">Depois de chamar reposição, o cursor aponta para a primeira mensagem.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling Reset to move the cursor forward to the first message in the queue.</source>
          <target state="translated">Não é necessário chamar &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;após chamar Reset para mover o cursor reencaminhar para a primeira mensagem da fila.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the message at the current cursor position.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que referencia a mensagem na posição atual do cursor.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the message at the current cursor position.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que referencia a mensagem na posição atual do cursor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>