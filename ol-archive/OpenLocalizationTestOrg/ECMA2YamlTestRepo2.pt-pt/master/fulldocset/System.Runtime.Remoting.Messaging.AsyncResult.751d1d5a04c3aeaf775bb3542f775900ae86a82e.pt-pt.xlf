<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a67d37a89ee4c73e68c5be9c05bf11c3ab7ca3c1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.Messaging.AsyncResult.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e4363fc4dfaf610cfe217086f1225890c4e8c58</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">609e77d854a729b6553a17bd13fcc620819d300c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates the results of an asynchronous operation on a delegate.</source>
          <target state="translated">Encapsula os resultados de uma operação assíncrona num delegado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AsyncResult class is used in conjunction with asynchronous method calls made using delegates.</source>
          <target state="translated">A classe AsyncResult é utilizada em conjunto com as chamadas de método assíncronas através de delegados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IAsyncResult&gt; returned from the delegate's <ph id="ph1">`BeginInvoke`</ph> method can be cast to an AsyncResult.</source>
          <target state="translated">O &lt;xref:System.IAsyncResult&gt;devolveu o delegado <ph id="ph1">`BeginInvoke`</ph> método pode ser convertido para AsyncResult.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AsyncResult has the &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A&gt; property that holds the delegate object on which the asynchronous call was invoked.</source>
          <target state="translated">O AsyncResult tem o &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A&gt;propriedade que contém o delegado de objeto no qual a chamada assíncrona foi invocada.&lt;/xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`BeginInvoke`</ph> and asynchronous calls using delegates, see <bpt id="p1">[</bpt>Asynchronous Programming Using Delegates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`BeginInvoke`</ph> e chamadas assíncronas utilizando delegados, consulte <bpt id="p1">[</bpt>delegados através de programação assíncrona<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets the delegate object on which the asynchronous call was invoked.</source>
          <target state="translated">Obtém o objeto de delegado em que a chamada assíncrona foi invocada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AsyncDelegate property can be cast to the actual class of the user-defined delegate.</source>
          <target state="translated">A propriedade AsyncDelegate pode ser convertida para a classe real do delegado definido pelo utilizador.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the delegate that was used to make the asynchronous call is of type <ph id="ph1">`MyDelegate`</ph>, the delegate that is returned by this property must be cast to <ph id="ph2">`MyDelegate`</ph>.</source>
          <target state="translated">Por exemplo, se o delegado que foi utilizado para efetuar a chamada assíncrona é do tipo <ph id="ph1">`MyDelegate`</ph>, delegado que é devolvido por esta propriedade tem de ser convertido para <ph id="ph2">`MyDelegate`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback method can then call the delegate's <ph id="ph1">`EndInvoke`</ph> method with the correct signature, in order to obtain the results of the asynchronous method call.</source>
          <target state="translated">O método de chamada de retorno, em seguida, pode chamar o delegado <ph id="ph1">`EndInvoke`</ph> método com a assinatura correta, para obter os resultados da chamada de método assíncronas.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The delegate object on which the asynchronous call was invoked.</source>
          <target state="translated">O objeto de delegado em que a chamada assíncrona foi invocada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">Implementa o <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> interface.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AsyncProcessMessage method of the &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink&gt; interface is not relevant to the &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt; class.</source>
          <target state="translated">O método de AsyncProcessMessage da &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink&gt;interface é não sejam relevante para a &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;classe.&lt;/xref:System.Runtime.Remoting.Messaging.AsyncResult&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMessageSink&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementation by &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt; throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">Implementação por &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;emite &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, obtain an &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt; by casting the &lt;xref:System.IAsyncResult&gt; interface returned by an asynchronous call made using a delegate.</source>
          <target state="translated">Em vez disso, obter um &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;por conversão o &lt;xref:System.IAsyncResult&gt;interface devolvido por uma chamada assíncrona através de um delegado.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The request <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">O pedido <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> interface.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The response <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">A resposta <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> interface.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>No value is returned.</source>
          <target state="translated">Não é devolvido nenhum valor.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the object provided as the last parameter of a <bpt id="p1">&lt;xref uid="langword_csharp_BeginInvoke" name="BeginInvoke" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method call.</source>
          <target state="translated">Obtém o objeto fornecido como o último parâmetro de um <bpt id="p1">&lt;xref uid="langword_csharp_BeginInvoke" name="BeginInvoke" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> chamada de método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the <ph id="ph1">`BeginInvoke`</ph> method, see <bpt id="p1">[</bpt>Asynchronous Programming Using Delegates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o <ph id="ph1">`BeginInvoke`</ph> método, consulte <bpt id="p1">[</bpt>delegados através de programação assíncrona<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The object provided as the last parameter of a <bpt id="p1">&lt;xref uid="langword_csharp_BeginInvoke" name="BeginInvoke" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method call.</source>
          <target state="translated">O objecto fornecido como o último parâmetro de um <bpt id="p1">&lt;xref uid="langword_csharp_BeginInvoke" name="BeginInvoke" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> chamada de método.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Threading.WaitHandle&gt; that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</source>
          <target state="translated">Obtém um &lt;xref:System.Threading.WaitHandle&gt;que encapsula Win32 os identificadores de sincronização e permite que a implementação de vários esquemas de sincronização.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.WaitHandle&gt; returned by this method is automatically signaled when the asynchronous operation has completed.</source>
          <target state="translated">O &lt;xref:System.Threading.WaitHandle&gt;devolvido por este método é automaticamente assinalou quando a operação assíncrona foi concluída.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The wait handle is not closed automatically when you call <ph id="ph1">`EndInvoke`</ph> on the delegate that was used to make the asynchronous method call.</source>
          <target state="translated">O identificador de espera não estiver fechado automaticamente quando chamar <ph id="ph1">`EndInvoke`</ph> no delegado que foi utilizado para efetuar o chamada de método assíncronas.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle.</source>
          <target state="translated">Se a versão todas as referências para o identificador de espera, recursos de sistema são libertados quando a libertação da memória reclama o identificador de espera.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>To free the system resources as soon as you are finished using the wait handle, call the &lt;xref:System.Threading.WaitHandle.Close%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Para libertar os recursos do sistema assim que tiver terminado de utilizando o identificador de espera, chame o &lt;xref:System.Threading.WaitHandle.Close%2A?displayProperty=fullName&gt;método.&lt;/xref:System.Threading.WaitHandle.Close%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</source>
          <target state="translated">Recolha de lixo funciona de forma mais eficiente quando objetos disposable explicitamente fechados ou eliminados.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The &lt;xref:System.Threading.WaitHandle&gt; contained in the AsyncWaitHandle property can be used to block the current thread until the asynchronous call is complete.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; O &lt;xref:System.Threading.WaitHandle&gt;contidas no AsyncWaitHandle propriedade pode ser utilizada para bloquear o thread atual até que a chamada assíncrona foi concluída.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>However the &lt;xref:System.Threading.WaitHandle&gt; will ignore the &lt;xref:System.AsyncCallback&gt;, if one was specified during the <ph id="ph1">`BeginInvoke`</ph> call.</source>
          <target state="translated">No entanto, a &lt;xref:System.Threading.WaitHandle&gt;irão ignorar a &lt;xref:System.AsyncCallback&gt;, se foi especificado durante o <ph id="ph1">`BeginInvoke`</ph> chamar.&lt;/xref:System.AsyncCallback&gt; &lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, a situation can occur where the application shuts down before the &lt;xref:System.AsyncCallback&gt; has finished executing, even if a &lt;xref:System.Threading.WaitHandle&gt; is used to block until the asynchronous call completion.</source>
          <target state="translated">Por conseguinte, pode ocorrer uma situação em que a aplicação será encerrado a antes do &lt;xref:System.AsyncCallback&gt;terminou a execução, mesmo se um &lt;xref:System.Threading.WaitHandle&gt;é utilizado para o bloco de até a conclusão de chamada assíncrona.&lt;/xref:System.Threading.WaitHandle&gt; &lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of such a situation, see the example for the &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt; class, and remove the &lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt; statement.</source>
          <target state="translated">Para obter um exemplo de uma situação deste tipo, consulte o exemplo para o &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;classe e remova o &lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt;instrução.&lt;/xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Threading.WaitHandle&gt; that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</source>
          <target state="translated">A &lt;xref:System.Threading.WaitHandle&gt;que encapsula Win32 os identificadores de sincronização e permite que a implementação de vários esquemas de sincronização.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref uid="langword_csharp_BeginInvoke" name="BeginInvoke" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> call completed synchronously.</source>
          <target state="translated">Obtém um valor que indica se o <bpt id="p1">&lt;xref uid="langword_csharp_BeginInvoke" name="BeginInvoke" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> chamada concluída de forma síncrona.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is detected that the <ph id="ph1">`BeginInvoke`</ph> call completed synchronously in the &lt;xref:System.AsyncCallback&gt; delegate, it is probable that the thread that called BeginInvoke is the current thread.</source>
          <target state="translated">Se for detetado que o <ph id="ph1">`BeginInvoke`</ph> chamada concluída de forma síncrona no &lt;xref:System.AsyncCallback&gt;delegado, é provável que o thread chamado BeginInvoke é o thread actual.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most providers of the &lt;xref:System.IAsyncResult&gt; interface will not use the capability and will return a default <ph id="ph1">`false`</ph>.</source>
          <target state="translated">A maioria dos fornecedores do &lt;xref:System.IAsyncResult&gt;interface não irá utilizar a capacidade e irá devolver uma predefinição <ph id="ph1">`false`</ph>.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current implementation of CompletedSynchronously always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Devolve a implementação atual de CompletedSynchronously sempre <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_BeginInvoke" name="BeginInvoke" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> call completed synchronously; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o <bpt id="p2">&lt;xref uid="langword_csharp_BeginInvoke" name="BeginInvoke" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> chamada concluída de forma síncrona; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether <bpt id="p1">&lt;xref uid="langword_csharp_EndInvoke" name="EndInvoke" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been called on the current <bpt id="p2">&lt;xref href="System.Runtime.Remoting.Messaging.AsyncResult"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém ou define um valor que indica se <bpt id="p1">&lt;xref uid="langword_csharp_EndInvoke" name="EndInvoke" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ter sido chamado na atual <bpt id="p2">&lt;xref href="System.Runtime.Remoting.Messaging.AsyncResult"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;xref uid="langword_csharp_EndInvoke" name="EndInvoke" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been called on the current <bpt id="p3">&lt;xref href="System.Runtime.Remoting.Messaging.AsyncResult"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se <bpt id="p2">&lt;xref uid="langword_csharp_EndInvoke" name="EndInvoke" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ter sido chamado na atual <bpt id="p3">&lt;xref href="System.Runtime.Remoting.Messaging.AsyncResult"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>; caso contrário, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the response message for the asynchronous call.</source>
          <target state="translated">Obtém a mensagem de resposta para a chamada assíncrona.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetReplyMessage method can return an object after the &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A&gt; method is called.</source>
          <target state="translated">O método de GetReplyMessage pode devolver um objeto após a &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A&gt;método é chamado.&lt;/xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; return value can be cast to an &lt;xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;Devolver o valor pode ser convertido para um &lt;xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt;.&lt;/xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMessage&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you do not need to call either of these methods directly.</source>
          <target state="translated">No entanto, não terá de chamar um dos seguintes métodos diretamente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are intended for use by the remoting infrastructure of the .NET Framework.</source>
          <target state="translated">Foram concebidos para utilização pela infraestrutura de comunicação remota do .NET Framework.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A remoting message that should represent a response to a method call on a remote object.</source>
          <target state="translated">Uma mensagem de comunicação remota que deveriam representar uma resposta a uma chamada de método num objecto remoto.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the server has completed the call.</source>
          <target state="translated">Obtém um valor que indica se o servidor foi concluída a chamada.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The server must not use any client supplied resources outside of the agreed upon sharing semantics after it sets the IsCompleted property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">O servidor não podem utilizar quaisquer recursos de cliente fornecido fora de definido após a semântica de partilha, depois, define a propriedade IsCompleted <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, it is safe for the client to destroy the resources after the IsCompleted property returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Assim, é seguro para o cliente destruir os recursos após a propriedade IsCompleted devolve <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> after the server has completed the call; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Depois do servidor foi concluída a chamada; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the next message sink in the sink chain.</source>
          <target state="translated">Obtém o sink de mensagem seguinte na cadeia de sink.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current implementation of NextSink returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Devolve a implementação atual de NextSink <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface that represents the next message sink in the sink chain.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> sink de interface que representa a mensagem seguinte na cadeia de sink.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Sets an <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageCtrl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the current remote method call, which provides a way to control asynchronous messages after they have been dispatched.</source>
          <target state="translated">Define um <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageCtrl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para a chamada de método remota atual, que fornece uma forma de controlar mensagens assíncronas depois que tem sido emitidas.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to call the SetMessageCtrl method.</source>
          <target state="translated">Não é necessário chamar o método SetMessageCtrl.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageCtrl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the current remote method call.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessageCtrl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para a chamada de método remoto atual.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Synchronously processes a response message returned by a method call on a remote object.</source>
          <target state="translated">Uma mensagem de resposta devolvida por uma chamada de método num objecto remoto é processada de forma síncrona.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SyncProcessMessage method implements the &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink&gt; interface.</source>
          <target state="translated">O método SyncProcessMessage implementa o &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink&gt;interface.&lt;/xref:System.Runtime.Remoting.Messaging.IMessageSink&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to call this method directly.</source>
          <target state="translated">Não é necessário chamar este método diretamente.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is intended for use by the remoting infrastructure of the .NET Framework.</source>
          <target state="translated">Destina-se para utilizar a infraestrutura de comunicação remota do .NET Framework.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>SyncProcessMessage invokes the consumer code's &lt;xref:System.AsyncCallback&gt; delegate.</source>
          <target state="translated">SyncProcessMessage invoca o código de consumidor &lt;xref:System.AsyncCallback&gt;Delegar.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also sets the &lt;xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt; instance returned by the &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A&gt; method.</source>
          <target state="translated">Define também o &lt;xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt;instância devolvida pelo &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A&gt;método.&lt;/xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`msg`</ph> parameter is of type &lt;xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt;, the same object is returned by &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A&gt;.</source>
          <target state="translated">Se o <ph id="ph1">`msg`</ph> o parâmetro é do tipo &lt;xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt;o mesmo objeto é devolvido pelo &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A&gt;.&lt;/xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, a reply message that contains a remoting exception is returned.</source>
          <target state="translated">Caso contrário, é devolvida uma mensagem de resposta com uma exceção de comunicação remota.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>SyncProcessMessage also modifies the value returned by the &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A&gt; property.</source>
          <target state="translated">SyncProcessMessage também modifica o valor devolvido pelo &lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A&gt;propriedade.&lt;/xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A response message to a method call on a remote object.</source>
          <target state="translated">Uma mensagem de resposta a uma chamada de método num objecto remoto.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>