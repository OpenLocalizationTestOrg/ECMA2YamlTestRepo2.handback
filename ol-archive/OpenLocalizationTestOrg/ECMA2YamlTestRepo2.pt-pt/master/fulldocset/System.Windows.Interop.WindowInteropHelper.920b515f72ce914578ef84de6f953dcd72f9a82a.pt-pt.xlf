<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4630f91e3baca4c8c73026f92f6ba246ae29a8e1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Interop.WindowInteropHelper.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a996eefd90f00f2c60dcacf7f609cfccd1c5f2a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b86cfff4608a46f453ed9a38fd30635f7c287a1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Assists interoperation between <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> code.</source>
          <target state="translated">Ajuda a interoperacionalidade entre <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> e <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> código.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Members of this class allows the caller to have internal access to the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> HWND and the parent HWND of a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">Os membros desta classe permite ao chamador tenham acesso interno para o <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> HWND e HWND principal de um <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> &lt;xref:System.Windows.Window&gt;.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The proper security checks are performed by those members.</source>
          <target state="translated">Os membros são efetuadas as verificações de segurança adequada.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this class whenever you need a more specific object based on its HWND.</source>
          <target state="translated">Utilize esta classe sempre que precisar de um objeto mais específico com base no respetivo HWND.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example scenario is if you need to host a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dialog box in a <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> application.</source>
          <target state="translated">Um cenário de exemplo é se de que necessita alojar um <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> caixa de diálogo num <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> aplicação.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initialize the WindowInteropHelper with a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> window object for the dialog box.</source>
          <target state="translated">Inicializar o WindowInteropHelper com um <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> objeto de janela para a caixa de diálogo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then get the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> window's handle (HWND) from the &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; property and specify the owner for the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> window with the &lt;xref:System.Windows.Interop.WindowInteropHelper.Owner%2A&gt; property.</source>
          <target state="translated">Em seguida, pode obter o <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> identificador da janela (HWND) da &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;propriedade e especifique o proprietário para o <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> janela com o &lt;xref:System.Windows.Interop.WindowInteropHelper.Owner%2A&gt;propriedade.&lt;/xref:System.Windows.Interop.WindowInteropHelper.Owner%2A&gt; &lt;/xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to use WindowInteropHelper when hosting a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dialog box in a <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> application.</source>
          <target state="translated">Exemplo de código seguinte mostra como utilizar WindowInteropHelper quando alojam um <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> caixa de diálogo num <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> aplicação.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>CorePseudocode#WindowInteropHelper<ept id="p2">](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#windowinterophelper)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CorePseudocode#WindowInteropHelper<ept id="p4">](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#windowinterophelper)</ept><ept id="p3">]</ept>       Another scenario supported by this class is to obtain a &lt;xref:System.Windows.Interop.HwndSource&gt; object from a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> &lt;xref:System.Windows.Window&gt; object.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>CorePseudocode #WindowInteropHelper<ept id="p2">](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#windowinterophelper)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CorePseudocode #WindowInteropHelper<ept id="p4">](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#windowinterophelper)</ept> <ept id="p3">]</ept> outro cenário suportado por esta classe é a obter um &lt;xref:System.Windows.Interop.HwndSource&gt;objeto a partir de um <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> &lt;xref:System.Windows.Window&gt;objeto.&lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Interop.HwndSource&gt;  </target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Interop.HwndSource&gt; enables direct processing of <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> messages through the &lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; method.</source>
          <target state="translated">O &lt;xref:System.Windows.Interop.HwndSource&gt;permite direcionar o processamento de <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> mensagens através de &lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;método.&lt;/xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; &lt;/xref:System.Windows.Interop.HwndSource&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using &lt;xref:System.Windows.Interop.HwndSource&gt; and &lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; in place of a &lt;xref:System.Windows.Window&gt; you can still handle messages that have no equivalent or handling in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">Ao utilizar &lt;xref:System.Windows.Interop.HwndSource&gt;e &lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;em vez de um &lt;xref:System.Windows.Window&gt;ainda pode processar as mensagens com não equivalente ou processamento no <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.&lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; &lt;/xref:System.Windows.Interop.HwndSource&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a WindowInteropHelper with the &lt;xref:System.Windows.Window&gt; source, then call &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; on the WindowInteropHelper to get from HWND to &lt;xref:System.Windows.Interop.HwndSource&gt;.</source>
          <target state="translated">Criar um WindowInteropHelper com a &lt;xref:System.Windows.Window&gt;origem, em seguida, invoque &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;o WindowInteropHelper para aproveitar HWND para &lt;xref:System.Windows.Interop.HwndSource&gt;.&lt;/xref:System.Windows.Interop.HwndSource&gt; &lt;/xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Interop.WindowInteropHelper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a specified <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> window.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Windows.Interop.WindowInteropHelper"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe para uma determinada <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> janela.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> application.</source>
          <target state="translated">A janela pode ter uma caixa de diálogo, ou uma janela que caso contrário, não é adequada para a ser alojado dentro dos limites de um <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> aplicação.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> window object.</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> objeto de janela.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creates the HWND of the window if the HWND has not been created yet.</source>
          <target state="translated">Cria o HWND da janela, se o HWND ainda não foi criado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the EnsureHandle method when you want to separate window handle (HWND) creation from the actual showing of the managed &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">Utilize o método de EnsureHandle quando pretender separar janela identificador (HWND) a criação do apresentado real de gerido &lt;xref:System.Windows.Window&gt;.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.</source>
          <target state="translated">Isto é útil quando tiver um cliente de automatização que pode realizar as respetivas tarefas sem a necessidade de que mostra uma janela.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the native window has not yet been created, this method creates the native window, sets the &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; property, and returns the HWND.</source>
          <target state="translated">Se a janela nativa ainda não tiver sido criada, este método cria a janela nativa, define o &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;propriedade e devolve o HWND.&lt;/xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the native window has been created already, the handle of the existing native window is returned.</source>
          <target state="translated">Se a janela nativa já foi criada, é devolvido o identificador da janela nativo existente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the native window is created as a result of calling this method, the &lt;xref:System.Windows.Window.SourceInitialized&gt; event is raised.</source>
          <target state="translated">Se a janela nativa é criada como resultado de chamar este método, o &lt;xref:System.Windows.Window.SourceInitialized&gt;o evento é gerado.&lt;/xref:System.Windows.Window.SourceInitialized&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Querying the &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; property after the EnsureHandle method is called returns the existing window handle.</source>
          <target state="translated">Consultar o &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;propriedade depois do método EnsureHandle é chamado devolve o identificador de janela existente.&lt;/xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The visual tree is not attached to the window until after the &lt;xref:System.Windows.Window.Show%2A&gt; method is called.</source>
          <target state="translated">A árvore visual não está ligada a janela até depois do &lt;xref:System.Windows.Window.Show%2A&gt;método é chamado.&lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the EnsureHandle method more than one time does not create new window handles.</source>
          <target state="translated">Chamar o método de EnsureHandle mais do que uma vez não criar novos identificadores de janela.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the EnsureHandle method when the handle has already been created by a call to the &lt;xref:System.Windows.Window.Show%2A&gt; method does not create a new window handle.</source>
          <target state="translated">Chamar o método de EnsureHandle quando o identificador já tiver sido criado por uma chamada para o &lt;xref:System.Windows.Window.Show%2A&gt;método não cria um novo identificador de janela.&lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A native window is only created when no handle exists when the EnsureHandle method is called.</source>
          <target state="translated">Uma janela nativa só é criada quando nenhum identificador existe quando o método EnsureHandle é chamado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs.</source>
          <target state="translated">Propriedades de janela que são definidas utilizando nativa janela APIs através de p/invoke não podem aparecer na janela gerida APIs.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the EnsureHandle method is called, the &lt;xref:System.Windows.Window.Topmost%2A&gt; property is not guaranteed to reflect the native setting.</source>
          <target state="translated">Por exemplo, se definir a janela para ser mais superiores ao utilizar o sinalizador MS_EX_TOPMOST nativo após o método EnsureHandle é chamado, o &lt;xref:System.Windows.Window.Topmost%2A&gt;propriedade não é assegurada para refletir a definição nativa.&lt;/xref:System.Windows.Window.Topmost%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; that represents the HWND.</source>
          <target state="translated">Um &lt;xref:System.IntPtr&gt;que representa o HWND.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the window handle for a <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> window that is used to create this <bpt id="p1">&lt;xref href="System.Windows.Interop.WindowInteropHelper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém o identificador de janela para um <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> janela que é utilizada para criar esta <bpt id="p1">&lt;xref href="System.Windows.Interop.WindowInteropHelper"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> window handle (HWND).</source>
          <target state="translated">O <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> identificador de janela (HWND).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the handle of the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> owner window.</source>
          <target state="translated">Obtém ou define o identificador do <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> janela de proprietário.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can reparent windows by setting this property.</source>
          <target state="translated">Pode reparent windows ao definir esta propriedade.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>As is true for general <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> programming, do not reparent windows that are already in use.</source>
          <target state="translated">Como é verdadeiro para geral <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> de programação, não reparent windows que já estão em utilização.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The owner window handle (HWND).</source>
          <target state="translated">O identificador de janela de proprietário (HWND).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>