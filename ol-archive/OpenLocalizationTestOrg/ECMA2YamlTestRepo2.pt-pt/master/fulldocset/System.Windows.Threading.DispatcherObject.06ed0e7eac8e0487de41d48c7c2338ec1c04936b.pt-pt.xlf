<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dccb4aa4f25f3fea9a69d3e9e4ca0a7c46d2d816</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Threading.DispatcherObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cc17fbab308215568ca2ac25fd77172f9443feb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec931dc4703c807b6b08a63d6ffda0b7ea3dbcb3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an object that is associated with a <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Representa um objeto que está associado um <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the thread that the &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt; was created on may access the DispatcherObject directly.</source>
          <target state="translated">Apenas o thread que o &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;foi criado no pode aceder a DispatcherObject diretamente.&lt;/xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access a DispatcherObject from a thread other than the thread the DispatcherObject was created on, call &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; or &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; on the &lt;xref:System.Windows.Threading.Dispatcher&gt; the DispatcherObject is associated with.</source>
          <target state="translated">Para aceder a um DispatcherObject de um thread diferente do thread onde foi criado o DispatcherObject num, chame &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;ou &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;no &lt;xref:System.Windows.Threading.Dispatcher&gt;se encontra associado a DispatcherObject.&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subclasses of DispatcherObject that need to enforce thread safety can do so by calling &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; on all public methods.</source>
          <target state="translated">As subclasses de DispatcherObject que têm de impor a segurança de thread é o que pretende chamando &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;em todos os métodos públicos.&lt;/xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This guarantees the calling thread is the thread that the DispatcherObject was created on.</source>
          <target state="translated">Isto garante que o thread de chamada é o thread que o DispatcherObject foi criada no.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A DispatcherObject cannot be independently instantiated; that is, all constructors are protected.</source>
          <target state="translated">Não é possível instanciar independentemente um DispatcherObject; ou seja, todos os construtores são protegidos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects that derive from DispatcherObject have thread affinity.</source>
          <target state="translated">Objetos que derivem de DispatcherObject têm afinidade de threads.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects that derive from &lt;xref:System.Windows.Freezable&gt; are free-threaded when they are frozen.</source>
          <target state="translated">Objetos que derivem de &lt;xref:System.Windows.Freezable&gt;são free-threaded quando estes são interrompidas.&lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte o <bpt id="p1">[</bpt>descrição geral de objetos Freezable<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Determines whether the calling thread has access to this <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Determina se o thread de chamada tem acesso a este <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the thread the &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt; was created on may access the &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">Apenas o thread de &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;foi criado no possam aceder &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any thread can check to see whether it has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">Qualquer thread pode verificar se tem acesso a este &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The difference between CheckAccess and &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; is that CheckAccess returns a Boolean that specifies whether the calling thread has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt; and &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; throws an exception if the calling thread does not have access to the this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">A diferença entre CheckAccess e &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;é que CheckAccess devolve um valor booleano que especifica se o thread de chamada tem acesso a este &lt;xref:System.Windows.Threading.DispatcherObject&gt;e &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;emite uma exceção se o thread de chamada não tiver acesso a esta &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is identical to calling &lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt; on the associated &lt;xref:System.Windows.Threading.Dispatcher&gt; object.</source>
          <target state="translated">Chamar este método é idêntico ao chamar &lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;no associada &lt;xref:System.Windows.Threading.Dispatcher&gt;objeto.&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the calling thread has access to this object; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o thread de chamada tem acesso a este objeto; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this <bpt id="p2">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is associated with.</source>
          <target state="translated">Obtém o <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> isto <bpt id="p2">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> está associado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the thread that the Dispatcher was created on may access the &lt;xref:System.Windows.Threading.DispatcherObject&gt; directly.</source>
          <target state="translated">Apenas o que o emissor foi criado num thread pode aceder a &lt;xref:System.Windows.Threading.DispatcherObject&gt;diretamente.&lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access a &lt;xref:System.Windows.Threading.DispatcherObject&gt; from a thread other than the thread the &lt;xref:System.Windows.Threading.DispatcherObject&gt; was created on, call &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; and &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; on the &lt;xref:System.Windows.Threading.Dispatcher&gt; the &lt;xref:System.Windows.Threading.DispatcherObject&gt; is associated with.</source>
          <target state="translated">Para acesso um &lt;xref:System.Windows.Threading.DispatcherObject&gt;de um thread diferente do thread onde o &lt;xref:System.Windows.Threading.DispatcherObject&gt;foi criado, chame &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;e &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;no &lt;xref:System.Windows.Threading.Dispatcher&gt;o &lt;xref:System.Windows.Threading.DispatcherObject&gt;está associado.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The dispatcher.</source>
          <target state="translated">O dispatcher.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Enforces that the calling thread has access to this <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Impõe que o thread de chamada tem acesso a este <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the thread the &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt; was created on may access the &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">Apenas o thread de &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;foi criado no possam aceder &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any thread can check to see whether it has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">Qualquer thread pode verificar se tem acesso a este &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The difference between &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt; and VerifyAccess is that &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt; returns a Boolean that specifies whether the calling thread has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt; and VerifyAccess throws an exception if the calling thread does not have access to the this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">A diferença entre &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;sendo VerifyAccess que &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;devolve um valor booleano que especifica se o thread de chamada tem acesso a este &lt;xref:System.Windows.Threading.DispatcherObject&gt;e VerifyAccess emite uma exceção se o thread de chamada não tiver acesso a esta &lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>the calling thread does not have access to this <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">o thread de chamada não tem acesso a este <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>