<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3babf752cda1959b9fe1dc4066dab91e524618cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.WeakEventManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">405ac814751751e817156a9b131a12310f85f791</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea2a89fc5ac37f0d3a6ebf9c4b7068aa0c1bba2a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class for the event manager that is used in the <bpt id="p1">*</bpt>weak event pattern<ept id="p1">*</ept>.</source>
          <target state="translated">Fornece uma classe base para o Gestor de eventos é utilizado no <bpt id="p1">*</bpt>padrão de eventos fraca<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The manager adds and removes listeners for events (or callbacks) that also use the pattern.</source>
          <target state="translated">O Gestor de adiciona e remove os serviços de escuta de eventos (ou chamadas de retorno) que também utilizam o padrão.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use the weak event pattern when the event source has an object lifetime that is independent of the event listeners.</source>
          <target state="translated">Normalmente, utiliza o padrão de eventos fracos quando a origem do evento tem um objeto que seja independente dos serviços de escuta de eventos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the central event dispatching capability of a WeakEventManager allows the listener's handlers to be garbage collected even if the source object persists.</source>
          <target state="translated">Utilizar a capacidade de emissão de evento central de uma WeakEventManager permite que os processadores do serviço de escuta a serem libertados, mesmo se persistir o objeto de origem.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>By contrast, a regular event hookup using the <ph id="ph1">`+=`</ph> operator causes the potentially disconnected source to hold a reference to the listeners.</source>
          <target state="translated">Por outro lado, um hookup de evento regular utilizando o <ph id="ph1">`+=`</ph> operador faz com que a origem potencialmente desligada conter uma referência para os serviços de escuta.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This prevents the receiver from being garbage collected in a timely fashion.</source>
          <target state="translated">Isto impede que o recetor que está a ser recolhidos de forma atempada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>One common situation where the lifetime relationships between sources and listeners should use of the weak event pattern is the handling of update events coming from data bindings.</source>
          <target state="translated">Uma situação comuns onde as relações de duração entre origens e os serviços de escuta devem utilizar o padrão de eventos fracos é o processamento de eventos de atualização proveniente de enlaces de dados.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The weak event pattern can also be used for callbacks and regular events.</source>
          <target state="translated">O padrão de eventos fraca também pode ser utilizado para chamadas de retorno eventos e regulares.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes base class values when it is used as the initializer by the constructor of a derived class.</source>
          <target state="translated">Inicializa base valores de classe quando é utilizado como o inicializador pelo construtor de uma classe derivada.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Delivers the event being managed to each listener.</source>
          <target state="translated">Fornece o evento que está a ser gerido para cada serviço de escuta.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the DeliverEvent method from within the event handlers that are added or removed by the &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt; and &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt; implementations of subclasses.</source>
          <target state="translated">Chamar o método de DeliverEvent a partir de processadores de eventos que são adicionados ou removidos pelo &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt;e &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt;implementações de subclasses.&lt;/xref:System.Windows.WeakEventManager.StopListening%2A&gt; &lt;/xref:System.Windows.WeakEventManager.StartListening%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call the &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; method in your <ph id="ph1">`AddListener`</ph> implementation of your class, the list of listeners receiving the event is kept in an underlying collection.</source>
          <target state="translated">Se chama o &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;método na sua <ph id="ph1">`AddListener`</ph> implementação da sua classe, a lista de escuta recebe o evento é mantida numa coleção de subjacente.&lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>(<ph id="ph1">`AddListener`</ph> is not part of an interface or class contract.</source>
          <target state="translated">(<ph id="ph1">`AddListener`</ph> não faz parte de um contrato de interface ou classe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AddListener`</ph> is the suggested name for the method of your manager class that calls &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; and adds weak event pattern listeners for the event.)       &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; adds listeners to a single list.</source>
          <target state="translated"><ph id="ph1">`AddListener`</ph>é o nome sugerido para o método de classe manager que chama &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;e adiciona o evento fraca padrão os serviços de escuta para o evento.)       &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;adiciona os serviços de escuta para uma única lista.&lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your manager implementation maintains more than one list of listeners per event, do not use DeliverEvent or &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;.</source>
          <target state="translated">Se a implementação de manager mantém mais do que uma lista de escuta por eventos, não utilize DeliverEvent ou &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;.&lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, your implementation should create its own &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; instances, <ph id="ph1">`AddListener`</ph> should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;.</source>
          <target state="translated">Em vez disso, a implementação deve criar seu próprio &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;instâncias, <ph id="ph1">`AddListener`</ph> deve adicionar serviços de escuta à lista de adequado e os eventos devem ser entregues à lista de escuta adequado ao chamar &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;.&lt;/xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The object on which the event is being handled.</source>
          <target state="translated">O objeto no qual o evento estiver a ser processado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data for the event to deliver.</source>
          <target state="translated">Um &lt;xref:System.EventArgs&gt;que contém os dados de eventos para o evento entregar.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is used for the provided type.</source>
          <target state="translated">Devolve o <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação que é utilizada para o tipo fornecido.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt; implementations call this method using their passed <ph id="ph1">`managerType`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt;implementações de chamar este método com o respetivo transmitido <ph id="ph1">`managerType`</ph>.&lt;/xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Windows.WeakEventManager&gt; is then used as the differentiator that determines which event was received, and which private class handler to invoke.</source>
          <target state="translated">O devolvido &lt;xref:System.Windows.WeakEventManager&gt;, em seguida, é utilizado como o differentiator determina qual o evento foi recebido e o processador de classe privada invocar.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The type to obtain the <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for.</source>
          <target state="translated">O tipo para obter o <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The matching <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">A correspondência <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementação.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets or sets the data being stored for the specified source.</source>
          <target state="translated">Obtém ou define os dados que está a ser armazenados para a origem especificada.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can choose what data and type to store in this indexer.</source>
          <target state="translated">Classes derivadas podem escolher os dados e o tipo para armazenar neste indexador.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically this is implemented as a &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;, which is a list of weak references to listeners.</source>
          <target state="translated">Normalmente, isto é implementado como um &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;, que é uma lista de referências fracas para os serviços de escuta.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would only have to change this type if the &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; type cannot contain your required information.</source>
          <target state="translated">Apenas terá de alterar este tipo se o &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;tipo não pode conter as informações necessárias.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, you will have to override the &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt; method so that all cleanup of the underlying type is performed correctly.</source>
          <target state="translated">Se Sim, terá de substituir o &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt;método para que todos os limpeza do tipo subjacente é executada corretamente.&lt;/xref:System.Windows.WeakEventManager.Purge%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The zero-based index of the requested source.</source>
          <target state="translated">O índice baseado em zero da origem do pedido.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Data being stored by the manager for this source.</source>
          <target state="translated">Dados que está a ser armazenados pelo Gestor de para esta origem.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns a new object to contain listeners to an event.</source>
          <target state="translated">Devolve um novo objeto que contém os serviços de escuta a um evento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A new object to contain listeners to an event.</source>
          <target state="translated">Um novo objeto que contém os serviços de escuta a um evento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adds the specified delegate as an event handler of the specified source.</source>
          <target state="translated">Adiciona o delegado especificado como um processador de eventos da origem especificada.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The source object that the handler delegate subscribes to.</source>
          <target state="translated">O objeto de origem que subscreve o delegado de processador.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The delegate that handles the event that is raised by <ph id="ph1">`source`</ph>.</source>
          <target state="translated">O delegado que processa o evento é gerado pelo <ph id="ph1">`source`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Adds the provided listener to the provided source for the event being managed.</source>
          <target state="translated">Adiciona o serviço de escuta fornecido para a origem fornecida para o evento a ser gerido.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method within your manager class <ph id="ph1">`AddListener`</ph> methods on &lt;xref:System.Windows.WeakEventManager&gt; implementations.</source>
          <target state="translated">Chamar este método dentro da sua classe manager <ph id="ph1">`AddListener`</ph> métodos em &lt;xref:System.Windows.WeakEventManager&gt;implementações.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AddListener`</ph> is the suggested name for the static method you define on your manager class to enable other classes to add a listener for your weak event pattern.</source>
          <target state="translated"><ph id="ph1">`AddListener`</ph>é o nome sugerido para o método estático definir na sua classe manager para ativar a outras classes adicionar um serviço de escuta para o seu padrão de eventos fracos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AddListener`</ph> should take two parameters: the <ph id="ph2">`source`</ph> where the listener is attached, and the <ph id="ph3">`listener`</ph> instance.</source>
          <target state="translated"><ph id="ph1">`AddListener`</ph>deve ter dois parâmetros: o <ph id="ph2">`source`</ph> onde o serviço de escuta está ligado e o <ph id="ph3">`listener`</ph> instância.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For your <ph id="ph1">`AddListener`</ph> implementation, call the ProtectedAddListener method on the current manager and pass the same two parameters.</source>
          <target state="translated">Para sua <ph id="ph1">`AddListener`</ph> implementação, chame o método de ProtectedAddListener no Gestor de atual e passar os mesmos parâmetros de dois.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list of listeners was previously empty, ProtectedAddListener calls the &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt; method internally, which will call your specific &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt; override through polymorphism.</source>
          <target state="translated">Se a lista de escuta era anteriormente vazia, ProtectedAddListener chama o &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt;método internamente, que irá chamar específicos da sua &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt;Substituir através de que o polimorfismo.&lt;/xref:System.Windows.WeakEventManager.StartListening%2A&gt; &lt;/xref:System.Windows.WeakEventManager.StartListening%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProtectedAddListener adds listeners to a single internal &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; per <ph id="ph1">`source`</ph>.</source>
          <target state="translated">ProtectedAddListener adiciona os serviços de escuta para um único interno &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;por <ph id="ph1">`source`</ph>.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedAddListener.</source>
          <target state="translated">Se a sua implementação do Gestor manter mais de uma lista de escuta para cada combinação de origem do evento, não utilize ProtectedAddListener.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, your implementation should create its own &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; instances, <ph id="ph1">`AddListener`</ph> should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling the &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; event instead of the &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; method.</source>
          <target state="translated">Em vez disso, a implementação deve criar seu próprio &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;instâncias, <ph id="ph1">`AddListener`</ph> deve adicionar serviços de escuta à lista de adequado e os eventos devem ser entregues à lista de escuta adequado ao chamar o &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;eventos em vez do &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt;método.&lt;/xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; &lt;/xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The source to attach listeners to.</source>
          <target state="translated">A origem de ligar os serviços de escuta para.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The listening class (which must implement <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">A classe de serviço de escuta (que tem de implementar <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Removes the previously added handler from the specified source.</source>
          <target state="translated">Remove o processador anteriormente adicionado da origem especificada.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The source to remove the handler from.</source>
          <target state="translated">A origem para remover o processador do.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The delegate to remove from <ph id="ph1">`source`</ph>.</source>
          <target state="translated">O delegado para remover <ph id="ph1">`source`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Removes a previously added listener from the provided source.</source>
          <target state="translated">Remove um serviço de escuta anteriormente adicionado a origem fornecida.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method within your manager class <ph id="ph1">`RemoveListener`</ph> methods on &lt;xref:System.Windows.WeakEventManager&gt; implementations.</source>
          <target state="translated">Chamar este método dentro da sua classe manager <ph id="ph1">`RemoveListener`</ph> métodos em &lt;xref:System.Windows.WeakEventManager&gt;implementações.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`RemoveListener`</ph> is the suggested name for the static method you define on your manager class to enable other classes to remove a listener for your weak event pattern.</source>
          <target state="translated"><ph id="ph1">`RemoveListener`</ph>é o nome sugerido para o método estático definir na sua classe manager para ativar a outras classes remover um serviço de escuta para o seu padrão de eventos fracos.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`RemoveListener`</ph> should take two parameters: the <ph id="ph2">`source`</ph> where the listener is removed, and the <ph id="ph3">`listener`</ph> class.</source>
          <target state="translated"><ph id="ph1">`RemoveListener`</ph>deve ter dois parâmetros: o <ph id="ph2">`source`</ph> onde o serviço de escuta for removido e o <ph id="ph3">`listener`</ph> classe.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For your <ph id="ph1">`RemoveListener`</ph> implementation, call the ProtectedRemoveListener method on the current manager and pass the same two parameters.</source>
          <target state="translated">Para sua <ph id="ph1">`RemoveListener`</ph> implementação, chame o método de ProtectedRemoveListener no Gestor de atual e passar os mesmos parâmetros de dois.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a call to ProtectedRemoveListener removes the last listener in the list, ProtectedRemoveListener calls the &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt; method internally, which will call your specific &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt; override through polymorphism.</source>
          <target state="translated">Se uma chamada para ProtectedRemoveListener remove o último serviço de escuta na lista, ProtectedRemoveListener chama o &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt;método internamente, que irá chamar específicos da sua &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt;Substituir através de que o polimorfismo.&lt;/xref:System.Windows.WeakEventManager.StopListening%2A&gt; &lt;/xref:System.Windows.WeakEventManager.StopListening%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProtectedRemoveListener removes listeners from a single internal &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; per <ph id="ph1">`source`</ph>.</source>
          <target state="translated">ProtectedRemoveListener remove os serviços de escuta de um único interno &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;por <ph id="ph1">`source`</ph>.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedRemoveListener.</source>
          <target state="translated">Se a sua implementação do Gestor manter mais de uma lista de escuta para cada combinação de origem do evento, não utilize ProtectedRemoveListener.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, your implementation should create its own &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; instances, <ph id="ph1">`RemoveListener`</ph> should remove listeners from the appropriate list, and events should be delivered to the appropriate listener list by calling the &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; method instead of the &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; method.</source>
          <target state="translated">Em vez disso, a implementação deve criar seu próprio &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;instâncias, <ph id="ph1">`RemoveListener`</ph> deve remover os serviços de escuta da lista adequada e os eventos devem ser entregues à lista de escuta adequado ao chamar o &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;método em vez do &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt;método.&lt;/xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; &lt;/xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The source to remove listeners from.</source>
          <target state="translated">A origem para remover os serviços de escuta do.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The listening class (which must implement <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">A classe de serviço de escuta (que tem de implementar <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Removes inactive listener entries from the data list for the provided source.</source>
          <target state="translated">Remove a lista de dados para a origem de fornecido entradas de serviço de escuta inativa.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if some entries were actually removed from the list.</source>
          <target state="translated">Devolve <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se algumas entradas, na verdade, foram removidas da lista.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Purge method has a default implementation that will remove all entries when data is a &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;.</source>
          <target state="translated">O método de remoção tem uma implementação predefinida que irá remover todas as entradas quando os dados &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The source for events being listened to.</source>
          <target state="translated">A origem para os eventos que está a ser listened para.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The data to check.</source>
          <target state="translated">Os dados para verificar.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This object is expected to be a &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; implementation.</source>
          <target state="translated">Este objeto é esperado um &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;implementação.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to stop listening to <ph id="ph1">`source`</ph>, and completely remove all entries from <ph id="ph2">`data`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Para parar a escutar <ph id="ph1">`source`</ph>e remova completamente todas as entradas de <ph id="ph2">`data`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if some entries were actually removed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se algumas entradas, na verdade, foram removidas; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Establishes a read-lock on the underlying data table, and returns an &lt;xref:System.IDisposable&gt;.</source>
          <target state="translated">Estabelece um bloqueio de leitura na tabela de dados subjacente e devolve um &lt;xref:System.IDisposable&gt;.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, queries to the table contained in &lt;xref:System.Windows.WeakEventManager.Item%2A&gt; should always occur within a <ph id="ph1">`using (ReadLock) { ... }`</ph> clause, except for queries that are already within a write lock.</source>
          <target state="translated">Em classes derivadas, consulta para a tabela contida no &lt;xref:System.Windows.WeakEventManager.Item%2A&gt;sempre deve ocorrer dentro de um <ph id="ph1">`using (ReadLock) { ... }`</ph> cláusula, exceto as consultas que já estão dentro de um bloqueio de escrita.&lt;/xref:System.Windows.WeakEventManager.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>These queries may be necessary if your class supports a more sophisticated <ph id="ph1">`AddListener`</ph> implementation that requires more data beyond the <ph id="ph2">`source`</ph> and the <ph id="ph3">`listener`</ph>, and uses the &lt;xref:System.Windows.WeakEventManager.Item%2A&gt; collection to store the extra information.</source>
          <target state="translated">Estas consultas poderão ser necessárias se a sua classe suporta mais sofisticadas <ph id="ph1">`AddListener`</ph> implementação que necessita de mais dados para além de <ph id="ph2">`source`</ph> e <ph id="ph3">`listener`</ph>e utiliza o &lt;xref:System.Windows.WeakEventManager.Item%2A&gt;coleção para armazenar as informações adicionais.&lt;/xref:System.Windows.WeakEventManager.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An object that can be used to establish a lock on the data table members and then be appropriately disposed with a <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> construct.</source>
          <target state="translated">Um objeto que pode ser utilizado para estabelecer um bloqueio dos membros da tabela de dados e, em seguida, adequadamente eliminado com um <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> construir.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Removes all listeners for the specified source.</source>
          <target state="translated">Remove todos os serviços de escuta para a origem especificada.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The source to remove listener information for.</source>
          <target state="translated">A origem para remover as informações do serviço de escuta de.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.</source>
          <target state="translated">Pedidos que ser efetuada uma limpeza de entradas não utilizadas na lista subjacente do serviço de escuta num thread de prioridade inferior.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the ScheduleCleanup method is similar to calling the &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt; method on the current manager's list, at lower thread priority, with the <ph id="ph1">`purgeAll`</ph> parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Chamar o método ScheduleCleanup é semelhante ao chamar o &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt;método na lista do Gestor de atual, com a prioridade do thread inferior, com o <ph id="ph1">`purgeAll`</ph> parâmetro definido como <ph id="ph2">`false`</ph>.&lt;/xref:System.Windows.WeakEventManager.Purge%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Sets the current manager for the specified manager type.</source>
          <target state="translated">Define o Gestor de atual para o tipo de gestor especificado.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the SetCurrentManager method to initialize a manager, if that is required by a call to your <ph id="ph1">`CurrentManager`</ph> property on a &lt;xref:System.Windows.WeakEventManager&gt; implementation.</source>
          <target state="translated">Chamar o método SetCurrentManager ao inicializar um gestor, se de que é exigido por uma chamada para o <ph id="ph1">`CurrentManager`</ph> propriedade um &lt;xref:System.Windows.WeakEventManager&gt;implementação.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The type to set the new event manager.</source>
          <target state="translated">O tipo para definir o novo Gestor de eventos.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The new event manager.</source>
          <target state="translated">O novo Gestor de eventos.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, starts listening for the event being managed.</source>
          <target state="translated">Quando substituí-lo de uma classe derivada, começa a escutar para o evento a ser gerido.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>After the StartListening method is first called, the manager should be in the state of calling &lt;xref:System.Windows.WeakEventManager.DeliverEvent<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Windows.WeakEventManager.DeliverEventToList<ept id="p1">*</ept>&gt; whenever the relevant event from the provided source is handled.</source>
          <target state="translated">Após o método StartListening pela primeira vez é designado, o Gestor de deve estar no estado de chamar &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; ou &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; sempre o evento relevante da origem fornecida é processado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The source to begin listening on.</source>
          <target state="translated">A origem para começar a escutar.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, stops listening on the provided source for the event being managed.</source>
          <target state="translated">Quando substituí-lo de uma classe derivada, deixa de escutar na origem de fornecido para o evento a ser gerido.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The source to stop listening on.</source>
          <target state="translated">A origem para parar a escutar.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Establishes a write-lock on the underlying data table, and returns an&lt;xref:System.IDisposable&gt;.</source>
          <target state="translated">Estabelece um bloqueio de escrita na tabela de dados subjacente e devolve um&lt;xref:System.IDisposable&gt;.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, all modifications to the underlying data table should occur within a <ph id="ph1">`using (WriteLock) { ... }`</ph> clause.</source>
          <target state="translated">Em classes derivadas, todas as modificações à tabela de dados subjacente devem ocorrer dentro de um <ph id="ph1">`using (WriteLock) { ... }`</ph> cláusula.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>These modifications may be necessary if your class supports a more sophisticated <ph id="ph1">`AddListener`</ph> implementation that requires more data beyond the <ph id="ph2">`source`</ph> and the <ph id="ph3">`listener`</ph>, and uses the &lt;xref:System.Windows.WeakEventManager.Item%2A&gt; collection to store the extra information.</source>
          <target state="translated">Estas alterações poderão ser necessárias se a sua classe suporta mais sofisticadas <ph id="ph1">`AddListener`</ph> implementação que necessita de mais dados para além de <ph id="ph2">`source`</ph> e o <ph id="ph3">`listener`</ph>e utiliza o &lt;xref:System.Windows.WeakEventManager.Item%2A&gt;coleção para armazenar as informações adicionais.&lt;/xref:System.Windows.WeakEventManager.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An object that can be used to establish a lock on the data table members and then be appropriately disposed with a <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> construct.</source>
          <target state="translated">Um objeto que pode ser utilizado para estabelecer um bloqueio dos membros da tabela de dados e, em seguida, adequadamente eliminado com um <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> construir.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>