<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6268fc94480a4936a59717d3dc614a6d4975ccec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.XamlReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">974ec307b3512b7e8acac3fc2c82475555d82dac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa63fc760c757e6f8ed203edf588d497bc9712ca</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reads XAML input and creates an object graph, using the WPF default XAML reader and an associated XAML object writer.</source>
          <target state="translated">Lê a entrada XAML e cria um gráfico de objeto, utilizando o leitor XAML do WPF predefinido e um escritor de objeto XAML associado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronous &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; methods are static, but the asynchronous &lt;xref:System.Windows.Markup.XamlReader.LoadAsync%2A&gt; methods are not static and require an instance of the XamlReader class to use.</source>
          <target state="translated">O síncrona &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;métodos são estáticos, mas o assíncrona &lt;xref:System.Windows.Markup.XamlReader.LoadAsync%2A&gt;métodos não são estáticos e requerem uma instância da classe XamlReader a utilizar.&lt;/xref:System.Windows.Markup.XamlReader.LoadAsync%2A&gt; &lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output of the <ph id="ph1">`Load`</ph> methods is a single object, which represents the root object of a created object tree or object graph.</source>
          <target state="translated">O resultado a <ph id="ph1">`Load`</ph> métodos é um único objeto, que representa o objeto de raiz de uma árvore de objetos criados ou um gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Object graphs that are created by XamlReader are typically added to the existing object tree of a WPF application at run time.</source>
          <target state="translated">Gráficos de objetos que são criados pelas XamlReader normalmente são adicionados à árvore de objetos existentes de uma aplicação WPF em tempo de execução.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise the new object graph is considered disconnected for purposes of the WPF application model.</source>
          <target state="translated">Caso contrário, o gráfico de objeto novo é considerado desligado para fins de modelo de aplicação WPF.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that it does not render, and cannot be accessed using any of the object tree techniques as applied to the WPF application's main object tree (for example, the APIs &lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;, &lt;xref:System.Windows.LogicalTreeHelper&gt;, &lt;xref:System.Windows.Media.VisualTreeHelper&gt;).</source>
          <target state="translated">Isto significa que não compor: e não podem ser acedidos através de qualquer um das técnicas de árvore de objetos como aplicado à árvore de objeto principal da aplicação WPF (por exemplo, as APIs &lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;, &lt;xref:System.Windows.LogicalTreeHelper&gt;, &lt;xref:System.Windows.Media.VisualTreeHelper&gt;).&lt;/xref:System.Windows.Media.VisualTreeHelper&gt; &lt;/xref:System.Windows.LogicalTreeHelper&gt; &lt;/xref:System.Windows.FrameworkElement.FindName%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on object tree concepts, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre conceitos de árvore do objeto, consulte <bpt id="p1">[</bpt>árvores no WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>XamlReader supports the following primary scenarios:      -   <bpt id="p1">**</bpt>Cloning/object factory<ept id="p1">**</ept>: Without additional mechanisms, a reference type generally cannot be included in more than one position in a WPF object tree.</source>
          <target state="translated">XamlReader suporta os seguintes cenários de principais:- <bpt id="p1">**</bpt>fábrica de clonagem/objeto<ept id="p1">**</ept>: sem mecanismos adicionais, um tipo de referência não pode ser geralmente incluído em mais do que uma posição numa árvore de objeto WPF.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>(Examples of additional mechanisms that offer support for sharing or re-use in WPF include objects that are based on &lt;xref:System.Windows.Freezable&gt;, or support for commonly shareable objects such as &lt;xref:System.Windows.Media.Brush&gt; that are referenced as an item from a &lt;xref:System.Windows.ResourceDictionary&gt;.) One way to clone an object that is already in the object tree is to serialize the object using &lt;xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">(Mecanismos adicionais que oferecem suporte para a partilha ou reutilize no WPF exemplos de objetos que se baseiam em &lt;xref:System.Windows.Freezable&gt;, ou fornece suporte para objetos normalmente partilhável como &lt;xref:System.Windows.Media.Brush&gt;que são referenciadas como um item a partir de um &lt;xref:System.Windows.ResourceDictionary&gt;.)&lt;/xref:System.Windows.ResourceDictionary&gt; &lt;/xref:System.Windows.Media.Brush&gt; &lt;/xref:System.Windows.Freezable&gt; Uma forma de um objeto que já se encontra na árvore de objetos do clone é para serializar o objeto com &lt;xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You then use the serialized string as input for a call to &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;, with a stream or &lt;xref:System.Xml.XmlReader&gt; as an intermediary.</source>
          <target state="translated">Em seguida, utilizar a cadeia serializada como entrada para uma chamada para &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;, com uma transmissão em fluxo ou &lt;xref:System.Xml.XmlReader&gt;como um intermediário.&lt;/xref:System.Xml.XmlReader&gt; &lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Constructing objects based on just-in-time information<ept id="p1">**</ept>: There are often other ways to have late-binding or user-supplied input change the state of existing objects.</source>
          <target state="translated">- <bpt id="p1">**</bpt>Construir os objetos com base nas informações de just-in-time<ept id="p1">**</ept>: existem outras formas de ter entrada de enlace dinâmico ou fornecido pelo utilizador alterar o estado de objetos existentes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example you could use the same value to set more than one property, or use data binding.</source>
          <target state="translated">Por exemplo foi possível utilizar o mesmo valor para definir mais do que uma propriedade ou utilizar o enlace de dados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>But if you have a scenario where even the type of object to create is only determinable at run time or with user interaction, then creating such an object by building up a string for &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; input is often a useful technique.</source>
          <target state="translated">Mas se tiver um cenário onde mesmo o tipo de objeto para criar só é determinable em tempo de execução ou interação do utilizador, em seguida, criar desse objecto através da criação de uma cadeia para &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;entrada, muitas vezes, é uma técnica útil.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Using existing resource techniques<ept id="p1">**</ept>: The &lt;xref:System.IO.Stream&gt; type is used frequently in other frameworks or technologies for transferring data or objects across application boundaries or for similar situations.</source>
          <target state="translated">- <bpt id="p1">**</bpt>Utilizando técnicas de recursos existente<ept id="p1">**</ept>: O &lt;xref:System.IO.Stream&gt;tipo é utilizado frequentemente no outras estruturas ou tecnologias para transferência de dados ou objetos nos limites da aplicação ou para situações semelhantes.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then use the &lt;xref:System.IO.Stream&gt; techniques to store or obtain XAML-formatted data that you eventually use to create an object as part of your application.</source>
          <target state="translated">Em seguida, pode utilizar o &lt;xref:System.IO.Stream&gt;técnicas para armazenar ou obter dados formatado em XAML que acaba por utilizar para criar um objeto como parte da sua aplicação.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Fixed documents:<ept id="p1">**</ept> Your application might load local or downloaded XPS documents for inclusion in a WPF application object tree and UI.</source>
          <target state="translated">- <bpt id="p1">**</bpt>Fixo documentos:<ept id="p1">**</ept> a aplicação pode carregar locais ou transferidos documentos XPS para inclusão numa árvore de objetos de aplicações do WPF e IU.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This documentation sometimes describes an object graph, as opposed to an object tree.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Nesta documentação, por vezes, descreve um gráfico de objeto, por oposição a uma árvore de objetos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A strict parent-child relationship does not always exist in the run time object relationships of a run time WPF application, so an object graph is a more widely applicable terminology.</source>
          <target state="translated">Uma relação principal-subordinado strict não de existir sempre as relações de objeto de tempo de execução de uma aplicação do WPF de tempo de execução, pelo que um gráfico de objeto é uma terminologia mais amplamente aplicável.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because WPF also includes two different tree conceptualization APIs (&lt;xref:System.Windows.LogicalTreeHelper&gt;, &lt;xref:System.Windows.Media.VisualTreeHelper&gt;) the tree metaphor still applies adequately to most real-world cases in WPF.</source>
          <target state="translated">No entanto, porque o WPF também inclui dois conceptualization de árvore diferente APIs (&lt;xref:System.Windows.LogicalTreeHelper&gt;, &lt;xref:System.Windows.Media.VisualTreeHelper&gt;) metaphor a árvore ainda se aplica adequado para a maioria dos casos do mundo real no WPF.&lt;/xref:System.Windows.Media.VisualTreeHelper&gt; &lt;/xref:System.Windows.LogicalTreeHelper&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>From the XAML language perspective however, the object graph is often the best way to think about how objects are created out of XAML, because the XAML language itself does not necessarily specify helper class methodologies that bring the relationships more into a tree structure again.</source>
          <target state="translated">Da perspetiva de idioma XAML no entanto, o gráfico de objeto é, muitas vezes, a melhor forma de pensar sobre como os objetos são criados fora do XAML, porque o idioma XAML propriamente dito não necessariamente especificar metodologias de classe de programa auxiliar que colocar as relações mais numa estrutura de árvore novamente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Code Access Security, Loose XAML, and XamlReader    XAML is a markup language that directly represents object instantiation and execution.</source>
          <target state="translated">Segurança de acesso de código, soltas XAML e XamlReader XAML é uma linguagem de markup que representa diretamente a instanciação do objeto e a execução.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, elements created in XAML have the same ability to interact with system resources (network access, file system IO, for example) as the equivalent generated code does.</source>
          <target state="translated">Por conseguinte, os elementos criados em XAML de ter a mesma capacidade de interagir com recursos do sistema (rede acesso, / s do sistema de ficheiros, por exemplo) como equivalentes gerado does de código.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> supports the <ph id="ph2">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> security framework <ph id="ph3">[!INCLUDE[TLA#tla_cas](~/add/includes/tlasharptla-cas-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>suporta o <ph id="ph2">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> framework de segurança <ph id="ph3">[!INCLUDE[TLA#tla_cas](~/add/includes/tlasharptla-cas-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> content running in the internet zone has reduced execution permissions.</source>
          <target state="translated">Isto significa que <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> conteúdo em execução na zona da internet tem reduzido permissões de execução.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Loose XAML" (pages of noncompiled XAML interpreted at load time by a XAML viewer) and <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph> are usually run in this internet zone and use the same permission set.</source>
          <target state="translated">"Perder XAML" (páginas de noncompiled XAML interpreta em tempo de carregamento de um visualizador XAML) e <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph> são normalmente executados nesta zona de internet e utilizar o mesmo conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, XAML loaded in to a fully trusted application has the same access to the system resources as the hosting application does.</source>
          <target state="translated">No entanto, XAML carregada na aplicação totalmente fidedigna tem o mesmo acesso para os recursos do sistema, como a aplicação de alojamento.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>WPF Partial Trust Security<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>segurança de fidedignidade parcial WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implications of these statements for XamlReader is that your application design must make trust decisions about the XAML you decide to load.</source>
          <target state="translated">As implicações destas instruções para XamlReader é que a estrutura da aplicação têm tomar decisões da confiança sobre o XAML que opte por carregar.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are loading XAML that is not trusted, consider implementing your own sandboxing technique for how you load the resulting object graph.</source>
          <target state="translated">Se estiver a carregar o XAML que não é fidedigno, pondere implementar a seus próprios técnica sandboxing para como carregar o gráfico de objeto resultante.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>XamlReader can also be called by partial trust code.</source>
          <target state="translated">Também pode ser chamado XamlReader por código de fidedignidade parcial.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, Internet security zone is applied for code access security.</source>
          <target state="translated">Neste caso, a zona de segurança da Internet é aplicada para segurança de acesso de código.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If anything in the loaded XAML is invalid under Internet security zone, a XAML parse exception is thrown.</source>
          <target state="translated">Se nada no XAML carregado é inválido na zona de segurança da Internet, é emitida uma exceção de análise XAML.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under XBAP and other cases that are partial trust at the platform level, where XamlReader is part of the execution, you get the same exception behavior as with explicit partial trust calls.</source>
          <target state="translated">Em XBAP e outros cenários que são fidedignidade parcial ao nível da plataforma, onde XamlReader faz parte da execução, receberá o mesmo comportamento de exceção de com as chamadas de fidedignidade parcial explícita.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF XAML, XAML Readers/Writers, and XAML Language Versioning    <ph id="ph1">[!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]</ph> includes language features such as  and .</source>
          <target state="translated">WPF XAML, XAML leitores/escritores e controlo de versões de idiomas de XAML <ph id="ph1">[!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]</ph> inclui funcionalidades de idioma, tais como e.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use signatures of <ph id="ph1">`Load`</ph> or <ph id="ph2">`Parse`</ph> to load XAML that uses these features.</source>
          <target state="translated">Pode utilizar assinaturas de <ph id="ph1">`Load`</ph> ou <ph id="ph2">`Parse`</ph> carregar XAML que utiliza estas funcionalidades.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, those language features are not supported for XAML that needs to be markup compiled (such as XAML for the <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> build action in a WPF application, or any XAML that involves the markup compile task in the build actions).</source>
          <target state="translated">No entanto, essas funcionalidades do idioma não são suportadas para XAML que tem de ser compilada através de marcação (tais como o XAML para o <bpt id="p1">**</bpt>página<ept id="p1">**</ept> compilar a ação de uma aplicação WPF ou qualquer XAML que envolve a tarefa de compilação de marcação nas ações de compilação).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF types and the WPF technology in general support concepts that rely on access to WPF internals.</source>
          <target state="translated">Tipos WPF e a tecnologia WPF suportam em geral conceitos que dependem de acesso para WPF características.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, how WPF implements dependency properties relies on internal techniques for efficient type-member lookup.</source>
          <target state="translated">Por exemplo, como o WPF implementa propriedades de dependência depende de técnicas internas para a pesquisa de membro de tipo eficiente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to these internals is enabled by the XAML reading and writing APIs provided in &lt;xref:System.Windows.Markup.XamlWriter&gt; and XamlReader from the &lt;xref:System.Windows.Markup&gt; namespace and PresentationFramework assembly.</source>
          <target state="translated">Acesso a estas características está ativado por XAML leitura e escrita APIs fornecidas &lt;xref:System.Windows.Markup.XamlWriter&gt;e XamlReader do &lt;xref:System.Windows.Markup&gt;espaço de nomes e assemblagem PresentationFramework.&lt;/xref:System.Windows.Markup&gt; &lt;/xref:System.Windows.Markup.XamlWriter&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the lower-level XAML readers and XAML writers from the System.Xaml assembly (classes based on &lt;xref:System.Xaml.XamlReader?displayProperty=fullName&gt;, &lt;xref:System.Xaml.XamlWriter?displayProperty=fullName&gt;) do not have access to the WPF internals.</source>
          <target state="translated">No entanto, os leitores XAML de nível inferior e escritores XAML da assemblagem System.Xaml (classes com base no &lt;xref:System.Xaml.XamlReader?displayProperty=fullName&gt;, &lt;xref:System.Xaml.XamlWriter?displayProperty=fullName&gt;) não têm acesso para os aspetos internos WPF.&lt;/xref:System.Xaml.XamlWriter?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no dependency from System.Xaml to any WPF-specific assembly.</source>
          <target state="translated">Não há nenhum dependência do System.Xaml para qualquer assemblagem WPF específicos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Without access to the WPF internals, System.Xaml readers and writers cannot correctly load or save all WPF types, or types based on WPF types.</source>
          <target state="translated">Sem acesso para os aspetos internos WPF, leitores de System.Xaml e escritores corretamente não é possível carregar ou guardar WPF todos os tipos ou tipos com base nos tipos WPF.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, the System.Xaml readers and writers do not understand concepts such as the WPF dependency property backing property store, or all the specifics of how WPF uses styles, resource dictionaries and templates.</source>
          <target state="translated">Em particular, os leitores de System.Xaml e escritores não compreende o conceitos, tais como a propriedade de dependência do WPF fazer uma cópia de arquivo de propriedades nem todas as especificações como WPF utiliza estilos, dicionários de recursos e os modelos.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore you have a choice to make:      -   If you are loading WPF types, and/or you are using XAML in BAML form in any way, use the PresentationFramework XAML readers and XAML writers.</source>
          <target state="translated">Por conseguinte, tem uma opção para que: - Se estiver a carregar os tipos WPF e/ou estiver a utilizar o XAML no formulário BAML de qualquer forma, utilize os leitores de PresentationFramework XAML e escritores XAML.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If you are not relying on any WPF types or the BAML form of XAML, and are not using another specific technology's XAML reader or XAML writer implementation for reasons that are specific to that framework, use the System.Xaml XAML readers and XAML writers.</source>
          <target state="translated">-Se são não depender de quaisquer tipos WPF ou o formato BAML XAML e não estiver a utilizar do outra específica tecnologia leitor XAML ou implementação de escritor XAML por motivos que são específicos para essa framework, utilize os leitores de System.Xaml XAML e escritores XAML.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>System.Xaml Backing Implementation in .NET 4    XamlReader is the callable API surface for the WPF framework-level XAML parser.</source>
          <target state="translated">System.Xaml fazer uma cópia de implementação em .NET 4 XamlReader é a superfície de API possível chamar EndRead para o parser XAML de nível de framework WPF.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same underlying XAML parser also performs the run-time XAML loading and parsing for WPF applications that target <ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]</ph>.</source>
          <target state="translated">O analisador XAML subjacente mesmo também efetua o XAML de tempo de execução, carregar e analisar para as aplicações do WPF que o destino <ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph> e <ph id="ph2">[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are targeting <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, the external API is the same, but parts of the implementation are built on the <ph id="ph2">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> general XAML implementation in the System.Xaml assembly, which improves many of the technical and reporting aspects of parsing XAML.</source>
          <target state="translated">Se estiver a segmentar <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, a API externa é o mesmo, mas as partes da implementação são criadas no <ph id="ph2">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementação geral de XAML na assemblagem System.Xaml, que melhora muitos dos aspetos técnicos e relatórios de análise XAML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Targeting <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> necessarily entails including System.Xaml as a reference, and details of implementation such as the exceptions reported may come from System.Xaml defined types.</source>
          <target state="translated">Filtragem <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> necessariamente envolve incluindo System.Xaml como uma referência e detalhes de implementação, tais como as exceções comunicadas podem ter System.Xaml definido tipos.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_XamlReader"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_XamlReader"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Utilização de texto XAML</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Aborts the current asynchronous load operation, if there is an asynchronous load operation pending.</source>
          <target state="translated">Interrompe a operação assíncrona carga atual, se existir uma operação de carregamento assíncrono pendente.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>CancelAsync is an asynchronous operation; therefore, some loading may occur before the operation is aborted.</source>
          <target state="translated">CancelAsync é uma operação assíncrona; Por conseguinte, algumas carregamento pode ocorrer antes da operação foi abortada.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the WPF schema context settings for a <bpt id="p2">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que representa as definições de contexto do esquema WPF para um <bpt id="p2">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the WPF schema context settings for a <bpt id="p2">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que representa as definições de contexto do esquema WPF para um <bpt id="p2">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.IO.Stream&gt; and returns an &lt;xref:System.Object&gt; that is the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado no &lt;xref:System.IO.Stream&gt;e devolve um &lt;xref:System.Object&gt;que é a raiz da árvore de objetos correspondente.&lt;/xref:System.Object&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The XAML to load, in stream form.</source>
          <target state="translated">O XAML para carregar, no formato de fluxo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The object at the root of the created object tree.</source>
          <target state="translated">O objeto na raiz da árvore de objetos criados.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Reads the XAML input through a provided <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and returns an object that is the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML através de um fornecido <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e devolve um objeto que é a raiz da árvore de objetos correspondente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input &lt;xref:System.Xaml.XamlReader&gt; can be &lt;xref:System.Windows.Baml2006.Baml2006Reader&gt;.</source>
          <target state="translated">A entrada &lt;xref:System.Xaml.XamlReader&gt;pode ser &lt;xref:System.Windows.Baml2006.Baml2006Reader&gt;.&lt;/xref:System.Windows.Baml2006.Baml2006Reader&gt; &lt;/xref:System.Xaml.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is how you can load BAML at run time, or for localization tool purposes.</source>
          <target state="translated">Esta é a forma como pode carregar BAML em tempo de execução, ou para fins de ferramenta de localização.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This is expected to be initialized with input XAML.</source>
          <target state="translated">Isto deve ser inicializada com entrada XAML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The object that is the root of the created object tree.</source>
          <target state="translated">O objeto que é a raiz da árvore de objetos criados.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.Xml.XmlReader&gt; and returns an object that is the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado no &lt;xref:System.Xml.XmlReader&gt;e devolve um objeto que é a raiz da árvore de objetos correspondente.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; that has already loaded the XAML input to load in XML form.</source>
          <target state="translated">O &lt;xref:System.Xml.XmlReader&gt;que já foi carregado o XAML a carregar no formato XML de entrada.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The object that is the root of the created object tree.</source>
          <target state="translated">O objeto que é a raiz da árvore de objetos criados.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.IO.Stream&gt; and returns an object that is the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado no &lt;xref:System.IO.Stream&gt;e devolve um objeto que é a raiz da árvore de objetos correspondente.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The stream that contains the XAML input to load.</source>
          <target state="translated">O fluxo que contém o XAML de entrada para carregar.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Context information used by the parser.</source>
          <target state="translated">Informações de contexto utilizadas pelo parser.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The object that is the root of the created object tree.</source>
          <target state="translated">O objeto que é a raiz da árvore de objetos criados.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;parserContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;parserContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.IO.Stream&gt; and returns the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado no &lt;xref:System.IO.Stream&gt;e devolve a raiz da árvore de objetos correspondente.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>An asynchronous XAML load operation will initially return an object that is purely the root object.</source>
          <target state="translated">Uma operação de carregamento XAML assíncrona inicialmente irá devolver um objeto que é puramente o objeto de raiz.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</source>
          <target state="translated">No modo assíncrono, continua a XAML, em seguida, análise e os objetos subordinados são preenchidos na raiz de.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</source>
          <target state="translated">Este é contrariamente XAML WPF típico de processamento comportamento e a interação com os conceitos WPF da duração do objeto.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</source>
          <target state="translated">No interação típico (não-async), todas as propriedades de um objeto, incluindo todas as coleções subordinadas são preenchidas antes de devolver um elemento e relatórios-lo tal como carregado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</source>
          <target state="translated">Esse comportamento equivale a uma metodologia na parte inferior de segurança para a criação da árvore de onde o objeto de raiz é o último objeto fique disponível.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically would assign the returned object to some location in your WPF application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</source>
          <target state="translated">Que normalmente iria atribuir o objeto devolvido para algumas localização na árvore de objetos da sua aplicação WPF, com o conhecimento de que o conteúdo poderá ainda ser preencher e poderá fazer com que as atualizações do esquema incrementais se todo o conteúdo está exposto como parte da IU.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt; is handled.</source>
          <target state="translated">Por este motivo, é típico de isolar ou virtualizar os quaisquer objetos no modo assíncrono carregados de XAML e a utilização do Estado de aplicação ou específicos da aplicação lógica para o notificar quando &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;é processado.&lt;/xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for LoadAsync to load XAML input asynchronously, the root element in the XAML input must contain the attribute and value <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</source>
          <target state="translated">Para que LoadAsync carregar XAML entrada no modo assíncrono, o elemento de raiz no XAML entrada tem de conter o atributo e o valor <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value is treated as case sensitive.</source>
          <target state="translated">O valor é tratado como maiúsculas confidenciais.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XAML input root does not contain <ph id="ph1">`x:SynchronousMode="Async"`</ph>, no exception is thrown, and the call is processed as a synchronous load (see &lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29&gt;).</source>
          <target state="translated">Se a raiz de entrada de XAML não conter <ph id="ph1">`x:SynchronousMode="Async"`</ph>, sem exceção é acionada e a chamada é processada como um carregamento síncronos (consulte &lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29&gt;).&lt;/xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one asynchronous load operation per instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class can be performed at a time.</source>
          <target state="translated">Apenas uma operação de carregamento assíncrono por instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe pode ser efetuada num momento.&lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one asynchronous operation is attempted on the same instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">Se mais do que uma operação assíncrona for tentada a mesma instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe um &lt;xref:System.InvalidOperationException&gt;é emitida.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The stream containing the XAML input to load.</source>
          <target state="translated">O fluxo que contém o XAML de entrada para carregar.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The object that is the root of the created object tree.</source>
          <target state="translated">O objeto que é a raiz da árvore de objetos criados.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Multiple load operations are pending concurrently with the same <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Várias operações de carga estão pendentes simultaneamente com o mesmo <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.Xml.XmlReader&gt; and returns the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado no &lt;xref:System.Xml.XmlReader&gt;e devolve a raiz da árvore de objetos correspondente.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>An asynchronous XAML load operation will initially return an object that is purely the root object.</source>
          <target state="translated">Uma operação de carregamento XAML assíncrona inicialmente irá devolver um objeto que é puramente o objeto de raiz.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</source>
          <target state="translated">No modo assíncrono, continua a XAML, em seguida, análise e os objetos subordinados são preenchidos na raiz de.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</source>
          <target state="translated">Este é contrariamente XAML WPF típico de processamento comportamento e a interação com os conceitos WPF da duração do objeto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</source>
          <target state="translated">No interação típico (não-async), todas as propriedades de um objeto, incluindo todas as coleções subordinadas são preenchidas antes de devolver um elemento e relatórios-lo tal como carregado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</source>
          <target state="translated">Esse comportamento equivale a uma metodologia na parte inferior de segurança para a criação da árvore de onde o objeto de raiz é o último objeto fique disponível.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically would assign the returned object from LoadAsync to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</source>
          <target state="translated">Que normalmente iria atribuir o objeto devolvido do LoadAsync algumas localização na árvore de objetos da sua aplicação, com o conhecimento de que o conteúdo poderá ainda ser preencher e poderá fazer com que as atualizações do esquema incrementais se todo o conteúdo está exposto como parte da IU.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt; is handled.</source>
          <target state="translated">Por este motivo, é típico de isolar ou virtualizar os quaisquer objetos no modo assíncrono carregados de XAML e a utilização do Estado de aplicação ou específicos da aplicação lógica para o notificar quando &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;é processado.&lt;/xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for LoadAsync to load XAML input asynchronously, the root element in the XAML markup must contain the attribute and value <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</source>
          <target state="translated">Para que LoadAsync carregar XAML de entrada no modo assíncrono, o elemento de raiz na marcação de XAML tem de conter o atributo e o valor <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value is treated as case sensitive.</source>
          <target state="translated">O valor é tratado como maiúsculas confidenciais.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XAML markup root does not contain <ph id="ph1">`x:SynchronousMode="Async"`</ph>, no exception is thrown, and the call is instead processed as a synchronous load (see &lt;xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29&gt;).</source>
          <target state="translated">Se a raiz de marcação XAML não conter <ph id="ph1">`x:SynchronousMode="Async"`</ph>, sem exceção é acionada e a chamada em vez disso, é processada como um carregamento síncronos (consulte &lt;xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29&gt;).&lt;/xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one asynchronous load operation per instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class can be performed at a time.</source>
          <target state="translated">Apenas uma operação de carregamento assíncrono por instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe pode ser efetuada num momento.&lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one asynchronous operation is attempted on the same instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">Se mais do que uma operação assíncrona for tentada a mesma instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe um &lt;xref:System.InvalidOperationException&gt;é emitida.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An existing  &lt;xref:System.Xml.XmlReader&gt; that has already loaded/read the XAML input.</source>
          <target state="translated">Existente &lt;xref:System.Xml.XmlReader&gt;que tem já carregados/leitura a entrada XAML.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The root of the created object tree.</source>
          <target state="translated">A raiz da árvore de objetos criados.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Multiple load operations are performed concurrently with the same <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Várias operações de carregamento são executadas simultaneamente com o mesmo <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.IO.Stream&gt; and returns the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado no &lt;xref:System.IO.Stream&gt;e devolve a raiz da árvore de objetos correspondente.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>An asynchronous XAML load operation will initially return an object that is purely the root object.</source>
          <target state="translated">Uma operação de carregamento XAML assíncrona inicialmente irá devolver um objeto que é puramente o objeto de raiz.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</source>
          <target state="translated">No modo assíncrono, continua a XAML, em seguida, análise e os objetos subordinados são preenchidos na raiz de.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</source>
          <target state="translated">Este é contrariamente XAML WPF típico de processamento comportamento e a interação com os conceitos WPF da duração do objeto.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</source>
          <target state="translated">No interação típico (não-async), todas as propriedades de um objeto, incluindo todas as coleções subordinadas são preenchidas antes de devolver um elemento e relatórios-lo tal como carregado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</source>
          <target state="translated">Esse comportamento equivale a uma metodologia na parte inferior de segurança para a criação da árvore de onde o objeto de raiz é o último objeto fique disponível.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically would assign the returned object to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</source>
          <target state="translated">Que normalmente iria atribuir o objeto devolvido para algumas localização na árvore de objetos da sua aplicação, com o conhecimento de que o conteúdo poderá ainda ser preencher e poderá fazer com que as atualizações do esquema incrementais se todo o conteúdo está exposto como parte da IU.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt; is handled.</source>
          <target state="translated">Por este motivo, é típico de isolar ou virtualizar os quaisquer objetos no modo assíncrono carregados de XAML e a utilização do Estado de aplicação ou específicos da aplicação lógica para o notificar quando &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;é processado.&lt;/xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for LoadAsync to load markup asynchronously, the root element in the XAML markup must contain the attribute and value <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</source>
          <target state="translated">Ordem de LoadAsync carregar markup no modo assíncrono, o elemento de raiz na marcação de XAML tem de conter o atributo e o valor <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value is treated as case sensitive.</source>
          <target state="translated">O valor é tratado como maiúsculas confidenciais.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XAML markup root does not contain <ph id="ph1">`x:SynchronousMode="Async"`</ph>, no exception is thrown, and the call is processed as a synchronous load (see &lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29&gt;).</source>
          <target state="translated">Se a raiz de marcação XAML não conter <ph id="ph1">`x:SynchronousMode="Async"`</ph>, sem exceção é acionada e a chamada é processada como um carregamento síncronos (consulte &lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29&gt;).&lt;/xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one asynchronous load operation per instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class can be performed at a time.</source>
          <target state="translated">Apenas uma operação de carregamento assíncrono por instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe pode ser efetuada num momento.&lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one asynchronous operation is attempted on the same instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">Se mais do que uma operação assíncrona for tentada a mesma instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe um &lt;xref:System.InvalidOperationException&gt;é emitida.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A stream containing the XAML input to load.</source>
          <target state="translated">Um fluxo que contém o XAML de entrada para carregar.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Context information used by the parser.</source>
          <target state="translated">Informações de contexto utilizadas pelo parser.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The root of the created object tree.</source>
          <target state="translated">A raiz da árvore de objetos criados.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Multiple load operations are performed concurrently with the same <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Várias operações de carregamento são executadas simultaneamente com o mesmo <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous load operation completes.</source>
          <target state="translated">Ocorre quando uma operação assíncrona carga for concluída.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>LoadCompleted is also raised when an asynchronous load operation aborts.</source>
          <target state="translated">LoadCompleted também é desencadeado quando uma operação assíncrona carga interrompe.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified text string and returns an object that corresponds to the root of the specified markup.</source>
          <target state="translated">Lê a entrada XAML na cadeia de texto especificado e devolve um objeto que corresponde à raiz da marcação especificada.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation calls &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; internally after creating a stream from the string.</source>
          <target state="translated">As chamadas de implementação &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;internamente depois de criar um fluxo a partir da cadeia.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; for additional information such as possible exceptions.</source>
          <target state="translated">Consulte &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;para obter informações adicionais, tais como exceções possíveis.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The input XAML, as a single text string.</source>
          <target state="translated">A entrada XAML, como uma cadeia de texto único.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The root of the created object tree.</source>
          <target state="translated">A raiz da árvore de objetos criados.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Reads the XAML markup in the specified text string (using a specified <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) and returns an object that corresponds to the root of the specified markup.</source>
          <target state="translated">Lê a marcação XAML na cadeia de texto especificado (através de uma determinada <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>) e devolve um objeto que corresponde à raiz da marcação especificada.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation calls &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; internally after creating a stream from the string.</source>
          <target state="translated">As chamadas de implementação &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;internamente depois de criar um fluxo a partir da cadeia.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; for additional information such as possible exceptions.</source>
          <target state="translated">Consulte &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;para obter informações adicionais, tais como exceções possíveis.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The input XAML, as a single text string.</source>
          <target state="translated">A entrada XAML, como uma cadeia de texto único.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Context information used by the parser.</source>
          <target state="translated">Informações de contexto utilizadas pelo parser.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The root of the created object tree.</source>
          <target state="translated">A raiz da árvore de objetos criados.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>