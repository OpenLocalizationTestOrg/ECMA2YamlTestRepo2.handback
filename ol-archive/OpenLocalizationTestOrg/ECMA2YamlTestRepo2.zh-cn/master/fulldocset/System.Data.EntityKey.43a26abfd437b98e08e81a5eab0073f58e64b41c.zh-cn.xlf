<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">efbac770e5bdcf84c32eb66640f923cd965fb3d5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.EntityKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7fc8600da8f67451b4eb4a72f614b843a1d6514</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6db16fbb9916488371908d739f4d0e57f66cf452</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a durable reference to an object that is an instance of an entity type.</source>
          <target state="translated">提供对一个对象，它的实体类型实例的持久引用。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The EntityKey objects are immutable; that is, after they are constructed they cannot be modified.</source>
          <target state="translated">EntityKey 对象是不可变;也就是说，它们在构造之后不能修改它们。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Entity Keys<ept id="p1">](http://msdn.microsoft.com/en-us/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用实体键<ept id="p1">](http://msdn.microsoft.com/en-us/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an entity set name and a generic &lt;xref:System.Collections.Generic.KeyValuePair&gt; collection.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用实体集名称和泛型类&lt;xref:System.Collections.Generic.KeyValuePair&gt;集合。&lt;/xref:System.Collections.Generic.KeyValuePair&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is the entity set name qualified by the entity container name.</source>
          <target state="translated">A&lt;xref:System.String&gt;是由实体容器名称限定的实体集名称。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A generic &lt;xref:System.Collections.Generic.KeyValuePair&gt; collection.</source>
          <target state="translated">泛型&lt;xref:System.Collections.Generic.KeyValuePair&gt;集合。&lt;/xref:System.Collections.Generic.KeyValuePair&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Each key/value pair has a property name as the key and the value of that property as the value.</source>
          <target state="translated">每个键/值对具有同名的键和值作为该属性的值之间的属性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>There should be one pair for each property that is part of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">应该有一个属于每个属性对<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The order of the key/value pairs is not important, but each key property should be included.</source>
          <target state="translated">键/值对的顺序并不重要，但应包含每个键属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The property names are simple names that are not qualified with an entity type name or the schema name.</source>
          <target state="translated">属性名称都是不使用实体类型名称或架构名称限定的简单名称。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an entity set name and an <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph> collection of <bpt id="p2">&lt;xref href="System.Data.EntityKeyMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用实体集名称的类和<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph>集合<bpt id="p2">&lt;xref href="System.Data.EntityKeyMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is the entity set name qualified by the entity container name.</source>
          <target state="translated">A&lt;xref:System.String&gt;是由实体容器名称限定的实体集名称。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph> collection of <bpt id="p1">&lt;xref href="System.Data.EntityKeyMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects with which to initialize the key.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph>集合<bpt id="p1">&lt;xref href="System.Data.EntityKeyMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用来初始化键的对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an entity set name and specific entity key pair.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用的实体集名称和特定实体键对。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is the entity set name qualified by the entity container name.</source>
          <target state="translated">A&lt;xref:System.String&gt;是由实体容器名称限定的实体集名称。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is the name of the key.</source>
          <target state="translated">A &lt;xref:System.String&gt;，它是密钥的名称。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is the key value.</source>
          <target state="translated">&lt;xref:System.Object&gt;，它是键值。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the entity container.</source>
          <target state="translated">获取或设置实体容器的名称。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; value that is the name of the entity container for the entity to which the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> belongs.</source>
          <target state="translated">A&lt;xref:System.String&gt;是向其实体的实体容器的名称的值<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>所属。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets the key values associated with this <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置与此关联的键值<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.EntityKey&gt; class contains a copy of the values that make up the logical key that is specified for this type of entity.</source>
          <target state="translated">&lt;xref:System.Data.EntityKey&gt;类包含一份构成此类型的实体的逻辑键指定的值。&lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The members of the &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; each have a property name and a value in a &lt;xref:System.Collections.Generic.KeyValuePair%602&gt;, where the key is the property name and the value is the actual value of that property on the object.</source>
          <target state="translated">成员&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;每个具有属性名称和中的值&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;，其中键是属性名称，值是对象上的该属性的实际值。&lt;/xref:System.Collections.Generic.KeyValuePair%602&gt; &lt;/xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of key values for this <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph>的键值的这<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A simple <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifying an entity that resulted from a failed <bpt id="p2">[</bpt>TREAT<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> operation.</source>
          <target state="translated">一个简单<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>标识产生从失败的实体<bpt id="p2">[</bpt>将<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>操作。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>There are various ways to get an invalid entity.</source>
          <target state="translated">有多种方法可获得无效实体。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The most common scenario is when an <ph id="ph1">[!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)]</ph> query uses the <bpt id="p1">[</bpt>TREAT<ept id="p1">](../Topic/TREAT%20\(Entity%20SQL\).md)</ept> operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</source>
          <target state="translated">最常见情况的情形是<ph id="ph1">[!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)]</ph>查询使用<bpt id="p1">[</bpt>将<ept id="p1">](../Topic/TREAT%20\(Entity%20SQL\).md)</ept>运算符来解释为特定类型的多态类型的实例和该实例不匹配。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>(<bpt id="p1">[</bpt>TREAT<ept id="p1">](../Topic/TREAT%20\(Entity%20SQL\).md)</ept> is similar to the C# <ph id="ph1">`as`</ph> operator).</source>
          <target state="translated">(<bpt id="p1">[</bpt>将<ept id="p1">](../Topic/TREAT%20\(Entity%20SQL\).md)</ept>类似于 C#<ph id="ph1">`as`</ph>运算符)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to EntityNotValidKey.</source>
          <target state="translated">在这种情况下，查询将返回的实体中不是有效，以及生成的实体的实体键设置为 EntityNotValidKey。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the entity set.</source>
          <target state="translated">获取或设置实体集的名称。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; value that is the name of the entity set for the entity to which the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> belongs.</source>
          <target state="translated">A&lt;xref:System.String&gt;是实体的名称的值为实体设置到<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>所属。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this instance is equal to a specified <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回一个值，该值指示此实例是否等于指定<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">临时键具有与永久键比较语义不同︰ 的临时键使用引用相等性。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">也就是说，两个引用对同一个临时&lt;xref:System.Data.EntityKey&gt;实例是否相等的但没有其他&lt;xref:System.Data.EntityKey&gt;实例是否相等。&lt;/xref:System.Data.EntityKey&gt; &lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永久键确定基于包含键属性和&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;的值的相等性</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">也就是说，你可以拥有两个单独&lt;xref:System.Data.EntityKey&gt;的实例相等，如果它们的实体集相同并且键值相等。&lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but permanent keys do.</source>
          <target state="translated">此外，临时键具有无&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;或键值，但永久键执行的操作。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to compare with this instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象与此实例进行比较。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this instance and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p2">&lt;/code&gt;</ept> have equal values; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此实例和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">other</ph> <ept id="p2">&lt;/code&gt;</ept>具有相等的值; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">返回一个值，该值指示此实例是否与指定的对象相等。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">临时键具有与永久键比较语义不同︰ 的临时键使用引用相等性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">也就是说，两个引用对同一个临时&lt;xref:System.Data.EntityKey&gt;实例是否相等的但没有其他&lt;xref:System.Data.EntityKey&gt;实例是否相等。&lt;/xref:System.Data.EntityKey&gt; &lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永久键确定基于包含键属性和&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;的值的相等性</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; objects are the same and their key values are equal.</source>
          <target state="translated">也就是说，你可以拥有两个单独&lt;xref:System.Data.EntityKey&gt;的实例相等，如果其&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;对象是否相同并且键值相等。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt; &lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but permanent keys do.</source>
          <target state="translated">此外，临时键具有无&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;或键值，但永久键执行的操作。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; to compare with this instance.</source>
          <target state="translated">&lt;xref:System.Object&gt;与此实例进行比较。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this instance and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> have equal values; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此实例和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept>具有相等的值; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the entity set for this entity key from the given metadata workspace.</source>
          <target state="translated">获取从给定的元数据工作区中将设置为此实体键的实体。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The entity set is accessed based on the entity container name and entity set name of the key.</source>
          <target state="translated">基于实体容器名称访问的实体集和实体集的键的名称。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The metadata workspace that contains the entity.</source>
          <target state="translated">包含该实体元数据工作区。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.EntitySet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the entity key.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.EntitySet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>实体键。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The entity set could not be located in the specified metadata workspace.</source>
          <target state="translated">在指定的元数据工作区中找不到实体集。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Serves as a hash function for the current <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">用作当前的哈希函数<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>GetHashCode is suitable for hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">GetHashCode 适合于哈希算法和哈希表之类的数据结构。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A hash code for the current <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">当前的哈希代码<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is temporary.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是临时。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When a new entity is created, the <ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph> defines temporary key and sets the IsTemporary property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">创建新实体后，<ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph>定义临时项，并将 IsTemporary 属性设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When you call the &lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt; method, the <ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph> assigns a permanent key and sets the IsTemporary property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">当调用&lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;方法，<ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph>分配永久密钥，并将 IsTemporary 属性设置为<ph id="ph2">`false`</ph>。&lt;/xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 临时键通过该框架自动构造; 它们不能由用户直接构造。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">临时键具有与永久键比较语义不同︰ 的临时键使用引用相等性。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">也就是说，两个引用对同一个临时&lt;xref:System.Data.EntityKey&gt;实例是否相等的但没有其他&lt;xref:System.Data.EntityKey&gt;实例是否相等。&lt;/xref:System.Data.EntityKey&gt; &lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永久键确定基于包含键属性和&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;的值的相等性</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">也就是说，你可以拥有两个单独&lt;xref:System.Data.EntityKey&gt;的实例相等，如果它们的实体集相同并且键值相等。&lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but permanent keys do.</source>
          <target state="translated">此外，临时键具有无&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;或键值，但永久键执行的操作。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A&gt; method is called on an entity's &lt;xref:System.Data.Objects.ObjectStateEntry&gt; and the entity transitions from the &lt;xref:System.Data.EntityState&gt; state to &lt;xref:System.Data.EntityState&gt; state, the <ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph> automatically computes a new permanent key for the entity and synchronizes all temporary key references.</source>
          <target state="translated">当&lt;xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A&gt;方法调用实体的&lt;xref:System.Data.Objects.ObjectStateEntry&gt;，从实体转换&lt;xref:System.Data.EntityState&gt;状态&lt;xref:System.Data.EntityState&gt;状态，<ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph>自动计算新的永久键的实体并同步所有临时键引用。&lt;/xref:System.Data.EntityState&gt; &lt;/xref:System.Data.EntityState&gt; &lt;/xref:System.Data.Objects.ObjectStateEntry&gt; &lt;/xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is temporary; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>临时; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A singleton <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by which a read-only entity is identified.</source>
          <target state="translated">单一实例<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过只读实体标识。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</source>
          <target state="translated">只读实体标识无效每种方式，只不过它不是与实际实体集相关联的实体。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This can occur as part of the result of an <ph id="ph1">[!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)]</ph> query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</source>
          <target state="translated">这可以作为结果的一部分发生<ph id="ph1">[!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)]</ph>构造并返回实体实例 （而不是数据库表中检索到的实体） 查询的文本中所指定的查询。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</source>
          <target state="translated">关联与某个实体集之前，没有实体集的实体无法持久化到数据库。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Therefore, the object materializer will treat this kind of entity as if the &lt;xref:System.Data.Objects.MergeOption&gt; merge option was specified, regardless of the actual merge option that was specified.</source>
          <target state="translated">因此，对象具体化程序对待这种类型的实体就像&lt;xref:System.Data.Objects.MergeOption&gt;指定合并选项，而不考虑指定的实际的合并选项。&lt;/xref:System.Data.Objects.MergeOption&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</source>
          <target state="translated">将创建一个实体对象，但将不会解析其标识和它将不会添加到状态管理器作为具体化过程的一部分。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Helper method that is used to deserialize an <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">用于反序列化的帮助器方法<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>OnDeserialized is used by Object Services when deserializing an &lt;xref:System.Data.EntityKey&gt;.</source>
          <target state="translated">OnDeserialized &lt;xref:System.Data.EntityKey&gt;.&lt;/xref:System.Data.EntityKey&gt;反序列化时对象服务使用</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Serializing Objects<ept id="p1">](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>序列化对象<ept id="p1">](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</source>
          <target state="translated">描述源和给定的序列化流的目标，并提供其他调用方定义的上下文。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Helper method that is used to deserialize an <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">用于反序列化的帮助器方法<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>OnDeserializing is used by Object Services when deserializing an &lt;xref:System.Data.EntityKey&gt;.</source>
          <target state="translated">OnDeserializing &lt;xref:System.Data.EntityKey&gt;.&lt;/xref:System.Data.EntityKey&gt;反序列化时对象服务使用</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Serializing Objects<ept id="p1">](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>序列化对象<ept id="p1">](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</source>
          <target state="translated">描述源和目标的给定序列化流中，并提供其他调用方定义的上下文。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">比较两个<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">临时键具有与永久键比较语义不同︰ 的临时键使用引用相等性。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">也就是说，两个引用对同一个临时&lt;xref:System.Data.EntityKey&gt;实例是否相等的但没有其他&lt;xref:System.Data.EntityKey&gt;实例是否相等。&lt;/xref:System.Data.EntityKey&gt; &lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永久键确定基于包含键属性和&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;的值的相等性</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">也就是说，你可以拥有两个单独&lt;xref:System.Data.EntityKey&gt;的实例相等，如果它们的实体集相同并且键值相等。&lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but permanent keys do.</source>
          <target state="translated">此外，临时键具有无&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;或键值，但永久键执行的操作。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行比较。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行比较。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key1</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key2</ph><ept id="p3">&lt;/code&gt;</ept> values are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key1</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key2</ph><ept id="p3">&lt;/code&gt;</ept> values are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">比较两个<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">临时键具有与永久键比较语义不同︰ 的临时键使用引用相等性。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">也就是说，两个引用对同一个临时&lt;xref:System.Data.EntityKey&gt;实例是否相等的但没有其他&lt;xref:System.Data.EntityKey&gt;实例是否相等。&lt;/xref:System.Data.EntityKey&gt; &lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永久键确定基于包含键属性和&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;的值的相等性</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">也就是说，你可以拥有两个单独&lt;xref:System.Data.EntityKey&gt;的实例相等，如果它们的实体集相同并且键值相等。&lt;/xref:System.Data.EntityKey&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but regular keys do.</source>
          <target state="translated">此外，临时键具有无&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;或键值，但常规键执行的操作。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行比较。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行比较。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key1</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key2</ph><ept id="p3">&lt;/code&gt;</ept> values are not equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key1</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key2</ph><ept id="p3">&lt;/code&gt;</ept> values are not equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>