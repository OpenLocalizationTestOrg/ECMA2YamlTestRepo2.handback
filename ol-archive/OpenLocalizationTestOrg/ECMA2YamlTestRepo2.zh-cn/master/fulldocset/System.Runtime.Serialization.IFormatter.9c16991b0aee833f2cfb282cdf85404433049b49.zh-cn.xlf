<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ecd6d99b205d6d6afb980b52be4acb23dab04562</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.IFormatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af519be2cdd78d8fbfce90d4b09d43b7f0a30767</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da0bb7df713c42cd473a4fb1f460c0dc2e9dd975</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides functionality for formatting serialized objects.</source>
          <target state="translated">提供格式设置的序列化对象功能。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This interface must be implemented by any class identified as a formatter in the &lt;xref:System.Runtime.Serialization&gt; architecture.</source>
          <target state="translated">标识为中的格式化程序的任何类必须实现此接口&lt;xref:System.Runtime.Serialization&gt;体系结构。&lt;/xref:System.Runtime.Serialization&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Objects controlling their own serialization can do so by implementing the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface.</source>
          <target state="translated">对象控制它们自己的序列化可以做到这一点实现&lt;xref:System.Runtime.Serialization.ISerializable&gt;接口。&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In order for an object to be serialized, you must mark that object as being serializable.</source>
          <target state="translated">按对象要序列化的顺序，你必须将标记为可序列化该对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can do this by applying the serializable attribute to a class.</source>
          <target state="translated">你可以将可序列化特性应用于一个类来执行此操作。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If any object in the graph is not serializable, serialization will fail.</source>
          <target state="translated">如果关系图中的任何对象不是可序列化的无法序列化。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that performs type lookups during deserialization.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>在反序列化过程中执行类型查找。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When trying to resolve a type from information encoded on the stream, the formatter calls the &lt;xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A&gt; method on the &lt;xref:System.Runtime.Serialization.SerializationBinder&gt;.</source>
          <target state="translated">在尝试从编码流上的信息的类型解析，格式化程序调用&lt;xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A&gt;的时间为&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;。&lt;/xref:System.Runtime.Serialization.SerializationBinder&gt;方法&lt;/xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This method resolves these parameters to a &lt;xref:System.Type&gt; object.</source>
          <target state="translated">此方法会解析到这些参数&lt;xref:System.Type&gt;对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The binder can find a &lt;xref:System.Type&gt; at deserialization time that is in a different assembly than it was at serialization time.</source>
          <target state="translated">联编程序可以查找&lt;xref:System.Type&gt;在位于不同的程序集中，比它在序列化时的反序列化时。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Setting this property has no effect during serialization.</source>
          <target state="translated">设置此属性在序列化过程中已不起作用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that performs type lookups during deserialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在反序列化过程中执行类型查找。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for serialization and deserialization.</source>
          <target state="translated">获取或设置&lt;xref:System.Runtime.Serialization.StreamingContext&gt;用于序列化和反序列化。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The value of this property is passed to any object implementing &lt;xref:System.Runtime.Serialization.ISerializable&gt; or &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;.</source>
          <target state="translated">此属性的值传递到实现&lt;xref:System.Runtime.Serialization.ISerializable&gt;或&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;.&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt;&lt;/xref:System.Runtime.Serialization.ISerializable&gt;任何对象</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; indicates the destination (during serialization) or the source (during deserialization) of the data.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;指示 （在期间序列化） 目标或 （反序列化） 期间的数据源。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An object implementing &lt;xref:System.Runtime.Serialization.ISerializable&gt; can alter the data that it transmits depending on value of the Context.</source>
          <target state="translated">一个对象，实现&lt;xref:System.Runtime.Serialization.ISerializable&gt;可以更改它的方式传输具体取决于上下文的值的数据。&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for serialization and deserialization.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;用于序列化和反序列化。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Deserializes the data on the provided stream and reconstitutes the graph of objects.</source>
          <target state="translated">反序列化上提供的流的数据并将重组的对象的图。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Deserialize method reads graph information from the stream and reconstructs a clone of the original graph.</source>
          <target state="translated">反序列化方法从流中读取 graph 信息和重新构造的原始关系图的克隆。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The topology of the graph is preserved.</source>
          <target state="translated">保留的关系图的拓扑。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The deserialization process allocates an empty object of the appropriate type and repopulates its fields from the data transmitted in the <ph id="ph1">`serializationStream`</ph> stream.</source>
          <target state="translated">反序列化过程分配适当类型的空对象，并重新填充以传输的数据从其字段<ph id="ph1">`serializationStream`</ph>流。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It is important to note that no constructor is ever called on the object during deserialization.</source>
          <target state="translated">请务必注意，没有构造函数是曾在对象上调用反序列化期间。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The stream that contains the data to deserialize.</source>
          <target state="translated">包含要反序列化的数据的流。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The top object of the deserialized graph.</source>
          <target state="translated">反序列化的关系图的顶级对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Serializes an object, or graph of objects with the given root to the provided stream.</source>
          <target state="translated">序列化对象或与所提供的流到给定的根对象图。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The Serialize method automatically serializes the provided objects, and all objects connected to it, to the provided stream.</source>
          <target state="translated">Serialize 方法自动序列化所提供的对象和所有对象都连接到它，提供的流。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>By default, the serialization process records an object's state by gathering the values of all its fields (public and private).</source>
          <target state="translated">默认情况下，序列化过程中收集所有其字段 （公共和私有） 的值记录对象的状态。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These fields are saved to the stream along with information about the object such as the name qualified by the assembly for its type.</source>
          <target state="translated">这些字段将保存到流以及如由其类型的程序集限定的名称的对象有关的信息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The stream where the formatter puts the serialized data.</source>
          <target state="translated">其中格式化程序放入序列化的数据的流。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This stream can reference a variety of backing stores (such as files, network, memory, and so on).</source>
          <target state="translated">此流可以引用各种后备存储 （如文件、 网络、 内存和等等）。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The object, or root of the object graph, to serialize.</source>
          <target state="translated">对象或要序列化的对象图的根。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>All child objects of this root object are automatically serialized.</source>
          <target state="translated">将自动序列化此根对象的所有子对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used by the current formatter.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>当前格式化程序使用。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt; allows the user to specify an object best suited to handle the serialization of a particular object or class of objects.</source>
          <target state="translated">A&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;允许用户指定的对象最佳适用于处理特定对象或对象的类的序列化。&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Think of it as an implementation of &lt;xref:System.Runtime.Serialization.ISerializable&gt; but provided by a different object.</source>
          <target state="translated">它看作的实现&lt;xref:System.Runtime.Serialization.ISerializable&gt;但提供由不同对象。&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used by this formatter.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>格式化程序所使用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>