<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61fa9172ee24569572462862376105d4b0429a1b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.DirectoryServices.SearchResultCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41bf9605cd22f5a81736330c32eef9a5eabee9a4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cc58a9d6ae6a792a82777606f14784d54d3823f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The SearchResultCollection class contains the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances that the Active Directory hierarchy returned during a <bpt id="p2">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> query.</source>
          <target state="translated">SearchResultCollection 类包含<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>过程 Active Directory 层次结构返回的实例<bpt id="p2">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>查询。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Due to implementation restrictions, the SearchResultCollection class cannot release all of its unmanaged resources when it is garbage collected.</source>
          <target state="translated">由于实现限制 SearchResultCollection 类无法释放其非托管资源的所有垃圾回收时。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To prevent a memory leak, you must call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method when the SearchResultCollection object is no longer needed.</source>
          <target state="translated">若要防止内存泄漏，你必须调用&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;方法时不再需要 SearchResultCollection 对象。&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Determines if a specified <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is in this collection.</source>
          <target state="translated">确定指定<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象处于此集合。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to find.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要查找的对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified property belongs to this collection; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定的属性属于该集合;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Copies all <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in this collection to the specific array, starting at the specified index in the target array.</source>
          <target state="translated">将所有复制<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到特定的数组，从目标数组中指定索引处开始此集合中的对象。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The array of <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that receives the elements of this collection.</source>
          <target state="translated">数组<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接收此集合的元素的对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`results`</ph> where this method starts copying this collection.</source>
          <target state="translated">中的从零开始索引<ph id="ph1">`results`</ph>此方法从该位置开始复制此集合。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the number of <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in this collection.</source>
          <target state="translated">获取数<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此集合中的对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The number of <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in this collection.</source>
          <target state="translated">数<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此集合中的对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Releases all resources that are used by the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Dispose method, it allows the resources that are used by the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; to be reallocated for other purposes.</source>
          <target state="translated">Dispose 方法中，它允许通过使用的资源&lt;xref:System.DirectoryServices.SearchResultCollection&gt;可以重新分配用于其他目的。&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关释放的详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The garbage collector does not release memory for a &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object.</source>
          <target state="translated">垃圾回收器不会释放内存&lt;xref:System.DirectoryServices.SearchResultCollection&gt;对象。&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Therefore, an application must call the Dispose method explicitly to prevent a memory leak.</source>
          <target state="translated">因此，应用程序必须调用 Dispose 方法显式以防止内存泄漏。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources that are used by the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; invokes the protected Dispose method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;调用与受保护的 Dispose 方法<ph id="ph1">`disposing`</ph>参数设置为<ph id="ph2">`true`</ph>。&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用与 Dispose<ph id="ph1">`disposing`</ph>参数设置为<ph id="ph2">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources that are held by any managed objects that this &lt;xref:System.DirectoryServices.SearchResultCollection&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的所有资源此&lt;xref:System.DirectoryServices.SearchResultCollection&gt;引用。&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The garbage collector does not release memory for a &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object.</source>
          <target state="translated">垃圾回收器不会释放内存&lt;xref:System.DirectoryServices.SearchResultCollection&gt;对象。&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Therefore, you must call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method explicitly to prevent a memory leak.</source>
          <target state="translated">因此，必须调用&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;方法显式以防止内存泄漏。&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method of each object in the collection.</source>
          <target state="translated">此方法调用&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;集合中每个对象的方法。&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; and &lt;xref:System.Object.Finalize%2A&gt;, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;和&lt;xref:System.Object.Finalize%2A&gt;，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>重写 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&amp;lt;</ph>xref:System.Object.Finalize%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">重写<ph id="ph1">&amp;lt;</ph>xref:System.Object.Finalize%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">返回可用于循环访问此集合的枚举。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; object that you can use to iterate through this collection.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;可用于循环访问此集合的对象。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the handle that is returned by the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method that performs the actual search.</source>
          <target state="translated">获取返回的句柄<bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>执行实际搜索的方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>在 MSDN 库中的主题<bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The  &lt;xref:System.DirectoryServices.DirectorySearcher&gt; that created this collection calls the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method, which makes the query results available to the T:System.DirectoryServices.SearchResultCollection object.</source>
          <target state="translated">&lt;xref:System.DirectoryServices.DirectorySearcher&gt;，创建此集合调用<bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>方法，从而使查询结果可用于 T:System.DirectoryServices.SearchResultCollection 对象。&lt;/xref:System.DirectoryServices.DirectorySearcher&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>在 MSDN 库中的主题<bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Each time that a query is performed, a handle for the results of that query is associated with its  &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object.</source>
          <target state="translated">执行查询，则每次该查询的结果的句柄与关联其&lt;xref:System.DirectoryServices.SearchResultCollection&gt;对象。&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This handle corresponds to the search handle in ADSI.</source>
          <target state="translated">此句柄对应于 ADSI 中的搜索句柄。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This handle persists until you call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; method on the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object, so you must call &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; to prevent a memory leak.</source>
          <target state="translated">此句柄仍然存在，直到你调用&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;方法&lt;xref:System.DirectoryServices.SearchResultCollection&gt;对象，因此您必须调用&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;以防止内存泄漏。&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; &lt;/xref:System.DirectoryServices.SearchResultCollection&gt; &lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The garbage collector does not free memory for this particular object.</source>
          <target state="translated">垃圾回收器不会释放此特定对象的内存。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The ADS_SEARCH_HANDLE value that this collection uses.</source>
          <target state="translated">此集合使用的 ADS_SEARCH_HANDLE 值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of the specified <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object in this collection.</source>
          <target state="translated">返回指定的第一个匹配项的索引<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此集合中的对象。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to search for in this collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象在此集合中搜索。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first matching object.</source>
          <target state="translated">第一个匹配对象的从零开始索引。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns -1 if no member of this collection is identical to the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">将返回-1，如果此集合的任何成员不均不同于<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is located at a specified index in this collection.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>位于此集合中的指定索引处的对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In C#, this property is the indexer for the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; class.</source>
          <target state="translated">在 C# 中，此属性是&lt;xref:System.DirectoryServices.SearchResultCollection&gt;类&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;的索引器</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">在 JScript 中，你可以使用默认索引属性定义的类型，但不是能显式定义你自己。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and with an index type of &lt;xref:System.String&gt;.</source>
          <target state="translated">但是，指定 expando 特性的类上自动提供了默认索引其类型是对象的属性和&lt;xref:System.String&gt;.&lt;/xref:System.String&gt;的索引类型</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The zero-based index of the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to retrieve.</source>
          <target state="translated">从零开始的索引<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要检索对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is located at the specified index.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>位于指定索引处的对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> properties that were specified before the search was executed.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>前执行搜索指定的属性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt; that contains the properties that were specified in the &lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt; property collection before the search was executed.</source>
          <target state="translated">类型的数组&lt;xref:System.String&gt;包含在指定的属性&lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt;之前执行搜索的属性集合。&lt;/xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Copies the elements of the &lt;xref:System.Collections.ICollection&gt; to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.</source>
          <target state="translated">元素复制&lt;xref:System.Collections.ICollection&gt;到&lt;xref:System.Array&gt;特定处开始，&lt;xref:System.Array&gt;索引。&lt;/xref:System.Array&gt; &lt;/xref:System.Array&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Array&gt;这是从&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;复制的元素的目标&lt;/xref:System.Array&gt;的一维</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;必须具有从零开始的索引。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">中的从零开始索引<ph id="ph1">`array`</ph>复制开始处。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>是多维的。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is greater than the available space from <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-源中的元素的数目<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>大于从的可用空间<ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph>到目标的末尾<ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The type of the source &lt;xref:System.Collections.ICollection&gt; cannot be cast automatically to the type of the destination <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">源类型&lt;xref:System.Collections.ICollection&gt;无法自动转换为目标的类型<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示是否访问&lt;xref:System.Collections.ICollection&gt;是同步的 （线程安全）。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; returns an object, which can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;返回一个对象，它可用于同步对&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;访问&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Most collection classes in the &lt;xref:System.Collections?displayProperty=fullName&gt; namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">中的大多数集合类&lt;xref:System.Collections?displayProperty=fullName&gt;命名空间还实现提供同步的包装基础集合已同步方法。&lt;/xref:System.Collections?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是线程安全的过程。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:      <ph id="ph1">```c#   ICollection myCollection = new ICollection();     lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph>      <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph></source>
          <target state="translated">[Visual Basic、 C#]      下面的代码示例演示如何锁定集合使用&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;在整个枚举期间︰ <ph id="ph1">```c#   ICollection myCollection = new ICollection();     lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph> <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph>       &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果访问&lt;xref:System.Collections.ICollection&gt;是同步的 （线程安全）; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">获取可用于同步对&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;访问的对象</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">对于其基础存储区不公用的集合，预期的实现是返回当前实例。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's <ph id="ph1">`SyncRoot`</ph> property.</source>
          <target state="translated">请注意，指向当前实例的指针可能还不够对于包装了其他集合; 的集合这些集合应返回基础集合<ph id="ph1">`SyncRoot`</ph>属性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Most collection classes in the &lt;xref:System.Collections?displayProperty=fullName&gt; namespace also implement a <ph id="ph1">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">中的大多数集合类&lt;xref:System.Collections?displayProperty=fullName&gt;命名空间还实现<ph id="ph1">`Synchronized`</ph>方法，提供同步的包装基础集合。&lt;/xref:System.Collections?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">但是，派生的类可以提供自己的同步的版本的集合使用&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;属性。&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; of the collection, not directly on the collection.</source>
          <target state="translated">同步代码必须在执行操作&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;不是直接对集合的集合。&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">这可确保正确地执行操作的从其他对象派生的集合。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">具体地说，这样可保持正确的同步，与可能同时修改集合实例的其他线程。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In the absence of a <ph id="ph1">`Synchronized`</ph> method on a collection, the expected usage for &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; looks like this:      <ph id="ph2">```c#   ICollection MyCollection =...    lock(MyCollection.SyncRoot) {     // Some operation on the collection, which is now thread safe.    }   ```</ph>       [Visual Basic]      <ph id="ph3">```   Dim myCollection as New ICollection()    SyncLock myCollection.SyncRoot     ' Some operation on the collection, which is now thread safe.    End SyncLock   ```</ph>       Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">在缺少<ph id="ph1">`Synchronized`</ph>方法对集合，预期使用情况&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;如下所示︰ <ph id="ph2">```c#   ICollection MyCollection =...    lock(MyCollection.SyncRoot) {     // Some operation on the collection, which is now thread safe.    }   ```</ph> [Visual Basic]<ph id="ph3">```   Dim myCollection as New ICollection()    SyncLock myCollection.SyncRoot     ' Some operation on the collection, which is now thread safe.    End SyncLock   ```</ph>枚举整个集合本质上不是线程安全的过程。&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:      <ph id="ph1">```c#   ICollection myCollection = new ICollection();    lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph>      <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph></source>
          <target state="translated">[Visual Basic、 C#]      下面的代码示例演示如何锁定集合使用&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;在整个枚举期间︰ <ph id="ph1">```c#   ICollection myCollection = new ICollection();    lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph> <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph>       &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">可以用于&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;对访问进行同步的对象</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>