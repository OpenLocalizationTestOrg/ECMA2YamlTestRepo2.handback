<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6fd5493" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19446acc0babbf043d54201a51c2eba2f02fa8c1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8671b1e520b5eb22e70300a2202ed8347c80c06d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14decd313f1cf9bb1941b6d6866f62c164b17e23</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides properties, methods, and events related to the current application.</source>
          <target state="translated">提供属性、 方法和与当前的应用程序相关的事件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The properties exposed by the <ph id="ph1">`My.Application`</ph> object return data that is associated only with the current application or DLL.</source>
          <target state="translated">公开的属性<ph id="ph1">`My.Application`</ph>对象仅与当前应用程序或 DLL 相关联的返回数据。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>No system-level information can be altered with <ph id="ph1">`My.Application`</ph>.</source>
          <target state="translated">没有系统级信息可以更改与<ph id="ph1">`My.Application`</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application`</ph> object consists of the following classes:      -   &lt;xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase&gt; provides members that are available in all projects.</source>
          <target state="translated"><ph id="ph1">`My.Application`</ph>对象由以下类组成:-&lt;xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase&gt;提供在所有项目中可用的成员。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   WindowsFormsApplicationBase provides members that are available in Windows Forms applications.</source>
          <target state="translated">-WindowsFormsApplicationBase 提供 Windows 窗体应用程序中可用的成员。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase&gt; provides members that are available in console applications.</source>
          <target state="translated">-&lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase&gt;提供控制台应用程序中可用的成员。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified authentication mode.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与指定的身份验证模式的类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`authenticationMode`</ph> parameter is the &lt;xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&gt; enumeration value, then this constructor attempts to set the current thread's &lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt; property to the &lt;xref:System.Security.Principal.WindowsPrincipal&gt; for the current user.</source>
          <target state="translated">如果<ph id="ph1">`authenticationMode`</ph>参数是&lt;xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&gt;枚举值，则此构造函数尝试设置当前线程的&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;属性&lt;xref:System.Security.Principal.WindowsPrincipal&gt;为当前用户。&lt;/xref:System.Security.Principal.WindowsPrincipal&gt; &lt;/xref:System.Threading.Thread.CurrentPrincipal%2A&gt; &lt;/xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`authenticationMode`</ph> parameter is the &lt;xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&gt; enumeration value, then this constructor leaves the current thread's &lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt; property unchanged.</source>
          <target state="translated">如果<ph id="ph1">`authenticationMode`</ph>参数是&lt;xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&gt;枚举值，则此构造函数离开当前线程的&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;属性保持不变。&lt;/xref:System.Threading.Thread.CurrentPrincipal%2A&gt; &lt;/xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.AuthenticationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.AuthenticationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Specifies the application's authentication mode.</source>
          <target state="translated">指定应用程序的身份验证模式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Forms.ApplicationContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current thread of a Windows Forms application.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Windows.Forms.ApplicationContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>当前线程的 Windows 窗体应用程序的对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is an advanced member; it does not appear in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">这是一个高级的成员;它不会不会出现在 IntelliSense 除非你单击<bpt id="p1">**</bpt>所有<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This property returns the <bpt id="p1">&lt;xref href="System.Windows.Forms.ApplicationContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current thread.</source>
          <target state="translated">此属性返回<bpt id="p1">&lt;xref href="System.Windows.Forms.ApplicationContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>当前线程的对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>That object contains contextual information about the thread.</source>
          <target state="translated">该对象包含有关线程的上下文信息。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Processes all Windows messages currently in the message queue.</source>
          <target state="translated">处理当前在消息队列中的所有 Windows 消息。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.DoEvents`</ph> method allows your application to handle other events that might be raised while you code runs.</source>
          <target state="translated"><ph id="ph1">`My.Application.DoEvents`</ph>方法允许你的应用程序处理其他代码运行时，可能会引发的事件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.DoEvents`</ph> method has the same behavior as the &lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt; method.</source>
          <target state="translated"><ph id="ph1">`My.Application.DoEvents`</ph>方法具有相同的行为&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;方法。&lt;/xref:System.Windows.Forms.Application.DoEvents%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When you run a Windows Forms application, it creates a new form, which then waits for events to be handled.</source>
          <target state="translated">运行 Windows 窗体应用程序时，它会创建新的表单，然后等待要处理的事件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each time the form handles an event, such as a button click, it processes all the code associated with that event.</source>
          <target state="translated">每当窗体处理的事件，例如单击按钮; 它将处理所有与该事件关联的代码。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>All other events wait in the queue.</source>
          <target state="translated">在队列中等待所有其他事件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>While your code handles the event, your application does not respond.</source>
          <target state="translated">而你的代码来处理该事件，你的应用程序未响应。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, the window does not repaint if another window is dragged on top.</source>
          <target state="translated">例如，如果另一个窗口拖到顶部，也无法重新绘制窗口。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you call <ph id="ph1">`My.Application.DoEvents`</ph> in your code, your application can handle the other events.</source>
          <target state="translated">如果调用<ph id="ph1">`My.Application.DoEvents`</ph>在代码中，你的应用程序可以处理其他事件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, if your code adds data to a &lt;xref:System.Windows.Forms.ListBox&gt; in a loop, and after each step of the loop it calls <ph id="ph1">`My.Application.DoEvents`</ph>, your form repaints when another window is dragged over it.</source>
          <target state="translated">例如，如果你的代码将数据添加到&lt;xref:System.Windows.Forms.ListBox&gt;在循环中，和它调用循环的每个步骤后<ph id="ph1">`My.Application.DoEvents`</ph>，另一个窗口拖动到它。 上时，你的窗体重新绘制&lt;/xref:System.Windows.Forms.ListBox&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you remove <ph id="ph1">`My.Application.DoEvents`</ph> from your code, your form will not repaint until the click event handler of the button is finished executing.</source>
          <target state="translated">如果你删除<ph id="ph1">`My.Application.DoEvents`</ph>从代码中，你的窗体不会重新绘制按钮的 click 事件处理程序完成之前执行。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Typically, you use this method in a loop to process messages.</source>
          <target state="translated">通常情况下，在处理消息循环中使用此方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`My.Application.DoEvents`</ph> method does not process events in exactly the same way as the form does.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`My.Application.DoEvents`</ph>窗体一样方法不完全相同的方式中处理事件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use multithreading to make the form directly handle the events.</source>
          <target state="translated">使用多线程处理，以使表单直接处理的事件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Multithreaded Applications<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>多线程应用程序<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  If a method that handles a user interface (UI) event calls the <ph id="ph2">`My.Application.DoEvents`</ph> method, the method might be re-entered before it finishes.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 如果处理用户界面 (UI) 事件的方法的调用<ph id="ph2">`My.Application.DoEvents`</ph>方法，该方法之前，可能需要重新输入其完成。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This can happen because the <ph id="ph1">`My.Application.DoEvents`</ph> method processes Windows messages, and Windows messages can raise events.</source>
          <target state="translated">这可能是由于<ph id="ph1">`My.Application.DoEvents`</ph>方法处理 Windows 消息和 Windows 消息可以引发事件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following table lists an example of a task involving the <ph id="ph1">`My.Application.DoEvents`</ph> method.</source>
          <target state="translated">下表列出的任务涉及示例<ph id="ph1">`My.Application.DoEvents`</ph>方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |To|See|   |Allow a form to respond to UI input while busy|<bpt id="p1">[</bpt>Walkthrough: Handling Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">|||  |-|-|  |到 |请参阅 |  |允许窗体响应用户界面输入在忙时 |<bpt id="p1">[</bpt>演练︰ 处理事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Determines whether this application will use the Windows XP styles for windows, controls, and so on.</source>
          <target state="translated">确定此应用程序是否将用于 windows 控件，以及等中的 Windows XP 样式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt; method uses this property to determine whether to call &lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;方法使用此属性以确定是调用&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;.&lt;/xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt; &lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that indicates whether this application will use the XP Windows styles for windows, controls, and so on.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;值，该值指示此应用程序是否将使用的 windows、 控件和等等的 XP 窗口样式。&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Hides the application's splash screen.</source>
          <target state="translated">隐藏应用程序的初始屏幕。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt; class creates the splash screen on a separate thread.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;类的单独线程上创建初始屏幕。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This method marshals the call to the correct thread.</source>
          <target state="translated">此方法将对正确线程的调用封送。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This method is called when the main form is done loading.</source>
          <target state="translated">完成主窗体后调用此方法加载。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Determines whether this application is a single-instance application.</source>
          <target state="translated">确定此应用程序是否为单实例应用程序。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A&gt; method uses this property to determine whether this application is a single-instance application.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A&gt;方法使用此属性来确定此应用程序是否为单实例应用程序。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that indicates whether this application is a single-instance application.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;值，该值指示此应用程序是否为单实例应用程序。&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets or sets the main form for this application.</source>
          <target state="translated">获取或设置此应用程序的主窗体。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`MainForm`</ph> property to get or set the &lt;xref:System.Windows.Forms.Form&gt; object that the Visual Basic Application Startup/Shutdown model uses as the application's main form.</source>
          <target state="translated">使用<ph id="ph1">`MainForm`</ph>属性来获取或设置&lt;xref:System.Windows.Forms.Form&gt;Visual Basic 应用程序启动/关闭模型中用作应用程序的主窗体的对象。&lt;/xref:System.Windows.Forms.Form&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This property supports the <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application Startup/Shutdown model.</source>
          <target state="translated">此属性支持<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>应用程序启动/关闭模型。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overview of the Visual Basic Application Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 应用程序模型概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The changes to this property are not persisted when the application closes.</source>
          <target state="translated">应用程序关闭时，不会保留更改此属性。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To change the main form permanently, you must change the setting in the <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept>.</source>
          <target state="translated">若要永久更改主窗体，你必须更改中的设置<bpt id="p1">**</bpt>项目设计器<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the main form for this application.</source>
          <target state="translated">获取或设置此应用程序的主窗体。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Determines the minimum length of time, in milliseconds, for which the splash screen is displayed.</source>
          <target state="translated">确定时间 （毫秒），为其显示初始屏幕的最小长度。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.MinimumSplashScreenDisplayTime`</ph> property allows you to specify the minimum length of time you want the application's splash screen to be displayed.</source>
          <target state="translated"><ph id="ph1">`My.Application.MinimumSplashScreenDisplayTime`</ph>属性允许你指定希望应用程序的初始屏幕，要显示的时间的最小长度。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the main form finishes initializing in less time than what is specified by this property, the splash screen remains until the requested amount of time passes, at which time the main form is displayed.</source>
          <target state="translated">如果主窗体完成初始化时间比此属性指定的内容更短之前的时间的推移，此时主窗体将显示请求的量, 一直处于初始屏幕。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If your application takes longer to start, the splash screen is closed once the main form becomes active.</source>
          <target state="translated">如果你的应用程序采用长时间才能启动，初始屏幕已关闭后主窗体将变为活动状态。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When you add a splash screen to your application using the Project Designer, it sets the <ph id="ph1">`My.Application.MinimumSplashScreenDisplayTime`</ph> property to 2000, giving a minimum display time of two seconds.</source>
          <target state="translated">当你将初始屏幕添加到使用项目设计器的应用程序时，它将设置<ph id="ph1">`My.Application.MinimumSplashScreenDisplayTime`</ph>属性设置为 2000，从而指定的最小显示时间为两秒。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This property supports the <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.</source>
          <target state="translated">此属性支持<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>应用程序模型。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overview of the Visual Basic Application Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 应用程序模型概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You should set the <ph id="ph1">`My.Application.MinimumSplashScreenDisplayTime`</ph> property in a method that overrides the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt; or &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt; method.</source>
          <target state="translated">应设置<ph id="ph1">`My.Application.MinimumSplashScreenDisplayTime`</ph>重写的方法中的属性&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;或&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;方法。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt; &lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Code that overrides methods of the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt; class should be entered in the ApplicationEvents.vb file, which is hidden by default.</source>
          <target state="translated">重写的方法的代码&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;类应输入在 ApplicationEvents.vb 文件中，默认情况下隐藏。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>||   |-|   |To access the Code Editor window for overriding members|   |1.</source>
          <target state="translated">||  |-|  |若要访问代码编辑器窗口，重写成员 |  |&amp;1;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>With a project selected in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">在选择了项目<bpt id="p1">**</bpt>解决方案资源管理器<ept id="p1">**</ept>，单击<bpt id="p2">**</bpt>属性<ept id="p2">**</ept>上<bpt id="p3">**</bpt>项目<ept id="p3">**</ept>菜单。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>2.  Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">2.单击<bpt id="p1">**</bpt>应用程序<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>3.  Click the <bpt id="p1">**</bpt>View Application Events<ept id="p1">**</ept> button to open the Code Editor.</source>
          <target state="translated">3.单击<bpt id="p1">**</bpt>查看应用程序事件<ept id="p1">**</ept>按钮以打开代码编辑器。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Application Page, Project Designer (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>应用程序页，项目设计器 (Visual Basic 中)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。 |     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The minimum length of time, in milliseconds, for which the splash screen is displayed.</source>
          <target state="translated">时间 （毫秒），为其显示初始屏幕的最小长度。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Occurs when the network availability changes.</source>
          <target state="translated">当网络可用性更改时发生。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An application raises the <ph id="ph1">`NetworkAvailabilityChanged`</ph> event every time that the availability of the network changes.</source>
          <target state="translated">应用程序引发的<ph id="ph1">`NetworkAvailabilityChanged`</ph>事件每次更改网络的可用性时。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A&gt; property of the <ph id="ph1">`e`</ph> parameter to get the new state of the network connection.</source>
          <target state="translated">你可以使用&lt;xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A&gt;属性<ph id="ph1">`e`</ph>参数，以获取网络连接的新状态。&lt;/xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To get the current state of the network connection, use the &lt;xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A&gt; property.</source>
          <target state="translated">若要获取的网络连接的当前状态，请使用&lt;xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A&gt;属性。&lt;/xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This event is raised on the application's main thread with the other user-interface events.</source>
          <target state="translated">在与其他用户界面事件的应用程序的主线程上引发此事件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This enables the event handler to access directly the application's UI.</source>
          <target state="translated">这样，事件处理程序，可以直接访问应用程序的 UI。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A&gt; method.</source>
          <target state="translated">但是，如果应用程序正忙于处理另一个用户界面事件时将引发此事件，此事件无法处理直到另一个事件处理程序完成或调&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A&gt;方法。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The &lt;xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged&gt; event provides the same functionality as this event but is available for all application types.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged&gt;事件提供相同的功能，因为此事件但是可用于所有应用程序类型。&lt;/xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The code for the <ph id="ph1">`NetworkAvailabilityChanged`</ph> event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</source>
          <target state="translated">代码<ph id="ph1">`NetworkAvailabilityChanged`</ph>事件处理程序存储在默认情况下隐藏的 ApplicationEvents.vb 文件。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>||   |-|   |To access the Code Editor window for application events|   |1.</source>
          <target state="translated">||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&amp;1;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Have a project selected in <bpt id="p1">**</bpt>Solution Explorer.<ept id="p1">**</ept></source>
          <target state="translated">在选择一个项目<bpt id="p1">**</bpt>解决方案资源管理器。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu.</source>
          <target state="translated">单击<bpt id="p1">**</bpt>属性<ept id="p1">**</ept>上<bpt id="p2">**</bpt>项目<ept id="p2">**</ept>菜单。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>2.  Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">2.单击<bpt id="p1">**</bpt>应用程序<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>3.  Click the <bpt id="p1">**</bpt>View Application Events<ept id="p1">**</ept> button to open the Code Editor.</source>
          <target state="translated">3.单击<bpt id="p1">**</bpt>查看应用程序事件<ept id="p1">**</ept>按钮以打开代码编辑器。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Application Page, Project Designer (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.|      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  Many network hubs will provide a network connection even if the hub is disconnected from a larger network.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>应用程序页，项目设计器 (Visual Basic 中)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。 |    &amp;1;&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 许多网络中心将提供网络连接，即使中心已断开的大型网络。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Consequently, for wired connections, this event indicates change in the connection between the computer and a hub.</source>
          <target state="translated">因此，对于有线连接，此事件指示计算机和中心之间的连接中的更改。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`NetworkAvailabilityChanged`</ph> event is not raised by applications when they are run on Windows 95 and Windows 98, or when they are run by a non-administrator on Windows 2000.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt;<ph id="ph2">`NetworkAvailabilityChanged`</ph>应用程序在运行时在 Windows 95 和 Windows 98 上或在不由非管理员在 Windows 2000 上运行时则不引发事件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If your application might run on those operating systems, use the &lt;xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A&gt; property to check for network availability.</source>
          <target state="translated">如果你的应用程序可能会运行这些操作系统上，使用&lt;xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A&gt;属性来检查网络可用性。&lt;/xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, allows a designer to emit code that configures the splash screen and main form.</source>
          <target state="translated">当在派生类中重写，允许设计器发出配置初始屏幕和主窗体的代码。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>By default, this method does nothing.</source>
          <target state="translated">默认情况下，此方法没有任何影响。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>However, when you select a main form for your application in the <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept>, the designer overrides this method with a method that sets the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A&gt; property to a new instance of the main form.</source>
          <target state="translated">但是，当你选择主窗体应用程序中<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph><bpt id="p1">**</bpt>项目设计器<ept id="p1">**</ept>，设计器将重写此方法的设置方法&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A&gt;到主窗体的新实例的属性。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A&gt; method.</source>
          <target state="translated">调用此方法&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A&gt;方法。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, allows a designer to emit code that initializes the splash screen.</source>
          <target state="translated">当在派生类中重写，允许设计器发出初始化初始屏幕的代码。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>By default, this method does nothing.</source>
          <target state="translated">默认情况下，此方法没有任何影响。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you select a splash screen for your application in the <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept>, the designer overrides the OnCreateSplashScreen method with a method that sets the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A&gt; property to a new instance of the splash-screen form.</source>
          <target state="translated">如果你选择为应用程序初始屏幕<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph><bpt id="p1">**</bpt>项目设计器<ept id="p1">**</ept>，设计器将重写的方法设置 OnCreateSplashScreen 方法&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A&gt;属性设置为初始屏幕窗体的新实例。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt; method.</source>
          <target state="translated">调用此方法&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;方法。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and initializes the splash screen, if defined.</source>
          <target state="translated">设置视觉样式、 文本显示样式和当前线程的主体主应用程序 （如果应用程序使用 Windows 身份验证），并初始化初始屏幕中，如果定义。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>By default, this method sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and calls <ph id="ph1">`ShowSplashScreen`</ph> if neither <ph id="ph2">`/nosplash`</ph> nor <ph id="ph3">`-nosplash`</ph> is used as a command-line argument.</source>
          <target state="translated">默认情况下，此方法设置的视觉样式、 文本显示样式和当前线程的主体主应用程序 （如果应用程序使用 Windows 身份验证），并调用<ph id="ph1">`ShowSplashScreen`</ph>如果既没有<ph id="ph2">`/nosplash`</ph>也不<ph id="ph3">`-nosplash`</ph>用作命令行参数。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This method calls the following methods:      -   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A&gt;.</source>
          <target state="translated">此方法调用以下方法:- &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A&gt;.&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;.</source>
          <target state="translated">-   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;.&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, containing the command-line arguments as strings for the current application.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph>的<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，为当前应用程序的字符串中包含的命令行自变量。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; indicating if application startup should continue.</source>
          <target state="translated">A &lt;xref:System.Boolean&gt;，该值指示是否应继续进行应用程序启动。&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Provides the starting point for when the main application is ready to start running, after the initialization is done.</source>
          <target state="translated">当主应用程序已准备好开始运行，在初始化完成后提供起始点。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>By default, before it enters the Windows Forms message loop, this method calls the <ph id="ph1">`OnCreateMainForm`</ph> (to create the application's main form) and <ph id="ph2">`HideSplashScreen`</ph> (to close the splash screen) methods:      -   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt;.</source>
          <target state="translated">默认情况下，它将进入 Windows 窗体消息循环之前, 此方法调用<ph id="ph1">`OnCreateMainForm`</ph>（用于创建应用程序的主窗体） 和<ph id="ph2">`HideSplashScreen`</ph>（若要关闭初始屏幕） 方法:- &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt;.&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Provides a way for a designer to emit code that initializes the main form.</source>
          <target state="translated">提供为设计器发出初始化主窗体的代码的方法。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>By default, this method does nothing.</source>
          <target state="translated">默认情况下，此方法没有任何影响。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>However, when you select a main form for your application in the <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept>, the designer overrides the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt; method with a method that sets the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A&gt; property to a new instance of the main form.</source>
          <target state="translated">但是，当你选择主窗体应用程序中<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph><bpt id="p1">**</bpt>项目设计器<ept id="p1">**</ept>，设计器重写&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt;方法与设置方法&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A&gt;到主窗体的新实例的属性。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A&gt; &lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A&gt;.</source>
          <target state="translated">-   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A&gt;.&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the application has a splash screen defined and it is open, this method closes the splash screen.</source>
          <target state="translated">如果应用程序具有定义的初始屏幕，并且它已打开，则此方法关闭初始屏幕。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>By default, this method closes the splash screen.</source>
          <target state="translated">默认情况下，此方法关闭初始屏幕。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, allows for code to run when the application shuts down.</source>
          <target state="translated">当在派生类中重写，允许在应用程序关闭时运行代码。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This method does not run if an unhandled exception occurs in the main application.</source>
          <target state="translated">如果在主应用程序中出现未经处理的异常，此方法不会运行。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>By default, this method raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown&gt; event.</source>
          <target state="translated">默认情况下，此方法将引发&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown&gt;事件。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, allows for code to run when the application starts.</source>
          <target state="translated">当在派生类中重写，允许应用程序启动时运行代码。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>By default, this method raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt; event.</source>
          <target state="translated">默认情况下，此方法将引发&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;事件。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The event handler can set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the event argument.</source>
          <target state="translated">事件处理程序可以设置&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;事件自变量的属性。&lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; is <ph id="ph1">`True`</ph>, this method returns <ph id="ph2">`False`</ph> to cancel the application startup.</source>
          <target state="translated">如果&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;是<ph id="ph1">`True`</ph>，此方法返回<ph id="ph2">`False`</ph>取消应用程序启动。&lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Otherwise, this method returns <ph id="ph1">`True`</ph>.</source>
          <target state="translated">否则，此方法返回<ph id="ph1">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.StartupEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.StartupEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Contains the command-line arguments of the application and indicates whether the application startup should be canceled.</source>
          <target state="translated">包含应用程序的命令行参数，指示是否应取消在应用程序启动。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; that indicates if the application should continue starting up.</source>
          <target state="translated">&lt;xref:System.Boolean&gt;指示是否应继续应用程序进行启动。&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, allows for code to run when a subsequent instance of a single-instance application starts.</source>
          <target state="translated">当在派生类中重写，允许单实例应用程序的后续实例启动时运行代码。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>By default, this method raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt; event.</source>
          <target state="translated">默认情况下，此方法将引发&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt;事件。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The event handler can set the &lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A&gt; property of the event argument.</source>
          <target state="translated">事件处理程序可以设置&lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A&gt;事件自变量的属性。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If &lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A&gt; is <ph id="ph1">`True`</ph>, the method activates the main form.</source>
          <target state="translated">如果&lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A&gt;是<ph id="ph1">`True`</ph>，方法将激活主窗体。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Otherwise, the main form is left in its current state.</source>
          <target state="translated">否则，主窗体处于其当前状态。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Contains the command-line arguments of the subsequent application instance and indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</source>
          <target state="translated">包含在后续的应用程序实例的命令行参数，指示第一个应用程序实例是否应转到在退出异常处理程序时的前景。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, allows for code to run when an unhandled exception occurs in the application.</source>
          <target state="translated">当在派生类中重写，允许代码运行时应用程序中发生未经处理的异常。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>By default, this method raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&gt; event as long as a debugger is not attached and the user is handling the <ph id="ph1">`UnhandledException`</ph> event.</source>
          <target state="translated">默认情况下，此方法将引发&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&gt;事件前提是不连接调试器并处理用户<ph id="ph1">`UnhandledException`</ph>事件。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The event handler can set the &lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt; property.</source>
          <target state="translated">事件处理程序可以设置&lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt;属性。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If &lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt; is <ph id="ph1">`False`</ph>, or if the event is not handled, the application exits upon return from the exception handler.</source>
          <target state="translated">如果&lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt;是<ph id="ph1">`False`</ph>，或如果不处理该事件，从异常处理程序返回后退出应用程序。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Otherwise, control of the application is returned to the Windows Forms message loop.</source>
          <target state="translated">否则，应用程序控制返回到 Windows 窗体消息循环。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; that indicates whether the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event was raised.</source>
          <target state="translated">A &lt;xref:System.Boolean&gt;，该值指示是否<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件被引发。&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets a collection of all the application's open forms.</source>
          <target state="translated">获取应用程序的所有打开窗体的集合。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.OpenForms`</ph> property gets a collection of all the application's open forms.</source>
          <target state="translated"><ph id="ph1">`My.Application.OpenForms`</ph>属性获取应用程序的所有打开窗体的集合。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The behavior is identical to the &lt;xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">行为等同于&lt;xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`My.Application.OpenForms`</ph> property returns all open forms, regardless of which thread opened them.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`My.Application.OpenForms`</ph>属性返回所有已打开窗体，而不考虑由哪个线程打开它们。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>You should check the &lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt; property of each form before accessing it; otherwise, it might throw an &lt;xref:System.InvalidOperationException&gt; exception.</source>
          <target state="translated">应检查&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;属性的每个窗体，然后才能访问它; 否则，它可能会引发&lt;xref:System.InvalidOperationException&gt;异常。&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.FormCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains all of the application's open forms.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.FormCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含所有应用程序的已打开窗体的对象。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Sets up and starts the Visual Basic Application model.</source>
          <target state="translated">设置并启动 Visual Basic 应用程序模型。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.Run`</ph> method provides support for the <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.</source>
          <target state="translated"><ph id="ph1">`My.Application.Run`</ph>方法提供对支持<ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>应用程序模型。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This method should be called only from the application's <ph id="ph1">`Sub Main`</ph>.</source>
          <target state="translated">此方法应仅从应用程序的调用<ph id="ph1">`Sub Main`</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">`Sub Main`</ph> of a Windows Forms application calls this method.</source>
          <target state="translated">默认情况下， <ph id="ph1">`Sub Main`</ph> Windows 窗体应用程序调用此方法。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overview of the Visual Basic Application Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 应用程序模型概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Array of type <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">类型数组<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The command line from <bpt id="p1">&lt;xref uid="langword_csharp_Sub Main" name="Sub Main" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从命令行<bpt id="p1">&lt;xref uid="langword_csharp_Sub Main" name="Sub Main" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Determines whether the application saves the user settings on exit.</source>
          <target state="translated">确定应用程序是否在退出保存用户设置。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SaveMySettingsOnExit`</ph> property allows the user to change how the application saves settings, at run time.</source>
          <target state="translated"><ph id="ph1">`SaveMySettingsOnExit`</ph>属性允许用户更改应用程序将设置保存在运行时如何。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>You can explicitly save setting changes by using the &lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt; method of the <ph id="ph1">`My.Settings`</ph> object.</source>
          <target state="translated">还可以通过使用显式保存设置更改&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;方法<ph id="ph1">`My.Settings`</ph>对象。&lt;/xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>For more information about changing and saving settings, see <bpt id="p1">[</bpt>Application Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关更改和保存设置的详细信息，请参阅<bpt id="p1">[</bpt>应用程序属性<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The changes to this property are not persisted when the application closes.</source>
          <target state="translated">应用程序关闭时，不会保留更改此属性。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>To change the <ph id="ph1">`SaveMySettingsOnExit`</ph> property permanently, you must change the setting in the <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept>:      ||   |-|   |To change the setting in the Project Designer|   |1.</source>
          <target state="translated">若要更改<ph id="ph1">`SaveMySettingsOnExit`</ph>属性永久，则必须更改中的设置<bpt id="p1">**</bpt>项目设计器<ept id="p1">**</ept>: | |  |-|  |若要更改项目设计器中的设置 |  |&amp;1;。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Have a project selected in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</source>
          <target state="translated">在选择一个项目<bpt id="p1">**</bpt>解决方案资源管理器<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu.</source>
          <target state="translated">单击<bpt id="p1">**</bpt>属性<ept id="p1">**</ept>上<bpt id="p2">**</bpt>项目<ept id="p2">**</ept>菜单。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>2.  Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">2.单击<bpt id="p1">**</bpt>应用程序<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>3.  Select <bpt id="p1">**</bpt>Save My.Settings on Shutdown<ept id="p1">**</ept>.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">3.选择<bpt id="p1">**</bpt>上关闭保存 My.Settings<ept id="p1">**</ept>。 |     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicates that the application saves the user settings on exit.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指示应用程序在退出保存用户设置。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Otherwise, the settings are not implicitly saved.</source>
          <target state="translated">否则，这些设置不隐式保存。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Determines if the application has a splash screen defined, and if it does, displays it.</source>
          <target state="translated">确定应用程序是否具有定义，初始屏幕，如果是这样，显示内容。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>By default, this method calls <ph id="ph1">`OnCreateSplashScreen`</ph> in a thread-safe way.</source>
          <target state="translated">默认情况下，此方法调用<ph id="ph1">`OnCreateSplashScreen`</ph>以线程安全的方式。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The ShowSplashScreen method contains the code that displays the splash screen for at least the number of milliseconds specified by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt; property.</source>
          <target state="translated">ShowSplashScreen 方法包含代码，显示初始屏幕的至少由指定的毫秒数&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt;属性。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To use this functionality, you must set the <ph id="ph1">`My.Application.MinimumSplashScreenDisplayTime`</ph> property in a method that overrides the ShowSplashScreen or &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt; method, or add the splash screen to your application using the <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept>.</source>
          <target state="translated">若要使用此功能，必须设置<ph id="ph1">`My.Application.MinimumSplashScreenDisplayTime`</ph>替代 ShowSplashScreen 的方法中的属性或&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;方法，或将初始屏幕添加到你的应用程序使用<bpt id="p1">**</bpt>项目设计器<ept id="p1">**</ept>。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt;。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt; method.</source>
          <target state="translated">调用此方法&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;方法。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Occurs when the application shuts down.</source>
          <target state="translated">在应用程序关闭时发生。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>An application raises the <ph id="ph1">`Shutdown`</ph> event before it exits.</source>
          <target state="translated">应用程序引发的<ph id="ph1">`Shutdown`</ph>退出之前对其的事件。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This allows you to control how the application closes its resources.</source>
          <target state="translated">这样，你可以控制应用程序关闭其资源的方式。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This event is part of the <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.</source>
          <target state="translated">此事件是的一部分<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>应用程序模型。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overview of the Visual Basic Application Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 应用程序模型概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The code for the <ph id="ph1">`Shutdown`</ph> event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</source>
          <target state="translated">代码<ph id="ph1">`Shutdown`</ph>事件处理程序存储在默认情况下隐藏的 ApplicationEvents.vb 文件。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>||   |-|   |To access the Code Editor window for application events|   |1.</source>
          <target state="translated">||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&amp;1;。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>With a project selected in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">在选择了项目<bpt id="p1">**</bpt>解决方案资源管理器<ept id="p1">**</ept>，单击<bpt id="p2">**</bpt>属性<ept id="p2">**</ept>上<bpt id="p3">**</bpt>项目<ept id="p3">**</ept>菜单。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>2.  Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">2.单击<bpt id="p1">**</bpt>应用程序<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>3.  Click the <bpt id="p1">**</bpt>View Application Events<ept id="p1">**</ept> button to open the Code Editor.</source>
          <target state="translated">3.单击<bpt id="p1">**</bpt>查看应用程序事件<ept id="p1">**</ept>按钮以打开代码编辑器。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Application Page, Project Designer (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>应用程序页，项目设计器 (Visual Basic 中)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。 |     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Determines what happens when the application's main form closes.</source>
          <target state="translated">确定应用程序的主窗体关闭时，会发生什么情况。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A&gt; method checks the value of this property to determine if the application should shut down when the main form is closed, or if another open form should be promoted as the new main form.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A&gt;方法检查此属性来确定是否应用程序应关闭时已关闭时主窗体或窗体是否将打开另一个应提升为新的主窗体的值。&lt;/xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.ShutdownMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value, indicating what the application should do when the main form closes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.ApplicationServices.ShutdownMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>枚举值，指示应用程序应执行的主窗体关闭时。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets or sets the splash screen for this application.</source>
          <target state="translated">获取或设置此应用程序的初始屏幕。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.SplashScreen`</ph> property allows you to get or set the &lt;xref:System.Windows.Forms.Form&gt; object that the application uses as the splash screen, the first graphic form that is displayed while an application is being started.</source>
          <target state="translated"><ph id="ph1">`My.Application.SplashScreen`</ph>属性允许您获取或设置&lt;xref:System.Windows.Forms.Form&gt;应用程序使用作为初始屏幕的对象，第一种图形形式启动应用程序时显示。&lt;/xref:System.Windows.Forms.Form&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This property supports the Visual Basic Application model.</source>
          <target state="translated">此属性支持 Visual Basic 应用程序模型。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overview of the Visual Basic Application Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 应用程序模型概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The changes to this property are not persisted when the application closes.</source>
          <target state="translated">应用程序关闭时，不会保留更改此属性。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>To change the splash screen permanently, you must change the setting in the <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept>.</source>
          <target state="translated">若要永久更改初始屏幕，你必须更改中的设置<bpt id="p1">**</bpt>项目设计器<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.Form"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that the application uses as the splash screen.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.Form"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>应用程序使用作为初始屏幕的对象。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The same value is assigned to this property and the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*&gt; property.</source>
          <target state="translated">相同的值分配给此属性与&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*&gt;属性。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Occurs when the application starts.</source>
          <target state="translated">当应用程序开始时发生。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A normal (non-single-instance) application raises the <ph id="ph1">`Startup`</ph> event every time it starts.</source>
          <target state="translated">正常 （非单实例） 应用程序引发<ph id="ph1">`Startup`</ph>每次启动时的事件。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A single-instance application raises the <ph id="ph1">`Startup`</ph> event when it starts only if the application is not already active; otherwise, it raises the <ph id="ph2">`StartupNextInstance`</ph> event.</source>
          <target state="translated">单实例应用程序引发<ph id="ph1">`Startup`</ph>事件启动仅当应用程序尚不活动; 否则为它会引发时<ph id="ph2">`StartupNextInstance`</ph>事件。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt;。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This event is part of the <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.</source>
          <target state="translated">此事件是的一部分<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>应用程序模型。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overview of the Visual Basic Application Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 应用程序模型概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the <ph id="ph1">`e`</ph> parameter to control the loading of an application's startup form.</source>
          <target state="translated">你可以使用&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;属性<ph id="ph1">`e`</ph>参数，用于控制加载的应用程序的启动窗体。&lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property is set to <ph id="ph1">`True`</ph>, the startup form does not start.</source>
          <target state="translated">当&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;属性设置为<ph id="ph1">`True`</ph>，启动窗体不会启动。&lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>In that case, your code should call an alternate startup code path.</source>
          <target state="translated">在这种情况下，你的代码应调用其他启动代码路径。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A&gt; property of the <ph id="ph1">`e`</ph> parameter or the &lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt; property to access the application's command-line arguments.</source>
          <target state="translated">你可以使用&lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A&gt;属性<ph id="ph1">`e`</ph>参数或&lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt;属性来访问应用程序的命令行自变量。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt; &lt;/xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The code for the <ph id="ph1">`Startup`</ph> event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</source>
          <target state="translated">代码<ph id="ph1">`Startup`</ph>事件处理程序存储在默认情况下隐藏的 ApplicationEvents.vb 文件。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>||   |-|   |To access the Code Editor window for application events|   |1.</source>
          <target state="translated">||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&amp;1;。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>With a project selected in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">在选择了项目<bpt id="p1">**</bpt>解决方案资源管理器<ept id="p1">**</ept>，单击<bpt id="p2">**</bpt>属性<ept id="p2">**</ept>上<bpt id="p3">**</bpt>项目<ept id="p3">**</ept>菜单。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>2.  Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">2.单击<bpt id="p1">**</bpt>应用程序<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>3.  Click the <bpt id="p1">**</bpt>View Application Events<ept id="p1">**</ept> button to open the Code Editor.</source>
          <target state="translated">3.单击<bpt id="p1">**</bpt>查看应用程序事件<ept id="p1">**</ept>按钮以打开代码编辑器。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Application Page, Project Designer (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>应用程序页，项目设计器 (Visual Basic 中)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。 |     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Occurs when attempting to start a single-instance application and the application is already active.</source>
          <target state="translated">当尝试启动单实例应用程序和应用程序已处于活动状态时发生。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A single-instance application raises the StartupNextInstance event when you attempt to restart the application when it is already active.</source>
          <target state="translated">单实例应用程序引发 StartupNextInstance 事件时尝试重新启动应用程序，它已处于活动状态时。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>When a single-instance application starts for the first time, it raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt; event.</source>
          <target state="translated">单实例应用程序启动时第一次，它会发出&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;事件。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This event is part of the <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.</source>
          <target state="translated">此事件是的一部分<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>应用程序模型。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overview of the Visual Basic Application Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 应用程序模型概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This event is raised on the application's main thread with the other user-interface events.</source>
          <target state="translated">在与其他用户界面事件的应用程序的主线程上引发此事件。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This allows the event handler to access directly the application's user interface.</source>
          <target state="translated">这允许直接访问应用程序的用户界面的事件处理程序。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A&gt; method.</source>
          <target state="translated">但是，如果应用程序正忙于处理另一个用户界面事件时将引发此事件，此事件无法处理直到另一个事件处理程序完成或调&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A&gt;方法。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`StartupNextInstance`</ph> event is raised only in single-instance applications.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`StartupNextInstance`</ph>仅在单实例应用程序中引发事件。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>To enable single-instance behavior for your application, you must check the <bpt id="p1">**</bpt>Make single instance application<ept id="p1">**</ept> check box in the Project Designer.</source>
          <target state="translated">若要启用你的应用程序的单实例行为，必须检查<bpt id="p1">**</bpt>生成单个实例应用程序<ept id="p1">**</ept>项目设计器中的复选框。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>||   |-|   |To make an application single instance|   |1.</source>
          <target state="translated">||  |-|  |若要使应用程序的单一实例 |  |&amp;1;。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>With a project selected in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">在选择了项目<bpt id="p1">**</bpt>解决方案资源管理器<ept id="p1">**</ept>，单击<bpt id="p2">**</bpt>属性<ept id="p2">**</ept>上<bpt id="p3">**</bpt>项目<ept id="p3">**</ept>菜单。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>2.  Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">2.单击<bpt id="p1">**</bpt>应用程序<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>3.  Select the <bpt id="p1">**</bpt>Make single instance application<ept id="p1">**</ept> check box.|       You must use the &lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A&gt; property of the <ph id="ph1">`e`</ph> parameter to access the arguments for subsequent attempts to start a single-instance application.</source>
          <target state="translated">3.选择<bpt id="p1">**</bpt>生成单个实例应用程序<ept id="p1">**</ept>复选框。 |      必须使用&lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A&gt;属性<ph id="ph1">`e`</ph>参数访问后续尝试启动单实例应用程序的自变量。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The &lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt; property provides the arguments used to start the first instance of a single-instance application.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt;属性提供用来启动单实例应用程序的第一个实例的自变量。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The code for the StartupNextInstance event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</source>
          <target state="translated">StartupNextInstance 事件处理程序的代码存储在默认情况下隐藏的 ApplicationEvents.vb 文件。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>||   |-|   |To access the Code Editor window for application events|   |1.</source>
          <target state="translated">||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&amp;1;。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>With a project selected in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">在选择了项目<bpt id="p1">**</bpt>解决方案资源管理器<ept id="p1">**</ept>，单击<bpt id="p2">**</bpt>属性<ept id="p2">**</ept>上<bpt id="p3">**</bpt>项目<ept id="p3">**</ept>菜单。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>2.  Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">2.单击<bpt id="p1">**</bpt>应用程序<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>3.  Click the <bpt id="p1">**</bpt>View Application Events<ept id="p1">**</ept> button to open the Code Editor.</source>
          <target state="translated">3.单击<bpt id="p1">**</bpt>查看应用程序事件<ept id="p1">**</ept>按钮以打开代码编辑器。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Application Page, Project Designer (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.|       The following table lists examples of tasks involving the <ph id="ph1">`My.Application.StartupNextInstance`</ph> event.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>应用程序页，项目设计器 (Visual Basic 中)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。 |      下表列出了所涉及的任务的示例<ph id="ph1">`My.Application.StartupNextInstance`</ph>事件。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |To|See|   |Check the command-line arguments of the first application instance|&lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt;|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|Yes|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">|||  |-|-|  |到 |请参阅 |  |检查命令行参数的第一个应用程序实例 |&lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt;|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |是 |  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |不 |&lt;/xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Occurs when the application encounters an unhandled exception.</source>
          <target state="translated">当应用程序遇到未经处理的异常时发生。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>An application raises the <ph id="ph1">`UnhandledException`</ph> event when it encounters an unhandled exception.</source>
          <target state="translated">应用程序引发的<ph id="ph1">`UnhandledException`</ph>事件时遇到未经处理的异常。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This event is part of the Visual Basic Application model.</source>
          <target state="translated">此事件是 Visual Basic 应用程序模型的一部分。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overview of the Visual Basic Application Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 应用程序模型概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Threading.ThreadExceptionEventArgs.Exception%2A&gt; property of the <ph id="ph1">`e`</ph> parameter to access the unhandled exception that caused this event.</source>
          <target state="translated">你可以使用&lt;xref:System.Threading.ThreadExceptionEventArgs.Exception%2A&gt;属性<ph id="ph1">`e`</ph>参数访问未经处理的异常导致此事件。&lt;/xref:System.Threading.ThreadExceptionEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt; property of the <ph id="ph1">`e`</ph> parameter to control whether the application exits.</source>
          <target state="translated">你可以使用&lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt;属性<ph id="ph1">`e`</ph>参数，用于控制是否在应用程序退出。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>By default, &lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt; is <ph id="ph1">`True`</ph>.</source>
          <target state="translated">默认情况下，&lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt;是<ph id="ph1">`True`</ph>。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Therefore, the application exits after completing the <ph id="ph1">`UnhandledException`</ph> event handler.</source>
          <target state="translated">因此，在完成后退出应用程序<ph id="ph1">`UnhandledException`</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>You can set the value to <ph id="ph1">`False`</ph> in the <ph id="ph2">`UnhandledException`</ph> event handler to keep the application running, and have it return to a waiting state.</source>
          <target state="translated">你可以将值设置为<ph id="ph1">`False`</ph>中<ph id="ph2">`UnhandledException`</ph>事件处理程序以保留应用程序运行，并让它返回到等待状态。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The code for the <ph id="ph1">`UnhandledException`</ph> event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</source>
          <target state="translated">代码<ph id="ph1">`UnhandledException`</ph>事件处理程序存储在默认情况下隐藏的 ApplicationEvents.vb 文件。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>||   |-|   |To access the Code Editor window for application events|   |1.</source>
          <target state="translated">||  |-|  |若要访问的应用程序事件的代码编辑器窗口 |  |&amp;1;。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>With a project selected in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">在选择了项目<bpt id="p1">**</bpt>解决方案资源管理器<ept id="p1">**</ept>，单击<bpt id="p2">**</bpt>属性<ept id="p2">**</ept>上<bpt id="p3">**</bpt>项目<ept id="p3">**</ept>菜单。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>2.  Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">2.单击<bpt id="p1">**</bpt>应用程序<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>3.  Click the <bpt id="p1">**</bpt>View Application Events<ept id="p1">**</ept> button to open the Code Editor.|       For more information, see <bpt id="p2">[</bpt>Application Page, Project Designer (Visual Basic)<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">3.单击<bpt id="p1">**</bpt>查看应用程序事件<ept id="p1">**</ept>按钮以打开代码编辑器。 |      有关详细信息，请参阅<bpt id="p2">[</bpt>应用程序页，项目设计器 (Visual Basic 中)<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Visual Basic compiler prevents applications that are built for debugging from raising this event, to enable a debugger to handle the unhandled exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; Visual Basic 编译器防止用于调试从引发此事件，以启用调试器以处理未经处理的异常构建的应用程序。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This means that if you are testing your application by running it under the Visual Studio Integrated Development Environment debugger, your <ph id="ph1">`UnhandledException`</ph> event handler will not be called.</source>
          <target state="translated">这意味着，如果你正在测试应用程序通过在 Visual Studio 集成开发环境调试器下运行它你<ph id="ph1">`UnhandledException`</ph>将不会调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>For more information about building applications for debugging, see <bpt id="p1">[</bpt>/debug (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关为调试生成应用程序的详细信息，请参阅<bpt id="p1">[</bpt>/debug (Visual Basic 中)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Tasks    The following table lists examples of tasks that involve the <ph id="ph1">`My.Application.UnhandledException`</ph> event.</source>
          <target state="translated">任务下表列出了涉及的任务的示例<ph id="ph1">`My.Application.UnhandledException`</ph>事件。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |To|See|   |Log unhandled exceptions|<bpt id="p1">[</bpt>How to: Log Exceptions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|</source>
          <target state="translated">|||  |-|-|  |到 |请参阅 |  |日志未经处理的异常 |<bpt id="p1">[</bpt>如何︰ 记录异常<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|     # # 项目类型的可用性 | | |  |-|-|  |项目类型 |可用 |  |Windows 窗体应用程序 |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |类库 |否 |  |控制台应用程序 |否 |  |Windows 窗体控件库 |否 |  |Web 控件库 |否 |  |Windows 服务 |否 |  |网站 |否 |</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, this property allows a designer to specify the default text rendering engine for the application's forms.</source>
          <target state="translated">当在派生类中重写，则此属性允许设计器指定应用程序的窗体的默认文本呈现引擎。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>By default, this property returns <ph id="ph1">`False`</ph> to indicate that the GDI text rendering engine for <ph id="ph2">[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]</ph> be used for the application's forms.</source>
          <target state="translated">默认情况下，此属性返回<ph id="ph1">`False`</ph>指示 GDI 文本呈现引擎<ph id="ph2">[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]</ph>用于应用程序的窗体。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>However, you can override this property to return <ph id="ph1">`True`</ph> and specify that the application's forms use the GDI+ text rendering engine, which is used in Visual Basic .NET 2002 and Visual Basic .NET 2003.</source>
          <target state="translated">但是，你可以重写此属性以返回<ph id="ph1">`True`</ph>和指定应用程序的窗体使用 GDI + 文本呈现引擎，该引擎在 Visual Basic.NET 2002年和 Visual Basic.NET 2003年中使用。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>This property is called by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt; constructor.</source>
          <target state="translated">此属性由&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;构造函数。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Code that overrides methods of the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt; class should be entered in the ApplicationEvents.vb file, which is hidden by default.</source>
          <target state="translated">重写的方法的代码&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;类应输入在 ApplicationEvents.vb 文件中，默认情况下隐藏。&lt;/xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>||   |-|   |To access the Code Editor window for overriding members|   |1.</source>
          <target state="translated">||  |-|  |若要访问代码编辑器窗口，重写成员 |  |&amp;1;。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>With a project selected in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">在选择了项目<bpt id="p1">**</bpt>解决方案资源管理器<ept id="p1">**</ept>，单击<bpt id="p2">**</bpt>属性<ept id="p2">**</ept>上<bpt id="p3">**</bpt>项目<ept id="p3">**</ept>菜单。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>2.  Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">2.单击<bpt id="p1">**</bpt>应用程序<ept id="p1">**</ept>选项卡。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>3.  Click the <bpt id="p1">**</bpt>View Application Events<ept id="p1">**</ept> button to open the Code Editor.</source>
          <target state="translated">3.单击<bpt id="p1">**</bpt>查看应用程序事件<ept id="p1">**</ept>按钮以打开代码编辑器。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Application Page, Project Designer (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.|</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>应用程序页，项目设计器 (Visual Basic 中)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。 |</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A value of <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicates that the application should use the default text rendering engine for <ph id="ph1">[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]</ph>.</source>
          <target state="translated">值为<bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指示应用程序应使用的默认文本呈现引擎<ph id="ph1">[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>A value of <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicates that the application should use the text rendering engine for Visual Basic .NET 2002 and Visual Basic .NET 2003.</source>
          <target state="translated">值为<bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指示应用程序应为 Visual Basic.NET 2002年和 Visual Basic.NET 2003年中使用文本呈现引擎。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>