<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6be823a18aeb670bec163beced5a5b7bd10194c5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.PageAsyncTask.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f5371e79fe8c4d7d8b5e807e7e123fcdd2af0ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef3816ca2a42fd149c3e09beebef528eaf86a728</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains information about an asynchronous task registered to a page.</source>
          <target state="translated">包含有关异步任务注册到页的信息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</source>
          <target state="translated">ASP.NET 版本 2.0，可注册到页上的多个任务和呈现页之前以异步方式运行。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</source>
          <target state="translated">你可能指定是否这是一个慢速过程并且您不希望其他进程占用执行时，以异步方式运行任务。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The asynchronous tasks can be executed in parallel or sequentially.</source>
          <target state="translated">并行或按顺序，可以执行异步任务。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A PageAsyncTask object must be registered to the page through the &lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt; method.</source>
          <target state="translated">PageAsyncTask 对象必须注册到页中，通过&lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;方法。&lt;/xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The page itself does not have to be processed asynchronously to execute asynchronous tasks.</source>
          <target state="translated">页面本身不需要以异步方式处理执行异步任务。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can set the <ph id="ph1">`Async`</ph> attribute to either <ph id="ph2">`true`</ph> (as shown in the following code example) or <ph id="ph3">`false`</ph> on the page directive and the asynchronous tasks will still be processed asynchronously:       <ph id="ph4">`&lt;%@ Page Async="true" %&gt;`</ph>       When the <ph id="ph5">`Async`</ph> attribute is set to <ph id="ph6">`false`</ph>, the thread that executes the page will be blocked until all asynchronous tasks are complete.</source>
          <target state="translated">你可以设置<ph id="ph1">`Async`</ph>属性为<ph id="ph2">`true`</ph>（如下面的代码示例中所示） 或<ph id="ph3">`false`</ph>在页面上指令和异步任务将仍将以异步方式处理︰<ph id="ph4">`&lt;%@ Page Async="true" %&gt;`</ph>时<ph id="ph5">`Async`</ph>属性设置为<ph id="ph6">`false`</ph>，将阻止将页执行的线程，直到所有异步任务都已完成。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Any asynchronous tasks registered before the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event will be executed automatically by the page if they have not already been executed.</source>
          <target state="translated">之前注册的任何异步任务&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;事件将自动执行的页面如果它们已尚未执行。&lt;/xref:System.Web.UI.Page.PreRenderComplete&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Those asynchronous tasks registered after the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event must be executed explicitly through the &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method.</source>
          <target state="translated">注册后的异步任务&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;必须显式通过执行事件&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;方法。&lt;/xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; &lt;/xref:System.Web.UI.Page.PreRenderComplete&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method can also be used to start tasks before the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.</source>
          <target state="translated">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;方法还可以用于启动任务，然后&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;事件。&lt;/xref:System.Web.UI.Page.PreRenderComplete&gt; &lt;/xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method executes all the registered asynchronous tasks on the page that have not been executed.</source>
          <target state="translated">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;方法在未执行的页面上执行所有已注册的异步任务。&lt;/xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, an asynchronous task will time out if it has not completed within 45 seconds.</source>
          <target state="translated">默认情况下，一个异步任务将超时，如果它未在 45 秒内完成。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can specify a different time-out value in either the Web.config file or the page directive.</source>
          <target state="translated">你可以在 Web.config 文件或页面指令中指定一个不同的超时值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;pages&gt;`</ph> section of the Web.config file contains an <ph id="ph2">`asyncTimeout`</ph> attribute, as shown below.</source>
          <target state="translated"><ph id="ph1">`&lt;pages&gt;`</ph> Web.config 文件的部分包含<ph id="ph2">`asyncTimeout`</ph>属性，如下所示。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;system.web&gt;`</ph>       <ph id="ph2">`&lt;pages asyncTimeout="30"&gt;`</ph>       <ph id="ph3">`&lt;/pages&gt;`</ph>       <ph id="ph4">`&lt;/system.web&gt;`</ph>       The page directive contains an <ph id="ph5">`AsyncTimeout`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">`&lt;system.web&gt;`</ph>       <ph id="ph2">`&lt;pages asyncTimeout="30"&gt;`</ph>       <ph id="ph3">`&lt;/pages&gt;`</ph>       <ph id="ph4">`&lt;/system.web&gt;`</ph>Page 指令包含<ph id="ph5">`AsyncTimeout`</ph>属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an event handler that enables the task to be canceled.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用的事件处理程序可让任务被取消。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This constructor wraps a &lt;xref:System.Web.CancellableTaskEventHandler&gt; delegate so that the &lt;xref:System.Web.UI.PageAsyncTask&gt; object can integrate asynchronous code (based on &lt;xref:System.Threading.Tasks.Task&gt; objects) with the existing ASP.NET Web Forms asynchronous pages feature.</source>
          <target state="translated">此构造函数包装&lt;xref:System.Web.CancellableTaskEventHandler&gt;委托以便&lt;xref:System.Web.UI.PageAsyncTask&gt;对象可以将集成异步代码 (基于&lt;xref:System.Threading.Tasks.Task&gt;对象) 与现有的 ASP.NET Web 窗体异步页功能。&lt;/xref:System.Threading.Tasks.Task&gt; &lt;/xref:System.Web.UI.PageAsyncTask&gt; &lt;/xref:System.Web.CancellableTaskEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>ASP.NET will signal the &lt;xref:System.Threading.CancellationToken&gt; object that is passed to a &lt;xref:System.Web.CancellableTaskEventHandler&gt; delegate for cancellation based on the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; attribute set in the <ph id="ph1">`@ Page`</ph> directive of the Web page.</source>
          <target state="translated">将指示 ASP.NET&lt;xref:System.Threading.CancellationToken&gt;对象传递给&lt;xref:System.Web.CancellableTaskEventHandler&gt;取消基于委托&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;属性中设置<ph id="ph1">`@ Page`</ph>网页上的指令。&lt;/xref:System.Web.UI.Page.AsyncTimeout%2A&gt; &lt;/xref:System.Web.CancellableTaskEventHandler&gt; &lt;/xref:System.Threading.CancellationToken&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; value has been reached, the &lt;xref:System.Threading.CancellationToken&gt; object will be signaled.</source>
          <target state="translated">当&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;值已达到，&lt;xref:System.Threading.CancellationToken&gt;对象将发出信号。&lt;/xref:System.Threading.CancellationToken&gt; &lt;/xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CancellationToken`</ph> parameter must be passed to any asynchronous APIs that are called by your implementation of the &lt;xref:System.Web.CancellableTaskEventHandler&gt; class.</source>
          <target state="translated"><ph id="ph1">`CancellationToken`</ph>必须将参数传递给任何异步 Api 调用由您的实现的&lt;xref:System.Web.CancellableTaskEventHandler&gt;类。&lt;/xref:System.Web.CancellableTaskEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An event handler.</source>
          <target state="translated">事件处理程序。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an event handler that enables the task to be handled.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用的事件处理程序可让任务进行处理。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An event handler.</source>
          <target state="translated">事件处理程序。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the default value for executing in parallel.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类并行执行使用默认值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This implementation of the constructor sets the &lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt; property to <ph id="ph1">`false`</ph> so the asynchronous task is not processed in parallel with other tasks on the page.</source>
          <target state="translated">此实现的构造函数集&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;属性<ph id="ph1">`false`</ph>以便异步任务不处理与页上的其他任务并行。&lt;/xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">开始一个异步任务时调用的处理程序。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">要调用的超时时间内成功完成此任务的处理程序。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">要调用的超时时间内未成功完成此任务的处理程序。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The object that represents the state of the task.</source>
          <target state="translated">表示任务的状态的对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">beginHandler</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">endHandler</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not specified.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">beginHandler</ph> <ept id="p1">&lt;/code&gt;</ept>参数或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">endHandler</ph> <ept id="p2">&lt;/code&gt;</ept>未指定参数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified value for executing in parallel.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类并行执行使用指定的值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</source>
          <target state="translated">此实现的构造函数，可设置是否将与页上的其他任务并行处理异步任务。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">开始一个异步任务时调用的处理程序。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">要调用的超时时间内成功完成此任务的处理程序。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">要调用的超时时间内未成功完成此任务的处理程序。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object that represents the state of the task.</source>
          <target state="translated">表示任务的状态的对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">值，该值指示是否可以与其他任务并行处理任务。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">beginHandler</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">endHandler</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not specified.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">beginHandler</ph> <ept id="p1">&lt;/code&gt;</ept>参数或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">endHandler</ph> <ept id="p2">&lt;/code&gt;</ept>未指定参数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the method to call when beginning an asynchronous task.</source>
          <target state="translated">获取要时调用的方法开始一个异步任务。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The BeginHandler delegate is set in the constructor.</source>
          <target state="translated">BeginHandler 委托构造函数中设置。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.BeginEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the method to call when beginning the asynchronous task.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.BeginEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示要在开始异步任务时调用的方法的委托。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated">获取任务的超时时间内成功完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The EndHandler delegate is set in the constructor.</source>
          <target state="translated">EndHandler 委托构造函数中设置。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示要在任务的超时时间内成功完成时调用的方法的委托。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">获取一个值，该值指示是否可以与其他任务并行处理任务。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The ExecuteInParallel property is set in the constructor.</source>
          <target state="translated">ExecuteInParallel 属性构造函数中设置。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When multiple tasks are registered in a page and the ExecuteInParallel property is set to <ph id="ph1">`true`</ph>, then those tasks are processed concurrently.</source>
          <target state="translated">当一页中注册多个任务和 ExecuteInParallel 属性设置为<ph id="ph1">`true`</ph>，则这些任务进行并发处理。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>However, if the ExecuteInParallel property is set to <ph id="ph1">`false`</ph>, then those tasks are processed sequentially.</source>
          <target state="translated">但是，如果 ExecuteInParallel 属性设置为<ph id="ph1">`false`</ph>，然后按顺序处理这些任务。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and ExecuteInParallel is set to <ph id="ph1">`true`</ph>, both tasks will complete in 5 seconds.</source>
          <target state="translated">例如，如果页包含两个异步任务，每个都需要 5 秒才能完成，并且 ExecuteInParallel 设置为<ph id="ph1">`true`</ph>，这两项任务将在 5 秒内完成。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If ExecuteInParallel is set to <ph id="ph1">`false`</ph> for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</source>
          <target state="translated">如果 ExecuteInParallel 设置为<ph id="ph1">`false`</ph>这些相同，这两个任务，则第一个任务将在 5 秒内完成和第二个任务将完成的第一个任务完成后的 5 秒。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the task should be processed in parallel with other tasks; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应与其他任务; 并行处理任务否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets an object that represents the state of the task.</source>
          <target state="translated">获取一个对象，表示任务的状态。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The State property is set in the constructor and cannot be modified during execution of the asynchronous task.</source>
          <target state="translated">State 属性构造函数中设置和异步任务的执行期间无法修改。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can differentiate asynchronous tasks in a page by assigning unique string values to their respective State properties.</source>
          <target state="translated">你可以通过将唯一的字符串值分配给其各自的状态属性来区分在页中的异步任务。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the state of the task.</source>
          <target state="translated">&lt;xref:System.Object&gt;表示任务的状态。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated">获取任务的超时时间内未成功完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The TimeoutHandler delegate is set in the constructor.</source>
          <target state="translated">TimeoutHandler 委托构造函数中设置。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示要在任务的超时时间内未成功完成时调用的方法的委托。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>