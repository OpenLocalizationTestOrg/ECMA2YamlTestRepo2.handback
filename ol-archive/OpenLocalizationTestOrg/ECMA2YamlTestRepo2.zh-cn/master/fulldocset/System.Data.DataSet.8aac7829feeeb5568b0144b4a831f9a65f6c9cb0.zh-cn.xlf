<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">705003c6f689a2b4d0080db9ca21f5c5de2802c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.DataSet.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e81f67c950eee1723ceb2f2c9797e4546c3c92ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a3d97bb9d963824c560aaa35301932b8da2af76</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an in-memory cache of data.</source>
          <target state="translated">表示内存中缓存的数据。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The DataSet, which is an in-memory cache of data retrieved from a data source, is a major component of the ADO.NET architecture.</source>
          <target state="translated">数据集，这是从数据源检索数据的内存中缓存，是的 ADO.NET 体系结构的主要组件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The DataSet consists of a collection of &lt;xref:System.Data.DataTable&gt; objects that you can relate to each other with &lt;xref:System.Data.DataRelation&gt; objects.</source>
          <target state="translated">数据集的集合组成&lt;xref:System.Data.DataTable&gt;对象，你可以将互相关联起来与&lt;xref:System.Data.DataRelation&gt;对象。&lt;/xref:System.Data.DataRelation&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can also enforce data integrity in the DataSet by using the &lt;xref:System.Data.UniqueConstraint&gt; and &lt;xref:System.Data.ForeignKeyConstraint&gt; objects.</source>
          <target state="translated">你可以通过使用来强制数据集中的数据完整性&lt;xref:System.Data.UniqueConstraint&gt;和&lt;xref:System.Data.ForeignKeyConstraint&gt;对象。&lt;/xref:System.Data.ForeignKeyConstraint&gt; &lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For further details about working with DataSet objects, see <bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关使用数据集对象的更多详细信息，请参阅<bpt id="p1">[</bpt>数据集、 数据表和数据视图<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Whereas &lt;xref:System.Data.DataTable&gt; objects contain the data, the &lt;xref:System.Data.DataRelationCollection&gt; allows you to navigate though the table hierarchy.</source>
          <target state="translated">而&lt;xref:System.Data.DataTable&gt;对象包含的数据，&lt;xref:System.Data.DataRelationCollection&gt;使您可以通过导航表的层次结构。&lt;/xref:System.Data.DataRelationCollection&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The tables are contained in a &lt;xref:System.Data.DataTableCollection&gt; accessed through the &lt;xref:System.Data.DataSet.Tables%2A&gt; property.</source>
          <target state="translated">这些表包含在&lt;xref:System.Data.DataTableCollection&gt;通过访问&lt;xref:System.Data.DataSet.Tables%2A&gt;属性。&lt;/xref:System.Data.DataSet.Tables%2A&gt; &lt;/xref:System.Data.DataTableCollection&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When accessing &lt;xref:System.Data.DataTable&gt; objects, note that they are conditionally case sensitive.</source>
          <target state="translated">在访问时&lt;xref:System.Data.DataTable&gt;对象，请注意，它们是有条件地区分大小写。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, if one &lt;xref:System.Data.DataTable&gt; is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</source>
          <target state="translated">例如，如果一个&lt;xref:System.Data.DataTable&gt;名为"mydatatable"和另一个名为"Mydatatable"，用于搜索表中的一个的字符串将被视为区分大小写。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</source>
          <target state="translated">但是，如果"mydatatable"存在，并且"Mydatatable"不，搜索字符串将被视为区分。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about working with &lt;xref:System.Data.DataTable&gt; objects, see <bpt id="p1">[</bpt>Creating a DataTable<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关使用&lt;xref:System.Data.DataTable&gt;对象，请参阅<bpt id="p1">[</bpt>创建数据表<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A DataSet can read and write data and schema as XML documents.</source>
          <target state="translated">数据集可以读取和写入 XML 文档的数据和架构。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The data and schema can then be transported across HTTP and used by any application, on any platform that is XML-enabled.</source>
          <target state="translated">数据和架构可以然后可跨 HTTP 传输和使用由任何应用程序，在 XML 启用任何平台上。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can save the schema as an XML schema with the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method, and both schema and data can be saved using the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">你可以将架构保存为 XML 架构与&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，、 架构和数据可以保存使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To read an XML document that includes both schema and data, use the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method.</source>
          <target state="translated">若要读取包含架构和数据的 XML 文档，使用&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In a typical multiple-tier implementation, the steps for creating and refreshing a DataSet, and in turn, updating the original data are to:      1.</source>
          <target state="translated">在典型的多个层实现中，更新原始数据的步骤用于创建和刷新数据集，并在轮次，受到︰ 1。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Build and fill each &lt;xref:System.Data.DataTable&gt; in a DataSet with data from a data source using a &lt;xref:System.Data.Common.DataAdapter&gt;.</source>
          <target state="translated">生成和每次&lt;xref:System.Data.DataTable&gt;使用一种&lt;xref:System.Data.Common.DataAdapter&gt;。&lt;/xref:System.Data.Common.DataAdapter&gt;的数据源中的数据集中的数据&lt;/xref:System.Data.DataTable&gt;填充</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Change the data in individual &lt;xref:System.Data.DataTable&gt; objects by adding, updating, or deleting &lt;xref:System.Data.DataRow&gt; objects.</source>
          <target state="translated">更改在单个数据&lt;xref:System.Data.DataTable&gt;通过添加、 更新或删除的对象&lt;xref:System.Data.DataRow&gt;对象。&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method to create a second DataSet that features only the changes to the data.</source>
          <target state="translated">调用&lt;xref:System.Data.DataSet.GetChanges%2A&gt;方法创建的功能仅对数据的更改的第二个数据集。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; method of the &lt;xref:System.Data.Common.DataAdapter&gt;, passing the second DataSet as an argument.</source>
          <target state="translated">调用&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;方法&lt;xref:System.Data.Common.DataAdapter&gt;，将第二个数据集作为参数传递。&lt;/xref:System.Data.Common.DataAdapter&gt; &lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;xref:System.Data.DataSet.Merge%2A&gt; method to merge the changes from the second DataSet into the first.</source>
          <target state="translated">调用&lt;xref:System.Data.DataSet.Merge%2A&gt;方法中的第二个数据集的更改合并到第一个。&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;xref:System.Data.DataSet.AcceptChanges%2A&gt; on the DataSet.</source>
          <target state="translated">调用&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;对数据集。&lt;/xref:System.Data.DataSet.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Alternatively, invoke &lt;xref:System.Data.DataSet.RejectChanges%2A&gt; to cancel the changes.</source>
          <target state="translated">此外，调用&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;可取消更改。&lt;/xref:System.Data.DataSet.RejectChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The DataSet and &lt;xref:System.Data.DataTable&gt; objects inherit from &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;, and support the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface for remoting.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 的数据集和&lt;xref:System.Data.DataTable&gt;对象继承自&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;，并且支持&lt;xref:System.Runtime.Serialization.ISerializable&gt;以进行远程处理的接口。&lt;/xref:System.Runtime.Serialization.ISerializable&gt; &lt;/xref:System.ComponentModel.MarshalByValueComponent&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>These are the only ADO.NET objects that can be remoted.</source>
          <target state="translated">这些是唯一可远程处理的 ADO.NET 对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Classes inherited from DataSet are not finalized by the garbage collector, because the finalizer has been suppressed in DataSet.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于终结器已取消数据集中，垃圾回收器中，不终止从数据集继承的类。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The derived class can call the &lt;xref:System.GC.ReRegisterForFinalize%2A&gt; method in its constructor to allow the class to be finalized by the garbage collector.</source>
          <target state="translated">派生的类可以调用&lt;xref:System.GC.ReRegisterForFinalize%2A&gt;其构造函数，以允许通过垃圾回收器来完成类中的方法。&lt;/xref:System.GC.ReRegisterForFinalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This implementation of the &lt;xref:System.Data.DataSet&gt; constructor takes no parameters, and creates a default name, "NewDataSet," for the new instance.</source>
          <target state="translated">此实现的&lt;xref:System.Data.DataSet&gt;构造函数不采用任何参数，并创建一个默认名称，"NewDataSet，"的新实例。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A name for the &lt;xref:System.Data.DataSet&gt; is required to ensure that the XML representation of the &lt;xref:System.Data.DataSet&gt; always has a name for the document element, which is the highest-level element in a schema definition.</source>
          <target state="translated">名称&lt;xref:System.Data.DataSet&gt;需确保的 XML 表示形式&lt;xref:System.Data.DataSet&gt;始终有文档元素，它是架构定义中的最高级别的元素的名称。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the given name.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有给定名称的类。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A name for the &lt;xref:System.Data.DataSet&gt; is required to ensure that the XML representation of the &lt;xref:System.Data.DataSet&gt; always has a name for the document element, which is the highest level element in a schema definition.</source>
          <target state="translated">名称&lt;xref:System.Data.DataSet&gt;需确保的 XML 表示形式&lt;xref:System.Data.DataSet&gt;始终有文档元素，它是架构定义中的最高级别的元素的名称。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名称<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that has the given serialization information and context.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有给定序列化信息和上下文的类。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The data needed to serialize or deserialize an object.</source>
          <target state="translated">要序列化或反序列化对象所需的数据。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The source and destination of a given serialized stream.</source>
          <target state="translated">源和给定的序列化流的目标。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;对象。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The boolean value.</source>
          <target state="translated">布尔值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Commits all the changes made to this <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> since it was loaded or since the last time AcceptChanges was called.</source>
          <target state="translated">对此进行的所有更改都提交<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>自加载后或自从上次调用 AcceptChanges。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Both the &lt;xref:System.Data.DataRow&gt; and &lt;xref:System.Data.DataTable&gt; classes have AcceptChanges methods.</source>
          <target state="translated">同时&lt;xref:System.Data.DataRow&gt;和&lt;xref:System.Data.DataTable&gt;类具有 AcceptChanges 方法。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; at the &lt;xref:System.Data.DataTable&gt; level causes the &lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; method for each &lt;xref:System.Data.DataRow&gt; to be called.</source>
          <target state="translated">调用&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;在&lt;xref:System.Data.DataTable&gt;级别原因&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;方法为每个&lt;xref:System.Data.DataRow&gt;调用。&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Similarly, invoking AcceptChanges on the &lt;xref:System.Data.DataSet&gt; causes &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; to be called on each table within the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">同样，&lt;xref:System.Data.DataSet&gt;&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;不能对&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;中每个表调用&lt;/xref:System.Data.DataTable.AcceptChanges%2A&gt;，则会&lt;/xref:System.Data.DataSet&gt;在调用 AcceptChanges</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In this manner, you have multiple levels at which the method can be invoked.</source>
          <target state="translated">在这种方式，你必须可以从该处调用该方法的多个级别。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Calling the AcceptChanges of the &lt;xref:System.Data.DataSet&gt; enables you to invoke the method on all subordinate objects (for example, tables and rows) with one call.</source>
          <target state="translated">调用的 AcceptChanges&lt;xref:System.Data.DataSet&gt;使您能够针对所有附属对象 （例如，表和行） 的一个调用调用方法。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When you call <ph id="ph1">`AcceptChanges`</ph> on the <ph id="ph2">`DataSet`</ph>, any &lt;xref:System.Data.DataRow&gt; objects still in edit-mode end their edits successfully.</source>
          <target state="translated">当调用<ph id="ph1">`AcceptChanges`</ph>上<ph id="ph2">`DataSet`</ph>、 任何&lt;xref:System.Data.DataRow&gt;仍处于编辑模式的对象已成功结束其编辑。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataRow.RowState%2A&gt; property of each &lt;xref:System.Data.DataRow&gt; also changes; <ph id="ph1">`Added`</ph> and <ph id="ph2">`Modified`</ph> rows become <ph id="ph3">`Unchanged`</ph>, and <ph id="ph4">`Deleted`</ph> rows are removed.</source>
          <target state="translated">每个&lt;xref:System.Data.DataRow&gt;&lt;xref:System.Data.DataRow.RowState%2A&gt;属性也会更改;<ph id="ph1">`Added`</ph>和<ph id="ph2">`Modified`</ph>行都变为<ph id="ph3">`Unchanged`</ph>，和<ph id="ph4">`Deleted`</ph>已删除的行。 &lt;/xref:System.Data.DataRow.RowState%2A&gt;&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`DataSet`</ph> contains &lt;xref:System.Data.ForeignKeyConstraint&gt; objects, invoking the <ph id="ph2">`AcceptChanges`</ph> method also causes the &lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt; to be enforced.</source>
          <target state="translated">如果<ph id="ph1">`DataSet`</ph>包含&lt;xref:System.Data.ForeignKeyConstraint&gt;对象，则调用<ph id="ph2">`AcceptChanges`</ph>方法也会导致&lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt;强制执行。&lt;/xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt; &lt;/xref:System.Data.ForeignKeyConstraint&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`AcceptChanges`</ph> and <ph id="ph4">`RejectChanges`</ph> only apply to <ph id="ph5">`DataRow`</ph> related changes (that is, Add, Remove, Delete, and Modify).</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> <ph id="ph2"> &gt;  </ph> <ph id="ph3">`AcceptChanges`</ph>和<ph id="ph4">`RejectChanges`</ph>仅适用于<ph id="ph5">`DataRow`</ph>相关更改 （即，添加、 删除、 删除和修改）。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">它们不是适用于架构或结构上的更改。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  Calling AcceptChanges will not replicate these changes back to the data source if the DataSet was filled using a DataAdapter.</source>
          <target state="translated">&gt;&gt; 调用 AcceptChanges 不会返回到数据源复制这些更改，如果已使用 DataAdapter 填充数据集。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In that situation, call &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; instead.</source>
          <target state="translated">在这种情况下，调用&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;相反。&lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept> for more information.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>使用 Dataadapter 更新数据源<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept>有关详细信息。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Begins the initialization of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or used by another component.</source>
          <target state="translated">开始初始化<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>窗体上使用或由另一个组件。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化发生在运行时。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio.NET 设计环境使用此方法来启动窗体上使用或由另一个组件的组件的初始化。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.EndInit%2A&gt; method ends the initialization.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.EndInit%2A&gt;方法初始化已结束。&lt;/xref:System.Data.DataSet.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Using the BeginInit and &lt;xref:System.Data.DataSet.EndInit%2A&gt; methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用 BeginInit 和&lt;xref:System.Data.DataSet.EndInit%2A&gt;方法阻止控件完全初始化之前使用。&lt;/xref:System.Data.DataSet.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether string comparisons within <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects are case-sensitive.</source>
          <target state="translated">获取或设置一个值，该值指示是否中的字符串比较<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象是区分大小写。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The CaseSensitive property affects how sorting, searching, and filtering operations are performed on each &lt;xref:System.Data.DataTable&gt; object contained in a &lt;xref:System.Data.DataSet&gt; when using the &lt;xref:System.Data.DataTable.Select%2A&gt; method.</source>
          <target state="translated">CaseSensitive 属性会影响排序、 搜索和筛选操作执行的方式上每个&lt;xref:System.Data.DataTable&gt;对象中包含&lt;xref:System.Data.DataSet&gt;时使用&lt;xref:System.Data.DataTable.Select%2A&gt;方法。&lt;/xref:System.Data.DataTable.Select%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>By default, setting the CaseSensitive property for a &lt;xref:System.Data.DataSet&gt; also sets the &lt;xref:System.Data.DataTable.CaseSensitive%2A&gt; property of each associated &lt;xref:System.Data.DataTable&gt; to the same value.</source>
          <target state="translated">默认情况下，设置 CaseSensitive 属性&lt;xref:System.Data.DataSet&gt;还设置&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;的每个关联的属性&lt;xref:System.Data.DataTable&gt;为相同的值。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.CaseSensitive%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if string comparisons are case-sensitive; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果字符串比较是区分大小写;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Clears the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of any data by removing all rows in all tables.</source>
          <target state="translated">清除<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的所有表中删除所有行的任何数据。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.DataSet&gt; is bound to an &lt;xref:System.Xml.XmlDataDocument&gt;, calling Clear or &lt;xref:System.Data.DataTable.Clear%2A?displayProperty=fullName&gt; raises the &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">如果&lt;xref:System.Data.DataSet&gt;绑定到某个&lt;xref:System.Xml.XmlDataDocument&gt;、 调用清除或&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=fullName&gt;引发&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Data.DataTable.Clear%2A?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlDataDocument&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To avoid this situation, traverse each table, removing each row one at a time.</source>
          <target state="translated">若要避免这种情况下，遍历每个表，一次移除每一行。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Copies the structure of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, including all <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> schemas, relations, and constraints.</source>
          <target state="translated">将复制的结构<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，包括所有<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>架构、 关系和约束。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Does not copy any data.</source>
          <target state="translated">不会复制任何数据。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same schema as the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, but none of the data.</source>
          <target state="translated">一个新<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有相同的架构与当前<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，但是不包含任何数据。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Copies both the structure and data for this <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将结构和数据复制此<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same structure (table schemas, relations, and constraints) and data as this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个新<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有相同的结构 （表架构、 关系和约束） 和数据作为这<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If these classes have been subclassed, the copy will also be of the same subclasses.</source>
          <target state="translated">如果已创建这些类的子类，副本还将属于相同的子类。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with one result set per <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, in the same sequence as the tables appear in the &lt;xref:System.Data.DataSet.Tables*&gt; collection.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>带有每个设置的一个结果<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>中相同序列，因为表将显示在&lt;xref:System.Data.DataSet.Tables*&gt;集合。&lt;/xref:System.Data.DataSet.Tables*&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In order to ensure the order of the result sets within the returned &lt;xref:System.Data.DataTableReader&gt;, if a &lt;xref:System.Data.DataTable&gt; within the &lt;xref:System.Data.DataSet&gt; is empty, it is represented by an empty result set within the returned <ph id="ph1">`DataTableReader`</ph>.</source>
          <target state="translated">为了确保在返回的结果集的顺序&lt;xref:System.Data.DataTableReader&gt;，如果&lt;xref:System.Data.DataTable&gt;内&lt;xref:System.Data.DataSet&gt;是空的它由一个空结果集内返回<ph id="ph1">`DataTableReader`</ph>。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTableReader&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing one or more result sets, corresponding to the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances contained within the source <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含一个或多个结果集，对应于<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>的源中所包含的实例<bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with one result set per <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>带有每个设置的一个结果<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In order to ensure that the order of the result sets within the returned &lt;xref:System.Data.DataTableReader&gt;, if a &lt;xref:System.Data.DataTable&gt; within the &lt;xref:System.Data.DataSet&gt; is empty, it is represented by an empty result set within the returned <ph id="ph1">`DataTableReader`</ph>.</source>
          <target state="translated">为了确保结果的顺序设置在返回&lt;xref:System.Data.DataTableReader&gt;，如果&lt;xref:System.Data.DataTable&gt;内&lt;xref:System.Data.DataSet&gt;是空的它由一个空结果集内返回<ph id="ph1">`DataTableReader`</ph>。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTableReader&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Because this overloaded version allows you to supply a list of <ph id="ph1">`DataTable`</ph> instances as parameters, you can specify the order in which the result sets appear within the returned <ph id="ph2">`DataTableReader`</ph>.</source>
          <target state="translated">此重载的版本，可提供的列表，因为<ph id="ph1">`DataTable`</ph>作为参数的实例，你可以指定在返回的结果集出现的顺序<ph id="ph2">`DataTableReader`</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An array of DataTables providing the order of the result sets to be returned in the <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将设置为数据表提供结果的顺序的数组中返回<bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing one or more result sets, corresponding to the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances contained within the source <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含一个或多个结果集，对应于<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>的源中所包含的实例<bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The returned result sets are in the order specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataTables</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">返回的结果集是以指定顺序<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">dataTables</ph> <ept id="p1">&lt;/code&gt;</ept>参数。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the current <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置的当前名称<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名称<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets a custom view of the data contained in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to allow filtering, searching, and navigating using a custom <bpt id="p2">&lt;xref href="System.Data.DataViewManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取中包含的数据的自定义视图<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>以允许筛选、 搜索和导航使用自定义<bpt id="p2">&lt;xref href="System.Data.DataViewManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataViewManager&gt; returned by the DefaultViewManager property allows you to create custom settings for each &lt;xref:System.Data.DataTable&gt; in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataViewManager&gt;返回的属性，可创建自定义设置为每个&lt;xref:System.Data.DataTable&gt;在&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; DefaultViewManager&lt;/xref:System.Data.DataViewManager&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When you obtain a &lt;xref:System.Data.DataView&gt; from a &lt;xref:System.Data.DataTable&gt;, the sort order, filtering, and &lt;xref:System.Data.DataViewRowState&gt; are configured according to the settings in the DefaultViewManager property.</source>
          <target state="translated">当你获取&lt;xref:System.Data.DataView&gt;从&lt;xref:System.Data.DataTable&gt;，排序顺序、 筛选和&lt;xref:System.Data.DataViewRowState&gt;根据 DefaultViewManager 属性中的设置配置。&lt;/xref:System.Data.DataViewRowState&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataView&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataViewManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataViewManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Determines the &lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt; for a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">确定&lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt;为<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.DataSet.SchemaSerializationMode*&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This method can be called when deserializing a typed &lt;xref:System.Data.DataSet&gt; to determine its &lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.</source>
          <target state="translated">类型化&lt;xref:System.Data.DataSet&gt;以确定其&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.&lt;/xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;&lt;/xref:System.Data.DataSet&gt;反序列化时，可以调用此方法</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; instance that is passed during deserialization of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;反序列化期间传递的实例<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>枚举，该值指示是否已从负载中忽略架构信息。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Determines the &lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt; for a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">确定&lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt;为<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.DataSet.SchemaSerializationMode*&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This method can be called when deserializing a typed &lt;xref:System.Data.DataSet&gt; to determine its &lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.</source>
          <target state="translated">类型化&lt;xref:System.Data.DataSet&gt;以确定其&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.&lt;/xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;&lt;/xref:System.Data.DataSet&gt;反序列化时，可以调用此方法</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that a <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>’s protected constructor <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ， <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>的受保护构造函数<ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph>远程处理方案中的反序列化期间使用调用。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that a <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>’s protected constructor <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;， <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的受保护构造函数<ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph>远程处理方案中的反序列化期间使用调用。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>枚举，该值指示是否已从负载中忽略架构信息。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Ends the initialization of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or used by another component.</source>
          <target state="translated">初始化已结束<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>窗体上使用或由另一个组件。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化发生在运行时。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio.NET 设计环境使用此方法来结束的窗体上使用或由另一个组件的组件初始化。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.BeginInit%2A&gt; method starts the initialization.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;方法开始初始化。&lt;/xref:System.Data.DataSet.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Using the &lt;xref:System.Data.DataSet.BeginInit%2A&gt; and EndInit methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.BeginInit%2A&gt;和 EndInit 方法阻止控件完全初始化之前使用。&lt;/xref:System.Data.DataSet.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.</source>
          <target state="translated">获取或设置一个值，该值指示是否在尝试任何更新操作时遵循约束规则。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Constraints are set at the &lt;xref:System.Data.DataTable&gt; level (&lt;xref:System.Data.DataTable.Constraints%2A&gt; property).</source>
          <target state="translated">在设置约束&lt;xref:System.Data.DataTable&gt;级别 (&lt;xref:System.Data.DataTable.Constraints%2A&gt;属性)。&lt;/xref:System.Data.DataTable.Constraints%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information about creating constraints, see <bpt id="p1">[</bpt>DataTable Constraints<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关创建约束的详细信息，请参阅<bpt id="p1">[</bpt>数据表约束<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if rules are enforced; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果强制执行规则;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>One or more constraints cannot be enforced.</source>
          <target state="translated">无法强制执行一个或多个约束。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets the collection of customized user information associated with the <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取与关联的自定义的用户信息的集合<bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The ExtendedProperties property enables you to store custom information with the <ph id="ph1">`DataSet`</ph>.</source>
          <target state="translated">ExtendedProperties 属性使您能够存储使用自定义信息<ph id="ph1">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example, you might store a time when the data should be refreshed.</source>
          <target state="translated">例如，你可能会存储的数据应在进行刷新的时间。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Extended properties must be of type &lt;xref:System.String&gt; if you want them persisted when the &lt;xref:System.Data.DataSet&gt; is written as XML.</source>
          <target state="translated">扩展的属性的类型必须为&lt;xref:System.String&gt;如果你希望它们时保持&lt;xref:System.Data.DataSet&gt;以 XML 形式写入。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.PropertyCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with all custom user information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.PropertyCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>所有的自定义用户信息。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets a copy of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains all changes made to it since it was loaded or since &lt;xref:System.Data.DataSet.AcceptChanges*&gt; was last called.</source>
          <target state="translated">获取一份<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含自加载后或以来对它发出的所有更改&lt;xref:System.Data.DataSet.AcceptChanges*&gt;上一次调用。&lt;/xref:System.Data.DataSet.AcceptChanges*&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;xref:System.Data.DataSet&gt; that contains a copy of all rows in the original &lt;xref:System.Data.DataSet&gt; that have pending changes.</source>
          <target state="translated">创建一个新&lt;xref:System.Data.DataSet&gt;，其中包含原始中的所有行的副本&lt;xref:System.Data.DataSet&gt;中具有挂起更改。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Relationship constraints can cause additional unchanged rows to be added to the new &lt;xref:System.Data.DataSet&gt; if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</source>
          <target state="translated">关系约束可能会导致其他未更改的行添加到新&lt;xref:System.Data.DataSet&gt;如果未更改的行包含对应于已更改的行中的外键的主键。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`null`</ph> if there are no rows in the original &lt;xref:System.Data.DataSet&gt; that have pending changes.</source>
          <target state="translated">该方法返回<ph id="ph1">`null`</ph>中是否存在任何行原始&lt;xref:System.Data.DataSet&gt;中具有挂起更改。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A copy of the changes from this <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can have actions performed on it and later be merged back in using &lt;xref:System.Data.DataSet.Merge*&gt;.</source>
          <target state="translated">根据此更改一份<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>都可以执行在其上及更高版本返回在使用&lt;xref:System.Data.DataSet.Merge*&gt;.&lt;/xref:System.Data.DataSet.Merge*&gt;中进行合并的操作</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If no changed rows are found, the method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果找到任何已更改的行，该方法返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets a copy of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing all changes made to it since it was last loaded, or since &lt;xref:System.Data.DataSet.AcceptChanges*&gt; was called, filtered by <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取一份<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含自上次加载或以来对其进行的所有更改&lt;xref:System.Data.DataSet.AcceptChanges*&gt;已调用，通过筛选<bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.DataSet.AcceptChanges*&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is used to produce a second &lt;xref:System.Data.DataSet&gt; object that contains only the changes introduced into the original.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;方法用于生成第二个&lt;xref:System.Data.DataSet&gt;只包含的更改的对象引入到原始。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`rowStates`</ph> argument to specify the type of changes the new object should include.</source>
          <target state="translated">使用<ph id="ph1">`rowStates`</ph>自变量以指定新的对象应包含的更改的类型。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This returned copy is designed to be merged back in to this original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此值返回副本用于合并返回到此原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Relationship constraints may cause parent rows marked <ph id="ph1">`Unchanged`</ph> to be included.</source>
          <target state="translated">关系约束可能会导致标记的父行<ph id="ph1">`Unchanged`</ph>要包含。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If no rows of the desired &lt;xref:System.Data.DataRowState&gt; are found, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果所需的任何行&lt;xref:System.Data.DataRowState&gt;找到，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;方法返回<ph id="ph1">`null`</ph>。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt; &lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A filtered copy of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can have actions performed on it, and subsequently be merged back in using &lt;xref:System.Data.DataSet.Merge*&gt;.</source>
          <target state="translated">筛选的副本<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>能够拥有执行它，并随后返回在使用&lt;xref:System.Data.DataSet.Merge*&gt;.&lt;/xref:System.Data.DataSet.Merge*&gt;中进行合并的操作</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If no rows of the desired <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> are found, the method returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果所需的任何行<bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>找到，则此方法返回<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets a copy of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the DataSet.</source>
          <target state="translated">获取一份<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数据集。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The specified schema set.</source>
          <target state="translated">指定的架构集。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A copy of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A copy of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Populates a serialization information object with the data needed to serialize the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">序列化所需的数据，并用其填充序列化信息对象<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the serialized data associated with the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>它保存与关联的序列化的数据<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Runtime.Serialization.StreamingContext&gt;包含源以及与相关联的序列化流的目标<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Returns a serializable &lt;xref:System.Xml.Schema.XMLSchema&gt; instance.</source>
          <target state="translated">返回一个可序列化&lt;xref:System.Xml.Schema.XMLSchema&gt;实例。&lt;/xref:System.Xml.Schema.XMLSchema&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XMLSchema&gt; instance.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XMLSchema&gt;实例。&lt;/xref:System.Xml.Schema.XMLSchema&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Deserializes the table data from the binary or XML stream.</source>
          <target state="translated">反序列化的二进制文件或 XML 流中的表数据。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The streaming context.</source>
          <target state="translated">流上下文。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回的 XML 表示形式中存储的数据<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Calling this method is identical to calling &lt;xref:System.Data.DataSet.WriteXml%2A&gt; with &lt;xref:System.Data.XmlWriteMode&gt; set to &lt;xref:System.Data.XmlWriteMode&gt;.</source>
          <target state="translated">调用此方法等同于调用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;与&lt;xref:System.Data.XmlWriteMode&gt;设置为&lt;xref:System.Data.XmlWriteMode&gt;。&lt;/xref:System.Data.XmlWriteMode&gt; &lt;/xref:System.Data.XmlWriteMode&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>GetXml returns XML as a string, and therefore requires more overhead than &lt;xref:System.Data.DataSet.WriteXml%2A&gt; to write XML to a file.</source>
          <target state="translated">GetXml 返回以字符串形式的 XML，因此要求更多的开销比&lt;xref:System.Data.DataSet.WriteXml%2A&gt;以向文件写入 XML。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If you build a &lt;xref:System.Data.DataSet&gt; using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">如果你要构建&lt;xref:System.Data.DataSet&gt;使用架构推理和序列化它使用 XML 或 Web 服务，则列的排序可能更改。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A string that is a representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个字符串，它存储在数据的表示形式<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Returns the XML Schema for the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回的 XML 表示形式中存储的数据的 XML 架构<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Calling this method is identical to calling &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;, except that only the primary schema is written.</source>
          <target state="translated">调用此方法相当于调用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;，只不过仅在主架构写。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>GetXmlSchema returns XML as a string, and therefore requires more overhead than &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; to write XML to a file.</source>
          <target state="translated">GetXmlSchema 返回以字符串形式的 XML，因此要求更多的开销比&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;以向文件写入 XML。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If you build a &lt;xref:System.Data.DataSet&gt; using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">如果你要构建&lt;xref:System.Data.DataSet&gt;使用架构推理和序列化它使用 XML 或 Web 服务，则列的排序可能更改。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>String that is the XML Schema for the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">字符串，它 XML 架构的 XML 表示形式中存储的数据为<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has changes, including new, deleted, or modified rows.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>更改，包括新的、 已删除，或已修改的行。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has changes; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>具有更改; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has changes, including new, deleted, or modified rows, filtered by <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>更改，包括新的、 已删除，或已修改的行，通过筛选<bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Examine the &lt;xref:System.Data.DataSet.HasChanges%2A&gt; property of the <ph id="ph1">`DataSet`</ph> before invoking the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method.</source>
          <target state="translated">检查&lt;xref:System.Data.DataSet.HasChanges%2A&gt;属性<ph id="ph1">`DataSet`</ph>之前调用&lt;xref:System.Data.DataSet.GetChanges%2A&gt;方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt; &lt;/xref:System.Data.DataSet.HasChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has changes; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>具有更改; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether there are errors in any of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects within this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取一个值，该值在任何中是否有错误<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象在此<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Each &lt;xref:System.Data.DataTable&gt; in a &lt;xref:System.Data.DataSet&gt; also has a &lt;xref:System.Data.DataTable.HasErrors%2A&gt; property.</source>
          <target state="translated">每个&lt;xref:System.Data.DataTable&gt;中&lt;xref:System.Data.DataSet&gt;还有&lt;xref:System.Data.DataTable.HasErrors%2A&gt;属性。&lt;/xref:System.Data.DataTable.HasErrors%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`HasErrors`</ph> property of the <ph id="ph2">`DataSet`</ph> first, to determine if any table has errors, before checking individual &lt;xref:System.Data.DataTable&gt; objects.</source>
          <target state="translated">使用<ph id="ph1">`HasErrors`</ph>属性<ph id="ph2">`DataSet`</ph>第一个，以确定是否任何表就会有错误，然后再检查单个&lt;xref:System.Data.DataTable&gt;对象。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`DataTable`</ph> has errors, the &lt;xref:System.Data.DataTable.GetErrors%2A&gt; method returns an array of &lt;xref:System.Data.DataRow&gt; objects containing the errors.</source>
          <target state="translated">如果<ph id="ph1">`DataTable`</ph>有错误，&lt;xref:System.Data.DataTable.GetErrors%2A&gt;方法返回的数组&lt;xref:System.Data.DataRow&gt;对象包含的错误。&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable.GetErrors%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if any table contains an error;otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果任何表包含错误; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified &lt;xref:System.IO.Stream&gt; to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从指定适用的 XML 架构&lt;xref:System.IO.Stream&gt;到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>从中读取该架构。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要从架构推理中排除的命名空间统一资源标识符 (URI) 字符串的数组。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified &lt;xref:System.IO.TextReader&gt; to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从指定适用的 XML 架构&lt;xref:System.IO.TextReader&gt;到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>从中读取该架构。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要从架构推理中排除的命名空间统一资源标识符 (URI) 字符串的数组。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified file to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将 XML 架构应用到指定的文件从<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The name of the file (including the path) from which to read the schema.</source>
          <target state="translated">要从其中读取架构 （包括路径） 的文件的名称。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要从架构推理中排除的命名空间统一资源标识符 (URI) 字符串的数组。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未设置为<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified &lt;xref:System.Xml.XmlReader&gt; to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从指定适用的 XML 架构&lt;xref:System.Xml.XmlReader&gt;到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XMLReader" name="XMLReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XMLReader" name="XMLReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>从中读取该架构。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要从架构推理中排除的命名空间统一资源标识符 (URI) 字符串的数组。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Occurs after the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">之后，将会<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>初始化。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Data.DataSet.IsInitialized%2A&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Data.DataSet.IsInitialized%2A&gt;。&lt;/xref:System.Data.DataSet.IsInitialized%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Deserialize all of the tables data of the DataSet from the binary or XML stream.</source>
          <target state="translated">反序列化的所有表数据从二进制文件或 XML 流的数据集。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Inspects the format of the serialized representation of the <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">检查的序列化表示形式的格式<bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">此成员支持.NET Framework 基础结构，不宜在代码中直接使用。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;对象。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> serialized in its binary format, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> otherwise.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定<bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>表示<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>以二进制格式，序列化<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>否则为。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>初始化。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Returns the status of the &lt;xref:System.Data.DataSet&gt; while it’s being constructed, for instance by Visual Studio.</source>
          <target state="translated">返回的状态&lt;xref:System.Data.DataSet&gt;时它正在构造，例如 Visual Studio。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.BeginInit%2A&gt; method sets it to <ph id="ph1">`false`</ph> and &lt;xref:System.Data.DataSet.EndInit%2A&gt; method sets it to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;方法将其设置为<ph id="ph1">`false`</ph>和&lt;xref:System.Data.DataSet.EndInit%2A&gt;方法将其设置为<ph id="ph2">`true`</ph>。&lt;/xref:System.Data.DataSet.EndInit%2A&gt; &lt;/xref:System.Data.DataSet.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate the component has completed initialization; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指示组件已完成初始化;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using an array of <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> instances to supply the schema and namespace information.</source>
          <target state="translated">填充<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用所提供的数据源中的值<bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，使用的数组<bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>实例提供的架构和命名空间信息。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataTable.Load%2A&gt; method provides a technique for filling a single &lt;xref:System.Data.DataTable&gt; with data, retrieved from an &lt;xref:System.Data.IDataReader&gt; instance.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.Load%2A&gt;方法提供了一种技术填充单个&lt;xref:System.Data.DataTable&gt;从检索到的数据与&lt;xref:System.Data.IDataReader&gt;实例。&lt;/xref:System.Data.IDataReader&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an &lt;xref:System.Data.IDataReader&gt; into multiple tables within a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此方法提供相同的功能，但允许你从&lt;xref:System.Data.IDataReader&gt;为一种&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;内的多个表&lt;/xref:System.Data.IDataReader&gt;加载多个结果集</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The load operation will fail with an &lt;xref:System.InvalidOperationException&gt; if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 加载操作将失败，并&lt;xref:System.InvalidOperationException&gt;如果任何中传入的源数据列<ph id="ph2">`reader`</ph>的计算列。&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the &lt;xref:System.Data.LoadOption&gt; enumeration.</source>
          <target state="translated"><ph id="ph1">`loadOption`</ph>参数可以指定希望导入的数据与现有数据进行交互和可以是任何中的值的方式&lt;xref:System.Data.LoadOption&gt;枚举。&lt;/xref:System.Data.LoadOption&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;xref:System.Data.DataTable&gt;&lt;xref:System.Data.DataTable.Load%2A&gt; method for more information on using this parameter.</source>
          <target state="translated">请参阅&lt;xref:System.Data.DataTable&gt;的文档&lt;xref:System.Data.DataTable.Load%2A&gt;有关使用此参数的详细信息的方法。&lt;/xref:System.Data.DataTable.Load%2A&gt;&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of &lt;xref:System.Data.DataTable&gt; instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated"><ph id="ph1">`tables`</ph>参数允许你指定的数组&lt;xref:System.Data.DataTable&gt;实例，指示每个结果集加载从读取器与对应的表的顺序。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The Loadmethod fills each supplied &lt;xref:System.Data.DataTable&gt; instance with data from a single result set from the source data reader.</source>
          <target state="translated">Loadmethod 填充每个提供&lt;xref:System.Data.DataTable&gt;具有数据从单个结果集，从源数据读取器实例。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>After each result set, the Loadmethod moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">每个结果集之后，Loadmethod 移到下一步中的结果集读取器中，直到没有更多的结果集。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The name resolution scheme for this method is the same as that followed by the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method of the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">此方法的名称解析方案等同于跟&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;方法的&lt;xref:System.Data.Common.DbDataAdapter&gt;类。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，提供了一个或多个结果集。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances within the <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">取值范围为<bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举，指示如何中的现有行<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例内<bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>组合在一起共享相同的主键的传入行。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances, from which the Load method retrieves name and namespace information.</source>
          <target state="translated">数组<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>情况下，从其负载方法检索名称和命名空间的信息。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Each of these tables must be a member of the <bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contained by this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">其中每个表必须是属于<bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含由此<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using an array of strings to supply the names for the tables within the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">填充<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用所提供的数据源中的值<bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，使用一个字符串数组提供中的表名称，从而<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataTable.Load%2A&gt; method provides a technique for filling a single &lt;xref:System.Data.DataTable&gt; with data, retrieved from an &lt;xref:System.Data.IDataReader&gt; instance.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.Load%2A&gt;方法提供了一种技术填充单个&lt;xref:System.Data.DataTable&gt;从检索到的数据与&lt;xref:System.Data.IDataReader&gt;实例。&lt;/xref:System.Data.IDataReader&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">`IDataReader`</ph> into multiple tables within a <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">此方法提供相同的功能，但是允许您将负载从多个结果集<ph id="ph1">`IDataReader`</ph>到内的多个表<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The load operation will fail with an &lt;xref:System.InvalidOperationException&gt; if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 加载操作将失败，并&lt;xref:System.InvalidOperationException&gt;如果任何中传入的源数据列<ph id="ph2">`reader`</ph>的计算列。&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the &lt;xref:System.Data.LoadOption&gt; enumeration.</source>
          <target state="translated"><ph id="ph1">`loadOption`</ph>参数可以指定希望导入的数据与现有数据进行交互和可以是任何中的值的方式&lt;xref:System.Data.LoadOption&gt;枚举。&lt;/xref:System.Data.LoadOption&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;xref:System.Data.DataTable.Load%2A&gt; method for more information on using this parameter.</source>
          <target state="translated">请参阅的文档&lt;xref:System.Data.DataTable.Load%2A&gt;有关使用此参数的详细信息的方法。&lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of table names, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated"><ph id="ph1">`tables`</ph>参数可以指定表名称，指示每个结果集加载从读取器与对应的表的顺序的数组。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Load`</ph> method attempts to find a table within the <ph id="ph2">`DataSet`</ph> matching the name found in the array of table names, in order.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法尝试查找表中的<ph id="ph2">`DataSet`</ph>在顺序中的表名称的数组中找到匹配的名称。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If a matching table is found, that table is loaded with the content of the current result set.</source>
          <target state="translated">如果找到匹配的表，该表都会加载当前的结果集的内容。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>If no matching table is found, a table is created using the name supplied in the array of table names, and the new table's schema is inferred from the result set.</source>
          <target state="translated">如果不找到任何匹配的表，则使用表名称的数组中提供的名称创建一个表，并且新表的架构推断从结果集中。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>After each result set, the <ph id="ph1">`Load`</ph> method moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">在每个结果集之后,<ph id="ph1">`Load`</ph>方法会移到下一步中的结果集读取器中，直到没有更多的结果集。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The default namespace associated with <ph id="ph1">`DataSet`</ph>, if any, is associated with each newly created <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">与关联的默认命名空间<ph id="ph1">`DataSet`</ph>，如果任何，与每个新创建为关联<ph id="ph2">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The name resolution scheme for this method is the same as that followed by the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method of the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">此方法的名称解析方案等同于跟&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;方法的&lt;xref:System.Data.Common.DbDataAdapter&gt;类。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，提供了一个或多个结果集。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances within the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">取值范围为<bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举，指示如何中的现有行<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例内<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>组合在一起共享相同的主键的传入行。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>An array of strings, from which the <bpt id="p1">&lt;xref uid="langword_csharp_Load" name="Load" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method retrieves table name information.</source>
          <target state="translated">一个字符串，从该数组<bpt id="p1">&lt;xref uid="langword_csharp_Load" name="Load" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>方法检索表名称信息。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using an array of <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> instances to supply the schema and namespace information.</source>
          <target state="translated">填充<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用所提供的数据源中的值<bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，使用的数组<bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>实例提供的架构和命名空间信息。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataTable.Load%2A&gt; method provides a technique for filling a single &lt;xref:System.Data.DataTable&gt; with data, retrieved from an &lt;xref:System.Data.IDataReader&gt; instance.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.Load%2A&gt;方法提供了一种技术填充单个&lt;xref:System.Data.DataTable&gt;从检索到的数据与&lt;xref:System.Data.IDataReader&gt;实例。&lt;/xref:System.Data.IDataReader&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an &lt;xref:System.Data.IDataReader&gt; into multiple tables within a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此方法提供相同的功能，但允许你从&lt;xref:System.Data.IDataReader&gt;为一种&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;内的多个表&lt;/xref:System.Data.IDataReader&gt;加载多个结果集</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The load operation will fail with an &lt;xref:System.InvalidOperationException&gt; if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 加载操作将失败，并&lt;xref:System.InvalidOperationException&gt;如果任何中传入的源数据列<ph id="ph2">`reader`</ph>的计算列。&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the &lt;xref:System.Data.LoadOption&gt; enumeration.</source>
          <target state="translated"><ph id="ph1">`loadOption`</ph>参数可以指定希望导入的数据与现有数据进行交互和可以是任何中的值的方式&lt;xref:System.Data.LoadOption&gt;枚举。&lt;/xref:System.Data.LoadOption&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;xref:System.Data.DataTable&gt;&lt;xref:System.Data.DataTable.Load%2A&gt; method for more information on using this parameter.</source>
          <target state="translated">请参阅&lt;xref:System.Data.DataTable&gt;的文档&lt;xref:System.Data.DataTable.Load%2A&gt;有关使用此参数的详细信息的方法。&lt;/xref:System.Data.DataTable.Load%2A&gt;&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`errorHandler`</ph> parameter is a &lt;xref:System.Data.FillErrorEventHandler&gt; delegate that refers to a procedure that is called when an error occurs while loading data.</source>
          <target state="translated"><ph id="ph1">`errorHandler`</ph>参数是&lt;xref:System.Data.FillErrorEventHandler&gt;指将数据加载过程中发生错误时调用的过程的委托。&lt;/xref:System.Data.FillErrorEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.FillErrorEventArgs&gt; parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the &lt;xref:System.Data.DataTable&gt; being filled.</source>
          <target state="translated">&lt;xref:System.Data.FillErrorEventArgs&gt;传递给过程的参数提供的属性，使您得以检索有关错误的发生，而当前行的数据，信息和&lt;xref:System.Data.DataTable&gt;填充的。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.FillErrorEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</source>
          <target state="translated">使用此委托机制，而不是更简单的 try/catch 块，可以确定该错误，处理这种情况，并继续如果愿意处理。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.FillErrorEventArgs&gt; parameter supplies a &lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt; property: set this property to <ph id="ph1">`true`</ph> to indicate that you have handled the error and wish to continue processing; set the property to <ph id="ph2">`false`</ph> to indicate that you wish to halt processing.</source>
          <target state="translated">&lt;xref:System.Data.FillErrorEventArgs&gt;参数提供&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;属性︰ 将此属性设置为<ph id="ph1">`true`</ph>以指示你已处理错误并且希望继续进行处理; 将属性设置为<ph id="ph2">`false`</ph>以指示你想要停止处理。&lt;/xref:System.Data.FillErrorEventArgs.Continue%2A&gt; &lt;/xref:System.Data.FillErrorEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Be aware that setting the property to <ph id="ph1">`false`</ph> causes the code that triggered the problem to throw an exception.</source>
          <target state="translated">请注意，将属性设置为<ph id="ph1">`false`</ph>导致触发要引发异常的问题的代码。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of &lt;xref:System.Data.DataTable&gt; instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated"><ph id="ph1">`tables`</ph>参数允许你指定的数组&lt;xref:System.Data.DataTable&gt;实例，指示每个结果集加载从读取器与对应的表的顺序。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The Loadmethod fills each supplied &lt;xref:System.Data.DataTable&gt; instance with data from a single result set from the source data reader.</source>
          <target state="translated">Loadmethod 填充每个提供&lt;xref:System.Data.DataTable&gt;具有数据从单个结果集，从源数据读取器实例。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>After each result set, the Loadmethod moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">每个结果集之后，Loadmethod 移到下一步中的结果集读取器中，直到没有更多的结果集。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The name resolution scheme for this method is the same as that followed by the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method of the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">此方法的名称解析方案等同于跟&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;方法的&lt;xref:System.Data.Common.DbDataAdapter&gt;类。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，提供了一个或多个结果集。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances within the <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">取值范围为<bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举，指示如何中的现有行<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例内<bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>组合在一起共享相同的主键的传入行。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.FillErrorEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate to call when an error occurs while loading data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.FillErrorEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>加载数据时出错时要调用委托。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances, from which the Load method retrieves name and namespace information.</source>
          <target state="translated">数组<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>情况下，从其负载方法检索名称和命名空间的信息。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Gets or sets the locale information used to compare strings within the table.</source>
          <target state="translated">获取或设置用来比较字符串表中的区域设置信息。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The Locale property specifies the locale for which sorting applies.</source>
          <target state="translated">区域设置属性指定的区域设置用于排序适用。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>By default, setting the Locale for a &lt;xref:System.Data.DataSet&gt; also sets the Locale for each &lt;xref:System.Data.DataTable&gt; object in that <ph id="ph1">`DataSet`</ph> to the same value.</source>
          <target state="translated">默认情况下，设置的区域设置&lt;xref:System.Data.DataSet&gt;还为每个区域设置设定&lt;xref:System.Data.DataTable&gt;中的对象<ph id="ph1">`DataSet`</ph>为相同的值。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In columns that contain expressions, the &lt;xref:System.StringComparison&gt; is used.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 包含表达式，列中&lt;xref:System.StringComparison&gt;使用。&lt;/xref:System.StringComparison&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.StringComparison&gt; is ignored.</source>
          <target state="translated">&lt;xref:System.StringComparison&gt;将被忽略。&lt;/xref:System.StringComparison&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; that contains data about the user's machine locale.</source>
          <target state="translated">A&lt;xref:System.Globalization.CultureInfo&gt;包含有关用户的计算机的区域设置的数据。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Merges an array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects into the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">合并的数组<bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到当前对象<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用于合并两个&lt;xref:System.Data.DataSet&gt;有很大程度上类似的架构的对象。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新&lt;xref:System.Data.DataSet&gt;使用数据源的最新的数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;通常在一系列的过程涉及验证更改、 协调错误、 更新使用所做的更改，数据源和最后刷新现有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的末尾调用方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在客户端应用程序中，很常见的单个按钮，用户可以单击收集更改的数据，并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此方案中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;第一次调用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个&lt;xref:System.Data.DataSet&gt;优化为验证和合并。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二个&lt;xref:System.Data.DataSet&gt;对象只包含&lt;xref:System.Data.DataTable&gt;和&lt;xref:System.Data.DataRow&gt;对象的已更改，从而导致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">此子集通常较小，因此可以更有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新&lt;xref:System.Data.DataSet&gt;，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回&lt;xref:System.Data.DataSet&gt;必须合并回客户端应用程序的原始&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">当&lt;xref:System.Data.DataSet.Merge%2A&gt;调用方法时，这两个架构&lt;xref:System.Data.DataSet&gt;对象进行比较，因为它是可能的架构可能已更改。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企业到企业方案中，新列可能已被添加到 XML 架构一个自动化过程。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果源&lt;xref:System.Data.DataSet&gt;包含架构元素 (添加&lt;xref:System.Data.DataColumn&gt;对象) 缺少目标中，通过设置，可以将架构元素添加到目标<ph id="ph1">`missingSchemaAction`</ph>参数<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在这种情况下，合并&lt;xref:System.Data.DataSet&gt;包含添加的架构和数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合并后的架构，则数据将合并。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时&lt;xref:System.Data.DataSet&gt;到目标中时，任何源行与&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>与具有相同的主键值的目标行匹配。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。&lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">在合并时，约束被禁用。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of a merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何约束不能启用合并，末尾&lt;xref:System.Data.ConstraintException&gt;生成和合并的数据会保留，而会在禁用约束。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性设置为<ph id="ph1">`false`</ph>，并且无效的所有行均未标记错误。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">在尝试重置之前，必须解决错误&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The array of <bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects to be merged into the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">数组<bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象合并到<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">合并指定<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到当前及其架构<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The Merge method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">Merge 方法用于合并两个&lt;xref:System.Data.DataSet&gt;有很大程度上类似的架构的对象。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新&lt;xref:System.Data.DataSet&gt;使用数据源的最新的数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The Merge method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Merge 方法通常称为的一系列的过程涉及验证更改、 协调错误、 与所做的更改，更新数据源和最后刷新现有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;末尾</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在客户端应用程序中，很常见的单个按钮，用户可以单击收集更改的数据，并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此方案中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;第一次调用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个&lt;xref:System.Data.DataSet&gt;优化为验证和合并。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二个&lt;xref:System.Data.DataSet&gt;对象只包含&lt;xref:System.Data.DataTable&gt;和&lt;xref:System.Data.DataRow&gt;对象的已更改，从而导致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">此子集是通常较小，并因此的详细信息有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新&lt;xref:System.Data.DataSet&gt;，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the Merge method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回&lt;xref:System.Data.DataSet&gt;必须合并回客户端应用程序的原始&lt;xref:System.Data.DataSet&gt;与 Merge 方法。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>When the Merge method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">Merge 方法调用时，这两个架构&lt;xref:System.Data.DataSet&gt;对象进行比较，因为它是可能的架构可能已更改。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企业到企业方案中，新列可能已被添加到 XML 架构一个自动化过程。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果源&lt;xref:System.Data.DataSet&gt;包含架构元素 (添加&lt;xref:System.Data.DataColumn&gt;对象) 缺少目标中，通过设置，可以将架构元素添加到目标<ph id="ph1">`missingSchemaAction`</ph>参数<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在这种情况下，合并&lt;xref:System.Data.DataSet&gt;包含添加的架构和数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合并后的架构，则数据将合并。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时&lt;xref:System.Data.DataSet&gt;到目标中时，任何源行与&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>与具有相同的主键值的目标行匹配。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">在合并时，约束被禁用。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何约束不能启用合并，末尾&lt;xref:System.Data.ConstraintException&gt;生成和合并的数据会保留，而会在禁用约束。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性设置为<ph id="ph1">`false`</ph>，并且无效的所有行均未标记错误。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">在尝试重置之前，必须解决错误&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>将合并其数据和架构。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>One or more constraints cannot be enabled.</source>
          <target state="translated">无法启用一个或多个约束。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">合并指定<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到当前及其架构<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用于合并两个&lt;xref:System.Data.DataSet&gt;有很大程度上类似的架构的对象。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新&lt;xref:System.Data.DataSet&gt;使用数据源的最新的数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;通常在一系列的过程涉及验证更改、 协调错误、 更新使用所做的更改，数据源和最后刷新现有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的末尾调用方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在客户端应用程序中，很常见的单个按钮，用户可以单击收集更改的数据，并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此方案中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;第一次调用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个&lt;xref:System.Data.DataSet&gt;优化为验证和合并。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二个&lt;xref:System.Data.DataSet&gt;对象只包含&lt;xref:System.Data.DataTable&gt;和&lt;xref:System.Data.DataRow&gt;对象的已更改，从而导致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">此子集是通常较小，并因此的详细信息有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新&lt;xref:System.Data.DataSet&gt;，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回&lt;xref:System.Data.DataSet&gt;必须合并回客户端应用程序的原始&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">当&lt;xref:System.Data.DataSet.Merge%2A&gt;调用方法时，这两个架构&lt;xref:System.Data.DataSet&gt;对象进行比较，因为它是可能的架构可能已更改。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企业到企业方案中，新列可能已被添加到 XML 架构一个自动化过程。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果源&lt;xref:System.Data.DataSet&gt;包含架构元素 (添加&lt;xref:System.Data.DataColumn&gt;对象) 缺少目标中，通过设置，可以将架构元素添加到目标<ph id="ph1">`missingSchemaAction`</ph>参数<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在这种情况下，合并&lt;xref:System.Data.DataSet&gt;包含添加的架构和数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合并后的架构，则数据将合并。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时&lt;xref:System.Data.DataSet&gt;到目标中时，任何源行与&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>与具有相同的主键值的目标行匹配。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">在合并时，约束被禁用。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何约束不能启用合并，末尾&lt;xref:System.Data.ConstraintException&gt;生成和合并的数据会保留，而会在禁用约束。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性设置为<ph id="ph1">`false`</ph>，并且无效的所有行均未标记错误。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">在尝试重置之前，必须解决错误&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>将合并其数据和架构。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">table</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">table</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding any changes in this <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> according to the given argument.</source>
          <target state="translated">合并指定<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到当前及其架构<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 保留或放弃这方面的更改<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>根据给定的自变量。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用于合并两个&lt;xref:System.Data.DataSet&gt;有很大程度上类似的架构的对象。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新&lt;xref:System.Data.DataSet&gt;使用数据源的最新的数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;通常在一系列的过程涉及验证更改、 协调错误、 更新使用所做的更改，数据源和最后刷新现有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的末尾调用方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在客户端应用程序中，很常见的单个按钮，用户可以单击收集更改的数据，并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此方案中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;第一次调用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个&lt;xref:System.Data.DataSet&gt;优化为验证和合并。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二个&lt;xref:System.Data.DataSet&gt;对象只包含&lt;xref:System.Data.DataTable&gt;和&lt;xref:System.Data.DataRow&gt;对象的已更改，从而导致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">此子集是通常较小，并因此的详细信息有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新&lt;xref:System.Data.DataSet&gt;，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回&lt;xref:System.Data.DataSet&gt;必须合并回客户端应用程序的原始&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">当&lt;xref:System.Data.DataSet.Merge%2A&gt;调用方法时，这两个架构&lt;xref:System.Data.DataSet&gt;对象进行比较，因为它是可能的架构可能已更改。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企业到企业方案中，新列可能已被添加到 XML 架构一个自动化过程。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果源&lt;xref:System.Data.DataSet&gt;包含架构元素 (添加&lt;xref:System.Data.DataColumn&gt;对象) 缺少目标中，通过设置，可以将架构元素添加到目标<ph id="ph1">`missingSchemaAction`</ph>参数<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在这种情况下，合并&lt;xref:System.Data.DataSet&gt;包含添加的架构和数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合并后的架构，则数据将合并。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时&lt;xref:System.Data.DataSet&gt;到目标中时，任何源行与&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>与具有相同的主键值的目标行匹配。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">在合并时，约束被禁用。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何约束不能启用合并，末尾&lt;xref:System.Data.ConstraintException&gt;生成和合并的数据会保留，而会在禁用约束。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性设置为<ph id="ph1">`false`</ph>，并且无效的所有行均未标记错误。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">在尝试重置之前，必须解决错误&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>将合并其数据和架构。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要保留在当前的更改<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Merges an array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects into the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding changes in the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">合并的数组<bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到当前对象<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 保留或放弃更改<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>和处理根据给定的参数不兼容的架构。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用于合并两个&lt;xref:System.Data.DataSet&gt;有很大程度上类似的架构的对象。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新&lt;xref:System.Data.DataSet&gt;使用数据源的最新的数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;通常在一系列的过程涉及验证更改、 协调错误、 更新使用所做的更改，数据源和最后刷新现有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的末尾调用方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在客户端应用程序中，很常见的单个按钮，用户可以单击收集更改的数据，并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此方案中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;第一次调用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个&lt;xref:System.Data.DataSet&gt;优化为验证和合并。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二个&lt;xref:System.Data.DataSet&gt;对象只包含&lt;xref:System.Data.DataTable&gt;和&lt;xref:System.Data.DataRow&gt;对象的已更改，从而导致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">此子集是通常较小，并因此的详细信息有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新&lt;xref:System.Data.DataSet&gt;，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回&lt;xref:System.Data.DataSet&gt;必须合并回客户端应用程序的原始&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>To facilitate explanation of the &lt;xref:System.Data.DataSet.Merge%2A&gt; method, we use "target" to signify the current &lt;xref:System.Data.DataSet&gt;, and "source" to name the second (parameter) &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">为了便于说明&lt;xref:System.Data.DataSet.Merge%2A&gt;方法，我们使用"针对"以表示当前&lt;xref:System.Data.DataSet&gt;，和"源"以命名第二个 （参数） &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The target &lt;xref:System.Data.DataSet&gt; is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">目标&lt;xref:System.Data.DataSet&gt;之所以如此命名，因为它是在其发生某项操作 （合并） 的对象。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The second &lt;xref:System.Data.DataSet&gt; is called a "source" because the information it contains does not change, but instead is merged into the current &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">第二个&lt;xref:System.Data.DataSet&gt;被称为"源"，因为它包含的信息不会更改，但改为合并到当前&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">当&lt;xref:System.Data.DataSet.Merge%2A&gt;调用方法时，这两个架构&lt;xref:System.Data.DataSet&gt;对象进行比较，因为它是可能的架构可能已更改。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企业到企业方案中，新列可能已被添加到 XML 架构一个自动化过程。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果源&lt;xref:System.Data.DataSet&gt;包含架构元素 (添加&lt;xref:System.Data.DataColumn&gt;对象) 缺少目标中，通过设置，可以将架构元素添加到目标<ph id="ph1">`missingSchemaAction`</ph>参数<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在这种情况下，合并&lt;xref:System.Data.DataSet&gt;包含添加的架构和数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合并后的架构，则数据将合并。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时&lt;xref:System.Data.DataSet&gt;到目标中时，任何源行与&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>与具有相同的主键值的目标行匹配。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">在合并时，约束被禁用。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何约束不能启用合并，末尾&lt;xref:System.Data.ConstraintException&gt;生成和合并的数据会保留，而会在禁用约束。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性设置为<ph id="ph1">`false`</ph>，并且无效的所有行均未标记错误。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">在尝试重置之前，必须解决错误&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects to be merged into the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">数组<bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象合并到<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要保留在更改<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema with the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding changes in the current <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">合并指定<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和其架构与当前<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 保留或放弃更改在当前<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>和处理根据给定的参数不兼容的架构。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用于合并两个&lt;xref:System.Data.DataSet&gt;有很大程度上类似的架构的对象。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新&lt;xref:System.Data.DataSet&gt;使用数据源的最新的数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;通常在一系列的过程涉及验证更改、 协调错误、 更新使用所做的更改，数据源和最后刷新现有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的末尾调用方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在客户端应用程序中，很常见的单个按钮，用户可以单击收集更改的数据，并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此方案中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;第一次调用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个&lt;xref:System.Data.DataSet&gt;优化为验证和合并。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二个&lt;xref:System.Data.DataSet&gt;对象只包含&lt;xref:System.Data.DataTable&gt;和&lt;xref:System.Data.DataRow&gt;对象的已更改，从而导致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">此子集是通常较小，并因此的详细信息有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新&lt;xref:System.Data.DataSet&gt;，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回&lt;xref:System.Data.DataSet&gt;必须合并回客户端应用程序的原始&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>To facilitate explanation of the &lt;xref:System.Data.DataSet.Merge%2A&gt; method, we use "target" to signify the current &lt;xref:System.Data.DataSet&gt;, and "source" to name the second (parameter) &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">为了便于说明&lt;xref:System.Data.DataSet.Merge%2A&gt;方法，我们使用"针对"以表示当前&lt;xref:System.Data.DataSet&gt;，和"源"以命名第二个 （参数） &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The target &lt;xref:System.Data.DataSet&gt; is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">目标&lt;xref:System.Data.DataSet&gt;之所以如此命名，因为它是在其发生某项操作 （合并） 的对象。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The second &lt;xref:System.Data.DataSet&gt; is called a "source" because the information it contains does not change, but instead is merged into the current &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">第二个&lt;xref:System.Data.DataSet&gt;被称为"源"，因为它包含的信息不会更改，但改为合并到当前&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">当&lt;xref:System.Data.DataSet.Merge%2A&gt;调用方法时，这两个架构&lt;xref:System.Data.DataSet&gt;对象进行比较，因为它是可能的架构可能已更改。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企业到企业方案中，新列可能已被添加到 XML 架构一个自动化过程。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果源&lt;xref:System.Data.DataSet&gt;包含架构元素 (添加&lt;xref:System.Data.DataColumn&gt;对象) 缺少目标中，通过设置，可以将架构元素添加到目标<ph id="ph1">`missingSchemaAction`</ph>参数<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在这种情况下，合并&lt;xref:System.Data.DataSet&gt;包含添加的架构和数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合并后的架构，则数据将合并。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时&lt;xref:System.Data.DataSet&gt;到目标中时，任何源行与&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>与具有相同的主键值的目标行匹配。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">在合并时，约束被禁用。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何约束不能启用合并，末尾&lt;xref:System.Data.ConstraintException&gt;生成和合并的数据会保留，而会在禁用约束。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性设置为<ph id="ph1">`false`</ph>，并且无效的所有行均未标记错误。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">在尝试重置之前，必须解决错误&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>将合并其数据和架构。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要保留在当前的更改<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding changes in the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">合并指定<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到当前及其架构<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 保留或放弃更改<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>和处理根据给定的参数不兼容的架构。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用于合并两个&lt;xref:System.Data.DataSet&gt;有很大程度上类似的架构的对象。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新&lt;xref:System.Data.DataSet&gt;使用数据源的最新的数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;通常在一系列的过程涉及验证更改、 协调错误、 更新使用所做的更改，数据源和最后刷新现有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的末尾调用方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>iOn a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">离子客户端应用程序，它是通常有一个按钮，用户可以单击它来收集已更改的数据并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此方案中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;第一次调用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个&lt;xref:System.Data.DataSet&gt;优化为验证和合并。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二个&lt;xref:System.Data.DataSet&gt;对象只包含&lt;xref:System.Data.DataTable&gt;和&lt;xref:System.Data.DataRow&gt;对象的已更改，从而导致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">此子集是通常较小，并因此的详细信息有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新&lt;xref:System.Data.DataSet&gt;，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回&lt;xref:System.Data.DataSet&gt;必须合并回客户端应用程序的原始&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">当&lt;xref:System.Data.DataSet.Merge%2A&gt;调用方法时，这两个架构&lt;xref:System.Data.DataSet&gt;对象进行比较，因为它是可能的架构可能已更改。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企业到企业方案中，新列可能已被添加到 XML 架构一个自动化过程。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果源&lt;xref:System.Data.DataSet&gt;包含架构元素 (添加&lt;xref:System.Data.DataColumn&gt;对象) 缺少目标中，通过设置，可以将架构元素添加到目标<ph id="ph1">`missingSchemaAction`</ph>参数<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在这种情况下，合并&lt;xref:System.Data.DataSet&gt;包含添加的架构和数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合并后的架构，则数据将合并。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时&lt;xref:System.Data.DataSet&gt;到目标中时，任何源行与&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>与具有相同的主键值的目标行匹配。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">在合并时，约束被禁用。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何约束不能启用合并，末尾&lt;xref:System.Data.ConstraintException&gt;生成和合并的数据会保留，而会在禁用约束。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性设置为<ph id="ph1">`false`</ph>，并且无效的所有行均未标记错误。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">在尝试重置之前，必须解决错误&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;属性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>将合并其数据和架构。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要保留在更改<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Occurs when a target and source <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> have the same primary key value, and &lt;xref:System.Data.DataSet.EnforceConstraints*&gt; is set to true.</source>
          <target state="translated">当目标和源时发生<bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有相同的主键值，和&lt;xref:System.Data.DataSet.EnforceConstraints*&gt;设置为 true。&lt;/xref:System.Data.DataSet.EnforceConstraints*&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>NIB︰ 使用事件<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置的命名空间<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The Namespace property is used when reading and writing an XML document into the &lt;xref:System.Data.DataSet&gt; using the &lt;xref:System.Data.DataSet.ReadXml%2A&gt;, &lt;xref:System.Data.DataSet.WriteXml%2A&gt;, &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;, or &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods.</source>
          <target state="translated">Namespace 属性时读取和写入 XML 文档为使用&lt;xref:System.Data.DataSet&gt;使用&lt;xref:System.Data.DataSet.ReadXml%2A&gt;， &lt;xref:System.Data.DataSet.WriteXml%2A&gt;， &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;，或&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The namespace of an XML document is used to scope XML attributes and elements when read into a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">XML 文档的命名空间用于确定范围 XML 特性和元素时读取到一种&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;xref:System.Data.DataSet&gt; contains a schema that was read from a document with the namespace "myCompany," and an attempt is made to read data only from a document with a different namespace, any data that does not correspond to the existing schema is ignored.</source>
          <target state="translated">例如，如果&lt;xref:System.Data.DataSet&gt;包含架构从一个文档的命名空间"myCompany，"读取和尝试读取数据只能从具有不同的命名空间的文档，则忽略与现有架构不对应的任何数据。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The namespace of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">命名空间<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The namespace already has data.</source>
          <target state="translated">命名空间上已有数据。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Raises the OnPropertyChanging event.</source>
          <target state="translated">引发 OnPropertyChanging 事件。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将调用事件处理程序，通过委托。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>NIB︰ 引发事件<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt; that contains the event data.</source>
          <target state="translated">A&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;包含事件数据。&lt;/xref:System.ComponentModel.PropertyChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is removed from a <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">发生时<bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象删除从<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to restrict tables being removed</source>
          <target state="translated">应重写此方法由子类限制表被移除。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> being removed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>被删除。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is removed from a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">发生时<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从删除<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>This method can be overridden by subclasses to restrict tables from being removed.</source>
          <target state="translated">由子类以限制从要删除的表，可以重写此方法。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> being removed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>被删除。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Gets or sets an XML prefix that aliases the namespace of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置 XML 前缀该别名的命名空间<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The Prefix property is used throughout an XML document to identify elements which belong to the namespace of the &lt;xref:System.Data.DataSet&gt; object (as set by the &lt;xref:System.Data.DataSet.Namespace%2A&gt; property).</source>
          <target state="translated">前缀属性使用整个 XML 文档来标识元素的命名空间属于&lt;xref:System.Data.DataSet&gt;对象 (通过设置，如同&lt;xref:System.Data.DataSet.Namespace%2A&gt;属性)。&lt;/xref:System.Data.DataSet.Namespace%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The XML prefix for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> namespace.</source>
          <target state="translated">XML 前缀<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>命名空间。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Sends a notification that the specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property is about to change.</source>
          <target state="translated">发送通知指定<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>即将更改的属性。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The name of the property that is about to change.</source>
          <target state="translated">要更改的属性的名称。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">将 XML 架构和数据读入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法提供方法读取只将数据或数据和架构读入&lt;xref:System.Data.DataSet&gt;从 XML 文档，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法读取仅的架构。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要读取数据和架构，使用之一<ph id="ph1">`ReadXML`</ph>重载，以包括<ph id="ph2">`mode`</ph>参数，并将其值设置为<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 架构&lt;xref:System.Data.DataSet&gt;包括<ph id="ph1">`targetNamespace`</ph>，可能无法读取数据，并在调用时，你可能会遇到异常&lt;xref:System.Data.DataSet.ReadXml%2A&gt;加载&lt;xref:System.Data.DataSet&gt;与包含的元素有非限定命名空间的 XML。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema, as the following example demonstrates.</source>
          <target state="translated">若要读取未限定的元素，设置<ph id="ph1">`elementFormDefault`</ph>等于"qualified"中的 XML 架构，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>1&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当您尝试将架构读入时引发异常&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.ReadXml%2A&gt;通过指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>An object that derives from &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">从&lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;派生的对象</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于读取数据。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">将 XML 架构和数据读入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法提供方法读取只将数据或数据和架构读入&lt;xref:System.Data.DataSet&gt;从 XML 文档，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法读取仅的架构。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要读取数据和架构，使用之一<ph id="ph1">`ReadXML`</ph>重载，以包括<ph id="ph2">`mode`</ph>参数，并将其值设置为<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 架构&lt;xref:System.Data.DataSet&gt;包括<ph id="ph1">`targetNamespace`</ph>，可能无法读取数据，并在调用时，你可能会遇到异常&lt;xref:System.Data.DataSet.ReadXml%2A&gt;加载&lt;xref:System.Data.DataSet&gt;与包含的元素有非限定命名空间的 XML。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要读取未限定的元素，设置<ph id="ph1">`elementFormDefault`</ph>等于"qualified"中的 XML 架构如以下示例所示。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>       Classes that inherit from the &lt;xref:System.IO.TextReader&gt; class include the &lt;xref:System.IO.StreamReader&gt; and &lt;xref:System.IO.StringReader&gt; classes.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>继承自的类&lt;xref:System.IO.TextReader&gt;类包括&lt;xref:System.IO.StreamReader&gt;和&lt;xref:System.IO.StringReader&gt;类。&lt;/xref:System.IO.StringReader&gt; &lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph2">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当您尝试将架构读入时引发异常&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.ReadXml%2A&gt;通过指定<ph id="ph2">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema and data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>从中进行读取的架构和数据。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于读取数据。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified file.</source>
          <target state="translated">将 XML 架构和数据读入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的文件。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法提供方法读取只将数据或数据和架构读入&lt;xref:System.Data.DataSet&gt;从 XML 文档，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法读取仅的架构。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要读取数据和架构，使用之一<ph id="ph1">`ReadXML`</ph>重载，以包括<ph id="ph2">`mode`</ph>参数，并将其值设置为<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 架构&lt;xref:System.Data.DataSet&gt;包括<ph id="ph1">`targetNamespace`</ph>，可能无法读取数据，并在调用时，你可能会遇到异常&lt;xref:System.Data.DataSet.ReadXml%2A&gt;加载&lt;xref:System.Data.DataSet&gt;与包含的元素有非限定命名空间的 XML。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要读取未限定的元素，设置<ph id="ph1">`elementFormDefault`</ph>等于"qualified"中的 XML 架构如以下示例所示。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>1&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当您尝试将架构读入时引发异常&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.ReadXml%2A&gt;通过指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">要从其中读取文件名 （包括路径）。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于读取数据。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未设置为<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">将 XML 架构和数据读入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The ReadXml method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">ReadXml 方法提供方法读取只将数据或数据和架构读入&lt;xref:System.Data.DataSet&gt;从 XML 文档，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法读取仅的架构。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要读取数据和架构，使用之一<ph id="ph1">`ReadXML`</ph>重载，以包括<ph id="ph2">`mode`</ph>参数，并将其值设置为<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling ReadXml to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 架构&lt;xref:System.Data.DataSet&gt;包括<ph id="ph1">`targetNamespace`</ph>、 不能读取数据，且调用 ReadXml 加载时，你可能会遇到异常&lt;xref:System.Data.DataSet&gt;与包含的元素有非限定命名空间的 XML。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要读取未限定的元素，设置<ph id="ph1">`elementFormDefault`</ph>等于"qualified"中的 XML 架构如以下示例所示。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>       &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt; inherits from &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>       &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;继承自&lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;&lt;/xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with ReadXml by specifying <ph id="ph2">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当您尝试将架构读入时引发异常&lt;xref:System.Data.DataSet&gt;使用通过指定 ReadXml <ph id="ph2">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;从中进行读取。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于读取数据。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将 XML 架构和数据读入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和<bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法提供方法读取只将数据或数据和架构读入&lt;xref:System.Data.DataSet&gt;从 XML 文档，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法读取仅的架构。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要读取数据和架构，使用之一<ph id="ph1">`ReadXML`</ph>重载，以包括<ph id="ph2">`mode`</ph>参数，并将其值设置为<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>The same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">同样适用于&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you use ReadXml and you set &lt;xref:System.Data.XmlReadMode&gt; to <ph id="ph2">`Diffgram`</ph>, the content of the target <ph id="ph3">`DataSet`</ph> and the original <ph id="ph4">`DataSet`</ph> may differ because of how the diffgram is generated and processed.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用 ReadXml 和你设置时&lt;xref:System.Data.XmlReadMode&gt;到<ph id="ph2">`Diffgram`</ph>，目标的内容<ph id="ph3">`DataSet`</ph>和原始<ph id="ph4">`DataSet`</ph>由于生成和处理 diffgram 的方式可能不同。&lt;/xref:System.Data.XmlReadMode&gt;</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>For more information on diffgrams, see <bpt id="p1">[</bpt>DiffGrams<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关 diffgram 的详细信息，请参阅<bpt id="p1">[</bpt>Diffgram<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 架构&lt;xref:System.Data.DataSet&gt;包括<ph id="ph1">`targetNamespace`</ph>，可能无法读取数据，并在调用时，你可能会遇到异常&lt;xref:System.Data.DataSet.ReadXml%2A&gt;加载&lt;xref:System.Data.DataSet&gt;与包含的元素有非限定命名空间的 XML。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要读取未限定的元素，设置<ph id="ph1">`elementFormDefault`</ph>等于"qualified"中的 XML 架构如以下示例所示。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>1&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当您尝试将架构读入时引发异常&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.ReadXml%2A&gt;通过指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;从中进行读取。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于读取数据。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将 XML 架构和数据读入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和<bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法提供方法读取只将数据或数据和架构读入&lt;xref:System.Data.DataSet&gt;从 XML 文档，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法读取仅的架构。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要读取数据和架构，使用之一<ph id="ph1">`ReadXML`</ph>重载，以包括<ph id="ph2">`mode`</ph>参数，并将其值设置为<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 架构&lt;xref:System.Data.DataSet&gt;包括<ph id="ph1">`targetNamespace`</ph>，可能无法读取数据，并在调用时，你可能会遇到异常&lt;xref:System.Data.DataSet.ReadXml%2A&gt;加载&lt;xref:System.Data.DataSet&gt;与包含的元素有非限定命名空间的 XML。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要读取未限定的元素，设置<ph id="ph1">`elementFormDefault`</ph>等于"qualified"中的 XML 架构如以下示例所示。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>1&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当您尝试将架构读入时引发异常&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.ReadXml%2A&gt;通过指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;从中进行读取。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于读取数据。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified file and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将 XML 架构和数据读入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的文件和<bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法提供方法读取只将数据或数据和架构读入&lt;xref:System.Data.DataSet&gt;从 XML 文档，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法读取仅的架构。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要读取数据和架构，使用之一<ph id="ph1">`ReadXML`</ph>重载，以包括<ph id="ph2">`mode`</ph>参数，并将其值设置为<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 架构&lt;xref:System.Data.DataSet&gt;包括<ph id="ph1">`targetNamespace`</ph>，可能无法读取数据，并在调用时，你可能会遇到异常&lt;xref:System.Data.DataSet.ReadXml%2A&gt;加载&lt;xref:System.Data.DataSet&gt;与包含的元素有非限定命名空间的 XML。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要读取未限定的元素，设置<ph id="ph1">`elementFormDefault`</ph>等于"qualified"中的 XML 架构如以下示例所示。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>1&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当您尝试将架构读入时引发异常&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.ReadXml%2A&gt;通过指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">要从其中读取文件名 （包括路径）。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于读取数据。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未设置为<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将 XML 架构和数据读入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和<bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法提供方法读取只将数据或数据和架构读入&lt;xref:System.Data.DataSet&gt;从 XML 文档，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法读取仅的架构。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要读取数据和架构，使用之一<ph id="ph1">`ReadXML`</ph>重载，以包括<ph id="ph2">`mode`</ph>参数，并将其值设置为<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 架构&lt;xref:System.Data.DataSet&gt;包括<ph id="ph1">`targetNamespace`</ph>，可能无法读取数据，并在调用时，你可能会遇到异常&lt;xref:System.Data.DataSet.ReadXml%2A&gt;加载&lt;xref:System.Data.DataSet&gt;与包含的元素有非限定命名空间的 XML。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要读取未限定的元素，设置<ph id="ph1">`elementFormDefault`</ph>等于"qualified"中的 XML 架构如以下示例所示。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>1&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当您尝试将架构读入时引发异常&lt;xref:System.Data.DataSet&gt;与&lt;xref:System.Data.DataSet.ReadXml%2A&gt;通过指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;从中进行读取。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于读取数据。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified &lt;xref:System.IO.Stream&gt; into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从指定读取 XML 架构&lt;xref:System.IO.Stream&gt;到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法来创建一种&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;的架构&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果 msdata:DataType 和 xs:type 类型不匹配，则会发生数据损坏。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>No exception will be thrown.</source>
          <target state="translated">会不引发任何异常。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;通常在调用该&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法用于填充&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;之前调用方法&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.IO.Stream&gt; class include &lt;xref:System.IO.BufferedStream&gt;, &lt;xref:System.IO.FileStream&gt;, &lt;xref:System.IO.MemoryStream&gt;, and &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">派生自的类&lt;xref:System.IO.Stream&gt;类包括&lt;xref:System.IO.BufferedStream&gt;， &lt;xref:System.IO.FileStream&gt;， &lt;xref:System.IO.MemoryStream&gt;，和&lt;xref:System.Net.Sockets.NetworkStream&gt;。&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.MemoryStream&gt; &lt;/xref:System.IO.FileStream&gt; &lt;/xref:System.IO.BufferedStream&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当你尝试读取到&lt;xref:System.Data.DataSet&gt;&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;&lt;/xref:System.Data.DataSet&gt;的架构引发异常&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;从中进行读取。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified &lt;xref:System.IO.TextReader&gt; into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从指定读取 XML 架构&lt;xref:System.IO.TextReader&gt;到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法来创建一种&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;的架构&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果 msdata:DataType 和 xs:type 类型不匹配，则会发生数据损坏。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>No exception will be thrown.</source>
          <target state="translated">会不引发任何异常。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;通常在调用该&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法用于填充&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;之前调用方法&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Classes that inherit from the &lt;xref:System.IO.TextReader&gt; class include the &lt;xref:System.IO.StreamReader&gt; and &lt;xref:System.IO.StringReader&gt; classes.</source>
          <target state="translated">继承自的类&lt;xref:System.IO.TextReader&gt;类包括&lt;xref:System.IO.StreamReader&gt;和&lt;xref:System.IO.StringReader&gt;类。&lt;/xref:System.IO.StringReader&gt; &lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当你尝试读取到&lt;xref:System.Data.DataSet&gt;&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;&lt;/xref:System.Data.DataSet&gt;的架构引发异常&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;从中进行读取。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified file into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从到指定的文件中读取的 XML 架构<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法来创建一种&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;的架构&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果 msdata:DataType 和 xs:type 类型不匹配，则会发生数据损坏。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>No exception will be thrown.</source>
          <target state="translated">会不引发任何异常。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;通常在调用该&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法用于填充&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;之前调用方法&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当您尝试读取到&lt;xref:System.Data.DataSet&gt;&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;&lt;/xref:System.Data.DataSet&gt;的架构时引发异常&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>The file name (including the path) from which to read.</source>
          <target state="translated">文件名称 （包括路径），从中进行读取。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未设置为<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified &lt;xref:System.Xml.XmlReader&gt; into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从指定读取 XML 架构&lt;xref:System.Xml.XmlReader&gt;到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>Use the ReadXmlSchema method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">ReadXmlSchema 方法用于创建一种&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;的架构</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果 msdata:DataType 和 xs:type 类型不匹配，则会发生数据损坏。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>No exception will be thrown.</source>
          <target state="translated">会不引发任何异常。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>The ReadXmlSchema method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;用于填充&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;方法&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;之前调用通常调用 ReadXmlSchema 方法</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader?displayProperty=fullName&gt; class is abstract.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader?displayProperty=fullName&gt;类为抽象类。&lt;/xref:System.Xml.XmlReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>A class that inherits from the <ph id="ph1">`XmlReader`</ph> is the &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt; class.</source>
          <target state="translated">继承自的类<ph id="ph1">`XmlReader`</ph>是&lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;类。&lt;/xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with ReadXmlSchema.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果的架构你&lt;xref:System.Data.DataSet&gt;包含元素的名称相同但类型不同，在相同的命名空间，当你尝试将架构读入引发异常&lt;xref:System.Data.DataSet&gt;与 ReadXmlSchema。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果你使用的.NET Framework 1.0 版，则此异常不会发生。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;从中进行读取。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>Ignores attributes and returns an empty DataSet.</source>
          <target state="translated">忽略特性，并返回一个空的数据集。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>The specified XML reader.</source>
          <target state="translated">指定的 XML 读取器。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>Rolls back all the changes made to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> since it was created, or since the last time <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.AcceptChanges%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> was called.</source>
          <target state="translated">回滚到所做的所有更改<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>创建，以来或自从上次<ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.AcceptChanges%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>Invoke the RejectChanges to call the &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; method on all &lt;xref:System.Data.DataTable&gt; objects contained by the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">调用 RejectChanges 调用&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;上所有&lt;xref:System.Data.DataTable&gt;受支持&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;包含对象&lt;/xref:System.Data.DataTable&gt;的方法&lt;/xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.DataRow&gt; objects contained by the &lt;xref:System.Data.DataSet&gt; can each be set into edit mode by invoking the &lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">&lt;xref:System.Data.DataRow&gt;包含的对象&lt;xref:System.Data.DataSet&gt;可以每个设置置于编辑模式下通过调用&lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>After invoking the &lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName&gt; method, changes can be rejected by calling the &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; on the &lt;xref:System.Data.DataTable&gt; to which the &lt;xref:System.Data.DataRow&gt; objects belong.</source>
          <target state="translated">之后调用&lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName&gt;方法，可以通过调用拒绝更改&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;上&lt;xref:System.Data.DataTable&gt;到&lt;xref:System.Data.DataRow&gt;对象属于。&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; method is called, any rows still in edit-mode cancel their edits.</source>
          <target state="translated">当&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;方法被调用时，仍处于编辑模式的任何行取消其编辑。&lt;/xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>New rows are removed.</source>
          <target state="translated">新行被移除。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>Modified and deleted rows return back to their original state (<ph id="ph1">`DataRowState.Unchanged`</ph>).</source>
          <target state="translated">修改和删除的行返回回其原始状态 (<ph id="ph1">`DataRowState.Unchanged`</ph>)。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>AcceptChanges and RejectChanges only apply to &lt;xref:System.Data.DataRow&gt; related changes (that is, <ph id="ph1">`Add`</ph>, <ph id="ph2">`Remove`</ph>, <ph id="ph3">`Delete`</ph>, and <ph id="ph4">`Modify`</ph>).</source>
          <target state="translated">Acceptchange 和 Rejectchange 仅适用于&lt;xref:System.Data.DataRow&gt;相关更改 (即， <ph id="ph1">`Add`</ph>， <ph id="ph2">`Remove`</ph>， <ph id="ph3">`Delete`</ph>，和<ph id="ph4">`Modify`</ph>)。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">它们不是适用于架构或结构上的更改。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Get the collection of relations that link tables and allow navigation from parent tables to child tables.</source>
          <target state="translated">获取关系链接表，并允许导航从父表到子表的集合。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a collection of <bpt id="p2">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含一套<bpt id="p2">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">如果没有，则返回一个空集合<bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象存在。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used during remoting.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>远程处理期间使用。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Clears all tables and removes all relations, foreign constraints, and tables from the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">清除所有表，并删除所有关系、 外约束和表从<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Subclasses should override Reset to restore a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to its original state.</source>
          <target state="translated">子类应重写重置以还原<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到其原始状态。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Data.DataSet&gt; serializes its schema and instance data by default in Web services and remoting scenarios.</source>
          <target state="translated">A&lt;xref:System.Data.DataSet&gt;将其架构和实例的数据序列化默认情况下，在 Web 服务和远程处理方案中。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Setting the SchemaSerializationMode property of a typed <ph id="ph1">`DataSet`</ph> to &lt;xref:System.Data.SchemaSerializationMode&gt; causes schema information to be excluded from the serialization payload.</source>
          <target state="translated">设置类型化的 SchemaSerializationMode 属性<ph id="ph1">`DataSet`</ph>到&lt;xref:System.Data.SchemaSerializationMode&gt;导致架构信息从序列化负载中排除。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SchemaSerializationMode&gt; is supported only for a typed <ph id="ph1">`DataSet`</ph>.</source>
          <target state="translated">&lt;xref:System.Data.SchemaSerializationMode&gt;支持的类型化<ph id="ph1">`DataSet`</ph>。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>For an un-typed <ph id="ph1">`DataSet`</ph> this property can only be set to &lt;xref:System.Data.SchemaSerializationMode&gt;.</source>
          <target state="translated">为非类型化<ph id="ph1">`DataSet`</ph>此属性只能设置为&lt;xref:System.Data.SchemaSerializationMode&gt;。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SchemaSerializationMode&gt; should only be used in cases where the schema information of the underlying typed <ph id="ph1">`DataTables`</ph>, <ph id="ph2">`DataRelations`</ph> and <ph id="ph3">`Constraints`</ph> has not been modified.</source>
          <target state="translated">&lt;xref:System.Data.SchemaSerializationMode&gt;只应在其中的架构信息的基础类型化的情况下<ph id="ph1">`DataTables`</ph>，<ph id="ph2">`DataRelations`</ph>和<ph id="ph3">`Constraints`</ph>尚未修改。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>If modifications have occurred, complete schema information should be serialized with &lt;xref:System.Data.SchemaSerializationMode&gt;.</source>
          <target state="translated">如果修改已发生的、 完整的架构信息应使用进行序列化&lt;xref:System.Data.SchemaSerializationMode&gt;.&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SchemaSerializationMode&gt; is supported in version 2.0 of the .NET Framework or later.</source>
          <target state="translated">&lt;xref:System.Data.SchemaSerializationMode&gt;在版本 2.0 的.NET framework 或更高版本受到支持。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Data.SchemaSerializationMode&gt; is set, only the top level runtime properties present on the &lt;xref:System.Data.DataSet&gt; are serialized.</source>
          <target state="translated">当&lt;xref:System.Data.SchemaSerializationMode&gt;设置，仅顶级运行时属性上存在&lt;xref:System.Data.DataSet&gt;进行序列化。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>In addition, they are serialized only if they happen to be different from the default values.</source>
          <target state="translated">此外，这些扩展会序列仅当它们碰巧不同于默认值。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>None of the <ph id="ph1">`Tables`</ph>, <ph id="ph2">`Relations`</ph> or <ph id="ph3">`Constraints`</ph> are serialized.</source>
          <target state="translated">没有任何<ph id="ph1">`Tables`</ph>，<ph id="ph2">`Relations`</ph>或<ph id="ph3">`Constraints`</ph>进行序列化。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>The serialized runtime properties include &lt;xref:System.Data.DataSet.DataSetName%2A&gt;, &lt;xref:System.Data.DataSet.Namespace%2A&gt;, &lt;xref:System.Data.DataSet.Prefix%2A&gt;, &lt;xref:System.Data.DataSet.Locale%2A&gt;, &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;, and &lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;.</source>
          <target state="translated">序列化的运行时属性包括&lt;xref:System.Data.DataSet.DataSetName%2A&gt;， &lt;xref:System.Data.DataSet.Namespace%2A&gt;， &lt;xref:System.Data.DataSet.Prefix%2A&gt;， &lt;xref:System.Data.DataSet.Locale%2A&gt;， &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;，和&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;。&lt;/xref:System.Data.DataSet.CaseSensitive%2A&gt; &lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt; &lt;/xref:System.Data.DataSet.Locale%2A&gt; &lt;/xref:System.Data.DataSet.Prefix%2A&gt; &lt;/xref:System.Data.DataSet.Namespace%2A&gt; &lt;/xref:System.Data.DataSet.DataSetName%2A&gt;</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>These properties are serialized to make sure that overall runtime data integrity is preserved.</source>
          <target state="translated">若要确保会保留整体运行时数据完整性，序列化这些属性。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether &lt;xref:System.Data.DataSet.Relations*&gt; property should be persisted.</source>
          <target state="translated">获取一个值，该值指示是否&lt;xref:System.Data.DataSet.Relations*&gt;属性应对其进行持久化。&lt;/xref:System.Data.DataSet.Relations*&gt;</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>You typically use this method if you are either creating a designer for the &lt;xref:System.Data.DataSet&gt;, or creating your own control incorporating the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">如果你创建的设计器通常使用此方法&lt;xref:System.Data.DataSet&gt;，或创建您自己的控件合并&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has been changed from its default; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果属性值已更改，不再是默认值;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether &lt;xref:System.Data.DataSet.Tables*&gt; property should be persisted.</source>
          <target state="translated">获取一个值，该值指示是否&lt;xref:System.Data.DataSet.Tables*&gt;属性应对其进行持久化。&lt;/xref:System.Data.DataSet.Tables*&gt;</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>You typically use this method only if you are either creating a designer for the &lt;xref:System.Data.DataSet&gt;, or creating your own control incorporating the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">只有当你可以创建设计器中的为通常使用此方法&lt;xref:System.Data.DataSet&gt;，或创建您自己的控件合并&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has been changed from its default; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果属性值已更改，不再是默认值;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>Sites bind a &lt;xref:System.ComponentModel.Component&gt; to a &lt;xref:System.ComponentModel.Container&gt; and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">站点绑定&lt;xref:System.ComponentModel.Component&gt;到&lt;xref:System.ComponentModel.Container&gt;和启用它们之间的通信，以及为要管理其组件的容器提供的方法。&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.ComponentModel.IListSource&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.DataSet&gt;实例被强制转换为&lt;xref:System.ComponentModel.IListSource&gt;接口。&lt;/xref:System.ComponentModel.IListSource&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.ComponentModel.IListSource&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.DataSet&gt;实例被强制转换为&lt;xref:System.ComponentModel.IListSource&gt;接口。&lt;/xref:System.ComponentModel.IListSource&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.DataSet&gt;实例被强制转换为&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;接口。&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.DataSet&gt;实例被强制转换为&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;接口。&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.DataSet&gt;实例被强制转换为&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;接口。&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Gets the collection of tables contained in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取集合中包含的表<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>To add tables to the collection, use &lt;xref:System.Data.DataTableCollection.Add%2A&gt; method of the &lt;xref:System.Data.DataTableCollection&gt;.</source>
          <target state="translated">若要将表添加到集合中，使用&lt;xref:System.Data.DataTableCollection.Add%2A&gt;的&lt;xref:System.Data.DataTableCollection&gt;。&lt;/xref:System.Data.DataTableCollection&gt;方法&lt;/xref:System.Data.DataTableCollection.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>To remove tables, use the &lt;xref:System.Data.DataTableCollection.Remove%2A&gt; method.</source>
          <target state="translated">若要删除表，使用&lt;xref:System.Data.DataTableCollection.Remove%2A&gt;方法。&lt;/xref:System.Data.DataTableCollection.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contained by this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含由此<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">如果没有，则返回一个空集合<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象存在。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">当前数据写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供了编写只将数据方法或数据和架构从&lt;xref:System.Data.DataSet&gt;插入 XML 文档，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法将写入仅的架构。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">`mode`</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used to write to a file.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;用于写入到的文件的对象。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">当前数据写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的&lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供了编写只将数据方法或数据和架构从&lt;xref:System.Data.DataSet&gt;插入 XML 文档，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法将写入仅的架构。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">`mode`</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; object with which to write.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;与要写入的对象。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file.</source>
          <target state="translated">当前数据写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到指定的文件。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供了编写只将数据方法或数据和架构从&lt;xref:System.Data.DataSet&gt;插入 XML 文档，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法将写入仅的架构。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">`mode`</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">文件名称 （包括路径），要向其写入。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未设置为<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">当前数据写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到指定&lt;xref:System.Xml.XmlWriter&gt;。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供了编写只将数据方法或数据和架构从&lt;xref:System.Data.DataSet&gt;插入 XML 文档，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法将写入仅的架构。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">`mode`</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; with which to write.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;用来编写。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">为编写的当前数据和 （可选） 架构， <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和<bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">若要编写架构，请将的值设置<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>参数<bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供了编写只将数据方法或数据和架构从&lt;xref:System.Data.DataSet&gt;插入 XML 文档，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法将写入仅的架构。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，设置<ph id="ph1">`mode`</ph>参数<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used to write to a file.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;用于写入到的文件的对象。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">为编写的当前数据和 （可选） 架构， <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用指定&lt;xref:System.IO.TextWriter&gt;和<bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">若要编写架构，请将的值设置<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>参数<bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供了编写只将数据方法或数据和架构从&lt;xref:System.Data.DataSet&gt;插入 XML 文档，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法将写入仅的架构。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，设置<ph id="ph1">`mode`</ph>参数<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextWriter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object used to write the document.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextWriter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>用于进行写入的文档对象。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file using the specified <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">为编写的当前数据和 （可选） 架构， <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>到指定的文件使用指定<bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">若要编写架构，请将的值设置<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>参数<bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供了编写只将数据方法或数据和架构从&lt;xref:System.Data.DataSet&gt;插入 XML 文档，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法将写入仅的架构。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，设置<ph id="ph1">`mode`</ph>参数<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">文件名称 （包括路径），要向其写入。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未设置为<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.Xml.XmlWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">为编写的当前数据和 （可选） 架构， <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用指定&lt;xref:System.Xml.XmlWriter&gt;和<bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">若要编写架构，请将的值设置<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>参数<bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供了编写只将数据方法或数据和架构从&lt;xref:System.Data.DataSet&gt;插入 XML 文档，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法将写入仅的架构。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，设置<ph id="ph1">`mode`</ph>参数<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">请注意，同样适用于&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分别。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.InvalidOperationException&gt;如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，却未实现&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; with which to write.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;用来编写。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object.</source>
          <target state="translated">写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>作为一个 XML 架构写入指定的结构<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>Use the WriteXmlSchema method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">WriteXmlSchema 方法用于编写的架构&lt;xref:System.Data.DataSet&gt;到 XML 文档。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the WriteXmlSchema method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用 WriteXmlSchema 方法。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.IO.Stream&gt; class include &lt;xref:System.IO.BufferedStream&gt;, &lt;xref:System.IO.FileStream&gt;, &lt;xref:System.IO.MemoryStream&gt;, and &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">派生自的类&lt;xref:System.IO.Stream&gt;类包括&lt;xref:System.IO.BufferedStream&gt;， &lt;xref:System.IO.FileStream&gt;， &lt;xref:System.IO.MemoryStream&gt;，和&lt;xref:System.Net.Sockets.NetworkStream&gt;。&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.MemoryStream&gt; &lt;/xref:System.IO.FileStream&gt; &lt;/xref:System.IO.BufferedStream&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used to write to a file.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;用于写入到的文件的对象。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified &lt;xref:System.IO.TextWriter&gt; object.</source>
          <target state="translated">写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>作为一个 XML 架构写入指定的结构&lt;xref:System.IO.TextWriter&gt;对象。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法写入的架构&lt;xref:System.Data.DataSet&gt;到 XML 文档。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Classes the derive from the &lt;xref:System.IO.TextWriter?displayProperty=fullName&gt; class include the &lt;xref:System.Web.HttpWriter?displayProperty=fullName&gt;, &lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName&gt;, &lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt;, &lt;xref:System.IO.StreamWriter?displayProperty=fullName&gt;, and &lt;xref:System.IO.StringWriter?displayProperty=fullName&gt;.</source>
          <target state="translated">类从派生&lt;xref:System.IO.TextWriter?displayProperty=fullName&gt;类包括&lt;xref:System.Web.HttpWriter?displayProperty=fullName&gt;， &lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName&gt;， &lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt;， &lt;xref:System.IO.StreamWriter?displayProperty=fullName&gt;，和&lt;xref:System.IO.StringWriter?displayProperty=fullName&gt;。&lt;/xref:System.IO.StringWriter?displayProperty=fullName&gt; &lt;/xref:System.IO.StreamWriter?displayProperty=fullName&gt; &lt;/xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt; &lt;/xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName&gt; &lt;/xref:System.Web.HttpWriter?displayProperty=fullName&gt; &lt;/xref:System.IO.TextWriter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; object with which to write.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;与要写入的对象。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to a file.</source>
          <target state="translated">写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>作为一个 XML 架构写入文件的结构。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法写入的架构&lt;xref:System.Data.DataSet&gt;到 XML 文档。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">文件名称 （包括路径），要向其写入。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未设置为<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to an &lt;xref:System.Xml.XmlWriter&gt; object.</source>
          <target state="translated">写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>结构作为 XML 架构写入&lt;xref:System.Xml.XmlWriter&gt;对象。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法写入的架构&lt;xref:System.Data.DataSet&gt;到 XML 文档。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>One class that inherits from the &lt;xref:System.Xml.XmlWriter?displayProperty=fullName&gt; class is the &lt;xref:System.Xml.XmlTextWriter?displayProperty=fullName&gt; class.</source>
          <target state="translated">一个类继承自的&lt;xref:System.Xml.XmlWriter?displayProperty=fullName&gt;类是&lt;xref:System.Xml.XmlTextWriter?displayProperty=fullName&gt;类。&lt;/xref:System.Xml.XmlTextWriter?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlWriter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; to write to.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;写入。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object.</source>
          <target state="translated">写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>作为一个 XML 架构写入指定的结构<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object to write to.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>要写入到对象。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">委托用于将转换&lt;xref:System.Type&gt;为字符串。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>作为一个 XML 架构写入指定的&lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt;结构</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; object to write to.</source>
          <target state="translated">A&lt;xref:System.IO.TextWriter&gt;要写入到对象。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">委托用于将转换&lt;xref:System.Type&gt;为字符串。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to a file.</source>
          <target state="translated">写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>作为一个 XML 架构写入文件的结构。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>The name of the file to write to.</source>
          <target state="translated">要写入的文件的名称。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">委托用于将转换&lt;xref:System.Type&gt;为字符串。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">写入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>作为一个 XML 架构写入指定的&lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;结构</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlWriter&gt; object to write to.</source>
          <target state="translated">A&lt;xref:System.Xml.XmlWriter&gt;要写入到对象。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">委托用于将转换&lt;xref:System.Type&gt;为字符串。&lt;/xref:System.Type&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>