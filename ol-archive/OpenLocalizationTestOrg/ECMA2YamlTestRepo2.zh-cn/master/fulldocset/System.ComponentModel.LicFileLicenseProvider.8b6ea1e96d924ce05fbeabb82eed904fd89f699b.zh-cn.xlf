<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b73b3612bf8ebd9f75498ed1b020f7e5ea344ae2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.LicFileLicenseProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ad3359e103e4b42e17c3a79431e1a41d2526c73</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3aec2497c1351a2eca67cc9c82f601a03de0fb4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an implementation of a <bpt id="p1">&lt;xref href="System.ComponentModel.LicenseProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">提供的实现<bpt id="p1">&lt;xref href="System.ComponentModel.LicenseProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The provider works in a similar fashion to the Microsoft .NET Framework standard licensing model.</source>
          <target state="translated">提供程序可在 Microsoft.NET Framework 的标准授权模型的类似的方式工作。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The LicFileLicenseProvider offers &lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt; and &lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt; methods.</source>
          <target state="translated">LicFileLicenseProvider 提供&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;和&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;方法。&lt;/xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt; &lt;/xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt; method determines whether the &lt;xref:System.ComponentModel.License.LicenseKey%2A&gt; retrieved by the &lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt; method is valid.</source>
          <target state="translated">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;方法确定是否&lt;xref:System.ComponentModel.License.LicenseKey%2A&gt;检索&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;方法无效。&lt;/xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt; &lt;/xref:System.ComponentModel.License.LicenseKey%2A&gt; &lt;/xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you inherit from this class, you can override the &lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt; method to provide your own validation logic.</source>
          <target state="translated">当你从此类继承时，可以重写&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;方法以提供您自己的验证逻辑。&lt;/xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This class exists to provide similar licensing functionality to COM licensing and uses text license files.</source>
          <target state="translated">此类提供类似的授权功能，为 COM 授权，并使用文本许可证文件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information on licensing, see <bpt id="p1">[</bpt>How to: License Components and Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关许可的详细信息，请参阅<bpt id="p1">[</bpt>How to︰ 许可证组件和控件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.LicFileLicenseProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.LicFileLicenseProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Returns a key for the specified type.</source>
          <target state="translated">返回指定类型的键。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The object type to return the key.</source>
          <target state="translated">要返回键的对象类型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A confirmation that the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is licensed.</source>
          <target state="translated">一条确认消息， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>参数已获许可。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns a license for the instance of the component, if one is available.</source>
          <target state="translated">如果有的话，则返回的实例的组件，许可证。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>At design time, the GetLicense method looks for a license file named <ph id="ph1">`myClassName.LIC`</ph>, where <ph id="ph2">`myClassName`</ph> is the &lt;xref:System.Type.FullName%2A&gt; of the component to create.</source>
          <target state="translated">在设计时，一个名为的许可证文件 GetLicense 方法查找<ph id="ph1">`myClassName.LIC`</ph>，其中<ph id="ph2">`myClassName`</ph>是&lt;xref:System.Type.FullName%2A&gt;要创建的组件。&lt;/xref:System.Type.FullName%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This file must be in the same directory as the .dll file that contains the component.</source>
          <target state="translated">此文件必须与包含该组件的.dll 文件相同的目录中。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Next, this method checks the first line of the license file against a key specified in the &lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt; method.</source>
          <target state="translated">接下来，此方法检查中指定的密钥对的许可证文件的第一行&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;方法。&lt;/xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the key is valid, this line is used as the &lt;xref:System.ComponentModel.License.LicenseKey%2A&gt;.</source>
          <target state="translated">如果此键是否有效，此行将用作&lt;xref:System.ComponentModel.License.LicenseKey%2A&gt;.&lt;/xref:System.ComponentModel.License.LicenseKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.LicenseContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies where you can use the licensed object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.LicenseContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它指定，可以使用已授权的对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the component requesting the <bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Type&gt;表示组件请求<bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An object that requests the <bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">请求的对象<bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a <bpt id="p2">&lt;xref href="System.ComponentModel.LicenseException"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should be thrown when a component cannot be granted a license; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.ComponentModel.LicenseException"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>许可证; 无法授予组件时应引发否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A valid <bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A valid <bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If this method cannot find a valid <bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or a valid <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">context</ph><ept id="p2">&lt;/code&gt;</ept> parameter, it returns <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果此方法找不到有效<bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或有效<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">context</ph> <ept id="p2">&lt;/code&gt;</ept>参数，它将返回<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Determines whether the key that the &lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense*&gt; method retrieves is valid for the specified type.</source>
          <target state="translated">确定是否密钥，&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense*&gt;方法检索指定的类型无效。&lt;/xref:System.ComponentModel.LicFileLicenseProvider.GetLicense*&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This method checks the key against the phrase: " <ph id="ph1">`myClassName is a licensed component.`</ph> ", where <ph id="ph2">`myClassName`</ph> is the &lt;xref:System.Type.FullName%2A&gt; of the component you want to create.</source>
          <target state="translated">此方法检查短语的密钥:" <ph id="ph1">`myClassName is a licensed component.`</ph> "，其中<ph id="ph2">`myClassName`</ph>是&lt;xref:System.Type.FullName%2A&gt;你想要创建的组件。&lt;/xref:System.Type.FullName%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.License.LicenseKey*&gt; to check.</source>
          <target state="translated">&lt;xref:System.ComponentModel.License.LicenseKey*&gt;检查。&lt;/xref:System.ComponentModel.License.LicenseKey*&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the component requesting the <bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Type&gt;表示组件请求<bpt id="p1">&lt;xref href="System.ComponentModel.License"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the key is a valid &lt;xref:System.ComponentModel.License.LicenseKey*&gt; for the specified type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果密钥有效&lt;xref:System.ComponentModel.License.LicenseKey*&gt;指定的类型; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.ComponentModel.License.LicenseKey*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>