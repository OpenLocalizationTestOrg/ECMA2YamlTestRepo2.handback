<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e199d7b3201a8597a162bc7bdedc646e3929efe5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.UserNameSecurityTokenHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c237d10dad4c59cd564a91e4c40e47e8d8690d68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35aac74c22428be91a833b4ba2f061efd2a882bc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines an abstract base class for a <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that processes security tokens of type <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">定义一个抽象基类<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，用于处理类型的安全令牌<bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes to initialize the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">从初始化派生类中的构造函数调用<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Indicates whether the current XML element can be read as a <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值指示是否可以作为读取当前 XML 元素<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at a start element.</source>
          <target state="translated">XML 读取器定位开始元素处。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The reader should not be advanced.</source>
          <target state="translated">读取器不应为高级。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the reader is pointing to a <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果读取器指向<bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this handler can write tokens of type <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取一个值，该值指示此处理程序是否可以编写类型的令牌<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the handler can write tokens of type <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果处理程序可以编写类型的令牌<bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Returns the URIs used in requests to identify a token of the type that can be processed by this handler.</source>
          <target state="translated">返回 Uri 用于在请求中标识此处理程序可以处理的类型的令牌。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The set of URIs that identify the token type that this handler supports.</source>
          <target state="translated">用于标识此处理程序支持的令牌类型 Uri 集。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Reads a <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified reader.</source>
          <target state="translated">读取<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从指定的读取器。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the token.</source>
          <target state="translated">令牌的开始元素处 XML 读取器。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The username security token that was deserialized from the XML.</source>
          <target state="translated">从 XML 的反序列化用户名安全令牌。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The token cannot be read.</source>
          <target state="translated">无法读取令牌。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The password was not in plain text format.</source>
          <target state="translated">密码未采用纯文本格式。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An unknown element was found in the security token or the username was not specified.</source>
          <target state="translated">安全令牌中发现一个未知的元素或未指定用户名。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the password will be retained in the bootstrap token that is attached to the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is returned by the &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*&gt; method.</source>
          <target state="translated">获取或设置一个值，指定是否将密码保留在附加到对启动令牌<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>返回&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the password should be retained in the bootstrap token; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应将密码保留在对启动令牌;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; of the tokens that this handler processes.</source>
          <target state="translated">获取&lt;xref:System.Type&gt;此处理程序处理的令牌。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type of <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一种<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Serializes the specified <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to XML.</source>
          <target state="translated">序列化指定<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到 XML。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The XML writer to use to serialize the token.</source>
          <target state="translated">要用来序列化令牌的 XML 编写器。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The token to serialize.</source>
          <target state="translated">要序列化的令牌。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>不可从<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>