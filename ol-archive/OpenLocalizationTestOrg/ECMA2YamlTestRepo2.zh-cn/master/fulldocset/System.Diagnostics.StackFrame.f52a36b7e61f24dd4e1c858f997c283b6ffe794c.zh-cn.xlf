<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc59cbca0c143e021414dfb8d0fc24a348b6aa38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.StackFrame.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">221dec73928135b5d33d9db4625f0087d18b7fb8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d6b293aa1e5f6a23ac2121af24938051942dd3b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides information about a StackFrame, which represents a function call on the call stack for the current thread.</source>
          <target state="translated">提供有关的堆栈帧，表示当前线程的调用堆栈上一个函数调用信息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A StackFrame is created and pushed on the call stack for every function call made during the execution of a thread.</source>
          <target state="translated">创建并在每个函数调用线程的执行期间所做的调用堆栈上推送的堆栈帧。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The stack frame always includes &lt;xref:System.Reflection.MethodBase&gt; information, and optionally includes file name, line number, and column number information.</source>
          <target state="translated">堆栈帧始终包括&lt;xref:System.Reflection.MethodBase&gt;信息，并根据需要包括文件名、 行号和列号等信息。&lt;/xref:System.Reflection.MethodBase&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>StackFrame information will be most informative with Debug build configurations.</source>
          <target state="translated">将与调试生成配置提供最有用的信息的堆栈帧信息。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By default, Debug builds include debug symbols, while Release builds do not.</source>
          <target state="translated">默认情况下，调试版本中包含调试符号，而发布版本不能。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The debug symbols contain most of the file, method name, line number, and column information used in constructing StackFrame objects.</source>
          <target state="translated">调试符号包含大部分文件、 方法名称、 行号和列信息用于构造的堆栈帧对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, optionally capturing source information.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，可以选择捕获源信息。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to capture the file name, line number, and column number of the stack frame; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>捕获文件名、 行号和列号的堆栈帧的值。否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that corresponds to a frame above the current stack frame.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类对应于当前的堆栈帧之上的帧。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The number of frames up the stack to skip.</source>
          <target state="translated">堆栈上要跳过的帧数。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that corresponds to a frame above the current stack frame, optionally capturing source information.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>可以选择捕获源信息与当前堆栈帧之上的帧对应的类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The number of frames up the stack to skip.</source>
          <target state="translated">堆栈上要跳过的帧数。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to capture the file name, line number, and column number of the stack frame; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>捕获文件名、 行号和列号的堆栈帧的值。否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains only the given file name and line number.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，该类包含仅的给定的文件名称和行号。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use this constructor when you do not want to use the debugger's line mapping logic.</source>
          <target state="translated">当你不想要使用调试器的行映射逻辑时，请使用此构造函数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="translated">文件的名称。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The line number in the specified file.</source>
          <target state="translated">指定的文件中的行号。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains only the given file name, line number, and column number.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，其中包含给定的文件名、 行号和列号。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use this constructor when you do not want to use the debugger's line mapping logic.</source>
          <target state="translated">当你不想要使用调试器的行映射逻辑时，请使用此构造函数。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="translated">文件的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The line number in the specified file.</source>
          <target state="translated">指定的文件中的行号。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The column number in the specified file.</source>
          <target state="translated">指定的文件中的列号。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets the column number in the file that contains the code that is executing.</source>
          <target state="translated">获取包含正在执行的代码文件中的列号。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">此信息通常从可执行文件的调试符号中提取。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The file column number, or 0 (zero) if the file column number cannot be determined.</source>
          <target state="translated">文件列号，则为 0 （零），如果无法确定文件列号。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the line number in the file that contains the code that is executing.</source>
          <target state="translated">获取包含正在执行的代码文件中的行号。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">此信息通常从可执行文件的调试符号中提取。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The file line number, or 0 (zero) if the file line number cannot be determined.</source>
          <target state="translated">文件行号，则为 0 （零），如果无法确定文件行号。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the file name that contains the code that is executing.</source>
          <target state="translated">获取包含所执行代码的文件名称。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">此信息通常从可执行文件的调试符号中提取。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The file name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the file name cannot be determined.</source>
          <target state="translated">文件名，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果无法确定文件名称。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing.</source>
          <target state="translated">获取离开所执行方法的偏移量从开始处的 Microsoft 中间语言 (MSIL) 代码。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code.</source>
          <target state="translated">此偏移量可能是一个近似值，具体取决于在实时 (JIT) 编译器正在生成调试代码。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The generation of this debugging information is controlled by the &lt;xref:System.Diagnostics.DebuggableAttribute&gt;.</source>
          <target state="translated">该调试信息的生成受&lt;xref:System.Diagnostics.DebuggableAttribute&gt;.&lt;/xref:System.Diagnostics.DebuggableAttribute&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The offset from the start of the MSIL code for the method that is executing.</source>
          <target state="translated">从正在执行的方法的 MSIL 代码开头的偏移量。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the method in which the frame is executing.</source>
          <target state="translated">获取在其中执行帧的方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The method that is currently executing may be inherited from a base class, although it is called in a derived class.</source>
          <target state="translated">当前正在执行的方法可能继承自基类，尽管它在派生类中调用。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property of the &lt;xref:System.Reflection.MethodBase&gt; object that is returned by GetMethod identifies the base class, not the derived class.</source>
          <target state="translated">在此情况下，&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;属性&lt;xref:System.Reflection.MethodBase&gt;GetMethod 返回的对象标识的基类，不是派生的类。&lt;/xref:System.Reflection.MethodBase&gt; &lt;/xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The method in which the frame is executing.</source>
          <target state="translated">在其中执行帧的方法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed.</source>
          <target state="translated">获取从本机实时 (JIT) 开头的偏移量的已编译的代码正在执行的方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The generation of this debugging information is controlled by the &lt;xref:System.Diagnostics.DebuggableAttribute&gt; class.</source>
          <target state="translated">该调试信息的生成受&lt;xref:System.Diagnostics.DebuggableAttribute&gt;类。&lt;/xref:System.Diagnostics.DebuggableAttribute&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The offset from the start of the JIT-compiled code for the method that is being executed.</source>
          <target state="translated">从正在执行的方法的 JIT 编译代码开头的偏移量。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Defines the value that is returned from the &lt;xref:System.Diagnostics.StackFrame.GetNativeOffset<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Diagnostics.StackFrame.GetILOffset<ept id="p1">*</ept>&gt; method when the native or Microsoft intermediate language (MSIL) offset is unknown.</source>
          <target state="translated">定义从返回的值&lt;&gt; <bpt id="p1">*</bpt>1&gt; 或&lt;&gt; <ept id="p1">*</ept>1&gt; 方法时是未知的本机或 Microsoft 中间语言 (MSIL) 偏移量。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This field is constant.</source>
          <target state="translated">此字段为常数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The value of this constant is -1.</source>
          <target state="translated">此常量的值为-1。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Builds a readable representation of the stack trace.</source>
          <target state="translated">生成的可读表示形式的堆栈跟踪。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A readable representation of the stack trace.</source>
          <target state="translated">可读表示形式的堆栈跟踪。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>