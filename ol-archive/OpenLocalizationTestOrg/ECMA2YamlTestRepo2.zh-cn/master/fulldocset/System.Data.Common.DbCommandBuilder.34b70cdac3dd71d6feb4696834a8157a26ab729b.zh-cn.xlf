<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae519f75c8c36943c1b881b3fcdd404d64da27dd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Common.DbCommandBuilder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f6395d49f29809bc219dfe1545ff7ab6f0c364c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dbefb0650ad7b86f7af1f13c72f7fee0300e1da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Automatically generates single-table commands used to reconcile changes made to a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the associated database.</source>
          <target state="translated">自动生成用于协调对所做更改的单表命令<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过关联的数据库。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This is an abstract class that can only be inherited.</source>
          <target state="translated">这是仅可以继承一个抽象类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The DbCommandBuilder class is provided for the convenience of provider writers creating their own command builders.</source>
          <target state="translated">为提供程序编写者创建其自己命令生成器方便而提供 DbCommandBuilder 类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>By inheriting from this class, developers can implement provider specific behavior in their own code.</source>
          <target state="translated">通过继承此类，开发人员可以在其自己的代码中实现提供程序特定的行为。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter&gt; does not automatically generate the SQL statements required to reconcile changes made to a &lt;xref:System.Data.DataSet&gt; with the associated data source.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter&gt;不会自动生成所需进行对帐对所做更改的 SQL 语句&lt;xref:System.Data.DataSet&gt;与关联的数据源。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, you can create a DbCommandBuilder object to automatically generate SQL statements for single-table updates if you set the &lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.Common.DbDataAdapter&gt;.</source>
          <target state="translated">但是，你可以在其中创建 DbCommandBuilder 对象，以自动生成单表更新的 SQL 语句，如果设置&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;的&lt;xref:System.Data.Common.DbDataAdapter&gt;。&lt;/xref:System.Data.Common.DbDataAdapter&gt;属性&lt;/xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Then, any additional SQL statements that you do not set are generated by the DbCommandBuilder.</source>
          <target state="translated">然后，由 DbCommandBuilder 生成未设置任何其他 SQL 语句。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The DbCommandBuilder registers itself as a listener for &lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt; events whenever you set the &lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt; property.</source>
          <target state="translated">DbCommandBuilder 将自己注册为侦听器&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;事件每当你设置&lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt;属性。&lt;/xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can only associate one &lt;xref:System.Data.Common.DbDataAdapter&gt; or DbCommandBuilder object with each other at one time.</source>
          <target state="translated">你可以仅将一个相关联&lt;xref:System.Data.Common.DbDataAdapter&gt;或 DbCommandBuilder 对象相互一次。&lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To generate INSERT, UPDATE, or DELETE statements, the DbCommandBuilder uses the &lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt; property to retrieve a required set of metadata automatically.</source>
          <target state="translated">若要生成 INSERT、 UPDATE 或 DELETE 语句，DbCommandBuilder 使用&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;要自动检索所需的元数据集属性。&lt;/xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you change the &lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt; after the metadata has been retrieved (for example, after the first update), you should call the &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; method to update the metadata.</source>
          <target state="translated">如果你更改&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;已 （例如，在第一个更新中） 中检索的元数据后，应调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;方法来更新元数据。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph>还必须返回至少一个主键或唯一列。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If none exist, an &lt;xref:System.InvalidOperationException&gt; exception is generated, and the commands are not generated.</source>
          <target state="translated">如果不存在，请&lt;xref:System.InvalidOperationException&gt;则会生成异常，并不会生成命令。&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The DbCommandBuilder also uses the &lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;, &lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;, and &lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt; properties referenced by the &lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">DbCommandBuilder 还使用&lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;， &lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;，和&lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt;属性引用的&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Common.DbCommand.Transaction%2A&gt; &lt;/xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt; &lt;/xref:System.Data.Common.DbCommand.Connection%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The user should call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if any of these properties are modified, or if the &lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt; itself is replaced.</source>
          <target state="translated">用户应调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果修改了任何这些属性，或如果&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;本身被替换。&lt;/xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;, and &lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt; properties retain their previous values.</source>
          <target state="translated">否则为&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;， &lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;，和&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;属性保留其以前的值。&lt;/xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you call &lt;xref:System.ComponentModel.Component.Dispose%2A&gt;, the DbCommandBuilder is disassociated from the &lt;xref:System.Data.Common.DbDataAdapter&gt;, and the generated commands are no longer used.</source>
          <target state="translated">如果调用&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;，与关联被断开 DbCommandBuilder &lt;xref:System.Data.Common.DbDataAdapter&gt;，并且不再使用所生成的命令。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a class that inherits from the <bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">继承自的类的新实例初始化<bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Allows the provider implementation of the <bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class to handle additional parameter properties.</source>
          <target state="translated">允许的提供程序实现<bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类来处理其他参数属性。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This method allows an implementation of the &lt;xref:System.Data.Common.DbCommandBuilder&gt; class to handle provider-specific parameter properties.</source>
          <target state="translated">此方法允许的实现&lt;xref:System.Data.Common.DbCommandBuilder&gt;类来处理特定于提供程序的参数属性。&lt;/xref:System.Data.Common.DbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.DbParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the additional modifications are applied.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.DbParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>其他的修改将应用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the schema table provided by &lt;xref:System.Data.Common.DbDataReader.GetSchemaTable*&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Data.Common.DbDataReader.GetSchemaTable*&gt;.&lt;/xref:System.Data.Common.DbDataReader.GetSchemaTable*&gt;所提供的架构表</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type of command being generated; INSERT, UPDATE or DELETE.</source>
          <target state="translated">正在生成; 的命令的类型插入、 更新或删除。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the parameter is part of the update or delete WHERE clause, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it is part of the insert or update values.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果参数是 update 或 delete WHERE 子句的一部分<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果它是插入或更新值的一部分。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Sets or gets the <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an instance of the <bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">设置或获取<bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的实例<bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Sets or gets a string used as the catalog separator for an instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">设置或获取的字符串用作的实例的目录分隔符<bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A string indicating the catalog separator for use with an instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">一个字符串，指示与实例一起使用的目录分隔符<bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specifies which <bpt id="p1">&lt;xref href="System.Data.ConflictOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is to be used by the <bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定哪些<bpt id="p1">&lt;xref href="System.Data.ConflictOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是由<bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns one of the <bpt id="p1">&lt;xref href="System.Data.ConflictOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values describing the behavior of this <bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回的一个<bpt id="p1">&lt;xref href="System.Data.ConflictOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>描述此行为值<bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对于哪些 TRANSACT-SQL 语句会自动生成的对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DbCommandBuilder&gt; registers itself as a listener for &lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt; events that are generated by the &lt;xref:System.Data.Common.DbDataAdapter&gt; specified in this property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbCommandBuilder&gt;将自己注册为侦听器&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;由生成的事件&lt;xref:System.Data.Common.DbDataAdapter&gt;此属性中指定。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt; &lt;/xref:System.Data.Common.DbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When you create a new instance of &lt;xref:System.Data.Common.DbCommandBuilder&gt;, any existing &lt;xref:System.Data.Common.DbCommandBuilder&gt; associated with this &lt;xref:System.Data.Common.DbDataAdapter&gt; is released.</source>
          <target state="translated">当你创建的新实例&lt;xref:System.Data.Common.DbCommandBuilder&gt;，任何现有&lt;xref:System.Data.Common.DbCommandBuilder&gt;与此关联&lt;xref:System.Data.Common.DbDataAdapter&gt;发布。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbCommandBuilder&gt; &lt;/xref:System.Data.Common.DbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt; method and the <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">此方法称为由公共&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;方法和<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt; invokes the protected Dispose method with the disposing parameter set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;调用的受保护的 Dispose 方法释放参数设置为<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Data.Common.DbCommandBuilder&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.Data.Common.DbCommandBuilder&gt;引用。&lt;/xref:System.Data.Common.DbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt; method of each referenced object.</source>
          <target state="translated">此方法调用&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;每个引用对象的方法。&lt;/xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions at the data source.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行删除操作的数据源所需的对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An application can use the GetDeleteCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.Common.DbCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可用于 GetDeleteCommand 方法条信息性或故障排除目的因为它返回&lt;xref:System.Data.Common.DbCommand&gt;要执行对象。&lt;/xref:System.Data.Common.DbCommand&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can also use GetDeleteCommand as the basis of a modified command.</source>
          <target state="translated">你还可以用作 GetDeleteCommand 修改命令的基础。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, you might call GetDeleteCommand and modify the command text, and then explicitly set that on the &lt;xref:System.Data.Common.DbDataAdapter&gt;.</source>
          <target state="translated">例如，可能会调用 GetDeleteCommand 和修改命令文本中，然后&lt;xref:System.Data.Common.DbDataAdapter&gt;。&lt;/xref:System.Data.Common.DbDataAdapter&gt;显式设置</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Otherwise, the GetDeleteCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则，GetDeleteCommand 仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated either when the application calls &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetDeleteCommand.</source>
          <target state="translated">SQL 语句是第一个当应用程序调用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或 GetDeleteCommand。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行删除操作所需的对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行删除操作 （可选） 使用作为参数名称的列的数据源所需的对象。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An application can use the &lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.Common.DbCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可以使用&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;方法为信息性或故障排除目的，因为它返回&lt;xref:System.Data.Common.DbCommand&gt;要执行对象。&lt;/xref:System.Data.Common.DbCommand&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can also use &lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">你还可以使用&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;作为修改命令的基础。&lt;/xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, you might call &lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt; and modify the command text, and then explicitly set that on the &lt;xref:System.Data.Common.DbDataAdapter&gt;.</source>
          <target state="translated">例如，你可能调用&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;和修改命令文本，然后显式设置，时间为&lt;xref:System.Data.Common.DbDataAdapter&gt;。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;仍将使用从上一条语句，这可能不是正确的信息。&lt;/xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated either when the application calls &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;.</source>
          <target state="translated">SQL 语句是第一个应用程序调用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;.&lt;/xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;时生成</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the &lt;xref:System.Data.Common.DbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数使你可以强制&lt;xref:System.Data.Common.DbCommandBuilder&gt;生成改为根据列名称的参数。&lt;/xref:System.Data.Common.DbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">此操作成功仅当满足以下条件:-&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;已指定并且其长度等于或大于生成的参数名。&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; regular expression.</source>
          <target state="translated">-生成的参数名满足中指定的条件&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;正则表达式。&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; is specified.</source>
          <target state="translated">-A&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;指定。&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names, if possible.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成匹配列名称，如有可能的参数名称。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，依次类推。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行删除操作所需的对象。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions at the data source.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行数据源中的插入所需的对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An application can use the GetInsertCommand method for informational or troubleshooting purposes because it returns the text of the &lt;xref:System.Data.Common.DbCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可用于 GetInsertCommand 方法条信息性或故障排除目的因为它返回的文本&lt;xref:System.Data.Common.DbCommand&gt;要执行对象。&lt;/xref:System.Data.Common.DbCommand&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can also use GetInsertCommand as the basis of a modified command.</source>
          <target state="translated">你还可以用作 GetInsertCommand 修改命令的基础。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, you might call GetInsertCommand and modify the command text, and then explicitly set that on the &lt;xref:System.Data.Common.DbDataAdapter&gt;.</source>
          <target state="translated">例如，可能会调用 GetInsertCommand 和修改命令文本中，然后&lt;xref:System.Data.Common.DbDataAdapter&gt;。&lt;/xref:System.Data.Common.DbDataAdapter&gt;显式设置</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Otherwise, the GetInsertCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则，GetInsertCommand 仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated either when the application calls &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetInsertCommand.</source>
          <target state="translated">SQL 语句是第一个当应用程序调用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或 GetInsertCommand。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行插入所需的对象。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行数据源，可选择使用作为参数名称列中的插入所需的对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An application can use the &lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt; method for informational or troubleshooting purposes because it returns the text of the &lt;xref:System.Data.Common.DbCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可以使用&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;方法为信息性或故障排除目的，因为它返回的文本&lt;xref:System.Data.Common.DbCommand&gt;要执行对象。&lt;/xref:System.Data.Common.DbCommand&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can also use &lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">你还可以使用&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;作为修改命令的基础。&lt;/xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For example, you might call &lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt; and modify the command text, and then explicitly set that on the &lt;xref:System.Data.Common.DbDataAdapter&gt;.</source>
          <target state="translated">例如，你可能调用&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;和修改命令文本，然后显式设置，时间为&lt;xref:System.Data.Common.DbDataAdapter&gt;。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;仍将使用从上一条语句，这可能不是正确的信息。&lt;/xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated either when the application calls &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;.</source>
          <target state="translated">SQL 语句是第一个应用程序调用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;.&lt;/xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;时生成</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the &lt;xref:System.Data.Common.DbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数使你可以强制&lt;xref:System.Data.Common.DbCommandBuilder&gt;生成改为根据列名称的参数。&lt;/xref:System.Data.Common.DbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">基于列名称的参数生成成功仅当满足以下条件:-&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;已指定并且其长度等于或大于生成的参数名。&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; regular expression.</source>
          <target state="translated">-生成的参数名满足中指定的条件&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;正则表达式。&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; is specified.</source>
          <target state="translated">-A&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;指定。&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names, if possible.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成匹配列名称，如有可能的参数名称。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，依次类推。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行插入所需的对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Returns the name of the specified parameter in the format of <ph id="ph1">@p</ph><bpt id="p1">*</bpt><ph id="ph2">#</ph><ept id="p1">*</ept>.</source>
          <target state="translated">返回指定的参数的名称的格式<ph id="ph1">@p</ph> <bpt id="p1">*</bpt> <ph id="ph2">#</ph> <ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Use when building a custom command builder.</source>
          <target state="translated">当生成自定义命令生成器时使用。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The number to be included as part of the parameter's name..</source>
          <target state="translated">数字为参数的名称的一部分包括...</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The name of the parameter with the specified number appended as part of the parameter name.</source>
          <target state="translated">追加参数名称的一部分的指定个数的参数的名称。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Returns the full parameter name, given the partial parameter name.</source>
          <target state="translated">返回完整的参数名称，在给定部分参数名称。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The partial name of the parameter.</source>
          <target state="translated">参数的部分名称。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The full parameter name corresponding to the partial parameter name requested.</source>
          <target state="translated">所请求的部分参数名相对应的完整参数名称。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Returns the placeholder for the parameter in the associated SQL statement.</source>
          <target state="translated">在关联的 SQL 语句中返回参数的占位符。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">此方法仅供用于构建自定义命令生成器的提供程序编写器。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The number to be included as part of the parameter's name.</source>
          <target state="translated">数字为的参数的名称的一部分。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The name of the parameter with the specified number appended.</source>
          <target state="translated">追加的指定个数的参数的名称。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns the schema table for the <bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回的架构表<bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">此方法仅供用于构建自定义命令生成器的提供程序编写器。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for which to retrieve the corresponding schema table.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为其检索相应的架构表。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the schema for the specific <bpt id="p2">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它表示特定的架构<bpt id="p2">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates at the data source.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行数据源中的更新所需的对象。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An application can use the GetUpdateCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.Common.DbCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可用于 GetUpdateCommand 方法条信息性或故障排除目的因为它返回&lt;xref:System.Data.Common.DbCommand&gt;要执行对象。&lt;/xref:System.Data.Common.DbCommand&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use GetUpdateCommand as the basis of a modified command.</source>
          <target state="translated">你还可以用作 GetUpdateCommand 修改命令的基础。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For example, you might call GetUpdateCommand and modify the command text, and then explicitly set that on the &lt;xref:System.Data.Common.DbDataAdapter&gt;.</source>
          <target state="translated">例如，可能会调用 GetUpdateCommand 和修改命令文本中，然后&lt;xref:System.Data.Common.DbDataAdapter&gt;。&lt;/xref:System.Data.Common.DbDataAdapter&gt;显式设置</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Otherwise, the GetUpdateCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则，GetUpdateCommand 仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated either when the application calls &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetUpdateCommand.</source>
          <target state="translated">SQL 语句是第一个当应用程序调用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或 GetUpdateCommand。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行更新所需的对象。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates at the data source, optionally using columns for parameter names.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行在数据源，（可选） 使用作为参数名称的列的更新所需的对象。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An application can use the &lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.Common.DbCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可以使用&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;方法为信息性或故障排除目的，因为它返回&lt;xref:System.Data.Common.DbCommand&gt;要执行对象。&lt;/xref:System.Data.Common.DbCommand&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can also use &lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">你还可以使用&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;作为修改命令的基础。&lt;/xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For example, you might call &lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt; and modify command text, and then explicitly set that on the &lt;xref:System.Data.Common.DbDataAdapter&gt;.</source>
          <target state="translated">例如，你可能会调用&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;和修改命令文本，然后显式设置的时间为&lt;xref:System.Data.Common.DbDataAdapter&gt;。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;仍将使用从上一条语句，这可能不是正确的信息。&lt;/xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated either when the application calls &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;.</source>
          <target state="translated">SQL 语句是第一个应用程序调用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;.&lt;/xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;时生成</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the &lt;xref:System.Data.Common.DbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数使你可以强制&lt;xref:System.Data.Common.DbCommandBuilder&gt;生成改为根据列名称的参数。&lt;/xref:System.Data.Common.DbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">基于列名称的参数生成成功仅当满足以下条件:-&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;已指定并且其长度等于或大于生成的参数名。&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; regular expression.</source>
          <target state="translated">-生成的参数名满足中指定的条件&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;正则表达式。&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; is specified.</source>
          <target state="translated">-A&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;指定。&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names, if possible.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成匹配列名称，如有可能的参数名称。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，依次类推。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行更新所需的对象。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Resets the &lt;xref:System.Data.Common.DbCommand.CommandTimeout<bpt id="p1">*</bpt>&gt;, &lt;xref:System.Data.Common.DbCommand.Transaction<ept id="p1">*</ept>&gt;, &lt;xref:System.Data.Common.DbCommand.CommandType*&gt;, and <bpt id="p2">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> properties on the <bpt id="p3">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Resets the &lt;&gt;<bpt id="p1">*</bpt>&gt;, &lt;&gt;<ept id="p1">*</ept>&gt;, &lt;xref:System.Data.Common.DbCommand.CommandType*&gt;, and <bpt id="p2">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> properties on the <bpt id="p3">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Common.DbCommand.CommandType*&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">此方法仅供用于构建自定义命令生成器的提供程序编写器。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be used by the command builder for the corresponding insert, update, or delete command.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要用于命令生成器通过相应的插入、 更新或删除命令。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance to use for each insert, update, or delete operation.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>实例要用于每个插入、 更新或删除操作。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Passing a null value allows the InitializeCommand method to create a <bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object based on the Select command associated with the <bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">传递 null 值时，允许 InitializeCommand 方法来创建<bpt id="p1">&lt;xref href="System.Data.Common.DbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象基于与关联的选择命令<bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</source>
          <target state="translated">指定在正确的目录的情况下不带引号的标识符，则会返回正确带引号的该标识符，包括正确转义任何在标识符中嵌入的引号的形式。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The original unquoted identifier.</source>
          <target state="translated">原始不带引号的标识符。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The quoted version of the identifier.</source>
          <target state="translated">带引号的标识符的版本。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Embedded quotes within the identifier are properly escaped.</source>
          <target state="translated">适当地转义标识符中嵌入的引号。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">获取或设置的开头字符或字符指定其名称包含空格或保留的令牌等字符的数据库对象 （例如，表或列） 时使用。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">某些数据源可能具有可以包含空格、 逗号、 分号等字符的对象。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To accommodate this capability, use the QuotePrefix and &lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt; properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">为了适应这一功能，应使用 QuotePrefix 和&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;属性以指定如左的括号和右括号以将对象名称括起来的分隔符。&lt;/xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although you cannot change the QuotePrefix or &lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt; properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph2">`Update`</ph> method of a &lt;xref:System.Data.Common.DbDataAdapter&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 虽然不能更改 QuotePrefix 或&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;属性插入、 更新或删除生成命令，可以将其设置更改后调用<ph id="ph2">`Update`</ph>方法的一种&lt;xref:System.Data.Common.DbDataAdapter&gt;。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The beginning character or characters to use.</source>
          <target state="translated">开头字符或要使用的字符。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">默认值为一个空字符串。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">生成 insert、 update 或 delete 命令后，无法更改此属性。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">获取或设置的结束字符或字符指定其名称包含空格或保留的令牌等字符的数据库对象 （例如，表或列） 时使用。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">某些数据源可能具有可以包含空格、 逗号、 分号等字符的对象。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>To accommodate this capability, use the &lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt; and QuoteSuffix properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">若要适应此功能，使用&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;和 QuoteSuffix 属性，以指定如左的括号和右括号以将对象名称括起来的分隔符。&lt;/xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although you cannot change the &lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt; or QuoteSuffix properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph2">`Update`</ph> method of a &lt;xref:System.Data.Common.DbDataAdapter&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 虽然不能更改&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;或 QuoteSuffix 属性插入、 更新或删除生成命令，可以将其设置更改后调用<ph id="ph2">`Update`</ph>方法的一种&lt;xref:System.Data.Common.DbDataAdapter&gt;。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The ending character or characters to use.</source>
          <target state="translated">结束字符或要使用的字符。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">默认值为一个空字符串。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Clears the commands associated with this <bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">清除与此关联的命令<bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Calling the RefreshSchema method effectively removes all the &lt;xref:System.Data.Common.DbCommand&gt; objects referred to by the &lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;,       &lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;,       &lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;, and       &lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt; properties.</source>
          <target state="translated">有效地调用 RefreshSchema 方法中删除所有&lt;xref:System.Data.Common.DbCommand&gt;引用对象&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;， &lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;， &lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;，和&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;属性。&lt;/xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Common.DbCommand&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter.RowUpdating"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">添加事件处理程序<bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter.RowUpdating"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatingEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance containing information about the event.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.RowUpdatingEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>实例，包含有关事件的信息。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">获取或设置要用于架构标识符和任何其他标识符之间的分隔符的字符。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Generally, database servers indicate the schema for an identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">通常情况下，数据库服务器通过将架构名称与具有某些字符标识符分离指示标识符的架构。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>For example, SQL Server uses a colon, creating complete identifiers such as <bpt id="p1">**</bpt>Person:CustomerName<ept id="p1">**</ept>, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">例如，SQL Server 使用了一个冒号，如创建完整的标识符<bpt id="p1">**</bpt>人员︰ CustomerName<ept id="p1">**</ept>，其中"Person"是架构名称，"CustomerName"是的标识符。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Setting this property allows developers to modify this behavior.</source>
          <target state="translated">设置此属性允许开发人员修改此行为。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">要用作架构分隔符的字符。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Specifies whether all column values in an update statement are included or only changed ones.</source>
          <target state="translated">指定是否在 update 语句中的所有列值都是包含还是仅更改的列值。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The UPDATE statement generated by a &lt;xref:System.Data.Common.DbCommandBuilder&gt; can include update information about all the columns, or it can include information only about those columns whose values have changed.</source>
          <target state="translated">生成的 UPDATE 语句&lt;xref:System.Data.Common.DbCommandBuilder&gt;可能包括有关所有列的更新信息也可以包括仅其值已更改，这些列的信息。&lt;/xref:System.Data.Common.DbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Setting the SetAllValues property to <ph id="ph1">`true`</ph> causes the generated UPDATE statement to include all the columns, whether their values have changed or not.</source>
          <target state="translated">将 SetAllValues 属性设置为<ph id="ph1">`true`</ph>是否或不更改其值将导致生成的 UPDATE 语句，以包括所有列。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the UPDATE statement generated by the <bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> includes all columns; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if it includes only changed columns.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果通过生成的 UPDATE 语句<bpt id="p2">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包括所有列;<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>如果它包括仅更改列。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Registers the <bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to handle the <bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbDataAdapter.RowUpdating"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event for a <bpt id="p3">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">注册<bpt id="p1">&lt;xref href="System.Data.Common.DbCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>来处理<bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbDataAdapter.RowUpdating"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>事件<bpt id="p3">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">此方法仅供用于构建自定义命令生成器的提供程序编写器。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>When a new &lt;xref:System.Data.Common.DbDataAdapter&gt; is added to the &lt;xref:System.Data.Common.DbCommandBuilder&gt;, it is registered for the DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">当新&lt;xref:System.Data.Common.DbDataAdapter&gt;添加到&lt;xref:System.Data.Common.DbCommandBuilder&gt;，也会为的 DbDataAdapter 注册<bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept>事件。&lt;/xref:System.Data.Common.DbCommandBuilder&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If this method is called again with the same &lt;xref:System.Data.Common.DbDataAdapter&gt;, the &lt;xref:System.Data.Common.DbCommandBuilder&gt; is unregistered for that DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">如果具有相同再次调用此方法&lt;xref:System.Data.Common.DbDataAdapter&gt;、&lt;xref:System.Data.Common.DbCommandBuilder&gt;是为该 DbDataAdapter 注销<bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept>事件。&lt;/xref:System.Data.Common.DbCommandBuilder&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be used for the update.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要用于更新。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">给定的带引号的标识符，返回该标识符，包括正确取消转义的正确却未加引号的形式任何嵌入的引号的在标识符中。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">将已删除其嵌入的引号的标识符。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The unquoted identifier, with embedded quotes properly un-escaped.</source>
          <target state="translated">不带引号的标识符，使用嵌入的引号正确取消转义。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>