<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5e9049497ca56421ea2723b714ac9c1710dab36</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Queue.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfecbdb35f5ada240635ab5c17084157bc6dba11</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4acdbe5d650715916f9905dc27527c0f8fedc57f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a first-in, first-out collection of objects.</source>
          <target state="translated">表示对象的第一个中先进先出集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class implements a queue as a circular array.</source>
          <target state="translated">此类实现队列为一个循环的数组。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Objects stored in a Queue are inserted at one end and removed from the other.</source>
          <target state="translated">某一端插入和删除从其他对象存储在队列中。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</source>
          <target state="translated">当你需要为信息; 临时存储时，队列和堆栈非常有用也就是说，当你可能想要检索其值后放弃元素。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Use Queue if you need to access the information in the same order that it is stored in the collection.</source>
          <target state="translated">如果你需要访问集合中存储的相同顺序的信息，请使用队列。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Collections.Stack&gt; if you need to access the information in reverse order.</source>
          <target state="translated">使用&lt;xref:System.Collections.Stack&gt;如果你需要按相反的顺序访问的信息。&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt; or &lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt; if you need to access the collection from multiple threads concurrently.</source>
          <target state="translated">使用&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;或&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;你是否需要同时从多个线程访问集合。&lt;/xref:System.Collections.Concurrent.ConcurrentStack%601&gt; &lt;/xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Three main operations can be performed on a Queue and its elements:      -   &lt;xref:System.Collections.Queue.Enqueue%2A&gt; adds an element to the end of the Queue.</source>
          <target state="translated">可以在队列和它的元素上执行三个主要操作:-&lt;xref:System.Collections.Queue.Enqueue%2A&gt;将元素添加到队列的末尾。&lt;/xref:System.Collections.Queue.Enqueue%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Collections.Queue.Dequeue%2A&gt; removes the oldest element from the start of the Queue.</source>
          <target state="translated">-&lt;xref:System.Collections.Queue.Dequeue%2A&gt;从队列开头移除最旧的元素。&lt;/xref:System.Collections.Queue.Dequeue%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Collections.Queue.Peek%2A&gt; returns the oldest element that is at the start of the Queue but does not remove it from the Queue.</source>
          <target state="translated">-&lt;xref:System.Collections.Queue.Peek%2A&gt;返回位于队列开头但不会从队列删除它的最旧元素。&lt;/xref:System.Collections.Queue.Peek%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The capacity of a Queue is the number of elements the Queue can hold.</source>
          <target state="translated">队列的容量是队列可容纳的元素数。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>As elements are added to a Queue, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">当元素添加到队列时，自动增加容量通过重新分配所需的方式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.</source>
          <target state="translated">可以通过调用&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.&lt;/xref:System.Collections.Queue.TrimToSize%2A&gt;减少容量</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">增长因子是的数是当前容量的乘数需要更大的容量时。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The growth factor is determined when the Queue is constructed.</source>
          <target state="translated">增长因子是在构造队列时确定的。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The default growth factor is 2.0.</source>
          <target state="translated">默认增长因子为 2.0。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The capacity of the Queue will always increase by at least a minimum of four, regardless of the growth factor.</source>
          <target state="translated">队列的容量将始终增加按&amp;4; 的倍数，而不考虑增长因子至少达到了最小值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, a Queue with a growth factor of 1.0 will always increase in capacity by four when a greater capacity is required.</source>
          <target state="translated">例如，具有增长因子 1.0 的队列将始终增加容量由 4 个需要更大的容量时。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Queue accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">队列接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For the generic version of this collection, see &lt;xref:System.Collections.Generic.Queue%601?displayProperty=fullName&gt;</source>
          <target state="translated">此集合的泛型版本，请参阅&lt;xref:System.Collections.Generic.Queue%601?displayProperty=fullName&gt;&lt;/xref:System.Collections.Generic.Queue%601?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and uses the default growth factor.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类为空，具有默认初始容量，并使用默认增长因子。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.Queue&gt; is the number of elements the &lt;xref:System.Collections.Queue&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;是元素的数目&lt;xref:System.Collections.Queue&gt;可以容纳。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.Queue&gt;, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.Queue&gt;，自动增加容量通过重新分配所需的方式。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.</source>
          <target state="translated">可以通过调用&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.&lt;/xref:System.Collections.Queue.TrimToSize%2A&gt;减少容量</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">增长因子是的数是当前容量的乘数需要更大的容量时。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The growth factor is determined when the &lt;xref:System.Collections.Queue&gt; is constructed.</source>
          <target state="translated">确定增长因子时&lt;xref:System.Collections.Queue&gt;构造。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，该类包含从指定集合中复制的元素具有为复制的元素数相同的初始容量并使用默认增长因子。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.Queue&gt; is the number of elements the &lt;xref:System.Collections.Queue&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;是元素的数目&lt;xref:System.Collections.Queue&gt;可以容纳。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.Queue&gt;, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.Queue&gt;，自动增加容量通过重新分配所需的方式。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.</source>
          <target state="translated">可以通过调用&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.&lt;/xref:System.Collections.Queue.TrimToSize%2A&gt;减少容量</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">增长因子是的数是当前容量的乘数需要更大的容量时。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The growth factor is determined when the &lt;xref:System.Collections.Queue&gt; is constructed.</source>
          <target state="translated">确定增长因子时&lt;xref:System.Collections.Queue&gt;构造。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The elements are copied onto the &lt;xref:System.Collections.Queue&gt; in the same order they are read by the &lt;xref:System.Collections.IEnumerator&gt; of the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">将元素复制到&lt;xref:System.Collections.Queue&gt;它们由&lt;xref:System.Collections.IEnumerator&gt;的&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.IEnumerator&gt;读取的相同顺序&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`col`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`col`</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; to copy elements from.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;从中复制元素。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;col&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;col&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and uses the default growth factor.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类为空，具有指定的初始容量，并使用默认增长因子。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.Queue&gt; is the number of elements the &lt;xref:System.Collections.Queue&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;是元素的数目&lt;xref:System.Collections.Queue&gt;可以容纳。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.Queue&gt;, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.Queue&gt;，自动增加容量通过重新分配所需的方式。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.</source>
          <target state="translated">可以通过调用&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.&lt;/xref:System.Collections.Queue.TrimToSize%2A&gt;减少容量</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">增长因子是的数是当前容量的乘数需要更大的容量时。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The growth factor is determined when the &lt;xref:System.Collections.Queue&gt; is constructed.</source>
          <target state="translated">确定增长因子时&lt;xref:System.Collections.Queue&gt;构造。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Queue&gt;.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到&lt;xref:System.Collections.Queue&gt;。&lt;/xref:System.Collections.Queue&gt;时调整操作</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">初始元素数的<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>可以包含。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and uses the specified growth factor.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类为空，具有指定的初始容量，并使用指定的增长因子。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.Queue&gt; is the number of elements the &lt;xref:System.Collections.Queue&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;是元素的数目&lt;xref:System.Collections.Queue&gt;可以容纳。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.Queue&gt;, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.Queue&gt;，自动增加容量通过重新分配所需的方式。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.</source>
          <target state="translated">可以通过调用&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.&lt;/xref:System.Collections.Queue.TrimToSize%2A&gt;减少容量</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">增长因子是的数是当前容量的乘数需要更大的容量时。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The growth factor is determined when the &lt;xref:System.Collections.Queue&gt; is constructed.</source>
          <target state="translated">确定增长因子时&lt;xref:System.Collections.Queue&gt;构造。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The capacity of the &lt;xref:System.Collections.Queue&gt; will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the &lt;xref:System.Collections.Queue&gt; from increasing in size.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;始终将增加最小值，而不考虑增长因子; 将不会阻止 1.0 增长因子&lt;xref:System.Collections.Queue&gt;从大小在增加。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Queue&gt;.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到&lt;xref:System.Collections.Queue&gt;。&lt;/xref:System.Collections.Queue&gt;时调整操作</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">初始元素数的<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>可以包含。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The factor by which the capacity of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is expanded.</source>
          <target state="translated">因子的容量<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>展开。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;growFactor&lt;/code&gt;</ph> is less than 1.0 or greater than 10.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;growFactor&lt;/code&gt;</ph>小于 1.0 或大于 10.0。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Removes all objects from the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">删除中的所有对象<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.Queue.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.Queue.Count%2A&gt;是设置为零，并且集合的元素对其他对象的引用也被释放。&lt;/xref:System.Collections.Queue.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The capacity remains unchanged.</source>
          <target state="translated">容量保持不变。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To reset the capacity of the &lt;xref:System.Collections.Queue&gt;, call &lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.</source>
          <target state="translated">若要重置&lt;xref:System.Collections.Queue&gt;，请调用&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.&lt;/xref:System.Collections.Queue.TrimToSize%2A&gt;&lt;/xref:System.Collections.Queue&gt;容量</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.Queue&gt; sets the capacity of the &lt;xref:System.Collections.Queue&gt; to the default capacity.</source>
          <target state="translated">截去空&lt;xref:System.Collections.Queue&gt;的容量设置&lt;xref:System.Collections.Queue&gt;到默认的容量。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Queue.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Queue.Count%2A&gt;。&lt;/xref:System.Collections.Queue.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">创建的浅表复制<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">集合的浅表副本复制仅的元素集合，不论它们是引用类型还是值类型，但它不会复制引用所引用的对象。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新集合中的引用都指向原始集合中的引用指向同一对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">与此相反，集合的深层副本复制这些元素，以及由这些元素直接或间接引用的所有内容。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Queue.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Queue.Count%2A&gt;。&lt;/xref:System.Collections.Queue.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">浅表复制<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Determines whether an element is in the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">确定某元素是否在<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法通过调用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;确定相等性</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Queue.Count%2A&gt;.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Queue.Count%2A&gt;。&lt;/xref:System.Collections.Queue.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`obj`</ph> to determine whether <ph id="ph2">`item`</ph> exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;上的方法<ph id="ph1">`obj`</ph>以确定是否<ph id="ph2">`item`</ph>存在。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`obj`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`obj`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要在中查找<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> elements to an existing one-dimensional &lt;xref:System.Array&gt;, starting at the specified array index.</source>
          <target state="translated">副本<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>元素到一个现有的一维&lt;xref:System.Array&gt;指定的数组索引处开始。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.Queue&gt;.</source>
          <target state="translated">元素被复制到&lt;xref:System.Array&gt;与在其中的枚举数循环访问&lt;xref:System.Collections.Queue&gt;.&lt;/xref:System.Collections.Queue&gt;相同的顺序&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Queue.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Queue.Count%2A&gt;。&lt;/xref:System.Collections.Queue.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一维&lt;xref:System.Array&gt;，它是从复制的元素的目标<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;必须具有从零开始的索引。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">中的从零开始索引<ph id="ph1">`array`</ph>复制开始处。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>是多维的。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-源中的元素的数目<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>大于从的可用空间<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>到目标的末尾<ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">源类型<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>无法自动转换为目标的类型<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets the number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取包含中的元素数<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.Queue&gt; is the number of elements that the &lt;xref:System.Collections.Queue&gt; can store.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;是元素的数目，&lt;xref:System.Collections.Queue&gt;可以存储。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.Queue&gt;.</source>
          <target state="translated">计数是其实是&lt;xref:System.Collections.Queue&gt;.&lt;/xref:System.Collections.Queue&gt;的元素的数目</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.Queue&gt; is always greater than or equal to Count.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;始终是大于或等于计数。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If Count exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果计数超出添加元素时的容量，通过在复制旧元素和添加新的元素之前重新分配在内部数组自动增大容量。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The new capacity is determined by multiplying the current capacity by the growth factor, which is determined when the &lt;xref:System.Collections.Queue&gt; is constructed.</source>
          <target state="translated">新的容量取决于当前容量乘以增长因子，这是确定何时&lt;xref:System.Collections.Queue&gt;构造。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The capacity of the &lt;xref:System.Collections.Queue&gt; will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the &lt;xref:System.Collections.Queue&gt; from increasing in size.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;始终将增加最小值，而不考虑增长因子; 将不会阻止 1.0 增长因子&lt;xref:System.Collections.Queue&gt;从大小在增加。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.</source>
          <target state="translated">可以通过调用&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.&lt;/xref:System.Collections.Queue.TrimToSize%2A&gt;减少容量</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">中包含的元素数<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Removes and returns the object at the beginning of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">移除并返回的开始处对象<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;xref:System.Collections.Queue.Peek%2A&gt; method, but &lt;xref:System.Collections.Queue.Peek%2A&gt; does not modify the &lt;xref:System.Collections.Queue&gt;.</source>
          <target state="translated">此方法类似于&lt;xref:System.Collections.Queue.Peek%2A&gt;方法，但&lt;xref:System.Collections.Queue.Peek%2A&gt;不是会修改&lt;xref:System.Collections.Queue&gt;.&lt;/xref:System.Collections.Queue&gt;&lt;/xref:System.Collections.Queue.Peek%2A&gt;&lt;/xref:System.Collections.Queue.Peek%2A&gt;是</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> can be added to the &lt;xref:System.Collections.Queue&gt; as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph>可以添加到&lt;xref:System.Collections.Queue&gt;作为值。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To distinguish between a null value and the end of the &lt;xref:System.Collections.Queue&gt;, check the &lt;xref:System.Collections.Queue.Count%2A&gt; property or catch the &lt;xref:System.InvalidOperationException&gt;, which is thrown when the &lt;xref:System.Collections.Queue&gt; is empty.</source>
          <target state="translated">若要区分 null 值和结束&lt;xref:System.Collections.Queue&gt;，检查&lt;xref:System.Collections.Queue.Count%2A&gt;属性或 catch &lt;xref:System.InvalidOperationException&gt;，时引发&lt;xref:System.Collections.Queue&gt;为空。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.Queue.Count%2A&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The object that is removed from the beginning of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">删除从开始处的对象<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is empty.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为空。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Adds an object to the end of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将对象添加到的末尾<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.Queue&gt; is the number of elements the &lt;xref:System.Collections.Queue&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;是元素的数目&lt;xref:System.Collections.Queue&gt;可以容纳。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.Queue&gt;, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.Queue&gt;，自动增加容量通过重新分配所需的方式。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.</source>
          <target state="translated">可以通过调用&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;.&lt;/xref:System.Collections.Queue.TrimToSize%2A&gt;减少容量</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">增长因子是的数是当前容量的乘数需要更大的容量时。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The growth factor is determined when the &lt;xref:System.Collections.Queue&gt; is constructed.</source>
          <target state="translated">确定增长因子时&lt;xref:System.Collections.Queue&gt;构造。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The capacity of the &lt;xref:System.Collections.Queue&gt; will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the &lt;xref:System.Collections.Queue&gt; from increasing in size.</source>
          <target state="translated">容量&lt;xref:System.Collections.Queue&gt;始终将增加最小值，而不考虑增长因子; 将不会阻止 1.0 增长因子&lt;xref:System.Collections.Queue&gt;从大小在增加。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.Queue.Count%2A&gt; is less than the capacity of the internal array, this method is an O(1) operation.</source>
          <target state="translated">如果&lt;xref:System.Collections.Queue.Count%2A&gt;小于比在内部数组的容量，此方法为 o （1） 运算。&lt;/xref:System.Collections.Queue.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Queue.Count%2A&gt;.</source>
          <target state="translated">如果在内部数组需要可重新分配以容纳新元素，此方法会成为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Queue.Count%2A&gt;。&lt;/xref:System.Collections.Queue.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The object to add to the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要添加到对象<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回的枚举数循环访问<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建议，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;此外会回此位置的枚举数。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">在此位置上，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，你必须调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;的第一个元素的集合，然后再读取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;的值枚举器向前移动&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;还返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;可以再次，集合的第一个元素调用&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;后, 跟&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，则枚举数将失效且不可恢复，而且其行为是不确定。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以锁定在整个枚举期间的集合。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要允许访问集合以进行读取和写入的多个线程，则必须实现自己的同步。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示是否访问<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是同步的 （线程安全）。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.Queue&gt;, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.Queue.Synchronized%2A&gt; method.</source>
          <target state="translated">若要确保的线程安全性&lt;xref:System.Collections.Queue&gt;，所有操作必须通过返回的包装器来都完成&lt;xref:System.Collections.Queue.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.Queue.Synchronized%2A&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果访问<bpt id="p2">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是同步的 （线程安全）; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Returns the object at the beginning of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> without removing it.</source>
          <target state="translated">返回的开始处对象<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>而不删除它。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;xref:System.Collections.Queue.Dequeue%2A&gt; method, but Peek does not modify the &lt;xref:System.Collections.Queue&gt;.</source>
          <target state="translated">此方法类似于&lt;xref:System.Collections.Queue.Dequeue%2A&gt;方法，但扫视不会修改&lt;xref:System.Collections.Queue&gt;.&lt;/xref:System.Collections.Queue&gt;&lt;/xref:System.Collections.Queue.Dequeue%2A&gt;是</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> can be added to the &lt;xref:System.Collections.Queue&gt; as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph>可以添加到&lt;xref:System.Collections.Queue&gt;作为值。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>To distinguish between a null value and the end of the &lt;xref:System.Collections.Queue&gt;, check the &lt;xref:System.Collections.Queue.Count%2A&gt; property or catch the &lt;xref:System.InvalidOperationException&gt;, which is thrown when the &lt;xref:System.Collections.Queue&gt; is empty.</source>
          <target state="translated">若要区分 null 值和结束&lt;xref:System.Collections.Queue&gt;，检查&lt;xref:System.Collections.Queue.Count%2A&gt;属性或 catch &lt;xref:System.InvalidOperationException&gt;，时引发&lt;xref:System.Collections.Queue&gt;为空。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.Queue.Count%2A&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The object at the beginning of the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">开始处对象<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is empty.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为空。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Returns a new <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that wraps the original queue, and is thread safe.</source>
          <target state="translated">返回一个新<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包装原始队列并且是线程安全。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The wrapper returned by this method locks the queue before an operation is performed so that it is performed in a thread-safe manner.</source>
          <target state="translated">此方法返回的包装器锁定队列之前，以便执行以线程安全的方式执行操作。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.Queue&gt;, all operations must be done through this wrapper only.</source>
          <target state="translated">若要确保的线程安全性&lt;xref:System.Collections.Queue&gt;，所有操作必须通过此包装来都完成。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to synchronize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行同步。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper that is synchronized (thread safe).</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>同步 （线程安全） 的包装。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;queue&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;queue&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取可以用于对访问进行同步的对象<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>To create a synchronized version of the &lt;xref:System.Collections.Queue&gt;, use the &lt;xref:System.Collections.Queue.Synchronized%2A&gt; method.</source>
          <target state="translated">若要创建的同步的版本&lt;xref:System.Collections.Queue&gt;，使用&lt;xref:System.Collections.Queue.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.Queue.Synchronized%2A&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.Queue&gt; using the SyncRoot property.</source>
          <target state="translated">但是，派生的类可以提供自己的同步的版本&lt;xref:System.Collections.Queue&gt;使用 SyncRoot 属性。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.Queue&gt;, not directly on the &lt;xref:System.Collections.Queue&gt;.</source>
          <target state="translated">同步代码必须对执行操作的 SyncRoot &lt;xref:System.Collections.Queue&gt;，不是直接对&lt;xref:System.Collections.Queue&gt;.&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">这可确保正确地执行操作的从其他对象派生的集合。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.Queue&gt; object.</source>
          <target state="translated">具体地说，这样可保持正确的同步，与可能同时对修改其他线程&lt;xref:System.Collections.Queue&gt;对象。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可以用于对访问进行同步的对象<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> elements to a new array.</source>
          <target state="translated">副本<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到新数组的元素。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.Queue&gt; is not modified.</source>
          <target state="translated">&lt;xref:System.Collections.Queue&gt;则不会修改。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The order of the elements in the new array is the same as the order of the elements from the beginning of the &lt;xref:System.Collections.Queue&gt; to its end.</source>
          <target state="translated">新数组中元素的顺序是从开始处的元素的顺序相同&lt;xref:System.Collections.Queue&gt;到其最终。&lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Queue.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Queue.Count%2A&gt;。&lt;/xref:System.Collections.Queue.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A new array containing elements copied from the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新数组包含从复制的元素<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Sets the capacity to the actual number of elements in the <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将容量设置中的元素的实际数目<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This method can be used to minimize a queue's memory overhead if no new elements will be added to the queue.</source>
          <target state="translated">此方法可以用于降低队列的内存开销，如果没有新的元素将添加到队列。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>To reset a &lt;xref:System.Collections.Queue&gt; to its initial state, call the &lt;xref:System.Collections.Queue.Clear%2A&gt; method before calling TrimToSize.</source>
          <target state="translated">若要重置&lt;xref:System.Collections.Queue&gt;为其初始状态，请在调用&lt;xref:System.Collections.Queue.Clear%2A&gt;方法之前调用 TrimToSize。&lt;/xref:System.Collections.Queue.Clear%2A&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.Queue&gt; sets the capacity of the &lt;xref:System.Collections.Queue&gt; to the default capacity.</source>
          <target state="translated">截去空&lt;xref:System.Collections.Queue&gt;的容量设置&lt;xref:System.Collections.Queue&gt;到默认的容量。&lt;/xref:System.Collections.Queue&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Queue.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Queue.Count%2A&gt;。&lt;/xref:System.Collections.Queue.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>