<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd5cf12f2edabad76f0cb466f8bb5de4506bfbcc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Data.BindingBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">977fe1791dcccee9c2d174c2f7859b475e7699e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d2f58494c0f60fea34997c13081aa4636474e63</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the common characteristics of the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Windows.Data.PriorityBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">定义的共性<bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>， <bpt id="p2">&lt;xref href="System.Windows.Data.PriorityBinding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，和<bpt id="p3">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Because the &lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName&gt; method is sealed, a custom binding class that derives from BindingBase will not function correctly as a <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated">因为&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName&gt;方法密封的从 BindingBase 派生的自定义绑定类无法正常运行，作为<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>标记扩展。&lt;/xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which this binding belongs.</source>
          <target state="translated">获取或设置的名称<bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此绑定的所属。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If BindingGroupName is not set, the binding belongs to a &lt;xref:System.Windows.Data.BindingGroup&gt; only if the binding's source and the &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; of the parent element that has the &lt;xref:System.Windows.Data.BindingGroup&gt; are the same object.</source>
          <target state="translated">如果未设置 BindingGroupName，绑定所属&lt;xref:System.Windows.Data.BindingGroup&gt;仅当绑定的源和&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;具有的父元素的&lt;xref:System.Windows.Data.BindingGroup&gt;相同的对象。&lt;/xref:System.Windows.Data.BindingGroup&gt; &lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt; &lt;/xref:System.Windows.Data.BindingGroup&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If BindingGroupName is set to a value, the binding belongs to a &lt;xref:System.Windows.Data.BindingGroup&gt; if the following conditions are true:      -   The &lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt; of the &lt;xref:System.Windows.Data.BindingGroup&gt; and BindingGroupName are equal.</source>
          <target state="translated">如果 BindingGroupName 设置为一个值，绑定所属&lt;xref:System.Windows.Data.BindingGroup&gt;如果满足以下条件:-&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;的&lt;xref:System.Windows.Data.BindingGroup&gt;和 BindingGroupName 是否相等。&lt;/xref:System.Windows.Data.BindingGroup&gt; &lt;/xref:System.Windows.Data.BindingGroup.Name%2A&gt; &lt;/xref:System.Windows.Data.BindingGroup&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Windows.Data.BindingGroup&gt; belongs to a parent element of the binding's target element.</source>
          <target state="translated">-&lt;xref:System.Windows.Data.BindingGroup&gt;所属的绑定目标元素的父元素。&lt;/xref:System.Windows.Data.BindingGroup&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If BindingGroupName is set to <ph id="ph1">`null`</ph>, the binding is never a part of a &lt;xref:System.Windows.Data.BindingGroup&gt;.</source>
          <target state="translated">如果 BindingGroupName 设置为<ph id="ph1">`null`</ph>，则绑定从不是一种&lt;xref:System.Windows.Data.BindingGroup&gt;。&lt;/xref:System.Windows.Data.BindingGroup&gt;的一部分</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can include bindings that have a source that is different from the &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; of the parent element that has the &lt;xref:System.Windows.Data.BindingGroup&gt; by setting &lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt; of the &lt;xref:System.Windows.Data.BindingGroup&gt; and the BindingGroupName property of a binding to the same value.</source>
          <target state="translated">你可以包含具有不同于源的绑定&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;具有的父元素的&lt;xref:System.Windows.Data.BindingGroup&gt;通过设置&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;的&lt;xref:System.Windows.Data.BindingGroup&gt;和 BindingGroupName 属性的一种绑定到相同的值。&lt;/xref:System.Windows.Data.BindingGroup&gt; &lt;/xref:System.Windows.Data.BindingGroup.Name%2A&gt; &lt;/xref:System.Windows.Data.BindingGroup&gt; &lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can exclude bindings that have the same source as &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; of the parent element that has the &lt;xref:System.Windows.Data.BindingGroup&gt; by setting &lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt; of the &lt;xref:System.Windows.Data.BindingGroup&gt; and the BindingGroupName property of a binding to different values.</source>
          <target state="translated">你可以排除具有相同的源的绑定&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;具有的父元素的&lt;xref:System.Windows.Data.BindingGroup&gt;通过设置&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;的&lt;xref:System.Windows.Data.BindingGroup&gt;和 BindingGroupName 属性的一种绑定到不同的值。&lt;/xref:System.Windows.Data.BindingGroup&gt; &lt;/xref:System.Windows.Data.BindingGroup.Name%2A&gt; &lt;/xref:System.Windows.Data.BindingGroup&gt; &lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which this binding belongs.</source>
          <target state="translated">名称<bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此绑定的所属。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</source>
          <target state="translated">获取或设置的时间，以毫秒为单位的值的目标更改之后更新绑定源前等待。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you use a binding to update the binding source whenever the value of the property changes on the target, you set the &lt;xref:System.Windows.Data.Binding.Mode%2A&gt; property to &lt;xref:System.Windows.Data.BindingMode&gt; and the &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; to &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.</source>
          <target state="translated">当你使用绑定更新绑定源属性的值在目标上发生更改时，您设置&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;属性&lt;xref:System.Windows.Data.BindingMode&gt;和&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;到&lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;。&lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt; &lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.Binding.Mode%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this situation, you can use the Delay property to specify whether there should be a time delay between when the target is changed and when the source is updated.</source>
          <target state="translated">在此情况下，你可以使用延迟属性来指定是否应之间更改了目标时，在更新源时的时间延迟。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</source>
          <target state="translated">当你想要使用户能够更改源对象的属性，但你不希望每次更改会立即提交到源时，这非常有用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, suppose that you have a text box that is data two-way bound to a property of a data object.</source>
          <target state="translated">例如，假设你有一个被数据双向绑定到数据对象的属性的文本框。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When the user changes the value in the text box, the source gets updated.</source>
          <target state="translated">当用户更改的值的文本框中时，源获取更新。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To enable this scenario, you set the &lt;xref:System.Windows.Data.Binding.Mode%2A&gt; property on the &lt;xref:System.Windows.Data.Binding&gt; to &lt;xref:System.Windows.Data.BindingMode&gt; and the &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; to &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.</source>
          <target state="translated">若要启用这种情况下，你设置&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;属性名添加&lt;xref:System.Windows.Data.Binding&gt;到&lt;xref:System.Windows.Data.BindingMode&gt;和&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;到&lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;。&lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt; &lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; &lt;/xref:System.Windows.Data.BindingMode&gt; &lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Data.Binding.Mode%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To avoid updating the source object with every keystroke, set the Delay property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</source>
          <target state="translated">若要避免每次按键使用更新的源对象，设置为合理的值导致要更新仅在用户停止键入经过这段时间后的绑定的延迟属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The amount of time, in milliseconds, to wait before updating the binding source.</source>
          <target state="translated">时间 （毫秒），更新绑定源之前要等待的量。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets or sets the value to use when the binding is unable to return a value.</source>
          <target state="translated">获取或设置要使用的绑定时找不返回值的值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A binding returns a value successfully if:      1.</source>
          <target state="translated">绑定返回一个值成功如果︰ 1。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The path to the binding source resolves successfully.</source>
          <target state="translated">已成功解析到绑定源的路径。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The value converter, if any, is able to convert the resulting value.</source>
          <target state="translated">值转换器，如果有的话，就能够将转换生成的值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The resulting value is valid for the binding target (target) property.</source>
          <target state="translated">生成的值是有效的绑定目标 （目标） 属性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If 1 and 2 return &lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;, the target property is set to the value of the FallbackValue, if one is available.</source>
          <target state="translated">如果 1 和 2 返回&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;，如果有的话，目标属性设置为传输的值。&lt;/xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If there is no FallbackValue, the default value of the target property is used.</source>
          <target state="translated">如果没有传输，使用的目标属性的默认值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt; is not considered a successful return value.</source>
          <target state="translated">值&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;不被视为成功的返回值。&lt;/xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_FallbackValue"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage      <ph id="ph1">```   &lt;object FallbackValue="fallbackValue" /&gt;   ```</ph>       <bpt id="p2">**</bpt>- or –<ept id="p2">**</ept>      <ph id="ph2">```   &lt;object&gt;     &lt;object.FallbackValue&gt;       fallbackValue       &lt;/object.FallbackValue&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_FallbackValue"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>fallbackValue<ept id="p4">*</ept>    An attribute or object element value of the same type as the target property.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_FallbackValue"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 文本用法<ph id="ph1">```   &lt;object FallbackValue="fallbackValue" /&gt;   ```</ph> <bpt id="p2">**</bpt>-<ept id="p2">**</ept> <ph id="ph2">```   &lt;object&gt;     &lt;object.FallbackValue&gt;       fallbackValue       &lt;/object.FallbackValue&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_FallbackValue"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>传输<ept id="p4">*</ept>目标属性具有相同类型的属性或对象元素值。                   </target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">请参阅 XAML 用法的信息的该类型的文档。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">该类型可能或可能不支持属性语法为它的值，或可能或可能不支持对象元素语法 （它需要对该类型的默认构造函数）。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The target property type will therefore influence which syntax you use for the value of the FallbackValue property.</source>
          <target state="translated">因此，目标属性类型将影响用于传输属性的值的语法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns an object that should be set on the property where this binding and extension are applied.</source>
          <target state="translated">返回一个应在应用了此绑定和扩展的属性设置的对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This implementation provides the base syntax support for binding through <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> for all provided practical derived classes (&lt;xref:System.Windows.Data.Binding&gt;, &lt;xref:System.Windows.Data.PriorityBinding&gt;, and &lt;xref:System.Windows.Data.MultiBinding&gt;).</source>
          <target state="translated">这种实现提供通过绑定的基本语法支持<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>为所有提供的实际的派生的类 (&lt;xref:System.Windows.Data.Binding&gt;， &lt;xref:System.Windows.Data.PriorityBinding&gt;，和&lt;xref:System.Windows.Data.MultiBinding&gt;)。&lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Data.PriorityBinding&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.BindingBase&gt; class implementation of this method is expected to return an expression object that is the result of a binding.</source>
          <target state="translated">&lt;xref:System.Windows.Data.BindingBase&gt;类实现此方法应返回一个表达式对象，它的绑定结果。&lt;/xref:System.Windows.Data.BindingBase&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Binding a property works by targeting a given &lt;xref:System.Windows.DependencyProperty&gt; on a given &lt;xref:System.Windows.DependencyObject&gt;.</source>
          <target state="translated">通过给定&lt;xref:System.Windows.DependencyProperty&gt;的时间为给定的&lt;xref:System.Windows.DependencyObject&gt;。&lt;/xref:System.Windows.DependencyObject&gt;&lt;/xref:System.Windows.DependencyProperty&gt;以目标绑定属性配合使用</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>These two pieces of information are transmitted by querying for an &lt;xref:System.Windows.Markup.IProvideValueTarget&gt; implementation on the <ph id="ph1">`serviceProvider`</ph>, which the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> reader makes available during parsing of a binding.</source>
          <target state="translated">这两个部分信息传输的查询&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;上的实现<ph id="ph1">`serviceProvider`</ph>，后者<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph><ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>读取器使可绑定的分析过程。&lt;/xref:System.Windows.Markup.IProvideValueTarget&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This base class implementation is responsible for checking for a valid &lt;xref:System.Windows.DependencyProperty&gt; and &lt;xref:System.Windows.DependencyObject&gt;.</source>
          <target state="translated">此基类实现负责检查输入有效的&lt;xref:System.Windows.DependencyProperty&gt;和&lt;xref:System.Windows.DependencyObject&gt;。&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</source>
          <target state="translated">如果找到这些，返回绑定表达式的实际实现将位于到各种派生类中，具有基类调用内部的抽象方法的实施方式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Otherwise, the extension returns the binding object itself.</source>
          <target state="translated">否则，该扩展返回的绑定对象本身。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</source>
          <target state="translated">返回绑定本身会导致类型不匹配错误，但这不应在正常情况下发生。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Because the syntax for binding through <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> as implemented in this method relies on implementing an internal override, and because ProvideValue itself is sealed, a custom binding class that derives from &lt;xref:System.Windows.Data.BindingBase&gt; will not function correctly as a <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 由于通过绑定的语法<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>在中实现此方法依赖于实现内部重写，以及 ProvideValue 本身密封的因为自定义绑定类派生自&lt;xref:System.Windows.Data.BindingBase&gt;将不正常作为<ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>标记扩展。&lt;/xref:System.Windows.Data.BindingBase&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The object that can provide services for the markup extension.</source>
          <target state="translated">可为标记扩展提供服务的对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see the Remarks section for more information.</source>
          <target state="translated">可能是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; 请参阅备注部分以了解更多信息。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value to set on the binding target property.</source>
          <target state="translated">要在绑定目标属性上设置的值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether serialization processes should serialize the effective value of the &lt;xref:System.Windows.Data.BindingBase.FallbackValue*&gt; property on instances of this class.</source>
          <target state="translated">返回一个值，该值指示序列化进程是否应序列化&lt;xref:System.Windows.Data.BindingBase.FallbackValue*&gt;此类的实例上的属性&lt;/xref:System.Windows.Data.BindingBase.FallbackValue*&gt;的有效值</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.BindingBase.FallbackValue*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.Data.BindingBase.FallbackValue*&gt;属性值应序列化; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.Data.BindingBase.FallbackValue*&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the &lt;xref:System.Windows.Data.BindingBase.TargetNullValue*&gt; property should be serialized.</source>
          <target state="translated">返回一个值，该值指示是否&lt;xref:System.Windows.Data.BindingBase.TargetNullValue*&gt;应序列化属性。&lt;/xref:System.Windows.Data.BindingBase.TargetNullValue*&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.BindingBase.TargetNullValue*&gt; property should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.Data.BindingBase.TargetNullValue*&gt;属性应为序列化; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.Data.BindingBase.TargetNullValue*&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</source>
          <target state="translated">获取或设置一个字符串，指定如何设置绑定的格式，如果它显示为字符串绑定的值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>StringFormat can be a predefined, composite, or custom string format.</source>
          <target state="translated">StringFormat 可以是预定义、 撰写的或自定义字符串格式。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information about string formats, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关字符串格式的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you set the &lt;xref:System.Windows.Data.Binding.Converter%2A&gt; and StringFormat properties, the converter is applied to the data value first, and then the StringFormat is applied.</source>
          <target state="translated">如果你设置&lt;xref:System.Windows.Data.Binding.Converter%2A&gt;和 StringFormat 属性，该转换器首先，适用于数据值，然后应用 StringFormat。&lt;/xref:System.Windows.Data.Binding.Converter%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When you set the StringFormat on a &lt;xref:System.Windows.Data.Binding&gt; to a composite string format, you can specify only one parameter.</source>
          <target state="translated">当上设置 StringFormat&lt;xref:System.Windows.Data.Binding&gt;为复合字符串格式，你可以指定只有一个参数。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you use a &lt;xref:System.Windows.Data.MultiBinding&gt;, the StringFormat property applies only when it is set on the &lt;xref:System.Windows.Data.MultiBinding&gt;.</source>
          <target state="translated">当你使用的&lt;xref:System.Windows.Data.MultiBinding&gt;、 StringFormat 属性适用仅当其设置&lt;xref:System.Windows.Data.MultiBinding&gt;。&lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The value of StringFormat that is set on any child &lt;xref:System.Windows.Data.Binding&gt; objects is ignored.</source>
          <target state="translated">StringFormat 任何子级设置的值&lt;xref:System.Windows.Data.Binding&gt;忽略的对象。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The number of parameters in a composite string format cannot exceed the number of child &lt;xref:System.Windows.Data.Binding&gt; objects in the &lt;xref:System.Windows.Data.MultiBinding&gt;.</source>
          <target state="translated">复合字符串格式中的参数数目不能超过子&lt;xref:System.Windows.Data.Binding&gt;&lt;xref:System.Windows.Data.MultiBinding&gt;.&lt;/xref:System.Windows.Data.MultiBinding&gt;中的对象&lt;/xref:System.Windows.Data.Binding&gt;的数目</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When you use a &lt;xref:System.Windows.Data.PriorityBinding&gt;, you can set the StringFormat on the &lt;xref:System.Windows.Data.PriorityBinding&gt;, on child binding objects, or both.</source>
          <target state="translated">当你使用&lt;xref:System.Windows.Data.PriorityBinding&gt;，您可以对设置 StringFormat &lt;xref:System.Windows.Data.PriorityBinding&gt;、 对子绑定对象，或者这两者。&lt;/xref:System.Windows.Data.PriorityBinding&gt; &lt;/xref:System.Windows.Data.PriorityBinding&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If the StringFormat is set on the child binding that is applied, that value is used.</source>
          <target state="translated">如果 StringFormat 上应用的子绑定设置，则使用该值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the StringFormat is not set on the child binding that is applied, the StringFormat of the &lt;xref:System.Windows.Data.PriorityBinding&gt; is applied if it is set.</source>
          <target state="translated">如果 StringFormat 未设置子级上绑定，则应用的 StringFormat&lt;xref:System.Windows.Data.PriorityBinding&gt;如果它被设置，则应用。&lt;/xref:System.Windows.Data.PriorityBinding&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A string that specifies how to format the binding if it displays the bound value as a string.</source>
          <target state="translated">一个字符串，指定如何设置绑定的格式，如果它显示为字符串绑定的值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets the value that is used in the target when the value of the source is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置目标中使用的值，当源的值为时<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_TargetNullValue"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage      <ph id="ph1">```   &lt;object TargetNullValue="nullValue" /&gt;   ```</ph>       <bpt id="p2">**</bpt>- or –<ept id="p2">**</ept>      <ph id="ph2">```   &lt;object&gt;     &lt;object.TargetNullValue&gt;       nullValue       &lt;/object.TargetNullValue&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_TargetNullValue"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>nullValue<ept id="p4">*</ept>    An attribute or object element value of the same type as the target property.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_TargetNullValue"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 文本用法<ph id="ph1">```   &lt;object TargetNullValue="nullValue" /&gt;   ```</ph> <bpt id="p2">**</bpt>-<ept id="p2">**</ept> <ph id="ph2">```   &lt;object&gt;     &lt;object.TargetNullValue&gt;       nullValue       &lt;/object.TargetNullValue&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_TargetNullValue"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>nullValue<ept id="p4">*</ept>目标属性具有相同类型的属性或对象元素值。                   </target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">请参阅 XAML 用法的信息的该类型的文档。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">该类型可能或可能不支持属性语法为它的值，或可能或可能不支持对象元素语法 （它需要对该类型的默认构造函数）。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The value that is used in the target when the value of the source is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">源的值时，在目标中使用的值<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>