<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6575fef3945d2c71d8ce5747d792d2a524287c39</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.XmlUrlResolver.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b75540f35c4dcf87a366dec4644487950659476</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a97154ecefd8f34a23c6defbcf1294f1299db18d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Resolves external XML resources named by a Uniform Resource Identifier (URI).</source>
          <target state="translated">解析由统一资源标识符 (URI) 命名的外部 XML 资源。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XmlUrlResolver is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas.</source>
          <target state="translated">XmlUrlResolver 用于解析外部 XML 资源，如实体、 文档类型定义 (Dtd) 或架构。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</source>
          <target state="translated">它也是用于过程包含和导入在可扩展样式表语言 (XSL) 样式表或 XML 架构定义语言 (XSD) 架构中找到的元素。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XmlUrlResolver is the default resolver for all classes in the &lt;xref:System.Xml&gt; namespace.</source>
          <target state="translated">XmlUrlResolver 是中的所有类的默认冲突解决程序&lt;xref:System.Xml&gt;命名空间。&lt;/xref:System.Xml&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It supports the <ph id="ph1">`file://`</ph> and <ph id="ph2">`http://`</ph> protocols and requests from the &lt;xref:System.Net.WebRequest&gt; class.</source>
          <target state="translated">它支持<ph id="ph1">`file://`</ph>和<ph id="ph2">`http://`</ph>协议和请求从&lt;xref:System.Net.WebRequest&gt;类。&lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  XmlUrlResolver objects can contain sensitive information such as user credentials.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; XmlUrlResolver 对象可以包含敏感信息，例如用户凭据。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You should be careful when you cache XmlUrlResolver objects and should not pass XmlUrlResolver objects to an untrusted component.</source>
          <target state="translated">缓存 XmlUrlResolver 对象，并应将 XmlUrlResolver 对象传递给不受信任的组件时，你应当小心。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Resolving DTDs    If an XML reader (&lt;xref:System.Xml.XmlReader&gt;) is reading an XML file that contains an external DTD, it calls the &lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName&gt; method to get a stream representation of the DTD.</source>
          <target state="translated">解析 Dtd 如果 XML 读取器 (&lt;xref:System.Xml.XmlReader&gt;) 包含外部 DTD 的 XML 文件中进行读取时，它调用&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName&gt;方法以获取流表示的 DTD。&lt;/xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the URI of the DTD is a relative URI, the XML reader calls the &lt;xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName&gt; method and returns an absolute URI for the given <ph id="ph1">`relativeUri`</ph> and <ph id="ph2">`baseURi`</ph> parameters.</source>
          <target state="translated">如果 DTD 的 URI 是相对的 URI，XML 读取器会调用&lt;xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName&gt;方法并返回一个绝对 URI 的给定<ph id="ph1">`relativeUri`</ph>和<ph id="ph2">`baseURi`</ph>参数。&lt;/xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the XmlUrlResolver doesn't know how to resolve the URI, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果 XmlUrlResolver 不知道如何解析的 URI，它将返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt; method uses the information in the &lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt; property as appropriate to gain access to the resource.</source>
          <target state="translated">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt;方法使用中的信息&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;适当地获得对资源的访问的属性。&lt;/xref:System.Xml.XmlUrlResolver.Credentials%2A&gt; &lt;/xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>There is no <ph id="ph1">`get`</ph> accessor to this property for security reasons.</source>
          <target state="translated">没有任何<ph id="ph1">`get`</ph>出于安全考虑此属性访问器。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When overwriting &lt;xref:System.Xml.XmlResolver&gt;, <bpt id="p1">**</bpt>GetEntity<ept id="p1">**</ept> is the method that utilizes the credential information in the <bpt id="p2">**</bpt>Credentials<ept id="p2">**</ept> property.</source>
          <target state="translated">在重写&lt;xref:System.Xml.XmlResolver&gt;， <bpt id="p1">**</bpt>GetEntity<ept id="p1">**</ept>是利用中的凭据信息的方法<bpt id="p2">**</bpt>凭据<ept id="p2">**</ept>属性。&lt;/xref:System.Xml.XmlResolver&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Resolving all other XML resources is very similar to resolving DTDs.</source>
          <target state="translated">解析所有其他 XML 资源是与解析 Dtd 非常类似。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.XmlResolver&gt; negotiates the connection with the external resource and returns a &lt;xref:System.IO.Stream&gt; representation of the content.</source>
          <target state="translated">&lt;xref:System.Xml.XmlResolver&gt;协商与外部资源的连接并返回&lt;xref:System.IO.Stream&gt;内容的表示形式。&lt;/xref:System.IO.Stream&gt;&lt;/xref:System.Xml.XmlResolver&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The object that is making the call to &lt;xref:System.Xml.XmlResolver&gt; interprets the stream.</source>
          <target state="translated">正在调用的对象&lt;xref:System.Xml.XmlResolver&gt;解释流。&lt;/xref:System.Xml.XmlResolver&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Extending the XmlUrlResolver class    The default behavior of the XmlUrlResolver class is to resolve an XML data resource from its source, not from cache.</source>
          <target state="translated">扩展 XmlUrlResolver 类 XmlUrlResolver 类的默认行为是若要解决其源，不是从缓存中的 XML 数据资源。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server.</source>
          <target state="translated">在某些情况下，解决从缓存的数据资源可以提高性能的应用程序通过将行程保存到数据资源的服务器。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The performance gains here must be weighed against the need for up-to-date content.</source>
          <target state="translated">这种性能增益必须针对最新的内容的需要进行权衡。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example extends XmlUrlResolver and builds a new class, <ph id="ph1">`XmlCachingResolver`</ph>, to retrieve resources from the cache.</source>
          <target state="translated">下面的示例扩展 XmlUrlResolver 并生成一个新的类， <ph id="ph1">`XmlCachingResolver`</ph>，若要从缓存中检索资源。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is done by overriding the &lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName&gt; property and the &lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">这可通过重写&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName&gt;属性和&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>XmlCachingResolver_ex#1<ept id="p2">](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XmlCachingResolver_ex#1<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs)</ept><ept id="p3">]</ept>       The caching behavior of the <ph id="ph1">`XmlCachingResolver`</ph> class is implemented in the <ph id="ph2">`GetEntity`</ph> method.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>XmlCachingResolver_ex&amp;#1;<ept id="p2">](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XmlCachingResolver_ex&amp;#1;<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs)</ept> <ept id="p3">]</ept>的缓存行为<ph id="ph1">`XmlCachingResolver`</ph>类实现中<ph id="ph2">`GetEntity`</ph>方法。  </target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is done by creating new &lt;xref:System.Net.WebRequest&gt; and &lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt; objects.</source>
          <target state="translated">这可通过创建新&lt;xref:System.Net.WebRequest&gt;和&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;对象。&lt;/xref:System.Net.Cache.HttpRequestCachePolicy&gt; &lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt; object is created using the &lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt; member of the &lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt; enumeration.</source>
          <target state="translated">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;对象使用创建&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;的成员&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;枚举。&lt;/xref:System.Net.Cache.HttpRequestCacheLevel&gt; &lt;/xref:System.Net.Cache.HttpRequestCacheLevel&gt; &lt;/xref:System.Net.Cache.HttpRequestCachePolicy&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.WebRequest.CachePolicy%2A&gt; property of the &lt;xref:System.Net.WebRequest&gt; object is set with the &lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt; object.</source>
          <target state="translated">&lt;xref:System.Net.WebRequest.CachePolicy%2A&gt;属性&lt;xref:System.Net.WebRequest&gt;对象设置与&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;对象。&lt;/xref:System.Net.Cache.HttpRequestCachePolicy&gt; &lt;/xref:System.Net.WebRequest&gt; &lt;/xref:System.Net.WebRequest.CachePolicy%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An instance of the <ph id="ph1">`XmlCachingResolver`</ph> class is created with the <ph id="ph2">`Boolean``enableHttpCaching`</ph>.</source>
          <target state="translated">实例<ph id="ph1">`XmlCachingResolver`</ph>类创建与<ph id="ph2">`Boolean``enableHttpCaching`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When this value is set to <ph id="ph1">`true`</ph>, the instance resolves a resource from the default cache if possible.</source>
          <target state="translated">当此值设置为<ph id="ph1">`true`</ph>，实例尽可能解析默认缓存中的资源。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`enableHttpCaching`</ph> is set to <ph id="ph2">`false`</ph>, the instance uses the default behavior and resolves resources from their source.</source>
          <target state="translated">当<ph id="ph1">`enableHttpCaching`</ph>设置为<ph id="ph2">`false`</ph>，该实例使用的默认行为和解析从其源的资源。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This example leverages the extensibility of the XML classes in the .NET Framework.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 此示例利用.NET Framework 中的 XML 类的扩展性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Other classes can be extended and customized to suit the needs of a particular application.</source>
          <target state="translated">其他类可以扩展和自定义以满足特定应用程序的需求。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the cache policy for the underlying &lt;xref:System.Net.WebRequest&gt; object.</source>
          <target state="translated">获取或设置基础的缓存策略&lt;xref:System.Net.WebRequest&gt;对象。&lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The cache policy for the underlying web request.</source>
          <target state="translated">基础 web 请求的缓存策略。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Sets credentials used to authenticate web requests.</source>
          <target state="translated">设置用于对 web 请求进行身份验证凭据。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the virtual directory does not require authentication, this property does not need to be set.</source>
          <target state="translated">如果虚拟目录不要求身份验证，则不需要设置此属性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Otherwise, the credentials of the user must be supplied.</source>
          <target state="translated">否则，必须提供用户的凭据。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can associate different credentials with different URIs and add them to a cache.</source>
          <target state="translated">你可以将不同的凭据与不同的 Uri 相关联，并将其添加到缓存。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.</source>
          <target state="translated">然后可以使用的凭据来检查不同 Uri，XML 的原始源无关的身份验证。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following C# code shows how to set the Credentials property to a credential cache.</source>
          <target state="translated">下面的 C# 代码演示如何将凭据属性设置为凭据缓存。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The credentials to be used to authenticate web requests.</source>
          <target state="translated">要使用 web 请求进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If this property is not set, the value defaults to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; that is, the <bpt id="p2">&lt;xref uid="langword_csharp_XmlUrlResolver" name="XmlUrlResolver" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has no user credentials.</source>
          <target state="translated">如果未设置此属性，则该值默认为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; 即， <bpt id="p2">&lt;xref uid="langword_csharp_XmlUrlResolver" name="XmlUrlResolver" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>没有用户凭据。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Maps a URI to an object that contains the actual resource.</source>
          <target state="translated">将 URI 映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.</source>
          <target state="translated">当调用方想要将给定的 URI 映射到包含该 URI 表示资源的对象，使用此方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For the asynchronous version of this method, see &lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;.</source>
          <target state="translated">此方法的异步版本，请参阅&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;。&lt;/xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Your application can mitigate memory denial of service threats to the GetEntity method by implementing IStream&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt; to limit the number of bytes read.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 你的应用程序可以通过实现 IStream 来缓解内存拒绝服务威胁到 GetEntity 方法&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;来限制读取的字节数。&lt;/xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method.</source>
          <target state="translated">这有助于应对这种情况下恶意代码，尝试将字节的无限流传递到 GetEntity 方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.</source>
          <target state="translated">从&lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.&lt;/xref:System.Xml.XmlResolver.ResolveUri*&gt;返回的 URI</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
          <target state="translated">当前未使用。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象类型。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The current implementation only returns &lt;xref:System.IO.Stream&gt; objects.</source>
          <target state="translated">当前实现只返回&lt;xref:System.IO.Stream&gt;对象。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A stream object or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a type other than stream is specified.</source>
          <target state="translated">流对象或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定了流以外的类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is neither <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nor a <bpt id="p2">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> type.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph>既不是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>也不是<bpt id="p2">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>类型。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The specified URI is not an absolute URI.</source>
          <target state="translated">指定的 URI 不是一个绝对 URI。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
          <target state="translated">没有运行时错误 （例如，中断的服务器连接）。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">将 URI 异步映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.</source>
          <target state="translated">从&lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.&lt;/xref:System.Xml.XmlResolver.ResolveUri*&gt;返回的 URI</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
          <target state="translated">当前未使用。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象类型。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The current implementation only returns &lt;xref:System.IO.Stream&gt; objects.</source>
          <target state="translated">当前实现只返回&lt;xref:System.IO.Stream&gt;对象。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A stream object or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a type other than stream is specified.</source>
          <target state="translated">流对象或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定了流以外的类型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets or sets the network proxy for the underlying &lt;xref:System.Net.WebRequest&gt; object.</source>
          <target state="translated">获取或设置的网络代理基础&lt;xref:System.Net.WebRequest&gt;对象。&lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.IWebProxy&gt; to use to access the Internet resource.</source>
          <target state="translated">&lt;xref:System.Net.IWebProxy&gt;要用于访问 Internet 资源。&lt;/xref:System.Net.IWebProxy&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Resolves the absolute URI from the base and relative URIs.</source>
          <target state="translated">解析绝对 URI 基和相对 Uri。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.</source>
          <target state="translated">绝对 URI 可以用作相对于此 URI 的实体的任何后续请求的基 URI。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">基 URI 用于解析相对 URI。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The URI to resolve.</source>
          <target state="translated">要解析的 URI。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">URI 可以是绝对或相对。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If absolute, this value effectively replaces the <ph id="ph1">`baseUri`</ph> value.</source>
          <target state="translated">如果绝对的此值有效地替换<ph id="ph1">`baseUri`</ph>值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If relative, it combines with the <ph id="ph1">`baseUri`</ph> to make an absolute URI.</source>
          <target state="translated">如果相对的它结合了以及<ph id="ph1">`baseUri`</ph>以构成绝对 URI。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The absolute URI, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the relative URI cannot be resolved.</source>
          <target state="translated">绝对 URI 或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不能解析相对 URI。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;baseUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;baseUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>