<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">934c6e9dcba30e7a92ad8784f7b9d41b29e6709b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbce1a3a3fec45f0e43d0bfcb34db68666155e1b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">603b587c6539a2e0b4259ee607cd613304c89341</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages design-time serialization to and from extensible Application Markup Language (XAML) for workflows.</source>
          <target state="translated">管理设计时序列化到和从可扩展应用程序标记语言 (XAML) 工作流。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       A workflow or activity designer can use WorkflowMarkupSerializationManager to access services useful to managing design-time serialization processes.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>工作流或活动设计器可以使用 WorkflowMarkupSerializationManager 来访问对于管理设计时序列化过程很有用的服务。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For example, WorkflowMarkupSerializationManager can be used to create objects, look up types, identify objects, and customize the serialization of particular types.</source>
          <target state="translated">例如，WorkflowMarkupSerializationManager 可用来创建对象、 查找类型、 标识对象和自定义特定类型的序列化。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified <bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的类<bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with which to initialize the <bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用来初始化<bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adds the specified serialization provider to the serialization manager.</source>
          <target state="translated">将指定的序列化提供程序添加到序列化管理器。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>AddSerializationProvider adds a custom serialization provider to the serialization manager.</source>
          <target state="translated">AddSerializationProvider 将自定义序列化提供程序添加到序列化管理器。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</source>
          <target state="translated">序列化提供程序可以为特定类型的对象或类型的对象集提供自定义序列化程序。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</source>
          <target state="translated">序列化期间，每个自定义序列化提供程序将查询以返回的序列化程序特定的数据类型，如果它可以提供一个。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</source>
          <target state="translated">序列化管理器使用此方法之前，为特定类型使用默认序列化程序提供的自定义序列化程序。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets a stack-based, user-defined storage area that is useful for communication between serializers.</source>
          <target state="translated">获取基于堆栈的、 用户定义的存储区域，对于序列化程序之间的通信十分有用。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Some serializers require information about the context of an object to correctly persist their state.</source>
          <target state="translated">部分序列化程序需要有关上下文的对象，以便正确地保留其状态的信息。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Context enables a serializer to set data about the context of an object that it is serializing to a &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt; where another serializer can access it.</source>
          <target state="translated">上下文便会启用序列化程序将对象序列化的上下文相关的数据设置为&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;其中另一个序列化程序可以访问它。&lt;/xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains information about the current object being serialized.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包含有关当前要序列化的对象信息。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns a serializer of the specified type for an object of the specified type.</source>
          <target state="translated">返回指定类型的指定类型的对象的序列化程序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; for which to retrieve the serializer.</source>
          <target state="translated">&lt;xref:System.Type&gt;为其检索序列化程序。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the serializer to retrieve.</source>
          <target state="translated">&lt;xref:System.Type&gt;的序列化程序才能检索。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The requested serializer, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) if no appropriate serializer can be located.</source>
          <target state="translated">请求序列化程序，则为空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中) 如果没有相应的序列化程序可以位于。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a service object of the specified type.</source>
          <target state="translated">返回指定类型的服务对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of service object to return.</source>
          <target state="translated">&lt;xref:System.Type&gt;要返回的服务对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A service object of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept>, or a null reference (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic) if there is no service object of type <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">serviceType</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">类型的服务对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept>，则为空引用 (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>在 Visual Basic 中) 类型的服务对象是否<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">serviceType</ph> <ept id="p3">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns a type of the specified name.</source>
          <target state="translated">返回指定名称的类型。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The fully-qualified name of the &lt;xref:System.Type&gt; to load.</source>
          <target state="translated">完全限定名称&lt;xref:System.Type&gt;加载。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeName</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Type&gt;与关联<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">typeName</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns that type associated with the specified XML qualified name.</source>
          <target state="translated">返回该类型关联的具有指定的 XML 限定名称。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An XML qualified name is a namespace-qualified local name, in the format of namespace:localname.</source>
          <target state="translated">XML 限定的名是命名空间限定本地名称，格式为 namespace: localname。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Because prefixes are only required when XML is persisted or read, they are irrelevant for &lt;xref:System.Xml.XmlQualifiedName&gt; objects.</source>
          <target state="translated">因为前缀仅需要保留或读取 XML 时，它们是不相关的&lt;xref:System.Xml.XmlQualifiedName&gt;对象。&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It is the responsibility of the user to ensure the local name does not contain a ":"</source>
          <target state="translated">要确保的本地名称不包含的用户负责":"</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlQualifiedName&gt; of the type to load.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;要加载的类型。&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xmlQualifiedName</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Type&gt;与关联<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">xmlQualifiedName</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xmlQualifiedName&lt;/code&gt;</ph> contains a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xmlQualifiedName&lt;/code&gt;</ph>包含空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns the XML-qualified name associated with the specified type.</source>
          <target state="translated">返回与指定类型关联的 XML 限定名称。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; for which to return the XML-qualified name.</source>
          <target state="translated">&lt;xref:System.Type&gt;为其返回的 XML 限定名称。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the XML prefix for the qualified name or an empty string if no prefix is defined.</source>
          <target state="translated">如果没有定义前缀，此方法返回时，包含的限定的名称或空字符串的 XML 前缀。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlQualifiedName&gt; associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;与关联<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> contains a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>包含空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the assembly that is associated with the current serializer.</source>
          <target state="translated">获取或设置与当前序列化程序关联的程序集。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Assembly&gt; that is associated with the current serializer.</source>
          <target state="translated">&lt;xref:System.Reflection.Assembly&gt;当前序列化程序与该键相关联。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes a custom serialization provider from the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">移除自定义序列化提供程序从<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>删除。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This provider must be added using &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider*&gt;.</source>
          <target state="translated">必须使用&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider*&gt;.&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider*&gt;添加此提供程序</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Reports an error in serialization.</source>
          <target state="translated">报告序列化中的错误。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`errorInformation`</ph> can be of any object type.</source>
          <target state="translated"><ph id="ph1">`errorInformation`</ph>可以是任何对象类型。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If it is an exception, the message of the exception is extracted and reported to the user.</source>
          <target state="translated">如果它是一个异常，该异常的消息提取，并报告给用户。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If it is any other type, &lt;xref:System.Object.ToString%2A&gt; is called to display the information to the user.</source>
          <target state="translated">如果它是任何其他类型，&lt;xref:System.Object.ToString%2A&gt;调用以向用户显示该信息。&lt;/xref:System.Object.ToString%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The error to report.</source>
          <target state="translated">报告的错误。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets the serialization manager to use with the current serializer.</source>
          <target state="translated">获取或设置要与当前序列化程序一起使用的序列化管理器。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use with the current serializer.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要用于当前序列化程序。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified type and adds it to a collection of named instances.</source>
          <target state="translated">创建指定类型的实例并将其添加到已命名实例的集合。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`addToContainer`</ph> is set to <ph id="ph2">`true`</ph>, the object must implement &lt;xref:System.ComponentModel.IComponent&gt; for this to have any effect.</source>
          <target state="translated">如果<ph id="ph1">`addToContainer`</ph>设置为<ph id="ph2">`true`</ph>，该对象必须实现&lt;xref:System.ComponentModel.IComponent&gt;使这种方式产生任何影响。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to create.</source>
          <target state="translated">&lt;xref:System.Type&gt;创建。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; that contains the arguments for <ph id="ph1">`type`</ph>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;包含的自变量<ph id="ph1">`type`</ph>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The name of the object.</source>
          <target state="translated">对象的名称。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This name can be used to access the object later using &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.</source>
          <target state="translated">此名称可以用于更高版本使用&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;访问该对象</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) is passed, the object is still created but cannot be accessed by name.</source>
          <target state="translated">如果为空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中) 是传递时，对象仍会创建，但不能按名称访问。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add the object to the design container; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>将对象添加到设计容器;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The newly created object.</source>
          <target state="translated">新创建的对象。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns an instance of a created object of the specified name.</source>
          <target state="translated">返回指定的名称对创建对象的一个实例。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`name`</ph> must be set through a prior call to &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`name`</ph>必须通过调用&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;设置</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The name of the object to retrieve.</source>
          <target state="translated">要检索的对象的名称。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An instance of the object with the given name, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) if no object by that name can be found.</source>
          <target state="translated">具有给定名称，则为空引用的对象的实例 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中) 如果找不到该名称没有任何对象。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns the name of the specified object.</source>
          <target state="translated">返回指定对象的名称。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which to retrieve the name.</source>
          <target state="translated">&lt;xref:System.Object&gt;为其检索名称。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name of the object, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) if the object is unnamed.</source>
          <target state="translated">名称的对象，则为空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中) 的对象是否未命名。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a collection of properties that can be serialized with available serializers.</source>
          <target state="translated">获取通过可用序列化程序的可序列化的属性的集合。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This property can contain an empty collection.</source>
          <target state="translated">此属性可包含空集合。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A serializer should never assume that any properties exist.</source>
          <target state="translated">序列化程序也不应假定存在任何属性。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the properties to serialize.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含要序列化的属性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Sets the name of the specified existing object.</source>
          <target state="translated">设置指定的现有对象的名称。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt; is useful when you need to create and then name an instance of an object without using &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;当你需要创建并将其命名为对象的实例而无需使用&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;时非常有用&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The object to name.</source>
          <target state="translated">命名的对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The name to assign to the object.</source>
          <target state="translated">要分配给对象的名称。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>