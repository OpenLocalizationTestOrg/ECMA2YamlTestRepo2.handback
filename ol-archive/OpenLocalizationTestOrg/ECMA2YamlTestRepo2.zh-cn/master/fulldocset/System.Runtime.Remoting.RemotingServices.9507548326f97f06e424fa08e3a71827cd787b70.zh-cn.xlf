<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6fd5493" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5bdb48de5895a1247744ed59bf25662733d50c8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.RemotingServices.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">425673ea800bb704123998b2609c10cad7689849</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96deccde67963ff1df5993f16ec611eabe6ab3a7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides several methods for using and publishing remoted objects and proxies.</source>
          <target state="translated">有关使用和发布进行远程处理对象和代理提供若干方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Unless you are a service provider dealing with issues such as activation, lifetime management, or transactions, you do not need to distinguish between proxy references and object references.</source>
          <target state="translated">除非您是问题，如激活、 生存期管理或事务处理的服务提供商，你不需要区分代理引用和对象引用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The remoting infrastructure uses transparent proxies that give the impression that the remote objects reside in the client's space.</source>
          <target state="translated">远程处理基础结构使用给出的远程对象驻留在客户端的空间的印象的透明代理。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Proxies achieve this by forwarding calls made on them to the real objects at remote locations.</source>
          <target state="translated">代理服务器来实现此调用在远程位置的实际对象对其进行转发。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creates a proxy for a well-known object, given the &lt;xref:System.Type&gt; and URL.</source>
          <target state="translated">为创建一个代理的已知对象，提供&lt;xref:System.Type&gt;和 URL。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The returned proxy object points to an endpoint served by the specified well-known object.</source>
          <target state="translated">返回的代理对象指向由指定的已知对象服务的终结点。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>No messages are sent over the network until a method is called on the proxy.</source>
          <target state="translated">对此代理调用方法之前通过网络不发送任何消息。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of a well-known object on the server end to which you want to connect.</source>
          <target state="translated">&lt;xref:System.Type&gt;你想要连接的服务器端上的已知对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The URL of the server class.</source>
          <target state="translated">服务器类的 URL。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A proxy to the remote object that points to an endpoint served by the specified well-known object.</source>
          <target state="translated">指向由指定的已知对象服务的终结点的远程对象的代理。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have permission to configure remoting types and channels.</source>
          <target state="translated">直接调用方没有权限来配置远程处理类型和信道。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates a proxy for a well-known object, given the &lt;xref:System.Type&gt;, URL, and channel-specific data.</source>
          <target state="translated">为创建一个代理的已知对象，提供&lt;xref:System.Type&gt;，URL 和通道特定的数据。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The returned proxy object points to an endpoint served by the specified well-known object.</source>
          <target state="translated">返回的代理对象指向由指定的已知对象服务的终结点。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>No messages are sent over the network until a method is called on the proxy.</source>
          <target state="translated">对此代理调用方法之前通过网络不发送任何消息。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`data`</ph> object is used to communicate information to the channel, and is passed to the &lt;xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated"><ph id="ph1">`data`</ph>对象可用于将信息传递给通道，并传递给&lt;xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the well-known object to which you want to connect.</source>
          <target state="translated">&lt;xref:System.Type&gt;你想要连接的已知对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The URL of the well-known object.</source>
          <target state="translated">已知对象的 URL。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Channel specific data.</source>
          <target state="translated">通道特定的数据。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A proxy that points to an endpoint that is served by the requested well-known object.</source>
          <target state="translated">代理，它指向由所请求的已知对象服务的终结点。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have permission to configure remoting types and channels.</source>
          <target state="translated">直接调用方没有权限来配置远程处理类型和信道。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Stops an object from receiving any further messages through the registered remoting channels.</source>
          <target state="translated">停止接收通过已注册的远程处理信道更多的信息的对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Object to disconnect from its channel.</source>
          <target state="translated">若要从其通道断开连接的对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object was disconnected from the registered remoting channels successfully; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果对象已成功，则与已注册的远程处理信道断开连接否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a proxy.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p1">&lt;/code&gt;</ept>参数是一个代理。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have permission to configure remoting types and channels.</source>
          <target state="translated">直接调用方没有权限来配置远程处理类型和信道。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Connects to the specified remote object, and executes the provided <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodCallMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on it.</source>
          <target state="translated">连接到指定的远程对象，并执行提供<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodCallMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>在其上。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The current method is used in special cases by the server to forward the specified method call to another, possibly remote, object.</source>
          <target state="translated">当前方法用于在特殊情况下由服务器转发到另一个，可能是远程对象指定的方法调用。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This method can be called only when the caller is in the appropriate context.</source>
          <target state="translated">只有当调用方处于合适的上下文中时，可以调用此方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The remote object whose method you want to call.</source>
          <target state="translated">远程对象你想要调用的方法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A method call message to the specified remote object's method.</source>
          <target state="translated">方法调用消息到指定的远程对象的方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The response of the remote method.</source>
          <target state="translated">远程方法的响应。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The method was called from a context other than the native context of the object.</source>
          <target state="translated">对象的本机上下文之外的上下文从调用了方法。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a chain of envoy sinks that should be used when sending messages to the remote object represented by the specified proxy.</source>
          <target state="translated">返回将消息发送到由指定的代理的远程对象时应使用的 envoy 接收器链。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Envoy sinks are sinks sent along with the &lt;xref:System.Runtime.Remoting.ObjRef&gt; of an object that is used when returning messages to that object.</source>
          <target state="translated">Envoy 接收器是一起发送的接收器&lt;xref:System.Runtime.Remoting.ObjRef&gt;时向该对象返回消息使用的对象。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The current method returns the envoy sinks that are used during communication between the proxy of the object and the object itself.</source>
          <target state="translated">当前方法返回的对象的代理和对象本身之间进行通信时使用的 envoy 接收器。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The proxy of the remote object that requested envoy sinks are associated with.</source>
          <target state="translated">与之关联的代理服务器的请求 envoy 接收器的远程对象。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A chain of envoy sinks associated with the specified proxy.</source>
          <target state="translated">与指定的代理相关联的 envoy 接收器链。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns a lifetime service object that controls the lifetime policy of the specified object.</source>
          <target state="translated">返回的生存期服务对象，控制指定的对象的生存期策略。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For the default lifetime service the returned object will be an object of type &lt;xref:System.Runtime.Remoting.Lifetime.ILease&gt;.</source>
          <target state="translated">对于默认值将&lt;xref:System.Runtime.Remoting.Lifetime.ILease&gt;.&lt;/xref:System.Runtime.Remoting.Lifetime.ILease&gt;类型的对象生存期服务返回的对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`obj`</ph> parameter is <ph id="ph2">`null`</ph>, the method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`obj`</ph>参数是<ph id="ph2">`null`</ph>，该方法返回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The object to obtain lifetime service for.</source>
          <target state="translated">要获得生存期服务的对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The object that controls the lifetime of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">控制的生存期的对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns the method base from the given <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回方法的给定<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This determines the method base from the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A&gt;, &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A&gt;, and &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A&gt; properties of &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; and is used by classes implementing the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; interface.</source>
          <target state="translated">这将确定从基方法&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A&gt;， &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A&gt;，和&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A&gt;属性&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;和实现的类使用&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;接口。&lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Consumers of &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; classes should reference the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">使用者&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;类应引用&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The method message to extract the method base from.</source>
          <target state="translated">方法将消息以提取从基本的方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The method base extracted from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">msg</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">从提取方法基<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">msg</ph> <ept id="p1">&lt;/code&gt;</ept>参数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.</source>
          <target state="translated">直接调用方没有基础结构权限，或者至少一个调用堆栈中较高的调用方没有权限检索的非公共成员的类型信息。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Serializes the specified marshal by reference object into the provided <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将指定的封送按引用对象序列化到提供<bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">要序列化的对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into which the object is serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>到的对象序列化。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The source and destination of the serialization.</source>
          <target state="translated">源和目标的序列化。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">info</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">info</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Retrieves the URI for the specified object.</source>
          <target state="translated">检索指定对象的 URI。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for which a URI is requested.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为其请求 URI。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The URI of the specified object if it has one, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object has not yet been marshaled.</source>
          <target state="translated">如果有，指定的对象的 URI 或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果该对象尚未被封送。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the remote object from the specified proxy.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示从指定的代理的远程对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;是用于跨应用程序域边界传输对象引用的对象的可序列化表示。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">创建&lt;xref:System.Runtime.Remoting.ObjRef&gt;的对象称为封送处理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;可以通过信道传输到另一个应用程序域 （可能在另一个进程或计算机）。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">在其他应用程序域中一次&lt;xref:System.Runtime.Remoting.ObjRef&gt;必须对其进行分析以创建对象，通常连接到真实的对象的代理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">此操作称为取消封送。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>During unmarshaling, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is parsed to extract the method information of the remote object and both the transparent proxy and &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; objects are created.</source>
          <target state="translated">在取消封送，&lt;xref:System.Runtime.Remoting.ObjRef&gt;进行分析，以提取远程对象和透明的代理的方法信息和&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;创建对象。&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remote application where the object is located.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;包含描述信息&lt;xref:System.Type&gt;和正封送的对象类，一个 URI，唯一标识的特定对象实例和通信相关的有关如何访问远程应用程序对象所在的位置的信息。&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A proxy connected to the object you want to create a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for.</source>
          <target state="translated">代理连接到你想要创建的对象<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>有关。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the remote object the specified proxy is connected to, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the object or proxy have not been marshaled.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示指定的代理连接到，该远程对象或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果对象或代理不已封送。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Returns the real proxy backing the specified transparent proxy.</source>
          <target state="translated">返回指定的透明代理后面的真实代理。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A client that uses an object across any kind of remoting boundary is actually using a transparent proxy for the object.</source>
          <target state="translated">使用对象在任何类型的远程边界之间的客户端实际的对象使用透明的代理。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The transparent proxy gives the impression that the actual object resides in the client's space.</source>
          <target state="translated">透明代理使效果实际对象驻留在客户端的空间。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</source>
          <target state="translated">它从而实现此目的转发到使用远程处理基础结构的实际对象对其进行调用。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The transparent proxy is backed by an instance of a managed runtime class of type &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.</source>
          <target state="translated">由类型&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt;的托管的运行时类的实例支持透明代理</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; implements a part of the functionality needed to forward the operations from the transparent proxy.</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;实现透明代理转发操作所需的功能的一部分。&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.</source>
          <target state="translated">代理对象继承关联的托管对象，如垃圾收集、 成员和方法，支持语义，可以扩展以形成新类。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The proxy acts as an object of the same class as the remote object (transparent proxy), and is also a managed object.</source>
          <target state="translated">代理充当远程对象 （透明代理），与相同的类的对象，并且也是托管的对象。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A transparent proxy.</source>
          <target state="translated">一个透明的代理。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The real proxy instance backing the transparent proxy.</source>
          <target state="translated">透明代理后面真实代理实例。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Returns the &lt;xref:System.Type&gt; of the object with the specified URI.</source>
          <target state="translated">返回&lt;xref:System.Type&gt;，该对象具有指定的 URI。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Because remoting identifies endpoints using URIs, the GetServerTypeForUri method is very useful in the pluggable parts of the remoting infrastructure (for example, channel sinks, dynamic sinks, and context sinks) that use &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; objects, because the current method will return the associated type object from the URI.</source>
          <target state="translated">远程处理使用标识终结点 Uri，因为 GetServerTypeForUri 方法是在使用远程处理基础结构 （例如，信道接收器、 动态接收器和上下文接收器） 的可插入部分中非常有用&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;对象，因为当前方法将返回的 URI 中的关联的类型对象。&lt;/xref:System.Runtime.Remoting.Messaging.IMessage&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The URI of the object whose &lt;xref:System.Type&gt; is requested.</source>
          <target state="translated">对象的 URI 其&lt;xref:System.Type&gt;请求。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the object with the specified URI.</source>
          <target state="translated">&lt;xref:System.Type&gt;，该对象具有指定的 URI。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.</source>
          <target state="translated">直接调用方没有基础结构权限，或者至少一个调用堆栈中较高的调用方没有权限检索的非公共成员的类型信息。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Retrieves a session ID for a message.</source>
          <target state="translated">检索消息的会话 ID。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The same session ID might be returned for objects in the same application, but this method will never return the same session ID for two objects in different remote applications.</source>
          <target state="translated">相同的会话 ID 可能返回的对象在同一应用程序，但此方法将永远不会返回不同的远程应用程序中的两个对象相同的会话 ID。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For more information about identifying sessions and session IDs, see ASP.Net <bpt id="p1">[</bpt>ASP.NET Session State Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关会话和会话 Id 标识的详细信息，请参阅 ASP.Net <bpt id="p1">[</bpt>ASP.NET 会话状态概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for which a session ID is requested.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为其请求的会话 ID。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A session ID string that uniquely identifies the current session.</source>
          <target state="translated">唯一标识当前会话的会话 ID 字符串。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the method in the given message is overloaded.</source>
          <target state="translated">返回一个布尔值，该值指示是否重载中给定的消息的方法。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The message that contains a call to the method in question.</source>
          <target state="translated">包含对问题的方法的调用的消息。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method called in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">msg</ph><ept id="p2">&lt;/code&gt;</ept> is overloaded; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果调用该方法<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">msg</ph> <ept id="p2">&lt;/code&gt;</ept>重载; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the object specified by the given transparent proxy is contained in a different application domain than the object that called the current method.</source>
          <target state="translated">返回一个布尔值，指示在调用当前方法的对象的不同的应用程序域中是否包含给定的透明代理指定的对象。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For information about application domains, see <bpt id="p1">[</bpt>Application Domains<ept id="p1">](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1)</ept>.</source>
          <target state="translated">有关应用程序域的信息，请参阅<bpt id="p1">[</bpt>应用程序域<ept id="p1">](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1)</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The object to check.</source>
          <target state="translated">要检查的对象。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is out of the current application domain; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果对象超出当前的应用程序域;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the object represented by the given proxy is contained in a different context than the object that called the current method.</source>
          <target state="translated">返回一个布尔值，指示调用当前方法的对象之外的其他上下文中是否包含给定代理所表示的对象。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A context is an ordered sequence of properties that define an environment for the objects that reside inside it.</source>
          <target state="translated">上下文是定义的环境可用于驻留在其中的对象的属性的有序。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time activation, security, and so on.</source>
          <target state="translated">在配置为要求某些自动服务，此类同步、 事务、 中实时激活、 安全性和等等的对象的激活过程会创建上下文。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Multiple objects can live inside a context.</source>
          <target state="translated">多个对象可以存在于一个上下文。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The object to check.</source>
          <target state="translated">要检查的对象。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is out of the current context; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果对象不在当前上下文中;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the client that called the method specified in the given message is waiting for the server to finish processing the method before continuing execution.</source>
          <target state="translated">返回一个布尔值，该值指示给定的消息中指定客户端调用了方法是否正在等待服务器以完成才会继续执行处理的方法。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When a one-way method is called, the client does not wait for the server to finish processing the message.</source>
          <target state="translated">当调用单向方法时，客户端不会等待服务器以完成处理消息。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The client method returns to the application with no knowledge of whether or not the server will successfully process the message.</source>
          <target state="translated">在客户端方法返回的应用程序不知道服务器将成功处理该消息。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Methods are marked as one way using the &lt;xref:System.Runtime.Remoting.Messaging.OneWayAttribute&gt;.</source>
          <target state="translated">方法被标记为一种方法使用&lt;xref:System.Runtime.Remoting.Messaging.OneWayAttribute&gt;.&lt;/xref:System.Runtime.Remoting.Messaging.OneWayAttribute&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>One-way methods cannot have a return value or any out parameters.</source>
          <target state="translated">单向方法不能有返回值或任何 out 参数。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The method in question.</source>
          <target state="translated">该问题的方法。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method is one way; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果该方法是一种方法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">直接调用方没有基础结构权限。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the given object is a transparent proxy or a real object.</source>
          <target state="translated">返回一个布尔值，该值指示给定的对象是否透明代理还是真实对象。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object.</source>
          <target state="translated">使用对象在任何类型的远程边界之间的客户端实际的对象使用透明的代理。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The transparent proxy gives the impression that the actual object resides in the client's space.</source>
          <target state="translated">透明代理使效果实际对象驻留在客户端的空间。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</source>
          <target state="translated">它从而实现此目的转发到使用远程处理基础结构的实际对象对其进行调用。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The transparent proxy is itself housed by an instance of a managed runtime class of type &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.</source>
          <target state="translated">透明代理是本身由类型&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt;的托管的运行时类的实例</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; implements a part of the functionality needed to forward the operations from the transparent proxy.</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;实现透明代理转发操作所需的功能的一部分。&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.</source>
          <target state="translated">代理对象继承关联的托管对象，如垃圾收集、 成员和方法，支持语义，可以扩展以形成新类。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Thus the proxy has a dual nature; on the one hand it needs to act as an object of the same class as the remote object (transparent proxy), and on the other it is a managed object itself.</source>
          <target state="translated">因此，该代理具有双重特性;一方面它需要充当远程对象 （透明代理），与相同的类的对象，并且在其他它是托管的对象本身。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A proxy object can be used without regard to any remoting subdivisions within a &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">代理对象可以使用一种&lt;xref:System.AppDomain&gt;。&lt;/xref:System.AppDomain&gt;中不考虑</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Applications need not distinguish between proxy references and object references.</source>
          <target state="translated">应用程序不需要区分代理引用和对象引用。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.</source>
          <target state="translated">但是，处理问题，如激活的服务提供商，生命期管理和事务需要进行这种区分。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The reference to the object to check.</source>
          <target state="translated">对要检查的对象的引用。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A Boolean value that indicates whether the object specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">proxy</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a transparent proxy or a real object.</source>
          <target state="translated">一个布尔值，该值指示是否在指定的对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">proxy</ph> <ept id="p1">&lt;/code&gt;</ept>参数是透明的代理或真实对象。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Logs the stage in a remoting exchange to an external debugger.</source>
          <target state="translated">在远程处理交换外部调试器中记录阶段。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`"REMOTING_PERF"`</ph> preprocessing symbol is applied to the method by using the &lt;xref:System.Diagnostics.ConditionalAttribute&gt; attribute.</source>
          <target state="translated">A<ph id="ph1">`"REMOTING_PERF"`</ph>预处理符号应用于此方法使用&lt;xref:System.Diagnostics.ConditionalAttribute&gt;属性。&lt;/xref:System.Diagnostics.ConditionalAttribute&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An internally defined constant that identifies the stage in a remoting exchange.</source>
          <target state="translated">标识在远程处理交换中的阶段的内部定义的常数。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Takes a <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, registers it with the remoting infrastructure, and converts it into an instance of the <bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">采用<bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 将其注册远程处理基础结构，并将其转换到的实例<bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;是用于跨应用程序域边界传输对象引用的对象的可序列化表示。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">创建&lt;xref:System.Runtime.Remoting.ObjRef&gt;的对象称为封送处理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;可以通过信道传输到另一个应用程序域 （可能在另一个进程或计算机）。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">在其他应用程序域中一次&lt;xref:System.Runtime.Remoting.ObjRef&gt;必须对其进行分析以创建对象，通常连接到真实的对象的代理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">此操作称为取消封送。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;包含描述信息&lt;xref:System.Type&gt;和正封送的对象类，一个 URI，唯一标识的特定对象实例和通信相关的有关如何访问该对象所在的远程处理分支的信息。&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>During marshaling, the context from the current thread is used, not the context that was active when the object was created.</source>
          <target state="translated">在封送处理，使用从当前线程的上下文，但不是用上下文，处于活动状态时创建对象时。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If a URI was not explicitly set by the &lt;xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A&gt; method, it is automatically generated by the remoting identity infrastructure.</source>
          <target state="translated">如果未显式设置一个 URI&lt;xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A&gt;方法，由远程处理标识基础结构自动生成。&lt;/xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</source>
          <target state="translated">无法将一个 URI 与代理关联的两个原因之一︰ 在它表示的对象的服务器端生成了 URI 或该对象是众所周知的 URI 在此情况下为已知。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>For this reason, if the <ph id="ph1">`Obj`</ph> parameter is a proxy, an exception will be thrown.</source>
          <target state="translated">因此，如果<ph id="ph1">`Obj`</ph>参数是一个代理，将引发异常。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</source>
          <target state="translated">自定义代理的此限制是很宽松，因为透明代理将被视为该服务器对象。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
          <target state="translated">要转换的对象。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that represents the object specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">Obj</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">实例<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示中指定的对象的类<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">Obj</ph> <ept id="p2">&lt;/code&gt;</ept>参数。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an object proxy.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Obj</ph> <ept id="p1">&lt;/code&gt;</ept>参数是一个对象代理。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">至少一个调用堆栈中较高的调用方没有权限来配置远程处理类型和信道。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Converts the given <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into an instance of the <bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class with the specified URI.</source>
          <target state="translated">将转换给定<bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到的实例<bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>用指定的 URI 的类。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;是用于跨应用程序域边界传输对象引用的对象的可序列化表示。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">创建&lt;xref:System.Runtime.Remoting.ObjRef&gt;的对象称为封送处理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;可以通过信道传输到另一个应用程序域 （可能在另一个进程或计算机）。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">在其他应用程序域中一次&lt;xref:System.Runtime.Remoting.ObjRef&gt;必须对其进行分析以创建对象，通常连接到真实的对象的代理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">此操作称为取消封送。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;包含描述信息&lt;xref:System.Type&gt;和正封送的对象类，一个 URI，唯一标识的特定对象实例和通信相关的有关如何访问该对象所在的远程处理分支的信息。&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>During marshaling, the context from the current thread is used, not the context that was active when the object was created.</source>
          <target state="translated">在封送处理，使用从当前线程的上下文，但不是用上下文，处于活动状态时创建对象时。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</source>
          <target state="translated">无法将一个 URI 与代理关联的两个原因之一︰ 在它表示的对象的服务器端生成了 URI 或该对象是众所周知的 URI 在此情况下为已知。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>For this reason, if the <ph id="ph1">`Obj`</ph> parameter is a proxy, an exception will be thrown.</source>
          <target state="translated">因此，如果<ph id="ph1">`Obj`</ph>参数是一个代理，将引发异常。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</source>
          <target state="translated">自定义代理的此限制是很宽松，因为透明代理将被视为该服务器对象。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
          <target state="translated">要转换的对象。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The specified URI with which to initialize the new <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定的 URI 来初始化新<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that represents the object specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">Obj</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">实例<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示中指定的对象的类<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">Obj</ph> <ept id="p2">&lt;/code&gt;</ept>参数。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Obj&lt;/code&gt;</ph> is an object proxy, and the <ph id="ph2">&lt;code&gt;URI&lt;/code&gt;</ph> parameter is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Obj&lt;/code&gt;</ph>是一个对象代理，和<ph id="ph2">&lt;code&gt;URI&lt;/code&gt;</ph>参数不是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">至少一个调用堆栈中较高的调用方没有权限来配置远程处理类型和信道。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Takes a <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and converts it into an instance of the <bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class with the specified URI, and the provided &lt;xref:System.Type&gt;.</source>
          <target state="translated">采用<bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并将其转换到的实例<bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>类，该类具有指定的 URI，并提供&lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;是用于跨应用程序域边界传输对象引用的对象的可序列化表示。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">创建&lt;xref:System.Runtime.Remoting.ObjRef&gt;的对象称为封送处理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;可以通过信道传输到另一个应用程序域 （可能在另一个进程或计算机）。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">在其他应用程序域中一次&lt;xref:System.Runtime.Remoting.ObjRef&gt;必须对其进行分析以创建对象，通常连接到真实的对象的代理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">此操作称为取消封送。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;包含描述信息&lt;xref:System.Type&gt;和正封送的对象类，一个 URI，唯一标识的特定对象实例和通信相关的有关如何访问该对象所在的远程处理分支的信息。&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The specified &lt;xref:System.Type&gt; is used by the remoting infrastructure to limit the scope of the exposed type hierarchy.</source>
          <target state="translated">指定&lt;xref:System.Type&gt;远程处理基础结构用于限制公开的类型层次结构的作用域。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>For example, if object A derives from object B, which derives from object C, and &lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt; is called, then the client can cast the proxy between C and B but not to A.       During marshaling, the context from the current thread is used, not the context that was active when the object was created.</source>
          <target state="translated">例如，如果对象 A 派生自对象 B，后者派生自对象 C，并且调用了&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;，然后客户端可以强制转换代理 C 和 B 之间但不是到 a。      封送处理，期间使用从当前线程的上下文时，不是用上下文，处于活动状态时创建对象时。&lt;/xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</source>
          <target state="translated">无法将一个 URI 与代理关联的两个原因之一︰ 在它表示的对象的服务器端生成了 URI 或该对象是众所周知的 URI 在此情况下为已知。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For this reason, if the <ph id="ph1">`Obj`</ph> parameter is a proxy, an exception will be thrown.</source>
          <target state="translated">因此，如果<ph id="ph1">`Obj`</ph>参数是一个代理，将引发异常。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</source>
          <target state="translated">自定义代理的此限制是很宽松，因为透明代理将被视为该服务器对象。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The object to convert into a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要转换为对象<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The URI the object specified in the <ph id="ph1">`Obj`</ph> parameter is marshaled with.</source>
          <target state="translated">URI 中指定的对象<ph id="ph1">`Obj`</ph>与封送参数。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt;<ph id="ph1">`Obj`</ph> is marshaled as.</source>
          <target state="translated">&lt;xref:System.Type&gt;<ph id="ph1">`Obj`</ph>作为封送。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that represents the object specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">Obj</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">实例<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示中指定的对象的类<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">Obj</ph> <ept id="p2">&lt;/code&gt;</ept>参数。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Obj&lt;/code&gt;</ph> is a proxy of a remote object, and the <ph id="ph2">&lt;code&gt;ObjUri&lt;/code&gt;</ph> parameter is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Obj&lt;/code&gt;</ph>为远程对象的代理和<ph id="ph2">&lt;code&gt;ObjUri&lt;/code&gt;</ph>参数不是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">至少一个调用堆栈中较高的调用方没有权限来配置远程处理类型和信道。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Sets the URI for the subsequent call to the &lt;xref:System.Runtime.Remoting.RemotingServices.Marshal*&gt; method.</source>
          <target state="translated">设置后续调用的 URI&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal*&gt;方法。&lt;/xref:System.Runtime.Remoting.RemotingServices.Marshal*&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The object to set a URI for.</source>
          <target state="translated">要设置的 URI 的对象。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The URI to assign to the specified object.</source>
          <target state="translated">要将分配给指定的对象的 URI。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> is not a local object, has already been marshaled, or the current method has already been called on.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph>不是本地对象被封送，或已在调用当前方法。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">至少一个调用堆栈中较高的调用方没有权限来配置远程处理类型和信道。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Takes a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and creates a proxy object out of it.</source>
          <target state="translated">采用<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并创建代理对象退出。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;是用于跨应用程序域边界传输对象引用的对象的可序列化表示。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">创建&lt;xref:System.Runtime.Remoting.ObjRef&gt;的对象称为封送处理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;可以通过信道传输到另一个应用程序域 （可能在另一个进程或计算机）。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">在其他应用程序域中一次&lt;xref:System.Runtime.Remoting.ObjRef&gt;必须对其进行分析以创建对象，通常连接到真实的对象的代理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">此操作称为取消封送。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>During unmarshaling, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is parsed to extract the method information of the remote object and both the transparent proxy and &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; objects are created.</source>
          <target state="translated">在取消封送，&lt;xref:System.Runtime.Remoting.ObjRef&gt;进行分析，以提取远程对象和透明的代理的方法信息和&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;创建对象。&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The content of the parsed &lt;xref:System.Runtime.Remoting.ObjRef&gt; is added to the transparent proxy before the transparent proxy is registered with the common language runtime.</source>
          <target state="translated">已分析的内容&lt;xref:System.Runtime.Remoting.ObjRef&gt;之前向公共语言运行时注册透明代理添加到透明的代理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;包含描述信息&lt;xref:System.Type&gt;和正封送的对象类，一个 URI，唯一标识的特定对象实例和通信相关的有关如何访问该对象所在的远程处理分支的信息。&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the remote object for which the proxy is being created.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示为其创建代理的远程对象。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A proxy to the object that the given <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents.</source>
          <target state="translated">对象的代理，给定<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">objectRef</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not well-formed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中指定的实例<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">objectRef</ph> <ept id="p2">&lt;/code&gt;</ept>参数不是格式正确。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">至少一个调用堆栈中较高的调用方没有权限来配置远程处理类型和信道。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Takes a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and creates a proxy object out of it, refining it to the type on the server.</source>
          <target state="translated">采用<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并创建代理对象外，优化到服务器上的类型。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;是用于跨应用程序域边界传输对象引用的对象的可序列化表示。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">创建&lt;xref:System.Runtime.Remoting.ObjRef&gt;的对象称为封送处理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;可以通过信道传输到另一个应用程序域 （可能在另一个进程或计算机）。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">在其他应用程序域中一次&lt;xref:System.Runtime.Remoting.ObjRef&gt;必须对其进行分析以创建对象，通常连接到真实的对象的代理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">此操作称为取消封送。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>During unmarshaling, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is parsed to extract the method information of the remote object and both the transparent proxy and &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; objects are created.</source>
          <target state="translated">在取消封送，&lt;xref:System.Runtime.Remoting.ObjRef&gt;进行分析，以提取远程对象和透明的代理的方法信息和&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;创建对象。&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The content of the parsed &lt;xref:System.Runtime.Remoting.ObjRef&gt; is added to the transparent proxy before the transparent proxy is registered with the common language runtime.</source>
          <target state="translated">已分析的内容&lt;xref:System.Runtime.Remoting.ObjRef&gt;之前向公共语言运行时注册透明代理添加到透明的代理。&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A&lt;xref:System.Runtime.Remoting.ObjRef&gt;包含描述信息&lt;xref:System.Type&gt;和正封送的对象类，一个 URI，唯一标识的特定对象实例和通信相关的有关如何访问该对象所在的远程处理分支的信息。&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>When first created, the proxy is of type &lt;xref:System.MarshalByRefObject&gt;.</source>
          <target state="translated">代理时第一次创建，属于类型&lt;xref:System.MarshalByRefObject&gt;.&lt;/xref:System.MarshalByRefObject&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>As you cast it into different types, the remoting infrastructure keeps track of the most used type to avoid loading the type unnecessarily.</source>
          <target state="translated">如将其转换为不同类型时，远程处理基础结构将跟踪的最常用的类型，以避免不必要地加载该类型。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the remote object for which the proxy is being created.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示为其创建代理的远程对象。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to refine the proxy to the type on the server; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>以优化该代理与服务器; 上的类型否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A proxy to the object that the given <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents.</source>
          <target state="translated">对象的代理，给定<bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">objectRef</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not well-formed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中指定的实例<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">objectRef</ph> <ept id="p2">&lt;/code&gt;</ept>参数不是格式正确。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">至少一个调用堆栈中较高的调用方没有权限来配置远程处理类型和信道。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>