<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5aba493f3f0d1b84832e58cc36d4c420123e3425</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.FileStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6b779ddf48b648093391e747173b25ab39c9e1e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74610b6181414f7dfec1e1faba93b1f65c9de4ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a &lt;xref:System.IO.Stream&gt; for a file, supporting both synchronous and asynchronous read and write operations.</source>
          <target state="translated">提供&lt;xref:System.IO.Stream&gt;文件，程序支持同步和异步读取和写入操作。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/io/filestream.cs#e23a38af5d11ddd3)</ept>.</source>
          <target state="translated">若要浏览此类型的.NET Framework 源代码，请参阅<bpt id="p1">[</bpt>引用源<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/io/filestream.cs#e23a38af5d11ddd3)</ept>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为指定的文件句柄，使用指定的读/写权限的类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.IO.Stream.Close%2A&gt; is called, the handle is also closed and the file's handle count is decremented.</source>
          <target state="translated">当&lt;xref:System.IO.Stream.Close%2A&gt;是调用，还关闭此句柄和文件的句柄计数会递减。&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>假定它具有对该句柄的独有控制。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">读取、 写入或查找时<ph id="ph1">`FileStream`</ph>也持有句柄可能会导致数据损坏。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">为了数据安全，调用&lt;xref:System.IO.FileStream.Flush%2A&gt;之前使用该句柄，并避免之外调用任何方法<ph id="ph1">`Close`</ph>完成后使用此句柄。&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能不是可解释，而且可能会导致引发异常。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>默认值为那些&lt;xref:System.IO.FileStream&gt;构造函数，而无需<ph id="ph2">`FileShare`</ph>参数。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">文件的文件句柄的当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，用于设置&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a field of <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>不是字段<bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">出现 I/O 错误，例如磁盘错误发生。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求为指定的文件句柄，例如，当操作系统不允许使用<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept>是<bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>或<bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>并的文件句柄设置为只读访问。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为指定的文件句柄，使用指定的读/写权限的类。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.IO.Stream.Close%2A&gt; is called, the handle is also closed and the file's handle count is decremented.</source>
          <target state="translated">当&lt;xref:System.IO.Stream.Close%2A&gt;是调用，还关闭此句柄和文件的句柄计数会递减。&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>假定它具有对该句柄的独有控制。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">读取、 写入或查找时<ph id="ph1">`FileStream`</ph>也持有句柄可能会导致数据损坏。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">为了数据安全，调用&lt;xref:System.IO.FileStream.Flush%2A&gt;之前使用该句柄，并避免之外调用任何方法<ph id="ph1">`Close`</ph>完成后使用此句柄。&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能不是可解释，而且可能会导致引发异常。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>默认值为那些&lt;xref:System.IO.FileStream&gt;构造函数，而无需<ph id="ph2">`FileShare`</ph>参数。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">文件的文件句柄的当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，用于设置&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a field of <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>不是字段<bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">出现 I/O 错误，例如磁盘错误发生。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求为指定的文件句柄，例如，当操作系统不允许使用<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept>是<bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>或<bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>并的文件句柄设置为只读访问。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path and creation mode.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的路径和创建模式的类。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">该文件的相对或绝对路径，当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">一个常数，确定如何打开或创建文件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>为空字符串 ("")，仅包含空格，或包含一个或多个无效字符。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，NTFS 环境中的等。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，等非 NTFS 环境中的。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">无法找到该文件，例如，当<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和指定的文件<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">该文件必须以这些模式存在。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">出现 I/O 错误，例如，指定<bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept>已存在，出现错误。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和 / 或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>包含无效值。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission, and buffer size.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为指定的文件句柄，使用指定的读/写权限、 类和缓冲区大小。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>假定它具有对该句柄的独有控制。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">读取、 写入或查找时<ph id="ph1">`FileStream`</ph>也持有句柄可能会导致数据损坏。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">为了数据安全，调用&lt;xref:System.IO.FileStream.Flush%2A&gt;之前使用该句柄，并避免之外调用任何方法<ph id="ph1">`Close`</ph>完成后使用此句柄。&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">或者，对读取和写入句柄之前调用此<ph id="ph1">`FileStream`</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>默认值为那些&lt;xref:System.IO.FileStream&gt;构造函数，而无需<ph id="ph2">`FileShare`</ph>参数。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能不是可解释，而且可能会导致引发异常。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">文件的文件句柄的当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p2">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p2">*</ept>&gt; properties of the <bpt id="p3">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>常数，用于设置&lt;&gt; <bpt id="p2">*</bpt>1&gt; 和&lt;&gt; <ept id="p2">*</ept>1&gt; 属性<bpt id="p3">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">一个值为正&lt;xref:System.Int32&gt;值大于 0，表示缓冲区大小。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">默认缓冲区大小为 4096。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handle</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an invalid handle.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handle</ph> <ept id="p1">&lt;/code&gt;</ept>参数是无效的句柄。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handle</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a synchronous handle and it was used asynchronously.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handle</ph> <ept id="p1">&lt;/code&gt;</ept>参数是同步句柄，但被异步使用。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bufferSize</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bufferSize</ph> <ept id="p1">&lt;/code&gt;</ept>参数是负数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">出现 I/O 错误，例如磁盘错误发生。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求为指定的文件句柄，例如，当操作系统不允许使用<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept>是<bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>或<bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>并的文件句柄设置为只读访问。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission and <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance ownership.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为指定的文件句柄，使用指定的读/写权限的类和<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例所属权。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified access to the file.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>对象为文件指定指定的访问权限。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The ownership of the handle will be as specified.</source>
          <target state="translated">句柄的所有权将按指定方式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If this process owns the handle, a call to the &lt;xref:System.IO.Stream.Close%2A&gt; method will also close the handle and the file's handle count is decremented.</source>
          <target state="translated">如果此进程拥有句柄调用&lt;xref:System.IO.Stream.Close%2A&gt;方法也将关闭句柄和文件的句柄计数会递减。&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the default buffer size of 4096 bytes.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>对象都提供了默认缓冲区大小 （4096 字节）。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>假定它具有对该句柄的独有控制。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">读取、 写入或查找时<ph id="ph1">`FileStream`</ph>也持有句柄可能会导致数据损坏。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">为了数据安全，调用&lt;xref:System.IO.FileStream.Flush%2A&gt;之前使用该句柄，并避免调用的方法以外<ph id="ph1">`Close`</ph>完成后使用此句柄。&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>默认值为那些&lt;xref:System.IO.FileStream&gt;构造函数，而无需<ph id="ph2">`FileShare`</ph>参数。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能不是可解释，而且可能会导致引发异常。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">文件的文件句柄的当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，用于设置&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the file handle will be owned by this <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果文件句柄将由此拥有<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a field of <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>不是字段<bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">出现 I/O 错误，例如磁盘错误发生。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求为指定的文件句柄，例如，当操作系统不允许使用<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept>是<bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>或<bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>并的文件句柄设置为只读访问。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, and read/write permission.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的路径、 创建模式和读/写权限。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">该文件的相对或绝对路径，当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">一个常数，确定如何打开或创建文件。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，确定如何通过访问文件<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">这也确定返回的值&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph1">`path`</ph>指定磁盘文件。&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>为空字符串 ("")，仅包含空格，或包含一个或多个无效字符。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，NTFS 环境中的等。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，等非 NTFS 环境中的。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">无法找到该文件，例如，当<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和指定的文件<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">该文件必须以这些模式存在。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">出现 I/O 错误，例如，指定<bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept>已存在，出现错误。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求不允许使用指定操作系统<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>，例如，当<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept>是<bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>或<bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>和文件或目录设置为只读访问。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和 / 或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>包含无效值。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission, buffer size, and synchronous or asynchronous state.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为指定的文件句柄，使用指定的读/写权限、 缓冲区大小和同步或异步状态的类。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>You set the <ph id="ph1">`isAsync`</ph> parameter to <ph id="ph2">`true`</ph> to open the file handle asynchronously.</source>
          <target state="translated">你设置<ph id="ph1">`isAsync`</ph>参数<ph id="ph2">`true`</ph>以异步方式打开的文件句柄。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When the parameter is <ph id="ph1">`true`</ph>, the stream utilizes overlapped I/O to perform file operations asynchronously.</source>
          <target state="translated">当该参数是<ph id="ph1">`true`</ph>，流利用重叠的 I/O，异步执行文件操作。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>However, the parameter does not have to be <ph id="ph1">`true`</ph> to call the &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, or &lt;xref:System.IO.Stream.CopyToAsync%2A&gt; method.</source>
          <target state="translated">但是，该参数不一定要<ph id="ph1">`true`</ph>调用&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;， &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;，或&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;方法。&lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`isAsync`</ph> parameter is <ph id="ph2">`false`</ph> and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</source>
          <target state="translated">当<ph id="ph1">`isAsync`</ph>参数是<ph id="ph2">`false`</ph>和调用异步读取和写入操作，仍未被阻止 UI 线程、，但同步执行实际的 I/O 操作。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>假定它具有对该句柄的独有控制。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">读取、 写入或查找时<ph id="ph1">`FileStream`</ph>也持有句柄可能会导致数据损坏。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">为了数据安全，调用&lt;xref:System.IO.FileStream.Flush%2A&gt;之前使用该句柄，并避免之外调用任何方法<ph id="ph1">`Close`</ph>完成后使用此句柄。&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">或者，对读取和写入句柄之前调用此<ph id="ph1">`FileStream`</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>默认值为那些&lt;xref:System.IO.FileStream&gt;构造函数，而无需<ph id="ph2">`FileShare`</ph>参数。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能不是可解释，而且可能会导致引发异常。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A file handle for the file that this <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">文件的文件句柄此<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，用于设置&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">一个值为正&lt;xref:System.Int32&gt;值大于 0，表示缓冲区大小。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">默认缓冲区大小为 4096。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果异步打开句柄 （即以重叠的 I/O 模式）;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handle</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an invalid handle.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handle</ph> <ept id="p1">&lt;/code&gt;</ept>参数是无效的句柄。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handle</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a synchronous handle and it was used asynchronously.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handle</ph> <ept id="p1">&lt;/code&gt;</ept>参数是同步句柄，但被异步使用。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bufferSize</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bufferSize</ph> <ept id="p1">&lt;/code&gt;</ept>参数是负数。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">出现 I/O 错误，例如磁盘错误发生。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求为指定的文件句柄，例如，当操作系统不允许使用<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept>是<bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>或<bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>并的文件句柄设置为只读访问。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission, <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance ownership, and buffer size.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为指定的文件句柄，使用指定的读/写权限、 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>实例所属权和缓冲区大小。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified access to the file.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>对象为文件指定指定的访问权限。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The ownership of the handle will be as specified.</source>
          <target state="translated">句柄的所有权将按指定方式。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If this <ph id="ph1">`FileStream`</ph> owns the handle, a call to the &lt;xref:System.IO.Stream.Close%2A&gt; method will also close the handle.</source>
          <target state="translated">如果此<ph id="ph1">`FileStream`</ph>拥有句柄，调用&lt;xref:System.IO.Stream.Close%2A&gt;方法也将关闭句柄。&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>In particular, the file's handle count is decremented.</source>
          <target state="translated">具体而言，该文件的句柄计数会递减。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified buffer size.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>对象都提供了指定的缓冲区大小。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>假定它具有对该句柄的独有控制。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">读取、 写入或查找时<ph id="ph1">`FileStream`</ph>也持有句柄可能会导致数据损坏。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">为了数据安全，调用&lt;xref:System.IO.FileStream.Flush%2A&gt;之前使用该句柄，并避免之外调用任何方法<ph id="ph1">`Close`</ph>完成后使用此句柄。&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">或者，对读取和写入句柄之前调用此<ph id="ph1">`FileStream`</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>默认值为那些&lt;xref:System.IO.FileStream&gt;构造函数，而无需<ph id="ph2">`FileShare`</ph>参数。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能不是可解释，而且可能会导致引发异常。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A file handle for the file that this <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">文件的文件句柄此<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，用于设置&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the file handle will be owned by this <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果文件句柄将由此拥有<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">一个值为正&lt;xref:System.Int32&gt;值大于 0，表示缓冲区大小。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">默认缓冲区大小为 4096。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>为负数。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">出现 I/O 错误，例如磁盘错误发生。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求为指定的文件句柄，例如，当操作系统不允许使用<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept>是<bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>或<bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>并的文件句柄设置为只读访问。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, read/write permission, and sharing permission.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的路径、 创建模式、 读/写权限和共享权限的类。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">该文件的相对或绝对路径，当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">一个常数，确定如何打开或创建文件。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，确定如何通过访问文件<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">这也确定返回的值&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph1">`path`</ph>指定磁盘文件。&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">一个常数，确定将如何由进程共享文件。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>为空字符串 ("")，仅包含空格，或包含一个或多个无效字符。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，NTFS 环境中的等。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，等非 NTFS 环境中的。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">无法找到该文件，例如，当<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和指定的文件<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">该文件必须以这些模式存在。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">出现 I/O 错误，例如，指定<bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept>已存在，出现错误。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>-or-       The system is running Windows 98 or Windows 98 Second Edition and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">share</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-或-系统正在运行 Windows 98 或 Windows 98 Second Edition 和<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">share</ph> <ept id="p1">&lt;/code&gt;</ept>设置为<bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求不允许使用指定操作系统<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>，例如，当<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept>是<bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>或<bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>和文件或目录设置为只读访问。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和 / 或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>包含无效值。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission, <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance ownership, buffer size, and synchronous or asynchronous state.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为指定的文件句柄，使用指定的读/写权限、 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>实例所属权、 缓冲区大小和同步或异步状态。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified access to the file.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>对象为文件指定指定的访问权限。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The ownership of the handle will be as specified.</source>
          <target state="translated">句柄的所有权将按指定方式。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If this <ph id="ph1">`FileStream`</ph> owns the handle, a call to the &lt;xref:System.IO.Stream.Close%2A&gt; method will also close the handle.</source>
          <target state="translated">如果此<ph id="ph1">`FileStream`</ph>拥有句柄，调用&lt;xref:System.IO.Stream.Close%2A&gt;方法也将关闭句柄。&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>In particular, the file's handle count is decremented.</source>
          <target state="translated">具体而言，该文件的句柄计数会递减。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified buffer size.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>对象都提供了指定的缓冲区大小。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>假定它具有对该句柄的独有控制。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">读取、 写入或查找时<ph id="ph1">`FileStream`</ph>也持有句柄可能会导致数据损坏。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">为了数据安全，调用&lt;xref:System.IO.FileStream.Flush%2A&gt;之前使用该句柄，并避免之外调用任何方法<ph id="ph1">`Close`</ph>完成后使用此句柄。&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">或者，对读取和写入句柄之前调用此<ph id="ph1">`FileStream`</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>默认值为那些&lt;xref:System.IO.FileStream&gt;构造函数，而无需<ph id="ph2">`FileShare`</ph>参数。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能不是可解释，而且可能会导致引发异常。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A file handle for the file that this <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">文件的文件句柄此<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，用于设置&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the file handle will be owned by this <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果文件句柄将由此拥有<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">一个值为正&lt;xref:System.Int32&gt;值大于 0，表示缓冲区大小。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">默认缓冲区大小为 4096。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果异步打开句柄 （即以重叠的 I/O 模式）;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is less than <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Read" name="FileAccess.Read" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or greater than <bpt id="p2">&lt;xref uid="langword_csharp_FileAccess.ReadWrite" name="FileAccess.ReadWrite" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>是小于<bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Read" name="FileAccess.Read" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或大于<bpt id="p2">&lt;xref uid="langword_csharp_FileAccess.ReadWrite" name="FileAccess.ReadWrite" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<ph id="ph2">&lt;code&gt;bufferSize&lt;/code&gt;</ph>小于或等于 0。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The handle is invalid.</source>
          <target state="translated">句柄无效。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">出现 I/O 错误，例如磁盘错误发生。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求为指定的文件句柄，例如，当操作系统不允许使用<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept>是<bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>或<bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>并的文件句柄设置为只读访问。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, read/write and sharing permission, and buffer size.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的路径、 创建模式、 读/写和共享权限和缓冲区大小。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">该文件的相对或绝对路径，当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">一个常数，确定如何打开或创建文件。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，确定如何通过访问文件<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">这也确定返回的值&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph1">`path`</ph>指定磁盘文件。&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">一个常数，确定将如何由进程共享文件。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">一个值为正&lt;xref:System.Int32&gt;值大于 0，表示缓冲区大小。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">默认缓冲区大小为 4096。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>为空字符串 ("")，仅包含空格，或包含一个或多个无效字符。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，NTFS 环境中的等。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，等非 NTFS 环境中的。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>为负数或零。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>， <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>，或<ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph>包含无效的值。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">无法找到该文件，例如，当<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和指定的文件<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">该文件必须以这些模式存在。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">出现 I/O 错误，例如，指定<bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept>已存在，出现错误。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>-or-       The system is running Windows 98 or Windows 98 Second Edition and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">share</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-或-系统正在运行 Windows 98 或 Windows 98 Second Edition 和<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">share</ph> <ept id="p1">&lt;/code&gt;</ept>设置为<bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求不允许使用指定操作系统<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>，例如，当<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept>是<bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>或<bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>和文件或目录设置为只读访问。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和 / 或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, read/write and sharing permission, buffer size, and synchronous or asynchronous state.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的路径、 创建模式、 读/写和共享权限、 缓冲区大小和同步或异步状态。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">该文件的相对或绝对路径，当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">一个常数，确定如何打开或创建文件。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，确定如何通过访问文件<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">这也确定返回的值&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph1">`path`</ph>指定磁盘文件。&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">一个常数，确定将如何由进程共享文件。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">一个值为正&lt;xref:System.Int32&gt;值大于 0，表示缓冲区大小。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096..</source>
          <target state="translated">默认缓冲区大小为 4096...</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Specifies whether to use asynchronous I/O or synchronous I/O.</source>
          <target state="translated">指定是否使用异步 I/O 还是同步 I/O。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>However, note that the underlying operating system might not support asynchronous I/O, so when specifying <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the handle might be opened synchronously depending on the platform.</source>
          <target state="translated">但请注意，基础操作系统可能不支持异步 I/O，因此在指定<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，句柄可能同步打开因平台而异。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>When opened asynchronously, the &lt;xref:System.IO.FileStream.BeginRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.BeginWrite<ept id="p1">*</ept>&gt; methods perform better on large reads or writes, but they might be much slower for small reads or writes.</source>
          <target state="translated">以异步方式打开时&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 方法更好地执行大量读或写操作，但它们可能要慢得多对于少量的读 / 写。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>If the application is designed to take advantage of asynchronous I/O, set the <ph id="ph1">`useAsync`</ph> parameter to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果应用程序打算利用异步 I/O，设置<ph id="ph1">`useAsync`</ph>参数<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Using asynchronous I/O correctly can speed up applications by as much as a factor of 10, but using it without redesigning the application for asynchronous I/O can decrease performance by as much as a factor of 10.</source>
          <target state="translated">正确使用异步 I/O 可以加快应用程序尽可能系数为 10，但使用它而无需重新设计的应用程序异步 I/O 可以使性能降低尽可能多的 10 倍。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>为空字符串 ("")，仅包含空格，或包含一个或多个无效字符。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，NTFS 环境中的等。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，等非 NTFS 环境中的。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>为负数或零。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>， <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>，或<ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph>包含无效的值。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">无法找到该文件，例如，当<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和指定的文件<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">该文件必须以这些模式存在。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">出现 I/O 错误，例如，指定<bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept>已存在，出现错误。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>-or-       The system is running Windows 98 or Windows 98 Second Edition and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">share</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-或-系统正在运行 Windows 98 或 Windows 98 Second Edition 和<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">share</ph> <ept id="p1">&lt;/code&gt;</ept>设置为<bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求不允许使用指定操作系统<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>，例如，当<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept>是<bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>或<bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>和文件或目录设置为只读访问。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和 / 或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, read/write and sharing permission, the access other FileStreams can have to the same file, the buffer size, and additional file options.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类指定的路径、 创建模式、 读/写和共享权限、 访问其他 FileStreams 可以具有相同的文件、 缓冲区大小和附加文件选项。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">该文件的相对或绝对路径，当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">一个常数，确定如何打开或创建文件。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个常数，确定如何通过访问文件<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">这也确定返回的值&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 属性<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph1">`path`</ph>指定磁盘文件。&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">一个常数，确定将如何由进程共享文件。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">一个值为正&lt;xref:System.Int32&gt;值大于 0，表示缓冲区大小。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">默认缓冲区大小为 4096。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A value that specifies additional file options.</source>
          <target state="translated">一个值，指定附加文件选项。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>为空字符串 ("")，仅包含空格，或包含一个或多个无效字符。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，NTFS 环境中的等。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，等非 NTFS 环境中的。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>为负数或零。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>， <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>，或<ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph>包含无效的值。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">无法找到该文件，例如，当<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和指定的文件<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">该文件必须以这些模式存在。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">出现 I/O 错误，例如，指定<bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept>已存在，出现错误。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求不允许使用指定操作系统<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>，例如，当<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept>是<bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>或<bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>和文件或目录设置为只读访问。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p2">&lt;/code&gt;</ept>, but file encryption is not supported on the current platform.</source>
          <target state="translated">- <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为指定<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">options</ph> <ept id="p2">&lt;/code&gt;</ept>，但在当前平台上不支持文件加密。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和 / 或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, access rights and sharing permission, the buffer size, and additional file options.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的路径、 创建模式、 访问权限和共享权限、 缓冲区大小和附加文件选项的类。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">该文件的相对或绝对路径，当前<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">一个常数，确定如何打开或创建文件。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A constant that determines the access rights to use when creating access and audit rules for the file.</source>
          <target state="translated">一个常数，确定创建文件的访问和审核规则时要使用的访问权限。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">一个常数，确定将如何由进程共享文件。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">一个值为正&lt;xref:System.Int32&gt;值大于 0，表示缓冲区大小。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">默认缓冲区大小为 4096。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>A constant that specifies additional file options.</source>
          <target state="translated">一个指定附加文件选项的常数。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>为空字符串 ("")，仅包含空格，或包含一个或多个无效字符。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，NTFS 环境中的等。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，等非 NTFS 环境中的。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>为负数或零。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>， <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>，或<ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph>包含无效的值。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">无法找到该文件，例如，当<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和指定的文件<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">该文件必须以这些模式存在。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">当前操作系统不是 Windows NT 或更高版本。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">出现 I/O 错误，例如，指定<bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept>已存在，出现错误。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求不允许使用指定操作系统<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>，例如，当<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept>是<bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>或<bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>和文件或目录设置为只读访问。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p2">&lt;/code&gt;</ept>, but file encryption is not supported on the current platform.</source>
          <target state="translated">- <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为指定<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">options</ph> <ept id="p2">&lt;/code&gt;</ept>，但在当前平台上不支持文件加密。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>，和 / 或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, access rights and sharing permission, the buffer size, additional file options, access control and audit security.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的路径、 创建模式、 访问权限和共享权限、 缓冲区大小、 附加文件选项、 访问控制和审核安全。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">该文件的相对或绝对路径，当前<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">一个常数，确定如何打开或创建文件。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>A constant that determines the access rights to use when creating access and audit rules for the file.</source>
          <target state="translated">一个常数，确定创建文件的访问和审核规则时要使用的访问权限。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">一个常数，确定将如何由进程共享文件。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">一个值为正&lt;xref:System.Int32&gt;值大于 0，表示缓冲区大小。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">默认缓冲区大小为 4096。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>A constant that specifies additional file options.</source>
          <target state="translated">一个指定附加文件选项的常数。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A constant that determines the access control and audit security for the file.</source>
          <target state="translated">一个常数，确定访问控制和审核对文件的安全。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>为空字符串 ("")，仅包含空格，或包含一个或多个无效字符。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，NTFS 环境中的等。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>指非文件设备，如"con:"、"com1:"、"lpt1:"，等非 NTFS 环境中的。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>为负数或零。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>， <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>，或<ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph>包含无效的值。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">无法找到该文件，例如，当<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和指定的文件<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">该文件必须以这些模式存在。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">出现 I/O 错误，例如，指定<bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept>已存在，出现错误。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept>请求不允许使用指定操作系统<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>，例如，当<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept>是<bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>或<bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>和文件或目录设置为只读访问。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p2">&lt;/code&gt;</ept>, but file encryption is not supported on the current platform.</source>
          <target state="translated">- <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为指定<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">options</ph> <ept id="p2">&lt;/code&gt;</ept>，但在当前平台上不支持文件加密。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>，和 / 或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">当前操作系统不是 Windows NT 或更高版本。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">开始异步读的操作。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.FileStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(考虑使用&lt;xref:System.IO.FileStream.ReadAsync*&gt;替换; 请参见备注部分。)&lt;/xref:System.IO.FileStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as BeginRead and &lt;xref:System.IO.FileStream.EndRead%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">在.NET Framework 4 和更早版本中，你必须使用方法，如 BeginRead 和&lt;xref:System.IO.FileStream.EndRead%2A&gt;来实现异步文件操作。&lt;/xref:System.IO.FileStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, and &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">这些方法是在中仍然可用<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>以支持旧版代码; 但是，新的异步方法，如&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;， &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;， &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;，和&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;，帮助你更轻松地实现异步文件操作。&lt;/xref:System.IO.FileStream.FlushAsync%2A&gt; &lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.EndRead%2A&gt; must be called exactly once for every call to BeginRead.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.EndRead%2A&gt;必须为 BeginRead 每次调用一次调用。&lt;/xref:System.IO.FileStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">如果在开始另一个读取之前，结束读取的进程可能会导致意外行为，如死锁。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream&gt; provides two different modes of operation: synchronous I/O and asynchronous I/O.</source>
          <target state="translated">&lt;xref:System.IO.FileStream&gt;提供两个不同的操作模式︰ I/O 同步和异步 I/O。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>While either can be used, the underlying operating system resources might allow access in only one of these modes.</source>
          <target state="translated">尽管可以使用任一，基础的操作系统资源可能允许访问，只有其中一种模式中。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>By default, &lt;xref:System.IO.FileStream&gt; opens the operating system handle synchronously.</source>
          <target state="translated">默认情况下，&lt;xref:System.IO.FileStream&gt;同步打开的操作系统句柄。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>In Windows, this slows down asynchronous methods.</source>
          <target state="translated">在 Windows 中，这将降低异步方法。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>If asynchronous methods are used, use the &lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt; constructor.</source>
          <target state="translated">如果使用异步方法，使用&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;构造函数。&lt;/xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用&lt;xref:System.IO.FileStream.CanRead%2A&gt;属性来确定当前实例是否支持读取。&lt;/xref:System.IO.FileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanRead%2A&gt;.</source>
          <target state="translated">有关其他信息，请参阅&lt;xref:System.IO.Stream.CanRead%2A&gt;。&lt;/xref:System.IO.Stream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from BeginRead.</source>
          <target state="translated">如果流已关闭或传递了无效参数，将从 BeginRead 立即引发异常。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous read request, such as a disk failure during the IO request, occur on the thread pool thread and become visible upon a call to &lt;xref:System.IO.FileStream.EndRead%2A&gt;.</source>
          <target state="translated">异步读取请求，例如 IO 请求过程的磁盘故障过程中发生的错误发生在线程池线程和&lt;xref:System.IO.FileStream.EndRead%2A&gt;.&lt;/xref:System.IO.FileStream.EndRead%2A&gt;调用时变得可见</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Stream.EndRead%2A&gt; must be called with this &lt;xref:System.IAsyncResult&gt; to find out how many bytes were read.</source>
          <target state="translated">&lt;xref:System.IO.Stream.EndRead%2A&gt;必须与此调用&lt;xref:System.IAsyncResult&gt;若要了解已读取的字节。&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Stream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">多个同时进行的异步请求呈现请求完成顺序不确定。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The buffer to read data into.</source>
          <target state="translated">要将数据读入的缓冲区。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`array`</ph> at which to begin reading.</source>
          <target state="translated">中的字节偏移量<ph id="ph1">`array`</ph>从此处开始读取。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">最大读取的字节数。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The method to be called when the asynchronous read operation is completed.</source>
          <target state="translated">完成的异步读取操作时要调用的方法。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
          <target state="translated">用户提供的对象，用于区分此特定的异步读取请求与其他请求。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>An object that references the asynchronous read.</source>
          <target state="translated">引用异步读取的对象。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The array length minus <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> is less than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">numBytes</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">数组长度减去<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>是小于<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">numBytes</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;numBytes&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;numBytes&lt;/code&gt;</ph>为负。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>An asynchronous read was attempted past the end of the file.</source>
          <target state="translated">异步读取试图超出文件末尾。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">开始异步写操作。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.FileStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(考虑使用&lt;xref:System.IO.FileStream.WriteAsync*&gt;替换; 请参见备注部分。)&lt;/xref:System.IO.FileStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as BeginWrite and &lt;xref:System.IO.FileStream.EndWrite%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">在.NET Framework 4 和更早版本中，你必须使用方法，如调用和&lt;xref:System.IO.FileStream.EndWrite%2A&gt;来实现异步文件操作。&lt;/xref:System.IO.FileStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, and &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">这些方法是在中仍然可用<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>以支持旧版代码; 但是，新的异步方法，如&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;， &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;， &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;，和&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;，帮助你更轻松地实现异步文件操作。&lt;/xref:System.IO.FileStream.FlushAsync%2A&gt; &lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.EndWrite%2A&gt; must be called exactly once on every &lt;xref:System.IAsyncResult&gt; from BeginWrite.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;必须在上一次调用每个&lt;xref:System.IAsyncResult&gt;调用从。&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.FileStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.EndWrite%2A&gt; will block until the I/O operation has completed.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;将阻止，直到 I/O 操作已完成。&lt;/xref:System.IO.FileStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.BeginWrite%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.BeginWrite%2A&gt;.&lt;/xref:System.IO.Stream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream&gt; provides two different modes of operation: synchronous I/O and asynchronous I/O.</source>
          <target state="translated">&lt;xref:System.IO.FileStream&gt;提供两个不同的操作模式︰ I/O 同步和异步 I/O。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>While either can be used, the underlying operating system resources might allow access in only one of these modes.</source>
          <target state="translated">尽管可以使用任一，基础的操作系统资源可能允许访问，只有其中一种模式中。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>By default, &lt;xref:System.IO.FileStream&gt; opens the operating system handle synchronously.</source>
          <target state="translated">默认情况下，&lt;xref:System.IO.FileStream&gt;同步打开的操作系统句柄。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>In Windows, this slows down asynchronous methods.</source>
          <target state="translated">在 Windows 中，这将降低异步方法。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>If asynchronous methods are used, use the &lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt; constructor.</source>
          <target state="translated">如果使用异步方法，使用&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;构造函数。&lt;/xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from BeginWrite.</source>
          <target state="translated">如果流已关闭或传递了无效参数，将从调用立即引发异常。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the IO request, occur on the thread pool thread and become visible upon a call to &lt;xref:System.IO.FileStream.EndWrite%2A&gt;.</source>
          <target state="translated">异步写入请求，例如 IO 请求过程的磁盘故障过程中发生的错误发生在线程池线程和&lt;xref:System.IO.FileStream.EndWrite%2A&gt;.&lt;/xref:System.IO.FileStream.EndWrite%2A&gt;调用时变得可见</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">多个同时进行的异步请求呈现请求完成顺序不确定。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The buffer containing data to write to the current stream.</source>
          <target state="translated">包含要写入当前流数据的缓冲区。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`array`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">中的从零开始的字节偏移量<ph id="ph1">`array`</ph>从此处开始将字节复制到当前流。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">最大写入的字节数。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The method to be called when the asynchronous write operation is completed.</source>
          <target state="translated">异步写操作完成时调用的方法。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">一个用户提供的对象，它将此特定的异步写入请求与其他请求区别开来。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>An object that references the asynchronous write.</source>
          <target state="translated">引用异步写入一个对象。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> length minus <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> is less than <ph id="ph3">&lt;code&gt;numBytes&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>长度减去<ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph>是小于<ph id="ph3">&lt;code&gt;numBytes&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;numBytes&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;numBytes&lt;/code&gt;</ph>为负。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">流不支持写入。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">发生 I/O 错误。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">获取一个值，该值指示当前流是否支持读取。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support reading, calls to the &lt;xref:System.IO.FileStream.Read%2A&gt;, &lt;xref:System.IO.FileStream.ReadByte%2A&gt;, and &lt;xref:System.IO.FileStream.BeginRead%2A&gt; methods throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">如果从派生的类&lt;xref:System.IO.Stream&gt;不支持读取，则调用&lt;xref:System.IO.FileStream.Read%2A&gt;， &lt;xref:System.IO.FileStream.ReadByte%2A&gt;，和&lt;xref:System.IO.FileStream.BeginRead%2A&gt;方法将引发一种&lt;xref:System.NotSupportedException&gt;。&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.FileStream.BeginRead%2A&gt; &lt;/xref:System.IO.FileStream.ReadByte%2A&gt; &lt;/xref:System.IO.FileStream.Read%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果流已关闭，则此属性返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports reading; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with write-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果流支持读取;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果流已关闭或是通过只写访问方式打开。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">获取一个值，该值指示当前流是否支持查找。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support seeking, calls to &lt;xref:System.IO.FileStream.Length%2A&gt;, &lt;xref:System.IO.FileStream.SetLength%2A&gt;, &lt;xref:System.IO.FileStream.Position%2A&gt;, and &lt;xref:System.IO.FileStream.Seek%2A&gt; throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">如果从派生的类&lt;xref:System.IO.Stream&gt;不支持查找，则调用&lt;xref:System.IO.FileStream.Length%2A&gt;， &lt;xref:System.IO.FileStream.SetLength%2A&gt;， &lt;xref:System.IO.FileStream.Position%2A&gt;，并&lt;xref:System.IO.FileStream.Seek%2A&gt;引发一种&lt;xref:System.NotSupportedException&gt;。&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.FileStream.Seek%2A&gt; &lt;/xref:System.IO.FileStream.Position%2A&gt; &lt;/xref:System.IO.FileStream.SetLength%2A&gt; &lt;/xref:System.IO.FileStream.Length%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果流已关闭，则此属性返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports seeking; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or if the <bpt id="p3">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> was constructed from an operating-system handle such as a pipe or output to the console.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果流支持查找;，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果流已关闭，或如果<bpt id="p3">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>构造从操作系统句柄如管道或输出到控制台。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">获取一个值，该值指示当前流是否支持写入。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support writing, a call to &lt;xref:System.IO.FileStream.SetLength%2A&gt;, &lt;xref:System.IO.FileStream.Write%2A&gt;, &lt;xref:System.IO.FileStream.BeginWrite%2A&gt;, or &lt;xref:System.IO.FileStream.WriteByte%2A&gt; throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">如果从派生的类&lt;xref:System.IO.Stream&gt;不支持写入，调用&lt;xref:System.IO.FileStream.SetLength%2A&gt;， &lt;xref:System.IO.FileStream.Write%2A&gt;， &lt;xref:System.IO.FileStream.BeginWrite%2A&gt;，或&lt;xref:System.IO.FileStream.WriteByte%2A&gt;引发一种&lt;xref:System.NotSupportedException&gt;。&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.FileStream.WriteByte%2A&gt; &lt;/xref:System.IO.FileStream.BeginWrite%2A&gt; &lt;/xref:System.IO.FileStream.Write%2A&gt; &lt;/xref:System.IO.FileStream.SetLength%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果流已关闭，则此属性返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports writing; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果流支持写入，则<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果流已关闭或是通过只读访问方式打开。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.Component.Dispose%2A&gt; invokes the protected Dispose method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;调用与受保护的 Dispose 方法<ph id="ph1">`disposing`</ph>参数设置为<ph id="ph2">`true`</ph>。&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用与 Dispose<ph id="ph1">`disposing`</ph>设置为<ph id="ph2">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.IO.FileStream&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.IO.FileStream&gt;引用。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method of each referenced object.</source>
          <target state="translated">此方法调用&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;每个引用对象的方法。&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Waits for the pending asynchronous read operation to complete.</source>
          <target state="translated">等待挂起的异步读取操作完成。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.FileStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(考虑使用&lt;xref:System.IO.FileStream.ReadAsync*&gt;替换; 请参见备注部分。)&lt;/xref:System.IO.FileStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.FileStream.BeginRead%2A&gt; and EndRead to implement asynchronous file operations.</source>
          <target state="translated">在.NET Framework 4 和更早版本中，你必须使用方法，如&lt;xref:System.IO.FileStream.BeginRead%2A&gt;和 EndRead 来实现异步文件操作。&lt;/xref:System.IO.FileStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, and &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">这些方法是在中仍然可用<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>以支持旧版代码; 但是，新的异步方法，如&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;， &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;， &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;，和&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;，帮助你更轻松地实现异步文件操作。&lt;/xref:System.IO.FileStream.FlushAsync%2A&gt; &lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>EndRead must be called exactly for every call to &lt;xref:System.IO.FileStream.BeginRead%2A&gt;.</source>
          <target state="translated">必须正好为&lt;xref:System.IO.FileStream.BeginRead%2A&gt;.&lt;/xref:System.IO.FileStream.BeginRead%2A&gt;每次调用调用 EndRead</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">如果在开始另一个读取之前，结束读取的进程可能会导致意外行为，如死锁。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.EndRead%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.EndRead%2A&gt;.&lt;/xref:System.IO.Stream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>EndRead can be called on every &lt;xref:System.IAsyncResult&gt; from &lt;xref:System.IO.FileStream.BeginRead%2A&gt;.</source>
          <target state="translated">可以对每个&lt;xref:System.IAsyncResult&gt;&lt;xref:System.IO.FileStream.BeginRead%2A&gt;。&lt;/xref:System.IO.FileStream.BeginRead%2A&gt;&lt;/xref:System.IAsyncResult&gt;调用 EndRead</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Calling EndRead tells you how many bytes were read from the stream.</source>
          <target state="translated">调用 EndRead 告知你已从流中读取字节数。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>EndRead will block until the I/O operation has completed.</source>
          <target state="translated">EndRead 将阻止，直到 I/O 操作已完成。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The reference to the pending asynchronous request to wait for.</source>
          <target state="translated">对要等待的挂起异步请求的引用。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The number of bytes read from the stream, between 0 and the number of bytes you requested.</source>
          <target state="translated">从流，介于 0 和你请求的字节数之间中读取的字节数。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Streams only return 0 at the end of the stream, otherwise, they should block until at least 1 byte is available.</source>
          <target state="translated">流仅返回在流末尾的 0，否则，它们应一直进行阻止至少 1 个字节可用。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.FileStream.BeginRead*&gt; on this class.</source>
          <target state="translated">此&lt;xref:System.IAsyncResult&gt;对象不通过调用&lt;xref:System.IO.FileStream.BeginRead*&gt;此类&lt;/xref:System.IO.FileStream.BeginRead*&gt;创建&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>EndRead is called multiple times.</source>
          <target state="translated">多次调用 EndRead。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">流已关闭或出现内部错误。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation and blocks until the I/O operation is complete.</source>
          <target state="translated">结束异步写操作和块，直到 I/O 操作已完成。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.FileStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(考虑使用&lt;xref:System.IO.FileStream.WriteAsync*&gt;替换; 请参见备注部分。)&lt;/xref:System.IO.FileStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.FileStream.BeginWrite%2A&gt; and EndWrite to implement asynchronous file operations.</source>
          <target state="translated">在.NET Framework 4 和更早版本中，你必须使用方法，如&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;和 EndWrite 来实现异步文件操作。&lt;/xref:System.IO.FileStream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, and &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">这些方法是在中仍然可用<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>以支持旧版代码; 但是，新的异步方法，如&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;， &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;， &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;，和&lt;xref:System.IO.FileStream.FlushAsync%2A&gt;，帮助你更轻松地实现异步文件操作。&lt;/xref:System.IO.FileStream.FlushAsync%2A&gt; &lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.EndWrite%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.EndWrite%2A&gt;.&lt;/xref:System.IO.Stream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>EndWrite must be called exactly once on every &lt;xref:System.IAsyncResult&gt; from &lt;xref:System.IO.FileStream.BeginWrite%2A&gt;.</source>
          <target state="translated">必须在每个&lt;xref:System.IAsyncResult&gt;&lt;xref:System.IO.FileStream.BeginWrite%2A&gt;.&lt;/xref:System.IO.FileStream.BeginWrite%2A&gt;从&lt;/xref:System.IAsyncResult&gt;上一次调用 EndWrite</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>EndWrite will block until the I/O operation has completed.</source>
          <target state="translated">EndWrite 将阻止，直到 I/O 操作已完成。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The pending asynchronous I/O request.</source>
          <target state="translated">挂起的异步 I/O 请求。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.Stream.BeginWrite*&gt; on this class.</source>
          <target state="translated">此&lt;xref:System.IAsyncResult&gt;对象不通过调用&lt;xref:System.IO.Stream.BeginWrite*&gt;此类&lt;/xref:System.IO.Stream.BeginWrite*&gt;创建&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>EndWrite is called multiple times.</source>
          <target state="translated">EndWrite 多次调用。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">流已关闭或出现内部错误。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">确保释放资源并在垃圾回收器回收时，并执行其他清理操作<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The garbage collector calls <ph id="ph1">`Finalize`</ph> when the current object is ready to be finalized.</source>
          <target state="translated">垃圾回收器调用<ph id="ph1">`Finalize`</ph>何时准备好完成当前的对象。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Finalize`</ph> closes the <ph id="ph2">`FileStream`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>关闭<ph id="ph2">`FileStream`</ph>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file.</source>
          <target state="translated">清除此流的缓冲区，使得所有缓冲的数据写入到文件。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt;.&lt;/xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>When you call the Flush method, the operating system I/O buffer is also flushed.</source>
          <target state="translated">在调用 Flush 方法时，也会刷新操作系统 I/O 缓冲区。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>A stream’s encoder is not flushed unless you explicitly call Flush or dispose of the object.</source>
          <target state="translated">除非你显式刷新调用，或者释放对象，不会刷新流的编码器。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Setting &lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName&gt; to <ph id="ph1">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">设置&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName&gt;到<ph id="ph1">`true`</ph>意味着数据从缓冲区刷新到流中，但不是会刷新编码器状态。&lt;/xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Because a buffer can be used for either reading or writing, Flush performs the following two functions:      -   Any data previously written to the buffer is copied to the file and the buffer is cleared except for its encoder state.</source>
          <target state="translated">刷新因为缓冲区可以用于读取或写入，执行以下两个函数:-以前向缓冲区写入任何数据复制到文件和其编码器状态除外清除缓冲区。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>-   If &lt;xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=fullName&gt; is <ph id="ph1">`true`</ph> and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer.</source>
          <target state="translated">-如果&lt;xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=fullName&gt;是<ph id="ph1">`true`</ph>和以前将数据从文件复制到缓冲区以进行读取，该文件中的当前位置将减少的缓冲区中的未读字节数。&lt;/xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The buffer is then cleared.</source>
          <target state="translated">然后清除缓冲区。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.FileStream.Flush%28System.Boolean%29&gt; method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</source>
          <target state="translated">使用&lt;xref:System.IO.FileStream.Flush%28System.Boolean%29&gt;方法重载时你想要确保中间文件缓冲区中的所有缓冲数据写入到磁盘。&lt;/xref:System.IO.FileStream.Flush%28System.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">发生 I/O 错误。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.</source>
          <target state="translated">清除此流的缓冲区并使所有缓冲的数据都写入到该文件，并清除所有中间文件缓冲区。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</source>
          <target state="translated">使用此重载时你想要确保中间文件缓冲区中的所有缓冲数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>When you call the Flush method, the operating system I/O buffer is also flushed.</source>
          <target state="translated">在调用 Flush 方法时，也会刷新操作系统 I/O 缓冲区。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to flush all intermediate file buffers; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要刷新所有中间文件缓冲区;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</source>
          <target state="translated">异步清除此流的所有缓冲区，使得所有缓冲的数据都写入到基础设备，并监视取消请求。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>When you call the FlushAsync method, the operating system I/O buffer is also flushed.</source>
          <target state="translated">在调用 FlushAsync 方法时，也会刷新操作系统 I/O 缓冲区。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>If the operation is canceled before it completes, the returned task contains the &lt;xref:System.Threading.Tasks.TaskStatus&gt; value for the &lt;xref:System.Threading.Tasks.Task.Status%2A&gt; property.</source>
          <target state="translated">如果在完成之前，将取消该操作，返回的任务包含&lt;xref:System.Threading.Tasks.TaskStatus&gt;值&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;属性。&lt;/xref:System.Threading.Tasks.Task.Status%2A&gt; &lt;/xref:System.Threading.Tasks.TaskStatus&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>If the handle to the file is disposed, the returned task contains the &lt;xref:System.ObjectDisposedException&gt; exception in the &lt;xref:System.Threading.Tasks.Task.Exception%2A&gt; property.</source>
          <target state="translated">如果文件句柄将被释放，则返回的任务包含&lt;xref:System.ObjectDisposedException&gt;中的异常&lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;属性。&lt;/xref:System.Threading.Tasks.Task.Exception%2A&gt; &lt;/xref:System.ObjectDisposedException&gt;</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要监视取消请求的标记。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">表示异步刷新操作的任务。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">已释放流。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that encapsulates the access control list (ACL) entries for the file described by the current <bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，它封装由当前所描述的文件的访问控制列表 (ACL) 项<bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>While the &lt;xref:System.IO.FileStream&gt; class and GetAccessControl can be used to retrieve the access control list (ACL) entries of an existing file, consider using &lt;xref:System.IO.File.GetAccessControl%2A?displayProperty=fullName&gt; method, as it is easier to use.</source>
          <target state="translated">虽然&lt;xref:System.IO.FileStream&gt;类和 GetAccessControl 可以用于检索现有文件的访问控制列表 (ACL) 项，请考虑使用&lt;xref:System.IO.File.GetAccessControl%2A?displayProperty=fullName&gt;方法，因为它是使用起来更为简便。&lt;/xref:System.IO.File.GetAccessControl%2A?displayProperty=fullName&gt; &lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Use the GetAccessControl method to retrieve the ACL entries for a file.</source>
          <target state="translated">GetAccessControl 方法用于检索文件的 ACL 项。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
          <target state="translated">ACL 描述个人和/或组具有或没有执行到给定的文件上的特定操作的权限。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 添加或移除访问控制列表项<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>An object that encapsulates the access control settings for the file described by the current <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个对象，封装当前所描述的文件的访问控制设置<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The file is closed.</source>
          <target state="translated">文件关闭。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while opening the file.</source>
          <target state="translated">打开文件时发生 I/O 错误。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The file could not be found.</source>
          <target state="translated">找不到该文件。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">当前平台上不支持此操作。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>-or-       The caller does not have the required permission.</source>
          <target state="translated">-或者-调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Gets the operating system file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object encapsulates.</source>
          <target state="translated">获取操作系统文件句柄的文件的当前<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象所封装。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>This property is an operating system handle for use with operating-system-provided system calls (such as <ph id="ph1">`ReadFile`</ph> on Windows).</source>
          <target state="translated">此属性是与操作系统的系统提供的系统调用一起使用的操作系统句柄 (如<ph id="ph1">`ReadFile`</ph>Windows 上)。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>It will not work with C library functions that expect a file descriptor, such as <ph id="ph1">`fread`</ph>.</source>
          <target state="translated">它不会使用 C 库函数，如预期的文件描述符， <ph id="ph1">`fread`</ph>。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The operating system handle might have been opened synchronously or asynchronously, depending on which <ph id="ph1">`FileStream`</ph> constructor was called.</source>
          <target state="translated">操作系统句柄可能打开过同步或异步，具体取决于<ph id="ph1">`FileStream`</ph>已调用构造函数。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.FileStream.IsAsync%2A&gt; property to discover whether this handle was opened asynchronously.</source>
          <target state="translated">使用&lt;xref:System.IO.FileStream.IsAsync%2A&gt;属性来发现是否以异步方式打开此句柄。&lt;/xref:System.IO.FileStream.IsAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>In Win32, this means the handle was opened for overlapped IO, and it requires different parameters to <ph id="ph1">`ReadFile`</ph> and <ph id="ph2">`WriteFile`</ph>.</source>
          <target state="translated">在 Win32 中，这意味着句柄已打开为重叠的 IO，并且它要求在不同的参数到<ph id="ph1">`ReadFile`</ph>和<ph id="ph2">`WriteFile`</ph>。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Data corruption might occur if a <ph id="ph2">`FileStream`</ph> is created, its handle is passed, some operation moves the handle's file pointer, and then the <ph id="ph3">`FileStream`</ph> is used again.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 如果，则可能发生数据损坏<ph id="ph2">`FileStream`</ph>是创建，其句柄传递、 某些操作移动句柄的文件指针，然后<ph id="ph3">`FileStream`</ph>会再次使用。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Multiple threads cannot safely write to the same file simultaneously, and <ph id="ph1">`FileStream`</ph> buffering code assumes that it exclusively controls the handle.</source>
          <target state="translated">多个线程不能同时安全地写入到相同文件，和<ph id="ph1">`FileStream`</ph>缓冲代码假定它以独占方式控制该句柄。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileStream`</ph> might throw an &lt;xref:System.IO.IOException&gt; if <ph id="ph2">`FileStream`</ph> detects that some other process has moved the file pointer.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>可能引发&lt;xref:System.IO.IOException&gt;如果<ph id="ph2">`FileStream`</ph>检测到某些其他进程已移动的文件指针。&lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>To avoid this, do not write any data into a portion of the file that <ph id="ph1">`FileStream`</ph> might have buffered, and restore the file pointer to the location it had when methods were last called on <ph id="ph2">`FileStream`</ph>.</source>
          <target state="translated">若要避免此问题，不写入任何数据到文件的一部分，<ph id="ph1">`FileStream`</ph>可能具有缓冲，并将文件指针还原到在上一次调用方法时的位置<ph id="ph2">`FileStream`</ph>。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The operating system file handle for the file encapsulated by this <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, or -1 if the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been closed.</source>
          <target state="translated">此封装的文件的操作系统文件句柄<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象或为-1 如果<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已关闭。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was opened asynchronously or synchronously.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>异步还是同步打开。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`IsAsync`</ph> property detects whether the <ph id="ph2">`FileStream`</ph> handle was opened asynchronously, enabling your code to use the &lt;xref:System.IO.FileStream.Handle%2A&gt; property correctly.</source>
          <target state="translated"><ph id="ph1">`IsAsync`</ph>属性检测是否<ph id="ph2">`FileStream`</ph>句柄已异步打开的使代码能够使用&lt;xref:System.IO.FileStream.Handle%2A&gt;属性正确。&lt;/xref:System.IO.FileStream.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>In Win32, <ph id="ph1">`IsAsync`</ph> being true means the handle was opened for overlapped I/O, and thus requires different parameters to <ph id="ph2">`ReadFile`</ph> and <ph id="ph3">`WriteFile`</ph>.</source>
          <target state="translated">在 Win32 中，<ph id="ph1">`IsAsync`</ph>正在 true 表示句柄为重叠 I/O 打开并因而需要不同的参数到<ph id="ph2">`ReadFile`</ph>和<ph id="ph3">`WriteFile`</ph>。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>You specify this value when you create an instance of the &lt;xref:System.IO.FileStream&gt; class using a constructor that has an <ph id="ph1">`isAsync`</ph>, <ph id="ph2">`useAsync`</ph>, or <ph id="ph3">`options`</ph> parameter.</source>
          <target state="translated">在创建的实例时指定此值&lt;xref:System.IO.FileStream&gt;类使用的构造函数<ph id="ph1">`isAsync`</ph>， <ph id="ph2">`useAsync`</ph>，或<ph id="ph3">`options`</ph>参数。&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>When the property is <ph id="ph1">`true`</ph>, the stream utilizes overlapped I/O to perform file operations asynchronously.</source>
          <target state="translated">当该属性是<ph id="ph1">`true`</ph>，流利用重叠的 I/O，异步执行文件操作。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>However, the IsAsync property does not have to be <ph id="ph1">`true`</ph> to call the &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, or &lt;xref:System.IO.Stream.CopyToAsync%2A&gt; method.</source>
          <target state="translated">但是，IsAsync 属性不一定要<ph id="ph1">`true`</ph>调用&lt;xref:System.IO.FileStream.ReadAsync%2A&gt;， &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;，或&lt;xref:System.IO.Stream.CopyToAsync%2A&gt;方法。&lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>When the IsAsync property is <ph id="ph1">`false`</ph> and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</source>
          <target state="translated">当 IsAsync 属性是<ph id="ph1">`false`</ph>和调用异步读取和写入操作，仍未被阻止 UI 线程、，但同步执行实际的 I/O 操作。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> was opened asynchronously; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已异步打开; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Gets the length in bytes of the stream.</source>
          <target state="translated">获取用字节表示的流长度。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>A long value representing the length of the stream in bytes.</source>
          <target state="translated">表示以字节为单位的流的长度的长值。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; for this stream is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;此流为<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>An I/O error, such as the file being closed, occurred.</source>
          <target state="translated">出现 I/O 错误，例如文件被关闭，出现。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Prevents other processes from reading from or writing to the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">防止其他进程读取或写入<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.</source>
          <target state="translated">文件流的范围锁定赋予该区域的文件流的锁定的进程独占访问的线程。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The beginning of the range to lock.</source>
          <target state="translated">要锁定的范围的开头。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The value of this parameter must be equal to or greater than zero (0).</source>
          <target state="translated">此参数的值必须等于或大于零 (0)。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The range to be locked.</source>
          <target state="translated">要锁定的范围。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;position&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;length&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;position&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;length&lt;/code&gt;</ph>为负。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>The file is closed.</source>
          <target state="translated">文件关闭。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The process cannot access the file because another process has locked a portion of the file.</source>
          <target state="translated">进程无法访问该文件，因为另一个进程已锁定文件的一部分。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Gets the name of the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was passed to the constructor.</source>
          <target state="translated">获取的名称<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，传递到构造函数。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>A string that is the name of the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个字符串，它的名称<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Gets or sets the current position of this stream.</source>
          <target state="translated">获取或设置此流的当前位置。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">支持查找到流的长度超出任何位置。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>When you seek beyond the length of the file, the file size grows.</source>
          <target state="translated">当您寻求超出长度的文件时，文件大小就会增加。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>In Microsoft Windows NT and newer, any data added to the end of the file is set to zero.</source>
          <target state="translated">在 Microsoft Windows NT 和更高，则将添加到文件末尾的任何数据设置为零。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>In Microsoft Windows 98 or earlier, any data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</source>
          <target state="translated">在 Microsoft Windows 98 或更早版本，添加到文件末尾的任何数据未设置为零，这意味着，先前删除的数据是可见写入流。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Setting the position of the stream to a large value beyond the end of the stream in Windows 98 or earlier may result in an exception being raised.</source>
          <target state="translated">将流的当前位置设置为较大的值超出在 Windows 98 或更早版本的流的末尾，则可能会导致正在引发的异常。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The current position of this stream.</source>
          <target state="translated">此流的当前位置。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">流不支持查找。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Attempted to set the position to a negative value.</source>
          <target state="translated">试图将位置设置为负值。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Attempted seeking past the end of a stream that does not support this.</source>
          <target state="translated">尝试查找不支持此流的末尾。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Reads a block of bytes from the stream and writes the data in a given buffer.</source>
          <target state="translated">从流中读取字节块并将数据写入给定缓冲区中。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.Read%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.Read%2A&gt;.&lt;/xref:System.IO.Stream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in <ph id="ph2">`array`</ph> (the buffer index) at which to begin reading, and the <ph id="ph3">`count`</ph> parameter gives the maximum number of bytes to be read from this stream.</source>
          <target state="translated"><ph id="ph1">`offset`</ph>参数指定了中的字节的偏移量<ph id="ph2">`array`</ph>（缓冲区索引） 在此处开始读取，和<ph id="ph3">`count`</ph>参数指定了最大要从此流中读取的字节数。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</source>
          <target state="translated">如果已到达流结尾，则返回的值是实际数字节，则为零。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</source>
          <target state="translated">如果读取的操作成功，是通过读取的字节数高级流的当前位置。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>If an exception occurs, the current position of the stream is unchanged.</source>
          <target state="translated">如果发生异常，则流的当前位置不变。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The Read method returns zero only after reaching the end of the stream.</source>
          <target state="translated">Read 方法将返回仅在到达流的末尾后的零。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Otherwise, Read always reads at least one byte from the stream before returning.</source>
          <target state="translated">否则，读取始终至少&amp;1; 个字节从流中读取在返回之前。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>If no data is available from the stream upon a call to Read, the method will block until at least one byte of data can be returned.</source>
          <target state="translated">如果没有数据时调用读取流中可用，该方法将可以返回至少一个字节的数据一直阻止。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">实现可以自由地返回少于所请求的字节，即使尚未达到流结尾。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.IO.BinaryReader&gt; for reading primitive data types.</source>
          <target state="translated">使用&lt;xref:System.IO.BinaryReader&gt;读取基元数据类型。&lt;/xref:System.IO.BinaryReader&gt;</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Do not interrupt a thread that is performing a read operation.</source>
          <target state="translated">不会中断正在执行读取的操作的线程。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</source>
          <target state="translated">尽管应用程序可能看起来后取消阻止该线程尚未成功运行，但中断会降低应用程序的性能和可靠性。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the specified byte array with the values between <ph id="ph1">`offset`</ph> and (<ph id="ph2">`offset`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph> - 1<ph id="ph5">`)`</ph> replaced by the bytes read from the current source.</source>
          <target state="translated">此方法返回时，包含之间的值的指定的字节数组<ph id="ph1">`offset`</ph>和 (<ph id="ph2">`offset`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`count`</ph> -1<ph id="ph5">`)`</ph>由从当前源中读取的字节替换。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`array`</ph> at which the read bytes will be placed.</source>
          <target state="translated">中的字节偏移量<ph id="ph1">`array`</ph>在放置读取的字节。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">最大读取的字节数。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">读取到缓冲区的字节总数。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</source>
          <target state="translated">这可能小于请求的字节数的如果字节数当前不可用，或零个如果已到达流结尾。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>为负。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">流不支持读取。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">发生 I/O 错误。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> describe an invalid range in <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>描述中的无效范围<ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">在流关闭后调用方法。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">从当前流异步读取字节序列的流中的位置提升读取的字节数，并监视取消请求。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The ReadAsync method enables you to perform resource-intensive file operations without blocking the main thread.</source>
          <target state="translated">ReadAsync 方法，可在不阻塞主线程的情况下执行占用大量资源的文件操作。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>This performance consideration is particularly important in a <ph id="ph1">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph> app or <ph id="ph2">[!INCLUDE[desktop_appname](~/add/includes/desktop-appname-md.md)]</ph> app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</source>
          <target state="translated">此性能的考虑就特别重要<ph id="ph1">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph>应用或<ph id="ph2">[!INCLUDE[desktop_appname](~/add/includes/desktop-appname-md.md)]</ph>应用其中一个耗时的流操作可以阻塞 UI 线程并让你的应用看起来好像不工作。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>The async methods are used in conjunction with the <ph id="ph1">`async`</ph> and <ph id="ph2">`await`</ph> keywords in Visual Basic and C#.</source>
          <target state="translated">结合使用异步方法<ph id="ph1">`async`</ph>和<ph id="ph2">`await`</ph>Visual Basic 和 C# 中的关键字。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.FileStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">使用&lt;xref:System.IO.FileStream.CanRead%2A&gt;属性来确定当前实例是否支持读取。&lt;/xref:System.IO.FileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>If the operation is canceled before it completes, the returned task contains the &lt;xref:System.Threading.Tasks.TaskStatus&gt; value for the &lt;xref:System.Threading.Tasks.Task.Status%2A&gt; property.</source>
          <target state="translated">如果在完成之前，将取消该操作，返回的任务包含&lt;xref:System.Threading.Tasks.TaskStatus&gt;值&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;属性。&lt;/xref:System.Threading.Tasks.Task.Status%2A&gt; &lt;/xref:System.Threading.Tasks.TaskStatus&gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>If the handle to the file is disposed, the returned task contains the &lt;xref:System.ObjectDisposedException&gt; exception in the &lt;xref:System.Threading.Tasks.Task.Exception%2A&gt; property.</source>
          <target state="translated">如果文件句柄将被释放，则返回的任务包含&lt;xref:System.ObjectDisposedException&gt;中的异常&lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;属性。&lt;/xref:System.Threading.Tasks.Task.Exception%2A&gt; &lt;/xref:System.ObjectDisposedException&gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The buffer to write the data into.</source>
          <target state="translated">要写入到数据的缓冲区。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data from the stream.</source>
          <target state="translated">中的字节偏移量<ph id="ph1">`buffer`</ph>从此处开始写入从流读取的数据。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">最大读取的字节数。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要监视取消请求的标记。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">一个任务，它表示异步读取操作。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">TResult</ph> <ept id="p1">&lt;/code&gt;</ept>参数包含读入缓冲区的字节总数。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">结果值可能小于请求的字节数的如果当前可用字节数小于所请求的数目，或如果已到达流结尾，它可以是 0 （零）。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>为负。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">总和<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>大于缓冲区长度。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">流不支持读取。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">已释放流。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">当前正在使用以前的读取操作流。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Reads a byte from the file and advances the read position one byte.</source>
          <target state="translated">从文件读取一个字节，并将读取的位置提升一个字节。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.ReadByte%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.ReadByte%2A&gt;.&lt;/xref:System.IO.Stream.ReadByte%2A&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用&lt;xref:System.IO.FileStream.CanRead%2A&gt;属性来确定当前实例是否支持读取。&lt;/xref:System.IO.FileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanRead%2A&gt;.</source>
          <target state="translated">有关其他信息，请参阅&lt;xref:System.IO.Stream.CanRead%2A&gt;。&lt;/xref:System.IO.Stream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>The byte, cast to an &lt;xref:System.Int32&gt;, or -1 if the end of the stream has been reached.</source>
          <target state="translated">字节，强制转换为&lt;xref:System.Int32&gt;，则为-1 如果已到达流结尾。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The current stream does not support reading.</source>
          <target state="translated">当前流不支持读取。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>The current stream is closed.</source>
          <target state="translated">当前流已关闭。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeFileHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the operating system file handle for the file that the current <bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object encapsulates.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeFileHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示该文件的操作系统文件句柄的对象，当前<bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象所封装。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>The SafeFileHandle property automatically flushes the stream and sets the current stream position to 0.</source>
          <target state="translated">SafeFileHandle 属性自动刷新流，并将当前流位置设置为 0。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>This allows the file to be moved or the stream position to be reset by another stream using the SafeFileHandle returned by this property.</source>
          <target state="translated">这允许要移动文件或要通过使用此属性返回 SafeFileHandle 的另一个流进行重置的流位置。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>An object that represents the operating system file handle for the file that the current <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object encapsulates.</source>
          <target state="translated">一个对象，表示该文件的操作系统文件句柄的当前<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象所封装。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Sets the current position of this stream to the given value.</source>
          <target state="translated">将此流的当前位置设置为给定的值。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.Seek%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.Seek%2A?displayProperty=fullName&gt;.&lt;/xref:System.IO.Stream.Seek%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanSeek%2A?displayProperty=fullName&gt; property to determine whether the current instance supports seeking.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用&lt;xref:System.IO.FileStream.CanSeek%2A?displayProperty=fullName&gt;属性来确定当前实例是否支持查找。&lt;/xref:System.IO.FileStream.CanSeek%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanSeek%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">有关其他信息，请参阅&lt;xref:System.IO.Stream.CanSeek%2A?displayProperty=fullName&gt;。&lt;/xref:System.IO.Stream.CanSeek%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>You can seek to any location beyond the length of the stream.</source>
          <target state="translated">您可以搜索到流的长度超出任何位置。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>When you seek beyond the length of the file, the file size grows.</source>
          <target state="translated">当您寻求超出长度的文件时，文件大小就会增加。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>In Windows NT and later versions, data added to the end of the file is set to zero.</source>
          <target state="translated">在 Windows NT 和更高版本中，添加到文件末尾的数据设置为零。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>In Windows 98 or earlier versions, data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</source>
          <target state="translated">在 Windows 98 或更早版本中，添加到文件末尾的数据未设置为零，这意味着，先前删除的数据是可见写入流。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>The point relative to <ph id="ph1">`origin`</ph> from which to begin seeking.</source>
          <target state="translated">相对于点<ph id="ph1">`origin`</ph>从此处开始查找。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>Specifies the beginning, the end, or the current position as a reference point for <ph id="ph1">`offset`</ph>, using a value of type &lt;xref:System.IO.SeekOrigin&gt;.</source>
          <target state="translated">将开始、 结束时或当前位置指定为的参考点<ph id="ph1">`offset`</ph>，使用类型&lt;xref:System.IO.SeekOrigin&gt;.&lt;/xref:System.IO.SeekOrigin&gt;的值</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>The new position in the stream.</source>
          <target state="translated">流中的新位置。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">发生 I/O 错误。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking, such as if the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is constructed from a pipe or console output.</source>
          <target state="translated">流不支持查找，如<bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从管道或控制台输出构造。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>Seeking is attempted before the beginning of the stream.</source>
          <target state="translated">试图在流的开始位置之前。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">在流关闭后调用方法。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Applies access control list (ACL) entries described by a <bpt id="p1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the file described by the current <bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">将访问控制列表 (ACL) 项所描述应用<bpt id="p1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象当前所描述的文件<bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>While the &lt;xref:System.IO.FileStream&gt; class and SetAccessControl can be used on an existing file, consider using the &lt;xref:System.IO.File.SetAccessControl%2A?displayProperty=fullName&gt; method as it is easier to use.</source>
          <target state="translated">虽然&lt;xref:System.IO.FileStream&gt;类，SetAccessControl 可对现有文件，请考虑使用&lt;xref:System.IO.File.SetAccessControl%2A?displayProperty=fullName&gt;作为它的方法是使用起来更为简便。&lt;/xref:System.IO.File.SetAccessControl%2A?displayProperty=fullName&gt; &lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>The SetAccessControl method applies access control list (ACL) entries to a file that represents the noninherited ACL list.</source>
          <target state="translated">SetAccessControl 方法适用于表示非继承的 ACL 列表的文件的访问控制列表 (ACL) 项。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The ACL specified for the <ph id="ph2">`fileSecurity`</ph> parameter replaces the existing ACL for the file.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 为 ACL 指定<ph id="ph2">`fileSecurity`</ph>参数替换现有文件 ACL。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>To add permissions for a new user, use the &lt;xref:System.IO.FileStream.GetAccessControl%2A&gt; method to obtain the existing ACL, modify it, and then use SetAccessControl to apply it back to the file.</source>
          <target state="translated">若要添加的新用户的权限，请使用&lt;xref:System.IO.FileStream.GetAccessControl%2A&gt;方法来获取现有的 ACL，对其进行修改，然后使用 SetAccessControl 以将其应用回文件。&lt;/xref:System.IO.FileStream.GetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
          <target state="translated">ACL 描述个人和/或组具有或没有执行到给定的文件上的特定操作的权限。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 添加或移除访问控制列表项<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>An object that describes an ACL entry to apply to the current file.</source>
          <target state="translated">一个对象，描述要应用于当前文件的 ACL 项。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>The file is closed.</source>
          <target state="translated">文件关闭。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileSecurity</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileSecurity</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The file could not be found or modified.</source>
          <target state="translated">无法找到或修改该文件。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>The current process does not have access to open the file.</source>
          <target state="translated">当前进程不具有打开该文件的权限。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Sets the length of this stream to the given value.</source>
          <target state="translated">将此流的长度设置为给定的值。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.SetLength%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.SetLength%2A&gt;.&lt;/xref:System.IO.Stream.SetLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>If the given value is less than the current length of the stream, the stream is truncated.</source>
          <target state="translated">如果给定的值小于当前流的长度，则流将被截断。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>In this scenario, if the current position is greater than the new length, the current position is moved to the last byte of the stream.</source>
          <target state="translated">在此方案中，如果当前的位置大于的新长度当前位置移至最后一字节的流。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>If the given value is larger than the current length of the stream, the stream is expanded, and the current position remains the same.</source>
          <target state="translated">如果给定的值大于当前流的长度，则流扩展，并当前位置保持不变。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>If the stream is expanded, the contents of the stream between the old and the new length are undefined.</source>
          <target state="translated">如果流已展开，旧和新的长度之间流的内容是不确定的。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>A stream must support both writing and seeking for <ph id="ph1">`SetLength`</ph> to work.</source>
          <target state="translated">流必须支持写入和查找有关<ph id="ph1">`SetLength`</ph>工作。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanWrite%2A&gt; property to determine whether the current instance supports writing, and the &lt;xref:System.IO.FileStream.CanSeek%2A&gt; property to determine whether seeking is supported.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用&lt;xref:System.IO.FileStream.CanWrite%2A&gt;属性来确定当前实例是否支持写入，和&lt;xref:System.IO.FileStream.CanSeek%2A&gt;属性来确定是否支持查找。&lt;/xref:System.IO.FileStream.CanSeek%2A&gt; &lt;/xref:System.IO.FileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanWrite%2A&gt; and &lt;xref:System.IO.Stream.CanSeek%2A&gt;.</source>
          <target state="translated">有关其他信息，请参阅&lt;xref:System.IO.Stream.CanWrite%2A&gt;和&lt;xref:System.IO.Stream.CanSeek%2A&gt;.&lt;/xref:System.IO.Stream.CanSeek%2A&gt; &lt;/xref:System.IO.Stream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>The new length of the stream.</source>
          <target state="translated">流的新长度。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
          <target state="translated">发生了 I/O 错误。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The stream does not support both writing and seeking.</source>
          <target state="translated">流不支持写入和查找。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Attempted to set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter to less than 0.</source>
          <target state="translated">尝试设置<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>为小于 0 的参数。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>Allows access by other processes to all or part of a file that was previously locked.</source>
          <target state="translated">允许访问以前锁定的文件的全部或部分其他进程。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>The beginning of the range to unlock.</source>
          <target state="translated">解锁范围的开头。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>The range to be unlocked.</source>
          <target state="translated">要解锁的范围。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;position&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;length&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;position&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;length&lt;/code&gt;</ph>为负。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Writes a block of bytes to the file stream.</source>
          <target state="translated">将字节块写入文件流。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.Write%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.Write%2A&gt;.&lt;/xref:System.IO.Stream.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in <ph id="ph2">`array`</ph> (the buffer index) at which to begin copying, and the <ph id="ph3">`count`</ph> parameter gives the number of bytes that will be written to the stream.</source>
          <target state="translated"><ph id="ph1">`offset`</ph>参数指定了中的字节的偏移量<ph id="ph2">`array`</ph>（缓冲区索引） 从此处开始复制，和<ph id="ph3">`count`</ph>参数指定了将写入到流的字节数。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>If the write operation is successful, the current position of the stream is advanced by the number of bytes written.</source>
          <target state="translated">如果写入操作成功，流的当前位置被高级通过写入的字节数。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>If an exception occurs, the current position of the stream is unchanged.</source>
          <target state="translated">如果发生异常，则流的当前位置不变。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanWrite%2A&gt; property to determine whether the current instance supports writing.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用&lt;xref:System.IO.FileStream.CanWrite%2A&gt;属性来确定当前实例是否支持写入。&lt;/xref:System.IO.FileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanWrite%2A&gt;.</source>
          <target state="translated">有关其他信息，请参阅&lt;xref:System.IO.Stream.CanWrite%2A&gt;。&lt;/xref:System.IO.Stream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>Do not interrupt a thread that is performing a write operation.</source>
          <target state="translated">不会中断正在执行的写入操作的线程。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</source>
          <target state="translated">尽管应用程序可能看起来后取消阻止该线程尚未成功运行，但中断会降低应用程序的性能和可靠性。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">通用文件和目录操作的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>The buffer containing data to write to the stream.</source>
          <target state="translated">包含要写入到流数据的缓冲区。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`array`</ph> from which to begin copying bytes to the stream.</source>
          <target state="translated">中的从零开始的字节偏移量<ph id="ph1">`array`</ph>从此处开始将字节复制到流。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">最大写入的字节数。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> describe an invalid range in <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>描述中的无效范围<ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>为负。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The current stream instance does not support writing.</source>
          <target state="translated">当前的流实例不支持写入。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">以异步方式将一个字节序列写入当前流，使此流中的当前位置提升写入字节数，并监视取消请求。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>The WriteAsync method enables you to perform resource-intensive file operations without blocking the main thread.</source>
          <target state="translated">WriteAsync 方法，可在不阻塞主线程的情况下执行占用大量资源的文件操作。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>This performance consideration is particularly important in a <ph id="ph1">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph> app or <ph id="ph2">[!INCLUDE[desktop_appname](~/add/includes/desktop-appname-md.md)]</ph> app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</source>
          <target state="translated">此性能的考虑就特别重要<ph id="ph1">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph>应用或<ph id="ph2">[!INCLUDE[desktop_appname](~/add/includes/desktop-appname-md.md)]</ph>应用其中一个耗时的流操作可以阻塞 UI 线程并让你的应用看起来好像不工作。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>The async methods are used in conjunction with the <ph id="ph1">`async`</ph> and <ph id="ph2">`await`</ph> keywords in Visual Basic and C#.</source>
          <target state="translated">结合使用异步方法<ph id="ph1">`async`</ph>和<ph id="ph2">`await`</ph>Visual Basic 和 C# 中的关键字。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.FileStream.CanWrite%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">使用&lt;xref:System.IO.FileStream.CanWrite%2A&gt;属性来确定当前实例是否支持读取。&lt;/xref:System.IO.FileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>If the operation is canceled before it completes, the returned task contains the &lt;xref:System.Threading.Tasks.TaskStatus&gt; value for the &lt;xref:System.Threading.Tasks.Task.Status%2A&gt; property.</source>
          <target state="translated">如果在完成之前，将取消该操作，返回的任务包含&lt;xref:System.Threading.Tasks.TaskStatus&gt;值&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;属性。&lt;/xref:System.Threading.Tasks.Task.Status%2A&gt; &lt;/xref:System.Threading.Tasks.TaskStatus&gt;</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>If the handle to the file is disposed, the returned task contains the &lt;xref:System.ObjectDisposedException&gt; exception in the &lt;xref:System.Threading.Tasks.Task.Exception%2A&gt; property.</source>
          <target state="translated">如果文件句柄将被释放，则返回的任务包含&lt;xref:System.ObjectDisposedException&gt;中的异常&lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;属性。&lt;/xref:System.Threading.Tasks.Task.Exception%2A&gt; &lt;/xref:System.ObjectDisposedException&gt;</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The buffer to write data from.</source>
          <target state="translated">要写入数据的缓冲区。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> from which to begin copying bytes to the stream.</source>
          <target state="translated">中的从零开始的字节偏移量<ph id="ph1">`buffer`</ph>从此处开始将字节复制到流。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">最大写入的字节数。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要监视取消请求的标记。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示异步写入操作的任务。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>为负。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">总和<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>大于缓冲区长度。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">流不支持写入。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">已释放流。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">当前正在由前一个写操作使用流。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the file stream.</source>
          <target state="translated">将一个字节写入文件流中的当前位置。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.IO.Stream.WriteByte%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.IO.Stream.WriteByte%2A&gt;.&lt;/xref:System.IO.Stream.WriteByte%2A&gt;</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`WriteByte`</ph> to write a byte to a <ph id="ph2">`FileStream`</ph> efficiently.</source>
          <target state="translated">使用<ph id="ph1">`WriteByte`</ph>写入到一个字节<ph id="ph2">`FileStream`</ph>有效。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>If the stream is closed or not writable, an exception will be thrown.</source>
          <target state="translated">如果流已关闭，或者不可写，则将引发异常。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanWrite%2A&gt; property to determine whether the current instance supports writing.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用&lt;xref:System.IO.FileStream.CanWrite%2A&gt;属性来确定当前实例是否支持写入。&lt;/xref:System.IO.FileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanWrite%2A&gt;.</source>
          <target state="translated">有关其他信息，请参阅&lt;xref:System.IO.Stream.CanWrite%2A&gt;。&lt;/xref:System.IO.Stream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>A byte to write to the stream.</source>
          <target state="translated">要写入到流字节。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">流不支持写入。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>