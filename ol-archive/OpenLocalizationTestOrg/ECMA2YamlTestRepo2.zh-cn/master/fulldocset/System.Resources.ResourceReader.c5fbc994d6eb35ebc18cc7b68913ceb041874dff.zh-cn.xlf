<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51f2b8f4bb70574d1d79d730282eb81ead2ab810</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Resources.ResourceReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c8d729643b4eb673bcc79aae21270582151fc23</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b91157723eedd0c93de18120f8d22742a7e6255</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</source>
          <target state="translated">通过读取顺序资源名称/值对枚举二进制资源 (.resources) 文件中的资源。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept>: Calling methods in this class with untrusted data is a security risk.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全说明<ept id="p1">**</ept>︰ 在此类的不受信任的数据中调用方法会带来安全风险。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Call the methods in the class only with trusted data.</source>
          <target state="translated">仅使用受信任的数据类中调用的方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>不受信任的数据安全风险<ept id="p1">](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified stream.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为指定的流的类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The ResourceReader constructor instantiates a &lt;xref:System.Resources.ResourceReader&gt; object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</source>
          <target state="translated">ResourceReader 构造函数实例化&lt;xref:System.Resources.ResourceReader&gt;检索从独立的.resources 文件或从.resources 文件的资源的对象嵌入到程序集中。&lt;/xref:System.Resources.ResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To read from a standalone .resources file, instantiate a &lt;xref:System.IO.Stream&gt; object and pass it to the ResourceReader constructor.</source>
          <target state="translated">若要从独立.resources 文件中读取，实例化&lt;xref:System.IO.Stream&gt;对象，并将其传递给 ResourceReader 构造函数。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To read from an embedded .resources file, call the &lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=fullName&gt; method with the case-sensitive name of the .resources file, and pass the returned &lt;xref:System.IO.Stream&gt; object to the ResourceReader constructor.</source>
          <target state="translated">若要从嵌入的.resources 文件中读取，调用&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=fullName&gt;.resources 文件，并传入返回区分大小写的同名方法&lt;xref:System.IO.Stream&gt;ResourceReader 构造函数的对象。&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Using an instance of this object with untrusted data is a security risk.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 此对象的实例使用不受信任的数据会带来安全风险。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use this object only with trusted data.</source>
          <target state="translated">此对象仅使用受信任的数据。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>不受信任的数据安全风险<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The input stream for reading resources.</source>
          <target state="translated">用于读取资源的输入的流。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not readable.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">stream</ph> <ept id="p1">&lt;/code&gt;</ept>参数不是可读。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred while accessing <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">访问时发生 I/O 错误<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">stream</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified named resource file.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定类名为资源文件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The ResourceReader constructor instantiates a &lt;xref:System.Resources.ResourceReader&gt; object that retrieves resources from a standalone .resources file.</source>
          <target state="translated">ResourceReader 构造函数实例化&lt;xref:System.Resources.ResourceReader&gt;从独立的.resources 文件中检索资源的对象。&lt;/xref:System.Resources.ResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To retrieve resources from an embedded .resources file, use the &lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt; constructor.</source>
          <target state="translated">若要从嵌入的.resources 文件中检索资源，请使用&lt;xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;构造函数。&lt;/xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Using an instance of this object with untrusted data is a security risk.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 此对象的实例使用不受信任的数据会带来安全风险。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use this object only with trusted data.</source>
          <target state="translated">此对象仅使用受信任的数据。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>不受信任的数据安全风险<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The path and name of the resource file to read.</source>
          <target state="translated">路径和要读取的资源文件的名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`filename`</ph> is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`filename`</ph>不区分大小写。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The file cannot be found.</source>
          <target state="translated">找不到该文件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
          <target state="translated">发生了 I/O 错误。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The resource file has an invalid format.</source>
          <target state="translated">资源文件具有无效的格式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, the length of the file may be zero.</source>
          <target state="translated">例如，文件的长度可以为零。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Releases all operating system resources associated with this <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">释放与此关联的所有操作系统资源<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Close can be safely called multiple times.</source>
          <target state="translated">关闭可以安全地调用多次。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">释放当前实例所使用的所有资源<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you are finished using this instance of &lt;xref:System.Resources.ResourceReader&gt;, call Dispose to release all resources used by this instance.</source>
          <target state="translated">在完成使用的此实例时&lt;xref:System.Resources.ResourceReader&gt;，调用释放，以释放此实例所使用的所有资源。&lt;/xref:System.Resources.ResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You should eliminate further references to this &lt;xref:System.Resources.ResourceReader&gt; instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</source>
          <target state="translated">你应该可以消除进一步引用到此&lt;xref:System.Resources.ResourceReader&gt;实例，以便垃圾回收器才能回收而不是保留它终止的实例的内存。&lt;/xref:System.Resources.ResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Dispose calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</source>
          <target state="translated">Dispose 调用私有 dispose （boolean） 方法，其中包含要释放托管和非托管资源的代码。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for this <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">返回此枚举<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Typically, you enumerate resources by calling the GetEnumerator method and then repeatedly calling the &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; method on the returned &lt;xref:System.Collections.IDictionaryEnumerator&gt; object until the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">通常情况下，通过调用 GetEnumerator 方法并重复调用枚举资源&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;方法返回&lt;xref:System.Collections.IDictionaryEnumerator&gt;对象，直到该方法返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IDictionaryEnumerator&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The resource name is available from the &lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=fullName&gt; property; its value from the &lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">资源名称是否可从&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=fullName&gt;属性; 其值从&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The example illustrates how to enumerate resources in this way.</source>
          <target state="translated">该示例说明如何枚举这种方式中的资源。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The implementation of the &lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; property by the &lt;xref:System.Resources.ResourceReader&gt; class can throw the following exceptions:      -   &lt;xref:System.IO.FileNotFoundException&gt;           The assembly that contains the type to which the data belongs cannot be found.</source>
          <target state="translated">实现&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;属性&lt;xref:System.Resources.ResourceReader&gt;类可以引发以下异常:-&lt;xref:System.IO.FileNotFoundException&gt;找不到包含数据所属的类型的程序集。&lt;/xref:System.IO.FileNotFoundException&gt; &lt;/xref:System.Resources.ResourceReader&gt; &lt;/xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.FormatException&gt;           The data is not in the expected format.</source>
          <target state="translated">-&lt;xref:System.FormatException&gt;数据不是预期格式。&lt;/xref:System.FormatException&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.TypeLoadException&gt;           The type to which the data belongs cannot be found.</source>
          <target state="translated">-&lt;xref:System.TypeLoadException&gt;找不到数据所属的类型。&lt;/xref:System.TypeLoadException&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can handle the exception by calling the &lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt; method to retrieve information about the data type and the byte array assigned to the named resource.</source>
          <target state="translated">可以通过调用处理的异常&lt;xref:System.Resources.ResourceReader.GetResourceData%2A&gt;方法来检索有关的数据类型和分配给该命名的资源的字节数组的信息。&lt;/xref:System.Resources.ResourceReader.GetResourceData%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information, see the "Retrieving Resources by Name with GetResourceData" section in the &lt;xref:System.Resources.ResourceReader&gt; class topic.</source>
          <target state="translated">有关详细信息，请参阅中的"检索资源的名称与 GetResourceData"一节&lt;xref:System.Resources.ResourceReader&gt;类主题。&lt;/xref:System.Resources.ResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Resources.ResourceReader&gt; class includes two methods that return enumerators.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt;&lt;xref:System.Resources.ResourceReader&gt;类包括返回枚举器的两个方法。&lt;/xref:System.Resources.ResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The GetEnumerator method returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; interface object and is the recommended method to call when enumerating resources.</source>
          <target state="translated">GetEnumerator 方法返回&lt;xref:System.Collections.IDictionaryEnumerator&gt;接口对象，并在调用时的推荐的方法枚举资源。&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An enumerator for this <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">此枚举<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The reader has been closed or disposed, and cannot be accessed.</source>
          <target state="translated">读取器已关闭或释放，并且不能访问。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Retrieves the type name and data of a named resource from an open resource file or stream.</source>
          <target state="translated">从打开的资源文件或流中检索的类型名称和数据的已命名资源。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name of a resource.</source>
          <target state="translated">资源的名称。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a string that represents the type name of the retrieved resource (see the Remarks section for details).</source>
          <target state="translated">此方法返回时，包含表示检索到的资源的类型名称的字符串 （请参阅备注部分，有关详细信息）。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a byte array that is the binary representation of the retrieved type.</source>
          <target state="translated">此方法返回时，包含是检索到的类型的二进制表示的字节数组。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceName&lt;/code&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceName&lt;/code&gt;</ph>不存在。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceName&lt;/code&gt;</ph> has an invalid type.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceName&lt;/code&gt;</ph>具有无效的类型。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The retrieved resource data is corrupt.</source>
          <target state="translated">检索的资源数据已损坏。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is not initialized, probably because it is closed.</source>
          <target state="translated">当前<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象未初始化，可能因为已经关闭了它。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for this <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">返回此枚举<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>IEnumerable.GetEnumerator is an explicit interface implementation.</source>
          <target state="translated">IEnumerable.GetEnumerator 是显式接口实现。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Resources.ResourceReader&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Resources.ResourceReader&gt;实例被强制转换为&lt;xref:System.Collections.IEnumerable&gt;接口。&lt;/xref:System.Collections.IEnumerable&gt; &lt;/xref:System.Resources.ResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The recommended approach to enumerating the resources in a .resources file is to call the &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; method of the &lt;xref:System.Collections.IDictionaryEnumerator&gt; object returned by the &lt;xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">枚举中的.resources 文件的资源的建议的方法是调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;方法&lt;xref:System.Collections.IDictionaryEnumerator&gt;返回对象&lt;xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.IDictionaryEnumerator&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An enumerator for this <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">此枚举<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The reader has already been closed and cannot be accessed.</source>
          <target state="translated">读取器已关闭，并且无法访问。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>