<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">802d19fba2d35d4ccdc4a76ad01a4c729b8a422f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.IObjectHandle.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c77e0c2e365215fc211fb6b64c8b63358858570</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b82d1a6adde2feba5693151e6704d2c6107252a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the interface for unwrapping marshal-by-value objects from indirection.</source>
          <target state="translated">定义用于从间接寻址的寻址封送按值对象的接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Marshal-by-value objects can be returned through an indirection, allowing the caller to control when the object is loaded into their domain.</source>
          <target state="translated">可以通过间接寻址，允许调用方控制何时将对象加载到其域返回封送按值对象。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The caller can unwrap the object from the indirection through this interface.</source>
          <target state="translated">调用方可以解除中通过此接口间接寻址的对象的包装。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The class implementing the IObjectHandle interface can be used to pass an object (in a wrapped state) between multiple application domains without loading the metadata for the wrapped object in each &lt;xref:System.AppDomain&gt; through which the IObjectHandle travels.</source>
          <target state="translated">实现 IObjectHandle 接口的类可将对象传递 （处于已包装的状态） 而不加载在每个包装的对象的元数据的多个应用程序域之间&lt;xref:System.AppDomain&gt;通过 IObjectHandle 传输时。&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Thus, the IObjectHandle class gives the caller control of when the &lt;xref:System.Type&gt; of the remote object is loaded into their domain.</source>
          <target state="translated">因此，IObjectHandle 类使调用方可以控制何时&lt;xref:System.Type&gt;远程对象会加载到其域。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Unwraps the object.</source>
          <target state="translated">解包对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The unwrapped object.</source>
          <target state="translated">未包装的对象。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>