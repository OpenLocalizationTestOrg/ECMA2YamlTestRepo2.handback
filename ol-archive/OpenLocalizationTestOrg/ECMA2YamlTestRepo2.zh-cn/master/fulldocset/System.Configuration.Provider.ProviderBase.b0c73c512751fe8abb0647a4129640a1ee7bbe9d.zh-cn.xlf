<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a2e66d7e40f7d8d5870e92dedd9e93a02692fff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Configuration.Provider.ProviderBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3e47c2c84dbad3c6f38682f4896fda5b166c0ef</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a873359f9eda2af2d96a9b44264d423d2bd93b50</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base implementation for the extensible provider model.</source>
          <target state="translated">提供基实现，用以可扩展的提供程序模型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The provider model is intended to encapsulate all or part of the functionality of multiple ASP.NET features, such as membership, profiles, and protected configuration.</source>
          <target state="translated">提供程序模型旨在封装全部或部分的多个 ASP.NET 功能，例如成员资格、 配置文件和受保护的配置的功能。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It allows the developer to create supporting classes that provide multiple implementations of the encapsulated functionality.</source>
          <target state="translated">它允许开发人员可以创建提供封装的功能的多个实现的支持类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In addition, developers can write new features using the provider model.</source>
          <target state="translated">此外，开发人员可以编写使用提供程序模型的新功能。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This can be an effective way to support multiple implementations of a feature's functionality without duplicating the feature code or recoding the application layer if the implementation method needs to be changed.</source>
          <target state="translated">这可以是功能的支持的多个实现，而不复制功能代码或重新实现方法需要更改的情况下编写代码的应用程序层的有效方式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The ProviderBase class is simple, containing only a few basic methods and properties that are common to all providers.</source>
          <target state="translated">ProviderBase 类很简单，只包含几个基本的方法和属性所共有的所有提供程序。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Feature-specific providers (such as &lt;xref:System.Web.Security.MembershipProvider&gt;) inherit from ProviderBase and establish the necessary methods and properties that the implementation-specific providers for that feature must support.</source>
          <target state="translated">特定于功能的提供程序 (如&lt;xref:System.Web.Security.MembershipProvider&gt;) 从 ProviderBase 继承，并且建立的所需的方法和该功能的特定于实现的提供程序必须支持的属性。&lt;/xref:System.Web.Security.MembershipProvider&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Implementation-specific providers (such as &lt;xref:System.Web.Security.SqlMembershipProvider&gt;) inherit in turn from a feature-specific provider (in this case, &lt;xref:System.Web.Security.MembershipProvider&gt;).</source>
          <target state="translated">特定于实现的提供程序 (如&lt;xref:System.Web.Security.SqlMembershipProvider&gt;) 反过来继承的特定于功能的提供程序 (在这种情况下， &lt;xref:System.Web.Security.MembershipProvider&gt;)。&lt;/xref:System.Web.Security.MembershipProvider&gt; &lt;/xref:System.Web.Security.SqlMembershipProvider&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The most important aspect of the provider model is that the implementation (for example, whether data is persisted as a text file or in a database) is abstracted from the application code.</source>
          <target state="translated">提供程序模型的最重要方面是，提取应用程序代码 （例如，是否数据将保存为文本文件或数据库） 的实现。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The type of the implementation-specific provider for the given feature is designated in a configuration file.</source>
          <target state="translated">在配置文件中指定给定的功能特定于实现的提供程序的类型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The feature-level provider then reads in the type from the configuration file and acts as a factory to the feature code.</source>
          <target state="translated">功能级别提供程序会将类型从配置文件中读取，并且可作为为功能代码中的工厂。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The application developer can then use the feature classes in the application code.</source>
          <target state="translated">应用程序开发人员然后可以在应用程序代码中使用的功能的类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The implementation type can be swapped out in the configuration file, eliminating the need to rewrite the code to accommodate the different implementation methodology.</source>
          <target state="translated">实现类型可以交换出在配置文件中，不再需要重写代码以适应不同的实现方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The providers included with ASP.NET are mostly abstractions of data persistence implementations for features like profiles or membership.</source>
          <target state="translated">包含在 ASP.NET 提供程序是主要的数据持久性实现的功能，如配置文件或成员身份的抽象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, this model can be applied to any other kind of feature functionality that could be abstracted and implemented in multiple ways.</source>
          <target state="translated">但是，此模型可应用于任何其他类型的无法提取并采用多种方式实现的功能。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Configuration.Provider.ProviderBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Configuration.Provider.ProviderBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).</source>
          <target state="translated">获取一个友好的简要说明适用于管理工具或其他用户界面 (Ui) 中的显示。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If a configured provider does not supply a description, the value of the &lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt; property is returned as a default.</source>
          <target state="translated">如果配置的提供程序不提供的说明的值&lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;默认情况下返回属性。&lt;/xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A brief, friendly description suitable for display in administrative tools or other UIs.</source>
          <target state="translated">简短的易懂说明适用于管理工具或其他 Ui 中显示。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes the provider.</source>
          <target state="translated">初始化提供程序。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The base class implementation internally tracks the number of times the provider's <ph id="ph1">`Initialize`</ph> method has been called.</source>
          <target state="translated">基类实现内部跟踪的次数提供程序的<ph id="ph1">`Initialize`</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If a provider is initialized more than once, an <ph id="ph1">`InvalidOperationException`</ph> is thrown stating that the provider is already initialized.</source>
          <target state="translated">如果不止一次初始化提供<ph id="ph1">`InvalidOperationException`</ph>指出已初始化提供程序引发。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because most feature providers call Initialize prior to performing provider-specific initialization, this method is a central location for preventing double initialization.</source>
          <target state="translated">因为大多数功能提供程序调用初始化执行特定于提供程序初始化之前，此方法是一个中心位置以防止重复初始化。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The friendly name of the provider.</source>
          <target state="translated">提供程序的友好名称。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</source>
          <target state="translated">表示此提供程序的配置中指定的提供程序特定属性的名称/值对的集合。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The name of the provider is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">提供程序的名称是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The name of the provider has a length of zero.</source>
          <target state="translated">提供程序的名称具有长度为零。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An attempt is made to call Initialize on a provider after the provider has already been initialized.</source>
          <target state="translated">尝试在提供程序上调用初始化后已初始化提供程序。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the friendly name used to refer to the provider during configuration.</source>
          <target state="translated">获取用于在配置过程中引用该提供程序的友好名称。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The recommended pattern for this string is: [<bpt id="p1">*</bpt>Provider Creator<ept id="p1">*</ept>][<bpt id="p2">*</bpt>Implementation Type<ept id="p2">*</ept>][<bpt id="p3">*</bpt>Feature<ept id="p3">*</ept>]Provider.</source>
          <target state="translated">建议的模式，该字符串是: [<bpt id="p1">*</bpt>提供程序创建者<ept id="p1">*</ept>] [<bpt id="p2">*</bpt>实现类型<ept id="p2">*</ept>] [<bpt id="p3">*</bpt>功能<ept id="p3">*</ept>] 提供程序。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Although the &lt;xref:System.Configuration.Provider.ProviderBase.Description%2A&gt; property also provides a friendly description, the Name property is used as an identifier for the provider.</source>
          <target state="translated">尽管&lt;xref:System.Configuration.Provider.ProviderBase.Description%2A&gt;属性也提供友好的说明，Name 属性用作提供程序标识符。&lt;/xref:System.Configuration.Provider.ProviderBase.Description%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The friendly name used to refer to the provider during configuration.</source>
          <target state="translated">用于在配置过程中引用该提供程序的友好名称。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>