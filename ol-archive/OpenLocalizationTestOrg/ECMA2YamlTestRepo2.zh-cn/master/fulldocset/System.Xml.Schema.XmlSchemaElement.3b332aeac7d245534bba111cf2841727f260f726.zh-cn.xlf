<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24ce8816893421b474c70a0eb428566231c1c6cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.XmlSchemaElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74487da8957743b13b31a8fc019edd78ddac7fb6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ede87674a8a3195b9156a9b09ed583b9fbdf3d8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the <bpt id="p1">&lt;xref uid="langword_csharp_element" name="element" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element from XML Schema as specified by the World Wide Web Consortium (W3C).</source>
          <target state="translated">表示<bpt id="p1">&lt;xref uid="langword_csharp_element" name="element" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从 XML 架构由万维网联合会 (W3C) 指定的元素。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is the base class for all particle types and is used to describe an element in an XML document.</source>
          <target state="translated">此类是所有微粒类型的基类，并用于描述 XML 文档中的元素。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  -   Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt;-不要使用来自未知或不受信任的源或位置的架构。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">这样会危及你的代码的安全性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">1&gt;-（包括内联架构） 的 XML 架构的本质上就容易受到拒绝服务攻击;不要在不受信任的情况下接受它们。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&gt; -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">1&gt;-架构验证错误消息和异常可能会公开有关内容模型或架构文件的 URI 路径的敏感信息。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">请注意不要公开此信息来不受信任的调用方。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derivation.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>派生。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Empty`</ph>|There are no restrictions on replacements of this element.|   |<ph id="ph4">`Substitution`</ph>|This element cannot be replaced by a type derived by Substitution.|   |<ph id="ph5">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph6">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph7">`All`</ph><ph id="ph8">|</ph><ph id="ph9">`#all`</ph>.</source>
          <target state="translated">此属性可以包含以下值: |枚举 |说明 |  |----------|-----------------|  |<ph id="ph1">`None`</ph>|使用通过定义派生限制<ph id="ph2">`BlockDefault`</ph>的架构，如果它存在的属性。 |  |<ph id="ph3">`Empty`</ph>|没有上替代此元素的限制。 |  |<ph id="ph4">`Substitution`</ph>|此元素不能被替换的替换派生的类型。 |  |<ph id="ph5">`Extension`</ph>|通过扩展而派生的类型时不能替换此元素。 |  |<ph id="ph6">`Restriction`</ph>|通过限制派生的类型时不能替换此元素。 |  |<ph id="ph7">`All`</ph><ph id="ph8">|</ph><ph id="ph9">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This element cannot be replaced by any type regardless of derivation method.|       This property does not prevent derivation, but prevents derivation from replacing the type in an instance.</source>
          <target state="translated">此元素无法替换由无论何种派生方法的任何类型。 |      此属性不会阻止派生，但阻止派生替换实例中的类型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>List and union values are not supported for the <ph id="ph1">`block`</ph> property.</source>
          <target state="translated">不支持列表和联合值<ph id="ph1">`block`</ph>属性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The attribute used to block a type derivation.</source>
          <target state="translated">用于阻止类型派生的属性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Default value is <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">获取的编译后值<bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This value indicates how the type is enforced when <ph id="ph1">`xsi:type`</ph> is used in the instance document.</source>
          <target state="translated">此值指示怎样强制实施类型时<ph id="ph1">`xsi:type`</ph>实例文档中使用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, if the value is restricted, only the specific defined type can be used, not types derived by restriction from the specific defined type.</source>
          <target state="translated">例如，如果值为受限制，可以使用仅特定定义的类型，通过限制从特定定义的类型不是类型派生。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This property can contain the values shown in the following table.</source>
          <target state="translated">此属性可以包含下表中显示的值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`None`</ph>.</source>
          <target state="translated">默认值是<ph id="ph1">`None`</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>List and union derivation methods are not allowed on this property.</source>
          <target state="translated">此属性上不允许列表和联合派生方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`Empty`</ph>|There are no restrictions on replacements of this element.|   |<ph id="ph2">`Substitution`</ph>|This element cannot be replaced by a type derived by Substitution.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">|枚举 |说明 |  |----------|-----------------|  |<ph id="ph1">`Empty`</ph>|没有上替代此元素的限制。 |  |<ph id="ph2">`Substitution`</ph>|此元素不能被替换的替换派生的类型。 |  |<ph id="ph3">`Extension`</ph>|通过扩展而派生的类型时不能替换此元素。 |  |<ph id="ph4">`Restriction`</ph>|通过限制派生的类型时不能替换此元素。 |  |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This element cannot be replaced by any type regardless of derivation method.|</source>
          <target state="translated">此元素无法替换由无论何种派生方法的任何类型。 |</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">编译后值的<bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default is the <bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value on the <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值上<bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>元素。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the collection of constraints on the element.</source>
          <target state="translated">获取元素的约束的集合。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns a collection of constraints on the element.</source>
          <target state="translated">返回元素的约束集合。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Can be any of <ph id="ph1">`XmlSchemaKey`</ph>, <ph id="ph2">`XmlSchemaKeyref`</ph>, or <ph id="ph3">`XmlSchemaUnique`</ph>.</source>
          <target state="translated">Can be any of <ph id="ph1">`XmlSchemaKey`</ph>, <ph id="ph2">`XmlSchemaKeyref`</ph>, or <ph id="ph3">`XmlSchemaUnique`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The collection of constraints.</source>
          <target state="translated">约束的集合。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the default value of the element if its content is a simple type or content of the element is <bpt id="p1">&lt;xref uid="langword_csharp_textOnly" name="textOnly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置元素的默认值，如果其内容是简单类型或元素的内容是<bpt id="p1">&lt;xref uid="langword_csharp_textOnly" name="textOnly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fixed`</ph> and <ph id="ph2">`default`</ph> attributes are mutually exclusive.</source>
          <target state="translated"><ph id="ph1">`fixed`</ph>和<ph id="ph2">`default`</ph>属性是互相排斥。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the element contains a simple type, this value must be a valid value of that type.</source>
          <target state="translated">如果此元素包含简单类型，此值必须是该类型的有效的值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default value for the element.</source>
          <target state="translated">元素的默认值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default is a null reference.</source>
          <target state="translated">默认值为空引用。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the type of the element based on the &lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaType<bpt id="p2">*</bpt>&gt; or &lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName<ept id="p2">*</ept>&gt; values of the element.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，表示元素的类型基于&lt;&gt; <bpt id="p2">*</bpt>1&gt; 或&lt;&gt; <ept id="p2">*</ept>1&gt; 的元素的值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This property is a post-schema-validation infoset property.</source>
          <target state="translated">此属性是后架构验证信息集属性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets a common language runtime (CLR) object based on the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> of the element, which holds the post-compilation value of the <bpt id="p3">&lt;xref uid="langword_csharp_ElementType" name="ElementType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">获取一个公共语言运行时 (CLR) 对象基于<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>的元素，它保存编译后值的<bpt id="p3">&lt;xref uid="langword_csharp_ElementType" name="ElementType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The object can be &lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt; if the element has a built-in XML Schema type or &lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt; if the element has a user-defined type.</source>
          <target state="translated">该对象可以为&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;如果元素具有的内置 XML 架构类型或&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;如果元素具有的用户定义的类型。&lt;/xref:System.Xml.Schema.XmlSchemaSimpleType&gt; &lt;/xref:System.Xml.Schema.XmlSchemaDatatype&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This property is a post-schema-validation infoset property.</source>
          <target state="translated">此属性是后架构验证信息集属性。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The ElementType property is obsolete in the 2.0 version of the .NET Framework and has been replaced by the &lt;xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt; property.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph> 1&gt; ElementType 属性已过时的.NET framework 2.0 版中，并已替换为&lt;xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt;属性。&lt;/xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The common language runtime object.</source>
          <target state="translated">公共语言运行时对象中。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_ElementType" name="ElementType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">编译后值的<bpt id="p1">&lt;xref uid="langword_csharp_ElementType" name="ElementType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property to indicate that no further derivations are allowed.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性以指示是否允许任何进一步的派生。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This attribute can contain the values shown in the following table.</source>
          <target state="translated">此属性可以包含下表中显示的值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`FinalDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Empty`</ph>|There are no restrictions on derivations of this element.|   |<ph id="ph4">`Extension`</ph>|This element cannot be derived by Extension.|   |<ph id="ph5">`Restriction`</ph>|This element cannot be derived by Restriction.|   |<ph id="ph6">`All`</ph><ph id="ph7">|</ph><ph id="ph8">`#all`</ph>.</source>
          <target state="translated">|枚举 |说明 |  |----------|-----------------|  |<ph id="ph1">`None`</ph>|使用通过定义派生限制<ph id="ph2">`FinalDefault`</ph>的架构，如果它存在的属性。 |  |<ph id="ph3">`Empty`</ph>|没有在此元素的派生限制。 |  |<ph id="ph4">`Extension`</ph>|此元素不能通过扩展而派生。 |  |<ph id="ph5">`Restriction`</ph>|此元素不能通过限制派生。 |  |<ph id="ph6">`All`</ph><ph id="ph7">|</ph><ph id="ph8">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This element cannot be derived by any derivation method.|       See also &lt;xref:System.Xml.Schema.XmlSchemaElement&gt;.</source>
          <target state="translated">此元素不能通过任何派生方法派生。 |      另请参阅&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaElement&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not allowed for this property.</source>
          <target state="translated"><ph id="ph1">`Substitution`</ph><ph id="ph2">`List`</ph>，和<ph id="ph3">`Union`</ph>派生方法不允许用于此属性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">获取的编译后值<bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This value indicates how the type is restricted when the type is extended through restriction.</source>
          <target state="translated">此值指示如何的类型是受限制类型扩展通过限制时。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This property can contain the following values.</source>
          <target state="translated">此属性可以包含以下值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`Empty`</ph>|There are no restrictions on derivations of this element.|   |<ph id="ph2">`Extension`</ph>|This element cannot be derived by Extension.|   |<ph id="ph3">`Restriction`</ph>|This element cannot be derived by Restriction.|   |<ph id="ph4">`All`</ph><ph id="ph5">|</ph><ph id="ph6">`#all`</ph>.</source>
          <target state="translated">|枚举 |说明 |  |----------|-----------------|  |<ph id="ph1">`Empty`</ph>|没有在此元素的派生限制。 |  |<ph id="ph2">`Extension`</ph>|此元素不能通过扩展而派生。 |  |<ph id="ph3">`Restriction`</ph>|此元素不能通过限制派生。 |  |<ph id="ph4">`All`</ph><ph id="ph5">|</ph><ph id="ph6">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This element cannot be derived by any derivation method.|       Substitution, List, and Union derivation methods are not allowed for this property.</source>
          <target state="translated">此元素不能通过任何派生方法派生。 |      替换、 列表和联合派生方法不允许用于此属性。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">编译后值的<bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Default value is the <bpt id="p1">&lt;xref uid="langword_csharp_FinalDefault" name="FinalDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value on the <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_FinalDefault" name="FinalDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值上<bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>元素。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the fixed value.</source>
          <target state="translated">获取或设置的固定的值。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The content should be a simple type or <ph id="ph1">`textOnly`</ph>.</source>
          <target state="translated">内容应该是简单类型或<ph id="ph1">`textOnly`</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fixed`</ph> and <ph id="ph2">`default`</ph> attributes are mutually exclusive.</source>
          <target state="translated"><ph id="ph1">`fixed`</ph>和<ph id="ph2">`default`</ph>属性是互相排斥。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The fixed value that is predetermined and unchangeable.</source>
          <target state="translated">该键预先确定的且不可更改的固定的值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is a null reference.</source>
          <target state="translated">默认值为空引用。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the form for the element.</source>
          <target state="translated">获取或设置元素的窗体。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default value is the value of the <ph id="ph1">`elementFormDefault`</ph> attribute for the <ph id="ph2">`schema`</ph> element containing the element.</source>
          <target state="translated">默认值为的值<ph id="ph1">`elementFormDefault`</ph>属性，则为<ph id="ph2">`schema`</ph>包含该元素的元素。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Unqualified`</ph>.</source>
          <target state="translated">默认值是<ph id="ph1">`Unqualified`</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`Qualified`</ph>|Element must be qualified with the namespace prefix.|   |<ph id="ph2">`Unqualified`</ph>|Element is not required to be qualified with the namespace prefix.|       The value cannot be set if the containing element is the <ph id="ph3">`schema`</ph> element.</source>
          <target state="translated">|枚举 |说明 |  |----------|-----------------|  |<ph id="ph1">`Qualified`</ph>|必须用命名空间前缀限定元素。 |  |<ph id="ph2">`Unqualified`</ph>|元素不需要用命名空间前缀限定。 |      不设置的值，包含的元素是否<ph id="ph3">`schema`</ph>元素。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The form for the element.</source>
          <target state="translated">窗体中的元素。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default is the <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> value.</source>
          <target state="translated">默认值是<ph id="ph1">&amp;lt;</ph>xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets information to indicate if the element can be used in an instance document.</source>
          <target state="translated">获取或设置信息以指示是否可以在实例文档中使用该元素。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the element cannot appear in the instance document.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，元素不能出现在实例文档。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets information that indicates if <bpt id="p1">&lt;xref uid="langword_csharp_xsi:nil" name="xsi:nil" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can occur in the instance data.</source>
          <target state="translated">获取或设置信息，该值指示如果<bpt id="p1">&lt;xref uid="langword_csharp_xsi:nil" name="xsi:nil" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例数据中可能出现。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Indicates if an explicit nil value can be assigned to the element.</source>
          <target state="translated">指示是否显式 nil 值可以分配给此元素。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This applies to element content and not the attributes of the element.</source>
          <target state="translated">这适用于元素内容并且不元素的特性。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If nillable is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, this enables an instance of the element to have the <bpt id="p2">&lt;xref uid="langword_csharp_nil" name="nil" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set to <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果 nillable 是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，这使元素具有的实例<bpt id="p2">&lt;xref uid="langword_csharp_nil" name="nil" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>属性设置为<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_nil" name="nil" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute is defined as part of the XML Schema namespace for instances.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_nil" name="nil" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>属性定义的 XML 架构命名空间的一部分为实例。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the element.</source>
          <target state="translated">获取或设置元素的名称。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The name must be an NCName (no-colon name) as defined in the World Wide Web Consortium (W3C) XML Namespaces specification.</source>
          <target state="translated">World Wide Web Consortium (W3C) XML 命名空间规范中定义的名称必须是 NCName （无冒号名称）。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Name`</ph> and <ph id="ph2">`RefName`</ph> attributes are mutually exclusive.</source>
          <target state="translated"><ph id="ph1">`Name`</ph>和<ph id="ph2">`RefName`</ph>属性是互相排斥。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name of the element.</source>
          <target state="translated">元素的名称。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_String.Empty" name="String.Empty" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_String.Empty" name="String.Empty" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets the actual qualified name for the given element.</source>
          <target state="translated">获取给定元素的实际限定的名称。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>QualifiedName is the name that a <ph id="ph1">`ref`</ph> attribute refers to.</source>
          <target state="translated">QualifiedName 是的名称，<ph id="ph1">`ref`</ph>特性引用了。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The qualified name consists of the NCName of the element.</source>
          <target state="translated">限定的名称包含的元素的 NCName。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, element name = "NCName", and the prefix used to describe the <ph id="ph1">`targetNamespace`</ph> of the schema.</source>
          <target state="translated">例如，元素名称 ="NCName"和用于描述前缀<ph id="ph1">`targetNamespace`</ph>的架构。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This property holds the post-compilation value of the <ph id="ph1">`QualifiedName`</ph> property.</source>
          <target state="translated">此属性将保存编译后值的<ph id="ph1">`QualifiedName`</ph>属性。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The qualified name of the element.</source>
          <target state="translated">元素的限定的名称。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_QualifiedName" name="QualifiedName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">编译后值的<bpt id="p1">&lt;xref uid="langword_csharp_QualifiedName" name="QualifiedName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets the reference name of an element declared in this schema (or another schema indicated by the specified namespace).</source>
          <target state="translated">获取或设置该架构中声明的元素 （或指定命名空间指示的另一个架构） 的引用名称。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RefName`</ph> must be a QName.</source>
          <target state="translated"><ph id="ph1">`RefName`</ph>必须是 QName。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RefName`</ph> can include a namespace prefix.</source>
          <target state="translated"><ph id="ph1">`RefName`</ph>可以包括命名空间前缀。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`RefName`</ph> attribute is present, all <ph id="ph2">`complexType`</ph>, <ph id="ph3">`simpleType`</ph>, <ph id="ph4">`key`</ph>, <ph id="ph5">`keyref`</ph>, <ph id="ph6">`unique`</ph>, <ph id="ph7">`nillable`</ph>, <ph id="ph8">`default`</ph>, <ph id="ph9">`fixed`</ph>, <ph id="ph10">`form`</ph>, <ph id="ph11">`block`</ph>, and <ph id="ph12">`type`</ph> must be absent.</source>
          <target state="translated">If <ph id="ph1">`RefName`</ph> attribute is present, all <ph id="ph2">`complexType`</ph>, <ph id="ph3">`simpleType`</ph>, <ph id="ph4">`key`</ph>, <ph id="ph5">`keyref`</ph>, <ph id="ph6">`unique`</ph>, <ph id="ph7">`nillable`</ph>, <ph id="ph8">`default`</ph>, <ph id="ph9">`fixed`</ph>, <ph id="ph10">`form`</ph>, <ph id="ph11">`block`</ph>, and <ph id="ph12">`type`</ph> must be absent.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`RefName`</ph> is present, <ph id="ph2">`minOccurs`</ph>, <ph id="ph3">`maxOccurs`</ph>, and <ph id="ph4">`id`</ph> are allowed.</source>
          <target state="translated">如果<ph id="ph1">`RefName`</ph>存在， <ph id="ph2">`minOccurs`</ph>， <ph id="ph3">`maxOccurs`</ph>，和<ph id="ph4">`id`</ph>允许。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To declare an element using an existing element definition, use the <ph id="ph1">`RefName`</ph> attribute to specify the existing element definition.</source>
          <target state="translated">若要使用的现有元素定义某个元素声明，请使用<ph id="ph1">`RefName`</ph>特性以指定现有元素定义。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The value cannot be set if the containing element is the <ph id="ph1">`schema`</ph> element.</source>
          <target state="translated">不设置的值，包含的元素是否<ph id="ph1">`schema`</ph>元素。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The reference name of the element.</source>
          <target state="translated">元素的引用名称。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the element.</source>
          <target state="translated">获取或设置元素的类型。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This can either be a complex type or a simple type.</source>
          <target state="translated">这可以是复杂类型或简单类型。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To declare an element using an existing <ph id="ph1">`simpleType`</ph> or <ph id="ph2">`complexType`</ph> definition, use the <ph id="ph3">`SchemaType`</ph> property to specify the existing type.</source>
          <target state="translated">若要使用的现有声明元素<ph id="ph1">`simpleType`</ph>或<ph id="ph2">`complexType`</ph>定义，但使用<ph id="ph3">`SchemaType`</ph>属性来指定现有的类型。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`RefName`</ph> attribute is present, <ph id="ph2">`complexType`</ph>, <ph id="ph3">`simpleType`</ph>, <ph id="ph4">`key`</ph>, <ph id="ph5">`keyref`</ph>, and <ph id="ph6">`unique`</ph> elements and <ph id="ph7">`nillable`</ph>, <ph id="ph8">`default`</ph>, <ph id="ph9">`fixed`</ph>, <ph id="ph10">`form`</ph>, <ph id="ph11">`block`</ph>, and <ph id="ph12">`SchemaType`</ph> attributes cannot be present.</source>
          <target state="translated">如果<ph id="ph1">`RefName`</ph>属性是否存在、 <ph id="ph2">`complexType`</ph>， <ph id="ph3">`simpleType`</ph>， <ph id="ph4">`key`</ph>， <ph id="ph5">`keyref`</ph>，和<ph id="ph6">`unique`</ph>元素和<ph id="ph7">`nillable`</ph>， <ph id="ph8">`default`</ph>， <ph id="ph9">`fixed`</ph>， <ph id="ph10">`form`</ph>， <ph id="ph11">`block`</ph>，和<ph id="ph12">`SchemaType`</ph>属性不能出现。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The type of the element.</source>
          <target state="translated">元素的类型。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of a built-in data type defined in this schema or another schema indicated by the specified namespace.</source>
          <target state="translated">获取或设置在此架构或由指定的命名空间指示的另一个架构中定义的内置数据类型的名称。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The name of the built-in data type.</source>
          <target state="translated">内置数据类型的名称。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of an element that is being substituted by this element.</source>
          <target state="translated">获取或设置此元素由替换元素的名称。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This element must have the same type or a type derived from the type of the specified element.</source>
          <target state="translated">此元素必须具有相同类型或从指定的元素的类型派生的类型。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This value must be a QName.</source>
          <target state="translated">此值必须是 QName。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The value cannot be set if the containing element is the <ph id="ph1">`schema`</ph> element.</source>
          <target state="translated">不设置的值，包含的元素是否<ph id="ph1">`schema`</ph>元素。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The qualified name of an element that is being substituted by this element.</source>
          <target state="translated">此元素由替换元素的限定的名称。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>