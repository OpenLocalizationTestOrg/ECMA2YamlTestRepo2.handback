<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9dcdc511cf307b4f4280bb104ae8470f4ce13a64</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Composition.Hosting.AtomicComposition.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4efcea5a28214565dc012cc37f06989275f636d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bbe56a4545395cceee3dfcc9366b662fc0d1d8b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a single composition operation for transactional composition.</source>
          <target state="translated">表示单个组合操作的事务的组合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified parent <bpt id="p2">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的父<bpt id="p2">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The parent of this composition operation.</source>
          <target state="translated">此组合操作的父级。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds an action to be executed when the overall composition operation completes successfully.</source>
          <target state="translated">添加一个在整个组合操作成功完成时要执行的操作。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The action to be executed.</source>
          <target state="translated">要执行的操作。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Adds an action to be executed if the overall composition operation fails.</source>
          <target state="translated">添加一个在整个组合操作失败时要执行的操作。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The action to be executed.</source>
          <target state="translated">要执行的操作。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Marks this composition operation as complete.</source>
          <target state="translated">将标记为已完成此组合操作。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If this &lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt; is nested, completion actions will not be executed until the parent composition operation has also completed.</source>
          <target state="translated">如果此&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;是嵌套，完成操作不会执行直到还完成父组合操作。&lt;/xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, and mark this composition operation as failed.</source>
          <target state="translated">释放当前实例所使用的所有资源<bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，并将此组合操作标记为失败。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;.</source>
          <target state="translated">调用<ph id="ph1">`Dispose`</ph>在完成使用&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;.&lt;/xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;时</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>方法使&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;中不可用状态。&lt;/xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt; was occupying.</source>
          <target state="translated">在调用<ph id="ph1">`Dispose`</ph>，必须释放对所有引用&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;占用。&lt;/xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt; &lt;/xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用<ph id="ph2">`Dispose`</ph>在发布到&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;。&lt;/xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;最后一个引用之前</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.AtomicComposition"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Saves a key-value pair in the transaction to track tentative state.</source>
          <target state="translated">将键 / 值对保存在要跟踪试探性状态的事务。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The key to save.</source>
          <target state="translated">要保存的键。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The value to save.</source>
          <target state="translated">要保存的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>