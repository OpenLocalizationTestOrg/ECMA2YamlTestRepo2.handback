<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c9f6caf8892a263ecf850268a486d819fd42561</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AppDomainSetup.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">460944a3e2b930c3a75085d91c0b03d29a9c2da2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2f1f245328ec1275ee7b10b330ffbf5e6c025e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents assembly binding information that can be added to an instance of <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">表示可以添加到的实例的程序集绑定信息<bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Changing the properties of an AppDomainSetup instance does not affect any existing &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">更改 AppDomainSetup 实例的属性不影响任何现有&lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It can affect only the creation of a new &lt;xref:System.AppDomain&gt;, when the &lt;xref:System.AppDomain.CreateDomain%2A&gt; method is called with the AppDomainSetup instance as a parameter.</source>
          <target state="translated">它可能会影响仅创建一个新&lt;xref:System.AppDomain&gt;，当&lt;xref:System.AppDomain.CreateDomain%2A&gt;与 AppDomainSetup 实例作为参数调用方法。&lt;/xref:System.AppDomain.CreateDomain%2A&gt; &lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;xref:System.IAppDomainSetup&gt; interface.</source>
          <target state="translated">此类实现&lt;xref:System.IAppDomainSetup&gt;接口。&lt;/xref:System.IAppDomainSetup&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The default value for the &lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt; property is false.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 的默认值为&lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;属性为 false。&lt;/xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This setting is unsafe for services.</source>
          <target state="translated">此设置是不安全的服务。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To help prevent services from downloading partially trusted code, set this property to true</source>
          <target state="translated">为了帮助防止服务下载部分受信任的代码，请将此属性设置为 true</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified activation context to use for manifest-based activation of an application domain.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与指定的激活上下文，用于基于清单的应用程序域的激活的类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ActivationContext&gt; object specified for <ph id="ph1">`activationContext`</ph> is used to generate an &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object containing information required to activate a new application domain.</source>
          <target state="translated">&lt;xref:System.ActivationContext&gt;对象指定的用于<ph id="ph1">`activationContext`</ph>用于生成&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;对象，其中包含激活新的应用程序域所需信息。&lt;/xref:System.Runtime.Hosting.ActivationArguments&gt; &lt;/xref:System.ActivationContext&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object can be accessed by using the &lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt; property.</source>
          <target state="translated">这&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;对象可以通过使用访问&lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;属性。&lt;/xref:System.AppDomainSetup.ActivationArguments%2A&gt; &lt;/xref:System.Runtime.Hosting.ActivationArguments&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The activation context to be used for an application domain.</source>
          <target state="translated">要用于应用程序域的激活上下文。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;activationContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;activationContext&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified activation arguments required for manifest-based activation of an application domain.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类以基于清单的应用程序域激活所需的指定的激活参数。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The object specified for <ph id="ph1">`activationArguments`</ph> can be accessed by using the &lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt; property.</source>
          <target state="translated">为指定的对象<ph id="ph1">`activationArguments`</ph>可以通过使用访问&lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;属性。&lt;/xref:System.AppDomainSetup.ActivationArguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An object that specifies information required for the manifest-based activation of a new application domain.</source>
          <target state="translated">一个指定以基于清单的新的应用程序域激活所需信息的对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;activationArguments&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;activationArguments&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets data about the activation of an application domain.</source>
          <target state="translated">获取或设置应用程序域的激活有关的数据。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>No exception is thrown if this property is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">在此属性设置为引发任何异常<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The information provided by the &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object supports manifest-based activation.</source>
          <target state="translated">提供的信息&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;对象支持基于清单的激活。&lt;/xref:System.Runtime.Hosting.ActivationArguments&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An object that contains data about the activation of an application domain.</source>
          <target state="translated">包含应用程序域的激活有关的数据的对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The property is set to an <bpt id="p1">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose application identity does not match the application identity of the <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object returned by the &lt;xref:System.AppDomainSetup.ApplicationTrust<bpt id="p3">*</bpt>&gt; property. No exception is thrown if the &lt;xref:System.AppDomainSetup.ApplicationTrust<ept id="p3">*</ept>&gt; property is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">属性设置为<bpt id="p1">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>其应用程序标识不匹配的应用程序标识的对象<bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>返回对象&lt;&gt; <bpt id="p3">*</bpt>1&gt; 属性。在引发任何异常&lt;&gt; <ept id="p3">*</ept>1&gt; 属性是<bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate, which represents a callback method that is invoked when the application domain is initialized.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>委托，表示初始化应用程序域时调用的回调方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To pass information to the callback method, assign an array of strings to the &lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt; property.</source>
          <target state="translated">若要将信息传递给回调方法，分配的字符串转换为数组&lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;属性。&lt;/xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The array is passed to the callback method each time an &lt;xref:System.AppDomain&gt; is initialized.</source>
          <target state="translated">该数组传递给回调方法每次&lt;xref:System.AppDomain&gt;初始化。&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The callback method is executed in the context of the newly created application domain.</source>
          <target state="translated">新创建的应用程序域的上下文中执行此回调方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A delegate that represents a callback method that is invoked when the application domain is initialized.</source>
          <target state="translated">一个委托，表示初始化应用程序域时调用的回调方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the arguments passed to the callback method represented by the <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate.</source>
          <target state="translated">获取或设置传递给所表示的回调方法的参数<bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>委托。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The callback method is invoked when the application domain is initialized.</source>
          <target state="translated">在初始化应用程序域时调用的回调方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt; property to specify a callback method that is invoked during &lt;xref:System.AppDomain&gt; initialization.</source>
          <target state="translated">使用&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;属性指定一个期间调用的回调方法&lt;xref:System.AppDomain&gt;初始化。&lt;/xref:System.AppDomain&gt; &lt;/xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt; property is not set, the array assigned to this property is not used.</source>
          <target state="translated">如果&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;未设置属性，则不使用分配给此属性的数组。&lt;/xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The callback method is executed in the context of the newly created application domain.</source>
          <target state="translated">新创建的应用程序域的上下文中执行此回调方法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of strings that is passed to the callback method represented by the <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate, when the callback method is invoked during <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> initialization.</source>
          <target state="translated">传递给所表示的回调方法的字符串数组<bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>期间调用的回调方法委托时<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>初始化。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets the display name of the assembly that provides the type of the application domain manager for application domains created using this <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取或设置创建使用此应用程序域提供应用程序域管理器的类型的程序集的显示名称<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The display name of the assembly that provides the &lt;xref:System.Type&gt; of the application domain manager.</source>
          <target state="translated">提供的程序集的显示名称&lt;xref:System.Type&gt;的应用程序域管理器。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the full name of the type that provides the application domain manager for application domains created using this <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取或设置用于创建使用此应用程序域提供应用程序域管理器的类型的全名<bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The full name of the type, including the namespace.</source>
          <target state="translated">类型，包括命名空间的完整名称。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the directory containing the application.</source>
          <target state="translated">获取或设置包含应用程序的目录的名称。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The application base directory is where the assembly manager begins probing for assemblies.</source>
          <target state="translated">应用程序基目录是程序集管理器开始探测程序集。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The ApplicationBase property can influence which permissions are granted to an application domain.</source>
          <target state="translated">ApplicationBase 属性可能会影响到应用程序域授予的权限。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, an application domain originating from the local computer normally receives full trust based on its location of origin.</source>
          <target state="translated">例如，应用程序域通常来自本地计算机接收基于源其位置的完全信任。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, if the ApplicationBase property of that &lt;xref:System.AppDomain&gt; is set to the full name of an intranet directory, the ApplicationBase setting restricts the permissions granted to the application domain to a LocalIntranet grant even though the application domain actually originates from the local computer.</source>
          <target state="translated">但是，如果的 ApplicationBase 属性&lt;xref:System.AppDomain&gt;设置为一个 intranet 目录，则设置将限制授予应用程序域到 LocalIntranet 授予，即使应用程序域实际来自本地计算机的权限在其中 ApplicationBase 的完整名称。&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The name of the application base directory.</source>
          <target state="translated">应用程序基目录的名称。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the application.</source>
          <target state="translated">获取或设置应用程序的名称。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of the application.</source>
          <target state="translated">应用程序的名称。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets an object containing security and trust information.</source>
          <target state="translated">获取或设置一个包含安全性和信任信息的对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This property is <ph id="ph1">`null`</ph> when the &lt;xref:System.AppDomainSetup&gt; is created.</source>
          <target state="translated">此属性是<ph id="ph1">`null`</ph>时&lt;xref:System.AppDomainSetup&gt;创建。&lt;/xref:System.AppDomainSetup&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Once changed, it cannot be reset to a null reference.</source>
          <target state="translated">更改后，则无法重置为空引用。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An object that contains security and trust information.</source>
          <target state="translated">一个包含安全性和信任信息的对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The property is set to an <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose application identity does not match the application identity of the <bpt id="p2">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object returned by the &lt;xref:System.AppDomainSetup.ActivationArguments<bpt id="p3">*</bpt>&gt; property. No exception is thrown if the &lt;xref:System.AppDomainSetup.ActivationArguments<ept id="p3">*</ept>&gt; property is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">属性设置为<bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>其应用程序标识不匹配的应用程序标识的对象<bpt id="p2">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>返回对象&lt;&gt; <bpt id="p3">*</bpt>1&gt; 属性。在引发任何异常&lt;&gt; <ept id="p3">*</ept>1&gt; 属性是<bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">属性设置为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of an area specific to the application where files are shadow copied.</source>
          <target state="translated">获取或设置特定于应用程序的、 从中对文件进行卷影复制使用的区域名称。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In order for this property to have an effect, the &lt;xref:System.AppDomainSetup.ApplicationName%2A&gt; property must also be set.</source>
          <target state="translated">为了使此属性产生任何影响，&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;还必须设置属性。&lt;/xref:System.AppDomainSetup.ApplicationName%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.AppDomainSetup.ApplicationName%2A&gt; property is not set, the CachePath property is ignored and the shadow copy cache location defaults to the download cache.</source>
          <target state="translated">如果&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;未设置属性，将忽略的 CachePath 属性和卷影副本缓存位置默认为下载缓存。&lt;/xref:System.AppDomainSetup.ApplicationName%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">卷影复制的详细信息，请参阅<bpt id="p1">[</bpt>影像复制程序集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the directory path and file name where files are shadow copied.</source>
          <target state="translated">从中对文件进行卷影复制的目录路径和文件名称的完全限定的名称。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the configuration file for an application domain.</source>
          <target state="translated">获取或设置应用程序域的配置文件的名称。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The configuration file describes the search rules and configuration data for the application domain.</source>
          <target state="translated">配置文件描述的搜索规则和应用程序域的配置数据。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.</source>
          <target state="translated">创建应用程序域的主机负责提供此数据，因为有意义的值会变化情况。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer.</source>
          <target state="translated">例如，ASP.NET 应用程序的配置数据存储为每个应用程序、 站点以及计算机，可执行文件的配置数据存储为每个应用程序、 用户和计算机时。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Only the host knows the specifics of the configuration data for a particular circumstance.</source>
          <target state="translated">仅主机知道特定情况的配置数据的详细信息。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The name of the configuration file.</source>
          <target state="translated">配置文件的名称。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies whether the application base path and private binary path are probed when searching for assemblies to load.</source>
          <target state="translated">指定在搜索要加载的程序集时是否探测应用程序基路径和专用二进制路径。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If the DisallowApplicationBaseProbing property is <ph id="ph1">`true`</ph>, the value of the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; property is ignored.</source>
          <target state="translated">如果 DisallowApplicationBaseProbing 属性为<ph id="ph1">`true`</ph>的值&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;属性将被忽略。&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>That is, no assemblies are probed for in the directories specified by the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; property.</source>
          <target state="translated">通过指定的目录中的探测没有任何程序集，即&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;属性。&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In addition, the values of the &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; property and the &lt;xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt; property are ignored.</source>
          <target state="translated">此外的值&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;属性和&lt;xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt;属性将被忽略。&lt;/xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt; &lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>No assemblies are probed for in the directories specified by the &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; property.</source>
          <target state="translated">任何程序集指定的目录中探测&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;属性。&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The DisallowApplicationBaseProbing property provides an additional layer of control over the loading process.</source>
          <target state="translated">DisallowApplicationBaseProbing 属性提供一层额外的控制加载过程。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In the normal assembly loading sequence, the application base is probed before the &lt;xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">在正常的程序集加载序列，应用程序基探测之前&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt;引发事件。&lt;/xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>However, some applications might need to load assemblies from an OLE compound file within a document, or from a unique known location that is neither in the global assembly cache nor in the directories specified by the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; and &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; properties.</source>
          <target state="translated">但是，某些应用程序可能需要从在文档中，OLE 复合文件中或从既不在全局程序集缓存中上也不由指定的目录中的唯一已知位置加载程序集&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;和&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;属性。&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt; &lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Such applications can use the DisallowApplicationBaseProbing property to avoid the delay caused by normal probing, and to avoid loading copies of the necessary assembly that might be located in the normal probing paths.</source>
          <target state="translated">此类应用程序可以使用 DisallowApplicationBaseProbing 属性，以避免导致正常探测的延迟和避免加载可能位于正常的探测路径的必需程序集的副本。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if probing is not allowed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不允许探测;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether an application domain allows assembly binding redirection.</source>
          <target state="translated">获取或设置一个值，该值指示应用程序域是否允许程序集绑定重定向。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The DisallowBindingRedirects property is designed to be used by services and server applications where assembly binding redirection is not part of the application scenario.</source>
          <target state="translated">DisallowBindingRedirects 属性设计为供服务和服务器应用程序程序集绑定重定向不是应用程序方案的一部分。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if redirection of assemblies is not allowed; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it is allowed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不允许重定向的程序集;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果允许它。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether HTTP download of assemblies is allowed for an application domain.</source>
          <target state="translated">获取或设置一个值，该值指示应用程序域是否允许 HTTP 下载程序集。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The DisallowCodeDownload property is designed to be used by services and server applications where downloading code from an intranet or the Internet is not part of the application scenario.</source>
          <target state="translated">DisallowCodeDownload 属性设计为供服务和服务器应用程序从 intranet 或 Internet 下载代码不是应用程序方案的一部分。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The default value for the DisallowCodeDownload property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; DisallowCodeDownload 属性的默认值是<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This setting is unsafe for services.</source>
          <target state="translated">此设置是不安全的服务。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To help prevent services from downloading partially trusted code, set this property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">为了帮助防止服务下载部分受信任的代码，请将此属性设置为<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if HTTP download of assemblies is not allowed; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it is allowed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果 HTTP 下载程序集则不允许;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果允许它。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>publisherPolicy<ph id="ph2">&amp;gt;</ph><ept id="p1">](../Topic/%3CpublisherPolicy%3E%20Element.md)</ept> section of the configuration file is applied to an application domain.</source>
          <target state="translated">获取或设置一个值，该值指示是否<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>publisherPolicy<ph id="ph2">&amp;gt;</ph> <ept id="p1">](../Topic/%3CpublisherPolicy%3E%20Element.md)</ept>配置文件的部分应用于应用程序域。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The DisallowPublisherPolicy property specifically applies to a Web application that is loaded locally.</source>
          <target state="translated">DisallowPublisherPolicy 属性特别适用于本地加载 Web 应用程序。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use this property to help prevent a malicious attempt to execute an unsafe Web application in safe mode.</source>
          <target state="translated">使用此属性以帮助防止恶意尝试在安全模式下执行不安全的 Web 应用程序。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information about bypassing publisher policy, see the <bpt id="p1">[</bpt>Redirecting Assembly Versions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">有关跳过发布服务器策略的详细信息，请参阅<bpt id="p1">[</bpt>重定向程序集版本<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information about safe mode, see the "Examining the Configuration Files" section of the <bpt id="p1">[</bpt>How the Runtime Locates Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">有关安全模式的详细信息，请参阅的"检查配置文件"部分<bpt id="p1">[</bpt>运行时如何定位程序集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_&amp;lt;publisherPolicy&amp;gt;" name="&amp;lt;publisherPolicy&amp;gt;" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> section of the configuration file for an application domain is ignored; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the declared publisher policy is honored.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref uid="langword_csharp_&amp;lt;publisherPolicy&amp;gt;" name="&amp;lt;publisherPolicy&amp;gt;" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>应用程序域配置文件的部分将被忽略;<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>如果接受所声明的发行者策略。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets the base directory where the directory for dynamically generated files is located.</source>
          <target state="translated">获取或设置动态生成的文件的目录所在的位置的基目录。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The directory where the <ph id="ph1">&amp;lt;</ph>xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> is located.</source>
          <target state="translated">目录其中<ph id="ph1">&amp;lt;</ph>xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>所在。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The return value of this property is different from the value assigned.</source>
          <target state="translated">此属性的返回值是不同的分配的值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>See the Remarks section.</source>
          <target state="translated">请参阅备注部分。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This property cannot be set because the application name on the application domain is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">无法设置此属性，因为应用程序域上的应用程序名称是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the XML configuration information set by the &lt;xref:System.AppDomainSetup.SetConfigurationBytes*&gt; method, which overrides the application's XML configuration information.</source>
          <target state="translated">返回设置的 XML 配置信息&lt;xref:System.AppDomainSetup.SetConfigurationBytes*&gt;方法，重写应用程序的 XML 配置信息。&lt;/xref:System.AppDomainSetup.SetConfigurationBytes*&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt; method provides a way to override the configuration information of an application that creates a new application domain.</source>
          <target state="translated">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;方法提供了如何重写创建新的应用程序域的应用程序的配置信息。&lt;/xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The configuration file information in <ph id="ph1">`value`</ph> overrides the configuration file information for the application.</source>
          <target state="translated">中的配置文件信息<ph id="ph1">`value`</ph>重写应用程序的配置文件信息。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example, when the Example.exe application creates a new application domain, it can override the configuration information originally obtained from Example.exe.config file.</source>
          <target state="translated">例如，当 Example.exe 应用程序创建新的应用程序域时，它会重写最初从 Example.exe.config 文件中获取的配置信息。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some consumers of configuration file information do not use the information stored by the &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt; method.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 某些的配置文件信息的使用者不使用存储的信息&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;方法。&lt;/xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The runtime does not enforce this.</source>
          <target state="translated">运行时不会强制此。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To ensure that all configuration file information is overridden in a new application domain, use the &lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt; property to specify a configuration file.</source>
          <target state="translated">若要确保新的应用程序域中被重写所有配置文件信息，请使用&lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;属性来指定配置文件。&lt;/xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt; method does affect assembly binding.</source>
          <target state="translated">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;方法会影响程序集绑定。&lt;/xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The XML in <ph id="ph1">`value`</ph> is the same as the XML in a normal configuration file, except that it is stored as a &lt;xref:System.Byte&gt; array.</source>
          <target state="translated">中的 XML<ph id="ph1">`value`</ph>具有与在常规配置文件中，XML 相同，只不过它存储为&lt;xref:System.Byte&gt;数组。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To access the configuration bytes for an application domain, use the &lt;xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName&gt; property to get the &lt;xref:System.AppDomainSetup&gt; object for the application domain, then use the GetConfigurationBytes method.</source>
          <target state="translated">若要访问应用程序域的配置字节，使用&lt;xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName&gt;属性来获取&lt;xref:System.AppDomainSetup&gt;对象对于应用程序域中，然后使用 GetConfigurationBytes 方法。&lt;/xref:System.AppDomainSetup&gt; &lt;/xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An array that contains the XML configuration information that was set by the &lt;xref:System.AppDomainSetup.SetConfigurationBytes<bpt id="p1">*</bpt>&gt; method, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the &lt;xref:System.AppDomainSetup.SetConfigurationBytes<ept id="p1">*</ept>&gt; method has not been called.</source>
          <target state="translated">一个数组，包含所设置的 XML 配置信息&lt;&gt; <bpt id="p1">*</bpt>1&gt; 方法，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果&lt;&gt; <ept id="p1">*</ept>1&gt; 尚未调用方法。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets or sets the location of the license file associated with this domain.</source>
          <target state="translated">获取或设置与此域关联的许可证文件的位置。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The location and name of the license file.</source>
          <target state="translated">位置和许可证文件的名称。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies the optimization policy used to load an executable.</source>
          <target state="translated">指定用于加载可执行文件的优化策略。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An enumerated constant that is used with the <bpt id="p1">&lt;xref href="System.LoaderOptimizationAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">与一起使用的枚举的常数<bpt id="p1">&lt;xref href="System.LoaderOptimizationAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of assemblies marked with the <bpt id="p1">&lt;xref href="System.Security.PartialTrustVisibilityLevel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> flag that are made visible to partial-trust code running in a sandboxed application domain.</source>
          <target state="translated">获取或设置与标记的程序集的列表<bpt id="p1">&lt;xref href="System.Security.PartialTrustVisibilityLevel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的对沙盒应用程序域中运行的部分信任代码可见的标志。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, the &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt; (APTCA) attribute can be made conditional by setting its &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt; property to &lt;xref:System.Security.PartialTrustVisibilityLevel&gt;.</source>
          <target state="translated">开头<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>， &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;(APTCA) 特性可通过设置其&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt;属性设置为&lt;xref:System.Security.PartialTrustVisibilityLevel&gt;.&lt;/xref:System.Security.PartialTrustVisibilityLevel&gt;&lt;/xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt;条件&lt;/xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>An APTCA assembly that is marked with &lt;xref:System.Security.PartialTrustVisibilityLevel&gt; cannot be used by partially trusted code unless the host application allows it.</source>
          <target state="translated">APTCA 程序集&lt;xref:System.Security.PartialTrustVisibilityLevel&gt;不能由部分受信任的代码，除非主机应用程序允许它。&lt;/xref:System.Security.PartialTrustVisibilityLevel&gt;使用标记</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The host of a sandboxed application domain allows code in the application domain to use assemblies with conditional APTCA attributes by creating an array that contains the simple name and public key of each assembly, and assigning the array to this property.</source>
          <target state="translated">沙盒应用程序域的主机允许的应用程序域使用带有条件 APTCA 特性的程序集，通过创建一个数组，包含的简单名称和公钥的每个程序集，并将数组分配给此属性中的代码。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For example, an element of the array might look like the following: "MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</source>
          <target state="translated">For example, an element of the array might look like the following: "MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you are using a subclass of &lt;xref:System.AppDomainManager&gt;, and the assembly that defines it depends on assemblies that are marked with the conditional APTCA attribute, you must include those assemblies in the list that you pass to the PartialTrustVisibleAssemblies property of the &lt;xref:System.AppDomainSetup&gt; you use to create application domains.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 如果你使用的一个子类&lt;xref:System.AppDomainManager&gt;，并定义它的程序集依赖于用条件 APTCA 特性标记的程序集，你必须在传递给 PartialTrustVisibleAssemblies 属性列表中包括这些程序集&lt;xref:System.AppDomainSetup&gt;使用来创建应用程序域。&lt;/xref:System.AppDomainSetup&gt; &lt;/xref:System.AppDomainManager&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Otherwise the assemblies that are marked with the conditional APTCA attribute will be disabled.</source>
          <target state="translated">否则将禁用用条件 APTCA 特性标记的程序集。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you are debugging an application that is running in a sandboxed application domain, some &lt;xref:System.Security.SecurityException&gt; messages can be misleading.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 调试的应用程序在沙盒应用程序域中，运行时某些&lt;xref:System.Security.SecurityException&gt;消息可能会产生误导。&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For example, a message might state that one of your fully trusted assemblies has only limited permissions, when the real cause of the problem is that a security demand that exceeds the grant set of the sandboxed application domain has propagated to the boundary of the sandboxed application domain and failed.</source>
          <target state="translated">例如，一条消息可能状态，你完全受信任的程序集之一只具有有限权限，超过沙盒应用程序域的授予集的安全要求已传播到沙盒应用程序域边界问题的真正原因时，操作失败。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An array of partial assembly names, where each partial name consists of the simple assembly name and the public key.</source>
          <target state="translated">部分程序集名称，其中每个部分名称组成的简单程序集名称和公钥的数组。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets or sets the list of directories under the application base directory that are probed for private assemblies.</source>
          <target state="translated">获取或设置的私有程序集的探测应用程序基目录下的目录列表。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Private assemblies are deployed in the same directory structure as the application.</source>
          <target state="translated">专用程序集部署在与应用程序相同的目录结构中。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If the directories specified for PrivateBinPath are not under &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;, they are ignored.</source>
          <target state="translated">如果为 PrivateBinPath 指定的目录不在&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;，它们将被忽略。&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A list of directory names separated by semicolons.</source>
          <target state="translated">用分号分隔的目录名称的列表。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets or sets a string value that includes or excludes &lt;xref:System.AppDomainSetup.ApplicationBase<bpt id="p1">*</bpt>&gt; from the search path for the application, and searches only &lt;xref:System.AppDomainSetup.PrivateBinPath<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">获取或设置一个字符串值，包括或排除&lt;&gt; <bpt id="p1">*</bpt>1&gt; 应用程序，并且仅搜索的搜索路径中&lt;&gt; <ept id="p1">*</ept>1&gt;。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Set this property to any non-null string value, including &lt;xref:System.String?displayProperty=fullName&gt; (""), to exclude the application directory path — that is, &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; — from the search path for the application, and to search for assemblies only in &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;.</source>
          <target state="translated">将此属性设置为任何非 null 字符串值，包括&lt;xref:System.String?displayProperty=fullName&gt;("")，以排除应用程序目录路径-即， &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;-对于应用程序，并仅中&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;.&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;的程序集搜索的搜索路径中&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to include the application base path when searching for assemblies; any non-null string value to exclude the path.</source>
          <target state="translated">空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中) 以包括搜索程序集时的应用程序基路径; 任何非 null 字符串值，包括路径。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether interface caching is disabled for interop calls in the application domain, so that a <ph id="ph1">`QueryInterface`</ph> is performed on each call.</source>
          <target state="translated">获取或设置一个值，指示为互操作调用在应用程序域中，是否禁用接口缓存，以便<ph id="ph1">`QueryInterface`</ph>对每个调用执行。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Disabling interface caching has a significant impact on the performance of interop calls.</source>
          <target state="translated">对性能的互操作调用禁用接口缓存产生重大影响。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This member is introduced in the <ph id="ph1">[!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">此成员在中引入<ph id="ph1">[!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if interface caching is disabled for interop calls in application domains created with the current <bpt id="p2">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果为创建与当前的应用程序域中的互操作调用禁用接口缓存<bpt id="p2">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Sets the specified switches, making the application domain compatible with previous versions of the .NET Framework for the specified issues.</source>
          <target state="translated">设置指定的开关，从而使应用程序域与针对指定问题的.NET framework 的早期版本兼容。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>An enumerable set of string values that specify compatibility switches, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to erase the existing compatibility switches.</source>
          <target state="translated">指定兼容性开关的字符串值的可枚举集或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>擦除现有兼容性开关。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Provides XML configuration information for the application domain, replacing the application's XML configuration information.</source>
          <target state="translated">提供应用程序域，并替换应用程序的 XML 配置信息的 XML 配置信息。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The SetConfigurationBytes method provides a way to replace the configuration information of an application that creates a new application domain.</source>
          <target state="translated">SetConfigurationBytes 方法使您能够将创建新的应用程序域的应用程序的配置信息。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The configuration file information in <ph id="ph1">`value`</ph>replaces the configuration file information for the application.</source>
          <target state="translated">中的配置文件信息<ph id="ph1">`value`</ph>替换应用程序的配置文件信息。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For example, when the Example.exe application creates a new application domain, it can replace the configuration information originally obtained from the Example.exe.config file.</source>
          <target state="translated">例如，当 Example.exe 应用程序创建新的应用程序域时，它可以替换最初从 Example.exe.config 文件中获取的配置信息。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some consumers of configuration file information do not use the information stored by the SetConfigurationBytes method.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 某些的配置文件信息的使用者不使用 SetConfigurationBytes 方法所存储的信息。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The runtime does not enforce this.</source>
          <target state="translated">运行时不会强制此。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To ensure that all configuration file information is replaced in a new application domain, use the &lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt; property to specify a configuration file.</source>
          <target state="translated">若要确保所有的配置文件信息已替换为新的应用程序域中，使用&lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;属性来指定配置文件。&lt;/xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The SetConfigurationBytes method does affect assembly binding.</source>
          <target state="translated">SetConfigurationBytes 方法会影响程序集绑定。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The XML in <ph id="ph1">`value`</ph> is the same as the XML in a normal configuration file, except that it is stored as a &lt;xref:System.Byte&gt; array.</source>
          <target state="translated">中的 XML<ph id="ph1">`value`</ph>具有与在常规配置文件中，XML 相同，只不过它存储为&lt;xref:System.Byte&gt;数组。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An array that contains the XML configuration information to be used for the application domain.</source>
          <target state="translated">包含要用于应用程序域的 XML 配置信息的数组。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Provides the common language runtime with an alternate implementation of a string comparison function.</source>
          <target state="translated">公共语言运行时提供备用字符串比较函数的实现。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following string comparison and sorting methods can be overridden by the SetNativeFunction method:      -   <ph id="ph1">`IsNLSDefinedString`</ph><ph id="ph2">      -   </ph><ph id="ph3">`CompareStringEx`</ph><ph id="ph4">      -   </ph><ph id="ph5">`LCMapStringEx`</ph><ph id="ph6">      -   </ph><ph id="ph7">`FindNLSStringEx`</ph><ph id="ph8">      -   </ph><ph id="ph9">`CompareStringOrdinal`</ph><ph id="ph10">      -   </ph><ph id="ph11">`GetNLSVersion`</ph>       For information about these functions, see <bpt id="p1">[</bpt>National Language Support Functions<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228134)</ept>.</source>
          <target state="translated">下面的字符串比较和排序方法 SetNativeFunction 方法可重写:- <ph id="ph1">`IsNLSDefinedString`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`CompareStringEx`</ph> <ph id="ph4">      -   </ph> <ph id="ph5">`LCMapStringEx`</ph> <ph id="ph6">      -   </ph> <ph id="ph7">`FindNLSStringEx`</ph> <ph id="ph8">      -   </ph> <ph id="ph9">`CompareStringOrdinal`</ph> <ph id="ph10">      -   </ph> <ph id="ph11">`GetNLSVersion`</ph>有关这些函数的信息，请参阅<bpt id="p1">[</bpt>国家/地区的语言支持功能<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228134)</ept>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The name of the string comparison function to override.</source>
          <target state="translated">若要重写的字符串比较函数的名称。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The function version.</source>
          <target state="translated">函数版本。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>, its value must be 1 or greater.</source>
          <target state="translated">有关<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>，其值必须为 1 或更高版本。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A pointer to the function that overrides <ph id="ph1">`functionName`</ph>.</source>
          <target state="translated">重写函数指针<ph id="ph1">`functionName`</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;functionName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;functionName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;functionVersion&lt;/code&gt;</ph> is not 1 or greater.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;functionVersion&lt;/code&gt;</ph>不是 1 或更高版本。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;functionPointer&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.IntPtr?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;functionPointer&lt;/code&gt;</ph>是<ph id="ph2">&amp;lt;</ph>xref:System.IntPtr?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets or sets the names of the directories containing assemblies to be shadow copied.</source>
          <target state="translated">获取或设置包含要进行影像复制程序集的目录的名称。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>When shadow copying is enabled, the default is to shadow copy all assemblies found through probing; that is, in the directories specified by the &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; and &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; properties.</source>
          <target state="translated">启用卷影复制后，默认值是向通过探测; 找到的所有程序集的卷影副本即指定的目录的&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;和&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;属性。&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt; &lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The ShadowCopyDirectories property restricts the shadow copy to the assemblies in the directories specified by ShadowCopyDirectories.</source>
          <target state="translated">ShadowCopyDirectories 属性会限制对 ShadowCopyDirectories 所指定的目录中的程序集卷影副本。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If you don’t assign a string to the ShadowCopyDirectories property, or if you set this property to <ph id="ph1">`null`</ph>, all assemblies in the directories specified by the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; and &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; properties are shadow copied.</source>
          <target state="translated">如果不将字符串分配给 ShadowCopyDirectories 属性，或将此属性设置为<ph id="ph1">`null`</ph>，通过指定的目录中的所有程序集&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;和&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;属性进行卷影复制。&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt; &lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Directory paths must not contain semicolons, because the semicolon is the delimiter character.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 目录路径不能包含分号，因为分号是分隔符字符。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>There is no escape character for semicolons.</source>
          <target state="translated">分号没有转义符。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>When shadow copying is in effect, assembly files are copied to another location before the assemblies are loaded.</source>
          <target state="translated">卷影复制生效时，程序集文件复制到其他位置，这些程序集加载之前。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The original assembly file is not locked, so it can be updated.</source>
          <target state="translated">没有锁定原始程序集文件，因此它可以进行更新。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">卷影复制的详细信息，请参阅<bpt id="p1">[</bpt>影像复制程序集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A list of directory names separated by semicolons.</source>
          <target state="translated">用分号分隔的目录名称的列表。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that indicates whether shadow copying is turned on or off.</source>
          <target state="translated">获取或设置指示是否卷影复制打开还是关闭的字符串。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">卷影复制的详细信息，请参阅<bpt id="p1">[</bpt>影像复制程序集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The string value "true" to indicate that shadow copying is turned on; or "false" to indicate that shadow copying is turned off.</source>
          <target state="translated">字符串值"true"指示卷影复制处于打开状态;或者"false"指示卷影复制处于关闭状态。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that specifies the target version and profile of the .NET Framework for the application domain, in a format that can be parsed by the <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> constructor.</source>
          <target state="translated">获取或设置一个字符串，指定的目标版本和配置文件的.NET Framework 的应用程序域中，可以通过分析的格式<ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Set this property to tell the currently running version of the .NET Framework that the application domain will be used to load and run assemblies that have been compiled for the target version and profile.</source>
          <target state="translated">设置此属性来告诉当前正在运行.NET Framework 版本，将使用的应用程序域加载并运行目标版本和配置文件已编译的程序集。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>If the currently running version of the .NET Framework has optional behaviors that affect the compatibility of code that was compiled with the target version, it can enable or disable those behaviors, as appropriate, to improve compatibility.</source>
          <target state="translated">如果当前正在运行.NET Framework 版本有影响的兼容性用目标版本编译的代码的可选行为，它可以启用或禁用这些行为，根据需要，为了提高兼容性。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This can be useful when an application supports add-ins compiled with multiple versions of the .NET Framework by running them in separate application domains.</source>
          <target state="translated">当应用程序支持在单独的应用程序域中运行它们编译使用.NET framework 的多个版本的外接程序时，这很有用。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For client applications, the value of the TargetFrameworkName property is inferred from the &lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt; attribute.</source>
          <target state="translated">对于客户端应用程序，TargetFrameworkName 属性的值推断从&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;属性。&lt;/xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph> and later, this attribute is added to the assembly automatically based on the setting of the project's <bpt id="p1">**</bpt>Target Framework<ept id="p1">**</ept> property.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph>和更高版本，此属性添加到程序集将根据项目的设置自动<bpt id="p1">**</bpt>目标框架<ept id="p1">**</ept>属性。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The target version and profile of the .NET Framework.</source>
          <target state="translated">目标版本和.NET Framework 配置文件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>