<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1ae7f0b6f29480d13bad83487da4b73b79b8851</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Security.SecurityAlgorithmSuite.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09fff3f1e700072a9ade19f23cea20b34d041c89</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1554f8b779a9f49ee9c4373d0b86b5add436ea2f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies properties of algorithms.</source>
          <target state="translated">指定算法的属性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This is an <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">这是<bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.</source>
          <target state="translated">此类的实例用于指定用于保护消息的算法的加密特性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms.</source>
          <target state="translated">此类派生的类用于实例化安全算法套件，并包含描述安全算法的属性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`wsBasicHttp`</ph> binding uses an internal derived class to specify the properties of its security algorithms.</source>
          <target state="translated">例如，<ph id="ph1">`wsBasicHttp`</ph>绑定使用内部派生的类指定其安全算法的属性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.</source>
          <target state="translated">此类的实例组成于静态属性和只读属性，因此构造函数不初始化任何属性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the Basic128 algorithm suite.</source>
          <target state="translated">获取 Basic128 算法组。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, AES-128 is used as the encryption algorithm.</source>
          <target state="translated">默认情况下，AES-128 用作加密算法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The 128-bit Basic <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">128 位 Basic <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 RSA15 作为密钥换行算法和 128 位 Basic 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 RSA15 作为密钥换行算法和 128 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 SHA256 作为签名摘要和 128 位 Basic 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 SHA256 作为签名摘要和 128 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 RSA15 作为密钥换行算法，SHA256 作为签名摘要和 128 位 Basic 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 RSA15 作为密钥换行算法，SHA256 作为签名摘要和 128 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取使用 192 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>By default, AES-192 is used as the encryption algorithm.</source>
          <target state="translated">默认情况下，AES&amp;192; 用作加密算法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 192 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 RSA15 作为密钥换行算法并使用 192 位 Basic 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 RSA15 作为密钥换行算法并使用 192 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组，其中使用 SHA256 作为签名摘要和 192 位 Basic 作为消息加密算法组。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">算法套件，这一使用 SHA256 作为签名摘要和 192 位 Basic 作为消息加密算法。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 RSA15 作为密钥换行算法，SHA256 作为签名摘要和 192 位 Basic 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 RSA15 作为密钥换行算法，SHA256 作为签名摘要和 192 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取使用 256 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>By default, AES-256 is used for the encryption algorithm.</source>
          <target state="translated">默认情况下，AES&amp;256; 用于加密算法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 256 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 RSA15 作为密钥换行算法和 256 位 Basic 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 RSA15 作为密钥换行算法和 256 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 SHA256 作为签名摘要和 256 位 Basic 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 SHA256 作为签名摘要和 256 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 RSA15 作为密钥换行算法，SHA256 作为签名摘要和 256 位 Basic 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</source>
          <target state="translated">使用 RSA15 作为密钥换行算法，SHA256 作为签名摘要和 256 位 Basic 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the default algorithm suite.</source>
          <target state="translated">获取默认算法套件。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写指定默认值，以及这些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The default <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</source>
          <target state="translated">默认值<bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;，它指定 256 位高级加密标准 (AES) 作为对称加密算法。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the default asymmetric key wrap algorithm as a string.</source>
          <target state="translated">获取默认的非对称密钥换行算法作为字符串。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When overridden, provides a string value that will be used for comparison in the &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A&gt; method.</source>
          <target state="translated">重写时，提供一个字符串值，将用于在比较&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A&gt;方法。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The default asymmetric key wrap algorithm.</source>
          <target state="translated">默认的非对称密钥换行算法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets the default asymmetric signature algorithm as a string.</source>
          <target state="translated">获取默认的非对称签名算法作为字符串。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When overridden, provides a string value that will be used for comparison in the &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A&gt; method.</source>
          <target state="translated">重写时，提供一个字符串值，将用于在比较&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A&gt;方法。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default asymmetric signature algorithm.</source>
          <target state="translated">默认的非对称签名算法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the default canonicalization algorithm as a string.</source>
          <target state="translated">获取默认的规范化算法作为字符串。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When overridden, provides a string value that will be used for comparison in the method &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A&gt;.</source>
          <target state="translated">重写时，提供一个字符串值，将用于比较方法&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A&gt;中</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The default canonicalization algorithm.</source>
          <target state="translated">默认的规范化算法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the default digest algorithm as a string.</source>
          <target state="translated">获取默认摘要算法作为字符串。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When overridden, provides a string value that will be used for comparison in the &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A&gt; method.</source>
          <target state="translated">重写时，提供一个字符串值，将用于在比较&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A&gt;方法。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The default digest algorithm.</source>
          <target state="translated">默认的摘要算法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the default encryption algorithm as a string.</source>
          <target state="translated">获取默认加密算法作为字符串。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When overridden, provides a string value that will be used for comparison in the &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A&gt; method.</source>
          <target state="translated">重写时，提供一个字符串值，将用于在比较&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A&gt;方法。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The default encryption algorithm.</source>
          <target state="translated">默认的加密算法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the default encryption key derivation length as an &lt;xref:System.Int32&gt; value.</source>
          <target state="translated">获取默认加密密钥派生长度，作为&lt;xref:System.Int32&gt;值。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The returned value will vary depending on the subclass that implements it.</source>
          <target state="translated">根据实现它的子类的情况下，返回的值会有所不同。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`Basic256`</ph> encryption, it returns 256.</source>
          <target state="translated">有关<ph id="ph1">`Basic256`</ph>加密，它会返回 256。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default encryption key derivation length.</source>
          <target state="translated">默认的加密密钥派生长度。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the default signature key derivation length as an &lt;xref:System.Int32&gt; value.</source>
          <target state="translated">获取默认签名密钥派生长度，作为&lt;xref:System.Int32&gt;值。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The returned value will vary depending on the subclass that implements it.</source>
          <target state="translated">根据实现它的子类的情况下，返回的值会有所不同。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`Basic256`</ph> encryption, it returns 192.</source>
          <target state="translated">有关<ph id="ph1">`Basic256`</ph>加密，它会返回 192。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default signature key derivation length.</source>
          <target state="translated">默认的签名密钥派生长度。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets the default symmetric key length as an &lt;xref:System.Int32&gt; value.</source>
          <target state="translated">获取默认对称密钥长度，作为&lt;xref:System.Int32&gt;值。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The returned value will vary depending on the subclass that implements it.</source>
          <target state="translated">根据实现它的子类的情况下，返回的值会有所不同。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`Basic256`</ph> encryption, it returns 256.</source>
          <target state="translated">有关<ph id="ph1">`Basic256`</ph>加密，它会返回 256。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default symmetric key length.</source>
          <target state="translated">默认对称密钥长度。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the default symmetric key wrap algorithm as a string.</source>
          <target state="translated">获取默认的对称密钥换行算法作为字符串。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default symmetric key wrap algorithm.</source>
          <target state="translated">默认的对称密钥换行算法。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets the default symmetric signature algorithm as a string.</source>
          <target state="translated">获取默认的对称签名算法作为字符串。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The default symmetric signature algorithm.</source>
          <target state="translated">默认的对称签名算法。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Indicates whether a particular key length is supported by the asymmetric algorithm.</source>
          <target state="translated">指示是否通过非对称算法支持特定的密钥长度。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Typical key lengths are 128, 192, and 256 bits.</source>
          <target state="translated">典型密钥长度为 128、 192 和 256 位。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The key length to check.</source>
          <target state="translated">要检查的密钥长度。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the key length is supported by the asymmetric algorithm; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果非对称算法; 支持的密钥长度否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Indicates whether an asymmetric key wrap algorithm is supported.</source>
          <target state="translated">指示是否支持非对称密钥换行算法。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>获取从&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A&gt;返回的字符串比较</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The algorithm to check.</source>
          <target state="translated">要检查的算法。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the asymmetric key wrap algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持非对称密钥换行算法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Indicates whether an asymmetric signature algorithm is supported.</source>
          <target state="translated">指示是否支持非对称签名算法。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>获取从&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A&gt;返回的字符串比较</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">要检查的算法名称。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the asymmetric signature algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持非对称签名算法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Indicates whether a canonicalization algorithm is supported.</source>
          <target state="translated">指示是否支持规范化算法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>获取从&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A&gt;返回的字符串比较</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">要检查的算法名称。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the canonicalization algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持规范化算法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Indicates whether a digest algorithm is supported.</source>
          <target state="translated">指示是否支持摘要算法。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>获取从&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A&gt;返回的字符串比较</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">要检查的算法名称。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the digest algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持摘要算法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Indicates whether an encryption algorithm is supported.</source>
          <target state="translated">指示是否支持加密算法。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`algorithm`</ph> gets compared to the string returned from &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>获取从&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A&gt;.&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A&gt;返回的字符串比较</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">要检查的算法名称。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the encryption algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持加密算法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Indicates whether an encryption key derivation algorithm is supported.</source>
          <target state="translated">指示是否支持加密密钥派生算法。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">要检查的算法名称。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the encryption key derivation algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持加密密钥派生算法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Indicates whether a signature key derivation algorithm is supported.</source>
          <target state="translated">指示是否支持签名密钥派生算法。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">要检查的算法名称。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature key derivation algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持签名密钥派生算法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, indicates whether a particular symmetric key length is supported.</source>
          <target state="translated">当在派生类中重写，指示是否支持特定的对称密钥长度。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`length`</ph> is compared to a range of values depending on the subclass.</source>
          <target state="translated"><ph id="ph1">`length`</ph>与根据的子类值的范围进行比较。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For example, in the <ph id="ph1">`TripleDES`</ph> subclass, this method verifies that <ph id="ph2">`length`</ph> is between 192 and 256, inclusive.</source>
          <target state="translated">例如，在<ph id="ph1">`TripleDES`</ph>子类，此方法验证<ph id="ph2">`length`</ph>是否介于 192 和 256，（含)。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The key length to check.</source>
          <target state="translated">要检查的密钥长度。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the symmetric key length is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持对称密钥长度进行;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Indicates whether a symmetric key wrap algorithm is supported.</source>
          <target state="translated">指示是否支持对称密钥换行算法。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">要检查的算法名称。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the symmetric key wrap algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持对称密钥换行算法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Indicates whether a symmetric signature algorithm is supported.</source>
          <target state="translated">指示是否支持对称签名算法。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The algorithm name to check.</source>
          <target state="translated">要检查的算法名称。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the symmetric signature algorithm is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果支持对称签名算法;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets the Triple Data Encryption Standard (DES) algorithm suite.</source>
          <target state="translated">获取三重数据加密标准 (DES) 算法组。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The Triple DES <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">三重 DES <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityAlgorithmSuite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">获取使用 RSA15 作为密钥换行算法和 192 位三重数据加密标准 (DES) 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">使用 RSA15 作为密钥换行算法和 192 位三重数据加密标准 (DES) 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 SHA256 作为签名摘要和 192 位三重数据加密标准 (DES) 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">使用 SHA256 作为签名摘要和 192 位三重数据加密标准 (DES) 作为消息加密算法的算法套件。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">获取一个算法组使用 RSA15 作为密钥换行算法，SHA256 作为签名摘要和 192 位三重数据加密标准 (DES) 作为消息加密算法的算法组。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;返回是实际内部子类，该子类重写一些指定默认值，以及一些方法的属性。&lt;/xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</source>
          <target state="translated">使用 RSA15 作为密钥换行算法，SHA256 作为签名摘要和 192 位三重数据加密标准 (DES) 作为消息加密算法的算法套件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>