<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b7524d9d415d82fd63e272f9700decfeaa2138b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.MetadataServices.SdlChannelSink.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81f1f05adb0ca07a20933608d59a02dd71b58e7b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2806d3b4176db3a588a9636819c4fc8a3b71453f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server.</source>
          <target state="translated">提供服务器的实现在服务器动态生成 Web 服务描述语言 (WSDL) 的通道接收器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The SdlChannelSink is used to create WSDL in situations where the URL ends with the string "?wsdl".</source>
          <target state="translated">SdlChannelSink 用于在 URL 以字符串的结尾位置的情况下创建 WSDL"？ wsdl"。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following table shows the channel configuration properties that can be specified for this channel sink.</source>
          <target state="translated">下表显示通道可以为此通道接收器指定的配置属性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The first two properties combine to control the WSDL publication of objects published by the application domain.</source>
          <target state="translated">前两个属性组合可用于控制 WSDL 发布的发布的应用程序域的对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`false`</ph> is specified for the first property, no WSDL is returned, regardless of the second property.</source>
          <target state="translated">如果<ph id="ph1">`false`</ph>指定的第一个属性，则没有 WSDL，则返回，而不考虑第二个属性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>(The default is <ph id="ph1">`true`</ph>.) Otherwise, the second controls whether the global metadata object URI is permitted to respond.</source>
          <target state="translated">(默认值是<ph id="ph1">`true`</ph>。)否则，第二个控制是否允许全局元数据对象 URI 进行响应。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>(The default is <ph id="ph1">`false`</ph>.)      |Property|Description|   |--------------|-----------------|   |<ph id="ph2">`metadataEnabled`</ph>|A Boolean value that specifies whether to honor requests that end in "?wsdl" if this sink is in the channel sink chain.</source>
          <target state="translated">(默认值是<ph id="ph1">`false`</ph>。)     |属性 |说明 |  |--------------|-----------------|  |<ph id="ph2">`metadataEnabled`</ph>|一个布尔值，指定是否遵守请求以结尾的"？ wsdl"如果此接收器是通道接收器链中。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The default setting is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">默认设置是<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`false`</ph>, the sink throws an exception in all cases where metadata is requested for any object in the application domain.</source>
          <target state="translated">如果<ph id="ph1">`false`</ph>，接收器将在所有情况下，即应用程序域中的任何对象请求元数据时引发异常。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|   |<ph id="ph1">`remoteApplicationMetadataEnabled`</ph>|A Boolean value that specifies whether to honor requests for the object URI "RemoteApplicationMetadata?wsdl", which returns WSDL that describes all objects that are published by the application domain.</source>
          <target state="translated">只能由.NET Framework 版本 1.1 以下平台上支持此属性︰ Windows 98、 Windows NT 4.0、 Windows Millennium Edition、 Windows 2000、 Windows XP Home Edition、 Windows XP Professional、 Windows Server 2003 系列。 |  |<ph id="ph1">`remoteApplicationMetadataEnabled`</ph>|一个布尔值，指定是否遵守对象 URI 请求"RemoteApplicationMetadata？ wsdl"，它由应用程序域返回描述发布的所有对象的 WSDL。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`false`</ph>, then any request to "RemoteApplicationMetadata.rem" throws an exception.</source>
          <target state="translated">如果<ph id="ph1">`false`</ph>，对"RemoteApplicationMetadata.rem"任何请求将引发异常。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>All other "?wsdl" requests for particular object URIs are honored.</source>
          <target state="translated">所有其他"？ wsdl"对于特定对象的 Uri 的请求需要。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`true`</ph>, the global metadata request is honored.</source>
          <target state="translated">如果<ph id="ph1">`true`</ph>，则接受全局元数据请求。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The default setting is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">默认设置是<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|</source>
          <target state="translated">只能由.NET Framework 版本 1.1 以下平台上支持此属性︰ Windows 98、 Windows NT 4.0、 Windows Millennium Edition、 Windows 2000、 Windows XP Home Edition、 Windows XP Professional、 Windows Server 2003 系列。 |</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Indicates the channel that will receive the messages serialized by the new instance of <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指示将接收的新实例序列化的消息的通道<bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The next sink in the sink chain.</source>
          <target state="translated">接收器链中的下一步接收器。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Requests processing from the current sink of the response from a method call that was sent asynchronously.</source>
          <target state="translated">从当前接收器的方法调用异步发送的响应进行处理的请求。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A stack of sinks that lead back to the server transport sink.</source>
          <target state="translated">接收器回服务器传输接收器堆栈。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Information associated with the current sink, generated on the request side, and needed on the response side.</source>
          <target state="translated">与当前的接收器中，在请求方中，生成并在响应端所需的信息。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The response message.</source>
          <target state="translated">响应消息中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The headers to add to the return message heading to the client.</source>
          <target state="translated">要将添加到发往客户端返回消息的标头。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The stream heading back to the transport sink.</source>
          <target state="translated">流标题回传输接收器。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns the &lt;xref:System.IO.Stream&gt; onto which the provided response message is to be serialized.</source>
          <target state="translated">返回&lt;xref:System.IO.Stream&gt;提供的响应消息进行序列化到其上。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The current method is called when a response stream needs to be created.</source>
          <target state="translated">当需要创建响应流调用当前方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A stack of sinks that lead back to the server transport sink.</source>
          <target state="translated">接收器回服务器传输接收器堆栈。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Information associated with the current sink, generated on the request side, and needed on the response side.</source>
          <target state="translated">与当前的接收器中，在请求方中，生成并在响应端所需的信息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The response message to serialize.</source>
          <target state="translated">要序列化的响应消息。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The headers to put in the response stream to the client.</source>
          <target state="translated">要放在客户端的响应流中的标头。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; onto which the provided response message is to be serialized.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;提供的响应消息进行序列化到其上。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the next <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the sink chain.</source>
          <target state="translated">获取下一个<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接收器链中。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The next <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the sink chain.</source>
          <target state="translated">下一步<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接收器链中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Requests message processing from the current sink.</source>
          <target state="translated">从当前接收器处理的请求消息。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The proxy's job is to convert a method call that is invoked on it into a message object.</source>
          <target state="translated">代理的作业是将转换为消息对象调用它的方法调用。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The Message object, which implements the &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; interface, is passed from the client end to the server end by invoking &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; on message sink objects.</source>
          <target state="translated">消息对象，该实现对象&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;接口时，传递从客户端到服务器端通过调用&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;对消息接收器对象。&lt;/xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMessage&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Message sinks are chained together, which means that every message sink is responsible for calling &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; on the next message sink after it has performed its work.</source>
          <target state="translated">消息的接收器被链接在一起，这意味着每个消息接收器负责调用&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;对下一个消息的接收器后它已执行其工作。&lt;/xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.</source>
          <target state="translated">例如，与同步相关的消息接收器可能会导致锁获取或发布并委派给下游消息接收器。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the formatter channel sink gets a message that needs to be sent over the channel, it calls &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;, passing the message as a parameter.</source>
          <target state="translated">当格式化程序通道接收器获取一条消息，需要通过通道发送，它调用&lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;，将消息作为参数传递。&lt;/xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The formatter sink then creates the transport header array and calls &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt; on the formatter sink.</source>
          <target state="translated">格式化程序接收器然后创建的传输标头数组和调用&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt;上格式化程序接收器。&lt;/xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink.</source>
          <target state="translated">此调用沿接收器链中，转发并且任何接收器均可创建被传递回格式化程序接收器的请求流。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>After this call returns, the message is serialized, &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt; is called on the first chain in the sink chain, and the message is passed to the channel sinks.</source>
          <target state="translated">完成此操作后调用返回后，消息序列化，&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;接收器链中的第一个链调用和消息传递到通道接收器。&lt;/xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.</source>
          <target state="translated">通道接收器收到消息后，它们可以将数据写入到流、 将标头添加到标头的数组，并转发到下一步接收器调用之前将自己添加到接收器堆栈。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.</source>
          <target state="translated">当调用达到传输接收器链末尾时，传输接收器发送标头，并通过到服务器，此过程被反转其中通道序列化消息。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink.</source>
          <target state="translated">当消息到达服务器端时，传输接收器将检索标头和序列化流中的消息并将这些通过接收器链转发，直到到达格式化程序接收器。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called.</source>
          <target state="translated">然后，格式化程序接收器反序列化消息，并将其转发给远程处理，其中消息转变为方法调用，该服务器对象调用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A stack of channel sinks that called the current sink.</source>
          <target state="translated">接收器调用了当前接收器的通道堆栈。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The message that contains the request.</source>
          <target state="translated">包含请求的消息。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The headers that are retrieved from the incoming message from the client.</source>
          <target state="translated">检索从来自客户端的传入消息标头。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The stream that needs to be processed and passed on to the deserialization sink.</source>
          <target state="translated">需要进行处理和传递给反序列化接收器流。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the response message.</source>
          <target state="translated">此方法返回时，包含<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包含响应消息。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ITransportHeaders"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the headers to add to return message heading to the client.</source>
          <target state="translated">此方法返回时，包含<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ITransportHeaders"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>容纳要添加到客户端返回消息标题的标头。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a &lt;xref:System.IO.Stream&gt; that is heading to the transport sink.</source>
          <target state="translated">此方法返回时，包含&lt;xref:System.IO.Stream&gt;即发往传输接收器。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ServerProcessing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> status value that provides information about how the message was processed.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ServerProcessing"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>状态值，提供有关如何处理消息的信息。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Collections.IDictionary&gt; of properties for the current channel sink.</source>
          <target state="translated">获取&lt;xref:System.Collections.IDictionary&gt;的当前通道接收器的属性。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.IDictionary&gt; of properties for the current channel sink.</source>
          <target state="translated">A&lt;xref:System.Collections.IDictionary&gt;的当前通道接收器的属性。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>