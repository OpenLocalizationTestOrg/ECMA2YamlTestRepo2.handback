<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5df3b73944a7d160edbd44b35970e6bd7f93cf90</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.Runtime.Hosting.WorkflowPersistenceService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9355b1266047b945632ee80a6ed12b464f6a244e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f77726f53fd8bc45fbec79dccae467e3296eea89</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class from which all persistence services are derived.</source>
          <target state="translated">抽象基类派生的所有持久性服务。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>时工作流运行时中发生特定情况，工作流运行时引擎将保留有关工作流实例的状态信息。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls &lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName&gt; on the workflow instance, or when a workflow instance is terminated or finishes.</source>
          <target state="translated">持久性会时发生，例如，原子事务完成，当工作流实例进入空闲状态时，主机调用&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName&gt;对工作流实例，或当工作流实例终止或完成。&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</source>
          <target state="translated">当工作流运行时引擎语义指示应执行保留操作时，工作流运行时引擎将调用由持久性服务，以保存有关工作流实例的状态信息提供的方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</source>
          <target state="translated">同样，当工作流运行时引擎需要还原以前持久化工作流实例，它将调用由持久性服务，从而加载此状态信息提供的方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine handles all the semantics regarding when to perform persistence.</source>
          <target state="translated">工作流运行时引擎处理所有关于何时执行持久性的语义。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The persistence service handles actually saving and loading the workflow state information to or from a data store.</source>
          <target state="translated">持久性服务处理实际保存和加载到或从数据存储的工作流状态信息。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can create a persistence service by deriving a class from the WorkflowPersistenceService class.</source>
          <target state="translated">可以通过从 WorkflowPersistenceService 类派生一个类来创建持久性服务。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can add your persistence service to the workflow runtime engine by calling &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; or by making an appropriate entry in the application configuration file.</source>
          <target state="translated">你可以将持久性服务添加到工作流运行时引擎中通过调用&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;或在应用程序配置文件进行适当的项。&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; should only contain one persistence service.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;应仅包含一个持久性服务。&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows Workflow Foundation provides the &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt; class, an out-of-box persistence service, which you can use as is or extend.</source>
          <target state="translated">Windows Workflow Foundation 提供&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;类，或扩展时，你可以使用现成的持久性服务。&lt;/xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</source>
          <target state="translated">工作流运行时引擎具有锁定工作流状态信息的使用在其中运行在不同进程中的持久性服务可能的有权访问单个数据存储区中的语义。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The WorkflowPersistenceService class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt; to unlock previously locked workflow state information.</source>
          <target state="translated">WorkflowPersistenceService 类提供的功能通过提供的参数都支持此功能的工作流运行时引擎&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;，它指定在数据存储区，并通过提供一种方法是否应导致工作流实例的状态信息解锁&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;以前取消锁定锁定工作流状态信息。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In a persistence service that implements locking, a call to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt; should lock the state information for a workflow instance.</source>
          <target state="translated">在实现锁定，调用的持久性服务&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;应锁定的工作流实例的状态信息。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Your persistence service should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; if it fails to save state information to its data store or load state information from its data store.</source>
          <target state="translated">持久性服务应引发&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;未能将状态信息保存到其数据存储区或从其数据存储区加载状态信息。&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine expects this behavior.</source>
          <target state="translated">工作流运行时引擎需要此行为。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A batching mechanism is provided for services that use a durable store to save workflow state information.</source>
          <target state="translated">为使用持久存储区以保存工作流状态信息的服务提供了一个批处理机制。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</source>
          <target state="translated">务必在这些情况下，持久性服务使用的持久性存储区和工作流运行时引擎的内部状态之间保持一致。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can add functionality defined by the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface to your service, and then participate in workflow transaction batching provided by the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; by adding changes to your data store as work items to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;.</source>
          <target state="translated">你可以添加&lt;xref:System.Workflow.Runtime.IPendingWork&gt;到你的服务接口，并提供的&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;通过添加对数据存储区为工作项到&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;。&lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;更改&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;工作流事务批处理，则参与&lt;/xref:System.Workflow.Runtime.IPendingWork&gt;定义功能</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The durable store itself should implement the &lt;xref:System.Transactions.IEnlistmentNotification&gt; interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</source>
          <target state="translated">持久存储区自身应实现&lt;xref:System.Transactions.IEnlistmentNotification&gt;接口，以便不在事务回滚时正确保留工作流信息。&lt;/xref:System.Transactions.IEnlistmentNotification&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt; or &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;或&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowPersistenceService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">派生类中实现时，初始化的新实例<bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowPersistenceService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves the serialized default form of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">检索的序列化的默认格式<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose serialized form is requested.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>请求其序列化的窗体。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The serialized default form of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">序列化的默认格式<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Indicates whether the given activity is blocked.</source>
          <target state="translated">指示是否阻止给定的活动。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">工作流实例的根活动。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the given activity is blocked; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果阻止给定的活动;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Retrieves the termination or suspend information of the given activity.</source>
          <target state="translated">检索终止或挂起的给定的活动的信息。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">工作流实例的根活动。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the termination or suspend information.</source>
          <target state="translated">A &lt;xref:System.String&gt;，包含终止或挂起信息。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Retrieves the status of the workflow.</source>
          <target state="translated">检索工作流的状态。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">工作流实例的根活动。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowStatus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that denotes the status of the workflow.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowStatus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>枚举值，该值指示工作流状态。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, loads the specified completed scope back into memory.</source>
          <target state="translated">派生类中实现时，将指定的已完成作用域加载回内存。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine uses LoadCompletedContextActivity to implement compensation.</source>
          <target state="translated">工作流运行时引擎使用 LoadCompletedContextActivity 实现补偿。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You must restore an identical copy of the completed scope.</source>
          <target state="translated">你必须还原已完成作用域的相同副本。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To do this, you must restore a valid &lt;xref:System.IO.Stream&gt; from your representation of the completed scope in the data store.</source>
          <target state="translated">若要执行此操作，你必须还原有效&lt;xref:System.IO.Stream&gt;从数据中的已完成作用域的表示形式存储。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Then you must pass this &lt;xref:System.IO.Stream&gt; to one of the overloaded methods of &lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; to perform deserialization of the scope.</source>
          <target state="translated">然后必须将此传入&lt;xref:System.IO.Stream&gt;的重载方法之一&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;执行作用域的反序列化。&lt;/xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If your persistence service cannot load the completed scope from its data store, it should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate message.</source>
          <target state="translated">如果持久性服务无法从其数据存储区加载已完成作用域，它应引发&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;用相应的消息。&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the completed scope.</source>
          <target state="translated">&lt;xref:System.Guid&gt;的已完成作用域。&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the activity that encloses the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示包含已完成作用域的活动。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它表示已完成作用域。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, loads the specified state of the workflow instance back into memory.</source>
          <target state="translated">派生类中实现时，将工作流实例的指定的状态加载回内存。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You must restore an identical copy of the activity.</source>
          <target state="translated">你必须还原活动的相同副本。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To do this, you must restore a valid &lt;xref:System.IO.Stream&gt; from your representation of the workflow instance in the data store; then you must pass this &lt;xref:System.IO.Stream&gt; to one of the overloaded &lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; methods to deserialize the workflow instance state.</source>
          <target state="translated">若要执行此操作，你必须还原有效&lt;xref:System.IO.Stream&gt;从数据存储区; 中的工作流实例的表示形式然后则必须将传递&lt;xref:System.IO.Stream&gt;重载之一&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;方法来反序列化工作流实例状态。&lt;/xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; &lt;/xref:System.IO.Stream&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If your persistence service cannot load the workflow instance state from its data store, it should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate message.</source>
          <target state="translated">如果持久性服务无法从其数据存储区加载工作流实例状态，它应引发&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;用相应的消息。&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</source>
          <target state="translated">工作流运行时引擎实现锁定语义，限制对保存在数据存储的工作流实例状态的访问。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This can be accessed by persistence services that run in multiple processes.</source>
          <target state="translated">这可以通过在多个进程中运行的持久性服务进行访问。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">锁定语义旨在防止运行在两个不同的进程在同一时间将相同的工作流实例加载到内存中的持久性服务。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</source>
          <target state="translated">根据类型的持久性服务旨在的环境以支持，你可以选择是否支持此功能。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a &lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.</source>
          <target state="translated">如果你选择支持运行时锁定语义，并且被其他进程以前锁定了此工作流实例状态，则应引发一种&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;。&lt;/xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Otherwise, you should lock access to the workflow instance state in your data store.</source>
          <target state="translated">否则，应锁定对数据存储区中的工作流实例状态的访问。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The workflow instance state can be unlocked by a call to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt; or a call to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; with the unlock parameter set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">可以通过调用解锁的工作流实例状态&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;或调用&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;解锁参数设置为<ph id="ph1">`true`</ph>。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the root activity of the workflow instance.</source>
          <target state="translated">&lt;xref:System.Guid&gt;的工作流实例的根活动。&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the root activity of the workflow instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示工作流实例的根活动。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Restores the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from its serialized form.</source>
          <target state="translated">还原<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从其序列化格式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The serialized form of <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">序列化的形式<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The outer <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, containing the <bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to restore.</source>
          <target state="translated">外部<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，其中包含<bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>还原。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The restored <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">还原<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, saves the specified completed scope to a data store.</source>
          <target state="translated">派生类中实现时，将保存到数据存储区的指定的已完成作用域。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</source>
          <target state="translated">工作流运行时引擎保存的已完成作用域活动的状态，以便实现补偿。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You must call one of the overloaded &lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt; methods to serialize <ph id="ph1">`activity`</ph> into a &lt;xref:System.IO.Stream&gt;; you may then choose to additionally process the &lt;xref:System.IO.Stream&gt; before writing it to your data store.</source>
          <target state="translated">你必须调用的重载之一&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;方法要序列化<ph id="ph1">`activity`</ph>到&lt;xref:System.IO.Stream&gt;; 然后，可以选择，其他处理&lt;xref:System.IO.Stream&gt;然后将其写入数据存储区。&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.IO.Stream&gt; &lt;/xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>However, when the workflow runtime engine calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;, you must restore an identical copy of the activity.</source>
          <target state="translated">但是，在工作流运行时引擎调用&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;，你必须还原活动的相同副本。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</source>
          <target state="translated">你必须能够将已完成作用域关联与其封闭的工作流实例，以将标记为不需要的作用域，数据存储区中，当工作流实例完成或终止。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Therefore, you should also save the &lt;xref:System.Guid&gt; of the workflow instance that is associated with the completed scope; this can be obtained from the &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt; property of the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with <ph id="ph1">`activity`</ph>.</source>
          <target state="translated">因此，你还应保存&lt;xref:System.Guid&gt;的工作流实例的程序与已完成作用域; 这可以从获取&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;属性&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;与关联<ph id="ph1">`activity`</ph>。&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt; &lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt; takes the &lt;xref:System.Guid&gt; of the completed scope as a parameter.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;采用&lt;xref:System.Guid&gt;作为参数的已完成作用域。&lt;/xref:System.Guid&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Therefore, you must also save the &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt; property associated with <ph id="ph1">`activity`</ph>.</source>
          <target state="translated">因此，你还必须保存&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;与关联属性<ph id="ph1">`activity`</ph>。&lt;/xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This property can be referenced through the &lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt; field of <ph id="ph1">`activity`</ph>.</source>
          <target state="translated">此属性可以通过引用&lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;字段<ph id="ph1">`activity`</ph>。&lt;/xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">如果你要实现使用持久存储区的持久性服务，为了保持与工作流运行时引擎的内部状态的一致性你应该参与工作流事务批处理，以便将实际写入延迟到持久存储区提交工作流。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To participate in batching, add a work item to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt; property that represents the pending changes to the database, and implement the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface in your persistence service.</source>
          <target state="translated">若要参与批处理，添加到工作项&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;表示挂起的更改对数据库，并实现属性&lt;xref:System.Workflow.Runtime.IPendingWork&gt;在持久性服务的接口。&lt;/xref:System.Workflow.Runtime.IPendingWork&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you cannot save the completed scope to your data store, you should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate error message.</source>
          <target state="translated">如果无法将已完成作用域保存到数据存储区，则应引发&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;与相应的错误消息。&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它表示已完成作用域。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, saves the workflow instance state to a data store.</source>
          <target state="translated">派生类中实现时，将工作流实例状态保存到数据存储。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You must call one of the overloaded &lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt; methods to serialize <ph id="ph1">`rootActivity`</ph> into a &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">你必须调用的重载之一&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;方法要序列化<ph id="ph1">`rootActivity`</ph>入&lt;xref:System.IO.Stream&gt;。&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can then choose to additionally process the &lt;xref:System.IO.Stream&gt; before writing it to your data store.</source>
          <target state="translated">然后，可以选择，其他处理&lt;xref:System.IO.Stream&gt;然后将其写入数据存储区。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>However, when the workflow runtime engine calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;, you must restore an identical copy of the root activity.</source>
          <target state="translated">但是，在工作流运行时引擎调用&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;，你必须还原根活动的相同副本。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you cannot save the workflow instance state to your data store, you should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate error message.</source>
          <target state="translated">如果无法将工作流实例状态保存到数据存储区，则应引发&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;与相应的错误消息。&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</source>
          <target state="translated">工作流运行时引擎提供锁定语义，限制对保存在数据存储的工作流实例状态的访问。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</source>
          <target state="translated">这可以通过在多个宿主中运行并指向相同数据存储区的持久性服务进行访问。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">锁定语义旨在防止运行在两个不同的工作流运行时在同一时间将相同的工作流实例加载到内存中的持久性服务。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</source>
          <target state="translated">根据持久性服务设计为支持的环境的类型，你可以选择是否支持此功能。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a &lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.</source>
          <target state="translated">如果你选择支持运行时锁定语义，然后，如果持久性服务尝试保存已由另一个持久性服务，而以前锁定的工作流实例状态则应引发一种&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;。&lt;/xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`unlock`</ph> is <ph id="ph2">`true`</ph>, you should unlock access to the workflow instance state after you save it.</source>
          <target state="translated">如果<ph id="ph1">`unlock`</ph>是<ph id="ph2">`true`</ph>，在保存之后，您应解除锁定对工作流实例状态的访问。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt; takes the &lt;xref:System.Guid&gt; of the workflow instance as a parameter.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;采用&lt;xref:System.Guid&gt;作为参数的工作流实例。&lt;/xref:System.Guid&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Therefore, you should save this &lt;xref:System.Guid&gt;.</source>
          <target state="translated">因此，应该保存此&lt;xref:System.Guid&gt;。&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can also use this &lt;xref:System.Guid&gt; to associate the workflow instance with the saved states of its completed scopes.</source>
          <target state="translated">你还可以使用此&lt;xref:System.Guid&gt;将工作流实例与已完成作用域已保存的状态相关联。&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</source>
          <target state="translated">你必须这样做是因为你必须能够将这些已完成作用域标记为不需要时在工作流实例完成。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine calls SaveWorkflowInstanceState a final time when the workflow instance is completed or terminated.</source>
          <target state="translated">工作流运行时引擎调用 SaveWorkflowInstanceState 最后一次工作流实例处于已完成或终止时。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Therefore, if &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt; is equal to &lt;xref:System.Workflow.Runtime.WorkflowStatus&gt; or &lt;xref:System.Workflow.Runtime.WorkflowStatus&gt;, you can safely delete the workflow instance and all its associated completed scopes from your data store.</source>
          <target state="translated">因此，如果&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;等同于&lt;xref:System.Workflow.Runtime.WorkflowStatus&gt;或&lt;xref:System.Workflow.Runtime.WorkflowStatus&gt;，你可以安全地删除工作流实例和所有其关联已完成作用域从数据存储区。&lt;/xref:System.Workflow.Runtime.WorkflowStatus&gt; &lt;/xref:System.Workflow.Runtime.WorkflowStatus&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Alternatively, you can subscribe to the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt; or &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt; events to determine when it is safe to delete records associated with the workflow instance.</source>
          <target state="translated">或者，你可以订阅&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;或&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;事件以确定它是安全地删除与工作流实例关联的记录。&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Whether you actually delete the records from your data store depends on your implementation.</source>
          <target state="translated">是否你实际从数据存储区中删除记录取决于您的实现。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">如果你实现使用持久存储区的持久性服务，然后，为了保持与工作流运行时引擎的内部状态的一致性你应该参与工作流事务批处理，以便将实际写入延迟到持久存储区提交工作流。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To participate in batching, add a work item that represents the pending changes to your durable store to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt; property, and implement the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface in your persistence service.</source>
          <target state="translated">若要参与批处理，请将表示对持久存储区到挂起的更改的工作项添加&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;属性，并实现&lt;xref:System.Workflow.Runtime.IPendingWork&gt;在持久性服务的接口。&lt;/xref:System.Workflow.Runtime.IPendingWork&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">工作流实例的根活动。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the workflow instance should not be locked; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the workflow instance should be locked.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不应锁定工作流实例，则<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果应锁定工作流实例。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Determines whether a workflow should be unloaded when idle.</source>
          <target state="translated">确定在空闲时是否应导致工作流卸载。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它表示已完成作用域。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the workflow runtime engine unloads the specified workflow when it becomes idle.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，工作流运行时引擎状态变成空闲时卸载指定的工作流。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, unlocks the workflow instance state.</source>
          <target state="translated">当在派生类中重写时取消锁定的工作流实例状态。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This method is abstract, so it does not contain a default implementation on locking and unlocking.</source>
          <target state="translated">此方法是抽象的因此它不包含锁定和解锁的默认实现。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; method based on the value of the unlock parameter.</source>
          <target state="translated">时实现的自定义持久性服务，如果你想要实现锁定方案你将需要重写此方法并提供在锁定-解锁的机制&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;方法根据解锁参数的值。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">工作流实例的根活动。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>