<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0301c540b2817e0d685cb31f9a82dfc17535cd1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.TypeLibExporterFlags.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f35aa2e35ee0fe75a341decbeecca58d18dda96</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">434767dbc9dd1ca3785a17146eaaef85eb40dbac</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates how a type library should be produced.</source>
          <target state="translated">指示应如何生成类型库。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Used with &lt;xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A&gt;.</source>
          <target state="translated">用于&lt;xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A&gt;.&lt;/xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Allows the caller to explicitly resolve type library references without consulting the registry.</source>
          <target state="translated">允许调用方显式不参考注册表的情况下解析类型库引用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When compiling on a 64-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 32-bit type library.</source>
          <target state="translated">在编译时在 64 位计算机上，指定类型库导出程序 (Tlbexp.exe) 生成一个 32 位类型库。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>All data types are transformed appropriately.</source>
          <target state="translated">相应地转换所有数据类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When compiling on a 32-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 64-bit type library.</source>
          <target state="translated">在编译的 32 位计算机上时，指定类型库导出程序 (Tlbexp.exe) 生成一个 64 位类型库。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>All data types are transformed appropriately.</source>
          <target state="translated">相应地转换所有数据类型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Specifies no flags.</source>
          <target state="translated">不指定任何标志。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This is the default.</source>
          <target state="translated">这是默认值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When exporting type libraries, the .NET Framework resolves type name conflicts by decorating the type with the name of the namespace; for example, <bpt id="p1">&lt;xref uid="langword_csharp_System.Windows.Forms.HorizontalAlignment" name="System.Windows.Forms.HorizontalAlignment" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is exported as <bpt id="p2">&lt;xref uid="langword_csharp_System_Windows_Forms_HorizontalAlignment" name="System_Windows_Forms_HorizontalAlignment" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">当导出类型库，则.NET Framework 解析键入名称冲突的修饰的命名空间; 具有名称的类型例如， <bpt id="p1">&lt;xref uid="langword_csharp_System.Windows.Forms.HorizontalAlignment" name="System.Windows.Forms.HorizontalAlignment" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>导出为<bpt id="p2">&lt;xref uid="langword_csharp_System_Windows_Forms_HorizontalAlignment" name="System_Windows_Forms_HorizontalAlignment" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When there is a conflict with the name of a type that is not visible from COM, the .NET Framework exports the undecorated name.</source>
          <target state="translated">如果没有与不是从 COM 可见类型的名称发生冲突，.NET Framework 导出未修饰的名。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Set the OldNames flag or use the <bpt id="p1">&lt;xref uid="langword_csharp_/oldnames" name="/oldnames" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> option in the Type Library Exporter (Tlbexp.exe) to force the .NET Framework to export the decorated name.</source>
          <target state="translated">设置 OldNames 标志或使用<bpt id="p1">&lt;xref uid="langword_csharp_/oldnames" name="/oldnames" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类型库导出程序 (Tlbexp.exe) 中的选项来强制要导出的修饰的名称的.NET Framework。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Note that exporting the decorated name was the default behavior in versions prior to the .NET Framework version 2.0.</source>
          <target state="translated">请注意，导出的修饰的名称已在.NET Framework 2.0 版之前的版本的默认行为。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Exports references to types that were imported from COM as <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type does not have a registered type library.</source>
          <target state="translated">导出对从 COM 作为导入的类型的引用<bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果类型不具有已注册的类型库。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Set this flag when you want the type library exporter to look for dependent types in the registry rather than in the same directory as the input assembly.</source>
          <target state="translated">如果希望类型库导出程序查找依赖类型注册表中而不是输入程序集位于同一目录中，请设置此标志。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>