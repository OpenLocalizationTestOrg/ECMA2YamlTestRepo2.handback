<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c6c72ba8c49d4248b6869a99e37c7038965ee68</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.Messaging.IMethodMessage.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae544f8b13226023603f3f825d4e013257f94744</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36edd1aac2026183820f9c2a23773c60b6f66519</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the method message interface.</source>
          <target state="translated">定义方法消息接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A method message is used to send information to and from remote methods.</source>
          <target state="translated">方法消息用于将信息发送到和从远程方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For example, messages used for remote method calls implement the IMethodMessage interface.</source>
          <target state="translated">例如，用于远程方法调用的消息实现 IMethodMessage 接口。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Gets the number of arguments passed to the method.</source>
          <target state="translated">获取传递给方法的参数的数目。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The number of arguments passed to the method.</source>
          <target state="translated">参数的数目传递给方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets an array of arguments passed to the method.</source>
          <target state="translated">获取传递给方法的参数的数组。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Although the Args property is redundant since the same functionality can be achieved through the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A&gt; and &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A&gt;, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.</source>
          <target state="translated">尽管参数属性是冗余的因为可以通过实现相同的功能&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A&gt;和&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A&gt;，可能有性能优化可用如果实施者理解何时将检索所有自变量。&lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; array containing the arguments passed to the method.</source>
          <target state="translated">&lt;xref:System.Object&gt;包含传递给方法的参数数组。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a specific argument as an &lt;xref:System.Object&gt;.</source>
          <target state="translated">获取特定的自变量为&lt;xref:System.Object&gt;。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The number of the requested argument.</source>
          <target state="translated">所请求自变量数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The argument passed to the method.</source>
          <target state="translated">自变量传递给方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the name of the argument passed to the method.</source>
          <target state="translated">获取传递给方法的自变量的名称。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The number of the requested argument.</source>
          <target state="translated">所请求自变量数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name of the specified argument passed to the method, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current method is not implemented.</source>
          <target state="translated">指定自变量的名称传递给方法，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果当前方法未实现。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the message has variable arguments.</source>
          <target state="translated">获取一个值，该值指示消息是否具有变量自变量。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method can accept a variable number of arguments; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果该方法可以接受数目可变的参数;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.LogicalCallContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the current method call.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.LogicalCallContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对于当前的方法调用。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.LogicalCallContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the current method call.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.LogicalCallContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对于当前的方法调用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Reflection.MethodBase&gt; of the called method.</source>
          <target state="translated">获取&lt;xref:System.Reflection.MethodBase&gt;所调用方法。&lt;/xref:System.Reflection.MethodBase&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This information is not transmitted to a remote location, but is used to cache the method base after it has been looked up once.</source>
          <target state="translated">此信息不会传送到远程位置，但用于后它已查找一次缓存方法基。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase&gt; of the called method.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase&gt;所调用方法。&lt;/xref:System.Reflection.MethodBase&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the name of the invoked method.</source>
          <target state="translated">获取所调用方法的名称。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The name of the invoked method.</source>
          <target state="translated">调用方法的名称。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets an object containing the method signature.</source>
          <target state="translated">获取包含的方法签名的对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>All the current implementations of &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; return an array of &lt;xref:System.Type&gt; objects containing the parameter types of the method.</source>
          <target state="translated">所有当前实现&lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;返回的数组&lt;xref:System.Type&gt;对象又包含该方法的参数类型。&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object containing the method signature.</source>
          <target state="translated">包含方法签名的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the full &lt;xref:System.Type&gt; name of the specific object that the call is destined for.</source>
          <target state="translated">获取完整&lt;xref:System.Type&gt;的调用是目标位置是的为的特定对象的名称&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The full &lt;xref:System.Type&gt; name of the specific object that the call is destined for.</source>
          <target state="translated">完整&lt;xref:System.Type&gt;的调用是目标位置是的为的特定对象的名称&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the URI of the specific object that the call is destined for.</source>
          <target state="translated">获取调用发送到的特定对象的 URI。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The URI of the remote object that contains the invoked method.</source>
          <target state="translated">包含调用的方法的远程对象的 URI。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</source>
          <target state="translated">直接调用方发出通过接口的引用调用，而不具有基础结构的权限。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>