<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d135be3480fcc921f515a3740b92e812d2fa447d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Pipes.AnonymousPipeServerStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6709a5db3a66048990399d1e4c6d995734c425a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8918945a72ef9ee4f21b192ba6a38dc37bfe43ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</source>
          <target state="translated">公开周围匿名管道，支持同步和异步读取和写入操作的流。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</source>
          <target state="translated">匿名管道帮助提供安全和保护进程的子与父之间的进程间通信。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The AnonymousPipeServerStream class enables a parent process to send or receive information from a child process.</source>
          <target state="translated">AnonymousPipeServerStream 类，父进程可以发送或接收来自子进程的信息。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</source>
          <target state="translated">匿名管道是未命名性质，单向通常父和子进程间传输数据的管道。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Anonymous pipes are always local; they cannot be used over a network.</source>
          <target state="translated">匿名管道始终是局部;它们不能使用通过网络。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A&lt;xref:System.IO.Pipes.PipeDirection&gt;值&lt;xref:System.IO.Pipes.PipeDirection&gt;不支持，因为匿名管道定义为在单向。&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Anonymous pipes do not support &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt; read modes.</source>
          <target state="translated">不支持匿名管道&lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;读取模式。&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt; method.</source>
          <target state="translated">匿名管道的客户端必须创建从管道句柄，通过调用由服务器端提供&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;方法。&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The string is then passed as a parameter when creating the client process.</source>
          <target state="translated">然后，在创建客户端进程时，系统会字符串传递作为参数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>From the client process, it is then passed to the &lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt; constructor as the <ph id="ph1">`pipeHandleAsString`</ph> parameter.</source>
          <target state="translated">在客户端进程中，它随后会传递给&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;构造函数、 作为<ph id="ph1">`pipeHandleAsString`</ph>参数。&lt;/xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The AnonymousPipeServerStream object must dispose the client handle using the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt; method in order to be notified when the client exits.</source>
          <target state="translated">AnonymousPipeServerStream 对象必须释放客户端的句柄使用&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;方法，以在客户端退出时得到通知。&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  For <ph id="ph2">[!INCLUDE[winxppro](~/add/includes/winxppro-md.md)]</ph> and <ph id="ph3">[!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)]</ph>, a maximum of 10 pipes can simultaneously connect over the network.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt; 为<ph id="ph2">[!INCLUDE[winxppro](~/add/includes/winxppro-md.md)]</ph>和<ph id="ph3">[!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)]</ph>，最多 10 个管道可以同时通过网络连接。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; constructors without a &lt;xref:System.IO.Pipes.PipeDirection&gt; parameter, the default direction is &lt;xref:System.IO.Pipes.PipeDirection&gt;.</source>
          <target state="translated">构造函数&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;没有&lt;xref:System.IO.Pipes.PipeDirection&gt;参数，默认方向是&lt;xref:System.IO.Pipes.PipeDirection&gt;.&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt; a&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A&lt;xref:System.IO.Pipes.PipeDirection&gt;值&lt;xref:System.IO.Pipes.PipeDirection&gt;不支持，因为匿名管道定义为在单向。&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This constructor creates an &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object that has the default buffer size, no pipe security, and a &lt;xref:System.IO.HandleInheritability&gt; value of &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">此构造函数创建的&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;对象，其默认缓冲区大小、 没有管道安全性和&lt;xref:System.IO.HandleInheritability&gt;&lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt;值&lt;/xref:System.IO.HandleInheritability&gt;&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified pipe direction.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与指定的管道方向的类。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A&lt;xref:System.IO.Pipes.PipeDirection&gt;值&lt;xref:System.IO.Pipes.PipeDirection&gt;不支持，因为匿名管道定义为在单向。&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This constructor creates an &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object that has the default buffer size, no pipe security, and a &lt;xref:System.IO.HandleInheritability&gt; value of &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">此构造函数创建的&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;对象，其默认缓冲区大小、 没有管道安全性和&lt;xref:System.IO.HandleInheritability&gt;&lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt;值&lt;/xref:System.IO.HandleInheritability&gt;&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">确定管道方向的枚举值之一。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">匿名管道只能按一个方向，因此<ph id="ph1">`direction`</ph>不能设置为<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified pipe direction and inheritability mode.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的管道方向和继承性模式的类。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A&lt;xref:System.IO.Pipes.PipeDirection&gt;值&lt;xref:System.IO.Pipes.PipeDirection&gt;不支持，因为匿名管道定义为在单向。&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This constructor creates an &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object that has the default buffer size and no pipe security.</source>
          <target state="translated">此构造函数创建&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;具有默认缓冲区大小和没有管道安全性的对象。&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">确定管道方向的枚举值之一。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">匿名管道只能按一个方向，因此<ph id="ph1">`direction`</ph>不能设置为<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
          <target state="translated">确定是否可以由子进程继承的基础句柄的枚举值之一。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Must be set to either &lt;xref:System.IO.HandleInheritability&gt; or &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">必须设置为其中一种&lt;xref:System.IO.HandleInheritability&gt;或&lt;xref:System.IO.HandleInheritability&gt;。&lt;/xref:System.IO.HandleInheritability&gt; &lt;/xref:System.IO.HandleInheritability&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not set to either <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph>未设置为<ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph>或<ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified pipe handles.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类从指定的管道句柄。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A&lt;xref:System.IO.Pipes.PipeDirection&gt;值&lt;xref:System.IO.Pipes.PipeDirection&gt;不支持，因为匿名管道定义为在单向。&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">确定管道方向的枚举值之一。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">匿名管道只能按一个方向，因此<ph id="ph1">`direction`</ph>不能设置为<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A safe handle for the pipe that this <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">安全句柄管道此<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象将封装。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A safe handle for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">安全句柄<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph> is an invalid handle.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph>无效句柄。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, has occurred.</source>
          <target state="translated">发生 I/O 错误，例如磁盘错误。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-或者-关闭流。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified pipe direction, inheritability mode, and buffer size.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类具有指定的管道方向、 继承性模式和缓冲区大小。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A&lt;xref:System.IO.Pipes.PipeDirection&gt;值&lt;xref:System.IO.Pipes.PipeDirection&gt;不支持，因为匿名管道定义为在单向。&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This constructor creates an &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object without pipe security.</source>
          <target state="translated">此构造函数创建&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;没有管道安全性的对象。&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">确定管道方向的枚举值之一。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">匿名管道只能按一个方向，因此<ph id="ph1">`direction`</ph>不能设置为<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
          <target state="translated">确定是否可以由子进程继承的基础句柄的枚举值之一。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Must be set to either &lt;xref:System.IO.HandleInheritability&gt; or &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">必须设置为其中一种&lt;xref:System.IO.HandleInheritability&gt;或&lt;xref:System.IO.HandleInheritability&gt;。&lt;/xref:System.IO.HandleInheritability&gt; &lt;/xref:System.IO.HandleInheritability&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The size of the buffer.</source>
          <target state="translated">缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This value must be greater than or equal to 0.</source>
          <target state="translated">此值必须大于或等于 0。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not set to either <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph>未设置为<ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph>或<ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>小于 0。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的管道方向、 继承性模式、 缓冲区大小和管道安全的类。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A&lt;xref:System.IO.Pipes.PipeDirection&gt;值&lt;xref:System.IO.Pipes.PipeDirection&gt;不支持，因为匿名管道定义为在单向。&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">确定管道方向的枚举值之一。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">匿名管道只能按一个方向，因此<ph id="ph1">`direction`</ph>不能设置为<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
          <target state="translated">确定是否可以由子进程继承的基础句柄的枚举值之一。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The size of the buffer.</source>
          <target state="translated">缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This value must be greater than or equal to 0.</source>
          <target state="translated">此值必须大于或等于 0。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An object that determines the access control and audit security for the pipe.</source>
          <target state="translated">一个对象，确定访问控制和审核安全性管道。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not set to either <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph>未设置为<ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph>或<ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>小于 0。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the safe handle for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is currently connected to the <bpt id="p2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取的安全句柄<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象当前已连接到<bpt id="p2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt; method should be called after a client handle has been passed to a client process.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;的客户端句柄传递到客户端进程后，应调用方法。&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If this method is not called, the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object will not receive notice when the client disposes of its &lt;xref:System.IO.Pipes.PipeStream&gt; object.</source>
          <target state="translated">如果未调用此方法，&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;对象不会收到通知时客户端释放其&lt;xref:System.IO.Pipes.PipeStream&gt;对象。&lt;/xref:System.IO.Pipes.PipeStream&gt; &lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A handle for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is currently connected to the <bpt id="p2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">句柄<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象当前已连接到<bpt id="p2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Closes the local copy of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object's handle.</source>
          <target state="translated">关闭的本地副本<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象的句柄。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The DisposeLocalCopyOfClientHandle method should be called after the client handle has been passed to the client.</source>
          <target state="translated">客户端句柄传递到客户端后，应调用 DisposeLocalCopyOfClientHandle 方法。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If this method is not called, the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object will not receive notice when the client disposes of its &lt;xref:System.IO.Pipes.PipeStream&gt; object.</source>
          <target state="translated">如果未调用此方法，&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;对象不会收到通知时客户端释放其&lt;xref:System.IO.Pipes.PipeStream&gt;对象。&lt;/xref:System.IO.Pipes.PipeStream&gt; &lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Releases unmanaged resources and performs other cleanup operations before the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance is reclaimed by garbage collection.</source>
          <target state="translated">释放非托管的资源并执行其他清理操作之前<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过垃圾回收回收实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets the connected <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object's handle as a string.</source>
          <target state="translated">获取已连接<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>字符串形式的对象的句柄。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt; method should be called after a client handle has been passed to a client process.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;的客户端句柄传递到客户端进程后，应调用方法。&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If this method is not called, the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object will not receive notice when the client disposes of its &lt;xref:System.IO.Pipes.PipeStream&gt; object.</source>
          <target state="translated">如果未调用此方法，&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;对象不会收到通知时客户端释放其&lt;xref:System.IO.Pipes.PipeStream&gt;对象。&lt;/xref:System.IO.Pipes.PipeStream&gt; &lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A string that represents the connected <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object's handle.</source>
          <target state="translated">一个字符串，表示连接<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象的句柄。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Sets the reading mode for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">设置的读取模式<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For anonymous pipes, transmission mode must be <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">对于匿名管道传输模式必须是<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Anonymous pipes do not support &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt; read mode.</source>
          <target state="translated">不支持匿名管道&lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;读取模式。&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The reading mode for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">读取模式<bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The transmission mode is not valid.</source>
          <target state="translated">传输模式不是有效的。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For anonymous pipes, only <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is supported.</source>
          <target state="translated">对于匿名管道，仅<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>支持。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The property is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which is not supported for anonymous pipes.</source>
          <target state="translated">属性设置为<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，它不支持匿名管道。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The connection is broken or another I/O error occurs.</source>
          <target state="translated">连接已损坏或出现其他 I/O 错误。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">管道已关闭。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets the pipe transmission mode that is supported by the current pipe.</source>
          <target state="translated">获取当前管道支持的管道传输模式。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Anonymous pipes do not support &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt; read mode.</source>
          <target state="translated">不支持匿名管道&lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;读取模式。&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is supported by the current pipe.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>当前管道支持。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>