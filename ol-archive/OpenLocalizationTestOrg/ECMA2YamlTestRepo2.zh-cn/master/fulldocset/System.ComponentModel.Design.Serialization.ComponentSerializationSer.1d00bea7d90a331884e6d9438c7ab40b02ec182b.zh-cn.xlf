<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5479a898a3ef78f367257619274f4f91aae2f515</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.ComponentSerializationService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a85a0a9ff820c863384c3bdcc9c98fda87507b54</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b919e207996abfd290dab896f40a80e7d7091bea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base class for serializing a set of components or serializable objects into a serialization store.</source>
          <target state="translated">提供一组组件或可序列化的对象序列化为序列化存储区基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ComponentSerializationService serializes a set of components or serializable objects into a serialization store.</source>
          <target state="translated">ComponentSerializationService 将一组组件或可序列化的对象序列化到序列化存储区。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The store can then be deserialized later.</source>
          <target state="translated">存储可以然后反序列化更高版本。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The ComponentSerializationService class differs from other serialization schemes in that the serialization format is opaque, and it allows for partial serialization of objects.</source>
          <target state="translated">ComponentSerializationService 类区别于其他序列化方案，因为序列化格式是不透明的而且它允许的部分序列化对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, you can choose to serialize only selected properties for an object.</source>
          <target state="translated">例如，你可以选择只序列化所选的属性的对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This class is <ph id="ph1">`abstract`</ph>.</source>
          <target state="translated">此类是<ph id="ph1">`abstract`</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; will provide a concrete implementation of this class and add it as a service to its &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.</source>
          <target state="translated">通常情况下，&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;将提供此类的具体实现，并将其添加到其&lt;xref:System.ComponentModel.Design.DesignSurface&gt;。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;服务为&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This allows objects to be serialized in the format best suited for them.</source>
          <target state="translated">这允许在最适合于它们的格式序列化的对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The ComponentSerializationService class replaces the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt; interface from the .NET Framework version 1.0, although the latter is retained for backward compatibility.</source>
          <target state="translated">ComponentSerializationService 类替换&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt;接口从.NET Framework 1.0 版中，尽管后者保留用于向后兼容。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ComponentSerializationService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ComponentSerializationService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">创建一个新<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Multiple objects can be serialized into the same serialization store.</source>
          <target state="translated">多个对象可以序列化为相同的序列化存储区。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you are finished with the store, you can call its &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt; or &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt; method.</source>
          <target state="translated">当你完成与应用商店时，你可以调用其&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt;或&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt;方法。&lt;/xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Once closed, a serialization store can be used for deserialization, or it can be saved into a stream.</source>
          <target state="translated">序列化存储区关闭后，可以用于反序列化，或保存到流。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The serialization store can be passed to any of the various serializing methods to build up serialization state for a group of objects.</source>
          <target state="translated">序列化存储区可以传递给任何各种序列化的方法，以生成一组对象的序列化状态。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A new created serialization store.</source>
          <target state="translated">新创建的序列化存储。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Deserializes the given store to produce a collection of objects.</source>
          <target state="translated">反序列化给定存储区中，若要生成的对象的集合。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method deserializes <ph id="ph1">`store`</ph> to produce a collection of objects contained within it.</source>
          <target state="translated">此方法反序列化<ph id="ph1">`store`</ph>生成内它包含的对象集合。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Objects are deserialized in the same order in which they were serialized.</source>
          <target state="translated">它们已序列化中的相同顺序反序列化对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行反序列化。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A collection of objects created according to the stored state.</source>
          <target state="translated">根据所存储的状态创建的对象的集合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>不包含序列化容器可以处理的格式中的数据。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Deserializes the given store and populates the given <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with deserialized <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">反序列化给定的存储并填充给定<bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与反序列化<bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This method deserializes <ph id="ph1">`store`</ph> to produce a collection of objects contained within it.</source>
          <target state="translated">此方法反序列化<ph id="ph1">`store`</ph>生成内它包含的对象集合。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Objects are deserialized in the same order in which they were serialized.</source>
          <target state="translated">它们已序列化中的相同顺序反序列化对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Created objects that implement &lt;xref:System.ComponentModel.IComponent&gt; are added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">创建实现的对象&lt;xref:System.ComponentModel.IComponent&gt;添加到<ph id="ph1">`container`</ph>。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行反序列化。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>到<bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>将添加对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A collection of objects created according to the stored state.</source>
          <target state="translated">根据所存储的状态创建的对象的集合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>不包含序列化容器可以处理的格式中的数据。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Deserializes the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given container.</source>
          <target state="translated">反序列化给定<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>化为给定的容器。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The DeserializeTo method deserializes <ph id="ph1">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
          <target state="translated">DeserializeTo 方法反序列化<ph id="ph1">`store`</ph>，但而不是生成新的对象，它将存储中的数据应用于一组现有从所提供的容器的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
          <target state="translated">因此，调用方可以提前创建一个对象但它认为合适。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
          <target state="translated">如果对象有反序列化状态，并且在现有对象的一套不命名该对象，将创建一个新的对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If that object also implements &lt;xref:System.ComponentModel.IComponent&gt;, it will be added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">如果该对象还实现&lt;xref:System.ComponentModel.IComponent&gt;，它将添加到<ph id="ph1">`container`</ph>。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
          <target state="translated">容器中的对象必须具有名称和匹配中现有对象要使用的顺序的序列化存储区中的对象的类型。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行反序列化。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The container to which <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">向其容器<bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>将添加对象。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>不包含序列化容器可以处理的格式中的数据。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Deserializes the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given container, optionally validating recycled types.</source>
          <target state="translated">反序列化给定<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到给定的容器，（可选） 验证回收类型。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt; method deserializes <ph id="ph1">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;方法反序列化<ph id="ph1">`store`</ph>，而不是生成新的对象，它将存储中的数据应用于一组现有从所提供的容器的对象，但。&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
          <target state="translated">因此，调用方可以提前创建一个对象但它认为合适。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
          <target state="translated">如果对象有反序列化状态，并且在现有对象的一套不命名该对象，将创建一个新的对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If that object also implements &lt;xref:System.ComponentModel.IComponent&gt;, it will be added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">如果该对象还实现&lt;xref:System.ComponentModel.IComponent&gt;，它将添加到<ph id="ph1">`container`</ph>。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
          <target state="translated">容器中的对象必须具有名称和匹配中现有对象要使用的顺序的序列化存储区中的对象的类型。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行反序列化。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The container to which <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">向其容器<bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>将添加对象。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to guarantee that the deserialization will only work if applied to an object of the same type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要确保如果应用于同一类型的对象将仅适用反序列化。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>不包含序列化容器可以处理的格式中的数据。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Deserializes the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given container, optionally applying default property values.</source>
          <target state="translated">反序列化给定<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到给定的容器，可选择应用于默认属性值。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt; method deserializes <ph id="ph1">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;方法反序列化<ph id="ph1">`store`</ph>，而不是生成新的对象，它将存储中的数据应用于一组现有从所提供的容器的对象，但。&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
          <target state="translated">因此，调用方可以提前创建一个对象但它认为合适。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
          <target state="translated">如果对象有反序列化状态，并且在现有对象的一套不命名该对象，将创建一个新的对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If that object also implements &lt;xref:System.ComponentModel.IComponent&gt;, it will be added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">如果该对象还实现&lt;xref:System.ComponentModel.IComponent&gt;，它将添加到<ph id="ph1">`container`</ph>。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
          <target state="translated">容器中的对象必须具有名称和匹配中现有对象要使用的顺序的序列化存储区中的对象的类型。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行反序列化。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The container to which <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">向其容器<bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>将添加对象。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to guarantee that the deserialization will only work if applied to an object of the same type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要确保如果应用于同一类型的对象将仅适用反序列化。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the default property values should be applied.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要指示应该应用的默认属性值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>不包含序列化容器可以处理的格式中的数据。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Loads a <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from a stream.</source>
          <target state="translated">加载<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从流。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can use the returned store to deserialize objects by passing it to one of the &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt; methods.</source>
          <target state="translated">你可以使用返回的存储区反序列化对象通过将它传递到之一&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt;方法。&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; from which the store will be loaded.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;从加载存储区。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">一个新<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> does not contain data saved by a previous call to <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>不包含数据保存到的以前调用<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Serializes the given object to the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将给定的对象序列化为给定<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The store can be used to serialize more than one object by calling this method more than once.</source>
          <target state="translated">存储用于序列化多个对象多次调用此方法。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`value`</ph> will be written.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>到的状态<ph id="ph1">`value`</ph>将写入。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">要序列化的对象。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>已关闭，或<ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph>不受支持的类型的序列化存储区。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">使用返回的存储区<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Serializes the given object, accounting for default property values.</source>
          <target state="translated">将序列化为给定的对象，考虑默认属性值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Standard serialization, as implemented through the &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt; method, only serializes values that differ from the component's default state.</source>
          <target state="translated">标准序列化，在实现中通过&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt;方法，仅序列化不同于组件的默认状态的值。&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This provides the most compact serialization mechanism but assumes that a newly created object will be used during deserialization.</source>
          <target state="translated">这提供最精简的序列化机制，但假定在反序列化期间，将使用新创建的对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If an existing object is used, the resulting deserialized object is not guaranteed to duplicate the original state of the serialized object; the properties that contained default values during serialization will not be reset back to their defaults during deserialization.</source>
          <target state="translated">如果使用的现有对象，则不保证生成的反序列化的对象要复制的序列化的对象中; 原始状态包含在序列化过程的默认值的属性将不重置回其默认设置在反序列化过程。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The SerializeAbsolute method does not use this shortcut.</source>
          <target state="translated">SerializeAbsolute 方法不使用此快捷方式。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It serializes all properties of the source object so that deserialization can restore all the object's properties, regardless of default state.</source>
          <target state="translated">其序列化源对象的所有属性，以便反序列化将还原所有对象的属性，而不考虑默认状态。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This method is particularly useful for serializing collections, because the order of the constituent items within the collection can change.</source>
          <target state="translated">此方法是对于序列化集合，特别有用，因为集合中的构成项的顺序可能会更改。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In this circumstance, the safest process to restore the original state of the entire collection is to overwrite all the items with all their original property values.</source>
          <target state="translated">在此情况下，用于还原整个集合的原始状态的最安全的过程是使用其原始的所有属性值覆盖所有项。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`value`</ph> will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>到的状态<ph id="ph1">`value`</ph>会进行序列化。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">要序列化的对象。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>已关闭，或<ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph>不受支持的类型的序列化存储区。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">使用返回的存储区<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Serializes the given member on the given object.</source>
          <target state="translated">序列化给定对象上的给定的成员。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The SerializeMember method can be invoked multiple times for the same object to build up a list of serialized members within the serialization store.</source>
          <target state="translated">SerializeMember 方法可以为要生成的序列化存储区中的序列化成员的列表的同一对象多次调用。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In general, the member should be a property or an event.</source>
          <target state="translated">一般情况下，成员应为一个属性或事件。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`member`</ph> will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>到的状态<ph id="ph1">`member`</ph>会进行序列化。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The object to which <ph id="ph1">`member`</ph> is attached.</source>
          <target state="translated">到的对象<ph id="ph1">`member`</ph>附加。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying the member to serialize.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定要序列化的成员。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>已关闭，或<ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph>不受支持的类型的序列化存储区。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">使用返回的存储区<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Serializes the given member on the given object, accounting for the default property value.</source>
          <target state="translated">序列化给定的成员的给定对象上算默认属性值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The SerializeMemberAbsolute method serializes the <ph id="ph1">`member`</ph> on <ph id="ph2">`owningObject`</ph>, even if <ph id="ph3">`member`</ph> contains the default property value.</source>
          <target state="translated">SerializeMemberAbsolute 方法序列化<ph id="ph1">`member`</ph>上<ph id="ph2">`owningObject`</ph>，即使<ph id="ph3">`member`</ph>包含默认属性值。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Note that for some members, containing the default value and restoring the setting of the same value to the member are different concepts.</source>
          <target state="translated">请注意，对于某些成员，其中包含默认值并且还原到成员相同的值的设置不同的概念。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For example, if a property inherits its value from a parent object when no local value is set, setting the value back to the property may not be what is desired.</source>
          <target state="translated">例如，如果属性从父对象继承其值未不设置任何本地值时，将该值设置为该属性返回不可能正确的结果。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The SerializeMemberAbsolute method takes this into account and would clear the state of the property in this case.</source>
          <target state="translated">SerializeMemberAbsolute 方法考虑到这一点，并将在此情况下清除该属性的状态。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`member`</ph> will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>到的状态<ph id="ph1">`member`</ph>会进行序列化。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The object to which <ph id="ph1">`member`</ph> is attached.</source>
          <target state="translated">到的对象<ph id="ph1">`member`</ph>附加。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The member to serialize.</source>
          <target state="translated">要序列化的成员。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>已关闭，或<ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph>不受支持的类型的序列化存储区。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">使用返回的存储区<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>