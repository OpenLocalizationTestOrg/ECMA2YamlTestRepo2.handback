<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">730394b1340cdcf0f5a7086d2c7b9e60cac6cb38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Policy.CodeGroup.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c55a822fc2f4501c435d3c997d89a1642e913747</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bdc9ee47072c8570bba89da06a5e0011953aef11</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class from which all implementations of code groups must derive.</source>
          <target state="translated">表示组必须从代码的所有实现均从中派生的抽象基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Code groups are the building blocks of code access security policy.</source>
          <target state="translated">代码组是代码访问安全性策略的构建基块。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Each policy level consists of a root code group that can have child code groups.</source>
          <target state="translated">每个策略级别包含可以有子代码组的根代码组。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree.</source>
          <target state="translated">每个子代码组可以具有它们自己的子代码组;此行为扩展到任意数量的级别，从而形成一个树。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly.</source>
          <target state="translated">每个代码组有一个确定是否给定的程序集属于基于该程序集的证据的成员资格条件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Only those code groups whose membership conditions match a given assembly's evidence will be applied.</source>
          <target state="translated">将应用这些其成员资格条件匹配给定程序集的证据的代码组。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If a matching code group has child code groups, then those children whose membership conditions also match the supplied evidence will likewise be applied.</source>
          <target state="translated">如果匹配的代码组有子代码组，然后同样应用这些子级的成员资格条件还与匹配提供的证据。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of <bpt id="p1">&lt;xref href="System.Security.Policy.CodeGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Policy.CodeGroup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This constructor creates a basic code group and should be called from the constructors of custom code groups.</source>
          <target state="translated">此构造函数创建的基本代码组，并应该从自定义代码组的构造函数中调用。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can add child code groups using the &lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt; method.</source>
          <target state="translated">你可以添加使用的子代码组&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;方法。&lt;/xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A membership condition that tests evidence to determine whether this code group applies policy.</source>
          <target state="translated">测试以确定此代码组是否应用策略的证据成员资格条件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</source>
          <target state="translated">策略声明的权限集和属性的窗体中的代码组授予与成员资格条件匹配的代码。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">membershipCondition</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">membershipCondition</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">membershipCondition</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
          <target state="translated">一种<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">membershipCondition</ph> <ept id="p1">&lt;/code&gt;</ept>参数无效。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-or-       The type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">policy</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
          <target state="translated">-的一种<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">policy</ph> <ept id="p1">&lt;/code&gt;</ept>参数无效。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Adds a child code group to the current code group.</source>
          <target state="translated">将子代码组添加到当前代码组。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The code group to be added as a child.</source>
          <target state="translated">要作为子级添加的代码组。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This new child code group is added to the end of the list.</source>
          <target state="translated">此新的子代码组添加到列表的末尾。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">group</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">group</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">group</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid code group.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">group</ph> <ept id="p1">&lt;/code&gt;</ept>参数不是有效的代码组。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a string representation of the attributes of the policy statement for the code group.</source>
          <target state="translated">获取的字符串表示形式的代码组的策略语句的属性。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The string representation is not localized.</source>
          <target state="translated">未本地化的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A string representation of the attributes of the policy statement for the code group.</source>
          <target state="translated">字符串表示形式的代码组的策略语句的属性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets or sets an ordered list of the child code groups of a code group.</source>
          <target state="translated">获取或设置的代码组的子代码组的已排序的列表。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The order of child code groups is significant for certain code groups.</source>
          <target state="translated">子代码组的顺序非常重要的某些代码组。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The return value is a copy of the child code list.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 返回值是一份子代码列表。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Do not use the returned list to add a child code group; instead, use the &lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt; method.</source>
          <target state="translated">不使用返回的列表添加子代码组;请改用&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;方法。&lt;/xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A list of child code groups.</source>
          <target state="translated">子代码组的列表。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An attempt is made to set this property to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">尝试将此属性设置为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An attempt is made to set this property with a list of children that are not <bpt id="p1">&lt;xref href="System.Security.Policy.CodeGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">尝试设置此属性的不可的子级的列表与<bpt id="p1">&lt;xref href="System.Security.Policy.CodeGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, makes a deep copy of the current code group.</source>
          <target state="translated">当在派生类中重写，生成当前代码组的深层的副本。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.</source>
          <target state="translated">此方法使代码组的深层副本，使还进行代码组所包含的所有对象的副本。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An equivalent copy of the current code group, including its membership conditions and child code groups.</source>
          <target state="translated">当前代码组，包括其成员资格条件和子代码组等效副本。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes properties and internal state specific to a derived code group and adds the serialization to the specified <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">当在派生类中重写，序列化属性和特定于派生的代码组的内部状态并将序列化添加到指定<bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt; cannot be overridden.</source>
          <target state="translated">&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;不能重写。&lt;/xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you need to serialize members specific to a particular implementation of &lt;xref:System.Security.Policy.CodeGroup&gt;, you must override CreateXml and serialize your members there.</source>
          <target state="translated">如果你需要将特定于特定实现的成员序列化&lt;xref:System.Security.Policy.CodeGroup&gt;，必须重写 CreateXml 并序列化您的成员。&lt;/xref:System.Security.Policy.CodeGroup&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When the code group is serialized, &lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt; calls CreateXml and adds your serialization to the &lt;xref:System.Security.SecurityElement&gt; created by &lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;.</source>
          <target state="translated">当序列化的代码组，&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;调用 CreateXml 并将添加到&lt;xref:System.Security.SecurityElement&gt;由&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;.&lt;/xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;创建&lt;/xref:System.Security.SecurityElement&gt;序列化&lt;/xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The XML created using this method is deserialized by the &lt;xref:System.Security.Policy.CodeGroup.ParseXml%2A&gt; method.</source>
          <target state="translated">使用此方法创建的 XML 进行反序列化由&lt;xref:System.Security.Policy.CodeGroup.ParseXml%2A&gt;方法。&lt;/xref:System.Security.Policy.CodeGroup.ParseXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The XML encoding to which to add the serialization.</source>
          <target state="translated">XML 编码向其中添加序列化。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The policy level within which the code group exists.</source>
          <target state="translated">代码组所在策略级别。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the description of the code group.</source>
          <target state="translated">获取或设置代码组的说明。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The description of the code group.</source>
          <target state="translated">代码组的说明。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Determines whether the specified code group is equivalent to the current code group.</source>
          <target state="translated">确定指定的代码组是否等效于当前代码组。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Two code groups are equivalent if they have the same &lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;, &lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;, and &lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;.</source>
          <target state="translated">两个代码组是如果它们具有相同等效&lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;， &lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;，和&lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;。&lt;/xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt; &lt;/xref:System.Security.Policy.CodeGroup.Description%2A&gt; &lt;/xref:System.Security.Policy.CodeGroup.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This method tests the top-level code group only, not its child code groups.</source>
          <target state="translated">此方法可测试的顶级代码组仅，不及其子代码组。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The code group to compare with the current code group.</source>
          <target state="translated">要与当前代码组进行比较的代码组。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified code group is equivalent to the current code group; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定的代码组等效于当前代码组;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Determines whether the specified code group is equivalent to the current code group, checking the child code groups as well, if specified.</source>
          <target state="translated">确定指定的代码组是否等效于当前代码组，检查子代码组，如果指定。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Two code groups are equivalent if they have the same &lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;, &lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;, and &lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;.</source>
          <target state="translated">两个代码组是如果它们具有相同等效&lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;， &lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;，和&lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;。&lt;/xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt; &lt;/xref:System.Security.Policy.CodeGroup.Description%2A&gt; &lt;/xref:System.Security.Policy.CodeGroup.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`compareChildren`</ph> parameter is <ph id="ph2">`true`</ph>, this method will only return <ph id="ph3">`true`</ph> if the current code group and all its child code groups are equivalent to the specified code group and all its child code groups.</source>
          <target state="translated">如果<ph id="ph1">`compareChildren`</ph>参数是<ph id="ph2">`true`</ph>，此方法将只返回<ph id="ph3">`true`</ph>当前代码组及所有子代码组是否等效于指定的代码组及所有子代码组。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The code group to compare with the current code group.</source>
          <target state="translated">要与当前代码组进行比较的代码组。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare child code groups, as well; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要比较子代码组，以及;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified code group is equivalent to the current code group; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定的代码组等效于当前代码组;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Reconstructs a security object with a given state from an XML encoding.</source>
          <target state="translated">重新构造具有给定状态的 XML 编码的安全对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">编码用于重新构造安全对象的 XML。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Reconstructs a security object with a given state and policy level from an XML encoding.</source>
          <target state="translated">重新构造具有给定的状态和从 XML 编码的策略级别的安全对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The policy level context is provided for resolution of named permission sets.</source>
          <target state="translated">用于解析的命名的权限集提供的策略级别上下文。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">编码用于重新构造安全对象的 XML。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The policy level within which the code group exists.</source>
          <target state="translated">代码组所在策略级别。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the hash code of the current code group.</source>
          <target state="translated">获取当前代码组的哈希代码。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The hash code of the current code group.</source>
          <target state="translated">当前代码组的哈希代码。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets the code group's membership condition.</source>
          <target state="translated">获取或设置代码组的成员资格条件。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A membership condition tests evidence and returns a Boolean value that tells whether there is a match.</source>
          <target state="translated">成员资格条件测试证据，并返回一个布尔值，指示是否存在匹配项。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The membership condition that determines to which evidence the code group is applicable.</source>
          <target state="translated">用于确定于哪个证据代码组的成员资格条件都适用。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An attempt is made to set this parameter to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">尝试将此参数设置为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the merge logic for the code group.</source>
          <target state="translated">当在派生类中重写，获取代码组的合并逻辑。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A description of the merge logic for the code group.</source>
          <target state="translated">代码组的合并逻辑的说明。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the code group.</source>
          <target state="translated">获取或设置代码组的名称。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The name of the code group.</source>
          <target state="translated">代码组的名称。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, reconstructs properties and internal state specific to a derived code group from the specified <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">当在派生类中重写，重新构造属性和特定的内部状态到派生的代码组从指定<bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Policy.CodeGroup.FromXml%2A&gt; cannot be overridden.</source>
          <target state="translated">&lt;xref:System.Security.Policy.CodeGroup.FromXml%2A&gt;不能重写。&lt;/xref:System.Security.Policy.CodeGroup.FromXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you need to deserialize members specific to a particular implementation of &lt;xref:System.Security.Policy.CodeGroup&gt;, you must override ParseXml and deserialize your members there.</source>
          <target state="translated">如果你需要进行反序列化成员的特定实现特定&lt;xref:System.Security.Policy.CodeGroup&gt;，必须重写 ParseXml 并反序列化您的成员。&lt;/xref:System.Security.Policy.CodeGroup&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When the code group is deserialized, &lt;xref:System.Security.Policy.CodeGroup.FromXml%2A&gt; calls ParseXml and reconstructs your members from the &lt;xref:System.Security.SecurityElement&gt;.</source>
          <target state="translated">当代码组进行反序列化、&lt;xref:System.Security.Policy.CodeGroup.FromXml%2A&gt;调用 ParseXml，并重新建立你从&lt;xref:System.Security.SecurityElement&gt;.&lt;/xref:System.Security.SecurityElement&gt;的成员&lt;/xref:System.Security.Policy.CodeGroup.FromXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This method deserializes XML created using &lt;xref:System.Security.Policy.CodeGroup.CreateXml%2A&gt;.</source>
          <target state="translated">此方法反序列化 XML 使用&lt;xref:System.Security.Policy.CodeGroup.CreateXml%2A&gt;.&lt;/xref:System.Security.Policy.CodeGroup.CreateXml%2A&gt;创建</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">编码用于重新构造安全对象的 XML。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The policy level within which the code group exists.</source>
          <target state="translated">代码组所在策略级别。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets the name of the named permission set for the code group.</source>
          <target state="translated">代码组获取的命名的权限集的名称。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This property can be <ph id="ph1">`null`</ph> if the code group contains an unnamed permission set.</source>
          <target state="translated">此属性可<ph id="ph1">`null`</ph>如果代码组包含一个未命名的权限集。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The name of a named permission set of the policy level.</source>
          <target state="translated">命名的权限集的策略级别的名称。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets the policy statement associated with the code group.</source>
          <target state="translated">获取或设置与代码组关联的策略语句。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The policy statement applies to code in assemblies when evidence matches the membership condition.</source>
          <target state="translated">证据匹配成员资格条件时，策略语句应用于程序集中的代码。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This property can also be set by passing a policy statement to the constructor.</source>
          <target state="translated">此外可以通过将策略语句传递给构造函数中设置此属性。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The policy statement for the code group.</source>
          <target state="translated">代码组策略语句。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Removes the specified child code group.</source>
          <target state="translated">移除指定的子代码组。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Only immediate child code groups can be removed with this method.</source>
          <target state="translated">可以使用此方法删除仅直接子代码组。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The code group to be removed as a child.</source>
          <target state="translated">要删除，因为有子代码组。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">group</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not an immediate child code group of the current code group.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">group</ph> <ept id="p1">&lt;/code&gt;</ept>参数不是当前代码组的直接子代码组。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, resolves policy for the code group and its descendants for a set of evidence.</source>
          <target state="translated">当在派生类中重写，将解析为代码组策略的证据集及其子代。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Given evidence for an assembly to be loaded, this method evaluates the code group by checking the membership condition against the specified evidence.</source>
          <target state="translated">给定要加载的程序集的证据，则此方法通过检查成员资格条件针对指定的证据来计算代码组。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</source>
          <target state="translated">如果没有匹配项，则此方法返回的代码组，其中包括的子代码组评估的策略语句。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For a &lt;xref:System.Security.Policy.UnionCodeGroup&gt;, all child code groups whose membership condition match the specified evidence are also resolved, and all resulting policy statements are combined with the policy statement of the parent union code group.</source>
          <target state="translated">有关&lt;xref:System.Security.Policy.UnionCodeGroup&gt;、 还解析其成员资格条件匹配的指定的证据的所有子代码组，和所有生成的策略语句结合父级联合代码组的策略语句。&lt;/xref:System.Security.Policy.UnionCodeGroup&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Each child code group type determines how all child groups under it are applied, depending on how the Resolve methods of these child groups work.</source>
          <target state="translated">每个子代码组类型确定如何应用在其下的所有子组，具体取决于这些子组的解决方法的工作方式。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The .NET Framework security system uses Resolve on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.</source>
          <target state="translated">.NET Framework 安全系统使用的策略级别上的解析，来确定要从生成的策略语句和程序集上的代码请求为加载代码授予哪些权限。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The evidence for the assembly.</source>
          <target state="translated">程序集的证据。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A policy statement that consists of the permissions granted by the code group with optional attributes, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the code group does not apply (the membership condition does not match the specified evidence).</source>
          <target state="translated">包含具有可选属性的代码组授予的权限的策略语句或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果代码组不适用 （成员资格条件不匹配指定的证据）。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, resolves matching code groups.</source>
          <target state="translated">当在派生类中重写时解析匹配的代码组。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This method has the same evaluation characteristics as &lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;.</source>
          <target state="translated">此方法具有相同的评估特性为&lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;。&lt;/xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.</source>
          <target state="translated">返回的代码组包含子代码组，因而也就可以有子代码组，根据需要以反映由提供的证据相匹配的代码组的完整集合。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The evidence for the assembly.</source>
          <target state="translated">程序集的证据。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Policy.CodeGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the root of the tree of matching code groups.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Policy.CodeGroup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它是匹配的代码组的树的根。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">创建安全对象及其当前状态的 XML 编码。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">安全对象，包括任何状态信息的 XML 编码。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of the security object, its current state, and the policy level within which the code exists.</source>
          <target state="translated">创建安全对象、 其当前状态和其中存在代码的策略级别的 XML 编码。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The policy level context is provided for resolution of named permission sets.</source>
          <target state="translated">用于解析的命名的权限集提供的策略级别上下文。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The policy level within which the code group exists.</source>
          <target state="translated">代码组所在策略级别。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">安全对象，包括任何状态信息的 XML 编码。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>