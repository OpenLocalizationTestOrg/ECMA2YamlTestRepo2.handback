<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fdfb1060c05d77935d9a1b388048e1cfd603184c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.DesignerLoader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad5a01c12c921fa425d6ab012d57dca2c6c2bf42</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34c09b70f02ffb0898c4c1988d5911e5d3d3cc7b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a basic designer loader interface that can be used to implement a custom designer loader.</source>
          <target state="translated">提供可以用来实现自定义设计器加载程序的基本设计器加载程序接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>DesignerLoader can be implemented to support custom loading of a designer and designer components.</source>
          <target state="translated">DesignerLoader 可实现来支持自定义设计器和设计器组件的加载。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A&gt; method is called.</source>
          <target state="translated">设计器加载程序还负责将更改写入到回到存储打开的文档加载程序加载后的文档时将使用&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A&gt;调用方法。&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>By default, the Visual Studio development environment creates its own variety of DesignerLoader that can load basic designer projects.</source>
          <target state="translated">默认情况下，Visual Studio 开发环境创建其自己各种 DesignerLoader 可加载基本设计器的项目。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To create a custom designer loader, you must inherit from and implement the abstract DesignerLoader class.</source>
          <target state="translated">若要创建自定义设计器加载程序，你必须从继承和实现抽象 DesignerLoader 类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You cannot directly instantiate DesignerLoader, as it has no public constructor.</source>
          <target state="translated">不能直接实例化 DesignerLoader，，因为它有没有公共构造函数。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A&gt; is invoked, the designer loader loads the design document, displays the designer surface using the &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; interface, and calls &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt; on the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt; interface when done.</source>
          <target state="translated">当&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A&gt;是调用，设计器加载程序的设计文档加载，显示设计器图面使用&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;接口，并调用&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;上&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;接口完成。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt; implementation is usually the same class that implements &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;实现是通常用于实现&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;.&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt;同一个类&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Begins loading a designer.</source>
          <target state="translated">开始加载设计器。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt; that is passed to the <ph id="ph1">`host`</ph> parameter is typically the same object as the designer host.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;传递给<ph id="ph1">`host`</ph>参数通常是与设计器主机相同的对象。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Through this reference to the loader host, the designer loader can reload the design document and indicate that it has finished loading the design document.</source>
          <target state="translated">通过对加载程序宿主的引用，设计器加载程序可以重新加载设计文档，并指示它已完成加载设计文档。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The loader host through which this loader loads components.</source>
          <target state="translated">通过该此加载程序加载组件加载程序宿主。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;.</source>
          <target state="translated">在完成使用&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;时调用的 Dispose</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法离开&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;中不可用状态。&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; was occupying.</source>
          <target state="translated">调用 Dispose 后，必须释放对所有引用&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;占用。&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用释放在发布到&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;。&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;最后一个引用之前</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Writes cached changes to the location that the designer was loaded from.</source>
          <target state="translated">写入缓存的更改写入设计器的加载位置。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The designer host calls this method periodically to ensure that changes made to the document were saved by the designer loader.</source>
          <target state="translated">设计器宿主调用此方法定期以确保已经保存了设计器加载程序对文档进行的更改。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This method allows designer loaders to implement an asynchronous write scheme to improve performance.</source>
          <target state="translated">此方法允许设计器加载程序来实现异步写入方案，以提高性能。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing.</source>
          <target state="translated">此方法的默认实现没有任何影响。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the loader is currently loading a document.</source>
          <target state="translated">获取一个值，该值指示加载程序是否正在加载文档。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the loader is currently loading a document; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果加载程序是否正在加载文档;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>