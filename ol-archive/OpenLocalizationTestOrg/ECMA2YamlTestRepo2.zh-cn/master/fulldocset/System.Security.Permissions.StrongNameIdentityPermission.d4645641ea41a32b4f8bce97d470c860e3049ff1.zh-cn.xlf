<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43471ad8e1e6732b14091bf9c3004b3f166e0b48</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Permissions.StrongNameIdentityPermission.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52b4b2998bf00cdf20f4de23f9b9d5b74ef3b52d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b296742582310a2cef97ee483ebd3aa4ea93f803</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the identity permission for strong names.</source>
          <target state="translated">定义强名称标识权限。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Starting with the <ph id="ph2">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, identity permissions are not used.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 第一页为<ph id="ph2">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>，不使用标识权限。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an &lt;xref:System.Security.Permissions.PermissionState&gt; permission state value.</source>
          <target state="translated">&gt;&gt; 在.NET framework 1.0 和 1.1 版中，标识权限不能有&lt;xref:System.Security.Permissions.PermissionState&gt;权限状态值。&lt;/xref:System.Security.Permissions.PermissionState&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.</source>
          <target state="translated">在.NET Framework 2.0 及更高版本中，标识权限可以具有任何权限状态值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface.</source>
          <target state="translated">这意味着，在版本 2.0 和更高版本中，标识权限具有相同的行为实现的权限&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;接口。&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</source>
          <target state="translated">也就是说，要求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use StrongNameIdentityPermission to confirm that the calling code is in a particular strong-named code assembly.</source>
          <target state="translated">使用 StrongNameIdentityPermission 确认调用代码是在特定强名称的代码的程序集中。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Full demands for StrongNameIdentityPermission succeed only if all the assemblies in the stack have the correct evidence to satisfy the demand.</source>
          <target state="translated">仅当堆栈中的所有程序集具有正确的证据，以满足此要求，有关 StrongNameIdentityPermission 的完整要求都会成功。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Link demands that use the &lt;xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute&gt; attribute succeed only if the immediate caller has the correct evidence.</source>
          <target state="translated">链接要求使用&lt;xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute&gt;属性成功仅当直接调用方具有正确的证据。&lt;/xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A strong name identity is based on a cryptographic public key called a binary large object (BLOB),  which is optionally combined with the name and version of a specific assembly.</source>
          <target state="translated">强名称标识基于称为二进制大型对象 (BLOB)，它与的名称和版本特定的程序集 （可选） 结合的加密公共密钥。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The key defines a unique namespace and provides strong verification that the name is genuine, because the definition of the name must be in an assembly that is signed by the corresponding private key.</source>
          <target state="translated">密钥定义唯一的命名空间，并提供强名称为正版，因为该名称定义必须由相应的私钥进行签名的程序集中的验证。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Note that the validity of the strong name key is not dependent on a trust relationship or on any certificate necessarily being issued for the key.</source>
          <target state="translated">请注意，强名称密钥的有效性不依赖或一定颁发密钥的任何证书上的信任关系。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted.</source>
          <target state="translated">在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效的这是调用程序集是完全受信任时如此。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>That is, even if the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</source>
          <target state="translated">即，即使调用程序集具有完全信任，则将失败对标识权限的请求，如果程序集不符合要求的条件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust.</source>
          <target state="translated">中的.NET Framework 版本 2.0 及更高版本，标识权限的需求较为低效如果调用程序集具有完全信任权限。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This ensures consistency for all permissions and eliminates the treatment of identity permissions as a special case.</source>
          <target state="translated">这样可确保所有权限的一致性，并消除标识权限的处理方式。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For a complete description of strong names, see the &lt;xref:System.Security.Policy.StrongName&gt; reference page.</source>
          <target state="translated">强名称的完整说明，请参阅&lt;xref:System.Security.Policy.StrongName&gt;引用页。&lt;/xref:System.Security.Policy.StrongName&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information about strong-named assemblies, see <bpt id="p1">[</bpt>Strong-Named Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关强名称的程序集的详细信息，请参阅<bpt id="p1">[</bpt>强名称程序集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The StrongNameIdentityPermission class is used to define strong-name requirements for accessing the public members of a type.</source>
          <target state="translated">StrongNameIdentityPermission 类用于定义强名称对要求访问的一种类型的公共成员。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute&gt; attribute can be used to define strong-name requirements at the assembly level.</source>
          <target state="translated">&lt;xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute&gt;属性可以用于定义强名称程序集级别的要求。&lt;/xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the .NET Framework version 2.0 and later, you can also use the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute to specify that all nonpublic types in that assembly are visible to another assembly.</source>
          <target state="translated">在.NET Framework 2.0 及更高版本中，你还可以使用&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;特性来指定该程序集中的所有非公共类型都是对另一个程序集可见。&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>友元程序集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Permissions.StrongNameIdentityPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Permissions.StrongNameIdentityPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的类<bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Creates either a fully restricted (<ph id="ph1">`None`</ph>) or <ph id="ph2">`Unrestricted`</ph> permission.</source>
          <target state="translated">创建完全受限制 (<ph id="ph1">`None`</ph>) 或<ph id="ph2">`Unrestricted`</ph>权限。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an &lt;xref:System.Security.Permissions.PermissionState&gt; permission state value.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt; 在.NET Framework 1.0 和 1.1 版中，标识权限不能具有&lt;xref:System.Security.Permissions.PermissionState&gt;权限状态值。&lt;/xref:System.Security.Permissions.PermissionState&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.</source>
          <target state="translated">在.NET Framework 2.0 及更高版本中，标识权限可以具有任何权限状态值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface.</source>
          <target state="translated">这意味着，在版本 2.0 和更高版本中，标识权限具有相同的行为实现的权限&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;接口。&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</source>
          <target state="translated">也就是说，要求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.</source>
          <target state="translated">在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，调用程序集是完全受信任时也如此。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</source>
          <target state="translated">即，尽管调用程序集具有完全信任，则将失败标识权限的要求，如果程序集不符合要求的条件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust.</source>
          <target state="translated">中的.NET Framework 版本 2.0 及更高版本，标识权限的需求较为低效如果调用程序集具有完全信任权限。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.</source>
          <target state="translated">这可确保对所有其他权限，消除标识权限的处理方式的一致性。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Use this constructor with a permission state value of &lt;xref:System.Security.Permissions.PermissionState&gt; to create an identity permission that matches no strong names.</source>
          <target state="translated">使用此构造函数中包含的权限状态值&lt;xref:System.Security.Permissions.PermissionState&gt;创建匹配没有强名称标识权限。&lt;/xref:System.Security.Permissions.PermissionState&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you subsequently set the &lt;xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A&gt; and &lt;xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A&gt; properties, a specific strong name identity can be represented by the permission.</source>
          <target state="translated">如果随后将设置&lt;xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A&gt;和&lt;xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A&gt;可以由权限表示属性，一个特定强名称标识。&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A&gt; &lt;/xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">state</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid value of <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">state</ph> <ept id="p1">&lt;/code&gt;</ept>参数不是有效的值的<bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Permissions.StrongNameIdentityPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified strong name identity.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Permissions.StrongNameIdentityPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定强名称标识的类。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`name`</ph> and <ph id="ph2">`version`</ph> parameters can be <ph id="ph3">`null`</ph> only when the public key is used to identify the assembly.</source>
          <target state="translated"><ph id="ph1">`name`</ph>和<ph id="ph2">`version`</ph>参数可以是<ph id="ph3">`null`</ph>仅当公钥用于标识程序集。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An empty string ("") should not be used in place of <ph id="ph1">`null`</ph>.</source>
          <target state="translated">空字符串 ("") 不应使用代替了<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`name`</ph> is an empty string, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">如果<ph id="ph1">`name`</ph>为空字符串，&lt;xref:System.ArgumentException&gt;引发。&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information on names and version numbers of assemblies, see <bpt id="p1">[</bpt>Strong-Named Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">名称和版本号的程序集的详细信息，请参阅<bpt id="p1">[</bpt>强名称程序集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The public key defining the strong name identity namespace.</source>
          <target state="translated">定义强名称标识命名空间中的公共密钥。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The simple name part of the strong name identity.</source>
          <target state="translated">强名称标识的简单名称部分。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This corresponds to the name of the assembly.</source>
          <target state="translated">这对应于程序集的名称。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The version number of the identity.</source>
          <target state="translated">标识的版本号。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">blob</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">blob</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an empty string ("").</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>参数为空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Creates and returns an identical copy of the current permission.</source>
          <target state="translated">创建并返回当前权限的相同副本。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A copy of a permission represents the same access to resources as the original permission.</source>
          <target state="translated">与原始权限情况下，一份权限表示对资源的相同的访问权限。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A copy of the current permission.</source>
          <target state="translated">当前权限的副本。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Reconstructs a permission with a specified state from an XML encoding.</source>
          <target state="translated">重新构造具有指定状态的 XML 编码的权限。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method is not used by application code.</source>
          <target state="translated">应用程序代码不使用此方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The XML encoding to use to reconstruct the permission.</source>
          <target state="translated">编码用于重新构造权限的 XML。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid permission element.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">e</ph> <ept id="p1">&lt;/code&gt;</ept>参数不是有效的权限元素。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> parameter's version number is not valid.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">e</ph> <ept id="p1">&lt;/code&gt;</ept>参数的版本号无效。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Creates and returns a permission that is the intersection of the current permission and the specified permission.</source>
          <target state="translated">创建并返回是当前权限和指定的权限的交集的权限。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The intersection of two permissions is a permission that describes the set of operations they both describe in common.</source>
          <target state="translated">以下两个权限的交集是描述组的二者共同描述的操作的权限。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Only a demand that passes both original permissions will pass the intersection.</source>
          <target state="translated">仅通过两个原始权限的请求将通过该交集。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The intersection of two identical strong name identity permissions is the same permission.</source>
          <target state="translated">两个相同的强名称标识权限的交集是相同的权限。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The intersection of two different (not wildcard) expressions is an empty permission.</source>
          <target state="translated">（不是通配符） 的两个不同的交集表达式是空的权限。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The intersection of a wildcard expression and a matching strong name is the strong name.</source>
          <target state="translated">通配符表达式和匹配的强名称的交集是强名称。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.</source>
          <target state="translated">两个匹配的通配符表达式的交集是更长的时间，更具体的两个表达式。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A permission to intersect with the current permission.</source>
          <target state="translated">要与当前权限相交的权限。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">它必须与当前权限属于同一类型。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A new permission that represents the intersection of the current permission and the specified permission, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the intersection is empty.</source>
          <target state="translated">表示当前权限和指定的权限的交集的一个新权限或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果交集为空。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and is not of the same type as the current permission.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept>参数不是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>并且不是与当前权限属于同一类型。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Determines whether the current permission is a subset of the specified permission.</source>
          <target state="translated">确定当前权限是否为指定权限的子集。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
          <target state="translated">如果当前权限指定一组完全包含在指定权限的操作，当前权限是指定权限的子集。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, the other properties being equal, an identity with the &lt;xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A&gt; property containing the wildcard expression MyCompany.MyDepartment.* is identified as a subset of an identity with the &lt;xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A&gt; property MyCompany.MyDepartment.MyFile.</source>
          <target state="translated">例如，视为相同的其他属性，使用的标识&lt;xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A&gt;包含通配符表达式 MyCompany.MyDepartment.* 属性标识为具有标识的子集&lt;xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A&gt;属性 MyCompany.MyDepartment.MyFile。&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A&gt; &lt;/xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A permission that is to be tested for the subset relationship.</source>
          <target state="translated">将要测试子集关系的权限。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This permission must be of the same type as the current permission.</source>
          <target state="translated">此权限必须是与当前权限属于同一类型。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果当前权限是指定权限; 的子集否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and is not of the same type as the current permission.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept>参数不是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>并且不是与当前权限属于同一类型。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets the simple name portion of the strong name identity.</source>
          <target state="translated">获取或设置强名称标识的简单名称部分。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The value of the Name property can be an exact name or can be modified by a wildcard character in the final position; for example, both MyCompany.MyDepartment.MyFile and MyCompany.MyDepartment.* are valid names.</source>
          <target state="translated">名称属性的值可以是一个确切的名称，或可通过在最后一个位置; 通配符字符修改例如，MyCompany.MyDepartment.MyFile 和 MyCompany.MyDepartment.* 是有效的名称。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you attempt to set the Name property to an empty string (""), an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">如果你尝试将名称属性设置为一个空字符串 ("")、&lt;xref:System.ArgumentException&gt;引发。&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The simple name of the identity.</source>
          <target state="translated">标识的简单名称。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The value is an empty string ("").</source>
          <target state="translated">值为空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The property value cannot be retrieved because it contains an ambiguous identity.</source>
          <target state="translated">无法检索此属性值，因为它包含标识不明确。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets the public key blob that defines the strong name identity namespace.</source>
          <target state="translated">获取或设置定义强名称标识命名空间的公钥 blob。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Permissions.StrongNamePublicKeyBlob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the public key of the identity, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is no key.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Permissions.StrongNamePublicKeyBlob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含公钥的标识，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果没有任何键。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The property value is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">属性值设置为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The property value cannot be retrieved because it contains an ambiguous identity.</source>
          <target state="translated">无法检索此属性值，因为它包含标识不明确。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of the permission and its current state.</source>
          <target state="translated">创建权限及其当前状态的 XML 编码。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This method is not typically used by application code.</source>
          <target state="translated">此方法通常不使用由应用程序代码中。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>An XML encoding of the permission, including any state information.</source>
          <target state="translated">权限，包括任何状态信息的 XML 编码。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Creates a permission that is the union of the current permission and the specified permission.</source>
          <target state="translated">创建兼具当前权限和指定的权限的权限。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission.</source>
          <target state="translated">对联合的调用的结果是由当前权限和指定的权限表示所表示的所有操作的权限。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Any demand that passes either permission passes their union.</source>
          <target state="translated">任何请求都会通过任一权限传递其联合。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The union of a permission and <ph id="ph1">`null`</ph> is the permission that is not <ph id="ph2">`null`</ph>.</source>
          <target state="translated">权限的联合和<ph id="ph1">`null`</ph>是不是权限<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The union of a permission and a subset of that permission is the permission that contains the other.</source>
          <target state="translated">该权限的子集和权限的联合是包含其他权限。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Any other combination results in an &lt;xref:System.ArgumentException&gt; exception being thrown.</source>
          <target state="translated">任何其他组合会导致&lt;xref:System.ArgumentException&gt;所引发异常。&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A permission to combine with the current permission.</source>
          <target state="translated">若要与当前权限合并的权限。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">它必须与当前权限属于同一类型。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A new permission that represents the union of the current permission and the specified permission.</source>
          <target state="translated">表示同时兼具当前权限和指定的权限的新权限。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and is not of the same type as the current permission.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept>参数不是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>并且不是与当前权限属于同一类型。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-or-       The two permissions are not equal and one is a subset of the other.</source>
          <target state="translated">-或-这两个权限不相等且是其中一个是另一个的子集。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets or sets the version number of the identity.</source>
          <target state="translated">获取或设置标识的版本号。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The version of the identity.</source>
          <target state="translated">标识的版本。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The property value cannot be retrieved because it contains an ambiguous identity.</source>
          <target state="translated">无法检索此属性值，因为它包含标识不明确。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>