<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79c9715e211632f6a3de70423bb065f18cd30014</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Common.DbEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9039549ac8a2f7fc45894161a439d13f09d4b266</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ecd93b3ea908d9c73d4d7808b00ca420fc20ae0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the &lt;xref:System.Collections.IEnumerable.GetEnumerator*&gt; method, which supports a simple iteration over a collection by a .NET Framework data provider.</source>
          <target state="translated">公开&lt;xref:System.Collections.IEnumerable.GetEnumerator*&gt;方法，支持对由.NET Framework 数据提供程序集合进行简单迭代。&lt;/xref:System.Collections.IEnumerable.GetEnumerator*&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The DbEnumerator class is implemented by a .NET Framework data provider to provide data binding support.</source>
          <target state="translated">由.NET Framework 数据提供程序，以提供数据绑定支持实现 DbEnumerator 类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>By design, the DbEnumerator object is intended for use with only one resultset.</source>
          <target state="translated">按照设计，DbEnumerator 对象旨在用于只有一个结果集。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema.</source>
          <target state="translated">例如，如果在执行批处理语句包含两个 SQL SELECT 语句返回不同的架构，第二个语句可能会不返回整个架构。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To avoid this situation, obtain a DbEnumerator for each resultset, and then call the <ph id="ph1">`NextResult`</ph> method of a .NET Framework data provider DataReader object.</source>
          <target state="translated">若要避免这种情况下，获取有关每个结果集，DbEnumerator，然后调用<ph id="ph1">`NextResult`</ph>的.NET Framework 数据提供程序 DataReader 对象的方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the give n data reader.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类提供的数据读取器。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">对其进行循环访问 DataReader。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified <bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定<bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> through which to iterate.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>其进行循环访问。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的读取器，并指示是否自动在循环访问其数据之后关闭读取器。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">对其进行循环访问 DataReader。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to automatically close the DataReader after iterating through its data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要自动循环访问其数据; 后关闭了 DataReader否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified <bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and indicates whether to automatically close the <bpt id="p3">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> after iterating through its data.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定<bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，并指示是否自动关闭<bpt id="p3">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>后循环访问其数据。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> through which to iterate.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>其进行循环访问。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to automatically close the <bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> after iterating through its data; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要自动关闭<bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>后循环访问其数据; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the current element in the collection.</source>
          <target state="translated">获取集合中的当前元素。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After an enumerator is created or after a &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;, &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of Current; otherwise, Current is undefined.</source>
          <target state="translated">创建一个枚举器或&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;，&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;必须调用来枚举器向前移动到第一个元素的集合，然后再读取值的当前; 否则，当前是不确定。&lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; &lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Current also throws an exception if the last call to &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; returned false, which indicates the end of the collection.</source>
          <target state="translated">当前还会引发异常如果最后一次调用到&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;返回 false，指示集合的末尾。&lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Current does not move the position of the enumerator and consecutive calls to Current return the same object until either &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; or &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">当前不会移动该枚举数的位置和当前的连续调用返回的对象相同之前&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;或&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt; &lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; or &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt; generates an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果更改到集合，如添加、 修改或删除元素，则枚举数将失效且不可恢复，并且下次调用&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;或&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;生成&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt;&lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;到</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; and Current, Current returns the element to which it is set, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之间修改集合&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;当前、 当前返回的元素并为其设置，即使枚举数已经无效。&lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The current element in the collection.</source>
          <target state="translated">集合中的当前元素。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">枚举数定位在集合或最后一个元素之后的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">将枚举数推进到集合的下一个元素。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>After an enumerator is created or after a call to &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;, an enumerator is positioned before the first element of the collection, and the first call to MoveNext moves the enumerator over the first element of the collection.</source>
          <target state="translated">创建一个枚举器之后或在调用&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;、 枚举数定位在集合中，第一个元素之前和 MoveNext 首次调用将枚举器移到集合的第一个元素上。&lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>After the end of the collection is passed, subsequent calls to MoveNext return false until &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">对 MoveNext 的后续调用传递到集合的末尾之后，返回 false 直到&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果更改到集合，如添加、 修改或删除元素，则枚举数将失效且不可恢复，并且下一个调用 MoveNext 或&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;引发&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果枚举数已成功地推进到下一个元素;，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果枚举数传递到集合的末尾。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">创建枚举器之后，集合已修改。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">将枚举数设置为其初始位置，集合中第一个元素之前。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; or Reset throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复下, 一个调用&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;或重置引发&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;到</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">创建枚举器之后，集合已修改。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>