<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da606a29a4467e72153d05a9c78e2c37306a9290</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Resources.ResXResourceReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d5a2c530a80c50224bebbac99a3f0105f7acc10</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">534901f3b60bc42e555caf5fb8d4c3817e738bdc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.</source>
          <target state="translated">枚举 XML 资源 (.resx) 文件和流，并读取顺序资源名称和值对。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ResXResourceReader class provides a default implementation of the &lt;xref:System.Resources.IResourceReader&gt; interface that reads resource information in an XML format.</source>
          <target state="translated">ResXResourceReader 类提供的默认实现&lt;xref:System.Resources.IResourceReader&gt;接口，它读取 XML 格式的资源信息。&lt;/xref:System.Resources.IResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To read resource information from a binary resource format, use the &lt;xref:System.Resources.ResourceReader&gt; class.</source>
          <target state="translated">若要从二进制资源的格式中读取资源信息，请使用&lt;xref:System.Resources.ResourceReader&gt;类。&lt;/xref:System.Resources.ResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You use the ResXResourceReader class to enumerate resources in .resx files by traversing the dictionary enumerator (&lt;xref:System.Collections.IDictionaryEnumerator&gt;) that is returned by the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; method.</source>
          <target state="translated">ResXResourceReader 类用于遍历字典枚举器枚举.resx 文件中的资源 (&lt;xref:System.Collections.IDictionaryEnumerator&gt;) 返回的&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;方法。&lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; &lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You call the methods provided by &lt;xref:System.Collections.IDictionaryEnumerator&gt; to advance to the next resource and to read the name and value of each resource in the .resx file.</source>
          <target state="translated">调用提供的方法&lt;xref:System.Collections.IDictionaryEnumerator&gt;前进到下一步的资源并读取的名称和值的.resx 文件中的每个资源。&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The ResXResourceReader class provides two enumerators.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; ResXResourceReader 类提供了两个枚举器。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object; we recommend that you use this method to enumerate resources.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;方法返回&lt;xref:System.Collections.IDictionaryEnumerator&gt;对象; 我们建议使用此方法来枚举资源。&lt;/xref:System.Collections.IDictionaryEnumerator&gt; &lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt; method is an explicit interface implementation that returns an &lt;xref:System.Collections.IEnumerator&gt; object; we do not recommend its use.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt;方法是显式接口实现返回&lt;xref:System.Collections.IEnumerator&gt;对象; 我们不建议使用。&lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; method to obtain an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that is used to enumerate the resources in a .resx file.</source>
          <target state="translated">下面的示例使用&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;方法来获取&lt;xref:System.Collections.IDictionaryEnumerator&gt;用于枚举.resx 文件中的资源的对象。&lt;/xref:System.Collections.IDictionaryEnumerator&gt; &lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The example includes a <ph id="ph1">`CreateResourceFile`</ph> routine that creates the necessary resource file.</source>
          <target state="translated">该示例包含<ph id="ph1">`CreateResourceFile`</ph>例程可创建必需的资源文件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)</ept><ept id="p3">]</ept>       If the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is <ph id="ph1">`true`</ph>, the value of the &lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; property is a &lt;xref:System.Resources.ResXDataNode&gt; object rather than the resource value.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)</ept> <ept id="p3">]</ept>如果&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;属性是<ph id="ph1">`true`</ph>的值&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;属性是&lt;xref:System.Resources.ResXDataNode&gt;对象而不是资源值。&lt;/xref:System.Resources.ResXDataNode&gt; &lt;/xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; &lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;  </target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This makes a resource item's comment available from the &lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">这将使资源项的注释可从&lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example sets the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property to <ph id="ph1">`true`</ph> and enumerates the resources in a .resx file,       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)</ept><ept id="p3">]</ept>       If &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; is <ph id="ph2">`true`</ph>, the &lt;xref:System.Resources.ResXDataNode&gt; items in the enumeration can be either:      -   Named resources along with their data.</source>
          <target state="translated">下面的示例设置&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;属性<ph id="ph1">`true`</ph>枚举.resx 文件中的资源和<bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)</ept> <ept id="p3">]</ept>如果&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;是<ph id="ph2">`true`</ph>、&lt;xref:System.Resources.ResXDataNode&gt;枚举中的项可以是:-名为及其数据的资源。&lt;/xref:System.Resources.ResXDataNode&gt; &lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;   &lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt; property is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;属性是<ph id="ph1">`null`</ph>。&lt;/xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   Named resources along with the name of the file that contains the resource data.</source>
          <target state="translated">名称以及包含资源数据的文件的名称的资源。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt; property returns a &lt;xref:System.Resources.ResXFileRef&gt; object that provides information about the resource, including its filename.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;属性返回&lt;xref:System.Resources.ResXFileRef&gt;提供的资源，包括其文件名的相关信息的对象。&lt;/xref:System.Resources.ResXFileRef&gt; &lt;/xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If relative file names are used, you should always set the &lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt; property to provide a reference point for the relative file path.</source>
          <target state="translated">如果使用相对文件名称，还应始终设置&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;属性，以便引用点相对文件路径。&lt;/xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a &lt;xref:System.Resources.ResXResourceSet&gt; object and call its <ph id="ph1">`GetString`</ph> and <ph id="ph2">`GetObject`</ph> methods.</source>
          <target state="translated">如果你想要从.resx 文件中检索命名的资源，而不是枚举其资源，可以实例化&lt;xref:System.Resources.ResXResourceSet&gt;对象并调用其<ph id="ph1">`GetString`</ph>和<ph id="ph2">`GetObject`</ph>方法。&lt;/xref:System.Resources.ResXResourceSet&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The ResXResourceReader class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; ResXResourceReader 类包含链接要求，并且在类级别应用于所有成员继承要求。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.SecurityException&gt; exception is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A&lt;xref:System.Security.SecurityException&gt;直接调用方或派生的类没有完全信任权限时将引发异常。&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified stream.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为指定的流的类。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
          <target state="translated">包含资源的输入的流。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.IO.TextReader&gt;。&lt;/xref:System.IO.TextReader&gt;类</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A text input stream that contains resources.</source>
          <target state="translated">包含资源的文本输入的流。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified resource file.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类指定的资源文件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The path of the resource file to read.</source>
          <target state="translated">要读取的资源文件的路径。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an input stream and a type resolution service.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用的输入的流和类型解析服务。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
          <target state="translated">包含资源的输入的流。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">解析指定的类型名称在资源中的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a stream and an array of assembly names.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用流和程序集名称的数组。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
          <target state="translated">包含资源的输入的流。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">数组&lt;xref:System.Reflection.AssemblyName&gt;指定一个或多个程序集的对象。&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">程序集用于在资源的类型名称解析为一个实际类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a text stream reader and a type resolution service.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用文本流读取器和类型解析服务。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A text stream reader that contains resources.</source>
          <target state="translated">文本流读取器包含资源。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">解析指定的类型名称在资源中的对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a &lt;xref:System.IO.TextReader&gt; object and an array of assembly names.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用&lt;xref:System.IO.TextReader&gt;对象和程序集名称的数组。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An object used to read resources from a stream of text.</source>
          <target state="translated">用于从文本流中读取资源的对象。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">数组&lt;xref:System.Reflection.AssemblyName&gt;指定一个或多个程序集的对象。&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">程序集用于在资源的类型名称解析为一个实际类型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a file name and a type resolution service.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用的文件名称和类型解析服务。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">一个包含资源的 XML 资源文件的名称。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">解析指定的类型名称在资源中的对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an XML resource file name and an array of assembly names.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用 XML 资源文件名称和程序集名称的数组。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">一个包含资源的 XML 资源文件的名称。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">数组&lt;xref:System.Reflection.AssemblyName&gt;指定一个或多个程序集的对象。&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">程序集用于在资源的类型名称解析为一个实际类型。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the base path for the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取或设置中指定的相对文件路径的基路径<bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The BasePath property is used to resolve relative file path references that are assigned to the &lt;xref:System.Resources.ResXFileRef.FileName%2A&gt; property of &lt;xref:System.Resources.ResXFileRef&gt; objects.</source>
          <target state="translated">BasePath 属性用于解析相对文件路径引用分配给&lt;xref:System.Resources.ResXFileRef.FileName%2A&gt;属性&lt;xref:System.Resources.ResXFileRef&gt;对象。&lt;/xref:System.Resources.ResXFileRef&gt; &lt;/xref:System.Resources.ResXFileRef.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>By default, its value is &lt;xref:System.String.Empty?displayProperty=fullName&gt;, and relative file path references are resolved in relationship to the current directory returned by the &lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">默认情况下，其值是&lt;xref:System.String.Empty?displayProperty=fullName&gt;，并且将与返回当前目录相关解析相对文件路径引用&lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt; &lt;/xref:System.String.Empty?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You should set this property before you begin enumerating resources.</source>
          <target state="translated">在开始枚举资源之前，应设置此属性。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A path that, if prepended to the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, yields an absolute path to a resource file.</source>
          <target state="translated">一个路径，如果前面预置的相对文件路径中指定<bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，产生到资源文件的绝对路径。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.</source>
          <target state="translated">在集运算中，不能指定值，因为 XML 资源文件已访问且正被使用。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Calling Close enables the resources used by the &lt;xref:System.Resources.ResXResourceReader&gt; to be reallocated for other purposes.</source>
          <target state="translated">调用使用的资源的关闭启用&lt;xref:System.Resources.ResXResourceReader&gt;可以重新分配用于其他目的。&lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information about Close, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关关闭的详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This method can be called by either the &lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt; method or the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">可以通过以下任一方法调用此方法&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;方法或&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt; &lt;/xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt; invokes this method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;调用此方法与<ph id="ph1">`disposing`</ph>参数设置为<ph id="ph2">`true`</ph>。&lt;/xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes this method with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用此方法与<ph id="ph1">`disposing`</ph>设置为<ph id="ph2">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Resources.ResXResourceReader&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.Resources.ResXResourceReader&gt;引用。&lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This member overrides the &lt;xref:System.Object.Finalize*&gt; method.</source>
          <target state="translated">此成员重写&lt;xref:System.Object.Finalize*&gt;方法。&lt;/xref:System.Object.Finalize*&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file.</source>
          <target state="translated">创建一个新<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象并初始化它以读取其内容为 XML 资源文件形式的字符串。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">包含 XML 资源格式的信息的字符串。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
          <target state="translated">读取资源从一个对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fileContents</ph> <ept id="p1">&lt;/code&gt;</ept>字符串。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <bpt id="p2">&lt;xref href="System.ComponentModel.Design.ITypeResolutionService"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object to resolve type names specified in a resource.</source>
          <target state="translated">创建一个新<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象并初始化它以读取其内容的字符串形式的 XML 资源文件，并使用<bpt id="p2">&lt;xref href="System.ComponentModel.Design.ITypeResolutionService"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象解析资源中指定的类型名称。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">包含 XML 资源格式的信息的字符串。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">解析指定的类型名称在资源中的对象。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
          <target state="translated">读取资源从一个对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fileContents</ph> <ept id="p1">&lt;/code&gt;</ept>字符串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of &lt;xref:System.Reflection.AssemblyName&gt; objects to resolve type names specified in a resource.</source>
          <target state="translated">创建一个新<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象并初始化它以读取其内容的字符串形式的 XML 资源文件，并使用的数组&lt;xref:System.Reflection.AssemblyName&gt;对象解析资源中指定的类型名称。&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A string whose contents are in the form of an XML resource file.</source>
          <target state="translated">一个字符串，其内容是形式为 XML 资源文件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">数组&lt;xref:System.Reflection.AssemblyName&gt;指定一个或多个程序集的对象。&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">程序集用于在资源的类型名称解析为一个实际类型。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
          <target state="translated">读取资源从一个对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fileContents</ph> <ept id="p1">&lt;/code&gt;</ept>字符串。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the current <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">返回当前的枚举数<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The GetEnumerator method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current &lt;xref:System.Resources.ResXResourceReader&gt; object.</source>
          <target state="translated">GetEnumerator 方法检索 XML 资源 (.resx) 流或关联与当前字符串中的名称/值对&lt;xref:System.Resources.ResXResourceReader&gt;对象。&lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>However, if the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is set to <ph id="ph1">`true`</ph> before you call GetEnumerator, the resource items are retrieved as &lt;xref:System.Resources.ResXDataNode&gt; objects.</source>
          <target state="translated">但是，如果&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;属性设置为<ph id="ph1">`true`</ph>调用 GetEnumerator 之前，作为检索资源项&lt;xref:System.Resources.ResXDataNode&gt;对象。&lt;/xref:System.Resources.ResXDataNode&gt; &lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In this case, all resource nodes are returned regardless of type.</source>
          <target state="translated">在这种情况下，无论何种类型返回所有资源节点。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An enumerator for the current <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">当前的枚举数<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</source>
          <target state="translated">提供一个字典的枚举器可以从当前 XML 资源文件或流检索设计时属性。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Resources are stored as name/value pairs in a resource file or stream.</source>
          <target state="translated">作为资源文件或流的名称/值对存储资源。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources.</source>
          <target state="translated">设计时属性，将调用元数据，它存储在资源文件或流以及运行时数据资源。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The GetMetadataEnumerator method provides an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that can retrieve the metadata from the resource file or stream associated with the current &lt;xref:System.Resources.ResXResourceReader&gt; object.</source>
          <target state="translated">GetMetadataEnumerator 方法提供&lt;xref:System.Collections.IDictionaryEnumerator&gt;可以从资源文件或与当前的流检索元数据的对象&lt;xref:System.Resources.ResXResourceReader&gt;对象。&lt;/xref:System.Resources.ResXResourceReader&gt; &lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>However, if the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is set to <ph id="ph1">`true`</ph> before you call GetMetadataEnumerator, no resource nodes are retrieved.</source>
          <target state="translated">但是，如果&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;属性设置为<ph id="ph1">`true`</ph>调用 GetMetadataEnumerator 之前，检索没有任何资源节点。&lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An enumerator for the metadata in a resource.</source>
          <target state="translated">在资源中的元数据枚举数。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the current <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">返回当前的枚举数<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Resources.ResXResourceReader&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Resources.ResXResourceReader&gt;实例被强制转换为&lt;xref:System.Collections.IEnumerable&gt;接口。&lt;/xref:System.Collections.IEnumerable&gt; &lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To enumerate the resources in a .resx file, we recommend that you call the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method, and then call the <ph id="ph1">`MoveNext`</ph> method on the returned &lt;xref:System.Collections.IDictionaryEnumerator&gt; object.</source>
          <target state="translated">若要枚举.resx 文件中的资源，我们建议调用&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;方法，，然后调用<ph id="ph1">`MoveNext`</ph>方法返回&lt;xref:System.Collections.IDictionaryEnumerator&gt;对象。&lt;/xref:System.Collections.IDictionaryEnumerator&gt; &lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">枚举数可循环访问 XML 资源 (.resx) 流或关联与当前字符串中的名称/值对<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the <ph id="ph1">&amp;lt;</ph>xref:System.IDisposable.Dispose%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.IDisposable.Dispose%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Resources.ResXResourceReader&gt; instance is cast to an &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Resources.ResXResourceReader&gt;实例被强制转换为&lt;xref:System.IDisposable&gt;接口。&lt;/xref:System.IDisposable&gt; &lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects are returned when reading the current XML resource file or stream.</source>
          <target state="translated">获取或设置一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>在读取当前 XML 资源文件或流时返回的对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can set the UseResXDataNodes property before you begin enumerating resources.</source>
          <target state="translated">在开始枚举资源之前，你可以设置 UseResXDataNodes 属性。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>By default, its value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">默认情况下，其值是<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if resource data nodes are retrieved; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if resource data nodes are ignored.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果检索资源数据节点;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果忽略资源数据节点。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In a set operation, the enumerator for the resource file or stream is already open.</source>
          <target state="translated">在集运算中，资源文件或流的枚举数已打开。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>