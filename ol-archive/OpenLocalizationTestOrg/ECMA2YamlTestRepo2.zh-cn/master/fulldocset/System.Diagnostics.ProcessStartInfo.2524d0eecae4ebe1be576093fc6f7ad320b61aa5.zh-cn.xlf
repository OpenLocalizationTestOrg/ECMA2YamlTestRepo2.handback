<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fce07c2785976d716103256fece7998bb4fc4ad3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.ProcessStartInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c66366b9784282af7200e7a6462a1965d640b356</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1326c5e0933b999bb907c04b5f02a113080ff913</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies a set of values that are used when you start a process.</source>
          <target state="translated">指定一的组在启动进程时使用的值。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ProcessStartInfo is used together with the &lt;xref:System.Diagnostics.Process&gt; component.</source>
          <target state="translated">ProcessStartInfo 使用连同&lt;xref:System.Diagnostics.Process&gt;组件。&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you start a process using the &lt;xref:System.Diagnostics.Process&gt; class, you have access to process information in addition to that available when attaching to a running process.</source>
          <target state="translated">当你启动进程使用&lt;xref:System.Diagnostics.Process&gt;类，您有权处理信息以及可用时将附加到正在运行的进程。&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can use the ProcessStartInfo class for better control over the process you start.</source>
          <target state="translated">ProcessStartInfo 类可用于更好地控制启动的进程。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You must at least set the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property, either manually or using the constructor.</source>
          <target state="translated">至少必须设置&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性，手动或使用构造函数。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The file name is any application or document.</source>
          <target state="translated">文件名为任何应用程序或文档。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Here a document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">此处的文档定义任何具有打开的文件类型或默认与之关联的操作。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">你可以查看已注册的文件类型和其关联的应用程序为你的计算机使用<bpt id="p1">**</bpt>文件夹选项<ept id="p1">**</ept>对话框中，这是通过操作系统可用。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>高级<ept id="p1">**</ept>按钮可显示是否与特定的注册的文件类型关联的打开操作的对话框。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In addition, you can set other properties that define actions to take with that file.</source>
          <target state="translated">此外，你可以设置其他属性，定义要与该文件执行操作。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can specify a value specific to the type of the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property for the &lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt; property.</source>
          <target state="translated">你可以指定特定于类型的值&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, you can specify "print" for a document type.</source>
          <target state="translated">例如，你可以指定"打印"的文档类型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Additionally, you can specify &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; property values to be command-line arguments to pass to the file's open procedure.</source>
          <target state="translated">此外，你可以指定&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;属性的值进行命令行自变量传递给文件的打开过程。&lt;/xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, if you specify a text editor application in the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property, you can use the &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; property to specify a text file to be opened by the editor.</source>
          <target state="translated">例如，如果你指定的文本编辑器应用程序中&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性，可以使用&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;属性来指定要由编辑器中打开一个文本文件。&lt;/xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Standard input is usually the keyboard, and standard output and standard error are usually the monitor screen.</source>
          <target state="translated">标准输入通常是键盘，而标准输出和标准错误通常是监视器屏幕。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, you can use the &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A&gt;, &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt;, and &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt; properties to cause the process to get input from or return output to a file or other device.</source>
          <target state="translated">但是，你可以使用&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A&gt;， &lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt;，和&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt;属性使获取输入或将输出返回到一个文件或其他设备的过程。&lt;/xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you use the &lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;, &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;, or &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; properties on the &lt;xref:System.Diagnostics.Process&gt; component, you must first set the corresponding value on the ProcessStartInfo property.</source>
          <target state="translated">如果你使用&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;， &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;，或&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;属性&lt;xref:System.Diagnostics.Process&gt;组件，你必须首先的相应值的属性上设置 ProcessStartInfo。&lt;/xref:System.Diagnostics.Process&gt; &lt;/xref:System.Diagnostics.Process.StandardError%2A&gt; &lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt; &lt;/xref:System.Diagnostics.Process.StandardInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Otherwise, the system throws an exception when you read or write to the stream.</source>
          <target state="translated">否则，系统将在读取或写入到流时引发异常。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Set &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; to specify whether to start the process by using the operating system shell.</source>
          <target state="translated">设置&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;来指定是否使用操作系统 shell 启动进程。&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can change the value of any ProcessStartInfo property up to the time that the process starts.</source>
          <target state="translated">你可以更改最多进程启动的时间任何 ProcessStartInfo 属性的值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>After you start the process, changing these values has no effect.</source>
          <target state="translated">启动过程后，更改这些值不起作用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This class contains a link demand at the class level that applies to all members.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 此类包含在类级别应用于所有成员的链接要求。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.SecurityException&gt; is thrown when the immediate caller does not have full-trust permission.</source>
          <target state="translated">A&lt;xref:System.Security.SecurityException&gt;直接调用方没有完全信任权限时，将引发。&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关安全要求的详细信息，请参阅<bpt id="p1">[</bpt>链接需求<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class without specifying a file name with which to start the process.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>不指定启动进程使用的文件名称的类。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You must set at least the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property before you start the process.</source>
          <target state="translated">必须设置至少&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性之前在开始执行过程。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The file name is any application or document.</source>
          <target state="translated">文件名为任何应用程序或文档。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In this case, a document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">在这种情况下，将文档定义任何具有打开的文件类型或默认与之关联的操作。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">你可以查看已注册的文件类型和其关联的应用程序为你的计算机使用<bpt id="p1">**</bpt>文件夹选项<ept id="p1">**</ept>对话框中，这是通过操作系统可用。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>高级<ept id="p1">**</ept>按钮可显示是否与特定的注册的文件类型关联的打开操作的对话框。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Optionally, you can also set other properties before you start the process.</source>
          <target state="translated">（可选） 在开始过程之前，还可以设置其他属性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt; property supplies actions to take, such as "print", with the file indicated in the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;属性提供要执行，如"打印"中指示的文件与操作&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; property supplies a way to pass command-line arguments to the file when the system opens it.</source>
          <target state="translated">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;属性提供了一种将命令行参数传送到文件时系统会打开它。&lt;/xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and specifies a file name such as an application or document with which to start the process.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，并指定一个文件名称，例如应用程序或启动进程使用的文档。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The file name is any application or document.</source>
          <target state="translated">文件名为任何应用程序或文档。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this case, a document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">在这种情况下，将文档定义任何具有打开的文件类型或默认与之关联的操作。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">你可以查看已注册的文件类型和其关联的应用程序为你的计算机使用<bpt id="p1">**</bpt>文件夹选项<ept id="p1">**</ept>对话框中，这是通过操作系统可用。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>高级<ept id="p1">**</ept>按钮可显示是否与特定的注册的文件类型关联的打开操作的对话框。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can change the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property after you call this constructor, up to the time that the process starts.</source>
          <target state="translated">你可以更改&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性后调用此构造函数，进程启动的时间。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>After you start the process, changing these values has no effect.</source>
          <target state="translated">启动过程后，更改这些值不起作用。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An application or document with which to start a process.</source>
          <target state="translated">应用程序或启动一个进程使用的文档。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.ProcessStartInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，指定启动该过程中，使用的应用程序文件名称，并指定一组命令行自变量传递给应用程序。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The file name is any application or document.</source>
          <target state="translated">文件名为任何应用程序或文档。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In this case, a document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">在这种情况下，将文档定义任何具有打开的文件类型或默认与之关联的操作。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">你可以查看已注册的文件类型和其关联的应用程序为你的计算机使用<bpt id="p1">**</bpt>文件夹选项<ept id="p1">**</ept>对话框中，这是通过操作系统可用。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>高级<ept id="p1">**</ept>按钮可显示是否与特定的注册的文件类型关联的打开操作的对话框。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can change the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; or &lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; properties after you call this constructor, up to the time that the process starts.</source>
          <target state="translated">你可以更改&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;或&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;属性后调用此构造函数，进程启动的时间。&lt;/xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After you start the process, changing these values has no effect.</source>
          <target state="translated">启动过程后，更改这些值不起作用。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An application with which to start a process.</source>
          <target state="translated">若要启动的进程使用的应用程序。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Command-line arguments to pass to the application when the process starts.</source>
          <target state="translated">进程启动时要传递给应用程序的命令行参数。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the set of command-line arguments to use when starting the application.</source>
          <target state="translated">获取或设置命令行参数启动该应用程序时要使用的集。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A single string containing the arguments to pass to the target application specified in the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt; property.</source>
          <target state="translated">单个字符串包含要传递到目标应用程序中指定的参数&lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>On Windows Vista and earlier versions of the Windows operating system, the length of the arguments added to the length of the full path to the process must be less than 2080.</source>
          <target state="translated">在 Windows Vista 和早期版本的 Windows 操作系统上，添加到过程的完整路径的长度的自变量的长度必须小于 2080年。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>On Windows 7 and later versions, the length must be less than 32699.</source>
          <target state="translated">在 Windows 7 和更高版本，长度必须小于 32699。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Arguments are parsed and interpreted by the target application, so must align with the expectations of that application.</source>
          <target state="translated">自变量的分析和解释方式由目标应用程序，因此必须与该应用程序的预期保持一致。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For.NET applications as demonstrated in the Examples below, spaces are interpreted as a separator between multiple arguments.</source>
          <target state="translated">对于应用程序作为示例说明了以下，空格被解释为多个自变量之间的分隔符。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A single argument that includes spaces must be surrounded by quotation marks, but those quotation marks are not carried through to the target application.</source>
          <target state="translated">包含空格的单个参数必须用引号引起来，但这些引号不会传递到目标应用程序。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In include quotation marks in the final parsed argument, triple-escape each mark.</source>
          <target state="translated">在包括引号在内的最终已分析自变量，三重转义每个标记。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to start the process in a new window.</source>
          <target state="translated">获取或设置一个值，该值指示是否在新窗口中启动进程。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; property is <ph id="ph1">`true`</ph> or the &lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt; and &lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt; properties are not <ph id="ph2">`null`</ph>, the CreateNoWindow property value is ignored and a new window is created.</source>
          <target state="translated">如果&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;属性是<ph id="ph1">`true`</ph>或&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;和&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;属性不<ph id="ph2">`null`</ph>，将忽略 CreateNoWindow 属性值，并且创建一个新窗口。&lt;/xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the process should be started without creating a new window to contain it; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应启动进程而无需创建一个新窗口以包含它;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that identifies the domain to use when starting the process.</source>
          <target state="translated">获取或设置一个值，标识要启动该进程时使用的域。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The Active Directory domain to use when starting the process.</source>
          <target state="translated">要启动该进程时使用的 Active Directory 域。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The domain property is primarily of interest to users within enterprise environments that use Active Directory.</source>
          <target state="translated">域属性主要是感兴趣使用 Active Directory 的企业级环境内的用户。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the environment variables that apply to this process and its child processes.</source>
          <target state="translated">获取应用于此进程及其子进程的环境变量。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A generic dictionary containing the environment variables that apply to this process and its child processes.</source>
          <target state="translated">一个包含应用于此进程及其子进程的环境变量的泛型字典。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets search paths for files, directories for temporary files, application-specific options, and other similar information.</source>
          <target state="translated">获取搜索文件的路径、 临时文件、 应用程序特定的选项和其他类似信息的目录。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Although you cannot set the EnvironmentVariables property, you can modify the &lt;xref:System.Collections.Specialized.StringDictionary&gt; returned by the property.</source>
          <target state="translated">虽然不能设置 EnvironmentVariables 属性，可修改&lt;xref:System.Collections.Specialized.StringDictionary&gt;属性返回。&lt;/xref:System.Collections.Specialized.StringDictionary&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, the following code adds a TempPath environment variable: <ph id="ph1">`myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`</ph>.</source>
          <target state="translated">例如，下面的代码添加 TempPath 环境变量︰ <ph id="ph1">`myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You must set the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; property to <ph id="ph1">`false`</ph> to start the process after changing the EnvironmentVariables property.</source>
          <target state="translated">必须设置&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;属性<ph id="ph1">`false`</ph>更改 EnvironmentVariables 属性后启动该进程。&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; is <ph id="ph1">`true`</ph>, an &lt;xref:System.InvalidOperationException&gt; is thrown when the &lt;xref:System.Diagnostics.Process.Start%2A&gt; method is called.</source>
          <target state="translated">如果&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;是<ph id="ph1">`true`</ph>、&lt;xref:System.InvalidOperationException&gt;时，将引发&lt;xref:System.Diagnostics.Process.Start%2A&gt;调用方法。&lt;/xref:System.Diagnostics.Process.Start%2A&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A string dictionary that provides environment variables that apply to this process and child processes.</source>
          <target state="translated">一个字符串字典，其中提供应用于此进程以及子进程的环境变量。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.</source>
          <target state="translated">获取或设置一个值，该值不能启动进程时是否向用户显示错误对话框。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应在屏幕上显示错误对话框，如果不能启动进程;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.</source>
          <target state="translated">获取或设置错误对话框显示无法启动的进程时要使用的窗口句柄。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt; is <ph id="ph1">`true`</ph>, the ErrorDialogParentHandle property specifies the parent window for the dialog box that is shown.</source>
          <target state="translated">如果&lt;xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt;是<ph id="ph1">`true`</ph>，ErrorDialogParentHandle 属性指定显示的对话框中的父窗口。&lt;/xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It is useful to specify a parent to keep the dialog box in front of the application.</source>
          <target state="translated">它可用于指定父保留应用程序的前面的对话框。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A pointer to the handle of the error dialog box that results from a process start failure.</source>
          <target state="translated">指向结果的进程启动失败的错误对话框中的句柄的指针。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets the application or document to start.</source>
          <target state="translated">获取或设置要启动的应用程序或文档。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You must set at least the FileName property before you start the process.</source>
          <target state="translated">你必须设置至少 FileName 属性之前在开始执行过程。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The file name is any application or document.</source>
          <target state="translated">文件名为任何应用程序或文档。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A document is defined to be any file type that has an open or default action associated with it.</source>
          <target state="translated">将文档定义任何具有打开的文件类型或默认与之关联的操作。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You can view registered file types and their associated applications for your computer by using the <bpt id="p1">**</bpt>Folder Options<ept id="p1">**</ept> dialog box, which is available through the operating system.</source>
          <target state="translated">你可以查看已注册的文件类型和其关联的应用程序为你的计算机使用<bpt id="p1">**</bpt>文件夹选项<ept id="p1">**</ept>对话框中，这是通过操作系统可用。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</source>
          <target state="translated"><bpt id="p1">**</bpt>高级<ept id="p1">**</ept>按钮可显示是否与特定的注册的文件类型关联的打开操作的对话框。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The set of file types available to you depends in part on the value of the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; property.</source>
          <target state="translated">可供你的文件类型的一套部分取决于值&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; is <ph id="ph1">`true`</ph>, you can start any document and perform operations on the file, such as printing, with the &lt;xref:System.Diagnostics.Process&gt; component.</source>
          <target state="translated">如果&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;是<ph id="ph1">`true`</ph>，可以启动任何文档，还可以对文件执行操作，如打印与&lt;xref:System.Diagnostics.Process&gt;组件。&lt;/xref:System.Diagnostics.Process&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; is <ph id="ph1">`false`</ph>, you can start only executables with the &lt;xref:System.Diagnostics.Process&gt; component.</source>
          <target state="translated">当&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;是<ph id="ph1">`false`</ph>，你可以开始仅可执行文件与&lt;xref:System.Diagnostics.Process&gt;组件。&lt;/xref:System.Diagnostics.Process&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You can start a ClickOnce application by setting the FileName property to the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">可以通过将 FileName 属性设置为最初从中安装应用程序的位置 （例如，Web 地址） 来启动 ClickOnce 应用程序。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard disk.</source>
          <target state="translated">不通过指定其安装的位置在硬盘上启动 ClickOnce 应用程序。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it.</source>
          <target state="translated">若要开始，应用程序的名称或应用程序与该键相关联，并具有的默认打开操作对其可用的文件类型的文档的名称。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.</source>
          <target state="translated">获取或设置一个值，该值指示是否要从注册表加载 Windows 用户配置文件。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This property is referenced if the process is being started by using the user name, password, and domain.</source>
          <target state="translated">如果正在使用的用户名、 密码和域启动的过程，将引用此属性。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If the value is <ph id="ph1">`true`</ph>, the user's profile in the <ph id="ph2">`HKEY_USERS`</ph> registry key is loaded.</source>
          <target state="translated">如果值为<ph id="ph1">`true`</ph>中的用户的配置文件<ph id="ph2">`HKEY_USERS`</ph>加载注册表项。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Loading the profile can be time-consuming.</source>
          <target state="translated">加载配置文件可能非常耗时。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Therefore, it is best to use this value only if you must access the information in the <ph id="ph1">`HKEY_CURRENT_USER`</ph> registry key.</source>
          <target state="translated">因此，最好使用此值仅在必须访问中的信息<ph id="ph1">`HKEY_CURRENT_USER`</ph>注册表项。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In Windows Server 2003 and Windows 2000, the profile is unloaded after the new process has been terminated, regardless of whether the process has created child processes.</source>
          <target state="translated">在 Windows Server 2003 和 Windows 2000 中，配置文件被卸载，新进程终止后，无论是否创建的过程具有子进程。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>In Windows XP, the profile is unloaded after the new process and all child processes it has created have been terminated.</source>
          <target state="translated">在 Windows XP 中，配置文件后卸载新的进程并且它已创建的所有子进程已都终止。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the Windows user profile should be loaded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应加载 Windows 用户配置文件;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets or sets a secure string that contains the user password to use when starting the process.</source>
          <target state="translated">获取或设置包含启动进程时要使用的用户密码的安全字符串。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The user password to use when starting the process.</source>
          <target state="translated">用于启动进程时使用的用户密码。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets the user password in clear text to use when starting the process.</source>
          <target state="translated">获取或设置以明文形式启动进程时要使用的用户密码。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The user password in clear text.</source>
          <target state="translated">用户密码以明文形式。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the error output of an application is written to the <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardError%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> stream.</source>
          <target state="translated">获取或设置一个值，该值指示是否将应用程序的错误输出写入到<ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardError%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>流。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When a &lt;xref:System.Diagnostics.Process&gt; writes text to its standard error stream, that text is typically displayed on the console.</source>
          <target state="translated">当&lt;xref:System.Diagnostics.Process&gt;将文本写入其标准错误流中，通常在控制台上显示文本。&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>By redirecting the &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream, you can manipulate or suppress the error output of a process.</source>
          <target state="translated">通过将重定向&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;流，你可以操作或取消进程的错误输出。&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</source>
          <target state="translated">例如，你可以筛选文本、 格式设置不同，或将输出写入控制台和一个指定的日志文件。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You must set &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; to <ph id="ph2">`false`</ph> if you want to set RedirectStandardError to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 必须设置&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;到<ph id="ph2">`false`</ph>如果你想要设置为 RedirectStandardError <ph id="ph3">`true`</ph>。&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Otherwise, reading from the &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream throws an exception.</source>
          <target state="translated">否则，读取从&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;流时将引发异常。&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The redirected &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream can be read synchronously or asynchronously.</source>
          <target state="translated">重定向&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;可以读取流，同步或异步。&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Methods such as &lt;xref:System.IO.StreamReader.Read%2A&gt;, &lt;xref:System.IO.StreamReader.ReadLine%2A&gt; and &lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt; perform synchronous read operations on the error output stream of the process.</source>
          <target state="translated">等方法&lt;xref:System.IO.StreamReader.Read%2A&gt;，&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;和&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;同步对执行读取的操作的错误输出流的过程。&lt;/xref:System.IO.StreamReader.ReadToEnd%2A&gt; &lt;/xref:System.IO.StreamReader.ReadLine%2A&gt; &lt;/xref:System.IO.StreamReader.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>These synchronous read operations do not complete until the associated &lt;xref:System.Diagnostics.Process&gt; writes to its &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream, or closes the stream.</source>
          <target state="translated">这些同步读取操作不会完成之前关联&lt;xref:System.Diagnostics.Process&gt;写入其&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;流处理时，或关闭流。&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt; &lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt; starts asynchronous read operations on the &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream.</source>
          <target state="translated">与此相反，&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;开始异步读取操作上&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt; &lt;/xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">此方法将启用流输出指定的事件处理程序并立即返回到调用方，流输出定向到事件处理程序时可以执行其他工作。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The application that is processing the asynchronous output should call the &lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt; method to ensure that the output buffer has been flushed.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 正在处理的异步输出应用程序应调用&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;方法，以确保已刷新输出缓冲区。&lt;/xref:System.Diagnostics.Process.WaitForExit%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Synchronous read operations introduce a dependency between the caller reading from the &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream and the child process writing to that stream.</source>
          <target state="translated">同步读取操作引入读取从调用方之间的依赖项&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;流和子进程的写入该流。&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>These dependencies can cause deadlock conditions.</source>
          <target state="translated">这些依赖关系可能会导致死锁条件。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>When the caller reads from the redirected stream of a child process, it is dependent on the child.</source>
          <target state="translated">当调用方读取子进程的重定向流时，它是依赖于子。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The caller waits for the read operation until the child writes to the stream or closes the stream.</source>
          <target state="translated">调用方等待读取操作，直到子写入流或关闭流。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</source>
          <target state="translated">子进程在编写时数据不足，无法填充其重定向的流，它是依赖于父。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</source>
          <target state="translated">子进程等待下一步的写入操作，直到的父项从完整的流中读取或关闭流。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</source>
          <target state="translated">当调用方和子进程等待其他来完成操作，并都可以继续，将产生死锁条件。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>You can avoid deadlocks by evaluating dependencies between the caller and child process.</source>
          <target state="translated">可以通过评估的调用方和子进程之间的依赖关系来避免死锁。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</source>
          <target state="translated">例如，下面的 C# 代码演示如何从重定向流中读取和等待子进程退出。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   // Start the child process.    Process p = new Process();    // Redirect the error stream of the child process.    p.StartInfo.UseShellExecute = false;    p.StartInfo.RedirectStandardError = true;    p.StartInfo.FileName = "Write500Lines.exe";    p.Start();    // Do not wait for the child process to exit before    // reading to the end of its redirected error stream.    // p.WaitForExit();    // Read the error stream first and then wait.    string error = p.StandardError.ReadToEnd();    p.WaitForExit();   ```</ph>       The code example avoids a deadlock condition by calling <ph id="ph2">`p.StandardError.ReadToEnd`</ph> before <ph id="ph3">`p.WaitForExit`</ph>.</source>
          <target state="translated"><ph id="ph1">```   // Start the child process.    Process p = new Process();    // Redirect the error stream of the child process.    p.StartInfo.UseShellExecute = false;    p.StartInfo.RedirectStandardError = true;    p.StartInfo.FileName = "Write500Lines.exe";    p.Start();    // Do not wait for the child process to exit before    // reading to the end of its redirected error stream.    // p.WaitForExit();    // Read the error stream first and then wait.    string error = p.StandardError.ReadToEnd();    p.WaitForExit();   ```</ph>下面的代码示例通过调用来避免死锁条件<ph id="ph2">`p.StandardError.ReadToEnd`</ph>之前<ph id="ph3">`p.WaitForExit`</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A deadlock condition can result if the parent process calls <ph id="ph1">`p.WaitForExit`</ph> before <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill the redirected stream.</source>
          <target state="translated">如果父进程调用会导致死锁条件<ph id="ph1">`p.WaitForExit`</ph>之前<ph id="ph2">`p.StandardError.ReadToEnd`</ph>和子进程将足够多的文本以填充重定向的流。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The parent process would wait indefinitely for the child process to exit.</source>
          <target state="translated">父进程将无限期地等待子进程退出。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The child process would wait indefinitely for the parent to read from the full &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream.</source>
          <target state="translated">子进程将无限期地等待父从完整读取&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>There is a similar issue when you read all text from both the standard output and standard error streams.</source>
          <target state="translated">从标准输出和标准错误流读取所有文本时类似问题。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For example, the following C# code performs a read operation on both streams.</source>
          <target state="translated">例如，下面的 C# 代码执行对这两种流的读取的操作。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   // Do not perform a synchronous read to the end of both   // redirected streams.   // string output = p.StandardOutput.ReadToEnd();   // string error = p.StandardError.ReadToEnd();   // p.WaitForExit();   // Use asynchronous read operations on at least one of the streams.   p.BeginOutputReadLine();   string error = p.StandardError.ReadToEnd();   p.WaitForExit();   ```</ph>       The code example avoids the deadlock condition by performing asynchronous read operations on the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated"><ph id="ph1">```   // Do not perform a synchronous read to the end of both   // redirected streams.   // string output = p.StandardOutput.ReadToEnd();   // string error = p.StandardError.ReadToEnd();   // p.WaitForExit();   // Use asynchronous read operations on at least one of the streams.   p.BeginOutputReadLine();   string error = p.StandardError.ReadToEnd();   p.WaitForExit();   ```</ph>下面的代码示例通过执行异步上读取操作来避免死锁条件&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A deadlock condition results if the parent process calls <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> followed by <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill its error stream.</source>
          <target state="translated">死锁条件结果如果父进程调用<ph id="ph1">`p.StandardOutput.ReadToEnd`</ph>跟<ph id="ph2">`p.StandardError.ReadToEnd`</ph>和子进程将足够多的文本以填充其错误流。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The parent process would wait indefinitely for the child process to close its &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated">父进程将无限期地等待子进程以关闭其&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The child process would wait indefinitely for the parent to read from the full &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream.</source>
          <target state="translated">子进程将无限期地等待父从完整读取&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</source>
          <target state="translated">异步读取的操作可用于避免这些依赖关系和其潜在的死锁。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</source>
          <target state="translated">或者，可以通过创建两个线程并读取在单独线程上的每个流的输出来避免出现死锁条件。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if error output should be written to <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardError%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果错误输出应写入<ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardError%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the input for an application is read from the <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardInput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> stream.</source>
          <target state="translated">获取或设置一个值，该值指示是否从读取应用程序输入<ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardInput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>流。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Diagnostics.Process&gt; can read input text from its standard input stream, typically the keyboard.</source>
          <target state="translated">A&lt;xref:System.Diagnostics.Process&gt;可以从其标准的输入流，通常是键盘读取输入的文本。&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>By redirecting the &lt;xref:System.Diagnostics.Process.StandardInput%2A&gt; stream, you can programmatically specify the input of a process.</source>
          <target state="translated">通过将重定向&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;流，你可以以编程方式指定进程的输入。&lt;/xref:System.Diagnostics.Process.StandardInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</source>
          <target state="translated">例如，而不是使用键盘输入，你可以提供从指定文件的内容的文本或从另一个应用程序的输出。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You must set &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; to <ph id="ph2">`false`</ph> if you want to set RedirectStandardInput to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 必须设置&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;到<ph id="ph2">`false`</ph>如果你想要设置为 RedirectStandardInput <ph id="ph3">`true`</ph>。&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Otherwise, writing to the &lt;xref:System.Diagnostics.Process.StandardInput%2A&gt; stream throws an exception.</source>
          <target state="translated">否则，写入&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;流时将引发异常。&lt;/xref:System.Diagnostics.Process.StandardInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if input should be read from <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardInput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应从读取输入<ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardInput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the textual output of an application is written to the <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardOutput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> stream.</source>
          <target state="translated">获取或设置一个值，该值指示是否将应用程序文本输出写入<ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardOutput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>流。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>When a &lt;xref:System.Diagnostics.Process&gt; writes text to its standard stream, that text is typically displayed on the console.</source>
          <target state="translated">当&lt;xref:System.Diagnostics.Process&gt;将文本写入其标准的流，通常在控制台上显示文本。&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>By setting RedirectStandardOutput to <ph id="ph1">`true`</ph> to redirect the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream, you can manipulate or suppress the output of a process.</source>
          <target state="translated">通过设置为 RedirectStandardOutput<ph id="ph1">`true`</ph>重定向&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流，你可以操作或取消进程的输出。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</source>
          <target state="translated">例如，你可以筛选文本、 格式设置不同，或将输出写入控制台和一个指定的日志文件。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You must set &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt; to <ph id="ph2">`false`</ph> if you want to set RedirectStandardOutput to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 必须设置&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;到<ph id="ph2">`false`</ph>如果你想要设置为 RedirectStandardOutput <ph id="ph3">`true`</ph>。&lt;/xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Otherwise, reading from the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream throws an exception.</source>
          <target state="translated">否则，读取从&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流时将引发异常。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The redirected &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream can be read synchronously or asynchronously.</source>
          <target state="translated">重定向&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;可以读取流，同步或异步。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Methods such as &lt;xref:System.IO.StreamReader.Read%2A&gt;, &lt;xref:System.IO.StreamReader.ReadLine%2A&gt;, and &lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt; perform synchronous read operations on the output stream of the process.</source>
          <target state="translated">等方法&lt;xref:System.IO.StreamReader.Read%2A&gt;， &lt;xref:System.IO.StreamReader.ReadLine%2A&gt;，和&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;同步对执行读取的操作过程的输出流。&lt;/xref:System.IO.StreamReader.ReadToEnd%2A&gt; &lt;/xref:System.IO.StreamReader.ReadLine%2A&gt; &lt;/xref:System.IO.StreamReader.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>These synchronous read operations do not complete until the associated &lt;xref:System.Diagnostics.Process&gt; writes to its &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream, or closes the stream.</source>
          <target state="translated">这些同步读取操作不会完成之前关联&lt;xref:System.Diagnostics.Process&gt;写入其&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流处理时，或关闭流。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt; &lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt; starts asynchronous read operations on the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated">与此相反，&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;开始异步读取操作上&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt; &lt;/xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This method enables a designated event handler (see &lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;) for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">此方法使指定的事件处理程序 (请参阅&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;) 的输出进行流式处理并立即将返回到调用方，这可以时执行其他工作流输出定向到事件处理程序。&lt;/xref:System.Diagnostics.Process.OutputDataReceived&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The application that is processing the asynchronous output should call the &lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt; method to ensure that the output buffer has been flushed.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 正在处理的异步输出应用程序应调用&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;方法，以确保已刷新输出缓冲区。&lt;/xref:System.Diagnostics.Process.WaitForExit%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Synchronous read operations introduce a dependency between the caller reading from the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream and the child process writing to that stream.</source>
          <target state="translated">同步读取操作引入读取从调用方之间的依赖项&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流和子进程的写入该流。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>These dependencies can cause deadlock conditions.</source>
          <target state="translated">这些依赖关系可能会导致死锁条件。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>When the caller reads from the redirected stream of a child process, it is dependent on the child.</source>
          <target state="translated">当调用方读取子进程的重定向流时，它是依赖于子。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The caller waits for the read operation until the child writes to the stream or closes the stream.</source>
          <target state="translated">调用方等待读取操作，直到子写入流或关闭流。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</source>
          <target state="translated">子进程在编写时数据不足，无法填充其重定向的流，它是依赖于父。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</source>
          <target state="translated">子进程等待下一步的写入操作，直到的父项从完整的流中读取或关闭流。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</source>
          <target state="translated">当调用方和子进程等待其他来完成操作，并都可以继续，将产生死锁条件。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>You can avoid deadlocks by evaluating dependencies between the caller and child process.</source>
          <target state="translated">可以通过评估的调用方和子进程之间的依赖关系来避免死锁。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</source>
          <target state="translated">例如，下面的 C# 代码演示如何从重定向流中读取和等待子进程退出。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Process p = new Process();   p.StartInfo.UseShellExecute = false;   p.StartInfo.RedirectStandardOutput = true;   p.StartInfo.FileName = "Write500Lines.exe";   p.Start();      // To avoid deadlocks, always read the output stream first and then wait.   string output = p.StandardOutput.ReadToEnd();   p.WaitForExit();   ```</ph>       The code example avoids a deadlock condition by calling <ph id="ph2">`p.StandardOutput.ReadToEnd`</ph> before <ph id="ph3">`p.WaitForExit`</ph>.</source>
          <target state="translated"><ph id="ph1">```   Process p = new Process();   p.StartInfo.UseShellExecute = false;   p.StartInfo.RedirectStandardOutput = true;   p.StartInfo.FileName = "Write500Lines.exe";   p.Start();      // To avoid deadlocks, always read the output stream first and then wait.   string output = p.StandardOutput.ReadToEnd();   p.WaitForExit();   ```</ph>下面的代码示例通过调用来避免死锁条件<ph id="ph2">`p.StandardOutput.ReadToEnd`</ph>之前<ph id="ph3">`p.WaitForExit`</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A deadlock condition can result if the parent process calls <ph id="ph1">`p.WaitForExit`</ph> before <ph id="ph2">`p.StandardOutput.ReadToEnd`</ph> and the child process writes enough text to fill the redirected stream.</source>
          <target state="translated">如果父进程调用会导致死锁条件<ph id="ph1">`p.WaitForExit`</ph>之前<ph id="ph2">`p.StandardOutput.ReadToEnd`</ph>和子进程将足够多的文本以填充重定向的流。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The parent process would wait indefinitely for the child process to exit.</source>
          <target state="translated">父进程将无限期地等待子进程退出。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The child process would wait indefinitely for the parent to read from the full &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated">子进程将无限期地等待父从完整读取&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>There is a similar issue when you read all text from both the standard output and standard error streams.</source>
          <target state="translated">从标准输出和标准错误流读取所有文本时类似问题。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For example, the following C# code performs a read operation on both streams.</source>
          <target state="translated">例如，下面的 C# 代码执行对这两种流的读取的操作。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   // To avoid deadlocks, use asynchronous read operations on at least one of the streams.   // Do not perform a synchronous read to the end of both redirected streams.   p.BeginOutputReadLine();   string error = p.StandardError.ReadToEnd();   p.WaitForExit();   ```</ph>       The code example avoids the deadlock condition by performing asynchronous read operations on the &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated"><ph id="ph1">```   // To avoid deadlocks, use asynchronous read operations on at least one of the streams.   // Do not perform a synchronous read to the end of both redirected streams.   p.BeginOutputReadLine();   string error = p.StandardError.ReadToEnd();   p.WaitForExit();   ```</ph>下面的代码示例通过执行异步上读取操作来避免死锁条件&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A deadlock condition results if the parent process calls <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> followed by <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill its error stream.</source>
          <target state="translated">死锁条件结果如果父进程调用<ph id="ph1">`p.StandardOutput.ReadToEnd`</ph>跟<ph id="ph2">`p.StandardError.ReadToEnd`</ph>和子进程将足够多的文本以填充其错误流。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The parent process would wait indefinitely for the child process to close its &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; stream.</source>
          <target state="translated">父进程将无限期地等待子进程以关闭其&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardOutput%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The child process would wait indefinitely for the parent to read from the full &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream.</source>
          <target state="translated">子进程将无限期地等待父从完整读取&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;流。&lt;/xref:System.Diagnostics.Process.StandardError%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</source>
          <target state="translated">异步读取的操作可用于避免这些依赖关系和其潜在的死锁。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</source>
          <target state="translated">或者，可以通过创建两个线程并读取在单独线程上的每个流的输出来避免出现死锁条件。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if output should be written to <ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardOutput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果输出应写入到<ph id="ph1">&amp;lt;</ph>xref:System.Diagnostics.Process.StandardOutput%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Gets or sets the preferred encoding for error output.</source>
          <target state="translated">获取或设置错误输出的首选编码。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>If the value of the StandardErrorEncoding property is <ph id="ph1">`null`</ph>, the process uses the default standard error encoding for error output.</source>
          <target state="translated">如果 StandardErrorEncoding 属性的值是<ph id="ph1">`null`</ph>，进程使用错误输出的默认标准错误编码。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The StandardErrorEncoding property must be set before the process is started.</source>
          <target state="translated">启动该过程之前，必须设置 StandardErrorEncoding 属性。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Setting this property does not guarantee that the process will use the specified encoding; the process will use only those encodings that it supports.</source>
          <target state="translated">设置此属性不能保证该进程将使用指定的编码;该进程将使用这些它支持的编码。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The application should be tested to determine which encodings are supported.</source>
          <target state="translated">应测试应用程序，以确定受支持的编码。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An object that represents the preferred encoding for error output.</source>
          <target state="translated">一个表示错误输出的首选的编码的对象。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Gets or sets the preferred encoding for standard output.</source>
          <target state="translated">获取或设置标准输出的首选编码。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If the value of the StandardOutputEncoding property is <ph id="ph1">`null`</ph>, the process uses the default standard output encoding for the standard output.</source>
          <target state="translated">如果 StandardOutputEncoding 属性的值是<ph id="ph1">`null`</ph>，进程使用标准输出的默认标准输出编码。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The StandardOutputEncoding property must be set before the process is started.</source>
          <target state="translated">启动该过程之前，必须设置 StandardOutputEncoding 属性。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Setting this property does not guarantee that the process will use the specified encoding.</source>
          <target state="translated">设置此属性不能保证该进程将使用指定的编码。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The application should be tested to determine which encodings the process supports.</source>
          <target state="translated">应测试应用程序，以确定该过程支持的编码。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>An object that represents the preferred encoding for standard output.</source>
          <target state="translated">表示标准输出的首选的编码的对象。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Gets or sets the user name to be used when starting the process.</source>
          <target state="translated">获取或设置要启动该进程时使用的用户名。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The user name to use when starting the process.</source>
          <target state="translated">启动进程时要使用的用户名。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to use the operating system shell to start the process.</source>
          <target state="translated">获取或设置一个值，该值指示是否使用操作系统 shell 启动进程。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Setting this property to <ph id="ph1">`false`</ph> enables you to redirect input, output, and error streams.</source>
          <target state="translated">此属性设置为<ph id="ph1">`false`</ph>使您能够重定向输入、 输出和错误流。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  UseShellExecute must be <ph id="ph2">`false`</ph> if the &lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt; property is not <ph id="ph3">`null`</ph> or an empty string, or an &lt;xref:System.InvalidOperationException&gt; will be thrown when the &lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=fullName&gt; method is called.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 必须 UseShellExecute<ph id="ph2">`false`</ph>如果&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;属性不是<ph id="ph3">`null`</ph>或空字符串，或&lt;xref:System.InvalidOperationException&gt;时将引发&lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=fullName&gt;调用方法。&lt;/xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=fullName&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>When you use the operating system shell to start processes, you can start any document (which is any registered file type associated with an executable that has a default open action) and perform operations on the file, such as printing, by using the &lt;xref:System.Diagnostics.Process&gt; object.</source>
          <target state="translated">当使用操作系统 shell 启动进程时，你可以启动任何文档 （这是与默认打开操作的可执行文件关联的任何已注册的文件类型），并对文件执行操作，如打印，通过使用&lt;xref:System.Diagnostics.Process&gt;对象。&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>When UseShellExecute is <ph id="ph1">`false`</ph>, you can start only executables by using the &lt;xref:System.Diagnostics.Process&gt; object.</source>
          <target state="translated">UseShellExecute 时<ph id="ph1">`false`</ph>，您可以通过使用启动仅可执行文件&lt;xref:System.Diagnostics.Process&gt;对象。&lt;/xref:System.Diagnostics.Process&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  UseShellExecute must be <ph id="ph2">`true`</ph> if you set the &lt;xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt; property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 必须 UseShellExecute<ph id="ph2">`true`</ph>如果你设置&lt;xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt;属性<ph id="ph3">`true`</ph>。&lt;/xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt; property behaves differently depending on the value of the UseShellExecute property.</source>
          <target state="translated">&lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;属性的行为具体取决于 UseShellExecute 属性的值。&lt;/xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>When UseShellExecute is <ph id="ph1">`true`</ph>, the &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt; property specifies the location of the executable.</source>
          <target state="translated">UseShellExecute 时<ph id="ph1">`true`</ph>、&lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;属性指定的可执行文件的位置。&lt;/xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt; is an empty string, it is assumed that the current directory contains the executable.</source>
          <target state="translated">如果&lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;为空字符串，则假定当前目录包含可执行文件。&lt;/xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>When UseShellExecute is <ph id="ph1">`false`</ph>, the &lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt; property is not used to find the executable.</source>
          <target state="translated">UseShellExecute 时<ph id="ph1">`false`</ph>、&lt;xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;属性不用于查找可执行文件。&lt;/xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Instead, it is used only by the process that is started and has meaning only within the context of the new process.</source>
          <target state="translated">相反，它仅由已启动并且具有仅在新进程的上下文内的含义的进程使用。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>When UseShellExecute is <ph id="ph1">`false`</ph>, the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property can be either a fully qualified path to the executable, or a simple executable name that the system will attempt to find within folders specified by the PATH environment variable.</source>
          <target state="translated">UseShellExecute 时<ph id="ph1">`false`</ph>、&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性可以是可执行文件的完全限定的路径，或是简单的可执行文件名称，系统将尝试查找在 PATH 环境变量所指定的文件夹内。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the shell should be used when starting the process; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the process should be created directly from the executable file.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果在启动进程; 时，应使用命令行界面<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果应直接从可执行文件创建的过程。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Gets or sets the verb to use when opening the application or document specified by the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt; property.</source>
          <target state="translated">获取或设置要在打开应用程序或由指定的文档时使用的谓词&lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Each file name extension has its own set of verbs, which can be obtained by using the &lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt; property.</source>
          <target state="translated">每个文件扩展名具有其自己的一组谓词，可获取通过使用&lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>For example, the "<ph id="ph1">`print`</ph>" verb will print a document specified by using &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;.</source>
          <target state="translated">例如，"<ph id="ph1">`print`</ph>"谓词将打印指定通过使用&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;文档</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The default verb can be specified by using an empty string ("").</source>
          <target state="translated">可以通过使用一个空字符串指定默认的谓词 ("")。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</source>
          <target state="translated">谓词的示例包括"编辑"、"打开"、"OpenAsReadOnly"、"打印"和"Printto"。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>You should use only verbs that appear in the set of verbs returned by the &lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt; property.</source>
          <target state="translated">应使用的一组返回的谓词中显示的谓词&lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>When you use the Verb property, you must include the file name extension when you set the value of the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property.</source>
          <target state="translated">当你使用的谓词属性时，设置的值时，你必须包括的文件扩展名&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The file name does not need to have an extension if you manually enter a value for the Verb property.</source>
          <target state="translated">文件名称不必具有扩展名，如果你手动输入谓词属性的值。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The action to take with the file that the process opens.</source>
          <target state="translated">要与对进程打开的文件执行的操作。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The default is an empty string (""), which signifies no action.</source>
          <target state="translated">默认值为空字符串 ("")，它表示没有操作。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Gets the set of verbs associated with the type of file specified by the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt; property.</source>
          <target state="translated">获取的一组与指定的文件类型关联的谓词&lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The Verbs property enables you to determine the verbs that can be used with the file specified by the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property.</source>
          <target state="translated">Verbs 属性使您能够确定可与指定的文件使用的谓词&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>You can set the &lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt; property to the value of any verb in the set.</source>
          <target state="translated">你可以设置&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;属性集中的任何谓词的值。&lt;/xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</source>
          <target state="translated">谓词的示例包括"编辑"、"打开"、"OpenAsReadOnly"、"打印"和"Printto"。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>When you use the Verbs property, you must include the file name extension when you set the value of the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt; property.</source>
          <target state="translated">当你使用的 Verbs 属性时，设置的值时，你必须包括的文件扩展名&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The file name extension determines the set of possible verbs.</source>
          <target state="translated">文件扩展名确定一的组可能的谓词。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The actions that the system can apply to the file indicated by the &lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt; property.</source>
          <target state="translated">系统可以应用于文件的操作由&lt;xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;属性。&lt;/xref:System.Diagnostics.ProcessStartInfo.FileName*&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Gets or sets the window state to use when the process is started.</source>
          <target state="translated">获取或设置要在启动进程时使用的窗口状态。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible.</source>
          <target state="translated">一个枚举值，该值指示是否在最大化，窗口中启动进程最小化，正常 （即非最大化也非最小化），或不可见。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Normal" name="Normal" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_Normal" name="Normal" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The window style is not one of the <bpt id="p1">&lt;xref href="System.Diagnostics.ProcessWindowStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration members.</source>
          <target state="translated">窗口样式不是一个<bpt id="p1">&lt;xref href="System.Diagnostics.ProcessWindowStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举成员。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute<bpt id="p1">*</bpt>&gt; property is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, gets or sets the working directory for the process to be started. When &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute<ept id="p1">*</ept>&gt; is <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, gets or sets the directory that contains the process to be started.</source>
          <target state="translated">当&lt;&gt; <bpt id="p1">*</bpt>1&gt; 属性是<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，则获取或设置要启动进程的工作目录。当&lt;&gt; <ept id="p1">*</ept>1&gt; 是<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，则获取或设置包含要启动的进程的目录。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute<bpt id="p1">*</bpt>&gt; is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, the fully qualified name of the directory that contains the process to be started. When the &lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute<ept id="p1">*</ept>&gt; property is <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, the working directory for the process to be started.</source>
          <target state="translated">当&lt;&gt; <bpt id="p1">*</bpt>1&gt; 是<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，包含要启动的进程的目录的完全限定的名称。当&lt;&gt; <ept id="p1">*</ept>1&gt; 属性是<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，要启动进程的工作目录。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串 ("")。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>