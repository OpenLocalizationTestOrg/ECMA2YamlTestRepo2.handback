<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc0f9059ccdb447123ce112112b6b992f363b51d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.IQueryAmbient.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d46f3db6648a1727a934d25683214ac0d0da40c8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7525a30dae94d83fc1bdca8158dd99215e943b06</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Queries for whether a specified property should be treated as ambient in the current scope.</source>
          <target state="translated">有关是否指定的属性应视为环境当前作用域中的查询。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</source>
          <target state="translated">环境属性机制的用途是通过告知 XAML 对象编写器，以避免实例化某些对象，在其中已知的对象是临时的且不能用于典型的运行的时应用程序的值的情况下提高分析的时间。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</source>
          <target state="translated">通常情况下，XAML 查找或属性 get 访问器的 XAML 处理需要实例化此类对象来填充对象图表示形式与准备就绪，可以使用值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>IQueryAmbient has one member: &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;.</source>
          <target state="translated">IQueryAmbient 包含一个成员︰ &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;.&lt;/xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>IQueryAmbient is a parallel mechanism to &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.</source>
          <target state="translated">IQueryAmbient 是到&lt;xref:System.Windows.Markup.AmbientAttribute&gt;。&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;并行机制</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>IQueryAmbient is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> for &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;), whereas the attribute is essentially static analysis).</source>
          <target state="translated">IQueryAmbient 是专用的机制，可避免使用反射来确定信息，并还可以 act 函数 (给定的对象无法选择报表<ph id="ph1">`true`</ph>或<ph id="ph2">`false`</ph>为&lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;)，而该属性是实质上是静态分析)。&lt;/xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Markup.AmbientAttribute&gt; is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties &lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt; and &lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;是常规的机制，可以使用由 XAML 对象编写器，并且通常关联到的专用 XAML 类型系统属性&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;和&lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;。&lt;/xref:System.Xaml.XamlType.IsAmbient%2A&gt; &lt;/xref:System.Xaml.XamlMember.IsAmbient%2A&gt;&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>WPF Implementations of IQueryAmbient    In WPF, IQueryAmbient is used for the resource dictionary lookup process.</source>
          <target state="translated">WPF 实现的 IQueryAmbient WPF 中，IQueryAmbient 用于资源字典查找过程。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The lookup process gets successive <ph id="ph1">`Resources`</ph> values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</source>
          <target state="translated">查找进程获取连续<ph id="ph1">`Resources`</ph>整个 WPF 逻辑树的值，致力于资源作用域的根之前密钥找不到或确定键在作用域中不存在。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Normally, doing so would require instantiating a &lt;xref:System.Windows.ResourceDictionary&gt; each time to receive the results.</source>
          <target state="translated">通常，此操作需要实例化&lt;xref:System.Windows.ResourceDictionary&gt;每次接收结果。&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Declaring the contents of <ph id="ph1">`Resources`</ph> as ambient so long as <ph id="ph2">`Resources`</ph> exists optimizes this lookup process.</source>
          <target state="translated">声明的内容<ph id="ph1">`Resources`</ph>只要为环境<ph id="ph2">`Resources`</ph>存在来优化此查找过程。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In WPF, this interface is implemented in the following cases:      -   &lt;xref:System.Windows.FrameworkElement&gt; implements &lt;xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A&gt; to return <ph id="ph1">`true`</ph> for all property names if it contains an existing &lt;xref:System.Windows.ResourceDictionary&gt; for &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;, and so long as the query is not for the &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt; property itself.</source>
          <target state="translated">在 WPF 中，实现此接口在以下情况下:-&lt;xref:System.Windows.FrameworkElement&gt;实现&lt;xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A&gt;返回<ph id="ph1">`true`</ph>对所有的属性名，如果它包含的现有&lt;xref:System.Windows.ResourceDictionary&gt;为&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;，并且只要查询不是针对&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;属性本身。&lt;/xref:System.Windows.FrameworkElement.Resources%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Resources%2A&gt; &lt;/xref:System.Windows.ResourceDictionary&gt; &lt;/xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Style&gt; implements the same pattern for its &lt;xref:System.Windows.Style.Resources%2A&gt;.</source>
          <target state="translated">-&lt;xref:System.Windows.Style&gt;实现其&lt;xref:System.Windows.Style.Resources%2A&gt;.&lt;/xref:System.Windows.Style.Resources%2A&gt;的相同模式&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Application&gt; implements the same pattern for its &lt;xref:System.Windows.Application.Resources%2A&gt;.</source>
          <target state="translated">-&lt;xref:System.Windows.Application&gt;实现其&lt;xref:System.Windows.Application.Resources%2A&gt;.&lt;/xref:System.Windows.Application.Resources%2A&gt;的相同模式&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.FrameworkContentElement&gt; implements the same pattern for its &lt;xref:System.Windows.FrameworkContentElement.Resources%2A&gt;.</source>
          <target state="translated">-&lt;xref:System.Windows.FrameworkContentElement&gt;实现其&lt;xref:System.Windows.FrameworkContentElement.Resources%2A&gt;.&lt;/xref:System.Windows.FrameworkContentElement.Resources%2A&gt;的相同模式&lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.FrameworkTemplate&gt; implements the same pattern for its &lt;xref:System.Windows.FrameworkTemplate.Resources%2A&gt;.</source>
          <target state="translated">-&lt;xref:System.Windows.FrameworkTemplate&gt;实现其&lt;xref:System.Windows.FrameworkTemplate.Resources%2A&gt;.&lt;/xref:System.Windows.FrameworkTemplate.Resources%2A&gt;的相同模式&lt;/xref:System.Windows.FrameworkTemplate&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It also reports &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt; content as ambient but returns <ph id="ph1">`false`</ph> if querying for &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt; itself.</source>
          <target state="translated">它还报告&lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;内容与环境，但是返回<ph id="ph1">`false`</ph>如果查询&lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;本身。&lt;/xref:System.Windows.FrameworkTemplate.Template%2A&gt; &lt;/xref:System.Windows.FrameworkTemplate.Template%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   In each of these cases, the relevant <ph id="ph1">`Resources`</ph> property (and &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;) are attributed as &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.</source>
          <target state="translated">-在这些情况下，相关的每个<ph id="ph1">`Resources`</ph>属性 (和&lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;) 特性化为&lt;xref:System.Windows.Markup.AmbientAttribute&gt;.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt; &lt;/xref:System.Windows.FrameworkTemplate.Template%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The typical usage is to query for the properties that are NOT the &lt;xref:System.Windows.Markup.AmbientAttribute&gt; attributed properties of the object that defines the interface.</source>
          <target state="translated">典型用法就是对查询不是属性&lt;xref:System.Windows.Markup.AmbientAttribute&gt;特性化的定义的接口的对象的属性。&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</source>
          <target state="translated">换而言之，处理程序，但前提是为了创建对象图时提供的潜在的运行的时间值存在的资源字典，除了资源字典属性容器以外的任何其他属性可视为环境。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Queries for whether a specified named property can be considered ambient in the current scope.</source>
          <target state="translated">有关是否指定的命名的属性可视为环境属性在当前范围内的查询。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name of the property to check for ambience state.</source>
          <target state="translated">要检查其环境状态的属性名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested property can be considered ambient; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果请求的属性可被视为环境;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>