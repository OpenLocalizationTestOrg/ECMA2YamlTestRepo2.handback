<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13475c0aad85f66bcdb930cee398db3e341a8c57</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.TypeDescriptor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6400d656ae05705c1a629d07ea96fb626032236f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c59c9cee7078fa469e101827e85f4d93bf6101a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides information about the characteristics for a component, such as its attributes, properties, and events.</source>
          <target state="translated">对于组件，例如其特性、 属性和事件提供有关特征的信息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the &lt;xref:System.Reflection?displayProperty=fullName&gt; namespace, and the TypeDescriptor class.</source>
          <target state="translated">.NET Framework 提供了两种方法可以访问的类型的元数据︰ 反射&lt;xref:System.Reflection?displayProperty=fullName&gt;命名空间和 TypeDescriptor 类&lt;/xref:System.Reflection?displayProperty=fullName&gt;中提供的 API</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Reflection is a general mechanism available to all types because its foundation is established in the &lt;xref:System.Object.GetType%2A&gt; method of the root &lt;xref:System.Object&gt; class.</source>
          <target state="translated">反射是适用于所有类型的通用机制，因为其 foundation 建立在&lt;xref:System.Object.GetType%2A&gt;方法的根&lt;xref:System.Object&gt;类。&lt;/xref:System.Object&gt; &lt;/xref:System.Object.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</source>
          <target state="translated">在于不能修改它的目标类型的编译完成后，是不可扩展的它将返回为某一类型的信息。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅中的主题<bpt id="p1">[</bpt>反射<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In contrast, TypeDescriptor is an extensible inspection mechanism for components: those classes that implement the &lt;xref:System.ComponentModel.IComponent&gt; interface.</source>
          <target state="translated">与此相反，TypeDescriptor 是组件用于可扩展检查机制︰ 那些类，该实现&lt;xref:System.ComponentModel.IComponent&gt;接口。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Unlike reflection, it does not inspect for methods.</source>
          <target state="translated">与不同的是反射，它并不检查方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>TypeDescriptor can be dynamically extended by several services available through the target component's &lt;xref:System.ComponentModel.Component.Site%2A&gt;.</source>
          <target state="translated">通过多个服务可通过目标组件&lt;xref:System.ComponentModel.Component.Site%2A&gt;.&lt;/xref:System.ComponentModel.Component.Site%2A&gt;可以动态扩展 TypeDescriptor</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following table shows these services.</source>
          <target state="translated">下表显示了这些服务。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>|Service name|Description|   |------------------|-----------------|   |&lt;xref:System.ComponentModel.IExtenderProvider&gt;|Enables another class, such as &lt;xref:System.Windows.Forms.ToolTip&gt;, to provide extra properties to a component.|   |&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;|Enables another object to modify the standard metadata that is exposed by a component.|   |&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;|Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of TypeDescriptor.|       The extensibility provided by TypeDescriptor allows the design-time representation of a component to differ from its actual run-time representation, which makes TypeDescriptor useful for building design-time infrastructure.</source>
          <target state="translated">|服务名称 |说明 |  |------------------|-----------------|  |&lt;xref:System.ComponentModel.IExtenderProvider&gt;|另一个类，如&lt;xref:System.Windows.Forms.ToolTip&gt;，可提供给组件的额外属性。 |  |&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;|使另一个对象以修改由组件公开的标准元数据。 |  |&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;|支持的一类用于完全且动态地指定其自己的元数据，替换 TypeDescriptor 的标准检查机制。 |      提供的 TypeDescriptor 扩展性允许不同于其实际运行时表示形式，它使得 TypeDescriptor 对于构建基础结构设计时非常有用的组件的设计时表示。&lt;/xref:System.ComponentModel.ICustomTypeDescriptor&gt; &lt;/xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt; &lt;/xref:System.Windows.Forms.ToolTip&gt; &lt;/xref:System.ComponentModel.IExtenderProvider&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>All the methods in TypeDescriptor are <ph id="ph1">`static`</ph>.</source>
          <target state="translated">TypeDescriptor 中的所有方法都是<ph id="ph1">`static`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You cannot create an instance of this class, and this class cannot be inherited.</source>
          <target state="translated">无法创建此类的实例，不能继承此类。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can set property and event values two different ways: specify them in the component class or change them at design time.</source>
          <target state="translated">你可以设置属性和事件值两种不同方式︰ 在组件类中指定它们，或在设计时更改它们。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Because you can set these values two ways, the overloaded methods of TypeDescriptor take two different types of parameters: a class type or an object instance.</source>
          <target state="translated">你可以设置这些值通过两种方式，因为 TypeDescriptor 的重载的方法均采用两种不同类型的参数︰ 类类型或对象实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you want to access TypeDescriptor information and you have an instance of the object, use the method that calls for a component.</source>
          <target state="translated">你想要访问 TypeDescriptor 信息，则可以使用的对象实例时使用的组件调用的方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use the method that calls for the class type only when you do not have an instance of the object.</source>
          <target state="translated">使用仅在没有对象的实例时，为类类型调用方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by TypeDescriptor for speed.</source>
          <target state="translated">属性和事件进行缓存 TypeDescriptor 的速度。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If this is the case, then the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt; method must be called to update the cache.</source>
          <target state="translated">如果出现这种情况，则&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;必须调用方法以更新缓存。&lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adds class-level attributes to the target component instance.</source>
          <target state="translated">向目标组件实例添加类级别属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The AddAttributes method adds class-level attributes to the specified instance of a component.</source>
          <target state="translated">AddAttributes 方法添加到组件的指定实例的类级别属性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">因为这是使用应用程序的一个常见要求<ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>Windows 窗体设计器和属性窗口中，此方法提供一种快捷方式︰ 创建合并所提供的特性与类已存在的属性的类型说明提供。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">返回值是用于添加特性的类型说明提供。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This provider can later be passed to the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method when the added attributes are no longer needed.</source>
          <target state="translated">此提供程序更高版本可以传递给&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法时不再需要添加的属性。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Attribute&gt; objects to add to the component's class.</source>
          <target state="translated">一个数组&lt;xref:System.Attribute&gt;对象将添加到组件的类。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was used to add the specified attributes.</source>
          <target state="translated">新创建<bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用于添加指定的属性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>One or both of the parameters is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Adds class-level attributes to the target component type.</source>
          <target state="translated">向目标组件类型添加类级别属性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The AddAttributes method adds class-level attributes to the specified type of a component.</source>
          <target state="translated">AddAttributes 方法向指定类型的一个组件添加类级别属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">因为这是使用应用程序的一个常见要求<ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>Windows 窗体设计器和属性窗口中，此方法提供一种快捷方式︰ 创建合并所提供的特性与类已存在的属性的类型说明提供。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">返回值是用于添加特性的类型说明提供。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This provider can later be passed to the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method when the added attributes are no longer needed.</source>
          <target state="translated">此提供程序更高版本可以传递给&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;时不再需要添加的属性的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Attribute&gt; objects to add to the component's class.</source>
          <target state="translated">一个数组&lt;xref:System.Attribute&gt;对象将添加到组件的类。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was used to add the specified attributes.</source>
          <target state="translated">新创建<bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用于添加指定的属性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>One or both of the parameters is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Adds an editor table for the given editor base type.</source>
          <target state="translated">添加编辑器表对于给定的编辑器基类型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The AddEditorTable method adds an editor table for the given editor base type.</source>
          <target state="translated">AddEditorTable 方法添加编辑器表对于给定的编辑器基类型。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Typically, editors are specified as metadata on a component.</source>
          <target state="translated">通常情况下，编辑器指定为在组件上的元数据。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>However, if no metadata for a requested editor base type can be found on the component, the associated &lt;xref:System.ComponentModel.TypeDescriptor&gt; will search an editor table for the editor type, if one can be found.</source>
          <target state="translated">但是，如果没有元数据请求的编辑器基类型可以找到该组件上，关联&lt;xref:System.ComponentModel.TypeDescriptor&gt;如果可以找到一个将搜索编辑器类型，编辑器表。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</source>
          <target state="translated">到类型描述符添加编辑器表后, 它不能删除，并拥有的类型描述符。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The type descriptor may freely make modifications to this table.</source>
          <target state="translated">类型描述符自由地可能会使对此表进行修改。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The format for an editor table uses data types as keys and editors as values.</source>
          <target state="translated">编辑器表的格式使用的数据类型作为键，使用编辑器作为值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value portion of an entry in the table represents an editor instance.</source>
          <target state="translated">表中的条目的值部分表示的编辑器实例。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>It can have one of three values.</source>
          <target state="translated">它可以具有三个值之一。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</source>
          <target state="translated">如果它包含一个字符串，类型描述符将假设这是对象的类型，然后加载该类型的完全限定的名称。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If it contains a type, an instance of this type will be created to obtain an editor.</source>
          <target state="translated">如果其包含类型，则将创建此类型的实例以获取编辑器。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Finally, the value portion may contain an actual editor instance.</source>
          <target state="translated">最后中的值部分可能包含实际的编辑器实例。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</source>
          <target state="translated">如果类型描述符解析为实例的编辑器，它将存储回供将来使用该表的实例。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The editor base type to add the editor table for.</source>
          <target state="translated">要添加编辑器表的编辑器基类型。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If a table already exists for this type, this method will do nothing.</source>
          <target state="translated">如果此类型已存在的表，此方法将不执行任何操作。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">将添加的类型说明提供程序组件的单个实例。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The AddProvider method adds a type description provider that supplies type information for a single instance of a component.</source>
          <target state="translated">AddProvider 方法将添加类型说明提供程序提供类型的组件的单个实例的信息。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If a provider is added by this method, the provider's &lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt; method will not be called because the instance already exists.</source>
          <target state="translated">如果此方法，该提供程序的添加提供程序&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;将不调用方法，因为该实例已经存在。&lt;/xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</source>
          <target state="translated">此方法不维护对该组件的硬引用，因此不会阻止该组件正在最后完成。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">它是可以添加多个类型说明提供程序的相同类型或对象。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">如果发生这种情况，将以独占方式使用的第一个类型说明提供遇到提供类型信息。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Since type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">由于类型信息提供程序存储堆栈中，添加的最后一个提供将第一个查询。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This behavior enables the AddProvider and &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt; methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">此行为能让 AddProvider 和&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;方法用于进行推送和弹出类型说明提供程序所需的特定方案。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If successful, this method calls the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt; method on the <ph id="ph1">`instance`</ph> parameter.</source>
          <target state="translated">如果成功，此方法调用&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;方法<ph id="ph1">`instance`</ph>参数。&lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The two versions of this method produce results with different scopes.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 此方法的两个版本生成和不同作用域的结果。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; method that takes an &lt;xref:System.Object&gt; parameter affects only that single instance of the component specified.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;采用的方法&lt;xref:System.Object&gt;参数只影响该单个实例的指定的组件。&lt;/xref:System.Object&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In contrast, the other overload, which takes a &lt;xref:System.Type&gt; parameter, affects all instances of the component described by that type.</source>
          <target state="translated">与此相反，另一重载，它将采用&lt;xref:System.Type&gt;参数，会影响该类型所描述的组件的所有实例。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法如果你需要从部分受信任代码调用。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">将添加的类型说明提供程序的组件类。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The AddProvider method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</source>
          <target state="translated">AddProvider 方法添加类型说明提供程序指定的类、 派生的类和这些类型的所有实例的该提供类型信息。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`type`</ph> parameter can be any type, including an interface.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`type`</ph>参数可以是任何类型，包括一个接口。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, to provide custom type and instance information for all components, you would specify <ph id="ph1">`typeof(IComponent)`</ph>.</source>
          <target state="translated">例如，若要提供自定义类型和实例的所有组件的信息，应指定<ph id="ph1">`typeof(IComponent)`</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`typeof(object)`</ph> will call the provider to supply type information for all types.</source>
          <target state="translated">传递<ph id="ph1">`typeof(object)`</ph>将调用提供程序提供所有类型的类型信息。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</source>
          <target state="translated">此方法不维护对任何对象的硬引用，因此不会阻止对象正在最后完成。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">它是可以添加多个类型说明提供程序的相同类型或对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">如果发生这种情况，将以独占方式使用的第一个类型说明提供遇到提供类型信息。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">由于类型信息提供程序存储在堆栈中，添加的最后一个提供将第一个查询。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This behavior enables the AddProvider and &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt; methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">此行为能让 AddProvider 和&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;方法用于进行推送和弹出类型说明提供程序所需的特定方案。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If successful, this method calls the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt; method on the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">如果成功，此方法调用&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;方法<ph id="ph1">`type`</ph>参数。&lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The two versions of this method produce results with different scopes.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 此方法的两个版本生成和不同作用域的结果。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; method that takes an &lt;xref:System.Object&gt; parameter affects only that single instance of the component specified.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;采用的方法&lt;xref:System.Object&gt;参数只影响该单个实例的指定的组件。&lt;/xref:System.Object&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In contrast, the other overload, which takes a &lt;xref:System.Type&gt; parameter, affects all instances of the component described by that type.</source>
          <target state="translated">与此相反，另一重载，它将采用&lt;xref:System.Type&gt;参数，会影响该类型所描述的组件的所有实例。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法如果你需要从部分受信任代码调用。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">将添加的类型说明提供程序组件的单个实例。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">从部分受信任的代码可以调用此方法。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">如果&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;是定义，调用方可以注册的提供程序的指定实例如果其类型也为部分受信任。&lt;/xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;如果不需要从部分受信任代码调用的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">将添加的类型说明提供程序的组件类。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">从部分受信任的代码可以调用此方法。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can register a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">如果&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;是定义，调用方可以注册的提供程序的指定类型是否也部分受信任。&lt;/xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;如果不需要从部分受信任代码调用的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets or sets the provider for the Component Object Model (COM) type information for the target component.</source>
          <target state="translated">获取或设置用于目标组件的组件对象模型 (COM) 类型信息的提供程序。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The ComNativeDescriptorHandler property and the &lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt; interface are obsolete.</source>
          <target state="translated">ComNativeDescriptorHandler 属性和&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;接口已过时。&lt;/xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt; property.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;属性。&lt;/xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.IComNativeDescriptorHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance representing the COM type information provider.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IComNativeDescriptorHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示 COM 类型信息提供程序的实例。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets the type of the Component Object Model (COM) object represented by the target component.</source>
          <target state="translated">获取由目标组件表示的组件对象模型 (COM) 对象的类型。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The ComObjectType property returns a type that can be passed to the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method to define a type description provider for COM types.</source>
          <target state="translated">ComObjectType 属性返回类型，可传递给&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法用来定义 COM 类型的类型说明提供。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The ComObjectType property and other members in this class replace the functionality in the obsolete &lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt; interface.</source>
          <target state="translated">ComObjectType 属性和其他此类中的成员替换中的过时的功能&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;接口。&lt;/xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To implement a mapping layer between a COM object and &lt;xref:System.ComponentModel.TypeDescriptor&gt;, add a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; to handle type ComObjectType.</source>
          <target state="translated">若要实现 COM 对象之间的映射层和&lt;xref:System.ComponentModel.TypeDescriptor&gt;，添加&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;到句柄类型 ComObjectType。&lt;/xref:System.ComponentModel.TypeDescriptionProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the COM object represented by this component, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-COM objects.</source>
          <target state="translated">&lt;xref:System.Type&gt;由此组件表示的 COM 对象或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>非 COM 对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Creates a primary-secondary association between two objects.</source>
          <target state="translated">创建两个对象之间的主要和辅助关联。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The CreateAssociation method creates an association between a primary and a secondary object.</source>
          <target state="translated">CreateAssociation 方法创建一个主和辅助对象之间的关联。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</source>
          <target state="translated">一旦创建关联时，设计器或其他筛选机制可以添加到主对象的属性集路由到任一对象的属性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When a property invocation is made against the primary object, the &lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt; method will be called to resolve the actual object instance that is related to its type parameter.</source>
          <target state="translated">当针对主对象，进行属性调用&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;将调用方法，以解决与其类型参数的实际对象实例。&lt;/xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">A&lt;xref:System.WeakReference&gt;用于维护主要和辅助对象之间的关联; 因此，此方法不会阻止任一对象从已完成并通过垃圾回收回收。&lt;/xref:System.WeakReference&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The primary &lt;xref:System.Object&gt;.</source>
          <target state="translated">主&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The secondary &lt;xref:System.Object&gt;.</source>
          <target state="translated">辅助&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;primary&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;code&gt;secondary&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;primary&lt;/code&gt;</ph>等同于<ph id="ph2">&lt;code&gt;secondary&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Creates an instance of the designer associated with the specified component and of the specified type of designer.</source>
          <target state="translated">创建与指定组件关联的设计器和设计器的指定类型的实例。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If this method cannot find a valid &lt;xref:System.ComponentModel.DesignerAttribute&gt;, it searches up the class hierarchy for a designer.</source>
          <target state="translated">如果此方法找不到有效&lt;xref:System.ComponentModel.DesignerAttribute&gt;，它将为使设计器的类层次结构向上搜索。&lt;/xref:System.ComponentModel.DesignerAttribute&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If it cannot find a designer in the class hierarchy, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果它找不到类层次结构中的设计器，它将返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the component to associate with the designer.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它指定要与设计器关联的组件。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of designer to create.</source>
          <target state="translated">A&lt;xref:System.Type&gt;表示设计器创建的类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesigner"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is an instance of the designer for the component, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if no designer can be found.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesigner"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它是该组件的设计器的实例或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果找不到设计器。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">创建等同于现有事件描述符，当传递现有的新事件描述符<bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The type of the component for which to create the new event.</source>
          <target state="translated">要为其创建新的事件的组件的类型。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The existing event information.</source>
          <target state="translated">现有的事件信息。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The new attributes.</source>
          <target state="translated">新的特性。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that has merged the specified metadata attributes with the existing metadata attributes.</source>
          <target state="translated">一个新<bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与现有的元数据属性指定的元数据属性进行合并。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</source>
          <target state="translated">创建动态从上一种类型的指定事件生成描述符信息的是与现有事件描述符相同的新事件描述符。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The type of the component the event lives on.</source>
          <target state="translated">组件事件的类型位于上。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The name of the event.</source>
          <target state="translated">事件的名称。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The type of the delegate that handles the event.</source>
          <target state="translated">处理事件的委托类型。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The attributes for this event.</source>
          <target state="translated">此事件的特性。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is bound to a type.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>绑定到类型。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">创建可替换为另一种数据类型的对象。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The CreateInstance method will search for a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; that is associated with the specified <ph id="ph1">`objectType`</ph> data type.</source>
          <target state="translated">CreateInstance 方法将搜索&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;指定与该键相关联<ph id="ph1">`objectType`</ph>数据类型。&lt;/xref:System.ComponentModel.TypeDescriptionProvider&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This method first tries to obtain a type description provider from the <ph id="ph1">`provider`</ph> parameter.</source>
          <target state="translated">此方法首先尝试获取的类型说明提供程序<ph id="ph1">`provider`</ph>参数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;).</source>
          <target state="translated">如果此操作失败，搜索其自己的内部表的提供程序 (这些项已创建的以前调用通过&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;)。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If it finds a provider, this method will delegate the creation call to that object.</source>
          <target state="translated">如果找到一个提供程序，此方法会将委托给该对象的创建调用。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The service provider that provides a <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> service.</source>
          <target state="translated">服务提供的提供程序<bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>服务。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">此参数可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of object to create.</source>
          <target state="translated">&lt;xref:System.Type&gt;要创建的对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An optional array of parameter types to be passed to the object's constructor.</source>
          <target state="translated">可选参数类型数组传递给对象的构造函数。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an array of zero length.</source>
          <target state="translated">此参数可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或零长度的数组。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">要传递给对象的构造函数的参数值的可选数组。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the number of elements must be the same as <ph id="ph1">`argTypes`</ph>.</source>
          <target state="translated">如果不是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 的数量的元素必须相同<ph id="ph1">`argTypes`</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>An instance of the substitute data type if an associated <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is found; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果一个关联的替代数据类型的实例<bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>找到; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;objectType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <ph id="ph2">&lt;code&gt;args&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> when <ph id="ph3">&lt;code&gt;argTypes&lt;/code&gt;</ph> is not <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;objectType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <ph id="ph2">&lt;code&gt;args&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> when <ph id="ph3">&lt;code&gt;argTypes&lt;/code&gt;</ph> is not <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;argTypes&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;args&lt;/code&gt;</ph> have different number of elements.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;argTypes&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;args&lt;/code&gt;</ph>具有不同数目的元素。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Creates a new property descriptor from an existing property descriptor, using the specified existing <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and attribute array.</source>
          <target state="translated">从现有的属性描述符，使用指定的现有创建新的属性描述符<bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和特性数组。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the component that the property is a member of.</source>
          <target state="translated">&lt;xref:System.Type&gt;的属性是成员的组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The existing property descriptor.</source>
          <target state="translated">现有的属性描述符。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The new attributes for this property.</source>
          <target state="translated">此属性的新特性。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">一个新<bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有与现有的元数据属性合并的指定的元数据属性。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</source>
          <target state="translated">创建并动态地绑定到类型，使用指定的属性名称、 类型和特性数组的属性描述符。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the component that the property is a member of.</source>
          <target state="translated">&lt;xref:System.Type&gt;的属性是成员的组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">属性的名称。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the property.</source>
          <target state="translated">&lt;xref:System.Type&gt;的属性。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The new attributes for this property.</source>
          <target state="translated">此属性的新特性。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>绑定到指定的类型和指定的元数据属性与现有的元数据属性进行合并。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Returns an instance of the type associated with the specified primary object.</source>
          <target state="translated">返回与指定的主要对象关联的类型的实例。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If a previous association has been made for the <ph id="ph1">`type`</ph> parameter using the &lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt; method, then the GetAssociation method returns the correct secondary object to invoke for the requested type.</source>
          <target state="translated">如果已为进行了以前的关联<ph id="ph1">`type`</ph>参数使用&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;方法，则 GetAssociation 方法返回正确的辅助对象，来为请求的类型调用。&lt;/xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Otherwise, GetAssociation searches for a compatible designer for <ph id="ph1">`type`</ph> and returns the designer if one is found.</source>
          <target state="translated">否则，GetAssociation 搜索兼容的设计器中，为<ph id="ph1">`type`</ph>并返回设计器，如果找到一个。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This method never returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">此方法从不返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">A&lt;xref:System.WeakReference&gt;用于维护主要和辅助对象之间的关联; 因此，此方法不会阻止主或辅助对象从已完成并通过垃圾回收回收。&lt;/xref:System.WeakReference&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The primary object of the association.</source>
          <target state="translated">在关联的主对象。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">primary</ph><ept id="p1">&lt;/code&gt;</ept> if no specified association exists.</source>
          <target state="translated">如果存在关联; 已与主要对象关联的辅助类型的实例否则为<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">primary</ph> <ept id="p1">&lt;/code&gt;</ept>如果不指定存在关联。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Returns the collection of attributes for the specified component.</source>
          <target state="translated">返回指定组件的属性集合。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The attributes returned by the &lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt; method may be dynamically modified from the original component's source listing by extender providers (&lt;xref:System.ComponentModel.IExtenderProvider&gt;), filter services (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;), and attribute filters.</source>
          <target state="translated">返回的属性&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;方法可能会从原始组件的源列表，请按扩展程序提供程序进行动态修改 (&lt;xref:System.ComponentModel.IExtenderProvider&gt;)，筛选服务 (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;)，和属性筛选器。&lt;/xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt; &lt;/xref:System.ComponentModel.IExtenderProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>When you define a custom attribute with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id="ph1">`true`</ph>, you must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property to make it unique.</source>
          <target state="translated">当你定义的自定义属性&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;设置为<ph id="ph1">`true`</ph>，必须重写&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性以确保其唯一性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If all instances of your attribute are unique, override &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; to return the object identity of your attribute.</source>
          <target state="translated">如果特性的所有实例都是唯一的重写&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;返回特性的对象标识。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If only some instances of your attribute are unique, return a value from &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; that would return equality in those cases.</source>
          <target state="translated">如果只有特性的一些实例是唯一的返回一个介于&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;，将在这些情况下返回相等性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">例如，有些属性禁用了用作唯一键的构造函数参数。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>For these attributes, return the value of the constructor parameter from the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">对于这些特性，返回从构造函数参数的值&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The default implementation of &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; returns the type identity regardless of the value of the &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 的默认实现&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;返回而不考虑的值的类型标识&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; &lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>In order to return multiple instances of an &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; attribute from the &lt;xref:System.ComponentModel.AttributeCollection&gt;, your attribute must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">若要返回的多个实例&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;属性从&lt;xref:System.ComponentModel.AttributeCollection&gt;，特性必须重写&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.AttributeCollection&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">你要为其获取特性的组件。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the attributes for the component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含组件的属性。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">component</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method returns an empty collection.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">component</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，此方法返回一个空集合。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Returns a collection of attributes for the specified type of component.</source>
          <target state="translated">返回指定组件类型的特性的集合。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For attributes with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id="ph1">`true`</ph>, the attribute collection removes duplicate instances.</source>
          <target state="translated">有关使用属性&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;设置为<ph id="ph1">`true`</ph>，属性集合中删除重复的实例。&lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>These are instances in which the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property returns equal values.</source>
          <target state="translated">这些是在其中实例&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性返回相等的值。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>When you define a custom attribute with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id="ph1">`true`</ph>, you must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property to make it unique.</source>
          <target state="translated">当你定义的自定义属性&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;设置为<ph id="ph1">`true`</ph>，必须重写&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性以确保其唯一性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If all instances of your attribute are unique, override &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; to return the object identity of your attribute.</source>
          <target state="translated">如果特性的所有实例都是唯一的重写&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;返回特性的对象标识。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>If only some instances of your attribute are unique, return a value from &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; that would return equality in those cases.</source>
          <target state="translated">如果只有特性的一些实例是唯一的返回一个介于&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;，将在这些情况下返回相等性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">例如，有些属性禁用了用作唯一键的构造函数参数。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>For these attributes, return the value of the constructor parameter from the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">对于这些特性，返回从构造函数参数的值&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The default implementation of &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; returns the type identity regardless of the value of the &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 的默认实现&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;返回而不考虑的值的类型标识&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; &lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>In order to return multiple instances of an &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; attribute from the &lt;xref:System.ComponentModel.AttributeCollection&gt;, your attribute must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">若要返回的多个实例&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;属性从&lt;xref:System.ComponentModel.AttributeCollection&gt;，特性必须重写&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.AttributeCollection&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the attributes for the type of the component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>个分量的类型的属性。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>If the component is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, this method returns an empty collection.</source>
          <target state="translated">如果组件为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，此方法返回一个空集合。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</source>
          <target state="translated">返回指定的组件和一个布尔值，该值指示已创建的自定义类型描述符的属性的集合。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The attributes returned by the &lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt; method may be dynamically modified from the original components source listing by extender providers (&lt;xref:System.ComponentModel.IExtenderProvider&gt;), filter services (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;), and attribute filters.</source>
          <target state="translated">返回的属性&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;方法可能会从原始的组件源列表，请按扩展程序提供程序进行动态修改 (&lt;xref:System.ComponentModel.IExtenderProvider&gt;)，筛选服务 (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;)，和属性筛选器。&lt;/xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt; &lt;/xref:System.ComponentModel.IExtenderProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>When you define a custom attribute with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id="ph1">`true`</ph>, you must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property to make it unique.</source>
          <target state="translated">当你定义的自定义属性&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;设置为<ph id="ph1">`true`</ph>，必须重写&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性以确保其唯一性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>If all instances of your attribute are unique, override &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; to return the object identity of your attribute.</source>
          <target state="translated">如果特性的所有实例都是唯一的重写&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;返回特性的对象标识。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>If only some instances of your attribute are unique, return a value from &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; that would return equality in those cases.</source>
          <target state="translated">如果只有特性的一些实例是唯一的返回一个介于&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;，将在这些情况下返回相等性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">例如，有些属性禁用了用作唯一键的构造函数参数。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>For these attributes, return the value of the constructor parameter from the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">对于这些特性，返回从构造函数参数的值&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The default implementation of &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; returns the type identity regardless of the value of the &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 的默认实现&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;返回而不考虑的值的类型标识&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; &lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>In order to return multiple instances of an &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; attribute from the &lt;xref:System.ComponentModel.AttributeCollection&gt;, your attribute must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">若要返回的多个实例&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;属性从&lt;xref:System.ComponentModel.AttributeCollection&gt;，特性必须重写&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.AttributeCollection&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">你要为其获取特性的组件。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use a baseline set of attributes from the custom type descriptor if <ph id="ph1">`component`</ph> is of type <bpt id="p2">&lt;xref href="System.ComponentModel.ICustomTypeDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要使用自定义类型说明符中特性的基准要求集，如果<ph id="ph1">`component`</ph>属于类型<bpt id="p2">&lt;xref href="System.ComponentModel.ICustomTypeDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the attributes for the component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与组件的属性。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>If the component is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, this method returns an empty collection.</source>
          <target state="translated">如果组件为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，此方法返回一个空集合。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Returns the name of the class for the specified component using the default type descriptor.</source>
          <target state="translated">返回使用默认类型描述符的指定组件的类的名称。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Typically, this method returns the full &lt;xref:System.Type&gt; name for the <ph id="ph1">`component`</ph> parameter type.</source>
          <target state="translated">通常情况下，此方法返回完整&lt;xref:System.Type&gt;名称<ph id="ph1">`component`</ph>参数类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> implements &lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;, it can return an alternate name.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>实现&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;，它可返回的备用名称。&lt;/xref:System.ComponentModel.ICustomTypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt; method with a second parameter of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">此方法相当于重载&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;方法的第二个参数替换<ph id="ph1">`false`</ph>。&lt;/xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which you want the class name.</source>
          <target state="translated">&lt;xref:System.Object&gt;需要为其类名。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the class for the specified component.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含指定组件的类的名称。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Returns the name of the class for the specified type.</source>
          <target state="translated">返回指定类型的类的名称。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This method uses the cached custom type descriptor for the specified type to discover the associated class name.</source>
          <target state="translated">此方法使用的指定类型的缓存的自定义类型描述符来发现的关联的类名称。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the class for the specified component type.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含指定的组件类型的类的名称。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;componentType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;componentType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Returns the name of the class for the specified component using a custom type descriptor.</source>
          <target state="translated">返回使用自定义类型描述符的指定组件的类的名称。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Typically, this method returns the full &lt;xref:System.Type&gt; name for the <ph id="ph1">`component`</ph> parameter type.</source>
          <target state="translated">通常情况下，此方法返回完整&lt;xref:System.Type&gt;名称<ph id="ph1">`component`</ph>参数类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter implements &lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;, it can return an alternate name.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数实现&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;，它可返回的备用名称。&lt;/xref:System.ComponentModel.ICustomTypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which you want the class name.</source>
          <target state="translated">&lt;xref:System.Object&gt;需要为其类名。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考虑自定义类型说明信息;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the class for the specified component.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含指定组件的类的名称。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns the name of the specified component using the default type descriptor.</source>
          <target state="translated">返回使用默认类型描述符的指定组件的名称。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">通常情况下，如果存在此方法将返回该组件的站点的名称。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt; method with a second parameter of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">此方法相当于重载&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;其中第二个参数的方法<ph id="ph1">`false`</ph>。&lt;/xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">此方法用于在设计时检索的组件的实例的名称。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which you want the class name.</source>
          <target state="translated">&lt;xref:System.Object&gt;需要为其类名。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the specified component, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no component name.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含的指定组件的名称或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果没有任何组件名。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Returns the name of the specified component using a custom type descriptor.</source>
          <target state="translated">返回使用自定义类型描述符的指定组件的名称。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">此方法用于在设计时检索的组件的实例的名称。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">通常情况下，如果存在此方法将返回该组件的站点的名称。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，一个按钮的类名称是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>If the component implements the &lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt; interface, it can return an alternate name.</source>
          <target state="translated">如果该组件实现&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;接口，它可以返回的备用名称。&lt;/xref:System.ComponentModel.ICustomTypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which you want the class name.</source>
          <target state="translated">&lt;xref:System.Object&gt;需要为其类名。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考虑自定义类型说明信息;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The name of the class for the specified component, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no component name.</source>
          <target state="translated">对于指定的组件中，类的名称或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果没有任何组件名。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Returns a type converter for the type of the specified component.</source>
          <target state="translated">返回指定组件类型的类型转换器。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This method locates an appropriate type converter by looking for a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.</source>
          <target state="translated">此方法通过一种&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;。&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;查找来查找相应的类型转换器</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>If it cannot find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">如果找不到&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;，它遍历类的基类层次结构，直到它找到的基元类型。&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt; method with a second parameter of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">此方法相当于重载&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;方法的第二个参数替换<ph id="ph1">`false`</ph>。&lt;/xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A component to get the converter for.</source>
          <target state="translated">要为其获取转换器的组件。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定组件。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Returns a type converter for the specified type.</source>
          <target state="translated">返回指定类型的类型转换器。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This method looks for the appropriate type converter by looking for a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.</source>
          <target state="translated">此方法通过一种&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;。&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;查找来查找适当的类型转换器</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>If it cannot find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">如果找不到&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;，它遍历类的基类层次结构，直到它找到的基元类型。&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified type.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定类型。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Returns a type converter for the type of the specified component with a custom type descriptor.</source>
          <target state="translated">返回具有自定义类型描述符的指定组件类型的类型转换器。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>This method looks for the appropriate type converter by trying to find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.</source>
          <target state="translated">此方法通过尝试查找&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;查找适当的类型转换器</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>If it cannot find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">如果找不到&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;，它遍历类的基类层次结构，直到它找到的基元类型。&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A component to get the converter for.</source>
          <target state="translated">要为其获取转换器的组件。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考虑自定义类型说明信息;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定组件。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Returns the default event for the specified component.</source>
          <target state="translated">返回指定组件的默认事件。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt; method with a second parameter of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">此方法相当于重载&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;方法的第二个参数替换<ph id="ph1">`false`</ph>。&lt;/xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The component to get the event for.</source>
          <target state="translated">要获取其事件的组件。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default event, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no events.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与默认事件，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否存在任何事件。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Returns the default event for the specified type of component.</source>
          <target state="translated">返回指定类型的组件的默认事件。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default event, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no events.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与默认事件，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否存在任何事件。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Returns the default event for a component with a custom type descriptor.</source>
          <target state="translated">返回具有自定义类型描述符的组件的默认事件。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The component to get the event for.</source>
          <target state="translated">要获取其事件的组件。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考虑自定义类型说明信息;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default event, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no events.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与默认事件，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否存在任何事件。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Returns the default property for the specified component.</source>
          <target state="translated">返回指定组件的默认属性。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数是<ph id="ph2">`null`</ph>，此方法返回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The component to get the default property for.</source>
          <target state="translated">要获取其默认属性的组件。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default property, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no properties.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有默认属性，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果没有属性。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Returns the default property for the specified type of component.</source>
          <target state="translated">返回指定类型的组件的默认属性。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，此方法返回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the class to get the property for.</source>
          <target state="translated">&lt;xref:System.Type&gt;它表示要获取属性为的类&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default property, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no properties.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有默认属性，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果没有属性。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Returns the default property for the specified component with a custom type descriptor.</source>
          <target state="translated">返回自定义类型描述符的指定组件的默认属性。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数是<ph id="ph2">`null`</ph>，此方法返回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The component to get the default property for.</source>
          <target state="translated">要获取其默认属性的组件。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考虑自定义类型说明信息;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default property, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no properties.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有默认属性，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果没有属性。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Gets an editor with the specified base type for the specified component.</source>
          <target state="translated">获取具有指定的基类型指定组件的编辑器。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually &lt;xref:System.Drawing.Design.UITypeEditor&gt;, but you can also use other types (for example, &lt;xref:System.ComponentModel.ComponentEditor&gt; and &lt;xref:System.ComponentModel.InstanceCreationEditor&gt;).</source>
          <target state="translated">一种<ph id="ph1">`editorBaseType`</ph>通常是&lt;xref:System.Drawing.Design.UITypeEditor&gt;，但你也可以使用其他类型 (例如，&lt;xref:System.ComponentModel.ComponentEditor&gt;和&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;)。&lt;/xref:System.ComponentModel.InstanceCreationEditor&gt; &lt;/xref:System.ComponentModel.ComponentEditor&gt; &lt;/xref:System.Drawing.Design.UITypeEditor&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">你可以定义多个属性编辑器。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">使用此方法以选择你想要使用的编辑器。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The component to get the editor for.</source>
          <target state="translated">要获取的编辑器的组件。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the base type of the editor you want to find.</source>
          <target state="translated">A&lt;xref:System.Type&gt;表示你想要查找的编辑器基类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>An instance of the editor that can be cast to the specified editor type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no editor of the requested type can be found.</source>
          <target state="translated">可以强制转换为指定的编辑器类型，编辑器的一个实例或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到请求类型的编辑器。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Returns an editor with the specified base type for the specified type.</source>
          <target state="translated">返回与指定类型的指定基类型的编辑器。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually &lt;xref:System.Drawing.Design.UITypeEditor&gt;, but you can also use other types (for example &lt;xref:System.ComponentModel.ComponentEditor&gt; and &lt;xref:System.ComponentModel.InstanceCreationEditor&gt;).</source>
          <target state="translated">一种<ph id="ph1">`editorBaseType`</ph>通常是&lt;xref:System.Drawing.Design.UITypeEditor&gt;，但你也可以使用其他类型 (例如&lt;xref:System.ComponentModel.ComponentEditor&gt;和&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;)。&lt;/xref:System.ComponentModel.InstanceCreationEditor&gt; &lt;/xref:System.ComponentModel.ComponentEditor&gt; &lt;/xref:System.Drawing.Design.UITypeEditor&gt;</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>You can define multiple editors for a type.</source>
          <target state="translated">你可以定义多个类型的编辑器。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>You use this method to select the one you want to use.</source>
          <target state="translated">使用此方法以选择你想要使用的一个。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the base type of the editor you are trying to find.</source>
          <target state="translated">A &lt;xref:System.Type&gt;，它表示要查找的编辑器的基类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>An instance of the editor object that can be cast to the given base type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no editor of the requested type can be found.</source>
          <target state="translated">可以强制转换为给定的基类型，编辑器对象的实例或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到请求类型的编辑器。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Returns an editor with the specified base type and with a custom type descriptor for the specified component.</source>
          <target state="translated">返回与指定的基类型和指定组件的自定义类型描述符的编辑器。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually &lt;xref:System.Drawing.Design.UITypeEditor&gt;, but you can also use other types (for example &lt;xref:System.ComponentModel.ComponentEditor&gt; and &lt;xref:System.ComponentModel.InstanceCreationEditor&gt;).</source>
          <target state="translated">一种<ph id="ph1">`editorBaseType`</ph>通常是&lt;xref:System.Drawing.Design.UITypeEditor&gt;，但你也可以使用其他类型 (例如&lt;xref:System.ComponentModel.ComponentEditor&gt;和&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;)。&lt;/xref:System.ComponentModel.InstanceCreationEditor&gt; &lt;/xref:System.ComponentModel.ComponentEditor&gt; &lt;/xref:System.Drawing.Design.UITypeEditor&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">你可以定义多个属性编辑器。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">使用此方法以选择你想要使用的编辑器。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The component to get the editor for.</source>
          <target state="translated">要获取的编辑器的组件。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the base type of the editor you want to find.</source>
          <target state="translated">A&lt;xref:System.Type&gt;表示你想要查找的编辑器基类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>A flag indicating whether custom type description information should be considered.</source>
          <target state="translated">一个标志，用于指示是否应考虑自定义类型说明信息。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>An instance of the editor that can be cast to the specified editor type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no editor of the requested type can be found.</source>
          <target state="translated">可以强制转换为指定的编辑器类型，编辑器的一个实例或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到请求类型的编辑器。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for the specified component.</source>
          <target state="translated">返回指定组件的事件的集合。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">检索事件的集合，给定<ph id="ph1">`component`</ph>参数实例提供。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>This collection can differ from the set of events the class provides.</source>
          <target state="translated">此集合可以与此类提供的事件集不同。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>占位参数，则该位置可以添加或删除其他事件。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, then an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，则返回空集合。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>A component to get the events for.</source>
          <target state="translated">要获取事件的组件。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有此组件的事件。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified type of component.</source>
          <target state="translated">返回具有指定类型的组件的事件的集合。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有此组件的事件。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">返回指定组件使用指定的属性数组作为筛选器的事件的集合。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">有关事件<ph id="ph1">`component`</ph>参数可以与不同，事件的类，因为该位置可以添加或删除事件，如果<ph id="ph2">`component`</ph>放置参数。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> array can have a mix of &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>数组可以包含多种&lt;xref:System.Type&gt;和&lt;xref:System.Attribute&gt;对象。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; is treated as a wildcard; it matches any event that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">筛选由以下规则定义:-&lt;xref:System.Type&gt;视为通配符; 它与具有任何事件匹配&lt;xref:System.Type&gt;属性其集中。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>-   If an event does not have an &lt;xref:System.Attribute&gt; of the same class, the event is not included in the returned array.</source>
          <target state="translated">-如果事件没有&lt;xref:System.Attribute&gt;的同一个类，事件不包括在返回数组中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果属性是实例&lt;xref:System.Attribute&gt;类，事件必须是完全匹配，或它不包括在返回的数组。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default event, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the event.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定实例和它是默认事件，它包括在返回的数组，即使不没有的任何实例&lt;xref:System.Attribute&gt;的事件中。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>A component to get the events for.</source>
          <target state="translated">要获取事件的组件。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; that you can use as a filter.</source>
          <target state="translated">类型的数组&lt;xref:System.Attribute&gt;可以用作筛选器。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events that match the specified attributes for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有匹配此组件指定的属性的事件。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified component with a custom type descriptor.</source>
          <target state="translated">返回具有自定义类型描述符的指定组件的事件的集合。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>This method retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">此方法检索的事件的集合，给定<ph id="ph1">`component`</ph>参数实例提供。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>This can differ from the set of events the class provides.</source>
          <target state="translated">这可能不同于类提供的事件集。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>占位参数，则该位置可以添加或删除其他事件。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>A component to get the events for.</source>
          <target state="translated">要获取事件的组件。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考虑自定义类型说明信息;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有此组件的事件。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">返回具有指定类型的组件使用指定的属性数组作为筛选器的事件的集合。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组可以包含多种&lt;xref:System.Type&gt;和&lt;xref:System.Attribute&gt;对象。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; is treated as a wildcard; it matches any event that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">筛选由以下规则定义:-&lt;xref:System.Type&gt;视为通配符; 它与具有任何事件匹配&lt;xref:System.Type&gt;属性其集中。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>-   If an event does not have an &lt;xref:System.Attribute&gt; of the same class, the event is not included in the returned array.</source>
          <target state="translated">-如果事件没有&lt;xref:System.Attribute&gt;的同一个类，事件不包括在返回数组中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果属性是实例&lt;xref:System.Attribute&gt;类，事件必须是完全匹配，或它不包括在返回的数组。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default event, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the event.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定实例和它是默认事件，它包括在返回的数组，即使不没有的任何实例&lt;xref:System.Attribute&gt;的事件中。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; that you can use as a filter.</source>
          <target state="translated">类型的数组&lt;xref:System.Attribute&gt;可以用作筛选器。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events that match the specified attributes for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有匹配此组件指定的属性的事件。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">返回使用指定的属性数组作为筛选器并使用自定义类型描述符的指定组件的事件的集合。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">有关事件<ph id="ph1">`component`</ph>参数可以与不同，事件的类，因为该位置可以添加或删除事件，如果<ph id="ph2">`component`</ph>放置参数。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组可以包含多种&lt;xref:System.Type&gt;和&lt;xref:System.Attribute&gt;对象。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; is treated as a wildcard; it matches any event that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">筛选由以下规则定义:-&lt;xref:System.Type&gt;视为通配符; 它与具有任何事件匹配&lt;xref:System.Type&gt;属性其集中。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>-   If an event does not have an &lt;xref:System.Attribute&gt; of the same class, the event is not included in the returned array.</source>
          <target state="translated">-如果事件没有&lt;xref:System.Attribute&gt;的同一个类，事件不包括在返回数组中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果属性是实例&lt;xref:System.Attribute&gt;类，事件必须是完全匹配，或它不包括在返回的数组。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default event, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the event.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定实例和它是默认事件，它包括在返回的数组，即使不没有的任何实例&lt;xref:System.Attribute&gt;的事件中。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>A component to get the events for.</source>
          <target state="translated">要获取事件的组件。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">类型的数组&lt;xref:System.Attribute&gt;要用作筛选器。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考虑自定义类型说明信息;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events that match the specified attributes for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有匹配此组件指定的属性的事件。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Returns the fully qualified name of the component.</source>
          <target state="translated">返回组件的完全限定的名称。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>In many cases, the GetFullComponentName method will return the same value as the &lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt; method.</source>
          <target state="translated">在许多情况下，GetFullComponentName 方法将返回相同的值&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</source>
          <target state="translated">但是，如果该组件位于嵌套容器，或者具有其他嵌套的语义，它可能返回不同的完全限定的名称。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to find the name for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要查找的名称。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the specified component, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the component has no name.</source>
          <target state="translated">指定的组件的完全限定的名称或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果该组件没有名称。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified component.</source>
          <target state="translated">返回指定组件的属性集合。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</source>
          <target state="translated">组件的属性可能与不同的属性类，因为该位置可以添加或删除属性，如果组件所在。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">要获取其属性的组件。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有指定组件的属性。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified type of component.</source>
          <target state="translated">返回具有指定类型的组件的属性的集合。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the component to get properties for.</source>
          <target state="translated">&lt;xref:System.Type&gt;表示要获取属性为的组件&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties for a specified type of component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有指定类型的组件的属性。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">返回指定组件使用指定的属性数组作为筛选器的属性的集合。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">属性<ph id="ph1">`component`</ph>参数可以不同于类的属性，因为该位置可以添加或删除属性，如果<ph id="ph2">`component`</ph>放置参数。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组用于筛选数组。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property is not included in the returned array.</source>
          <target state="translated">筛选由以下规则定义:-如果属性不具有&lt;xref:System.Attribute&gt;的同一个类，该属性不包括在返回数组中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果属性是实例&lt;xref:System.Attribute&gt;类，该属性必须是完全匹配，或它不包括在返回的数组。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default property, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例&lt;xref:System.Attribute&gt;属性中。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>-   If <ph id="ph1">`attributes`</ph> has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">-如果<ph id="ph1">`attributes`</ph>具有默认属性，GetProperties 方法匹配大小写，如果属性不具有应用的属性。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">要获取其属性的组件。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">类型的数组&lt;xref:System.Attribute&gt;要用作筛选器。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与相匹配的指定组件的指定的属性的属性。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified component using the default type descriptor.</source>
          <target state="translated">返回指定组件使用的默认类型描述符的属性的集合。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">属性<ph id="ph1">`component`</ph>参数可以不同于类的属性，因为该位置可以添加或删除属性，如果<ph id="ph2">`component`</ph>放置参数。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">要获取其属性的组件。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to not consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若不考虑自定义类型说明信息;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties for a specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有指定组件的属性。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">返回具有指定类型的组件使用指定的属性数组作为筛选器的属性的集合。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组用于筛选数组。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property is not included in the returned array.</source>
          <target state="translated">筛选由以下规则定义:-如果属性不具有&lt;xref:System.Attribute&gt;的同一个类，该属性不包括在返回数组中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果属性是实例&lt;xref:System.Attribute&gt;类，该属性必须是完全匹配，或它不包括在返回的数组。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default property, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例&lt;xref:System.Attribute&gt;属性中。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>-   If <ph id="ph1">`attributes`</ph> has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">-如果<ph id="ph1">`attributes`</ph>具有默认属性，GetProperties 方法匹配大小写，如果属性不具有应用的属性。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">类型的数组&lt;xref:System.Attribute&gt;要用作筛选器。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties that match the specified attributes for this type of component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与匹配这种类型的组件指定的属性的属性。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">返回使用指定的属性数组作为筛选器并使用自定义类型描述符的指定组件的属性的集合。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The properties for a <ph id="ph1">`component`</ph> can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> is sited.</source>
          <target state="translated">属性<ph id="ph1">`component`</ph>可以不同于类的属性，因为该位置可以添加或删除属性，如果<ph id="ph2">`component`</ph>占位。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>参数数组用于筛选数组。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property is not included in the returned array.</source>
          <target state="translated">筛选由以下规则定义:-如果属性不具有&lt;xref:System.Attribute&gt;的同一个类，该属性不包括在返回数组中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果属性是实例&lt;xref:System.Attribute&gt;类，该属性必须是完全匹配，或它不包括在返回的数组。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default property, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定实例和它是默认属性，它也包括在返回的数组，即使存在的任何实例&lt;xref:System.Attribute&gt;属性中。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>-   If <ph id="ph1">`attributes`</ph> has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">-如果<ph id="ph1">`attributes`</ph>具有默认属性，GetProperties 方法匹配大小写，如果属性不具有应用的属性。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>参数是<ph id="ph2">`null`</ph>，返回一个空集合。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">返回的集合的顺序是不能保证是调用之间完全相同，因此总是在使用之前进行排序。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">要获取其属性的组件。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">类型的数组&lt;xref:System.Attribute&gt;要用作筛选器。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考虑自定义类型说明信息;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events that match the specified attributes for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有指定组件的指定的属性相匹配的事件。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是一个跨进程进行远程处理对象。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Returns the type description provider for the specified component.</source>
          <target state="translated">返回指定组件的类型说明提供。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt; method will always return a type description provider.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;方法将始终返回的类型说明提供。&lt;/xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Even the default &lt;xref:System.ComponentModel.TypeDescriptor&gt; implementation is built on a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;.</source>
          <target state="translated">即使默认&lt;xref:System.ComponentModel.TypeDescriptor&gt;实现基于一种&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;。&lt;/xref:System.ComponentModel.TypeDescriptionProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与指定组件关联。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Returns the type description provider for the specified type.</source>
          <target state="translated">返回指定类型的类型说明提供。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt; method will always return a type description provider.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;方法将始终返回的类型说明提供。&lt;/xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Even the default &lt;xref:System.ComponentModel.TypeDescriptor&gt; implementation is built on a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;.</source>
          <target state="translated">即使默认&lt;xref:System.ComponentModel.TypeDescriptor&gt;实现基于一种&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;。&lt;/xref:System.ComponentModel.TypeDescriptionProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the specified type.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与指定类型关联。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Type&gt; that can be used to perform reflection, given an object.</source>
          <target state="translated">返回&lt;xref:System.Type&gt;可以用于执行反射，给定对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; method is a low-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;方法是低级别版本&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;通常用于执行与对象的标准反射，如果没有自定义类型描述符可以为其所在。&lt;/xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; for the specified object.</source>
          <target state="translated">A&lt;xref:System.Type&gt;指定的对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Type&gt; that can be used to perform reflection, given a class type.</source>
          <target state="translated">返回&lt;xref:System.Type&gt;可以用于执行反射，给定类类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; method is a low-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;方法是低级别版本&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;通常用于执行根据某个类的标准反射，如果没有自定义类型描述符可以找到它。&lt;/xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; of the specified class.</source>
          <target state="translated">&lt;xref:System.Type&gt;的指定的类。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Gets a type that represents a type description provider for all interface types.</source>
          <target state="translated">获取表示所有接口类型的类型说明提供一个类型。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>The InterfaceType property gets a &lt;xref:System.Type&gt; object that you can pass to the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; methods to define a type description provider for interface types.</source>
          <target state="translated">InterfaceType 属性获取&lt;xref:System.Type&gt;可以将传递到的对象&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;方法来定义的类型说明提供程序接口类型。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents a custom type description provider for all interface types.</source>
          <target state="translated">A&lt;xref:System.Type&gt;对所有接口类型表示的自定义类型说明提供程序。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Clears the properties and events for the specified component from the cache.</source>
          <target state="translated">清除的属性和从缓存指定组件的事件。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.</source>
          <target state="translated">通过缓存属性和事件&lt;xref:System.ComponentModel.TypeDescriptor&gt;的速度。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>If they do, they should call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果他们这样做，它们应调用此方法以清除该对象的属性和事件描述符。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>This method is used only at design time.</source>
          <target state="translated">此方法仅在设计时使用。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>It is not used during run time.</source>
          <target state="translated">在运行时不使用它。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event when the properties or events of a component change.</source>
          <target state="translated">此方法也会引发&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;事件的属性或事件的组件更改时。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>This event is only raised if there was a prior call to the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; or &lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; method that cached the information.</source>
          <target state="translated">如果没有调用仅将引发此事件&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;或&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;缓存信息的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>A component for which the properties or events have changed.</source>
          <target state="translated">更改具有属性或事件的组件。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Clears the properties and events for the specified assembly from the cache.</source>
          <target state="translated">指定程序集，从缓存中清除的属性和事件。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.</source>
          <target state="translated">通过缓存属性和事件&lt;xref:System.ComponentModel.TypeDescriptor&gt;的速度。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果他们这样做，它们可以调用此方法以清除该对象的属性和事件描述符。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This method is used only at design time.</source>
          <target state="translated">此方法仅在设计时使用。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>It is not used during run time.</source>
          <target state="translated">在运行时不使用它。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Before you make a call to the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt; method to clear the cache, you need to call the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; method for the specific assembly to cache the information first.</source>
          <target state="translated">在进行调用之前&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;方法来清除缓存中，你需要调用&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;要首先缓存该信息的特定程序集的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">此方法也会引发&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;事件来通知想要将属性设置的组件更改通知的所有类。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Assembly&gt; that represents the assembly to refresh.</source>
          <target state="translated">&lt;xref:System.Reflection.Assembly&gt;，它表示要刷新的程序集。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Each &lt;xref:System.Type&gt; in this assembly will be refreshed.</source>
          <target state="translated">每个&lt;xref:System.Type&gt;此程序集中将刷新。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Clears the properties and events for the specified module from the cache.</source>
          <target state="translated">清除的属性和从缓存指定模块的事件。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.</source>
          <target state="translated">通过缓存属性和事件&lt;xref:System.ComponentModel.TypeDescriptor&gt;的速度。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果他们这样做，它们可以调用此方法以清除该对象的属性和事件描述符。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>This method is used only at design time.</source>
          <target state="translated">此方法仅在设计时使用。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>It is not used during run time.</source>
          <target state="translated">在运行时不使用它。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Before you make a call to the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt; method to clear the cache, you need to call the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; method for the specific module to cache the information first.</source>
          <target state="translated">在进行调用之前&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;方法来清除缓存中，你需要调用&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;为特定的模块，以首先缓存信息的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">此方法也会引发&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;事件来通知想要将属性设置的组件更改通知的所有类。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Module&gt; that represents the module to refresh.</source>
          <target state="translated">&lt;xref:System.Reflection.Module&gt;，表示要刷新的模块。&lt;/xref:System.Reflection.Module&gt;</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Each &lt;xref:System.Type&gt; in this module will be refreshed.</source>
          <target state="translated">每个&lt;xref:System.Type&gt;在此模块将刷新。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Clears the properties and events for the specified type of component from the cache.</source>
          <target state="translated">清除的属性和从缓存的组件的指定类型的事件。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">仅当没有对象的实例时，请调用此方法的此版本。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.</source>
          <target state="translated">通过缓存属性和事件&lt;xref:System.ComponentModel.TypeDescriptor&gt;的速度。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常情况下，它们是常量对象的生存期内。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">但是，扩展程序提供程序和设计器可以更改对象上的属性的集。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果他们这样做，它们可以调用此方法以清除该对象的属性和事件描述符。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>This method is used only at design time.</source>
          <target state="translated">此方法仅在设计时使用。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>It is not used during run time.</source>
          <target state="translated">在运行时不使用它。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event when the properties or events of a component change.</source>
          <target state="translated">此方法也会引发&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;事件的属性或事件的组件更改时。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>This event is only raised if there was a prior call to the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; or &lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; method that cached the information.</source>
          <target state="translated">如果没有调用仅将引发此事件&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;或&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;缓存信息的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Occurs when the cache for a component is cleared.</source>
          <target state="translated">清除组件的缓存时发生。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>NIB︰ 使用事件<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Removes an association between two objects.</source>
          <target state="translated">删除两个对象之间的关联。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The RemoveAssociation method removes an association between two objects formed by the &lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt; method.</source>
          <target state="translated">RemoveAssociation 方法删除由构成的两个对象之间的关联&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</source>
          <target state="translated">A&lt;xref:System.WeakReference&gt;用于维护主要和辅助对象之间的关联; 因此，此方法不会影响时终止或通过垃圾回收回收可能是对象。&lt;/xref:System.WeakReference&gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The primary &lt;xref:System.Object&gt;.</source>
          <target state="translated">主&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The secondary &lt;xref:System.Object&gt;.</source>
          <target state="translated">辅助&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Removes all associations for a primary object.</source>
          <target state="translated">删除主要对象的所有关联。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The RemoveAssociations method removes all associations between a primary object and all of its secondary objects, created by calls to the &lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt; method.</source>
          <target state="translated">RemoveAssociations 方法中删除所有关联的主对象和所有辅助对象，通过调用之间&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</source>
          <target state="translated">A&lt;xref:System.WeakReference&gt;用于维护主要和辅助对象之间的关联; 因此，，此方法不会影响何时完成或通过垃圾回收回收辅助对象主。&lt;/xref:System.WeakReference&gt;</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>The primary &lt;xref:System.Object&gt; in an association.</source>
          <target state="translated">主&lt;xref:System.Object&gt;关联中。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;primary&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;primary&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">删除以前添加的类型说明提供程序与指定的对象相关联。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method.</source>
          <target state="translated">此方法可以删除以前添加的类型说明提供&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated object.</source>
          <target state="translated">删除一个提供程序会导致&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;关联的对象引发的事件。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;如果你需要从部分受信任代码调用的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>删除。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">移除以前添加的类型说明提供程序与指定的类型相关联。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method.</source>
          <target state="translated">此方法可以删除以前添加的类型说明提供&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated type.</source>
          <target state="translated">删除一个提供程序会导致&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;关联的类型中引发的事件。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法如果你需要从部分受信任代码调用。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>删除。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">删除以前添加的类型说明提供程序与指定的对象相关联。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method.</source>
          <target state="translated">此方法可以删除以前添加的类型说明提供&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated object.</source>
          <target state="translated">删除一个提供程序会导致&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;关联的对象引发的事件。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">从部分受信任的代码可以调用此方法。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">如果&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;是定义，调用方可以注册的提供程序的指定实例如果其类型也为部分受信任。&lt;/xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;如果不需要从部分受信任代码调用的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>删除。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目标组件的实例。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">移除以前添加的类型说明提供程序与指定的类型相关联。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method.</source>
          <target state="translated">此方法可以删除以前添加的类型说明提供&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated type.</source>
          <target state="translated">删除一个提供程序会导致&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;关联的类型中引发的事件。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">从部分受信任的代码可以调用此方法。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">如果&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;是定义，调用方可以取消注册的提供程序的指定类型是否也部分受信任。&lt;/xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;如果不需要从部分受信任代码调用的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>删除。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目标组件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个或两个参数<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Sorts descriptors using the name of the descriptor.</source>
          <target state="translated">使用描述符的名称的描述符进行排序。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; that contains the descriptors to sort.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;，其中包含要排序的描述符。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;infos&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;infos&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>