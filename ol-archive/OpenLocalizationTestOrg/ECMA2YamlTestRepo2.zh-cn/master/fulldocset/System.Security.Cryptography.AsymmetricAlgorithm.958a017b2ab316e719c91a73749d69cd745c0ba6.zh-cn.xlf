<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d8b1e8be1c48c449645555c662e7ed1d18b6394</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.AsymmetricAlgorithm.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1787a35c2c415c8f833abed7afe3b102788d500</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f09ba21c69a7f0723d678612bd61d90a0b96b0a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.</source>
          <target state="translated">表示非对称算法的所有实现必须从中都继承的抽象基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Asymmetric cryptographic algorithms, also known as public-key algorithms, require that both sender and receiver maintain a pair of related keys: a private key and a public key.</source>
          <target state="translated">非对称加密算法 （也称为公钥算法） 需要发送者和接收者维护一对相关的密钥︰ 私钥和公钥。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Both keys are unique to the entity.</source>
          <target state="translated">这两个密钥是唯一的实体。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The public key can be made available to anyone; this key is used for encoding data that is sent to a receiver.</source>
          <target state="translated">公钥可以将提供给任何人;此密钥用于编码发送到接收方的数据。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The private key must be kept private by the receiver; this key is used for decoding messages encoded using the receiver's public key.</source>
          <target state="translated">私钥必须保持私有则接收方;此密钥用于编码使用接收方的公钥的解码消息。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt; class is an implementation of a public-key algorithm.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;类是公钥算法实现。&lt;/xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For an in-depth discussion of public-key encryption and algorithms, see the "Public-Key Encryption" section in <bpt id="p1">[</bpt>Cryptographic Services<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关公钥加密算法的深入讨论，请参阅中的"公共密钥加密"一节<bpt id="p1">[</bpt>加密服务<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For information about how to use the Strong Name tool (Sn.exe) to create key pairs, see <bpt id="p1">[</bpt>How to: Create a Public-Private Key Pair<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关如何使用强名称工具 (Sn.exe) 来创建密钥对的信息，请参阅<bpt id="p1">[</bpt>如何︰ 创建公钥 / 私钥对<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use public-key systems to form digital signatures.</source>
          <target state="translated">公钥系统可用于构成数字签名。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Digital signatures are used to help to protect the integrity of data.</source>
          <target state="translated">数字签名用于帮助保护数据的完整性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, to use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</source>
          <target state="translated">例如，若要使用的公钥系统以数字方式签署一条消息，发件人首先将哈希函数应用于该消息以创建消息摘要。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</source>
          <target state="translated">发件人然后使用以创建发件人的个人签名发件人的私钥加密此消息摘要。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</source>
          <target state="translated">在收到消息和签名，接收方使用发件人的公钥来恢复消息摘要解密签名，并使用发件人使用的同一个哈希算法对消息进行哈希处理。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the message digest that the receiver computes matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</source>
          <target state="translated">如果接收方计算消息摘要与从发送方收到的消息摘要相匹配，接收方可以假定该消息在传输过程中未被更改。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Note that anyone can verify a signature, because the sender's public key is common knowledge.</source>
          <target state="translated">请注意，任何人都可以验证签名，这是因为发件人的公钥为常见的知识。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This technique does not retain the secrecy of the message; for the message to be secret, it must also be encrypted.</source>
          <target state="translated">此方法不会保留的秘密性 message;对于机密消息，它必须还进行加密。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides the following classes that implement digital signature algorithms: &lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;, &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;, &lt;xref:System.Security.Cryptography.ECDsa&gt; (base class), and &lt;xref:System.Security.Cryptography.ECDsaCng&gt;.</source>
          <target state="translated">.NET Framework 提供以下实现数字签名算法的类︰ &lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;， &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;， &lt;xref:System.Security.Cryptography.ECDsa&gt;（基类），和&lt;xref:System.Security.Cryptography.ECDsaCng&gt;。&lt;/xref:System.Security.Cryptography.ECDsaCng&gt; &lt;/xref:System.Security.Cryptography.ECDsa&gt; &lt;/xref:System.Security.Cryptography.RSACryptoServiceProvider&gt; &lt;/xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Cryptography&gt; namespace provides concrete classes for &lt;xref:System.Security.Cryptography.RSA&gt; and &lt;xref:System.Security.Cryptography.DSA&gt; only.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography&gt;命名空间提供的具体类&lt;xref:System.Security.Cryptography.RSA&gt;和&lt;xref:System.Security.Cryptography.DSA&gt;仅。&lt;/xref:System.Security.Cryptography.DSA&gt; &lt;/xref:System.Security.Cryptography.RSA&gt; &lt;/xref:System.Security.Cryptography&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To learn how to use the RSA algorithm to encrypt and decrypt XML data, and create and verify XML digital signatures, see these articles:      -   <bpt id="p1">[</bpt>How to: Encrypt XML Elements with Asymmetric Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">      -   </ph><bpt id="p2">[</bpt>How to: Decrypt XML Elements with Asymmetric Keys<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph2">      -   </ph><bpt id="p3">[</bpt>How to: Sign XML Documents with Digital Signatures<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph3">      -   </ph><bpt id="p4">[</bpt>How to: Verify the Digital Signatures of XML Documents<ept id="p4">](~/add/includes/ajax-current-ext-md.md)</ept></source>
          <target state="translated">若要了解如何使用 RSA 算法来加密和解密 XML 数据，以及创建和验证 XML 数字签名，请参阅以下文章:-<bpt id="p1">[</bpt>如何︰ 用非对称密钥加密 XML 元素<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">      -   </ph><bpt id="p2">[</bpt>如何︰ 用非对称密钥解密 XML 元素<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph2">      -   </ph><bpt id="p3">[</bpt>如何︰ 使用数字签名为 XML 文档<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph3">      -   </ph><bpt id="p4">[</bpt>如何︰ 验证 XML 文档数字签名<ept id="p4">](~/add/includes/ajax-current-ext-md.md)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">无法创建抽象类的实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Application code creates a new instance of a derived class.</source>
          <target state="translated">应用程序代码创建派生类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt; and &lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt; classes are the only currently supported implementations.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;和&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;类是仅当前受支持的实现。&lt;/xref:System.Security.Cryptography.DSACryptoServiceProvider&gt; &lt;/xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The implementation of the derived class is not valid.</source>
          <target state="translated">派生类的实现不是有效的。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method is a simple call to the &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">此方法是对的简单调用&lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; class to be reallocated for other purposes.</source>
          <target state="translated">调用<ph id="ph1">`Dispose`</ph>允许使用的资源&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;类可以重新分配用于其他目的。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">`Dispose`</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creates a default cryptographic object used to perform the asymmetric algorithm.</source>
          <target state="translated">创建用于执行非对称算法的默认加密对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSACryptoServiceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, unless the default settings have been changed with the <bpt id="p2">[</bpt><ph id="ph1">&amp;lt;</ph>cryptoClass<ph id="ph2">&amp;gt;</ph> element<ept id="p2">](../Topic/%3CcryptoClass%3E%20Element.md)</ept>.</source>
          <target state="translated">一个新<bpt id="p1">&lt;xref href="System.Security.Cryptography.RSACryptoServiceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例，除非已使用更改默认设置<bpt id="p2">[</bpt> <ph id="ph1">&amp;lt;</ph>cryptoClass<ph id="ph2">&amp;gt;</ph>元素<ept id="p2">](../Topic/%3CcryptoClass%3E%20Element.md)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified implementation of an asymmetric algorithm.</source>
          <target state="translated">创建非对称算法的指定实现的实例。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The asymmetric algorithm implementation to use.</source>
          <target state="translated">要使用的非对称算法实现。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following table shows the valid values for the <ph id="ph1">`algName`</ph> parameter and the algorithms they map to.</source>
          <target state="translated">下表显示的有效值<ph id="ph1">`algName`</ph>参数以及它们映射到的算法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Parameter value</source>
          <target state="translated">参数值</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Implements</source>
          <target state="translated">实现</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.AsymmetricAlgorithm</source>
          <target state="translated">System.Security.Cryptography.AsymmetricAlgorithm</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>RSA</source>
          <target state="translated">RSA</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.RSA</source>
          <target state="translated">System.Security.Cryptography.RSA</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>DSA</source>
          <target state="translated">DSA</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.DSA</source>
          <target state="translated">System.Security.Cryptography.DSA</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>ECDsa</source>
          <target state="translated">ECDsa</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>ECDsaCng</source>
          <target state="translated">ECDsaCng</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.ECDsaCng</source>
          <target state="translated">System.Security.Cryptography.ECDsaCng</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>ECDH</source>
          <target state="translated">ECDH</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>ECDiffieHellman</source>
          <target state="translated">ECDiffieHellman</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ECDiffieHellmanCng</source>
          <target state="translated">ECDiffieHellmanCng</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.ECDiffieHellmanCng</source>
          <target state="translated">System.Security.Cryptography.ECDiffieHellmanCng</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A new instance of the specified asymmetric algorithm implementation.</source>
          <target state="translated">指定的非对称算法实现的新实例。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">释放当前实例所使用的所有资源<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;.</source>
          <target state="translated">调用<ph id="ph1">`Dispose`</ph>在完成使用&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;.&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;时</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>方法使&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;中不可用状态。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; was occupying.</source>
          <target state="translated">在调用<ph id="ph1">`Dispose`</ph>，必须释放对所有引用&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;占用。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; &lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用<ph id="ph2">`Dispose`</ph>在发布到&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;最后一个引用之前</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">`Finalize`</ph>方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;引用。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, reconstructs an <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object from an XML string.</source>
          <target state="translated">当在派生类中重写，重新构造<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过 XML 字符串的对象。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Otherwise, throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">否则，将引发一种&lt;xref:System.NotImplementedException&gt;。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The XML string to use to reconstruct the <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">用于重新构造的 XML 字符串<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the name of the key exchange algorithm.</source>
          <target state="translated">当在派生类中重写，获取密钥交换算法的名称。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Otherwise, throws an &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">否则，将引发&lt;xref:System.NotImplementedException&gt;.&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The name of the key exchange algorithm.</source>
          <target state="translated">密钥交换算法的名称。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</source>
          <target state="translated">获取或设置大小，以位为单位的非对称算法所用密钥模块。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A&gt; property.</source>
          <target state="translated">有效密钥大小指定的非对称算法的特定实现中, 列出&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A&gt;属性。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The size, in bits, of the key modulus used by the asymmetric algorithm.</source>
          <target state="translated">大小 （以位为单位的非对称算法所用密钥模块）。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The key modulus size is invalid.</source>
          <target state="translated">密钥模块大小无效。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Represents the size, in bits, of the key modulus used by the asymmetric algorithm.</source>
          <target state="translated">表示的大小，以位为单位的非对称算法所用密钥模块。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A&gt; property.</source>
          <target state="translated">有效密钥大小指定的非对称算法的特定实现中, 列出&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A&gt;属性。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A&gt; property.</source>
          <target state="translated">通过访问此字段&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A&gt;属性。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets the key sizes that are supported by the asymmetric algorithm.</source>
          <target state="translated">获取非对称算法支持的密钥大小。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The asymmetric algorithm supports only key sizes that match an entry in this array.</source>
          <target state="translated">非对称算法支持仅与此数组中的条目匹配的密钥大小。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An array that contains the key sizes supported by the asymmetric algorithm.</source>
          <target state="translated">包含非对称算法支持的密钥大小的数组。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the key sizes that are supported by the asymmetric algorithm.</source>
          <target state="translated">指定非对称算法支持的密钥大小。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The asymmetric algorithm supports only key sizes that match an entry in this array.</source>
          <target state="translated">非对称算法支持仅与此数组中的条目匹配的密钥大小。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A&gt; property.</source>
          <target state="translated">通过访问此字段&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A&gt;属性。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the name of the signature algorithm.</source>
          <target state="translated">派生类中实现时，获取签名算法的名称。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Otherwise, always throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">否则，始终将引发一种&lt;xref:System.NotImplementedException&gt;。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The name of the signature algorithm.</source>
          <target state="translated">签名算法的名称。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates and returns an XML string representation of the current <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">当在派生类中重写，创建并返回的 XML 字符串表示形式当前<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Otherwise, throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">否则，将引发一种&lt;xref:System.NotImplementedException&gt;。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include private parameters; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要包含专用参数;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>An XML string encoding of the current <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">当前的 XML 字符串编码<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>