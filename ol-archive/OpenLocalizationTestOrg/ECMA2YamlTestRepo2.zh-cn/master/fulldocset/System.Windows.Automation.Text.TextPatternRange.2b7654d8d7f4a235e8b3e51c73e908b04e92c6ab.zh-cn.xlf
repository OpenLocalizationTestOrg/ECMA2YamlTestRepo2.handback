<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ce462ec6d08f53e85ba17f2d1c8385fd5c72f20</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Automation.Text.TextPatternRange.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0bd23aabe52ebb0c7c62a0529a0da824f1d0d05</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d4e5212b60b890f55de14778ddcb2b8d31f2f0a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a span of continuous text in a <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> container.</source>
          <target state="translated">表示中的一块连续文本<bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>容器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A TextPatternRange can represent an insertion point, a subset, or all of the text in a &lt;xref:System.Windows.Automation.TextPattern&gt; container.</source>
          <target state="translated">TextPatternRange 可以表示的插入点、 一个子集，或所有中的文本&lt;xref:System.Windows.Automation.TextPattern&gt;容器。&lt;/xref:System.Windows.Automation.TextPattern&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A TextPatternRange will become invalid if one of the following occurs: the text in the &lt;xref:System.Windows.Automation.TextPattern&gt; container changes because of some user activity, or the &lt;xref:System.Windows.Automation.ValuePattern.SetValue%2A&gt; method of &lt;xref:System.Windows.Automation.ValuePattern&gt; is used to programmatically change the value of the text in the &lt;xref:System.Windows.Automation.TextPattern&gt; container.</source>
          <target state="translated">TextPatternRange 将变为无效，如果发生以下之一︰ 中的文本&lt;xref:System.Windows.Automation.TextPattern&gt;由于某些用户活动的容器更改或&lt;xref:System.Windows.Automation.ValuePattern.SetValue%2A&gt;方法&lt;xref:System.Windows.Automation.ValuePattern&gt;用于以编程方式更改中的文本值&lt;xref:System.Windows.Automation.TextPattern&gt;容器。&lt;/xref:System.Windows.Automation.TextPattern&gt; &lt;/xref:System.Windows.Automation.ValuePattern&gt; &lt;/xref:System.Windows.Automation.ValuePattern.SetValue%2A&gt; &lt;/xref:System.Windows.Automation.TextPattern&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">将添加到的支持多个的文本容器中的突出显示文本集合中，不连续选择。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The text insertion point moves to the area of the new selection.</source>
          <target state="translated">文本插入点移到新选择的区域。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Providing a degenerate text range moves the insertion point.</source>
          <target state="translated">提供退化文本范围移动插入点。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If text provider does not support multiple, disjoint selections (for example, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt; must have a value of <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">如果文本提供程序不支持多个不连续选择 (例如，&lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;的值必须<bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>)。&lt;/xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Retrieves a new <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identical to the original <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and inheriting all properties of the original.</source>
          <target state="translated">检索新<bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>等于原始<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>并且继承了其原始的所有属性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Alternatively, create a new &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; from the &lt;xref:System.Windows.Automation.TextPattern&gt; and move the two endpoints to correspond with the endpoints of the original text range.</source>
          <target state="translated">或者，创建一个新&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;从&lt;xref:System.Windows.Automation.TextPattern&gt;并移动两个终结点以与原始的文本范围的终结点对应。&lt;/xref:System.Windows.Automation.TextPattern&gt; &lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The new range can be manipulated independently from the original.</source>
          <target state="translated">新的范围可以从原始独立操作。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The new text range.</source>
          <target state="translated">新的文本范围。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) is never returned.</source>
          <target state="translated">空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) 永远不会返回。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Boolean&gt; value indicating whether the span (the <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> endpoint to the <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint) of a text range is the same as another text range.</source>
          <target state="translated">返回&lt;xref:System.Boolean&gt;值，该值指示是否跨度 ( <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>终结点<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>终结点) 的文本范围是另一个文本范围相同。&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A text range to compare.</source>
          <target state="translated">要比较的文本范围。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the span of both text ranges is identical; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果两个文本范围的跨度相同;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the range being compared does not come from the same text provider.</source>
          <target state="translated">如果要比较的范围不是来自同一文本提供程序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Int32&gt; indicating whether two text ranges have identical endpoints.</source>
          <target state="translated">返回&lt;xref:System.Int32&gt;，该值指示两个文本范围是否具有相同的终结点。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By comparing the starting and ending endpoints of the same text range you can identify if a text range is degenerate or if the endpoints are in the order of logical text flow.</source>
          <target state="translated">通过比较相同的文本范围的起始和结束终结点可以识别退化文本范围是否或终结点的顺序是否与逻辑文本流。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint of the caller.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>调用方的终结点。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The target range for comparison.</source>
          <target state="translated">比较在目标范围。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint of the target.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>的目标终结点。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</source>
          <target state="translated">如果调用方的端点出现前面的文本中比目标端点，则，返回一个负值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns zero if the caller's endpoint is at the same location as the target endpoint.</source>
          <target state="translated">如果调用方的终结点位于与目标终结点相同的位置，则返回零。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</source>
          <target state="translated">如果调用方的端点在文本中比目标端点后出现，则，返回一个正值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If range is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">如果范围为空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If range is from another container.</source>
          <target state="translated">如果范围是从另一个容器。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Expands the text range to the specified <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将文本范围扩展到指定<bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the range is already an exact quantity of the specified units then it remains unchanged.</source>
          <target state="translated">如果已指定的单位的确切数量范围。 它保持不变。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In order for the ExpandToEnclosingUnit method to execute successfully, a sequence of actions is performed behind the scenes.</source>
          <target state="translated">为了使 expandtoenclosingunit 进行方法才能成功执行，在后台执行一系列操作。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, making the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">文本范围进行了规范化;也就是说，将文本范围折叠为退化范围，在&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;终结点，使&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;终结点成为多余。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">此步骤是必需的文本范围跨越其中的情况下消除歧义<ph id="ph1">`unit`</ph>边界; 例如，"{The U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept>文本中嵌入"位置"{"和"}"是文本范围端点。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">生成的范围中向后移动&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;到所请求的开头<ph id="ph1">`unit`</ph>边界。&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The range is moved forward or backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; by the requested number of <ph id="ph1">`unit`</ph> boundaries.</source>
          <target state="translated">该区域中向前或向后移动&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;的请求数<ph id="ph1">`unit`</ph>边界。&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">然后扩展范围从退化范围状态通过移动&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;一个所请求的终结点<ph id="ph1">`unit`</ph>边界。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</source>
          <target state="translated"><bpt id="p1">![</bpt>通过移动 &amp; expandtoenclosingunit 进行的范围调整<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>通过移动 &amp; expandtoenclosingunit 进行的范围调整<ept id="p2">")</ept>如何 （） 和 expandtoenclosingunit （） 调整文本范围的示例&amp;1;&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 这些步骤是必需的因为它是常见的屏幕读取器读取出完整单词、 句子或在插入点或任何虚拟光标位置处的整个段落。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>ExpandToEnclosingUnit respects both hidden and visible text.</source>
          <target state="translated">Expandtoenclosingunit 进行尊重隐藏和显示文本。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">UI 自动化客户端可以检查&lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;文本可见性。&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>ExpandToEnclosingUnit defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">下一步将 expandtoenclosingunit 进行遵从最大&lt;xref:System.Windows.Automation.Text.TextUnit&gt;支持的如果给定&lt;xref:System.Windows.Automation.Text.TextUnit&gt;控件不支持。&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">下面列出的顺序，从最小单位到最大值。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;</source>
          <target state="translated">-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The textual unit.</source>
          <target state="translated">文本单位。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns a text range subset that has the specified attribute value.</source>
          <target state="translated">返回具有指定的特性值的文本范围子集。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">隐藏和显示文本之间没有差异。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>UI Automation clients can use &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; to check text visibility.</source>
          <target state="translated">UI 自动化客户端可以使用&lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;检查文本可见性。&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to search the entire document.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;要搜索整个文档。&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The attribute to search for.</source>
          <target state="translated">要搜索的属性。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The attribute value to search for.</source>
          <target state="translated">要搜索的属性值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This value must match the type specified for the attribute.</source>
          <target state="translated">此值必须匹配的属性指定的类型。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the last occurring text range should be returned instead of the first; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果最后一个匹配的文本范围应返回而不是第一个;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A text range having a matching attribute and attribute value; otherwise null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">具有匹配特性和属性值，则为文本范围否则为 null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns a text range subset that contains the specified text.</source>
          <target state="translated">返回包含指定的文本的文本范围子集。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">隐藏和显示文本之间没有差异。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>UI Automation clients can use &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; to check text visibility.</source>
          <target state="translated">UI 自动化客户端可以使用&lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;检查文本可见性。&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to search the entire document.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;要搜索整个文档。&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The text string to search for.</source>
          <target state="translated">要搜索的文本字符串。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the last occurring text range should be returned instead of the first; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果最后一个匹配的文本范围应返回而不是第一个;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if case should be ignored; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应该忽略大小写;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A text range matching the specified text; otherwise null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">指定的文本; 匹配的文本范围否则为 null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified attribute across the entire text range.</source>
          <target state="translated">返回整个文本范围内的指定属性的值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">隐藏和显示文本之间没有差异。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>UI Automation clients can use &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; to check text visibility.</source>
          <target state="translated">UI 自动化客户端可以使用&lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;检查文本可见性。&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The text attribute.</source>
          <target state="translated">文本特性。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified attribute.</source>
          <target state="translated">返回指定的属性的值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, GetAttributeValue(TextPattern.FontNameAttribute) would return a string that represents the font name, if unique, of the text range while GetAttributeValue(TextPattern.IsItalicAttribute) would return a boolean.</source>
          <target state="translated">例如，getattributevalue （textpattern.fontnameattribute） 将返回一个字符串，表示字体名称，如果唯一的而 getattributevalue （textpattern.isitalicattribute） 的文本范围将返回一个布尔值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern.MixedAttributeValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of the specified attribute varies over the text range.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern.MixedAttributeValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果在文本范围内的指定属性的值会发生变化。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement.NotSupported"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified attribute is not supported by the provider or the control.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement.NotSupported"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果提供程序或控件不支持指定的属性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the specified attribute is not valid.</source>
          <target state="translated">如果指定的属性不是有效的。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</source>
          <target state="translated">检索文本范围中的文本的每个完全或部分可见的行个边框组成的集合。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An array of bounding rectangles for each full or partial line of text in a text range.</source>
          <target state="translated">边框的文本范围中的文本每整个或部分行组成的数组。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An empty array for a degenerate text range.</source>
          <target state="translated">对于退化文本范围为空数组。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</source>
          <target state="translated">文本范围具有其屏幕坐标完全位于屏幕之外，为一个空数组滚动到视图中，或者被某个重叠窗口遮盖住。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of all embedded objects that fall within the text range.</source>
          <target state="translated">检索文本范围内的所有嵌入对象的集合。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A collection of all child objects that fall within the range.</source>
          <target state="translated">在范围内的所有子对象的集合。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Children that overlap with the range but are not entirely enclosed by it will also be included in the collection.</source>
          <target state="translated">与范围发生重叠但是并未完全包括由它的子对象也会包括在集合中。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns an empty collection if there are no child objects.</source>
          <target state="translated">如果不有任何子对象，则返回一个空集合。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns the innermost <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that encloses the text range.</source>
          <target state="translated">返回最内层<bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含该文本范围。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The enclosing &lt;xref:System.Windows.Automation.AutomationElement&gt;, typically the text provider that supplies the text range.</source>
          <target state="translated">封闭&lt;xref:System.Windows.Automation.AutomationElement&gt;，通常提供该文本范围的文本提供程序。&lt;/xref:System.Windows.Automation.AutomationElement&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</source>
          <target state="translated">但是，如果文本提供程序支持表格或超链接这样的子元素，那么包含元素可能为文本提供程序的子代。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The innermost element enclosing the caller.</source>
          <target state="translated">包含调用方的最内层元素。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns the plain text of the text range.</source>
          <target state="translated">返回文本范围的纯文本。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>GetText respects both hidden and visible text.</source>
          <target state="translated">GetText 尊重隐藏和显示文本。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">UI 自动化客户端可以检查&lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;文本可见性。&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`maxLength`</ph> is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</source>
          <target state="translated">如果<ph id="ph1">`maxLength`</ph>大于长度的调用方的文本范围内，返回的字符串将文本范围的纯文本。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>GetText will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</source>
          <target state="translated">GetText 将不受影响的文本流; 中的终结点的顺序它将始终返回逻辑文本流顺序中的文本范围的开始和结束终结点之间的文本。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The maximum length of the string to return.</source>
          <target state="translated">要返回的字符串的最大长度。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`-1`</ph> if no limit is required.</source>
          <target state="translated">使用<ph id="ph1">`-1`</ph>如果没有限制，则。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The plain text of the text range, possibly truncated at the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxLength</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">文本范围，可能截断在指定的纯文本<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxLength</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxLength</ph><ept id="p1">&lt;/code&gt;</ept> is less than -1.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxLength</ph> <ept id="p1">&lt;/code&gt;</ept>小于-1。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Moves the text range the specified number of text units.</source>
          <target state="translated">将移动文本范围指定数量的文本单位。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the Move method to execute successfully.</source>
          <target state="translated">需要遍历文本范围的内容时，为了让移动方法才能成功执行在幕后涉及一系列步骤。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, which makes the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">文本范围进行了规范化;也就是说，将文本范围折叠为退化范围，在&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;终结点，这使得&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;终结点成为多余。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">此步骤是必需的文本范围跨越其中的情况下消除歧义<ph id="ph1">`unit`</ph>边界; 例如，"{The U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept>文本中嵌入"位置"{"和"}"是文本范围端点。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">生成的范围中向后移动&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;到所请求的开头<ph id="ph1">`unit`</ph>边界。&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The range is moved forward or backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; by the requested number of <ph id="ph1">`unit`</ph> boundaries.</source>
          <target state="translated">该区域中向前或向后移动&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;的请求数<ph id="ph1">`unit`</ph>边界。&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">然后扩展范围从退化范围状态通过移动&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;一个所请求的终结点<ph id="ph1">`unit`</ph>边界。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()       The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
          <target state="translated"><bpt id="p1">![</bpt>通过移动 &amp; expandtoenclosingunit 进行的范围调整<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>通过移动 &amp; expandtoenclosingunit 进行的范围调整<ept id="p2">")</ept>Move() 和 expandtoenclosingunit （） 的文本内容 （或内部文本） 的文本容器和嵌入的对象，如超链接或表格单元格，如何调整文本范围的示例作为单个连续文本流中的控件视图和内容视图公开<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>树; 对象边界被忽略。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects.</source>
          <target state="translated">如果 UI 自动化客户端检索文本的目的叙述、 解释或分析以某种方式，应检查文本范围中的特殊情况下，例如含有文本内容或其他嵌入对象的表格。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This can be accomplished by calling &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt; to obtain an &lt;xref:System.Windows.Automation.AutomationElement&gt; for each embedded object and then calling &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; to obtain a text range for each element; this is done recursively until all textual content has been retrieved.</source>
          <target state="translated">这可以通过调用来实现&lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;获取&lt;xref:System.Windows.Automation.AutomationElement&gt;每个嵌入对象，然后再调用&lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;以获取每个元素; 的文本范围直到检索到所有文本内容这是以递归方式。&lt;/xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; &lt;/xref:System.Windows.Automation.AutomationElement&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Text ranges spanned by embedded objects.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>跨的嵌入对象的文本范围。<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>跨嵌入对象的文本范围。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Example of a text stream with embedded objects and their range spans       Move respects both hidden and visible text.</source>
          <target state="translated">含有嵌入的对象以及它们的范围的文本流的示例跨移动方面这两个隐藏和可见文本。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">UI 自动化客户端可以检查&lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;文本可见性。&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Move defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">移动交下一个最大&lt;xref:System.Windows.Automation.Text.TextUnit&gt;支持的如果给定&lt;xref:System.Windows.Automation.Text.TextUnit&gt;控件不支持。&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">下面列出的顺序，从最小单位到最大值。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  The text is not altered in any way as the text range just spans a different part of the text.</source>
          <target state="translated">- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 文本不更改以任何方式，因为文本范围只跨越不同部分的文本。&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The text unit boundary.</source>
          <target state="translated">文本单位的边界。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The number of text units to move.</source>
          <target state="translated">要移动的文本单位数。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</source>
          <target state="translated">正值表示向前移动文本范围、 负值则表示移动文本范围倒退了，和 0 不起作用。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The number of units actually moved.</source>
          <target state="translated">实际移动的单位数。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This can be less than the number requested if either of the new text range endpoints is greater than or less than the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange*&gt; endpoints.</source>
          <target state="translated">它可能小于请求移动数如果新的文本范围端点大于或小于比&lt;xref:System.Windows.Automation.TextPattern.DocumentRange*&gt;终结点。&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange*&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Moves one endpoint of a text range to the specified endpoint of a second text range.</source>
          <target state="translated">将文本范围的一个端点移动到第二个文本范围的指定端点。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; is always less than or equal to &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;).</source>
          <target state="translated">如果要移动的终结点是跨相同的文本范围的其他终结点，则该其他终结点也会随，从而导致退化范围，并确保正确的顺序的终结点 (即，&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;是否始终小于或等于&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;)。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The endpoint to move.</source>
          <target state="translated">要移动的端点。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Another range from the same text provider.</source>
          <target state="translated">从同一文本提供程序的另一个范围。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An endpoint on the other range.</source>
          <target state="translated">另一个范围终结点。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Moves one endpoint of the text range the specified number of <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>s within the document range.</source>
          <target state="translated">一个终结点的文本范围的移动指定的数量的<bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>文档范围。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the &lt;xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt; method to execute successfully.</source>
          <target state="translated">需要遍历文本范围的内容时，以便在后台涉及一系列步骤&lt;xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt;方法才能成功执行。&lt;/xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, which makes the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">文本范围进行了规范化;也就是说，将文本范围折叠为退化范围，在&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;终结点，这使得&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;终结点成为多余。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">此步骤是必需的文本范围跨越其中的情况下消除歧义<ph id="ph1">`unit`</ph>边界; 例如，"{The U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept>文本中嵌入"位置"{"和"}"是文本范围端点。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">生成的范围中向后移动&lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;到所请求的开头<ph id="ph1">`unit`</ph>边界。&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">然后扩展范围从退化范围状态通过移动&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;一个所请求的终结点<ph id="ph1">`unit`</ph>边界。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()       The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
          <target state="translated"><bpt id="p1">![</bpt>通过移动 &amp; expandtoenclosingunit 进行的范围调整<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>通过移动 &amp; expandtoenclosingunit 进行的范围调整<ept id="p2">")</ept>Move() 和 expandtoenclosingunit （） 的文本内容 （或内部文本） 的文本容器和嵌入的对象，如超链接或表格单元格，如何调整文本范围的示例作为单个连续文本流中的控件视图和内容视图公开<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>树; 对象边界被忽略。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects.</source>
          <target state="translated">如果 UI 自动化客户端检索文本的目的叙述、 解释或分析以某种方式，应检查文本范围中的特殊情况下，例如含有文本内容或其他嵌入对象的表格。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This can be accomplished by calling &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt; to obtain an &lt;xref:System.Windows.Automation.AutomationElement&gt; for each embedded object and then calling &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; to obtain a text range for each element; this is done recursively until all textual content has been retrieved.</source>
          <target state="translated">这可以通过调用来实现&lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;获取&lt;xref:System.Windows.Automation.AutomationElement&gt;每个嵌入对象，然后再调用&lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;以获取每个元素; 的文本范围直到检索到所有文本内容这是以递归方式。&lt;/xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; &lt;/xref:System.Windows.Automation.AutomationElement&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Text ranges spanned by embedded objects.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>跨的嵌入对象的文本范围。<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>跨嵌入对象的文本范围。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Example of a text stream with embedded objects and their range spans       MoveEndpointByUnit defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">含有嵌入的对象和 MoveEndpointByUnit 交下一步及其范围跨度的文本流示例最大&lt;xref:System.Windows.Automation.Text.TextUnit&gt;支持的如果给定&lt;xref:System.Windows.Automation.Text.TextUnit&gt;控件不支持。&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">下面列出的顺序，从最小单位到最大值。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;</source>
          <target state="translated">-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The endpoint to move.</source>
          <target state="translated">要移动的端点。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The textual unit for moving.</source>
          <target state="translated">移动文本单位。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The number of units to move.</source>
          <target state="translated">要移动的单位数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A positive count moves the endpoint forward.</source>
          <target state="translated">正值表示向前移动端点。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A negative count moves backward.</source>
          <target state="translated">负值向后移动。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A count of 0 has no effect.</source>
          <target state="translated">计数为 0 无任何影响。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</source>
          <target state="translated">实际移动的单位数，移动则可能小于请求如果端点时遇到的开头或末尾的文档。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Removes a highlighted section of text, corresponding to the calling text range <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoints, from an existing collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">删除与调用文本范围对应的突出显示的部分<bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>终结点，从现有的支持多个的文本容器中的突出显示文本集合不连续选择。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The text insertion point will move to the area of the removed highlight.</source>
          <target state="translated">文本插入点将移到删除突出显示的区域中。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Providing a degenerate text range will move the insertion point.</source>
          <target state="translated">提供退化文本范围将移动插入点。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If text provider does not support multiple, disjoint selections (for example, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt; must have a value of <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">如果文本提供程序不支持多个不连续选择 (例如，&lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;的值必须<bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>)。&lt;/xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Causes the text control to scroll vertically until the text range is visible in the viewport.</source>
          <target state="translated">导致文本控件垂直滚动，直到文本范围在视区中可见。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>ScrollIntoView respects both hidden and visible text.</source>
          <target state="translated">ScrollIntoView 尊重隐藏和显示文本。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">UI 自动化客户端可以检查&lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;文本可见性。&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</source>
          <target state="translated">如果隐藏的文本范围，仅当隐藏的文本锚有视区中将滚动文本控件。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the text control should be scrolled so the text range is flush with the top of the viewport; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it should be flush with the bottom of the viewport.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果文本控件应该滚动以便文本范围与视区; 顶部对齐<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果应该与视区底部对齐。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If scrolling is not supported by the control.</source>
          <target state="translated">如果控件不支持滚动。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Highlights text in the text control corresponding to the text range <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoints.</source>
          <target state="translated">突出显示对应于文本范围的文本控件中的文本<bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>终结点。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If a degenerate text range is provided, the text insertion point will move to the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint of the text range.</source>
          <target state="translated">如果提供退化文本范围，则将将文本插入点移到&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;的文本范围的终结点。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Occurs when text selection is not supported by the text control.</source>
          <target state="translated">文本控件不支持文本选择时发生。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the text range.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与文本范围关联。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The text provider.</source>
          <target state="translated">文本提供程序。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>