<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34d146d0bdf33ba1354fc2b71587d66750fc1cfc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Description.IPolicyImportExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bfa38517fc97368db23279323d4526dbb5994af</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6246464533c809bc6e15d973eda670c5e6dc2ab</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a method for objects that import custom policy assertions about bindings.</source>
          <target state="translated">定义用于导入有关绑定的自定义策略断言的对象的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implement the IPolicyImportExtension interface to search WSDL information exposed by a particular endpoint for custom policy assertions about endpoint capabilities or requirements.</source>
          <target state="translated">实现 IPolicyImportExtension 接口可以搜索有关终结点功能或要求的自定义策略断言特定终结点公开的 WSDL 信息。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Typically, a policy importer searches for a specific assertion and either inserts a binding element, configures a binding element, or modifies the contract to support the requirements of the assertion.</source>
          <target state="translated">通常，策略导入特定断言并插入绑定元素中搜索、 配置绑定元素，或者修改协定以支持该断言的需求。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unlike its counterpart, &lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;, IPolicyImportExtension does not require implementation by a &lt;xref:System.ServiceModel.Channels.BindingElement&gt; object; you can load it using the client configuration section shown in the Examples section or programmatically by adding it to the &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">与其对应的方法不同&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;，IPolicyImportExtension 不需要实现通过&lt;xref:System.ServiceModel.Channels.BindingElement&gt;对象; 可以使用客户端配置节所示的示例部分中或以编程方式通过将其添加到加载&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt;构造函数。&lt;/xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Channels.BindingElement&gt; &lt;/xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> passes two objects to the &lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt; method, a &lt;xref:System.ServiceModel.Description.MetadataImporter&gt; and a &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>将两个对象传递给&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;方法时，&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;和&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;。&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt; &lt;/xref:System.ServiceModel.Description.MetadataImporter&gt; &lt;/xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Typically the &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt; object already contains the policy assertions for each binding scope.</source>
          <target state="translated">通常&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;对象包含每个绑定范围的策略断言。&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An IPolicyImportExtension implementation performs the following steps:      1.</source>
          <target state="translated">IPolicyImportExtension 实现将执行以下步骤︰ 1。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Locates the custom policy assertion for which it is responsible by calling either the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;, &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;, or &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; methods, depending upon the scope.</source>
          <target state="translated">查找它所负责的通过调用自定义策略断言&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;， &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;，或&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;方法，这取决于作用域。&lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">从断言集合中移除策略断言。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt; method locates, returns, and removes the assertion in one step.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt;方法查找、 返回，并在一个步骤中移除断言。&lt;/xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Modify the binding stack or the contract by either adding a required custom &lt;xref:System.ServiceModel.Channels.BindingElement&gt; to the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt; property or by modifying the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">通过添加所需的自定义来修改绑定堆栈或协定&lt;xref:System.ServiceModel.Channels.BindingElement&gt;到&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;属性或通过修改&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt; &lt;/xref:System.ServiceModel.Channels.BindingElement&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Step 2 is important.</source>
          <target state="translated">步骤 2 非常重要。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>After all policy importers have been called, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> checks for the existence of any policy assertions that remain.</source>
          <target state="translated">在调用所有策略导入程序后，<ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>检查是否存在的任何策略断言的保留。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If one exists, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">如果存在，<ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>认为策略导入不成功，将不导入相关的绑定。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A malicious metadata supplier can attempt to send malformed XML as part of metadata in an attempt to exploit a policy importer.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 恶意的元数据供应商可以尝试以尝试利用策略导入元数据的一部分发送 XML 格式不正确。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that custom policy importers be robust to all forms of XML that can be passed to it.</source>
          <target state="translated">强烈建议导入程序能够正常所有形式的 XML 可以传递给它的自定义策略。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Custom &lt;xref:System.ServiceModel.Description.MetadataImporter&gt; implementations must implement their own &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt; object to extract the policy assertions attached to the custom metadata format.</source>
          <target state="translated">自定义&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;实现必须实现自己&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;对象，以提取策略断言附加到自定义元数据格式。&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt; &lt;/xref:System.ServiceModel.Description.MetadataImporter&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you want to export and import custom WSDL elements that are not policy assertions, see &lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName&gt; and &lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt;.</source>
          <target state="translated">如果你想要导出和导入不是策略断言的自定义 WSDL 元素，请参阅&lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName&gt;和&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt;。&lt;/xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can use custom policy importers and exporters with the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> by using the same configuration elements in a configuration file and the <ph id="ph2">`/svcutilConfig:&lt;configFile&gt;`</ph> option.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 你可以使用自定义策略导入和导出程序与<bpt id="p1">[</bpt>ServiceModel 元数据实用工具 (Svcutil.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>通过在配置文件中使用的相同的配置元素和<ph id="ph2">`/svcutilConfig:&lt;configFile&gt;`</ph>选项。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Defines a method that can import custom policy assertions and add implementing binding elements.</source>
          <target state="translated">定义的方法，可以导入自定义策略断言和添加实现绑定元素。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">`ImportPolicy`</ph> method to obtain policy assertions and perform some modification of the imported contract or binding to support the assertion.</source>
          <target state="translated">实现<ph id="ph1">`ImportPolicy`</ph>方法以获取策略断言，并修改某些导入的协定或绑定以支持该断言。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Typically, a policy importer responds to finding a custom policy assertion by configuring or inserting a binding element into the binding being imported.</source>
          <target state="translated">通常，策略导入对通过配置或将一个绑定元素插入到正在导入的绑定来查找自定义策略断言作出响应。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> passes two objects to the ImportPolicy method, a &lt;xref:System.ServiceModel.Description.MetadataImporter&gt; and a &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>将两个对象传递给 ImportPolicy 的方法，&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;和&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;。&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt; &lt;/xref:System.ServiceModel.Description.MetadataImporter&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Typically the &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt; object already contains the policy assertions for each binding scope.</source>
          <target state="translated">通常&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;对象包含每个绑定范围的策略断言。&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt; implementation performs the following steps:      1.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;实现将执行以下步骤︰ 1。&lt;/xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Locates the custom policy assertion for which it is responsible by calling either the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;, &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;, or &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; methods, depending upon the scope.</source>
          <target state="translated">查找它所负责的通过调用自定义策略断言&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;， &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;，或&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;方法，这取决于作用域。&lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">从断言集合中移除策略断言。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt; method locates, returns, and removes the assertion in one step.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt;方法查找、 返回，并在一个步骤中移除断言。&lt;/xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Modifies the binding stack or the contract by either adding a required custom &lt;xref:System.ServiceModel.Channels.BindingElement&gt; to the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt; property or by modifying the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">通过添加所需的自定义修改绑定堆栈或协定&lt;xref:System.ServiceModel.Channels.BindingElement&gt;到&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;属性或通过修改&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt; &lt;/xref:System.ServiceModel.Channels.BindingElement&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Step 2 is important.</source>
          <target state="translated">步骤 2 非常重要。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>After all policy importers have been called, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> checks for the existence of any policy assertions that remain.</source>
          <target state="translated">在调用所有策略导入程序后，<ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>检查是否存在的任何策略断言的保留。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If one exists, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">如果存在，<ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>认为策略导入不成功，将不导入相关的绑定。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object in use.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataImporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中使用的对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包含可以导入的策略断言和的绑定的元素可向其添加实现绑定元素集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>