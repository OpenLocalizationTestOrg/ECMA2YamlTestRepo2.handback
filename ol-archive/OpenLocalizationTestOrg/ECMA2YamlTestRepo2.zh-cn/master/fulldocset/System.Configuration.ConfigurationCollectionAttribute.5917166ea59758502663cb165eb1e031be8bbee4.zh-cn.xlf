<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54440f581605c9fb1e232dedf7dd8b91063ad6ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Configuration.ConfigurationCollectionAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec2ea39bff67070f15bceb0a7611555f71627301</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0e0f8800bf564b58f6fb56dbb8983bf625b42b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Declaratively instructs the .NET Framework to create an instance of a configuration element collection.</source>
          <target state="translated">以声明方式指示的.NET framework 框架来创建配置元素集合的实例。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You use the ConfigurationCollectionAttribute attribute to decorate a &lt;xref:System.Configuration.ConfigurationElementCollection&gt; element.</source>
          <target state="translated">你使用 ConfigurationCollectionAttribute 特性修饰&lt;xref:System.Configuration.ConfigurationElementCollection&gt;元素。&lt;/xref:System.Configuration.ConfigurationElementCollection&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This instructs the .NET Framework to create an instance of the collection and to initialize it using your custom &lt;xref:System.Configuration.ConfigurationElement&gt; values.</source>
          <target state="translated">这会指示.NET Framework 来创建集合的实例并使用您的自定义将其初始化&lt;xref:System.Configuration.ConfigurationElement&gt;值。&lt;/xref:System.Configuration.ConfigurationElement&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The simplest way to create a custom configuration element is to use the attributed (declarative) model.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 创建自定义配置元素的最简单方法是使用特性化 （声明性） 模型。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You declare the elements and decorate them with the ConfigurationCollectionAttribute attribute.</source>
          <target state="translated">声明元素，并使用 ConfigurationCollectionAttribute 属性修饰它们。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For each element marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related &lt;xref:System.Configuration.ConfigurationElementCollection&gt; instance.</source>
          <target state="translated">使用此特性标记每个元素，.NET Framework 使用反射读取装饰参数以及创建相关&lt;xref:System.Configuration.ConfigurationElementCollection&gt;实例。&lt;/xref:System.Configuration.ConfigurationElementCollection&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can also use the programmatic model.</source>
          <target state="translated">你还可以使用的编程模型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this case it is your responsibility to declare the custom public collection but also to override the &lt;xref:System.Configuration.ConfigurationElementCollection&gt; member and return the properties collection.</source>
          <target state="translated">在这种情况下你要负责声明自定义的公共集合，但还能重写&lt;xref:System.Configuration.ConfigurationElementCollection&gt;成员并返回属性集合。&lt;/xref:System.Configuration.ConfigurationElementCollection&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements.</source>
          <target state="translated">.NET Framework 配置系统提供的自定义配置元素的创建过程中可以使用的属性类型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There are two kinds of attributes:      -   The attributes that instruct the .NET Framework how to create instances of the custom configuration element properties.</source>
          <target state="translated">有两种类型的属性:-指示.NET Framework 如何创建实例的自定义配置元素属性的属性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These types include:          -   ConfigurationCollectionAttribute          -   &lt;xref:System.Configuration.ConfigurationPropertyAttribute&gt;      -   The attributes that instruct the .NET Framework how to validate the custom configuration element properties.</source>
          <target state="translated">这些类型包括:-ConfigurationCollectionAttribute- &lt;xref:System.Configuration.ConfigurationPropertyAttribute&gt;-指示.NET Framework 如何验证自定义配置元素属性的属性。&lt;/xref:System.Configuration.ConfigurationPropertyAttribute&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These types include:          -   &lt;xref:System.Configuration.IntegerValidatorAttribute&gt;          -   &lt;xref:System.Configuration.LongValidatorAttribute&gt;          -   &lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.StringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.TimeSpanValidatorAttribute&gt;</source>
          <target state="translated">These types include:          -   &lt;xref:System.Configuration.IntegerValidatorAttribute&gt;          -   &lt;xref:System.Configuration.LongValidatorAttribute&gt;          -   &lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.StringValidatorAttribute&gt;          -   &lt;xref:System.Configuration.TimeSpanValidatorAttribute&gt;&lt;/xref:System.Configuration.TimeSpanValidatorAttribute&gt;&lt;/xref:System.Configuration.StringValidatorAttribute&gt;&lt;/xref:System.Configuration.RegexStringValidatorAttribute&gt;&lt;/xref:System.Configuration.LongValidatorAttribute&gt;&lt;/xref:System.Configuration.IntegerValidatorAttribute&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You use this constructor to tell the .NET Framework the custom type of the property collection to be created.</source>
          <target state="translated">使用此构造函数无法识别要创建的属性集合的自定义类型的.NET Framework。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The type of the property collection to create.</source>
          <target state="translated">要创建的属性集合的类型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;itemType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;itemType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;add&amp;gt;" name="&amp;lt;add&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> configuration element.</source>
          <target state="translated">获取或设置的名称<bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;add&amp;gt;" name="&amp;lt;add&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>配置元素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The AddItemName property allows you to assign a different name to the configuration element.</source>
          <target state="translated">AddItemName 属性，可将其他名称分配给的配置元素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, you could use <ph id="ph1">`addUrl`</ph> instead of "add".</source>
          <target state="translated">例如，可以使用<ph id="ph1">`addUrl`</ph>而不是"添加"。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The name that substitutes the standard name "add" for the configuration item.</source>
          <target state="translated">使用标准名称替换的名称"添加"配置项目。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets the name for the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;clear&amp;gt;" name="&amp;lt;clear&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> configuration element.</source>
          <target state="translated">获取或设置的名称<bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;clear&amp;gt;" name="&amp;lt;clear&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>配置元素。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The ClearItemsName property allows you to assign a different name to the <ph id="ph1">`&lt;clear&gt;`</ph> configuration element.</source>
          <target state="translated">ClearItemsName 属性允许您分配到不同的名称<ph id="ph1">`&lt;clear&gt;`</ph>配置元素。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, you could use <ph id="ph1">`clearUrls`</ph> instead of "clear".</source>
          <target state="translated">例如，可以使用<ph id="ph1">`clearUrls`</ph>而不是"清除"。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The name that replaces the standard name "clear" for the configuration item.</source>
          <target state="translated">将替换标准名称的名称"清除"为配置项目。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute.</source>
          <target state="translated">获取或设置的一种<bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The type of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一种<bpt id="p1">&lt;xref href="System.Configuration.ConfigurationCollectionAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the type of the collection element.</source>
          <target state="translated">获取集合元素的类型。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The ItemType property is used by reflection to get the configuration element type.</source>
          <target state="translated">ItemType 属性用于通过反射获取的配置元素类型。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The type of the collection element.</source>
          <target state="translated">集合元素的类型。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the name for the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;remove&amp;gt;" name="&amp;lt;remove&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> configuration element.</source>
          <target state="translated">获取或设置的名称<bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;remove&amp;gt;" name="&amp;lt;remove&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>配置元素。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The RemoveItemName property allows you to assign a different name to the <ph id="ph1">`&lt;remove&gt;`</ph> configuration element.</source>
          <target state="translated">RemoveItemName 属性允许您分配到不同的名称<ph id="ph1">`&lt;remove&gt;`</ph>配置元素。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, you could use <ph id="ph1">`removeUrl`</ph> instead of "remove".</source>
          <target state="translated">例如，可以使用<ph id="ph1">`removeUrl`</ph>而不是"删除"。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The name that replaces the standard name "remove" for the configuration element.</source>
          <target state="translated">将替换标准名称的名称"取消"的配置元素。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>