<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99365cf8744cd7ed9629d621ef2d9be8927abdbe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Component.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98da7d20ee3a9008515471e822db5631fdebaced</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33e51347fb4753b1b6afe1076a87f2fa5daa7178</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base implementation for the <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and enables object sharing between applications.</source>
          <target state="translated">提供的基实现<bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接口并启用应用程序之间共享的对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Component is the base class for all components in the common language runtime that marshal by reference.</source>
          <target state="translated">组件是在公共语言运行时由引用封送的所有组件的基类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Component is remotable and derives from the &lt;xref:System.MarshalByRefObject&gt; class.</source>
          <target state="translated">组件是可远程处理，派生自&lt;xref:System.MarshalByRefObject&gt;类。&lt;/xref:System.MarshalByRefObject&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Component provides an implementation of the &lt;xref:System.ComponentModel.IComponent&gt; interface.</source>
          <target state="translated">组件提供的实现&lt;xref:System.ComponentModel.IComponent&gt;接口。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; provides an implementation of &lt;xref:System.ComponentModel.IComponent&gt; that marshals by value.</source>
          <target state="translated">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;提供的实现&lt;xref:System.ComponentModel.IComponent&gt;，通过值将封送。&lt;/xref:System.ComponentModel.IComponent&gt; &lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can host a Component in any object that implements the &lt;xref:System.ComponentModel.IContainer&gt; interface, and you can query and get services from its container.</source>
          <target state="translated">你可以托管在实现任何对象的组件&lt;xref:System.ComponentModel.IContainer&gt;接口，并且可以查询和从其容器获取服务。&lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The container creates an &lt;xref:System.ComponentModel.ISite&gt; for each Component it contains.</source>
          <target state="translated">容器创建&lt;xref:System.ComponentModel.ISite&gt;为它包含每个组件。&lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The container uses the site to manage the Component and is used by the Component to communicate with its container.</source>
          <target state="translated">容器使用站点来管理组件，并且该组件用于与其容器进行通信。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A Component should release resources explicitly by calls to its &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method, without waiting for automatic memory management through an implicit call to the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">组件应显式释放资源，通过调用其&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;方法，而无需等待自动内存管理通过隐式调用&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When a &lt;xref:System.ComponentModel.Container&gt; is disposed, all components within the &lt;xref:System.ComponentModel.Container&gt; are also disposed.</source>
          <target state="translated">当&lt;xref:System.ComponentModel.Container&gt;将被释放中的所有组件&lt;xref:System.ComponentModel.Container&gt;同时会释放。&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Container&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the component can raise an event.</source>
          <target state="translated">获取一个值，该值指示组件是否可以引发事件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default implementation of this property always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">此属性的默认实现始终返回<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Classes that inherit from the &lt;xref:System.ComponentModel.Component&gt; class should override this property to provide the ability to disable the raising of events.</source>
          <target state="translated">继承自的类&lt;xref:System.ComponentModel.Component&gt;类应重写此属性以提供禁用引发事件的功能。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, in the &lt;xref:System.Windows.Forms.Control&gt; class, if the control is being hosted as an ActiveX control, the &lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt; property returns <ph id="ph1">`false`</ph> if the ActiveX control has its events frozen.</source>
          <target state="translated">例如，在&lt;xref:System.Windows.Forms.Control&gt;类，如果控件承载 ActiveX 控件，作为&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;属性返回<ph id="ph1">`false`</ph>如果 ActiveX 控件拥有冻结其事件。&lt;/xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt; &lt;/xref:System.Windows.Forms.Control&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the component can raise events; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果该组件可以引发事件;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the <bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含<bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</source>
          <target state="translated">在第一个中先进先出列表，它还定义容器内的组件的顺序中，容器中的组件进行跟踪。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The last component added is the last component in the list.</source>
          <target state="translated">添加的最后一个组件是在列表中的最后一个组件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the <bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if any, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the <bpt id="p4">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> is not encapsulated in an <bpt id="p5">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含<bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>(如果有） 或<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>如果<bpt id="p4">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>未封装在<bpt id="p5">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is currently in design mode.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>目前处于设计模式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The design mode indicator is stored in the &lt;xref:System.ComponentModel.ISite&gt;; therefore, if the &lt;xref:System.ComponentModel.Component&gt; does not have an &lt;xref:System.ComponentModel.ISite&gt; associated with it, the value of this property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">设计模式指示器存储在&lt;xref:System.ComponentModel.ISite&gt;; 因此，如果&lt;xref:System.ComponentModel.Component&gt;没有&lt;xref:System.ComponentModel.ISite&gt;与它关联，此属性的值是<ph id="ph1">`false`</ph>。&lt;/xref:System.ComponentModel.ISite&gt; &lt;/xref:System.ComponentModel.Component&gt; &lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is in design mode; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>处于设计模式; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.ComponentModel.Component&gt;.</source>
          <target state="translated">在完成使用&lt;xref:System.ComponentModel.Component&gt;.&lt;/xref:System.ComponentModel.Component&gt;时调用的 Dispose</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.ComponentModel.Component&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法离开&lt;xref:System.ComponentModel.Component&gt;中不可用状态。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.ComponentModel.Component&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.Component&gt; was occupying.</source>
          <target state="translated">调用 Dispose 后，必须释放对所有引用&lt;xref:System.ComponentModel.Component&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.ComponentModel.Component&gt;占用。&lt;/xref:System.ComponentModel.Component&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.ComponentModel.Component&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用释放在发布到&lt;xref:System.ComponentModel.Component&gt;。&lt;/xref:System.ComponentModel.Component&gt;最后一个引用之前</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.Component&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.ComponentModel.Component&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.Component&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.ComponentModel.Component&gt;引用。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Occurs when the component is disposed by a call to the &lt;xref:System.ComponentModel.Component.Dispose*&gt; method.</source>
          <target state="translated">通过调用释放组件时发生&lt;xref:System.ComponentModel.Component.Dispose*&gt;方法。&lt;/xref:System.ComponentModel.Component.Dispose*&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When you create a Disposed delegate, you identify the method that handles the event.</source>
          <target state="translated">在创建已释放的委托时，需要标识处理事件的方法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">若要将事件与事件处理程序关联，添加到事件的委托的一个实例。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">除非移除了该委托，称为每当发生该事件时，事件处理程序。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information about the event handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
          <target state="translated">有关事件处理程序委托的详细信息，请参阅<bpt id="p1">[</bpt>NIB︰ 事件和委托<ept id="p1">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets the list of event handlers that are attached to this <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取的事件处理程序附加到此列表<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>NIB︰ 使用事件<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventHandlerList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the delegates for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventHandlerList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为此组件提供委托。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Releases unmanaged resources and performs other cleanup operations before the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is reclaimed by garbage collection.</source>
          <target state="translated">释放非托管的资源并执行其他清理操作之前<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过垃圾回收回收。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.Object.Finalize%2A&gt;.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A&gt; method.</source>
          <target state="translated">应用程序代码不应调用此方法。对象的<ph id="ph1">`Finalize`</ph>方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止&lt;xref:System.GC.SuppressFinalize%2A&gt;方法。&lt;/xref:System.GC.SuppressFinalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Finalize 方法和析构函数<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>，<bpt id="p2">[</bpt>清洗向上非托管资源<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>，和<bpt id="p3">[</bpt>重写 Finalize 方法<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns an object that represents a service provided by the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or by its <bpt id="p2">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回一个对象，表示由提供的服务<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或通过其<bpt id="p2">&lt;xref href="System.ComponentModel.Container"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">此方法由派生类中重写。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A service provided by the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">由提供的服务<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents a service provided by the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the <bpt id="p3">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> does not provide the specified service.</source>
          <target state="translated">&lt;xref:System.Object&gt;表示由提供的服务<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果<bpt id="p3">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>不提供指定的服务。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的<bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; will have an &lt;xref:System.ComponentModel.ISite&gt; if it has been added to an &lt;xref:System.ComponentModel.IContainer&gt; and the &lt;xref:System.ComponentModel.IContainer&gt; assigns an &lt;xref:System.ComponentModel.ISite&gt; to it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component&gt;将具有&lt;xref:System.ComponentModel.ISite&gt;如果它已添加到&lt;xref:System.ComponentModel.IContainer&gt;，并&lt;xref:System.ComponentModel.IContainer&gt;将分配&lt;xref:System.ComponentModel.ISite&gt;到它。&lt;/xref:System.ComponentModel.ISite&gt; &lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.ISite&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.IContainer&gt; is responsible for assigning the &lt;xref:System.ComponentModel.ISite&gt; to the &lt;xref:System.ComponentModel.Component&gt;.</source>
          <target state="translated">&lt;xref:System.ComponentModel.IContainer&gt;负责将分配&lt;xref:System.ComponentModel.ISite&gt;到&lt;xref:System.ComponentModel.Component&gt;。&lt;/xref:System.ComponentModel.Component&gt; &lt;/xref:System.ComponentModel.ISite&gt; &lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Changing the value of the component's &lt;xref:System.ComponentModel.ISite&gt; does not necessarily change the name of the site the &lt;xref:System.ComponentModel.Component&gt; is assigned to.</source>
          <target state="translated">更改的组件的值&lt;xref:System.ComponentModel.ISite&gt;不一定不更改站点的名称&lt;xref:System.ComponentModel.Component&gt;分配给。&lt;/xref:System.ComponentModel.Component&gt; &lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The Site property should be set only by an &lt;xref:System.ComponentModel.IContainer&gt;.</source>
          <target state="translated">站点属性应设置只能由&lt;xref:System.ComponentModel.IContainer&gt;.&lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The property value is <ph id="ph1">`null`</ph> if the &lt;xref:System.ComponentModel.Component&gt; is removed from its &lt;xref:System.ComponentModel.IContainer&gt;.</source>
          <target state="translated">该属性值将<ph id="ph1">`null`</ph>如果&lt;xref:System.ComponentModel.Component&gt;从其&lt;xref:System.ComponentModel.IContainer&gt;.&lt;/xref:System.ComponentModel.IContainer&gt;删除&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Assigning <ph id="ph1">`null`</ph> to this property does not necessarily remove the &lt;xref:System.ComponentModel.Component&gt; from the &lt;xref:System.ComponentModel.IContainer&gt;.</source>
          <target state="translated">分配<ph id="ph1">`null`</ph>到此属性不一定会删除&lt;xref:System.ComponentModel.Component&gt;从&lt;xref:System.ComponentModel.IContainer&gt;.&lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; might or might not have a name.</source>
          <target state="translated">A&lt;xref:System.ComponentModel.Component&gt;可能或可能不具有名称。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.ComponentModel.Component&gt; is given a name, the name must be unique among other &lt;xref:System.ComponentModel.Component&gt; objects within its &lt;xref:System.ComponentModel.IContainer&gt;.</source>
          <target state="translated">如果&lt;xref:System.ComponentModel.Component&gt;是指定一个名称，名称必须是唯一的而其他&lt;xref:System.ComponentModel.Component&gt;对象内其&lt;xref:System.ComponentModel.IContainer&gt;.&lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.Component&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.ISite&gt; stores the name of the &lt;xref:System.ComponentModel.Component&gt;; therefore, you can only name a &lt;xref:System.ComponentModel.Component&gt; if it has an &lt;xref:System.ComponentModel.ISite&gt; associated with it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.ISite&gt;存储的&lt;xref:System.ComponentModel.Component&gt;; 因此，可以仅将名称，&lt;xref:System.ComponentModel.Component&gt;如果它有一个&lt;xref:System.ComponentModel.ISite&gt;与之关联的&lt;/xref:System.ComponentModel.ISite&gt;&lt;/xref:System.ComponentModel.Component&gt;&lt;/xref:System.ComponentModel.Component&gt;名称&lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the <bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the <bpt id="p4">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> is not encapsulated in an <bpt id="p5">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>, the <bpt id="p6">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept> does not have an <bpt id="p7">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept> associated with it, or the <bpt id="p8">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept> is removed from its <bpt id="p9">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p9">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与关联<bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，或<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>如果<bpt id="p4">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>未封装在<bpt id="p5">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>、 <bpt id="p6">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p6">&lt;/xref&gt;</ept>没有<bpt id="p7">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>与之关联，或<bpt id="p8">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept>从删除其<bpt id="p9">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p9">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.String&gt; containing the name of the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if any.</source>
          <target state="translated">返回&lt;xref:System.String&gt;包含名称的<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，如果任何。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This method should not be overridden.</source>
          <target state="translated">此方法不应被替代。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; may or may not have a name.</source>
          <target state="translated">A&lt;xref:System.ComponentModel.Component&gt;可能或可能不具有名称。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.ComponentModel.Component&gt; is given a name, the name is unique among other &lt;xref:System.ComponentModel.Component&gt; objects within its &lt;xref:System.ComponentModel.IContainer&gt;.</source>
          <target state="translated">如果&lt;xref:System.ComponentModel.Component&gt;是指定一个名称，名称是唯一的其他&lt;xref:System.ComponentModel.Component&gt;对象内其&lt;xref:System.ComponentModel.IContainer&gt;.&lt;/xref:System.ComponentModel.IContainer&gt;&lt;/xref:System.ComponentModel.Component&gt;间&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.ISite&gt; stores the name of the &lt;xref:System.ComponentModel.Component&gt;.</source>
          <target state="translated">&lt;xref:System.ComponentModel.ISite&gt;存储的&lt;xref:System.ComponentModel.Component&gt;。&lt;/xref:System.ComponentModel.Component&gt;的名称&lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; can only have an &lt;xref:System.ComponentModel.ISite&gt; if it has been added to an &lt;xref:System.ComponentModel.IContainer&gt; and the &lt;xref:System.ComponentModel.IContainer&gt; assigns an &lt;xref:System.ComponentModel.ISite&gt; to it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component&gt;只能具有&lt;xref:System.ComponentModel.ISite&gt;如果它已添加到&lt;xref:System.ComponentModel.IContainer&gt;，并&lt;xref:System.ComponentModel.IContainer&gt;将分配&lt;xref:System.ComponentModel.ISite&gt;到它。&lt;/xref:System.ComponentModel.ISite&gt; &lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.ISite&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if any, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the <bpt id="p3">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> is unnamed.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含名称的<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>(如果有） 或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果<bpt id="p3">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>是未命名。&lt;/xref:System.String&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>