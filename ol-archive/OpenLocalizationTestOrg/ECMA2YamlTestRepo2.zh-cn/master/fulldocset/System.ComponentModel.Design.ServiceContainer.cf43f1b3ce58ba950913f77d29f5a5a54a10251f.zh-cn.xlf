<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40fe7c9c186ac8f7329d11787960fe3b6106876c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.ServiceContainer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdbedc0f4b35eda3d12c1814179e1d61e8fbff8c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c47d598be64749da4defaa84cb469a8d201d849f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a simple implementation of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IServiceContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">提供的简单实现<bpt id="p1">&lt;xref href="System.ComponentModel.Design.IServiceContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The ServiceContainer object can be used to store and provide services.</source>
          <target state="translated">ServiceContainer 对象可以用于存储和提供服务。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>ServiceContainer implements the &lt;xref:System.ComponentModel.Design.IServiceContainer&gt; interface.</source>
          <target state="translated">ServiceContainer 实现&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;接口。&lt;/xref:System.ComponentModel.Design.IServiceContainer&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The ServiceContainer object can be created using a constructor that adds a parent &lt;xref:System.ComponentModel.Design.IServiceContainer&gt; through which services can be optionally added to or removed from all parent &lt;xref:System.ComponentModel.Design.IServiceContainer&gt; objects, including the immediate parent &lt;xref:System.ComponentModel.Design.IServiceContainer&gt;.</source>
          <target state="translated">可以使用添加父&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;通过该服务可以是根据需要添加或删除从所有父&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;对象，包括直接父&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;.&lt;/xref:System.ComponentModel.Design.IServiceContainer&gt;&lt;/xref:System.ComponentModel.Design.IServiceContainer&gt;&lt;/xref:System.ComponentModel.Design.IServiceContainer&gt;的构造函数创建 ServiceContainer 对象</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To add or remove a service from all &lt;xref:System.ComponentModel.Design.IServiceContainer&gt; implementations that are linked to this &lt;xref:System.ComponentModel.Design.IServiceContainer&gt; through parenting, call the &lt;xref:System.ComponentModel.Design.ServiceContainer.AddService%2A&gt; or &lt;xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A&gt; method overload that accepts a Boolean value indicating whether to promote the service request.</source>
          <target state="translated">若要添加或删除服务从所有&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;链接至此的实现&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;设置父级，通过调用&lt;xref:System.ComponentModel.Design.ServiceContainer.AddService%2A&gt;或&lt;xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A&gt;接受一个布尔值，该值指示是否以提升的服务请求的方法重载。&lt;/xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A&gt; &lt;/xref:System.ComponentModel.Design.ServiceContainer.AddService%2A&gt; &lt;/xref:System.ComponentModel.Design.IServiceContainer&gt; &lt;/xref:System.ComponentModel.Design.IServiceContainer&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Security.Permissions.HostProtectionAttribute&gt; attribute applied to this class has the following &lt;xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A&gt; property value: &lt;xref:System.Security.Permissions.HostProtectionResource&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;特性应用于此类具有以下&lt;xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A&gt;属性值︰ &lt;xref:System.Security.Permissions.HostProtectionResource&gt;.&lt;/xref:System.Security.Permissions.HostProtectionResource&gt; &lt;/xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A&gt; &lt;/xref:System.Security.Permissions.HostProtectionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Permissions.HostProtectionAttribute&gt; does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</source>
          <target state="translated">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;不影响桌面应用程序 （通常通过双击图标、 键入命令，或在浏览器中输入 URL 来启动）。&lt;/xref:System.Security.Permissions.HostProtectionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.Security.Permissions.HostProtectionAttribute&gt; class or <bpt id="p1">[</bpt>SQL Server Programming and Host Protection Attributes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;类或<bpt id="p1">[</bpt>SQL Server 编程和宿主保护特性<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Security.Permissions.HostProtectionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.ServiceContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.ServiceContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.ServiceContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified parent service provider.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.ServiceContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的父服务提供程序。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The service container uses this service object provider to retrieve services, if they are not available locally in the container.</source>
          <target state="translated">服务容器使用此服务对象提供程序检索服务，如果它们不容器中的本地可用。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A parent service provider.</source>
          <target state="translated">父服务提供程序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Adds the specified service to the service container.</source>
          <target state="translated">将指定的服务添加到服务容器。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The type of service to add.</source>
          <target state="translated">要添加的服务类型。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A callback object that can create the service.</source>
          <target state="translated">用于可创建该服务的回调对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This allows a service to be declared as available, but delays creation of the object until the service is requested.</source>
          <target state="translated">这允许服务，以声明为可用，但该服务在被请求之前延迟创建该对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A service of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept> already exists in the container.</source>
          <target state="translated">类型的服务<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept>容器中已存在。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adds the specified service to the service container.</source>
          <target state="translated">将指定的服务添加到服务容器。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The type of service to add.</source>
          <target state="translated">要添加的服务类型。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An instance of the service to add.</source>
          <target state="translated">要添加的服务实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This object must implement or inherit from the type indicated by the <ph id="ph1">`serviceType`</ph> parameter.</source>
          <target state="translated">此对象必须实现或继承的类型由<ph id="ph1">`serviceType`</ph>参数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A service of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept> already exists in the container.</source>
          <target state="translated">类型的服务<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept>容器中已存在。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Adds the specified service to the service container.</source>
          <target state="translated">将指定的服务添加到服务容器。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The type of service to add.</source>
          <target state="translated">要添加的服务类型。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A callback object that can create the service.</source>
          <target state="translated">用于可创建该服务的回调对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This allows a service to be declared as available, but delays creation of the object until the service is requested.</source>
          <target state="translated">这允许服务，以声明为可用，但该服务在被请求之前延迟创建该对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this service should be added to any parent service containers; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此服务应添加到任何父服务容器;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A service of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept> already exists in the container.</source>
          <target state="translated">类型的服务<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept>容器中已存在。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds the specified service to the service container.</source>
          <target state="translated">将指定的服务添加到服务容器。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The type of service to add.</source>
          <target state="translated">要添加的服务类型。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An instance of the service type to add.</source>
          <target state="translated">要添加的服务类型的实例。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This object must implement or inherit from the type indicated by the <ph id="ph1">`serviceType`</ph> parameter.</source>
          <target state="translated">此对象必须实现或继承的类型由<ph id="ph1">`serviceType`</ph>参数。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this service should be added to any parent service containers; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此服务应添加到任何父服务容器;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;serviceInstance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A service of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept> already exists in the container.</source>
          <target state="translated">类型的服务<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept>容器中已存在。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the default services implemented directly by <bpt id="p1">&lt;xref href="System.ComponentModel.Design.ServiceContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取默认服务直接通过实现<bpt id="p1">&lt;xref href="System.ComponentModel.Design.ServiceContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This property returns the default services that are implemented directly on this &lt;xref:System.ComponentModel.Design.IServiceContainer&gt;.</source>
          <target state="translated">此属性返回默认服务直接在此&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;。&lt;/xref:System.ComponentModel.Design.IServiceContainer&gt;上实现</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>the default implementation of this property is to return the &lt;xref:System.ComponentModel.Design.IServiceContainer&gt; and &lt;xref:System.ComponentModel.Design.ServiceContainer&gt; types.</source>
          <target state="translated">此属性的默认实现是返回&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;和&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;类型。&lt;/xref:System.ComponentModel.Design.ServiceContainer&gt; &lt;/xref:System.ComponentModel.Design.IServiceContainer&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You may override this property and return your own types, modifying the default behavior of &lt;xref:System.ComponentModel.Component.GetService%2A&gt;.</source>
          <target state="translated">你可能会重写此属性并返回您自己的类型，修改&lt;xref:System.ComponentModel.Component.GetService%2A&gt;.&lt;/xref:System.ComponentModel.Component.GetService%2A&gt;的默认行为</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default services.</source>
          <target state="translated">默认服务。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Disposes this service container.</source>
          <target state="translated">释放此服务容器。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Dispose walks all instantiated services within the container and disposes any that implement &lt;xref:System.IDisposable&gt;, and clears the service list.</source>
          <target state="translated">释放指导容器内的所有实例化的服务，并释放任何实现&lt;xref:System.IDisposable&gt;，并清除服务列表。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt; when you are finished using the &lt;xref:System.ComponentModel.Design.ServiceContainer&gt;.</source>
          <target state="translated">调用&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;在完成使用&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;.&lt;/xref:System.ComponentModel.Design.ServiceContainer&gt;时&lt;/xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt; method leaves the &lt;xref:System.ComponentModel.Design.ServiceContainer&gt; in an unusable state.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;方法使&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;中不可用状态。&lt;/xref:System.ComponentModel.Design.ServiceContainer&gt; &lt;/xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>After calling &lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;, you must release all references to the &lt;xref:System.ComponentModel.Design.ServiceContainer&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.Design.ServiceContainer&gt; was occupying.</source>
          <target state="translated">在调用&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;，必须释放对所有引用&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;占用。&lt;/xref:System.ComponentModel.Design.ServiceContainer&gt; &lt;/xref:System.ComponentModel.Design.ServiceContainer&gt; &lt;/xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call &lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt; before you release your last reference to the &lt;xref:System.ComponentModel.Design.ServiceContainer&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;发布到&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;。&lt;/xref:System.ComponentModel.Design.ServiceContainer&gt;最后一个引用之前&lt;/xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.Design.ServiceContainer&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.ComponentModel.Design.ServiceContainer&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Disposes this service container.</source>
          <target state="translated">释放此服务容器。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt; walks all instantiated services within the container and disposes any that implement &lt;xref:System.IDisposable&gt;, and clears the service list.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;指导容器内的所有实例化的服务并释放任何实现&lt;xref:System.IDisposable&gt;，并清除服务列表。&lt;/xref:System.IDisposable&gt;&lt;/xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">由公共调用此方法<ph id="ph1">`Dispose()`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.Design.ServiceContainer&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数为 true 时，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.ComponentModel.Design.ServiceContainer&gt;引用。&lt;/xref:System.ComponentModel.Design.ServiceContainer&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.ServiceContainer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is in the process of being disposed of; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.ComponentModel.Design.ServiceContainer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>正在释放; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the requested service.</source>
          <target state="translated">获取请求的服务。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The type of service to retrieve.</source>
          <target state="translated">要检索的服务类型。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An instance of the service if it could be found, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if it could not be found.</source>
          <target state="translated">如果无法找到它，该服务的实例或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到它。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Removes the specified service type from the service container.</source>
          <target state="translated">从服务容器中删除指定的服务类型。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The type of service to remove.</source>
          <target state="translated">要删除的服务类型。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Removes the specified service type from the service container.</source>
          <target state="translated">从服务容器中删除指定的服务类型。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The type of service to remove.</source>
          <target state="translated">要删除的服务类型。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this service should be removed from any parent service containers; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此服务应从任何父服务容器;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>