<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6fd5493" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5fbb3ffd37f521873bd174d0e6c43f5ea6cb164</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.DesignSurface.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31eabdd959b2cef0bedd96342cc4a9dd677dc66e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cda2d5d2cef10a257c5c490d133a4155eb6d3bfb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Presents a user interface for designing components.</source>
          <target state="translated">提供用于设计组件的用户界面。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The DesignSurface class implements what the user perceives as a designer.</source>
          <target state="translated">DesignSurface 类实现用户视为设计器。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>DesignSurface is the user interface the user manipulates to change design-time features.</source>
          <target state="translated">DesignSurface 是用户界面用户操作以更改设计时功能。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>DesignSurface provides a completely self-contained design surface.</source>
          <target state="translated">DesignSurface 提供完全自包含的设计图面。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The DesignSurface class may be used as a stand-alone designer, or it may be coupled with the &lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt; class to provide a common implementation for an application that hosts multiple DesignSurface objects.</source>
          <target state="translated">DesignSurface 类可能使用作为独立的设计器中，或它可能也会使&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;类以提供的应用程序承载多个 DesignSurface 对象通用的实现。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The DesignSurface class can be used by itself, or the user can derive a new class from it and augment the behavior.</source>
          <target state="translated">DesignSurface 类可以由本身，或用户可以从它派生新类并增加的行为。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The DesignSurface class provides several design-time services automatically.</source>
          <target state="translated">DesignSurface 类自动提供了一些设计时服务。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The DesignSurface class adds all of its services in its constructor.</source>
          <target state="translated">DesignSurface 类将添加其所有服务在其构造函数。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Most of these services can be overridden by replacing them in the protected &lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt; property.</source>
          <target state="translated">大多数这些服务可以重写通过替代它们在受保护&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;属性。&lt;/xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To replace a service, override the constructor, call base, and make any changes through the protected &lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt; property.</source>
          <target state="translated">若要替换服务，重写构造函数、 调用基类，和通过受保护的任何更改&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;属性。&lt;/xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All services that are added to the service container and that implement &lt;xref:System.IDisposable&gt; are disposed when the design surface is disposed.</source>
          <target state="translated">所有服务，它添加到服务容器和实现&lt;xref:System.IDisposable&gt;释放设计图面时，将释放。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The default set of replaceable services that the DesignSurface class provides is shown in the following table.</source>
          <target state="translated">默认的可替换 DesignSurface 类提供了以下表所示的服务集。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>|Service|Description|   |-------------|-----------------|   |&lt;xref:System.ComponentModel.Design.IExtenderProviderService&gt;|Enables objects that are not part of the container’s components collection to provide their own extender providers.|   |&lt;xref:System.ComponentModel.Design.IExtenderListService&gt;|Used by &lt;xref:System.ComponentModel.TypeDescriptor&gt; to get a list of extender providers.</source>
          <target state="translated">|服务 |说明 |  |-------------|-----------------|  |&lt;xref:System.ComponentModel.Design.IExtenderProviderService&gt;|允许将不是容器的组件集合，以提供其自己的扩展程序提供程序的一部分的对象。 |  |&lt;xref:System.ComponentModel.Design.IExtenderListService&gt;|使用&lt;xref:System.ComponentModel.TypeDescriptor&gt;来获取扩展程序提供程序的列表。&lt;/xref:System.ComponentModel.TypeDescriptor&gt; &lt;/xref:System.ComponentModel.Design.IExtenderListService&gt; &lt;/xref:System.ComponentModel.Design.IExtenderProviderService&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>With this service, extender providers can live outside of the container.|   |&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;|Provides designer metadata hooks.</source>
          <target state="translated">此服务，通过扩展程序提供程序可以实时容器之外。 |  |&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;|提供了设计器元数据挂钩。&lt;/xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This is the primary interface for metadata filtering.|   |&lt;xref:System.ComponentModel.Design.ISelectionService&gt;|Provides a way to select components in the designer.|   |&lt;xref:System.ComponentModel.Design.IReferenceService&gt;|Provides a way to get a name for objects, even when those objects are not sited.|   |DesignSurface|Offers the design surface itself as a service.|   |&lt;xref:System.ComponentModel.Design.DesignerOptionService&gt;|Provides a base class for getting and setting option values for a designer.|       The following table shows the non-replaceable services provided by default.</source>
          <target state="translated">这是元数据筛选的主接口。 |  |&lt;xref:System.ComponentModel.Design.ISelectionService&gt;|使您能够在设计器中选择组件。 |  |&lt;xref:System.ComponentModel.Design.IReferenceService&gt;|提供一种方法来获取对象的名称，即使这些对象位置不正确。 |  |DesignSurface |提供设计图面本身作为服务。 |  |&lt;xref:System.ComponentModel.Design.DesignerOptionService&gt;|提供基本类，用于获取和设置为设计器的选项值。 |      下表显示了默认提供的非可替换服务。&lt;/xref:System.ComponentModel.Design.DesignerOptionService&gt; &lt;/xref:System.ComponentModel.Design.IReferenceService&gt; &lt;/xref:System.ComponentModel.Design.ISelectionService&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>|Service|Description|   |-------------|-----------------|   |&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;|Raises events as changes are made to components.|   |&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;|Controls access to types, services, and transactions.</source>
          <target state="translated">|服务 |说明 |  |-------------|-----------------|  |&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;|对组件进行更改时引发的事件。 |  |&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;|控制对类型、 服务和事务的访问。&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt; &lt;/xref:System.ComponentModel.Design.IComponentChangeService&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Master interface for designers.|   |&lt;xref:System.ComponentModel.IContainer&gt;|Owns the set of components that are being designed.</source>
          <target state="translated">设计器的主接口。 |  |&lt;xref:System.ComponentModel.IContainer&gt;|正在设计的组件集的所有者。&lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Each designer has an &lt;xref:System.ComponentModel.IContainer&gt; that owns the components.|   |&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;|Derives from &lt;xref:System.IServiceProvider&gt; and provides a way to add and remove services from the designer.|       In addition to these services, the DesignSurface class also provides a single service that is available through a component’s site.</source>
          <target state="translated">每个设计器有&lt;xref:System.ComponentModel.IContainer&gt;拥有组件。 |  |&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;|派生自&lt;xref:System.IServiceProvider&gt;并提供了如何添加和从设计器中删除服务。 |      这些服务，除了 DesignSurface 类还提供了可通过组件的站点的单个服务。&lt;/xref:System.IServiceProvider&gt; &lt;/xref:System.ComponentModel.Design.IServiceContainer&gt; &lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This service is unique for each component.</source>
          <target state="translated">此服务是唯一的每个组件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following table shows the services that cannot be replaced.</source>
          <target state="translated">下表显示不能被替换的服务。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>|Service|Description|   |-------------|-----------------|   |&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;|A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.|   |&lt;xref:System.ComponentModel.INestedContainer&gt;|A container that enables a component to add additional child components to the designer.</source>
          <target state="translated">|服务 |说明 |  |-------------|-----------------|  |&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;|可以用于存储有关组件的任意数据的键/值对的泛型字典。 |  |&lt;xref:System.ComponentModel.INestedContainer&gt;|使组件能够将其他子组件添加到设计器的容器。&lt;/xref:System.ComponentModel.INestedContainer&gt; &lt;/xref:System.ComponentModel.Design.IDictionaryService&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These components will be part of the design surface, but will not participate in serialization.</source>
          <target state="translated">这些组件将作为一部分的设计图面上，但将不参与序列化。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.|       In addition to &lt;xref:System.ComponentModel.ISite&gt;, the site also implements the following interfaces.</source>
          <target state="translated">当你想要设计能够公开区域本身在设计器中，某个控件时，这是很有用，但你不想要参与序列化的区域。 |      除了&lt;xref:System.ComponentModel.ISite&gt;，此站点还实现以下接口。&lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 检查是否存在这些接口，而不是使用不加选择地强制转换，因为其他站点实现可能不能实现它们。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>|Service|Description|   |-------------|-----------------|   |&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;|Provides a way to get to the container of site-specific services.</source>
          <target state="translated">|服务 |说明 |  |-------------|-----------------|  |&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;|提供一种方法可用于访问特定于站点的服务的容器。&lt;/xref:System.ComponentModel.Design.IServiceContainer&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, &lt;xref:System.ComponentModel.Design.IDictionaryService&gt; is a site-specific service.</source>
          <target state="translated">例如，&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;是特定于站点的服务。&lt;/xref:System.ComponentModel.Design.IDictionaryService&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>With this service, you can add additional site-specific services.|</source>
          <target state="translated">使用此服务，你可以添加其他特定于站点的服务。 |</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`parentProvide`</ph> is present, designers contained within the surface can retrieve services from the application.</source>
          <target state="translated">当<ph id="ph1">`parentProvide`</ph>存在，则面中包含的设计器可以从应用程序中检索服务。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The parent service provider, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no parent used to resolve services.</source>
          <target state="translated">父服务提供程序，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不存在父用于解析服务。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you use the DesignSurface constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</source>
          <target state="translated">当你使用 DesignSurface 构造函数时，它会创建简单的设计器加载程序，反过来，创建给定类型的一个组件，并随后结束加载过程。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</source>
          <target state="translated">这是一种简单方法创建设计器中的，假定所有将外部完成保存状态。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Internally, this calls &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; and passes the root component type.</source>
          <target state="translated">在内部，这将调用&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;并将传递根组件类型。&lt;/xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The DesignSurface overload is not affected by &lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; DesignSurface 重载不受&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;.&lt;/xref:System.Windows.Forms.Design.DesignerOptions&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.Design.DesignerOptions&gt; must be in the service container before the design surface loads.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;设计图面加载之前必须是服务容器中。&lt;/xref:System.Windows.Forms.Design.DesignerOptions&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you need access to &lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;, call the empty constructor, add the &lt;xref:System.Windows.Forms.Design.DesignerOptions&gt; to the &lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt; and call &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; with <ph id="ph1">`rootComponentType`</ph>.</source>
          <target state="translated">如果你需要访问&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;、 调用空构造函数、 添加&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;到&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;并调用&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;与<ph id="ph1">`rootComponentType`</ph>。&lt;/xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; &lt;/xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt; &lt;/xref:System.Windows.Forms.Design.DesignerOptions&gt; &lt;/xref:System.Windows.Forms.Design.DesignerOptions&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The type of root component to create.</source>
          <target state="translated">要创建的根组件类型。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rootComponent&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rootComponent&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Using the DesignSurface constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</source>
          <target state="translated">使用 DesignSurface 构造函数创建简单的设计器加载程序创建给定类型的一个组件，随后结束加载过程。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</source>
          <target state="translated">这是一种简单方法创建设计器中的，假定所有将外部完成保存状态。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Internally, this calls &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; and passes the root component type.</source>
          <target state="translated">在内部，这将调用&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;并将传递根组件类型。&lt;/xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The parent service provider, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no parent used to resolve services.</source>
          <target state="translated">父服务提供程序，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不存在父用于解析服务。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The type of root component to create.</source>
          <target state="translated">要创建的根组件类型。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rootComponent&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rootComponent&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Begins the loading process with the given designer loader.</source>
          <target state="translated">开始使用给定的设计器加载程序加载过程。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</source>
          <target state="translated">因此加载可能继续进行此调用已返回后，可以是异步的设计器加载。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Attach an event handler to the &lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt; event to be notified when the design surface has completed loading.</source>
          <target state="translated">附加到事件处理程序&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;设计图面完成加载时要通知的事件。&lt;/xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>After &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</source>
          <target state="translated">后&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;是调用，还可以立即获得视图设计器中，因为设计器加载程序必须提供至少的根组件在异步加载时。&lt;/xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The designer loader to use for loading the designer.</source>
          <target state="translated">用于加载设计器设计器加载程序。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;loader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;loader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Begins the loading process.</source>
          <target state="translated">开始加载过程。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`rootComponentType`</ph> is specified, a default designer loader that simply creates an instance of <ph id="ph2">`rootComponentType`</ph> will be used.</source>
          <target state="translated">当<ph id="ph1">`rootComponentType`</ph>指定，则默认设计器加载程序，只需创建的实例<ph id="ph2">`rootComponentType`</ph>将使用。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</source>
          <target state="translated">因此加载可能继续进行此调用已返回后，可以是异步的设计器加载。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Attach an event handler to the &lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt; event to be notified when the design surface has completed loading.</source>
          <target state="translated">附加到事件处理程序&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;设计图面完成加载时要通知的事件。&lt;/xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>After BeginLoad is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</source>
          <target state="translated">调用 BeginLoad 之后，你可以立即获得视图设计器中，因为设计器加载程序必须提供至少的根组件在异步加载时。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The BeginLoad method creates an instance of the component type and initializes a designer for this instance.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; BeginLoad 方法创建的组件类型的实例并初始化此实例的设计器。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt; event is raised before this method returns.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;此方法返回之前，将引发事件。&lt;/xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The type of component to create in design mode.</source>
          <target state="translated">要在设计模式下创建的组件类型。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rootComponentType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rootComponentType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation within the design surface.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>设计图面中的实现。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The ComponentContainer property holds all objects that are currently in design mode.</source>
          <target state="translated">ComponentContainer 属性包含目前处于设计模式下的所有对象。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When components are added to ComponentContainer, their designer, if any, is loaded.</source>
          <target state="translated">组件将被添加到 ComponentContainer，其设计器中，如果有的话，时加载。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The component is sited with a site that provides full access to the design surface.</source>
          <target state="translated">提供到设计图面上的完全访问权限的站点组件所在。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation within the design surface.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>设计图面中的实现。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Creates an instance of a component.</source>
          <target state="translated">创建组件的实例。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The CreateComponent method is called by the design surface’s &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt; method to create an instance of a component.</source>
          <target state="translated">CreateComponent 方法调用在设计图面&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt;方法来创建组件的实例。&lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The component should be created and added to the public container on the design surface.</source>
          <target state="translated">应创建的组件，并且将其添加到设计图面上的公共容器中。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The type of component to create.</source>
          <target state="translated">要创建的组件类型。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The newly created component.</source>
          <target state="translated">新创建的组件。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;componentType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;componentType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Creates a designer when a component is added to the container.</source>
          <target state="translated">组件添加到容器时，请创建一个设计器。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The CreateDesigner method is called by the design surface’s &lt;xref:System.ComponentModel.IContainer&gt; when a component is added to the container.</source>
          <target state="translated">CreateDesigner 方法调用在设计图面&lt;xref:System.ComponentModel.IContainer&gt;时组件添加到容器。&lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This method creates a designer, but does not initialize it.</source>
          <target state="translated">此方法创建设计器中，但不对其进行初始化。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When it returns, the designer is initialized by the container.</source>
          <target state="translated">当它返回时，由容器初始化设计器。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>CreateDesigner can create two different types of designers: root designers and normal designers.</source>
          <target state="translated">CreateDesigner 可以创建两个不同类型的设计器︰ 根设计器和普通设计器。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</source>
          <target state="translated">根设计器是用于在设计图面，即通过定义第一个组件添加到容器中的根组件的设计器。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</source>
          <target state="translated">根设计器不同于普通设计器，因为他们负责向最终用户显示的用户界面。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</source>
          <target state="translated">根设计器通常协调与设计图面上的设计器，以提供此接口的其余部分。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default implementation of this method delegates to &lt;xref:System.ComponentModel.TypeDescriptor&gt;, passing in &lt;xref:System.ComponentModel.Design.IRootDesigner&gt; as the designer type for root designers, or &lt;xref:System.ComponentModel.Design.IDesigner&gt; for normal designers.</source>
          <target state="translated">此方法的默认实现委托给&lt;xref:System.ComponentModel.TypeDescriptor&gt;，并传入&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;作为根设计器的设计器类型或&lt;xref:System.ComponentModel.Design.IDesigner&gt;作为普通设计器。&lt;/xref:System.ComponentModel.Design.IDesigner&gt; &lt;/xref:System.ComponentModel.Design.IRootDesigner&gt; &lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>You can override this method to request a specific type of designer.</source>
          <target state="translated">你可以重写此方法来请求特定类型的设计器。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The component for which the designer should be created.</source>
          <target state="translated">应为其创建设计器的一个组件。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to create a root designer; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to create a normal designer.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要创建根设计器;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>创建正常的设计器。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An instance of the requested designer, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no matching designer could be found.</source>
          <target state="translated">请求的设计器的实例或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到任何匹配的设计器。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Creates an instance of the given type.</source>
          <target state="translated">创建给定类型的实例。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`type`</ph> is an &lt;xref:System.ComponentModel.IComponent&gt;, CreateInstance searches for a constructor of type &lt;xref:System.ComponentModel.IContainer&gt; first, followed by an empty constructor.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是&lt;xref:System.ComponentModel.IComponent&gt;，类型的构造函数搜索 CreateInstance&lt;xref:System.ComponentModel.IContainer&gt;首先后, 跟一个空构造函数。&lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The type to create.</source>
          <target state="translated">要创建的类型。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The newly created object.</source>
          <target state="translated">新创建的对象。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Creates a container suitable for nesting controls or components.</source>
          <target state="translated">创建一个容器适用于嵌套控件或组件。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</source>
          <target state="translated">将组件添加到嵌套容器创建其设计器，并使其适合所有服务可从设计图面。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Components added to nested containers do not participate in serialization.</source>
          <target state="translated">添加到嵌套容器的组件不参与序列化。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The component that manages the nested container.</source>
          <target state="translated">管理嵌套的容器的组件。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The nested container.</source>
          <target state="translated">嵌套的容器。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;owningComponent&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;owningComponent&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Creates a container suitable for nesting controls or components.</source>
          <target state="translated">创建一个容器适用于嵌套控件或组件。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</source>
          <target state="translated">将组件添加到嵌套容器创建其设计器，并使其适合所有服务可从设计图面。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Components added to nested containers do not participate in serialization.</source>
          <target state="translated">添加到嵌套容器的组件不参与序列化。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can provide an additional name for the CreateNestedContainer method by passing a value into <ph id="ph1">`containerName`</ph>.</source>
          <target state="translated">你可以通过将传递到值提供 CreateNestedContainer 方法的其他名称<ph id="ph1">`containerName`</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The component that manages the nested container.</source>
          <target state="translated">管理嵌套的容器的组件。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>An additional name for the nested container.</source>
          <target state="translated">嵌套容器其他名称。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The nested container.</source>
          <target state="translated">嵌套的容器。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;owningComponent&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;owningComponent&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的资源<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The public Dispose method follows the standard &lt;xref:System.IDisposable&gt; pattern.</source>
          <target state="translated">公共的 Dispose 方法遵循标准&lt;xref:System.IDisposable&gt;模式。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Calling this method destroys the design surface.</source>
          <target state="translated">调用此方法将销毁设计图面。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal &lt;xref:System.IDisposable&gt; pattern.</source>
          <target state="translated">此方法的受保护的版本是<ph id="ph1">`virtual`</ph>，它遵循普通&lt;xref:System.IDisposable&gt;模式。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because &lt;xref:System.ComponentModel.Design.DesignSurface&gt; does not have any native code to clean up, it does not have a finalizer that calls &lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于&lt;xref:System.ComponentModel.Design.DesignSurface&gt;不具有任何本机代码，以清理时，它没有调用&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;.&lt;/xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;终结器&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If you need to call &lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;, you must add a finalizer yourself.</source>
          <target state="translated">如果你需要调用&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;，你必须自己添加一个终结器。&lt;/xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.</source>
          <target state="translated">在完成使用&lt;xref:System.ComponentModel.Design.DesignSurface&gt;.&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;时调用的 Dispose</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.ComponentModel.Design.DesignSurface&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法离开&lt;xref:System.ComponentModel.Design.DesignSurface&gt;中不可用状态。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.ComponentModel.Design.DesignSurface&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.Design.DesignSurface&gt; was occupying.</source>
          <target state="translated">调用 Dispose 后，必须释放对所有引用&lt;xref:System.ComponentModel.Design.DesignSurface&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.ComponentModel.Design.DesignSurface&gt;占用。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt; &lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用释放在发布到&lt;xref:System.ComponentModel.Design.DesignSurface&gt;。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;最后一个引用之前</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.Design.DesignSurface&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.ComponentModel.Design.DesignSurface&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的资源<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The public &lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt; method follows the standard &lt;xref:System.IDisposable&gt; pattern.</source>
          <target state="translated">公共&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt;方法遵循标准&lt;xref:System.IDisposable&gt;模式。&lt;/xref:System.IDisposable&gt; &lt;/xref:System.ComponentModel.Design.DesignSurface.Dispose&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Calling this method destroys the design surface.</source>
          <target state="translated">调用此方法将销毁设计图面。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal &lt;xref:System.IDisposable&gt; pattern.</source>
          <target state="translated">此方法的受保护的版本是<ph id="ph1">`virtual`</ph>，它遵循普通&lt;xref:System.IDisposable&gt;模式。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because &lt;xref:System.ComponentModel.Design.DesignSurface&gt; does not have any native code to clean up, it does not have a finalizer that calls Dispose.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于&lt;xref:System.ComponentModel.Design.DesignSurface&gt;不具有任何本机代码，以清理时，它不具有一个调用 Dispose 的终结器。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If you need to call Dispose, you must add a finalizer yourself.</source>
          <target state="translated">如果你需要调用 Dispose，你必须自己添加一个终结器。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.Design.DesignSurface&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数为 true 时，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.ComponentModel.Design.DesignSurface&gt;引用。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Occurs when the design surface is disposed.</source>
          <target state="translated">释放设计图面时发生。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The surface is only disposed when the public &lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt; method on &lt;xref:System.ComponentModel.Design.DesignSurface&gt; is called.</source>
          <target state="translated">图面是仅释放的在公共&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;方法&lt;xref:System.ComponentModel.Design.DesignSurface&gt;称为。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt; &lt;/xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">**</bpt>Design-time Error List<ept id="p1">**</ept> is loading.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">**</bpt>设计时错误列表<ept id="p1">**</ept>正在加载。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">**</bpt>Design-time Error List<ept id="p2">**</ept> is loading; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">**</bpt>设计时错误列表<ept id="p2">**</ept>加载; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Serializes changes to the design surface.</source>
          <target state="translated">序列化到设计图面上的更改。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The Flush method can be called to push changes made to the design surface down to the serializer.</source>
          <target state="translated">可以调用 Flush 方法，以将推送到设计图面下序列化程序所做的更改。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This ensures that the design surface and its serialized state are synchronized.</source>
          <target state="translated">这可确保设计图面和其序列化的状态同步。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The actual implementation of this method is forwarded to the designer loader associated with design surface.</source>
          <target state="translated">此方法的实际实现转发到与设计图面关联的设计器加载程序。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The designer loader may choose to defer changes until Flush is called, or it may choose to keep the serialized data up to date with all user changes.</source>
          <target state="translated">设计器加载程序可以选择用于将更改的延迟，直到调用刷新时，或它也可能选择序列化的数据保留最新的用户的所有更改。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The Flush method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</source>
          <target state="translated">Flush 方法可确保，无论设计器加载程序选择使用的模式，如何序列化的状态同步与实际的设计图面。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Occurs when a call is made to the &lt;xref:System.ComponentModel.Design.DesignSurface.Flush*&gt; method of <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">当调用时发生&lt;xref:System.ComponentModel.Design.DesignSurface.Flush*&gt;方法<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.ComponentModel.Design.DesignSurface.Flush*&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The designer loader is flushed first, and then the Flushed event is raised.</source>
          <target state="translated">首先，刷新设计器加载程序，则引发刷新事件。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets a service from the service container.</source>
          <target state="translated">获取从服务容器的服务。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The GetService method retrieves a service in the design surface’s service container.</source>
          <target state="translated">GetService 方法检索设计图面服务容器中的服务。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>In addition, this will forward to any service provider that was given to the design surface at construction time.</source>
          <target state="translated">此外，这将转发到任何服务提供程序在构造时提供给设计图面。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The type of service to retrieve.</source>
          <target state="translated">要检索的服务类型。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>An object that implements, or is a derived class of, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the service does not exist in the service container.</source>
          <target state="translated">实现时，或者是的一个派生的类的对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept>，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果服务不存在服务容器中。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the design surface is currently loaded.</source>
          <target state="translated">获取一个值，该值指示当前加载设计图面。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the design surface is currently loaded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果当前加载设计图面;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Occurs when the designer load has completed.</source>
          <target state="translated">当设计器加载已完成时发生。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The Loaded event is raised for successful loads as well as unsuccessful ones.</source>
          <target state="translated">为成功加载，以及失败的情况下，将引发加载的事件。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If code in this event handler throws an exception, the designer is unloaded.</source>
          <target state="translated">如果此事件处理程序中的代码引发异常，则设计器将被卸载。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt; object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt;对象可以用于确定加载是否成功，并且它还可以为在加载期间发生的错误的列表。&lt;/xref:System.ComponentModel.Design.LoadedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 可能发生错误成功加载，前提是序列化系统可以承受错误。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Returns a collection of loading errors or a void collection.</source>
          <target state="translated">返回的加载错误或 void 集合的集合。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.ICollection&gt; of loading errors.</source>
          <target state="translated">A&lt;xref:System.Collections.ICollection&gt;的加载错误。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Occurs when the designer is about to be loaded.</source>
          <target state="translated">将要加载设计器时发生。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.Loaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.Loaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.LoadedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.LoadedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.Loading"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.Loading"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;包含事件数据。&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.Unloaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.Unloaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;包含事件数据。&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.Unloading"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.Unloading"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;包含事件数据。&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.ViewActivated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface.ViewActivated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;包含事件数据。&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Gets the service container.</source>
          <target state="translated">获取服务容器。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>At construction time, &lt;xref:System.ComponentModel.Design.DesignSurface&gt; adds default services into this service container.</source>
          <target state="translated">在构造时&lt;xref:System.ComponentModel.Design.DesignSurface&gt;将默认服务添加到此服务容器。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>You can leave the default services in their present state, or you can remove them and replace them with your own.</source>
          <target state="translated">您可以将默认服务留在其当前状态，也可以删除它们并将其替换为你自己。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The default services are all demand-created, so there is no loss in performance for adding them at construction time.</source>
          <target state="translated">默认服务是所有按需创建，因此将它们添加在构造时的性能不会丢失。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The service container that provides all services to designers contained within the design surface.</source>
          <target state="translated">在设计图面中包含的设计器提供的所有服务的服务容器。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Occurs when a designer has finished unloading.</source>
          <target state="translated">当设计器已完成的卸载时发生。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Occurs when a designer is about to unload.</source>
          <target state="translated">当设计器是将要卸载时发生。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.</source>
          <target state="translated">当卸载设计器时，被销毁该设计器的整个状态，包括设计器的视图。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The view should be unparented at this time.</source>
          <target state="translated">此时，该视图应是没有父级。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Gets the view for the root designer.</source>
          <target state="translated">获取根设计器的视图。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; method must be called beforehand to start the loading process.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;必须事先以启动加载过程调用方法。&lt;/xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</source>
          <target state="translated">就可以返回的视图设计器加载程序完成加载因为根设计器中，提供该视图，是由设计器加载程序创建的第一个对象之前。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>If a view is unavailable, &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; raises an exception.</source>
          <target state="translated">如果视图是不可用，&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;引发异常。&lt;/xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The notion of a view technology is obsolete.</source>
          <target state="translated">视图技术的概念已废弃不用。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>But, it remains in the interfaces for root designers for backward compatibility.</source>
          <target state="translated">但是，其保留在接口中向后兼容性的根设计器。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Its use is hidden from anyone using &lt;xref:System.ComponentModel.Design.DesignSurface&gt; objects.</source>
          <target state="translated">其用途隐藏的任何人使用&lt;xref:System.ComponentModel.Design.DesignSurface&gt;对象。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The View property hides view technologies by passing the supported technologies back into the root designer.</source>
          <target state="translated">视图属性通过将受支持的技术传递回根设计器隐藏视图技术。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The view for the root designer.</source>
          <target state="translated">根设计器的视图。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</source>
          <target state="translated">不加载设计图面、 设计器加载程序尚未创建根设计器，或设计图面完成的负载，但失败。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>More information may available in the &lt;xref:System.Exception.InnerException*&gt;.</source>
          <target state="translated">详细信息可能在可用&lt;xref:System.Exception.InnerException*&gt;。&lt;/xref:System.Exception.InnerException*&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The designer loaded, but it does not offer a view compatible with this design surface.</source>
          <target state="translated">设计器加载，但它不提供与此设计图面兼容的视图。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attached to the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加到<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Occurs when the &lt;xref:System.ComponentModel.Design.IDesignerHost.Activate*&gt; method has been called on <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">发生时&lt;xref:System.ComponentModel.Design.IDesignerHost.Activate*&gt;在调用了方法<bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesignerHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.ComponentModel.Design.IDesignerHost.Activate*&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>If you want to support the &lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt; method, your event handler should activate the window for this design surface.</source>
          <target state="translated">如果你想要支持&lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt;方法，事件处理程序应激活此设计图面的窗口。&lt;/xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>