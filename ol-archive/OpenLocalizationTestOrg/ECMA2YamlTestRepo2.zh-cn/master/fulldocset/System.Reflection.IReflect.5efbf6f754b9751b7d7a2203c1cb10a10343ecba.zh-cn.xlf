<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62958286f12a57bc66fac8407e54bb97f0dff770</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Reflection.IReflect.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66fd3006d34533b241872210c4ede88ff4ee0bf7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90fe9b0b414bc377093a65e863c3034a779128f6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Interoperates with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated">与互操作<bpt id="p1">[</bpt>IDispatch 接口<ept id="p1">](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The IReflect interface is used to interoperate with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated">IReflect 接口用于与进行互操作<bpt id="p1">[</bpt>IDispatch 接口<ept id="p1">](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>IReflect defines a subset of the &lt;xref:System.Type&gt; reflection methods.</source>
          <target state="translated">IReflect 定义的一个子集&lt;xref:System.Type&gt;反射方法。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an <ph id="ph1">`IDispatch`</ph> object.</source>
          <target state="translated">实现此接口，一个类型时从作为 COM 访问对象时，来自定义其行为<ph id="ph1">`IDispatch`</ph>对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt; class can be used to marshal an object that implements IReflect or &lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt; as a COM <ph id="ph1">`IDispatch`</ph> object, and vice versa.</source>
          <target state="translated">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;类可以用于封送对象实现 IReflect 或&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;作为 COM<ph id="ph1">`IDispatch`</ph>对象，反之亦然。&lt;/xref:System.Runtime.InteropServices.Expando.IExpando&gt; &lt;/xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns the &lt;xref:System.Reflection.FieldInfo&gt; object that corresponds to the specified field and binding flag.</source>
          <target state="translated">返回&lt;xref:System.Reflection.FieldInfo&gt;对应于指定的字段和绑定标志的对象。&lt;/xref:System.Reflection.FieldInfo&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The name of the field to find.</source>
          <target state="translated">要查找的字段的名称。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">使用来控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.FieldInfo&gt; object containing the field information for the named object that meets the search constraints specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Reflection.FieldInfo&gt;对象，其中包含符合搜索约束中指定的命名对象的字段信息<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Reflection.FieldInfo&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">该对象实现具有相同名称的多个字段。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns an array of &lt;xref:System.Reflection.FieldInfo&gt; objects that correspond to all fields of the current class.</source>
          <target state="translated">返回&lt;xref:System.Reflection.FieldInfo&gt;对应的当前类的所有字段的对象&lt;/xref:System.Reflection.FieldInfo&gt;的数组</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The match is based upon a name.</source>
          <target state="translated">匹配基于名称。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Each field must have a unique name.</source>
          <target state="translated">每个字段必须具有唯一名称。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt; flag specifies that non-public methods are included in the search.</source>
          <target state="translated">&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;标志以指定在搜索中包含非公共方法。&lt;/xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt; flag specifies that public methods are included in the search.</source>
          <target state="translated">&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;标志以指定在搜索中包含公共方法。&lt;/xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">使用来控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.FieldInfo&gt; objects containing all the field information for this reflection object that meets the search constraints specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">数组&lt;xref:System.Reflection.FieldInfo&gt;对象又包含符合搜索约束中指定此反射对象的所有字段信息<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Reflection.FieldInfo&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Retrieves an array of &lt;xref:System.Reflection.MemberInfo&gt; objects corresponding to all public members or to all members that match a specified name.</source>
          <target state="translated">检索的数组&lt;xref:System.Reflection.MemberInfo&gt;对应于所有公共成员或对与指定的名称匹配的所有成员的对象。&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The GetMember method retrieves an array of &lt;xref:System.Reflection.MemberInfo&gt; objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</source>
          <target state="translated">将检索的数组&lt;xref:System.Reflection.MemberInfo&gt;对应于所有公共成员或与指定的名称匹配的所有成员使用的名称和绑定特性的对象。&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The case of the specified name is observed or ignored, as specified by &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;.</source>
          <target state="translated">观察到指定名称的大小写或将其忽略，所指定的&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;.&lt;/xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
          <target state="translated">要查找的成员的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">使用来控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.MemberInfo&gt; objects matching the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">数组&lt;xref:System.Reflection.MemberInfo&gt;对象匹配<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>参数。&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Retrieves an array of &lt;xref:System.Reflection.MemberInfo&gt; objects that correspond either to all public members or to all members of the current class.</source>
          <target state="translated">检索&lt;xref:System.Reflection.MemberInfo&gt;对应于所有公共成员或到当前类的所有成员的对象&lt;/xref:System.Reflection.MemberInfo&gt;的数组</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This method retrieves an array of &lt;xref:System.Reflection.MemberInfo&gt; objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</source>
          <target state="translated">此方法检索&lt;xref:System.Reflection.MemberInfo&gt;通过使用对应于所有公共成员或到当前类的所有成员的绑定特性的对象&lt;/xref:System.Reflection.MemberInfo&gt;的数组</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It returns an array of all of the members defined for this object.</source>
          <target state="translated">它返回数组的所有定义此对象的成员。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">使用来控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.MemberInfo&gt; objects containing all the member information for this reflection object.</source>
          <target state="translated">数组&lt;xref:System.Reflection.MemberInfo&gt;包含此反射对象的所有成员信息的对象。&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Retrieves a &lt;xref:System.Reflection.MethodInfo&gt; object that corresponds to a specified method under specified search constraints.</source>
          <target state="translated">检索&lt;xref:System.Reflection.MethodInfo&gt;对应于下一个指定方法的对象指定的搜索约束。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
          <target state="translated">要查找的成员的名称。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">使用来控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object containing the method information, with the match being based on the method name and search constraints specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Reflection.MethodInfo&gt;对象，其中方法信息中，包含具有匹配项中指定的方法名称和搜索约束基于<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">该对象实现具有相同名称的多个方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Retrieves a &lt;xref:System.Reflection.MethodInfo&gt; object corresponding to a specified method, using a &lt;xref:System.Type&gt; array to choose from among overloaded methods.</source>
          <target state="translated">检索&lt;xref:System.Reflection.MethodInfo&gt;对象对应于指定的方法，请使用&lt;xref:System.Type&gt;数组从之间进行选择重载方法。&lt;/xref:System.Type&gt; &lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The return value is a match based on the method name, &lt;xref:System.Reflection.BindingFlags&gt; enum member, the kind of type conversion specified by the <ph id="ph1">`binder`</ph> parameter, the overload, and the &lt;xref:System.Reflection.ParameterInfo&gt; that describes the signature of the method.</source>
          <target state="translated">返回值是基于在方法名的匹配项&lt;xref:System.Reflection.BindingFlags&gt;枚举成员，指定的类型转换的种类<ph id="ph1">`binder`</ph>参数、 重载和&lt;xref:System.Reflection.ParameterInfo&gt;描述方法的签名。&lt;/xref:System.Reflection.ParameterInfo&gt; &lt;/xref:System.Reflection.BindingFlags&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
          <target state="translated">要查找的成员的名称。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">使用来控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An object that implements <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, containing properties related to this method.</source>
          <target state="translated">实现的对象<bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，其中包含属性与此方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An array used to choose among overloaded methods.</source>
          <target state="translated">重载方法的使用之间进行选择的数组。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</source>
          <target state="translated">用于使绑定可与在其中修改类型的参数签名一起的参数修饰符的数组。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The requested method that matches all the specified parameters.</source>
          <target state="translated">请求的方法，所有指定的参数相匹配。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">该对象实现具有相同名称的多个方法。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieves an array of &lt;xref:System.Reflection.MethodInfo&gt; objects with all public methods or all methods of the current class.</source>
          <target state="translated">检索&lt;xref:System.Reflection.MethodInfo&gt;与所有公共方法或当前类的所有方法的对象&lt;/xref:System.Reflection.MethodInfo&gt;的数组</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The non-public attribute of <ph id="ph1">`bindingAttr`</ph> is indicated only if public methods are returned.</source>
          <target state="translated">非公共属性<ph id="ph1">`bindingAttr`</ph>指示仅返回公共方法时。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">使用来控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.MethodInfo&gt; objects containing all the methods defined for this reflection object that meet the search constraints specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">数组&lt;xref:System.Reflection.MethodInfo&gt;对象包含的所有方法为此反射对象定义满足中指定的搜索约束<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Retrieves an array of &lt;xref:System.Reflection.PropertyInfo&gt; objects corresponding to all public properties or to all properties of the current class.</source>
          <target state="translated">检索&lt;xref:System.Reflection.PropertyInfo&gt;对应于所有公共属性或到当前类的所有属性的对象&lt;/xref:System.Reflection.PropertyInfo&gt;的数组</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">用于控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.PropertyInfo&gt; objects for all the properties defined on the reflection object.</source>
          <target state="translated">数组&lt;xref:System.Reflection.PropertyInfo&gt;反射对象上定义的所有属性的对象。&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Retrieves a &lt;xref:System.Reflection.PropertyInfo&gt; object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">检索&lt;xref:System.Reflection.PropertyInfo&gt;对应下指定的属性的对象指定的搜索约束。&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The name of the property to find.</source>
          <target state="translated">要查找的属性的名称。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">使用来控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.PropertyInfo&gt; object for the located property that meets the search constraints specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the property was not located.</source>
          <target state="translated">A&lt;xref:System.Reflection.PropertyInfo&gt;找到符合搜索约束中指定的属性对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept>，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果属性不是位于。&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">该对象实现具有相同名称的多个字段。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Retrieves a &lt;xref:System.Reflection.PropertyInfo&gt; object that corresponds to a specified property with specified search constraints.</source>
          <target state="translated">检索&lt;xref:System.Reflection.PropertyInfo&gt;对应于具有的指定属性的对象指定的搜索约束。&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This method retrieves a &lt;xref:System.Reflection.PropertyInfo&gt; object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">此方法检索&lt;xref:System.Reflection.PropertyInfo&gt;对应下指定的属性的对象指定的搜索约束。&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A type array is used to choose from among overloaded methods.</source>
          <target state="translated">一个类型数组用于从重载方法中进行选择。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
          <target state="translated">要查找的成员的名称。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">用于控制搜索的绑定属性。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An object that implements <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, containing properties related to this method.</source>
          <target state="translated">实现的对象<bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，其中包含属性与此方法。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">属性的类型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An array used to choose among overloaded methods with the same name.</source>
          <target state="translated">具有相同名称的方法重载使用之间进行选择的数组。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An array used to choose the parameter modifiers.</source>
          <target state="translated">一个用于选择参数修饰符的数组。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.PropertyInfo&gt; object for the located property, if a property with the specified name was located in this reflection object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property was not located.</source>
          <target state="translated">A&lt;xref:System.Reflection.PropertyInfo&gt;所在的属性，如果在此反射对象中，位于具有指定名称的属性对象或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果属性不是位于。&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Invokes a specified member.</source>
          <target state="translated">调用指定的成员。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</source>
          <target state="translated">要调用的方法必须是可访问，并且提供与指定的自变量列表中，指定的活页夹和调用特性的约束下最具体的匹配。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</source>
          <target state="translated">调用某个方法，如果方法声明中的参数的数目等于在指定的自变量列表中，参数的数目和每个自变量的类型可以转换由参数的类型联编程序。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The array of parameter modifiers passed to the InvokeMember method must contain a single parameter modifier.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 传递给属于 InvokeMember 方法的参数修饰符的数组必须包含单个参数修饰符。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</source>
          <target state="translated">当确定哪些参数需要通过引用向 COM 公开时传递时，被认为仅第一个参数修饰符</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The binder finds all matching methods, in accordance with the type of binding requested (&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;, &lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;, and so on).</source>
          <target state="translated">联编程序查找所有匹配的方法，根据请求的绑定类型 (&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;， &lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;，依次类推)。&lt;/xref:System.Reflection.IReflect.GetProperties%2A&gt; &lt;/xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</source>
          <target state="translated">按名称、 数量的参数和一组绑定器中定义的搜索修饰符进行筛选的方法集。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>After the method is selected, it is invoked, and accessibility is checked at that point.</source>
          <target state="translated">选择方法后，它调用的并且可访问性检查在该点。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</source>
          <target state="translated">搜索可能来控制哪些方法集是基于与该方法关联的可访问性特性。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt; selects the method to be invoked.</source>
          <target state="translated">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;选择要调用的方法。&lt;/xref:System.Reflection.Binder.BindToMethod%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default binder selects the most specific match.</source>
          <target state="translated">默认的联编程序选择最精确的匹配。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Access restrictions are ignored for fully trusted code.</source>
          <target state="translated">访问限制会忽略完全受信任的代码。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</source>
          <target state="translated">也就是说，是在私有构造函数、 方法、 字段和属性访问而完全受信任代码时，通过反射调用。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
          <target state="translated">要查找的成员的名称。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> invocation attributes.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>调用属性。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`invokeAttr`</ph> parameter may be a constructor, method, property, or field.</source>
          <target state="translated"><ph id="ph1">`invokeAttr`</ph>参数可能构造函数、 方法、 属性或字段。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A suitable invocation attribute must be specified.</source>
          <target state="translated">必须指定合适的调用属性。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Invoke the default member of a class by passing the empty string ("") as the name of the member.</source>
          <target state="translated">调用类的默认成员通过传递空字符串 ("") 作为成员的名称。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> bit flags.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>位标志。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Implements <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, containing properties related to this method.</source>
          <target state="translated">实现<bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，其中包含属性与此方法。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The object on which to invoke the specified member.</source>
          <target state="translated">对其调用指定的成员的对象。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This parameter is ignored for static members.</source>
          <target state="translated">适用于静态成员，则忽略此参数。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</source>
          <target state="translated">包含要调用的数量、 顺序和成员的参数的类型的对象数组。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This is an empty array if there are no parameters.</source>
          <target state="translated">如果任何参数，这是一个空数组。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; used to govern the coercion of types.</source>
          <target state="translated">实例&lt;xref:System.Globalization.CultureInfo&gt;用于控制类型强制。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`culture`</ph> converts a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, since 1000 is represented differently by different cultures.</source>
          <target state="translated">例如，<ph id="ph1">`culture`</ph>将转换<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示 1000 到<bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>值，因为不同的区域性以不同方式表示 1000年。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If this parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">如果此参数为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、&lt;xref:System.Globalization.CultureInfo&gt;则使用当前线程。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array of parameters.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>参数的数组。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The specified member.</source>
          <target state="translated">指定的成员。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>More than one argument is specified for a field <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">多个自变量指定为字段<bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The field or property cannot be found.</source>
          <target state="translated">找不到字段或属性。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The method cannot be found.</source>
          <target state="translated">找不到该方法。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A private member is invoked without the necessary <bpt id="p1">&lt;xref href="System.Security.Permissions.ReflectionPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果在不必要的情况下调用私有成员<bpt id="p1">&lt;xref href="System.Security.Permissions.ReflectionPermission"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets the underlying type that represents the <bpt id="p1">&lt;xref href="System.Reflection.IReflect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取表示的基础类型<bpt id="p1">&lt;xref href="System.Reflection.IReflect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The underlying type that represents the <bpt id="p1">&lt;xref href="System.Reflection.IReflect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">表示的基础类型<bpt id="p1">&lt;xref href="System.Reflection.IReflect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>