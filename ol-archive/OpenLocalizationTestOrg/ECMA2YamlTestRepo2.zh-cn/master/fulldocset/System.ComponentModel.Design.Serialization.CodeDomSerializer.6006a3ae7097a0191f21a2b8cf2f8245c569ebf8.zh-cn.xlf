<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f14b7c8fe27f7a18f95a66b3af3cfecf6703e56b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.CodeDomSerializer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e8dfd5c2d012ea5775f5a1740e287a9157b4314</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39e5b68e4ddd9bbeb02347bbcde555f634716ea6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Serializes an object graph to a series of CodeDOM statements.</source>
          <target state="translated">序列化到一系列的 CodeDOM 语句对象图。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class provides an abstract base class for a serializer.</source>
          <target state="translated">此类序列化程序提供一个抽象基类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can implement a custom CodeDomSerializer to control the generation of component initialization code for a type of component at design time.</source>
          <target state="translated">你可以实现自定义 CodeDomSerializer 来控制为类型的组件在设计时的组件初始化代码生成。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To implement a custom CodeDomSerializer for a type, you must:      1.</source>
          <target state="translated">若要实现自定义 CodeDomSerializer 类型，你必须︰ 1。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Define a class that derives from CodeDomSerializer.</source>
          <target state="translated">定义从 CodeDomSerializer 派生的类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Implement method overrides for serialization or deserialization methods.</source>
          <target state="translated">实现序列化或反序列化方法的方法重写。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>(See the information below for details.)      3.</source>
          <target state="translated">（请参阅下面有关详细信息的信息。）    3.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Associate your custom CodeDomSerializer implementation with a type of component using a &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&gt;.</source>
          <target state="translated">将自定义的 CodeDomSerializer 实现某种类型的组件使用一种&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&gt;。&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&gt;与相关联</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To implement a serialization method for generating configuration code for a component:      1.</source>
          <target state="translated">若要实现组件的配置代码的生成的序列化方法︰ 1。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Within a class that derives from CodeDomSerializer, override an appropriate serialization or deserialization method of the base class.</source>
          <target state="translated">从 CodeDomSerializer 派生一个类中重写基类的适当的序列化或反序列化方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you want the default serializer to generate code statements that perform the default component configuration, you must obtain and call the base serializer for the component.</source>
          <target state="translated">如果你想要生成代码语句，执行默认组件配置默认序列化程序，你必须获取并组件调用基序列化程序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To obtain the base serializer for the component, call the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A&gt; method of the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; passed to your method override.</source>
          <target state="translated">若要获取该组件的基序列化程序，调用&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A&gt;方法&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;传递给方法重写。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Pass the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A&gt; method the type of the component to serialize the configuration of, along with the base type of serializer you are requesting, which is CodeDomSerializer.</source>
          <target state="translated">传递&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A&gt;方法要序列化的配置，以及序列化程序的请求时，这是 CodeDomSerializer 的基类型的组件的类型。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Call the method of the same name you are overriding on the base serializer, using the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; and object passed to your method override.</source>
          <target state="translated">调用基序列化程序，使用您要重写具有相同名称的方法&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;和对象传递给你的方法重写。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you are implementing the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A&gt; method, the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A&gt; method of the base serializer will return an object.</source>
          <target state="translated">如果你要实现&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A&gt;方法，&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A&gt;的基序列化程序的方法将返回的对象。&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The type of this object depends on the type of base serializer which depends on the type of component you are serializing the values of.</source>
          <target state="translated">此对象的类型取决于基的序列化程序，具体取决于您要序列化的值的组件的类型的类型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you are implementing the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;, &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;, or &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt; method, you must create a new &lt;xref:System.CodeDom.CodeStatementCollection&gt; to contain the generated code statements, and pass it to the method.</source>
          <target state="translated">如果你要实现&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;， &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;，或&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt;方法，必须创建新&lt;xref:System.CodeDom.CodeStatementCollection&gt;包含生成的代码语句，并将其传递给该方法。&lt;/xref:System.CodeDom.CodeStatementCollection&gt; &lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you have called a base serializer method, you will have a &lt;xref:System.CodeDom.CodeStatementCollection&gt; that contains the statements to generate to initialize the component.</source>
          <target state="translated">如果你调用了基序列化程序方法，则必须&lt;xref:System.CodeDom.CodeStatementCollection&gt;，其中包含要为初始化组件而生成的语句。&lt;/xref:System.CodeDom.CodeStatementCollection&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Otherwise you should create a &lt;xref:System.CodeDom.CodeStatementCollection&gt;.</source>
          <target state="translated">否则，您应创建一种&lt;xref:System.CodeDom.CodeStatementCollection&gt;。&lt;/xref:System.CodeDom.CodeStatementCollection&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can add &lt;xref:System.CodeDom.CodeStatement&gt; objects representing statements to generate in the component configuration code to this collection.</source>
          <target state="translated">你可以添加&lt;xref:System.CodeDom.CodeStatement&gt;表示语句，以向此集合的组件配置代码中生成的对象。&lt;/xref:System.CodeDom.CodeStatement&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Return the &lt;xref:System.CodeDom.CodeStatementCollection&gt; that represents the source code to generate to configure the component.</source>
          <target state="translated">返回&lt;xref:System.CodeDom.CodeStatementCollection&gt;，表示要为配置组件而生成的源代码。&lt;/xref:System.CodeDom.CodeStatementCollection&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Deserializes the specified serialized CodeDOM object into an object.</source>
          <target state="translated">指定的序列化的 CodeDOM 对象反序列化为对象中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method uses the serialization manager to create objects and resolve data types.</source>
          <target state="translated">此方法使用序列化管理器创建对象并解决数据类型。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The root of the object graph is returned.</source>
          <target state="translated">返回的对象关系图的根。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A serialization manager interface that is used during the deserialization process.</source>
          <target state="translated">在反序列化过程中使用序列化管理器界面。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A serialized CodeDOM object to deserialize.</source>
          <target state="translated">用于反序列化的序列化的 CodeDOM 对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The deserialized CodeDOM object.</source>
          <target state="translated">反序列化的 CodeDOM 对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;codeObject&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;codeObject&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;codeObject&lt;/code&gt;</ph> is an unsupported code element.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;codeObject&lt;/code&gt;</ph>是不受支持的代码元素。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Deserializes a single statement.</source>
          <target state="translated">反序列化一条语句。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The DeserializeStatementToInstance is equivalent of calling &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A&gt;, except that it returns an object instance if the resulting statement was a variable assign statement, a variable declaration with an init expression, or a field assignment statement.</source>
          <target state="translated">DeserializeStatementToInstance 相当于调用&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A&gt;，只不过它将返回对象实例，如果结果语句为变量赋值语句、 具有初始化表达式或字段赋值语句的变量声明。&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">要用于序列化的序列化管理器。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The statement to deserialize.</source>
          <target state="translated">要反序列化的语句。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An object instance resulting from deserializing <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">statement</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">导致反序列化对象实例<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">statement</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Determines which statement group the given statement should belong to.</source>
          <target state="translated">确定给定的语句都应属于哪个语句组。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for which to determine the group.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为其确定组。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that <ph id="ph1">`statement`</ph> has been reduced to.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，<ph id="ph1">`statement`</ph>已减少到。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of <ph id="ph1">`statement`</ph>.</source>
          <target state="translated">The &lt;xref:System.Type&gt; of <ph id="ph1">`statement`</ph>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The name of the component with which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">statement</ph><ept id="p1">&lt;/code&gt;</ept> should be grouped.</source>
          <target state="translated">与该组件的名称<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">statement</ph> <ept id="p1">&lt;/code&gt;</ept>应进行分组。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Serializes the specified object into a CodeDOM object.</source>
          <target state="translated">指定的对象序列化为 CodeDOM 对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The serialization manager to use during serialization.</source>
          <target state="translated">要在序列化过程中使用的序列化管理器。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">要序列化的对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A CodeDOM object representing the object that has been serialized.</source>
          <target state="translated">一个 CodeDOM 对象，表示已序列化的对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Serializes the given object, accounting for default values.</source>
          <target state="translated">将序列化为给定的对象，并考虑默认值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">要用于序列化的序列化管理器。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">要序列化的对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A CodeDom object representing <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">一个 CodeDom 对象，表示<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Serializes the given member on the given object.</source>
          <target state="translated">序列化给定对象上的给定的成员。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">要用于序列化的序列化管理器。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The object to which is <ph id="ph1">`member`</ph> attached.</source>
          <target state="translated">到的对象是<ph id="ph1">`member`</ph>附加。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The member to serialize.</source>
          <target state="translated">要序列化的成员。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the serialized state of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示序列化的状态的<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">member</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;owningObject&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;member&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;owningObject&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;member&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;member&lt;/code&gt;</ph> is not a serializable type.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;member&lt;/code&gt;</ph>不是可序列化的类型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Serializes the given member, accounting for default values.</source>
          <target state="translated">序列化给定的成员，考虑默认值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">要用于序列化的序列化管理器。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The object to which is <ph id="ph1">`member`</ph> attached.</source>
          <target state="translated">到的对象是<ph id="ph1">`member`</ph>附加。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The member to serialize.</source>
          <target state="translated">要序列化的成员。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A CodeDom object representing <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">一个 CodeDom 对象，表示<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">member</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;owningObject&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;member&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;owningObject&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;member&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;member&lt;/code&gt;</ph> is not a serializable type.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;member&lt;/code&gt;</ph>不是可序列化的类型。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Serializes the specified value to a CodeDOM expression.</source>
          <target state="translated">将序列化为 CodeDOM 表达式指定的值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This method is similar to &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;, except that it stops if it cannot obtain a simple reference expression for the value.</source>
          <target state="translated">此方法类似于是&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;，只不过它将停止如果它无法获取值的简单引用表达式。&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Call this method when you expect the resulting expression to be used as a parameter or target of a statement.</source>
          <target state="translated">当你需要生成的表达式用作参数或语句的目标，请调用此方法。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The serialization manager to use during serialization.</source>
          <target state="translated">要在序列化过程中使用的序列化管理器。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">要序列化的对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The serialized value.</source>
          <target state="translated">序列化的值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no reference expression can be obtained for the specified value, or the value cannot be serialized.</source>
          <target state="translated">这将返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定的值，可获取没有引用表达式或值不能序列化。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>