<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08588a8d7ba75cd62b22c4f34a6e8627d80828b6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.FileSystem.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0907517a619a1cbca77e8af41fb5ce1398a43e8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c35d35abdce3f49ffb24aae0ba2aad8fe7edad18</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_FileSystem" name="FileSystem" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> module contains the procedures that are used to perform file, directory or folder, and system operations.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_FileSystem" name="FileSystem" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模块包含用于执行文件、 目录或文件夹和系统操作的过程。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than using the <bpt id="p2">&lt;xref uid="langword_csharp_FileSystem" name="FileSystem" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> module.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比使用<bpt id="p2">&lt;xref uid="langword_csharp_FileSystem" name="FileSystem" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>模块。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This module supports the Visual Basic language keywords and run-time library members that access files and folders.</source>
          <target state="translated">此模块支持的 Visual Basic 语言关键字和访问文件和文件夹的运行时库成员。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Changes the current directory or folder.</source>
          <target state="translated">更改当前目录或文件夹。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than the <bpt id="p2">&lt;xref uid="langword_csharp_ChDir " name="ChDir " href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>function.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_ChDir " name="ChDir " href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*&gt; .</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*&gt;。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ChDir`</ph> function changes the default directory, but not the default drive.</source>
          <target state="translated"><ph id="ph1">`ChDir`</ph>函数更改默认的目录，但不是在默认驱动器。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, if the default drive is C, the following statement changes the default directory on drive D, but C remains the default drive:       <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#39<ept id="p2">](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._177_1.vb)</ept><ept id="p1">]</ept>       You can make relative directory changes is by typing two periods, as follows:       <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>VbVbalrCatRef#40<ept id="p4">](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._177_2.vb)</ept><ept id="p3">]</ept><ph id="ph1">      &gt; </ph><ph id="ph2">[!IMPORTANT]</ph> &gt;  The <ph id="ph3">`ChDir`</ph> function requires unmanaged code permission, which may affect its execution in partial-trust situations.</source>
          <target state="translated">例如，如果默认驱动器 C，以下语句会更改驱动器 D 上的默认目录但 C 保留默认驱动器︰ <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef&amp;#39;<ept id="p2">](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._177_1.vb)</ept> <ept id="p1">]</ept>可以相对目录更改为通过键入两个句点，如下所示︰ <bpt id="p3">[!code-vb</bpt> <bpt id="p4">[</bpt>VbVbalrCatRef&amp;#40;<ept id="p4">](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._177_2.vb)</ept> <ept id="p3">]</ept> <ph id="ph1">      &gt; </ph> <ph id="ph2">[!IMPORTANT]</ph>&amp;1;&gt;<ph id="ph3">`ChDir`</ph>函数需要非托管的代码的权限，这可能会影响在部分信任情况下其执行。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and .</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.SecurityPermission&gt;和。&lt;/xref:System.Security.Permissions.SecurityPermission&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that identifies which directory or folder becomes the new default directory or folder.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>标识的目录或文件夹的表达式将成为新的默认目录或文件夹。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Path`</ph> may include the drive.</source>
          <target state="translated"><ph id="ph1">`Path`</ph>可能包括驱动器。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If no drive is specified, <bpt id="p1">&lt;xref uid="langword_csharp_ChDir" name="ChDir" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> changes the default directory or folder on the current drive.</source>
          <target state="translated">如果未指定驱动器， <bpt id="p1">&lt;xref uid="langword_csharp_ChDir" name="ChDir" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>更改的默认目录或当前的驱动器上的文件夹。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Path&lt;/code&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Path&lt;/code&gt;</ph>为空。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Invalid drive is specified, or drive is unavailable.</source>
          <target state="translated">指定了无效的驱动器，或者驱动器不可用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Changes the current drive.</source>
          <target state="translated">更改当前驱动器。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ChDrive`</ph> function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`ChDrive`</ph>函数需要非托管代码的权限，这可能会影响在部分信任情况下其执行。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.SecurityPermission&gt;和<bpt id="p1">[</bpt>代码访问权限<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>。&lt;/xref:System.Security.Permissions.SecurityPermission&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>String expression that specifies an existing drive.</source>
          <target state="translated">指定现有的驱动器的字符串表达式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you supply a zero-length string (""), the current drive does not change.</source>
          <target state="translated">如果您提供一个零长度字符串 ("")，当前的驱动器不会更改。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`Drive`</ph> argument is a multiple-character string, <bpt id="p1">&lt;xref uid="langword_csharp_ChDrive" name="ChDrive" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses only the first letter.</source>
          <target state="translated">如果<ph id="ph1">`Drive`</ph>自变量是包含多个字符的字符串， <bpt id="p1">&lt;xref uid="langword_csharp_ChDrive" name="ChDrive" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用仅的第一个字母。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Invalid drive is specified, or drive is unavailable.</source>
          <target state="translated">指定了无效的驱动器，或者驱动器不可用。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Changes the current drive.</source>
          <target state="translated">更改当前驱动器。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ChDrive`</ph> function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`ChDrive`</ph>函数需要非托管代码的权限，这可能会影响在部分信任情况下其执行。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.SecurityPermission&gt;和<bpt id="p1">[</bpt>代码访问权限<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>。&lt;/xref:System.Security.Permissions.SecurityPermission&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>String expression that specifies an existing drive.</source>
          <target state="translated">指定现有的驱动器的字符串表达式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you supply a zero-length string (""), the current drive does not change.</source>
          <target state="translated">如果您提供一个零长度字符串 ("")，当前的驱动器不会更改。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`Drive`</ph> argument is a multiple-character string, <bpt id="p1">&lt;xref uid="langword_csharp_ChDrive" name="ChDrive" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses only the first letter.</source>
          <target state="translated">如果<ph id="ph1">`Drive`</ph>自变量是包含多个字符的字符串， <bpt id="p1">&lt;xref uid="langword_csharp_ChDrive" name="ChDrive" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用仅的第一个字母。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Invalid drive is specified, or drive is unavailable.</source>
          <target state="translated">指定了无效的驱动器，或者驱动器不可用。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a string representing the current path.</source>
          <target state="translated">返回表示当前路径的字符串。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_CurDir" name="CurDir" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>可以获得更好的效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_CurDir" name="CurDir" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*&gt;。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A string representing the current path.</source>
          <target state="translated">表示当前路径的字符串。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a string representing the current path.</source>
          <target state="translated">返回表示当前路径的字符串。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_CurDir" name="CurDir" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>可以获得更好的效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_CurDir" name="CurDir" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*&gt;。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies an existing drive.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定现有的驱动器的表达式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If no drive is specified, or if <ph id="ph1">`Drive`</ph> is a zero-length string (""), <bpt id="p1">&lt;xref uid="langword_csharp_CurDir" name="CurDir" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returns the path for the current drive.</source>
          <target state="translated">如果未指定驱动器，或如果<ph id="ph1">`Drive`</ph>是零长度字符串 ("")， <bpt id="p1">&lt;xref uid="langword_csharp_CurDir" name="CurDir" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>返回当前驱动器的路径。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A string representing the current path.</source>
          <target state="translated">表示当前路径的字符串。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</source>
          <target state="translated">返回表示文件、 目录或与指定的模式或文件属性匹配的文件夹的名称或驱动器的卷标签的字符串。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> gives you better productivity and performance in file I/O operations than the <bpt id="p2">&lt;xref uid="langword_csharp_Dir" name="Dir" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为你提供更好的工作效率和性能中比文件 I/O 操作<bpt id="p2">&lt;xref uid="langword_csharp_Dir" name="Dir" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*&gt; for more information.</source>
          <target state="translated">请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*&gt;有关详细信息。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dir`</ph> function supports the use of multiple-character (<ph id="ph2">`*`</ph>) and single-character (<ph id="ph3">`?`</ph>) wildcards to specify multiple files.</source>
          <target state="translated"><ph id="ph1">`Dir`</ph>函数支持多个字符的使用 (<ph id="ph2">`*`</ph>) 和单字符 (<ph id="ph3">`?`</ph>) 通配符来指定多个文件。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`VbVolume`</ph> returns the volume label for the drive instead of a specific file name.</source>
          <target state="translated"><ph id="ph1">`VbVolume`</ph>返回而不是特定文件名的驱动器的卷标签。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You must supply a <ph id="ph1">`PathName`</ph> the first time that you call the <ph id="ph2">`Dir`</ph> function.</source>
          <target state="translated">必须提供<ph id="ph1">`PathName`</ph>第一次调用<ph id="ph2">`Dir`</ph>函数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To retrieve the next item, you can make subsequent calls to the <ph id="ph1">`Dir`</ph> function without parameters.</source>
          <target state="translated">若要检索的下一项，你可以后续调用<ph id="ph1">`Dir`</ph>不带参数的函数。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  To run correctly, the <ph id="ph2">`Dir`</ph> function requires the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; and &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;flags of &lt;xref:System.Security.Permissions.FileIOPermission&gt; to be granted to the executing code.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 正确，运行<ph id="ph2">`Dir`</ph>函数需要&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;和&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;标志&lt;xref:System.Security.Permissions.FileIOPermission&gt;才能被授予对执行代码。&lt;/xref:System.Security.Permissions.FileIOPermission&gt; &lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt; &lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermission&gt;, &lt;xref:System.Security.SecurityException&gt;, and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermission&gt;， &lt;xref:System.Security.SecurityException&gt;，和<bpt id="p1">[</bpt>代码访问权限<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>。&lt;/xref:System.Security.SecurityException&gt; &lt;/xref:System.Security.Permissions.FileIOPermission&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Attributes`</ph> argument enumeration values are as follows:      ||||   |-|-|-|   |Value|Constant|Description|   |<ph id="ph2">`Normal`</ph><ph id="ph3">|</ph><ph id="ph4">`vbnormal`</ph>|Default.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph>参数枚举值如下: | | |  |-|-|-|  |值 |常量 |说明 |  |<ph id="ph2">`Normal`</ph><ph id="ph3">|</ph><ph id="ph4">`vbnormal`</ph>|默认值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies files without attributes.|   |<ph id="ph1">`ReadOnly`</ph><ph id="ph2">|</ph><ph id="ph3">`vbReadOnly`</ph>|Specifies read-only files, and also files without attributes.|   |<ph id="ph4">`Hidden`</ph><ph id="ph5">|</ph><ph id="ph6">`vbHidden`</ph>|Specifies hidden files, and also files without attributes.|   |<ph id="ph7">`System`</ph><ph id="ph8">|</ph><ph id="ph9">`vbSystem`</ph>|Specifies system files, and also files without attributes.|   |<ph id="ph10">`Volume`</ph><ph id="ph11">|</ph><ph id="ph12">`vbVolume`</ph>|Specifies volume label; if any other attribute is specified, <ph id="ph13">`vbVolume`</ph> is ignored.|   |<ph id="ph14">`Directory`</ph><ph id="ph15">|</ph><ph id="ph16">`vbDirectory`</ph>|Specifies directories or folders, and also files without attributes.|   |<ph id="ph17">`Archive`</ph><ph id="ph18">|</ph><ph id="ph19">`vbArchive`</ph>|File has changed since last backup.|   |<ph id="ph20">`Alias`</ph><ph id="ph21">|</ph><ph id="ph22">`vbAlias`</ph>|File has a different name.|      &gt; <ph id="ph23">[!NOTE]</ph> &gt;  These enumerations are specified by the Visual Basic language and can be used anywhere in your code instead of the actual values.</source>
          <target state="translated">指定无特性文件。 |  |<ph id="ph1">`ReadOnly`</ph><ph id="ph2">|</ph><ph id="ph3">`vbReadOnly`</ph>|指定只读文件，以及带属性的文件。 |  |<ph id="ph4">`Hidden`</ph><ph id="ph5">|</ph><ph id="ph6">`vbHidden`</ph>|指定隐藏的文件，以及带属性的文件。 |  |<ph id="ph7">`System`</ph><ph id="ph8">|</ph><ph id="ph9">`vbSystem`</ph>|指定系统文件，以及带属性的文件。 |  |<ph id="ph10">`Volume`</ph><ph id="ph11">|</ph><ph id="ph12">`vbVolume`</ph>|指定卷标签;如果指定其他任何属性，则<ph id="ph13">`vbVolume`</ph>将被忽略。 |  |<ph id="ph14">`Directory`</ph><ph id="ph15">|</ph><ph id="ph16">`vbDirectory`</ph>|指定目录或文件夹，并指定无特性还文件。 |  |<ph id="ph17">`Archive`</ph><ph id="ph18">|</ph><ph id="ph19">`vbArchive`</ph>|文件自上次备份以来已更改。 |  |<ph id="ph20">`Alias`</ph><ph id="ph21">|</ph><ph id="ph22">`vbAlias`</ph>|文件具有不同的名称。 |    &amp;1;&gt; <ph id="ph23">[!NOTE]</ph>&amp;1;&gt; 这些枚举由 Visual Basic 语言指定，并可以使用而非实际值在代码中的任意位置。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</source>
          <target state="translated">表示文件、 目录或与指定的模式或文件属性匹配的文件夹的名称或驱动器的卷标签的字符串。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</source>
          <target state="translated">返回表示文件、 目录或与指定的模式或文件属性匹配的文件夹的名称或驱动器的卷标签的字符串。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> gives you better productivity and performance in file I/O operations than the <bpt id="p2">&lt;xref uid="langword_csharp_Dir" name="Dir" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为你提供更好的工作效率和性能中比文件 I/O 操作<bpt id="p2">&lt;xref uid="langword_csharp_Dir" name="Dir" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*&gt; for more information.</source>
          <target state="translated">请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*&gt;有关详细信息。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dir`</ph> function supports the use of multiple-character (<ph id="ph2">`*`</ph>) and single-character (<ph id="ph3">`?`</ph>) wildcards to specify multiple files.</source>
          <target state="translated"><ph id="ph1">`Dir`</ph>函数支持多个字符的使用 (<ph id="ph2">`*`</ph>) 和单字符 (<ph id="ph3">`?`</ph>) 通配符来指定多个文件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`VbVolume`</ph> returns the volume label for the drive instead of a specific file name.</source>
          <target state="translated"><ph id="ph1">`VbVolume`</ph>返回而不是特定文件名的驱动器的卷标签。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You must supply a <ph id="ph1">`PathName`</ph> the first time that you call the <ph id="ph2">`Dir`</ph> function.</source>
          <target state="translated">必须提供<ph id="ph1">`PathName`</ph>第一次调用<ph id="ph2">`Dir`</ph>函数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To retrieve the next item, you can make subsequent calls to the <ph id="ph1">`Dir`</ph> function with no parameters.</source>
          <target state="translated">若要检索的下一项，你可以后续调用<ph id="ph1">`Dir`</ph>不带任何参数的函数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  To run correctly, the <ph id="ph2">`Dir`</ph> function requires the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; and &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;flags of &lt;xref:System.Security.Permissions.FileIOPermission&gt; to be granted to the executing code.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 正确，运行<ph id="ph2">`Dir`</ph>函数需要&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;和&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;标志&lt;xref:System.Security.Permissions.FileIOPermission&gt;才能被授予对执行代码。&lt;/xref:System.Security.Permissions.FileIOPermission&gt; &lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt; &lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermission&gt;, &lt;xref:System.Security.SecurityException&gt;, and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermission&gt;， &lt;xref:System.Security.SecurityException&gt;，和<bpt id="p1">[</bpt>代码访问权限<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>。&lt;/xref:System.Security.SecurityException&gt; &lt;/xref:System.Security.Permissions.FileIOPermission&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Attributes`</ph> argument enumeration values are as follows:      ||||   |-|-|-|   |Value|Constant|Description|   |<ph id="ph2">`Normal`</ph><ph id="ph3">|</ph><ph id="ph4">`vbnormal`</ph>|Default.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph>参数枚举值如下: | | |  |-|-|-|  |值 |常量 |说明 |  |<ph id="ph2">`Normal`</ph><ph id="ph3">|</ph><ph id="ph4">`vbnormal`</ph>|默认值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies files that have no attributes.|   |<ph id="ph1">`ReadOnly`</ph><ph id="ph2">|</ph><ph id="ph3">`vbReadOnly`</ph>|Specifies read-only files, in addition to files that have no attributes.|   |<ph id="ph4">`Hidden`</ph><ph id="ph5">|</ph><ph id="ph6">`vbHidden`</ph>|Specifies hidden files, in addition to files that have no attributes.|   |<ph id="ph7">`System`</ph><ph id="ph8">|</ph><ph id="ph9">`vbSystem`</ph>|Specifies system files, in addition to files that have no attributes.|   |<ph id="ph10">`Volume`</ph><ph id="ph11">|</ph><ph id="ph12">`vbVolume`</ph>|Specifies volume label; if any other attribute is specified, <ph id="ph13">`vbVolume`</ph> is ignored.|   |<ph id="ph14">`Directory`</ph><ph id="ph15">|</ph><ph id="ph16">`vbDirectory`</ph>|Specifies directories or folders, in addition to files that have no attributes.|   |<ph id="ph17">`Archive`</ph><ph id="ph18">|</ph><ph id="ph19">`vbArchive`</ph>|File has changed since last backup.|   |<ph id="ph20">`Alias`</ph><ph id="ph21">|</ph><ph id="ph22">`vbAlias`</ph>|File has a different name.|      &gt; <ph id="ph23">[!NOTE]</ph> &gt;  These enumerations are specified by the Visual Basic language and can be used anywhere in your code in place of the actual values.</source>
          <target state="translated">指定无特性的文件。 |  |<ph id="ph1">`ReadOnly`</ph><ph id="ph2">|</ph><ph id="ph3">`vbReadOnly`</ph>|指定只读文件，除了不具任何属性的文件。 |  |<ph id="ph4">`Hidden`</ph><ph id="ph5">|</ph><ph id="ph6">`vbHidden`</ph>|指定隐藏的文件，除了不具任何属性的文件。 |  |<ph id="ph7">`System`</ph><ph id="ph8">|</ph><ph id="ph9">`vbSystem`</ph>|指定系统文件，除了不具任何属性的文件。 |  |<ph id="ph10">`Volume`</ph><ph id="ph11">|</ph><ph id="ph12">`vbVolume`</ph>|指定卷标签;如果指定其他任何属性，则<ph id="ph13">`vbVolume`</ph>将被忽略。 |  |<ph id="ph14">`Directory`</ph><ph id="ph15">|</ph><ph id="ph16">`vbDirectory`</ph>|指定此外到没有属性的文件的目录或文件夹，。 |  |<ph id="ph17">`Archive`</ph><ph id="ph18">|</ph><ph id="ph19">`vbArchive`</ph>|文件自上次备份以来已更改。 |  |<ph id="ph20">`Alias`</ph><ph id="ph21">|</ph><ph id="ph22">`vbAlias`</ph>|文件具有不同的名称。 |    &amp;1;&gt; <ph id="ph23">[!NOTE]</ph>&amp;1;&gt; 这些枚举由 Visual Basic 语言指定，并可以使用的实际值替换代码中的任意位置。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a file name, directory or folder name, or drive volume label.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定文件名称、 目录或文件夹名称或驱动器卷标签的表达式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A zero-length string (<bpt id="p1">&lt;xref uid="langword_csharp_&amp;quot;&amp;quot;" name="&amp;quot;&amp;quot;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) is returned if <ph id="ph1">`PathName`</ph> is not found.</source>
          <target state="translated">零长度字符串 (<bpt id="p1">&lt;xref uid="langword_csharp_&amp;quot;&amp;quot;" name="&amp;quot;&amp;quot;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 如果，则返回<ph id="ph1">`PathName`</ph>找不到。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Enumeration or numeric expression whose value specifies file attributes.</source>
          <target state="translated">枚举或数值表达式，其值指定文件属性。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If omitted, <bpt id="p1">&lt;xref uid="langword_csharp_Dir" name="Dir" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returns files that match <ph id="ph1">`PathName`</ph> but have no attributes.</source>
          <target state="translated">如果省略， <bpt id="p1">&lt;xref uid="langword_csharp_Dir" name="Dir" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>返回匹配的文件<ph id="ph1">`PathName`</ph>但不具任何属性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</source>
          <target state="translated">表示文件、 目录或与指定的模式或文件属性匹配的文件夹的名称或驱动器的卷标签的字符串。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the end of a file opened for <bpt id="p2">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or sequential <bpt id="p3">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> has been reached.</source>
          <target state="translated">返回一个布尔值<bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>时文件末尾打开以进行<bpt id="p2">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或连续<bpt id="p3">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>已达到。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`EOF`</ph> to avoid the error generated by attempting to get input past the end of a file.</source>
          <target state="translated">使用<ph id="ph1">`EOF`</ph>以避免通过尝试获取输入文件的末尾而产生的错误。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`EOF`</ph> function returns <ph id="ph2">`False`</ph> until the end of the file has been reached.</source>
          <target state="translated"><ph id="ph1">`EOF`</ph>函数返回<ph id="ph2">`False`</ph>之前已到达文件末尾。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>With files opened for <ph id="ph1">`Random`</ph> or <ph id="ph2">`Binary`</ph> access, <ph id="ph3">`EOF`</ph> returns <ph id="ph4">`False`</ph> until the last executed <ph id="ph5">`FileGet`</ph> function is unable to read a whole record.</source>
          <target state="translated">打开以进行文件与<ph id="ph1">`Random`</ph>或<ph id="ph2">`Binary`</ph>访问，<ph id="ph3">`EOF`</ph>返回<ph id="ph4">`False`</ph>直到最后一个执行<ph id="ph5">`FileGet`</ph>函数不能读取完整记录。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>With files opened for <ph id="ph1">`Binary`</ph> access, an attempt to read through the file using the <ph id="ph2">`Input`</ph> function until <ph id="ph3">`EOF`</ph> returns <ph id="ph4">`True`</ph> generates an error.</source>
          <target state="translated">打开以进行文件与<ph id="ph1">`Binary`</ph>访问，请尝试通过文件使用读取<ph id="ph2">`Input`</ph>函数直到<ph id="ph3">`EOF`</ph>返回<ph id="ph4">`True`</ph>生成错误。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`LOF`</ph> and <ph id="ph2">`Loc`</ph> functions instead of <ph id="ph3">`EOF`</ph> when reading binary files with <ph id="ph4">`Input`</ph>, or use <ph id="ph5">`Get`</ph> when using the <ph id="ph6">`EOF`</ph> function.</source>
          <target state="translated">使用<ph id="ph1">`LOF`</ph>和<ph id="ph2">`Loc`</ph>函数而不是<ph id="ph3">`EOF`</ph>与二进制文件中读取时<ph id="ph4">`Input`</ph>，或使用<ph id="ph5">`Get`</ph>时使用<ph id="ph6">`EOF`</ph>函数。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>With files opened for <ph id="ph1">`Output`</ph>, <ph id="ph2">`EOF`</ph> always returns <ph id="ph3">`True`</ph>.</source>
          <target state="translated">打开以进行文件与<ph id="ph1">`Output`</ph>，<ph id="ph2">`EOF`</ph>始终返回<ph id="ph3">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains any valid file number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the end of a file opened for <bpt id="p2">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or sequential <bpt id="p3">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> has been reached.</source>
          <target state="translated">返回一个布尔值<bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>时文件末尾打开以进行<bpt id="p2">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或连续<bpt id="p3">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>已达到。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Returns an enumeration representing the file mode for files opened using the <bpt id="p1">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">返回一个枚举，表示使用打开的文件的文件模式<bpt id="p1">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> gives you better productivity and performance in file I/O operations than the <bpt id="p2">&lt;xref uid="langword_csharp_FileAttr " name="FileAttr " href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>function.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为你提供更好的工作效率和性能中比文件 I/O 操作<bpt id="p2">&lt;xref uid="langword_csharp_FileAttr " name="FileAttr " href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*&gt; for more information.</source>
          <target state="translated">请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*&gt;有关详细信息。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This function returns an enumeration representing the file mode for files opened using the <ph id="ph1">`FileOpen`</ph> function.</source>
          <target state="translated">此函数将返回一个枚举，表示使用打开的文件的文件模式<ph id="ph1">`FileOpen`</ph>函数。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The following enumeration values indicate the file access mode:</source>
          <target state="translated">下面的枚举值表示文件访问模式︰</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>32</source>
          <target state="translated">32</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Concludes input/output (I/O) to a file opened using the <bpt id="p1">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">到输入/输出 (I/O) 结束使用打开的文件到<bpt id="p1">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> gives you better productivity and performance in file I/O operations.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>可更好的工作效率和性能在文件 I/O 操作。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for more information.</source>
          <target state="translated">请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>有关详细信息。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FileClose`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`FileClose`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Read Text from Files with a StreamReader<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>,<bpt id="p2">[</bpt>How to: Write Text to Files with a StreamWriter<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p3">[</bpt>Walkthrough: Manipulating Files and Directories in Visual Basic<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 使用 StreamReader 文件中读取文本<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>，<bpt id="p2">[</bpt>如何︰ 使用 StreamWriter 向文件写入文本<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>，和<bpt id="p3">[</bpt>演练︰ Visual Basic 中操作文件和目录<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`FileNumbers`</ph>, all active files opened by the <ph id="ph2">`FileOpen`</ph> function are closed.</source>
          <target state="translated">如果省略<ph id="ph1">`FileNumbers`</ph>，所有活动文件打开<ph id="ph2">`FileOpen`</ph>函数将关闭。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When you close files that were opened for <ph id="ph1">`Output`</ph> or <ph id="ph2">`Append`</ph>, the final buffer of output is written to the operating system buffer for that file.</source>
          <target state="translated">关闭已打开以进行文件<ph id="ph1">`Output`</ph>或<ph id="ph2">`Append`</ph>，最终输出缓冲区写入到该文件的操作系统缓冲区。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>All buffer space associated with the closed file is released.</source>
          <target state="translated">所有关联的缓冲区空间使用的已关闭发布文件。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`FileClose`</ph> function is executed, the association of a file with its file number ends.</source>
          <target state="translated">当<ph id="ph1">`FileClose`</ph>执行函数，而其文件的文件的关联是数字结束。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Parameter array of 0 or more channels to be closed.</source>
          <target state="translated">0 或更多通道即将关闭的参数数组。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;FileNumber&lt;/code&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;FileNumber&lt;/code&gt;</ph>不存在。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Copies a file.</source>
          <target state="translated">复制文件。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileCopy" name="FileCopy" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>可以获得更好的效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileCopy" name="FileCopy" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>See &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*&gt; for more information.</source>
          <target state="translated">请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*&gt;有关详细信息。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If you try to use the <ph id="ph1">`FileCopy`</ph> function on a currently open file, an error occurs.</source>
          <target state="translated">如果你尝试使用<ph id="ph1">`FileCopy`</ph>函数上当前打开的文件，将会出错。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileCopy`</ph> requires full trust to work on the local drive.</source>
          <target state="translated"><ph id="ph1">`FileCopy`</ph>需要完全信任才能在本地驱动器上工作。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the name of the file to be copied.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定要复制的文件的名称的表达式。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Source`</ph> may include the directory or folder, and drive, of the source file.</source>
          <target state="translated"><ph id="ph1">`Source`</ph>可能包含驱动器的源文件或目录和文件夹。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the destination file name.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定目标文件名称的表达式。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Destination`</ph> may include the directory or folder, and drive, of the destination file.</source>
          <target state="translated"><ph id="ph1">`Destination`</ph>可能包括的目录或文件夹和目标文件的驱动器。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;Destination&lt;/code&gt;</ph> is invalid or not specified.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;Destination&lt;/code&gt;</ph>无效或不指定。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>File is already open.</source>
          <target state="translated">文件已打开。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>File does not exist.</source>
          <target state="translated">文件不存在。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that indicates the date and time a file was written to.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值指示的日期和时间向其写入一个文件。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileDateTime" name="FileDateTime" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileDateTime" name="FileDateTime" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*&gt;</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*&gt;&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a file name.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件名称的表达式。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PathName`</ph> may include the directory or folder, and the drive.</source>
          <target state="translated"><ph id="ph1">`PathName`</ph>可能包含目录或驱动器和文件夹。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that indicates the date and time a file was created or last modified.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>创建或上次修改值，指示的日期和时间的文件。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;PathName&lt;/code&gt;</ph> is invalid or contains wildcards.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;PathName&lt;/code&gt;</ph>无效或包含通配符。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Target file does not exist.</source>
          <target state="translated">目标文件不存在。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Applies only when writing a string.</source>
          <target state="translated">仅当编写一个字符串时，才适用。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Specifies whether to write a two-byte descriptor for the string that describes the length.</source>
          <target state="translated">指定是否写入两个字节描述符描述长度的字符串。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGet" name="FileGet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Applies only when writing an array.</source>
          <target state="translated">仅编写数组时适用。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</source>
          <target state="translated">指定是否数组视为动态以及是否需要描述的大小和数组边界的数组说明符。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Applies only when writing a string.</source>
          <target state="translated">仅当编写一个字符串时，才适用。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Specifies whether to write a two-byte descriptor for the string that describes the length.</source>
          <target state="translated">指定是否写入两个字节描述符描述长度的字符串。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Reads data from an open disk file into a variable.</source>
          <target state="translated">到一个变量中，从打开的磁盘文件读取数据。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileGetObject" name="FileGetObject" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileGetObject" name="FileGetObject" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Valid variable name into which data is read.</source>
          <target state="translated">数据读入到其中的有效变量名称。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which reading starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始读取。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the length of a file in bytes.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值指定文件的长度以字节为单位。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileLen" name="FileLen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileLen" name="FileLen" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*&gt;。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*&gt;</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>If the specified file is open when the <ph id="ph1">`FileLen`</ph> function is called, the value returned represents the size of the file at the time it was opened.</source>
          <target state="translated">如果指定的文件打开时<ph id="ph1">`FileLen`</ph>被调用函数时，它已打开时，返回的值表示文件的大小。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  To obtain the current length of an open file, use the <ph id="ph2">`LOF`</ph> function.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 若要获取的当前打开的文件的长度，请使用<ph id="ph2">`LOF`</ph>函数。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a file.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件的表达式。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PathName`</ph> may include the directory or folder, and the drive.</source>
          <target state="translated"><ph id="ph1">`PathName`</ph>可能包含目录或驱动器和文件夹。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the length of a file in bytes.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值指定文件的长度以字节为单位。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>File does not exist.</source>
          <target state="translated">文件不存在。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Opens a file for input or output.</source>
          <target state="translated">打开用于输入或输出文件。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FileOpen`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`FileOpen`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>You must open a file before any I/O operation can be performed on it.</source>
          <target state="translated">可以对其执行任何 I/O 操作之前，必须打开文件。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FileOpen`</ph> allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</source>
          <target state="translated"><ph id="ph1">`FileOpen`</ph>针对 I/O 分配缓冲区，文件并确定要用于缓冲区的访问模式。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When writing to a file, an application may have to create a file, if the file to which it is trying to write does not exist.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 写入到文件时，应用程序可能需要创建一个文件，如果尝试写入的文件不存在。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>To do so, it needs permission for the directory in which the file is to be created.</source>
          <target state="translated">为此，它将用用于创建文件的目录中需要的权限。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>However, if the file specified by <ph id="ph1">`FileName`</ph> does exist, the application needs <ph id="ph2">`Write`</ph> permission only to the file itself.</source>
          <target state="translated">但是，如果指定的文件<ph id="ph1">`FileName`</ph>确实存在，应用程序需求<ph id="ph2">`Write`</ph>仅指向文件本身的权限。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Wherever possible, to help improve security, create the file during deployment and grant <ph id="ph1">`Write`</ph> permission to that file only, instead of to the whole directory.</source>
          <target state="translated">可能有助于提高安全性，部署和授予期间创建文件的任何位置<ph id="ph1">`Write`</ph>对该文件的权限仅，而不是整个目录。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>To help improve security, write data to user directories instead of to the root directory or the Program Files directory.</source>
          <target state="translated">为了提高安全性，请将数据写入到的根目录或 Program Files 目录的用户目录而不是。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The channel to open can be found by using the <ph id="ph1">`FreeFile()`</ph> function.</source>
          <target state="translated">若要打开的通道可通过使用找到<ph id="ph1">`FreeFile()`</ph>函数。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The <ph id="ph2">`FileOpen`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration, which may affect its execution in partial trust situations.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt;<ph id="ph2">`FileOpen`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举，从而可能影响在部分信任情况下其执行。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">&lt;xref uid="langword_csharp_FreeFile" name="FreeFile" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function to obtain the next available file number.</source>
          <target state="translated">使用<bpt id="p1">&lt;xref uid="langword_csharp_FreeFile" name="FreeFile" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数来获取下一个可用的文件数。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a file name—may include directory or folder, and drive.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件名称的表达式-可能包含目录或文件夹和驱动器。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Enumeration specifying the file mode: <bpt id="p1">&lt;xref uid="langword_csharp_Append" name="Append" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Output" name="Output" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, or <bpt id="p5">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Enumeration specifying the file mode: <bpt id="p1">&lt;xref uid="langword_csharp_Append" name="Append" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Output" name="Output" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, or <bpt id="p5">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.OpenMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> .</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.OpenMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Enumeration specifying the operations permitted on the open file: <bpt id="p1">&lt;xref uid="langword_csharp_Read" name="Read" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">允许在打开的文件上的指定操作的枚举︰ <bpt id="p1">&lt;xref uid="langword_csharp_Read" name="Read" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>， <bpt id="p2">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，或<bpt id="p3">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Defaults to <bpt id="p1">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认为<bpt id="p1">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.OpenAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> .</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.OpenAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Enumeration specifying the operations not permitted on the open file by other processes: <bpt id="p1">&lt;xref uid="langword_csharp_Shared" name="Shared" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_Lock Read" name="Lock Read" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Lock Write" name="Lock Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and <bpt id="p4">&lt;xref uid="langword_csharp_Lock Read Write" name="Lock Read Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">枚举指定允许的操作不在打开的文件上其他进程︰ <bpt id="p1">&lt;xref uid="langword_csharp_Shared" name="Shared" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>， <bpt id="p2">&lt;xref uid="langword_csharp_Lock Read" name="Lock Read" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>， <bpt id="p3">&lt;xref uid="langword_csharp_Lock Write" name="Lock Write" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，和<bpt id="p4">&lt;xref uid="langword_csharp_Lock Read Write" name="Lock Read Write" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Defaults to <bpt id="p1">&lt;xref uid="langword_csharp_Lock Read Write" name="Lock Read Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认为<bpt id="p1">&lt;xref uid="langword_csharp_Lock Read Write" name="Lock Read Write" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.OpenShare"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> .</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.OpenShare"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Number less than or equal to 32,767 (bytes).</source>
          <target state="translated">小于或等于 32767 （字节） 数。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>For files opened for random access, this value is the record length.</source>
          <target state="translated">对于以随机访问方式打开的文件，此值是记录长度。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>For sequential files, this value is the number of characters buffered.</source>
          <target state="translated">对于顺序文件，此值是缓冲的字符数。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Record length is negative (and not equal to -1).</source>
          <target state="translated">记录长度为负 （和不等于-1）。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;FileName&lt;/code&gt;</ph> is already open, or <ph id="ph2">&lt;code&gt;FileName&lt;/code&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;FileName&lt;/code&gt;</ph>已打开，或<ph id="ph2">&lt;code&gt;FileName&lt;/code&gt;</ph>无效。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph>function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/b684b977-357d-4475-a2d0-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/b684b977-357d-4475-a2d0-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/b684b977-357d-4475-a2d0-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/b684b977-357d-4475-a2d0-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/2a393bee-4ca7-4317-bbe9-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/2a393bee-4ca7-4317-bbe9-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/2a393bee-4ca7-4317-bbe9-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/2a393bee-4ca7-4317-bbe9-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/f7dbd668-3841-4860-9fe2-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/f7dbd668-3841-4860-9fe2-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/f7dbd668-3841-4860-9fe2-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/f7dbd668-3841-4860-9fe2-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/30fdf8e5-a84c-499e-8f20-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/30fdf8e5-a84c-499e-8f20-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/30fdf8e5-a84c-499e-8f20-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/30fdf8e5-a84c-499e-8f20-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/9cb41843-0b02-4bad-b757-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/9cb41843-0b02-4bad-b757-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/9cb41843-0b02-4bad-b757-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/9cb41843-0b02-4bad-b757-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/59c5b768-6732-40e5-a205-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/59c5b768-6732-40e5-a205-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/59c5b768-6732-40e5-a205-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/59c5b768-6732-40e5-a205-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/835229db-b7e7-4e50-86a7-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/835229db-b7e7-4e50-86a7-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/835229db-b7e7-4e50-86a7-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/835229db-b7e7-4e50-86a7-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/6a50d289-6d85-4fc1-99f7-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/6a50d289-6d85-4fc1-99f7-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/6a50d289-6d85-4fc1-99f7-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/6a50d289-6d85-4fc1-99f7-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/90087c6f-a92b-4ccb-88f5-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/90087c6f-a92b-4ccb-88f5-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/90087c6f-a92b-4ccb-88f5-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/90087c6f-a92b-4ccb-88f5-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph>function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/67fd8601-6772-45be-87ee-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/67fd8601-6772-45be-87ee-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/67fd8601-6772-45be-87ee-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/67fd8601-6772-45be-87ee-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the<ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/814bf35d-de00-4bf6-9dca-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/814bf35d-de00-4bf6-9dca-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/814bf35d-de00-4bf6-9dca-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/814bf35d-de00-4bf6-9dca-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/b8a1d844-c860-47f2-9311-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/b8a1d844-c860-47f2-9311-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/b8a1d844-c860-47f2-9311-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/b8a1d844-c860-47f2-9311-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>..</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>...</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/6bdd614c-e459-4fef-9c10-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/6bdd614c-e459-4fef-9c10-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/6bdd614c-e459-4fef-9c10-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/6bdd614c-e459-4fef-9c10-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>Applies only when writing a string.</source>
          <target state="translated">仅当编写一个字符串时，才适用。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>Specifies whether to write a two-byte string length descriptor for the string to the file.</source>
          <target state="translated">指定是否向文件写入字符串的两个字节的字符串长度描述符。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePut`</ph> is usually read from a file by using <ph id="ph2">`FileGet`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePut`</ph>从文件通常通过使用读取<ph id="ph2">`FileGet`</ph>。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, the next record or byte after the last <ph id="ph2">`FileGet`</ph> or <ph id="ph3">`FilePut`</ph> function or pointed to by the last <ph id="ph4">`Seek`</ph> function is written.</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>下, 一个记录或后的最后一个字节<ph id="ph2">`FileGet`</ph>或<ph id="ph3">`FilePut`</ph>函数或由最后一个指向<ph id="ph4">`Seek`</ph>编写函数。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePut`</ph>, you have to do the same with <ph id="ph5">`FileGet`</ph>, and you have to make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePut`</ph>，您需要做相同，但有<ph id="ph5">`FileGet`</ph>，并且你必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePut`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePut`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法任何明确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception will be thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is a string, <ph id="ph1">`FilePut`</ph> writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</source>
          <target state="translated">-如果写入的变量是一个字符串，<ph id="ph1">`FilePut`</ph>将写入两个字节说明符，包含了字符串长度，然后写入放入变量的数据。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>Therefore, the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual length of the string.</source>
          <target state="translated">因此，指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePut`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePut`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePut`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePut`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePut`</ph> writes a two byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePut`</ph>先写入两个字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</source>
          <target state="translated">-如果写入的变量是一个数组，则必须选择要写入的大小和数组的维度的属性的描述符。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve">
          <source>Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</source>
          <target state="translated">Visual Basic 6.0 和早期版本编写的文件描述符为动态数组而不是固定大小的数组。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve">
          <source>Visual Basic 2005 defaults to not writing the descriptor.</source>
          <target state="translated">Visual Basic 2005 默认为不能写描述符。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve">
          <source>To write the descriptor, set the <ph id="ph1">`ArrayIsDynamic`</ph> parameter to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">若要编写描述符，设置<ph id="ph1">`ArrayIsDynamic`</ph>参数<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve">
          <source>When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</source>
          <target state="translated">当编写数组，你必须相匹配的方法将读取的数组;如果将具有描述符读取，你必须编写描述符。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>For example, the following array declaration requires 218 bytes when the array is written to disk.</source>
          <target state="translated">例如，下面的数组声明需要 218 个字节时将数组写入到磁盘。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#43<ept id="p2">](~/add/codesnippet/visualbasic/34008b69-543f-4e9e-add6-_1.vb)</ept><ept id="p1">]</ept>      -   If the variable being written is any other type of variable (not a variable-length string or an object), <ph id="ph1">`FilePut`</ph> writes only the variable data.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#43;<ept id="p2">](~/add/codesnippet/visualbasic/34008b69-543f-4e9e-add6-_1.vb)</ept> <ept id="p1">]</ept> -如果写入的变量是任何其他类型的变量 （不可变长度字符串或对象）<ph id="ph1">`FilePut`</ph>将变量的数据。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the length of the data being written.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入的数据的长度。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes elements of structures as if each were written individually, except there is no padding between elements.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入的结构元素就像分别，写入的每个元素之间没有空白的情况除外。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于以指示写入的字符串的大小的结构中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  String fields that have more bytes than specified by the <ph id="ph2">`VBFixedString`</ph> attribute are truncated when written to disk,      ## Binary Mode    For files opened in <ph id="ph3">`Binary`</ph> mode, most of the <ph id="ph4">`Random`</ph> mode rules apply, with some exceptions.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 字符串具有更多个字节，超过指定值的字段<ph id="ph2">`VBFixedString`</ph>属性会被截断时写入到磁盘，# # 有关二进制模式文件在中打开<ph id="ph3">`Binary`</ph>模式下，大部分<ph id="ph4">`Random`</ph>模式规则适用，但出现一些异常。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve">
          <source>The following rules for files opened in <ph id="ph1">`Binary`</ph> mode differ from the rules for <ph id="ph2">`Random`</ph> mode:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在中打开文件的以下规则<ph id="ph1">`Binary`</ph>模式与不同的规则<ph id="ph2">`Random`</ph>模式:-<ph id="ph3">`RecordLength`</ph>中的子句<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePut`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePut`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve">
          <source>-   For any array other than an array in a structure, <ph id="ph1">`FilePut`</ph> writes only the data.</source>
          <target state="translated">-对于在结构中，数组以外的任何数组<ph id="ph1">`FilePut`</ph>只写入数据。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve">
          <source>No descriptor is written.</source>
          <target state="translated">未不写入任何说明符。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`FilePut`</ph> writes variable-length strings that are not elements of structures without the two-byte length descriptor.</source>
          <target state="translated">-<ph id="ph1">`FilePut`</ph>写入不是元素的结构没有两个字节长度说明符的可变长度字符串。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve">
          <source>The number of bytes written equals the number of characters in the string.</source>
          <target state="translated">写入的字节数等于字符串中的字符数。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve">
          <source>For example, the following statements write 11 bytes to file number 1:           <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#44<ept id="p2">](~/add/codesnippet/visualbasic/34008b69-543f-4e9e-add6-_2.vb)</ept><ept id="p1">]</ept>      -   Writing to a file by using the <ph id="ph1">`FilePut`</ph> function requires <ph id="ph2">`Write`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">例如，以下语句将 11 个字节写入到文件号 1: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef #44<ept id="p2">](~/add/codesnippet/visualbasic/34008b69-543f-4e9e-add6-_2.vb)</ept> <ept id="p1">]</ept> -写入某个文件的使用<ph id="ph1">`FilePut`</ph>函数需要<ph id="ph2">`Write`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve">
          <source>Applies only when writing an array.</source>
          <target state="translated">仅编写数组时适用。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve">
          <source>Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</source>
          <target state="translated">指定是否将数组视为动态的以及是否写入描述长度的字符串数组描述符。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve">
          <source>Applies only when writing a string.</source>
          <target state="translated">仅当编写一个字符串时，才适用。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve">
          <source>Specifies whether to write a two-byte string length descriptor for the string to the file.</source>
          <target state="translated">指定是否向文件写入字符串的两个字节的字符串长度描述符。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1 and not equal to -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;RecordNumber&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 1 且不等于-1。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve">
          <source>Writes data from a variable to a disk file.</source>
          <target state="translated">变量的数据写入到磁盘文件中。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FilePutObject" name="FilePutObject" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FilePutObject" name="FilePutObject" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FilePutObject`</ph> function is used instead of <ph id="ph2">`FilePut`</ph> to avoid ambiguities at compile time if type <ph id="ph3">`Object`</ph> is passed instead of another type, such as <ph id="ph4">`Integer`</ph>, <ph id="ph5">`Long`</ph>, <ph id="ph6">`Short`</ph>, and so forth.</source>
          <target state="translated"><ph id="ph1">`FilePutObject`</ph>而不是使用函数<ph id="ph2">`FilePut`</ph>以避免多义性在编译时，如果类型<ph id="ph3">`Object`</ph>而不是另一个类型，如传递<ph id="ph4">`Integer`</ph>， <ph id="ph5">`Long`</ph>， <ph id="ph6">`Short`</ph>，依次类推。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePutObject`</ph> writes and reads descriptors that describe the object.</source>
          <target state="translated"><ph id="ph1">`FilePutObject`</ph>写入和读取描述对象的描述符。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve">
          <source>If you intend to write out the <ph id="ph1">`Variant`</ph> type, <ph id="ph2">`FilePutObject`</ph> is required.</source>
          <target state="translated">如果你想要写出<ph id="ph1">`Variant`</ph>类型，<ph id="ph2">`FilePutObject`</ph>是必需的。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>When in doubt, if you are using an object for the second parameter, we recommend that you always use <ph id="ph1">`FilePutObject`</ph> and <ph id="ph2">`FileGetObject`</ph>.</source>
          <target state="translated">当有疑问时，如果第二个参数使用一个对象，我们建议您始终使用<ph id="ph1">`FilePutObject`</ph>和<ph id="ph2">`FileGetObject`</ph>。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePutObject`</ph> is valid only in <ph id="ph2">`Random`</ph> and <ph id="ph3">`Binary`</ph> mode.</source>
          <target state="translated"><ph id="ph1">`FilePutObject`</ph>仅在中有效<ph id="ph2">`Random`</ph>和<ph id="ph3">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`FilePutObject`</ph> is usually read from a file by using <ph id="ph2">`FileGetObject`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`FilePutObject`</ph>从文件通常通过使用读取<ph id="ph2">`FileGetObject`</ph>。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve">
          <source>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</source>
          <target state="translated">第一个记录或文件中的字节位置 1，第二个记录或字节在位置 2，依此类推。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`RecordNumber`</ph>, <ph id="ph2">`FilePutObject`</ph> writes the next record or byte after the last <ph id="ph3">`FileGetObject`</ph> or <ph id="ph4">`FilePutObject`</ph> function (or the record or byte pointed to by the last <ph id="ph5">`Seek`</ph> function).</source>
          <target state="translated">如果省略<ph id="ph1">`RecordNumber`</ph>，<ph id="ph2">`FilePutObject`</ph>上次写入的下一步的记录或字节<ph id="ph3">`FileGetObject`</ph>或<ph id="ph4">`FilePutObject`</ph>函数 (或记录或字节指向由最后一个<ph id="ph5">`Seek`</ph>函数)。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StringIsFixedLength`</ph> argument controls whether the function interprets strings as variable or fixed length.</source>
          <target state="translated"><ph id="ph1">`StringIsFixedLength`</ph>参数控制是否函数将字符串解释为变量或固定长度。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePutObject`</ph> does not write the length descriptor when the argument is <ph id="ph2">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`FilePutObject`</ph>如果参数为本身不会写入长度描述符<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`StringIsFixedLength`</ph><ph id="ph2"> = </ph><ph id="ph3">`True`</ph> with <ph id="ph4">`FilePutObject`</ph>, you have to do the same with <ph id="ph5">`FileGetObject`</ph>, and you must also make sure that the string is initialized to the length expected.</source>
          <target state="translated">如果你使用<ph id="ph1">`StringIsFixedLength`</ph> <ph id="ph2"> = </ph> <ph id="ph3">`True`</ph>与<ph id="ph4">`FilePutObject`</ph>，您需要做相同，但有<ph id="ph5">`FileGetObject`</ph>，和你还必须确保此字符串初始化为所需的长度。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve">
          <source>Random Mode    For files opened in <ph id="ph1">`Random`</ph> mode, the following rules apply:      -   If the length of the data being written is less than the length specified in the <ph id="ph2">`RecordLength`</ph> clause of the <ph id="ph3">`FileOpen`</ph> function, <ph id="ph4">`FilePutObject`</ph> writes subsequent records on record-length boundaries.</source>
          <target state="translated">随机模式的文件在中打开<ph id="ph1">`Random`</ph>模式下，以下规则适用:-如果要写入的数据的长度小于中指定的长度<ph id="ph2">`RecordLength`</ph>子句<ph id="ph3">`FileOpen`</ph>函数，<ph id="ph4">`FilePutObject`</ph>将后续记录写入记录长度边界上。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve">
          <source>The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</source>
          <target state="translated">将文件缓冲区的现有内容，则填充一个记录的结尾和开始下一条记录之间的空间。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve">
          <source>Because the amount of padding data cannot be precisely determined, it is generally a good idea to have the record length match the length of the data being written.</source>
          <target state="translated">因为无法精确地确定填充的数据量，它通常是具有要写入的数据长度相匹配的记录长度一个好办法。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve">
          <source>If the length of the data being written is greater than the length specified in the <ph id="ph1">`RecordLength`</ph> clause of the <ph id="ph2">`FileOpen`</ph> function, an exception is thrown.</source>
          <target state="translated">如果要写入的数据的长度大于中指定的长度<ph id="ph1">`RecordLength`</ph>子句<ph id="ph2">`FileOpen`</ph>函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a numeric type, <ph id="ph1">`FilePutObject`</ph> writes two bytes identifying the <ph id="ph2">`VarType`</ph> of the object and then writes the variable.</source>
          <target state="translated">-如果写入的变量是包含数值类型的对象<ph id="ph1">`FilePutObject`</ph>写入两个字节以标识<ph id="ph2">`VarType`</ph>的对象，然后将该变量。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve">
          <source>For example, when writing an object that contains an integer, <ph id="ph1">`FilePutObject`</ph> writes six bytes: two bytes that identify the object as <ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) and four bytes that contain the data.</source>
          <target state="translated">例如，当编写一个对象时，包含一个整数，<ph id="ph1">`FilePutObject`</ph>写入&amp;6; 个字节︰ 标识作为对象的两个字节<ph id="ph2">`VarType(`</ph>3<ph id="ph3">`)`</ph> (<ph id="ph4">`Integer`</ph>) 包含的数据的四个字节。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least two bytes greater than the actual number of bytes required to store the variable.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为两个字节大于实际存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an object that contains a string, <ph id="ph1">`FilePutObject`</ph> writes a two-byte descriptor identifying the <ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph> of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</source>
          <target state="translated">-如果要写入的变量是一个对象，包含一个字符串，<ph id="ph1">`FilePutObject`</ph>写入一个双字节说明符标识<ph id="ph2">`VarType(`</ph>8<ph id="ph3">`)`</ph>的对象，然后。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve">
          <source>The record length specified by the <ph id="ph1">`RecordLength`</ph> parameter in the <ph id="ph2">`FileOpen`</ph> function must be at least four bytes greater than the actual length of the string.</source>
          <target state="translated">指定的记录长度<ph id="ph1">`RecordLength`</ph>中的参数<ph id="ph2">`FileOpen`</ph>函数必须至少为四个字节大于字符串的实际长度。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve">
          <source>If you want to put a string without the descriptor, you should pass <ph id="ph1">`True`</ph> to the <ph id="ph2">`StringIsFixedLength`</ph> parameter, and the string you read into should be the correct length.</source>
          <target state="translated">如果你想要放入而无需描述符字符串，则应传递<ph id="ph1">`True`</ph>到<ph id="ph2">`StringIsFixedLength`</ph>参数，并且读取到应正确长度的字符串。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve">
          <source>-   If the variable being written is an array, then the record length specified by the <ph id="ph1">`RecordLength`</ph> clause in the <ph id="ph2">`FileOpen`</ph> function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</source>
          <target state="translated">-如果写入的变量为数组，则指定的记录长度<ph id="ph1">`RecordLength`</ph>中的子句<ph id="ph2">`FileOpen`</ph>函数必须是大于或等于写入数组数据和数组描述符需要的所有字节之和。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve">
          <source>The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</source>
          <target state="translated">描述符指定的秩的数组、 大小和为每个级别的下限。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve">
          <source>Its length equals 2 plus 8 times the number of dimensions: (2 + 8 * NumberOfDimensions).</source>
          <target state="translated">其长度等于 2 + 8 倍的维数: (2 + 8 * NumberOfDimensions)。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve">
          <source>Binary Mode    For files opened in <ph id="ph1">`Binary`</ph> mode, all the <ph id="ph2">`Random`</ph> mode rules apply, except:      -   The <ph id="ph3">`RecordLength`</ph> clause in the <ph id="ph4">`FileOpen`</ph> function has no effect.</source>
          <target state="translated">在二进制模式的文件打开<ph id="ph1">`Binary`</ph>模式下，所有<ph id="ph2">`Random`</ph>模式的规则将应用，除:-<ph id="ph3">`RecordLength`</ph>子句中的<ph id="ph4">`FileOpen`</ph>函数不起任何作用。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FilePutObject`</ph> writes all variables to disk contiguously, that is, without padding between records.</source>
          <target state="translated"><ph id="ph1">`FilePutObject`</ph>将所有变量磁盘连续，即包含无记录之间的填充。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>Valid variable name that contains data written to disk.</source>
          <target state="translated">有效的变量名称包含数据写入到磁盘。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>Record number (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> mode files) or byte number (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> mode files) at which writing starts.</source>
          <target state="translated">记录数 (<bpt id="p1">&lt;xref uid="langword_csharp_Random" name="Random" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模式文件) 或字节数 (<bpt id="p2">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>模式文件) 在开始写入。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve">
          <source>Assigns an output line width to a file opened by using the <bpt id="p1">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">将输出线条宽度分配给使用打开的文件<bpt id="p1">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve">
          <source>Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started.</source>
          <target state="translated">数值表达式在范围 0 – 255 （含)，它表示在多少个字符显示在行上，启动一个新行之前。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`RecordWidth`</ph> equals 0, there is no limit to the length of a line.</source>
          <target state="translated">如果<ph id="ph1">`RecordWidth`</ph>等于 0，则一条线的长度没有限制。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve">
          <source>The default value for <ph id="ph1">`RecordWidth`</ph> is 0.</source>
          <target state="translated">默认值为<ph id="ph1">`RecordWidth`</ph>为 0。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the next file number available for use by the <bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示可供使用的下一个文件编号<bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`FreeFile`</ph> to supply a file number that is not already being used.</source>
          <target state="translated">使用<ph id="ph1">`FreeFile`</ph>提供尚未使用文件数。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the next file number available for use by the <bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示可供使用的下一个文件编号<bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve">
          <source>More than 255 files are in use.</source>
          <target state="translated">超过 255 个文件正在使用中。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_FileAttribute" name="FileAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the attributes of a file, directory, or folder.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_FileAttribute" name="FileAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示的文件、 目录或文件夹的特性的值。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_FileAttribute" name="FileAttribute" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_FileAttribute" name="FileAttribute" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve">
          <source>To determine which attributes are set, use the <ph id="ph1">`And`</ph> operator to perform a bitwise comparison of the value returned by the <ph id="ph2">`GetAttr`</ph> function and the value of the individual file attribute you want.</source>
          <target state="translated">若要确定设置了哪些属性，请使用<ph id="ph1">`And`</ph>运算符执行返回的值的按位比较<ph id="ph2">`GetAttr`</ph>函数和所需的各个文件属性的值。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve">
          <source>If the result is not zero, that attribute is set for the named file.</source>
          <target state="translated">如果结果不为零，则该属性设置为指定的文件。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve">
          <source>For example, the return value of the following <ph id="ph1">`And`</ph> expression is zero if the <ph id="ph2">`Archive`</ph> attribute is not set:      <ph id="ph3">```vb#   Result = GetAttr(FName) And vbArchive   ```</ph>       A nonzero value is returned if the <ph id="ph4">`Archive`</ph> attribute is set.</source>
          <target state="translated">例如，以下的返回值<ph id="ph1">`And`</ph>表达式是零 if<ph id="ph2">`Archive`</ph>未设置属性︰<ph id="ph3">```vb#   Result = GetAttr(FName) And vbArchive   ```</ph>如果，则返回一个非零值<ph id="ph4">`Archive`</ph>属性设置。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a file, directory, or folder name.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件、 目录或文件夹名称的表达式。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PathName`</ph> can include the directory or folder, and the drive.</source>
          <target state="translated"><ph id="ph1">`PathName`</ph>可以包含目录或驱动器和文件夹。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve">
          <source>The value returned by <bpt id="p1">&lt;xref uid="langword_csharp_GetAttr" name="GetAttr" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is the sum of the following enumeration values:</source>
          <target state="translated">返回的值<bpt id="p1">&lt;xref uid="langword_csharp_GetAttr" name="GetAttr" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是下列枚举值的总和︰</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve">
          <source>Constant        Description</source>
          <target state="translated">常量的说明</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_vbNormal" name="vbNormal" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> Normal.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_vbNormal" name="vbNormal" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>法线。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_vbReadOnly" name="vbReadOnly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> Read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_vbReadOnly" name="vbReadOnly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>只读的。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_vbHidden" name="vbHidden" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> Hidden.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_vbHidden" name="vbHidden" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>隐藏。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_vbSystem" name="vbSystem" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> System file.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_vbSystem" name="vbSystem" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>系统文件。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_vbDirectory" name="vbDirectory" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> Directory or folder.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_vbDirectory" name="vbDirectory" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>目录或文件夹。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_vbArchive" name="vbArchive" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> File has changed since last backup.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_vbArchive" name="vbArchive" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>自上次备份以来已更改文件。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_vbAlias" name="vbAlias" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> File has a different name.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_vbAlias" name="vbAlias" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>文件具有不同的名称。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve">
          <source>These enumerations are specified by the Visual Basic language.</source>
          <target state="translated">Visual Basic 语言指定这些枚举。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve">
          <source>The names can be used anywhere in your code in place of the actual values.</source>
          <target state="translated">名称可以代替实际值在代码中的任意位置使用。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Pathname&lt;/code&gt;</ph> is invalid or contains wildcards.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Pathname&lt;/code&gt;</ph>无效或包含通配符。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve">
          <source>Target file does not exist.</source>
          <target state="translated">目标文件不存在。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, since the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve">
          <source>Reads data from an open sequential file and assigns the data to variables.</source>
          <target state="translated">从打开的顺序文件中读取数据并将数据赋给变量。</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Input`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Input`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`Input`</ph> is usually written to a file by using <ph id="ph2">`Write`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`Input`</ph>通过使用通常写入到文件<ph id="ph2">`Write`</ph>。</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 2005 源文件。</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve">
          <source>When read, standard string or numeric data is assigned to variables without modification.</source>
          <target state="translated">读取时，标准字符串或数值数据就赋给变量而不进行修改。</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve">
          <source>The following table illustrates how other input data is treated.</source>
          <target state="translated">下表说明了如何处理其他输入的数据。</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Data|Value assigned to variable|   |Delimiting comma or blank line|Empty|   |#NULL#|<ph id="ph1">`DBNull`</ph>|   |#TRUE# or #FALSE#|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|   |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|The date and/or time represented by the expression|   |#ERROR <ph id="ph5">`errornumber`</ph><ph id="ph6">#|</ph><ph id="ph7">`errornumber`</ph> (variable is an object tagged as an error)|       If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</source>
          <target state="translated">|||  |-|-|  |数据 |分配给变量的值 |  |分隔逗号或空白的行 |空 |  | #NULL #|<ph id="ph1">`DBNull`</ph>|  | #TRUE # 或 #FALSE #|<ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph>|  |#<ph id="ph4">`yyyy-mm-dd hh:mm:ss`</ph>#|日期和/或表达式所表示的时间 |  |#ERROR <ph id="ph5">`errornumber`</ph> <ph id="ph6">#|</ph> <ph id="ph7">`errornumber`</ph> （变量是一个对象标记为错误） |      如果在输入数据项时达到文件末尾，输入已停止，则会出错。</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Input`</ph> function is not localized.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Input`</ph>函数未进行本地化。</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve">
          <source>For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</source>
          <target state="translated">例如，在德国的版本中，如果输入 3,14159，则返回仅 3，因为逗号将被视为变量分隔符而不是作为小数点。</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`Input`</ph> function requires <ph id="ph3">`Read`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`Input`</ph>函数需要<ph id="ph3">`Read`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve">
          <source>Variable that is assigned the values read from the file—cannot be an array or object variable.</source>
          <target state="translated">从文件中读取变量分配值-不能为数组或对象变量。</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that contains characters from a file opened in <bpt id="p2">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> mode.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含文件中的字符的值在中打开<bpt id="p2">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>模式。</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_InputString" name="InputString" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_InputString" name="InputString" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`InputString`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`InputString`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve">
          <source>Data read with the <ph id="ph1">`InputString`</ph> function is usually written to a file by using <ph id="ph2">`Print`</ph> or <ph id="ph3">`FilePut`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`InputString`</ph>函数通常通过使用写入到文件<ph id="ph2">`Print`</ph>或<ph id="ph3">`FilePut`</ph>。</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve">
          <source>Use this function only with files opened in <ph id="ph1">`Input`</ph> or <ph id="ph2">`Binary`</ph> mode.</source>
          <target state="translated">此函数只能用于的文件在打开<ph id="ph1">`Input`</ph>或<ph id="ph2">`Binary`</ph>模式。</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve">
          <source>Unlike the <ph id="ph1">`Input`</ph> function, the <ph id="ph2">`InputString`</ph> function returns all the characters it reads.</source>
          <target state="translated">与不同<ph id="ph1">`Input`</ph>函数，<ph id="ph2">`InputString`</ph>函数返回它所读取的所有字符。</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve">
          <source>This includes commas, carriage returns, line feeds, quotation marks, and leading spaces.</source>
          <target state="translated">这包括逗号、 回车、 换行符、 引号引起来和前导空格。</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve">
          <source>With files opened for <ph id="ph1">`Binary`</ph> access, an attempt to read through the file by using the <ph id="ph2">`InputString`</ph> function until <ph id="ph3">`EOF`</ph> returns <ph id="ph4">`True`</ph> generates an error.</source>
          <target state="translated">打开以进行文件与<ph id="ph1">`Binary`</ph>访问，请尝试使用读取通过文件<ph id="ph2">`InputString`</ph>函数直到<ph id="ph3">`EOF`</ph>返回<ph id="ph4">`True`</ph>生成错误。</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`LOF`</ph> and <ph id="ph2">`Loc`</ph> functions instead of <ph id="ph3">`EOF`</ph> when you read binary files by using <ph id="ph4">`InputString`</ph>, or use <ph id="ph5">`FileGet`</ph> when you use the <ph id="ph6">`EOF`</ph> function.</source>
          <target state="translated">使用<ph id="ph1">`LOF`</ph>和<ph id="ph2">`Loc`</ph>函数而不是<ph id="ph3">`EOF`</ph>时通过使用读取二进制文件<ph id="ph4">`InputString`</ph>，或使用<ph id="ph5">`FileGet`</ph>当你使用<ph id="ph6">`EOF`</ph>函数。</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When reading from files, do not make security decisions about the contents of the file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的安全决策。</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve">
          <source>For example, a file named Form1.vb may not be a Visual Basic source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 源文件。</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve">
          <source>Any valid numeric expression specifying the number of characters to read.</source>
          <target state="translated">任何有效的数值表达式，用于指定要读取的字符数。</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that contains characters from a file opened in <bpt id="p2">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> mode.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含文件中的字符的值在中打开<bpt id="p2">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_Binary" name="Binary" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>模式。</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_InputString" name="InputString" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_InputString" name="InputString" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;FileNumber&lt;/code&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;FileNumber&lt;/code&gt;</ph>不存在。</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;CharCount&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 or <ph id="ph3">&amp;gt;</ph> 214.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;CharCount&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 0 or <ph id="ph3">&amp;gt;</ph> 214.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve">
          <source>Deletes files from a disk.</source>
          <target state="translated">从磁盘中删除文件。</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Kill" name="Kill" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Kill" name="Kill" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> .</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 。</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Kill`</ph> supports the use of multiple-character (<ph id="ph2">`*`</ph>) and single-character (<ph id="ph3">`?`</ph>) wildcards to specify multiple files.</source>
          <target state="translated"><ph id="ph1">`Kill`</ph>支持使用多个字符 (<ph id="ph2">`*`</ph>) 和单字符 (<ph id="ph3">`?`</ph>) 通配符来指定多个文件。</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> In order to execute, the <ph id="ph1">`Kill`</ph> function requires <ph id="ph2">`Read`</ph> and <ph id="ph3">`PathDiscovery`</ph> flags of &lt;xref:System.Security.Permissions.FileIOPermission&gt; to be granted to the executing code.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全说明<ept id="p1">**</ept>才能执行，<ph id="ph1">`Kill`</ph>函数需要<ph id="ph2">`Read`</ph>和<ph id="ph3">`PathDiscovery`</ph>标志&lt;xref:System.Security.Permissions.FileIOPermission&gt;才能被授予对执行代码。&lt;/xref:System.Security.Permissions.FileIOPermission&gt;</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.SecurityException&gt;<bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept></source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.SecurityException&gt;<bpt id="p1">[</bpt>代码访问权限<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies one or more file names to be deleted.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定要删除的一个或多个文件名称的表达式。</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PathName`</ph> can include the directory or folder, and the drive.</source>
          <target state="translated"><ph id="ph1">`PathName`</ph>可以包含目录或驱动器和文件夹。</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve">
          <source>Target file(s) open.</source>
          <target state="translated">目标文件打开。</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve">
          <source>Target file(s) not found.</source>
          <target state="translated">找不到的目标文件。</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve">
          <source>Permission denied.</source>
          <target state="translated">权限被拒绝。</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve">
          <source>Reads a single line from an open sequential file and assigns it to a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable.</source>
          <target state="translated">从打开的顺序文件中读取单个行，并将它分配给<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>变量。</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`LineInput`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`LineInput`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve">
          <source>Data read with <ph id="ph1">`LineInput`</ph> is usually written to a file by using <ph id="ph2">`Print`</ph>.</source>
          <target state="translated">数据读取<ph id="ph1">`LineInput`</ph>通过使用通常写入到文件<ph id="ph2">`Print`</ph>。</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When reading from files, do not make decisions about the contents of a file based on the file name extension.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时从文件读取，不要做出有关内容的基于文件扩展名的文件的决策。</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve">
          <source>For example, a file that is named Form1.vb may not be a Visual Basic source file.</source>
          <target state="translated">例如，名为 Form1.vb 文件可能不是 Visual Basic 源文件。</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`LineInput`</ph> function reads from a file one character at a time until it encounters a carriage return (<ph id="ph2">`Chr(`</ph>13<ph id="ph3">`)`</ph>) or carriage return/line feed (<ph id="ph4">`Chr(`</ph>13<ph id="ph5">`)`</ph><ph id="ph6"> + </ph><ph id="ph7">`Chr(`</ph>10<ph id="ph8">`)`</ph>) sequence.</source>
          <target state="translated"><ph id="ph1">`LineInput`</ph>函数一次直到它遇到一个回车读取从文件的一个字符 (<ph id="ph2">`Chr(`</ph>13<ph id="ph3">`)`</ph>) 或回车/换行 (<ph id="ph4">`Chr(`</ph>13<ph id="ph5">`)`</ph><ph id="ph6"> + </ph><ph id="ph7">`Chr(`</ph>10<ph id="ph8">`)`</ph>) 序列。</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve">
          <source>Carriage return/line feed sequences are skipped instead of appended to the character string.</source>
          <target state="translated">回车符/换行符源的序列将跳过而不是追加到字符字符串。</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Reading from a file by using the <ph id="ph2">`LineInput`</ph> function requires <ph id="ph3">`Read`</ph> access from the &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; enumeration.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 者使用从文件读取<ph id="ph2">`LineInput`</ph>函数需要<ph id="ph3">`Read`</ph>从访问&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;枚举。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve">
          <source>Reads a single line from an open sequential file and assigns it to a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable.</source>
          <target state="translated">从打开的顺序文件中读取单个行，并将它分配给<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>变量。</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve">
          <source>End of file reached.</source>
          <target state="translated">已到达文件尾。</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;FileNumber&lt;/code&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;FileNumber&lt;/code&gt;</ph>不存在。</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the current read/write position in an open file.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值指定打开的文件中的当前读/写位置。</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Loc`</ph> function is zero-based; using it to retrieve the first byte in a file will return 0.</source>
          <target state="translated"><ph id="ph1">`Loc`</ph>函数是从零开始; 使用它来检索文件中的第一个字节将返回 0。</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Loc`</ph> function is provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Loc`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve">
          <source>The following describes the return value for each file access mode:      |||   |-|-|   |Mode|Return value|   |<ph id="ph1">`Random`</ph>|Number of the last record read from or written to the file.|   |<ph id="ph2">`Sequential`</ph>|Current byte position in the file divided by 128.</source>
          <target state="translated">下面介绍每种文件访问模式的返回值: | | |  |-|-|  |模式 |返回值 |  |<ph id="ph1">`Random`</ph>|读取或写入到文件的最后一个记录编号。 |  |<ph id="ph2">`Sequential`</ph>|除以 128 文件中的当前字节位置。</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve">
          <source>However, information returned by <ph id="ph1">`Loc`</ph> for sequential files is neither used nor required.|   |<ph id="ph2">`Binary`</ph>|Position of the last byte read or written.|</source>
          <target state="translated">但是，通过返回信息<ph id="ph1">`Loc`</ph>为顺序文件不是使用也不需要。 |  |<ph id="ph2">`Binary`</ph>|读取或写入的最后一个字节的位置。 |</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> file number.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>文件数。</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the current read/write position in an open file.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值指定打开的文件中的当前读/写位置。</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve">
          <source>Controls access by other processes to all or part of a file opened by using the <bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">通过使用打开的文件的全部或部分其他进程来控制访问<bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和<bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are used in environments where several processes might need access to the same file.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数是在环境中使用其中多个进程可能需要访问同一文件。</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are always used in pairs.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数始终成对使用。</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve">
          <source>The arguments to <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> must be identical.</source>
          <target state="translated">自变量<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>必须相同。</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph>, or <ph id="ph2">`FromRecord`</ph> and <ph id="ph3">`ToRecord`</ph> are not supplied, the lock will be for the whole file.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>，或<ph id="ph2">`FromRecord`</ph>和<ph id="ph3">`ToRecord`</ph>是未提供，将被锁定整个文件。</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph> alone is specified the single record will be locked/unlocked.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>单独指定单个记录将锁定/解锁。</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve">
          <source>If the file has been opened for sequential input or output, <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> affect the whole file, regardless of the range specified by <ph id="ph3">`FromRecord`</ph> and<ph id="ph4">`ToRecord`</ph>.</source>
          <target state="translated">如果已打开文件进行连续的输入或输出，<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>影响整个文件，而不考虑指定的范围<ph id="ph3">`FromRecord`</ph>和<ph id="ph4">`ToRecord`</ph>。</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve">
          <source>Controls access by other processes to all or part of a file opened by using the <bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">通过使用打开的文件的全部或部分其他进程来控制访问<bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和<bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are used in environments where several processes might need access to the same file.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数是在环境中使用其中多个进程可能需要访问同一文件。</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are always used in pairs.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数始终成对使用。</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve">
          <source>The arguments to <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> must be identical.</source>
          <target state="translated">自变量<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>必须相同。</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph>, or <ph id="ph2">`FromRecord`</ph> and <ph id="ph3">`ToRecord`</ph> are not supplied, the lock will be for the whole file.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>，或<ph id="ph2">`FromRecord`</ph>和<ph id="ph3">`ToRecord`</ph>是未提供，将被锁定整个文件。</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph> alone is specified the single record will be locked/unlocked.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>单独指定单个记录将锁定/解锁。</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve">
          <source>If the file has been opened for sequential input or output, <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> affect the whole file, regardless of the range specified by <ph id="ph3">`FromRecord`</ph> and<ph id="ph4">`ToRecord`</ph>.</source>
          <target state="translated">如果已打开文件进行连续的输入或输出，<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>影响整个文件，而不考虑指定的范围<ph id="ph3">`FromRecord`</ph>和<ph id="ph4">`ToRecord`</ph>。</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve">
          <source>Number of the only record or byte to lock or unlock</source>
          <target state="translated">数的唯一记录或锁定或解锁的字节</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve">
          <source>Controls access by other processes to all or part of a file opened by using the <bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">通过使用打开的文件的全部或部分其他进程来控制访问<bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和<bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are used in environments where several processes might need access to the same file.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数是在环境中使用其中多个进程可能需要访问同一文件。</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are always used in pairs.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数始终成对使用。</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve">
          <source>The arguments to <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> must be identical.</source>
          <target state="translated">自变量<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>必须相同。</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph>, or <ph id="ph2">`FromRecord`</ph> and <ph id="ph3">`ToRecord`</ph> are not supplied, the lock will be for the whole file.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>，或<ph id="ph2">`FromRecord`</ph>和<ph id="ph3">`ToRecord`</ph>是未提供，将被锁定整个文件。</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph> alone is specified the single record will be locked/unlocked.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>单独指定单个记录将锁定/解锁。</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve">
          <source>If the file has been opened for sequential input or output, <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> affect the whole file, regardless of the range specified by <ph id="ph3">`FromRecord`</ph> and<ph id="ph4">`ToRecord`</ph>.</source>
          <target state="translated">如果已打开文件进行连续的输入或输出，<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>影响整个文件，而不考虑指定的范围<ph id="ph3">`FromRecord`</ph>和<ph id="ph4">`ToRecord`</ph>。</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve">
          <source>Number of the first record or byte to lock or unlock.</source>
          <target state="translated">第一个记录或锁定或解锁的字节数。</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve">
          <source>Number of the last record or byte to lock or unlock.</source>
          <target state="translated">最后一个记录或锁定或解锁的字节数。</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the size, in bytes, of a file opened by using the <bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示的大小，以字节为单位，文件的打开使用<bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_LOF" name="LOF" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_LOF" name="LOF" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`FileLen`</ph> function to obtain the length of a file that is not open.</source>
          <target state="translated">使用<ph id="ph1">`FileLen`</ph>函数来获取未打开的文件的长度。</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a valid file number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含有效的文件数。</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the size, in bytes, of a file opened by using the <bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示的大小，以字节为单位，文件的打开使用<bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_LOF" name="LOF" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_LOF" name="LOF" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve">
          <source>Creates a new directory.</source>
          <target state="translated">创建一个新目录。</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_MkDir" name="MkDir" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_MkDir" name="MkDir" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*&gt;。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*&gt;</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve">
          <source>This function creates a new directory.</source>
          <target state="translated">此函数将创建一个新目录。</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that identifies the directory to be created.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>标识要创建的目录的表达式。</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Path`</ph> may include the drive.</source>
          <target state="translated"><ph id="ph1">`Path`</ph>可能包括驱动器。</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve">
          <source>If no drive is specified, <bpt id="p1">&lt;xref uid="langword_csharp_MkDir" name="MkDir" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> creates the new directory on the current drive.</source>
          <target state="translated">如果未指定驱动器， <bpt id="p1">&lt;xref uid="langword_csharp_MkDir" name="MkDir" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>当前的驱动器上创建新目录。</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Path&lt;/code&gt;</ph> is not specified or is empty.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Path&lt;/code&gt;</ph>未指定或为空。</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve">
          <source>Permission denied.</source>
          <target state="translated">权限被拒绝。</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve">
          <source>Directory already exists.</source>
          <target state="translated">目录已存在。</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve">
          <source>Writes display-formatted data to a sequential file.</source>
          <target state="translated">将显示格式的数据写入顺序文件。</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Print`</ph> and <ph id="ph2">`PrintLine`</ph> functions are provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Print`</ph>和<ph id="ph2">`PrintLine`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Print`</ph> does not include a line feed at the end of a line; however, <ph id="ph2">`PrintLine`</ph> does include a line feed.</source>
          <target state="translated"><ph id="ph1">`Print`</ph>不包括换行符末尾的换行符。但是，<ph id="ph2">`PrintLine`</ph>包括换行符。</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`Print`</ph> is usually read from a file by using <ph id="ph2">`LineInput`</ph> or <ph id="ph3">`Input`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`Print`</ph>从文件通常通过使用读取<ph id="ph2">`LineInput`</ph>或<ph id="ph3">`Input`</ph>。</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`Output`</ph> for <ph id="ph2">`PrintLine`</ph>, a blank line is printed to the file; for <ph id="ph3">`Print`</ph>, nothing is output.</source>
          <target state="translated">如果省略<ph id="ph1">`Output`</ph>为<ph id="ph2">`PrintLine`</ph>，该文件; 有关打印一个空行<ph id="ph3">`Print`</ph>，没有输出。</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve">
          <source>Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and <ph id="ph1">`TAB`</ph> may cause inconsistent results.</source>
          <target state="translated">将在选项卡上边界，但混合使用逗号上对齐多个以逗号分隔的表达式和<ph id="ph1">`TAB`</ph>可能会导致不一致的结果。</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`Boolean`</ph> data, either <ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph> is printed.</source>
          <target state="translated">有关<ph id="ph1">`Boolean`</ph>数据，<ph id="ph2">`True`</ph>或<ph id="ph3">`False`</ph>打印。</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`True`</ph> and <ph id="ph2">`False`</ph> keywords are not translated, regardless of the locale.</source>
          <target state="translated"><ph id="ph1">`True`</ph>和<ph id="ph2">`False`</ph>无论区域设置如何，都不翻译关键字。</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve">
          <source>Date data is written to the file by using the standard short date format recognized by your system.</source>
          <target state="translated">日期数据写入文件，通过使用你的系统所识别的标准短日期格式。</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve">
          <source>When either the date or the time component is missing or zero, only the part provided is written to the file.</source>
          <target state="translated">时的日期或时间组件缺失或为零时，仅提供部分是写入文件。</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve">
          <source>Nothing is written to the file if <ph id="ph1">`Output`</ph> data is empty.</source>
          <target state="translated">执行任何操作写入文件，如果<ph id="ph1">`Output`</ph>数据为空。</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve">
          <source>However, if <ph id="ph1">`Output`</ph> list data is <ph id="ph2">`DBNull`</ph>, <ph id="ph3">`Null`</ph> is written to the file.</source>
          <target state="translated">但是，如果<ph id="ph1">`Output`</ph>列表数据是<ph id="ph2">`DBNull`</ph>，<ph id="ph3">`Null`</ph>写入到文件。</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`Error`</ph> data, the output appears as <ph id="ph2">`Error errorcode`</ph>.</source>
          <target state="translated">有关<ph id="ph1">`Error`</ph>数据，输出将显示为<ph id="ph2">`Error errorcode`</ph>。</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Error`</ph> keyword is not translated regardless of the locale.</source>
          <target state="translated"><ph id="ph1">`Error`</ph>关键字不会进行转换而不考虑区域设置。</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve">
          <source>All data written to the file by using <ph id="ph1">`Print`</ph> is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</source>
          <target state="translated">通过使用写入到文件的所有数据<ph id="ph1">`Print`</ph>是国际通用的; 即，数据的格式正确使用适当的小数分隔符。</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve">
          <source>If the user wishes to output data for use by multiple locales, <ph id="ph1">`Write`</ph> should be used.</source>
          <target state="translated">如果用户想要输出以供多个区域设置中，数据<ph id="ph1">`Write`</ph>应使用。</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve">
          <source>Writing to a file by using the <ph id="ph1">`Print`</ph> or <ph id="ph2">`PrintLine`</ph> functions requires <ph id="ph3">`Write`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">通过使用对文件进行写入<ph id="ph1">`Print`</ph>或<ph id="ph2">`PrintLine`</ph>函数需要<ph id="ph3">`Write`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; .</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve">
          <source>Zero or more comma-delimited expressions to write to a file.</source>
          <target state="translated">零个或多个以逗号分隔表达式以写入到的文件。</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Output`</ph> argument settings are:       <bpt id="p1">&lt;xref uid="langword_csharp_T:System.IO.IOException" name="T:System.IO.IOException" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: File mode is invalid.</source>
          <target state="translated"><ph id="ph1">`Output`</ph>自变量设置不︰ <bpt id="p1">&lt;xref uid="langword_csharp_T:System.IO.IOException" name="T:System.IO.IOException" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>︰ 文件模式无效。</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_T:System.IO.IOException" name="T:System.IO.IOException" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <ph id="ph1">`FileNumber`</ph> does not exist.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_T:System.IO.IOException" name="T:System.IO.IOException" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>:<ph id="ph1">`FileNumber`</ph>不存在。</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve">
          <source>Writes display-formatted data to a sequential file.</source>
          <target state="translated">将显示格式的数据写入顺序文件。</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Print`</ph> and <ph id="ph2">`PrintLine`</ph> functions are provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Print`</ph>和<ph id="ph2">`PrintLine`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Print`</ph> does not include a line feed at the end of a line; however,<ph id="ph2">`PrintLine`</ph> does include a line feed.</source>
          <target state="translated"><ph id="ph1">`Print`</ph>不包括换行符末尾的换行符。但是，<ph id="ph2">`PrintLine`</ph>包括换行符。</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve">
          <source>Data written with <ph id="ph1">`Print`</ph> is usually read from a file by using <ph id="ph2">`LineInput`</ph> or <ph id="ph3">`Input`</ph>.</source>
          <target state="translated">数据使用编写<ph id="ph1">`Print`</ph>从文件通常通过使用读取<ph id="ph2">`LineInput`</ph>或<ph id="ph3">`Input`</ph>。</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`Output`</ph> for <ph id="ph2">`PrintLine`</ph>, a blank line is printed to the file; for <ph id="ph3">`Print`</ph>, nothing is output.</source>
          <target state="translated">如果省略<ph id="ph1">`Output`</ph>为<ph id="ph2">`PrintLine`</ph>，该文件; 有关打印一个空行<ph id="ph3">`Print`</ph>，没有输出。</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve">
          <source>Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and <ph id="ph1">`TAB`</ph> may cause inconsistent results.</source>
          <target state="translated">将在选项卡上边界，但混合使用逗号上对齐多个以逗号分隔的表达式和<ph id="ph1">`TAB`</ph>可能会导致不一致的结果。</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`Boolean`</ph> data, either <ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph> is printed.</source>
          <target state="translated">有关<ph id="ph1">`Boolean`</ph>数据，<ph id="ph2">`True`</ph>或<ph id="ph3">`False`</ph>打印。</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`True`</ph> and <ph id="ph2">`False`</ph> keywords are not translated, regardless of the locale.</source>
          <target state="translated"><ph id="ph1">`True`</ph>和<ph id="ph2">`False`</ph>无论区域设置如何，都不翻译关键字。</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve">
          <source>Date data is written to the file by using the standard short date format recognized by the system.</source>
          <target state="translated">日期数据写入文件，通过使用系统所识别的标准短日期格式。</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve">
          <source>When either the date or the time component is missing or zero, only the part provided is written to the file.</source>
          <target state="translated">时的日期或时间组件缺失或为零时，仅提供部分是写入文件。</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve">
          <source>Nothing is written to the file if <ph id="ph1">`Output`</ph> data is empty.</source>
          <target state="translated">执行任何操作写入文件，如果<ph id="ph1">`Output`</ph>数据为空。</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve">
          <source>However, if <ph id="ph1">`Output`</ph> list data is <ph id="ph2">`DBNull`</ph>, <ph id="ph3">`Null`</ph> is written to the file.</source>
          <target state="translated">但是，如果<ph id="ph1">`Output`</ph>列表数据是<ph id="ph2">`DBNull`</ph>，<ph id="ph3">`Null`</ph>写入到文件。</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`Error`</ph> data, the output appears as <ph id="ph2">`Error errorcode`</ph>.</source>
          <target state="translated">有关<ph id="ph1">`Error`</ph>数据，输出将显示为<ph id="ph2">`Error errorcode`</ph>。</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Error`</ph> keyword is not translated regardless of the locale.</source>
          <target state="translated"><ph id="ph1">`Error`</ph>关键字不会进行转换而不考虑区域设置。</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve">
          <source>All data written to the file by using <ph id="ph1">`Print`</ph> is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</source>
          <target state="translated">通过使用写入到文件的所有数据<ph id="ph1">`Print`</ph>是国际通用的; 即，数据的格式正确使用适当的小数分隔符。</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve">
          <source>If the user wishes to output data for use by multiple locales, <ph id="ph1">`Write`</ph> should be used.</source>
          <target state="translated">如果用户想要输出以供多个区域设置中，数据<ph id="ph1">`Write`</ph>应使用。</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve">
          <source>Writing to a file by using the <ph id="ph1">`Print`</ph> or <ph id="ph2">`PrintLine`</ph> functions requires <ph id="ph3">`Write`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">通过使用对文件进行写入<ph id="ph1">`Print`</ph>或<ph id="ph2">`PrintLine`</ph>函数需要<ph id="ph3">`Write`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; .</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve">
          <source>Zero or more comma-delimited expressions to write to a file.</source>
          <target state="translated">零个或多个以逗号分隔表达式以写入到的文件。</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Output`</ph> argument settings are:       <bpt id="p1">&lt;xref uid="langword_csharp_T:System.IO.IOException" name="T:System.IO.IOException" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: File mode is invalid.</source>
          <target state="translated"><ph id="ph1">`Output`</ph>自变量设置不︰ <bpt id="p1">&lt;xref uid="langword_csharp_T:System.IO.IOException" name="T:System.IO.IOException" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>︰ 文件模式无效。</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_T:System.IO.IOException" name="T:System.IO.IOException" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <ph id="ph1">`FileNumber`</ph> does not exist.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_T:System.IO.IOException" name="T:System.IO.IOException" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>:<ph id="ph1">`FileNumber`</ph>不存在。</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve">
          <source>Renames a disk file or directory.</source>
          <target state="translated">重命名的磁盘文件或目录。</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Rename" name="Rename" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Rename" name="Rename" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve">
          <source>The<ph id="ph1">`Rename`</ph> function renames a file and moves it to a different directory, if it is required.</source>
          <target state="translated"><ph id="ph1">`Rename`</ph>函数重命名文件，并将其移动到不同的目录，如有必要。</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Rename`</ph> function can move a file across drives, but it can only rename an existing directory when both <ph id="ph2">`NewPath`</ph> and <ph id="ph3">`OldPath`</ph> are located on the same drive.</source>
          <target state="translated"><ph id="ph1">`Rename`</ph>函数可以将文件移个驱动器，但它仅可以重命名现有目录时同时<ph id="ph2">`NewPath`</ph>和<ph id="ph3">`OldPath`</ph>位于相同的驱动器上。</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Rename`</ph> cannot create a new file or directory.</source>
          <target state="translated"><ph id="ph1">`Rename`</ph>无法创建新文件或目录。</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">`Rename`</ph> function on an open file produces an error.</source>
          <target state="translated">使用<ph id="ph1">`Rename`</ph>函数对打开的文件产生错误。</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve">
          <source>You must close an open file before renaming it.</source>
          <target state="translated">重命名它前，必须先关闭打开的文件。</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Rename`</ph> arguments cannot include multiple-character (*) and single-character (?) wildcards.</source>
          <target state="translated"><ph id="ph1">`Rename`</ph>自变量不能包含多个字符 （*） 和单字符 （？） 通配符。</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When using <ph id="ph2">`Rename`</ph> to copy a file from an unprotected location to a protected location, the file retains the less restricted rights.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时使用<ph id="ph2">`Rename`</ph>以将文件从受保护的位置复制到受保护的位置，该文件，仍保持较低的限制的权限。</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve">
          <source>Check to make sure that you are not introducing a possible security risk.</source>
          <target state="translated">请检查以确保没有引入可能的安全风险。</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the existing file name and location.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的现有文件名称和位置的表达式。</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`OldPath`</ph> may include the directory, and drive, of the file.</source>
          <target state="translated"><ph id="ph1">`OldPath`</ph>可能包括的目录和驱动器，该文件。</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the new file name and location.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定新文件名和位置的表达式。</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`NewPath`</ph> may include directory and drive of the destination location.</source>
          <target state="translated"><ph id="ph1">`NewPath`</ph>可能包括的目标位置的目录和驱动器。</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve">
          <source>The file name specified by <ph id="ph1">`NewPath`</ph> cannot already exist.</source>
          <target state="translated">指定的文件名称<ph id="ph1">`NewPath`</ph>不能存在。</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve">
          <source>Path is invalid.</source>
          <target state="translated">路径无效。</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;OldPath&lt;/code&gt;</ph> file does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;OldPath&lt;/code&gt;</ph>文件不存在。</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve">
          <source>Cannot rename to different device.</source>
          <target state="translated">无法重命名为不同的设备。</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve">
          <source>Closes all disk files opened by using the <bpt id="p1">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">关闭所有打开的磁盘文件使用<bpt id="p1">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Reset" name="Reset" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Reset" name="Reset" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Reset`</ph> function closes all active files opened by the <ph id="ph2">`FileOpen`</ph> function and has the same function as <ph id="ph3">`FileClose()`</ph> without any parameters.</source>
          <target state="translated"><ph id="ph1">`Reset`</ph>函数关闭打开的所有活动文件<ph id="ph2">`FileOpen`</ph>函数，并且具有相同的功能<ph id="ph3">`FileClose()`</ph>不带任何参数。</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve">
          <source>Removes an existing directory.</source>
          <target state="translated">删除现有的目录。</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_RmDir" name="RmDir" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_RmDir" name="RmDir" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*&gt;。&lt;/xref:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*&gt;</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve">
          <source>An error occurs if you try to use <ph id="ph1">`RmDir`</ph> on a directory that contains files.</source>
          <target state="translated">如果你尝试使用，则会发生错误<ph id="ph1">`RmDir`</ph>在包含文件的目录。</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Kill`</ph> function to delete all files before you try to remove a directory.</source>
          <target state="translated">使用<ph id="ph1">`Kill`</ph>函数以删除所有文件，然后尝试删除一个目录。</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that identifies the directory or folder to be removed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>标识目录或要删除的文件夹的表达式。</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Path`</ph> can include the drive.</source>
          <target state="translated"><ph id="ph1">`Path`</ph>可以包含驱动器。</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve">
          <source>If no drive is specified, <bpt id="p1">&lt;xref uid="langword_csharp_RmDir" name="RmDir" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> removes the directory on the current drive.</source>
          <target state="translated">如果未指定驱动器， <bpt id="p1">&lt;xref uid="langword_csharp_RmDir" name="RmDir" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中删除当前的驱动器上的目录。</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Path&lt;/code&gt;</ph> is not specified or is empty.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Path&lt;/code&gt;</ph>未指定或为空。</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve">
          <source>Target directory contains files.</source>
          <target state="translated">目标目录包含文件。</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve">
          <source>Directory does not exist.</source>
          <target state="translated">目录不存在。</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying the current read/write position in a file opened by using the <bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function, or sets the position for the next read/write operation in a file opened by using the <bpt id="p3">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过指定文件中的当前读/写位置打开<bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数或通过打开下, 一步的读/写操作的文件中的位置设置<bpt id="p3">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Seek" name="Seek" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Seek" name="Seek" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Seek`</ph> returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</source>
          <target state="translated"><ph id="ph1">`Seek`</ph>返回一个值介于 1 和 2,147,483,647 之间 (等效于 2 ^31-1) （含）。</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve">
          <source>The following describes the return values for each file access mode:      |||   |-|-|   |Mode|Return Value|   |<ph id="ph1">`Random`</ph>|Number of the next record read or written|   |<ph id="ph2">`Binary`</ph>, <ph id="ph3">`Input`</ph>, <ph id="ph4">`Output`</ph>, <ph id="ph5">`Append`</ph>|Byte position at which the next operation occurs.</source>
          <target state="translated">下面介绍每种文件访问模式的返回值: | | |  |-|-|  |模式 |返回值 |  |<ph id="ph1">`Random`</ph>|读取或写入的下一步记录号 |  |<ph id="ph2">`Binary`</ph>, <ph id="ph3">`Input`</ph>, <ph id="ph4">`Output`</ph>, <ph id="ph5">`Append`</ph>|下一步操作的发生的字节位置。</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve">
          <source>The first byte in a file is at position 1, the second byte is at position 2, and so on.|</source>
          <target state="translated">在文件中的第一个字节在位置 1，第二个字节在位置 2，依此类推。 |</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a valid file number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含有效的文件数。</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying the current read/write position in a file opened by using the <bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function, or sets the position for the next read/write operation in a file opened by using the <bpt id="p3">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过指定文件中的当前读/写位置打开<bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数或通过打开下, 一步的读/写操作的文件中的位置设置<bpt id="p3">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying the current read/write position in a file opened by using the <bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function, or sets the position for the next read/write operation in a file opened by using the <bpt id="p3">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过指定文件中的当前读/写位置打开<bpt id="p2">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数或通过打开下, 一步的读/写操作的文件中的位置设置<bpt id="p3">&lt;xref uid="langword_csharp_FileOpen" name="FileOpen" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Seek" name="Seek" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Seek" name="Seek" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Seek`</ph> returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</source>
          <target state="translated"><ph id="ph1">`Seek`</ph>返回一个值介于 1 和 2,147,483,647 之间 (等效于 2 ^31-1) （含）。</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve">
          <source>The following describes the return values for each file access mode:      |||   |-|-|   |Mode|Return Value|   |<ph id="ph1">`Random`</ph>|Number of the next record read or written|   |<ph id="ph2">`Binary`</ph>, <ph id="ph3">`Input`</ph>, <ph id="ph4">`Output`</ph>, <ph id="ph5">`Append`</ph>|Byte position at which the next operation occurs.</source>
          <target state="translated">下面介绍每种文件访问模式的返回值: | | |  |-|-|  |模式 |返回值 |  |<ph id="ph1">`Random`</ph>|读取或写入的下一步记录号 |  |<ph id="ph2">`Binary`</ph>, <ph id="ph3">`Input`</ph>, <ph id="ph4">`Output`</ph>, <ph id="ph5">`Append`</ph>|下一步操作的发生的字节位置。</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve">
          <source>The first byte in a file is at position 1, the second byte is at position 2, and so on.|</source>
          <target state="translated">在文件中的第一个字节在位置 1，第二个字节在位置 2，依此类推。 |</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a valid file number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含有效的文件数。</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve">
          <source>Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</source>
          <target state="translated">1 – 2147483647，（含)，范围内的数字，用于指示下一个读/写操作的其中应发生。</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve">
          <source>Sets attribute information for a file.</source>
          <target state="translated">设置属性的文件信息。</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_SetAttr" name="SetAttr" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_SetAttr" name="SetAttr" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve">
          <source>A run-time error occurs if you try to set the attributes of an open file.</source>
          <target state="translated">如果您尝试设置打开的文件的属性，则会发生运行时错误。</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Attributes`</ph> argument enumeration values are as follows:      ||||   |-|-|-|   |Value|Constant|Description|   |<ph id="ph2">`Normal`</ph><ph id="ph3">|</ph><ph id="ph4">`vbNormal`</ph>|Normal (default).|   |<ph id="ph5">`ReadOnly`</ph><ph id="ph6">|</ph><ph id="ph7">`vbReadOnly`</ph>|Read-only.|   |<ph id="ph8">`Hidden`</ph><ph id="ph9">|</ph><ph id="ph10">`vbHidden`</ph>|Hidden.|   |<ph id="ph11">`System`</ph><ph id="ph12">|</ph><ph id="ph13">`vbSystem`</ph>|System file.|   |<ph id="ph14">`Volume`</ph><ph id="ph15">|</ph><ph id="ph16">`vbVolume`</ph>|Volume label|   |<ph id="ph17">`Directory`</ph><ph id="ph18">|</ph><ph id="ph19">`vbDirectory`</ph>|Directory or folder.|   |<ph id="ph20">`Archive`</ph><ph id="ph21">|</ph><ph id="ph22">`vbArchive`</ph>|File has changed since last backup.|   |<ph id="ph23">`Alias`</ph><ph id="ph24">|</ph><ph id="ph25">`vbAlias`</ph>|File has a different name.|      &gt; <ph id="ph26">[!NOTE]</ph> &gt;  These enumerations are specified by the Visual Basic language.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph>参数枚举值如下: | | |  |-|-|-|  |值 |常量 |说明 |  |<ph id="ph2">`Normal`</ph><ph id="ph3">|</ph><ph id="ph4">`vbNormal`</ph>|正常 （默认值）。 |  |<ph id="ph5">`ReadOnly`</ph><ph id="ph6">|</ph><ph id="ph7">`vbReadOnly`</ph>|只读的。 |  |<ph id="ph8">`Hidden`</ph><ph id="ph9">|</ph><ph id="ph10">`vbHidden`</ph>|隐藏。 |  |<ph id="ph11">`System`</ph><ph id="ph12">|</ph><ph id="ph13">`vbSystem`</ph>|系统文件。 |  |<ph id="ph14">`Volume`</ph><ph id="ph15">|</ph><ph id="ph16">`vbVolume`</ph>|卷标 |  |<ph id="ph17">`Directory`</ph><ph id="ph18">|</ph><ph id="ph19">`vbDirectory`</ph>|目录或文件夹。 |  |<ph id="ph20">`Archive`</ph><ph id="ph21">|</ph><ph id="ph22">`vbArchive`</ph>|文件自上次备份以来已更改。 |  |<ph id="ph23">`Alias`</ph><ph id="ph24">|</ph><ph id="ph25">`vbAlias`</ph>|文件具有不同的名称。 |    &amp;1;&gt; <ph id="ph26">[!NOTE]</ph>&amp;1;&gt; 这些枚举指定的 Visual Basic 语言。</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve">
          <source>The names can be used anywhere in your code instead of the actual values.</source>
          <target state="translated">名称可以使用而非实际值在代码中的任意位置。</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a file name.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定的文件名称的表达式。</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PathName`</ph> can include directory or folder, and drive.</source>
          <target state="translated"><ph id="ph1">`PathName`</ph>可以包含目录或文件夹和驱动器。</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve">
          <source>Constant or numeric expression, whose sum specifies file attributes.</source>
          <target state="translated">常量或数值表达式，其值用于指定文件属性。</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Attribute&lt;/code&gt;</ph> type is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Attribute&lt;/code&gt;</ph>类型无效。</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve">
          <source>Used with the <bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function to position output.</source>
          <target state="translated">与使用<bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数来确定输出位置。</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Count`</ph> is less than the output line width, the next print position immediately follows the number of spaces printed.</source>
          <target state="translated">如果<ph id="ph1">`Count`</ph>小于输出线条宽度下, 一步打印位置立即遵循的打印的空格数。</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve">
          <source>If<ph id="ph1">`Count`</ph> is greater than the output line width, <ph id="ph2">`SPC`</ph> calculates the next print position using the formula:       <ph id="ph3">`currentprintposition`</ph>(+(<ph id="ph4">`Count``Mod``width`</ph>))       For example, if the current print position is 24, the output line width is 80, and you specify <ph id="ph5">`SPC(`</ph>90<ph id="ph6">`)`</ph>, the next print will start at position 34 (current print position + the remainder of 90/80).</source>
          <target state="translated">如果<ph id="ph1">`Count`</ph>大于输出线条宽度，<ph id="ph2">`SPC`</ph>计算使用公式的下一步打印位置︰ <ph id="ph3">`currentprintposition`</ph>(+ (<ph id="ph4">`Count``Mod``width`</ph>)) 例如，如果打印当前位置为 24，输出行宽度为 80，并且你指定<ph id="ph5">`SPC(`</ph>90<ph id="ph6">`)`</ph>，则下一步打印将开始从位置 34 （打印当前位置 + 90/80 的余数）。</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve">
          <source>If the difference between the current print position and the output line width is less than <ph id="ph1">`Count`</ph> (or <ph id="ph2">`Count`</ph> <ph id="ph3">`Mod`</ph> <bpt id="p1">*</bpt>width<ept id="p1">*</ept>), the <ph id="ph4">`SPC`</ph> function skips to the start of the next line and generates spaces equal to <ph id="ph5">`Count`</ph> – (<bpt id="p2">*</bpt>width<ept id="p2">*</ept> – <bpt id="p3">*</bpt>currentprintposition<ept id="p3">*</ept>).</source>
          <target state="translated">如果当前打印位置和输出线条宽度之间的区别在于小于<ph id="ph1">`Count`</ph>(或<ph id="ph2">`Count`</ph> <ph id="ph3">`Mod`</ph> <bpt id="p1">*</bpt>宽度<ept id="p1">*</ept>)，则<ph id="ph4">`SPC`</ph>函数将跳到下一步的行的开头，并生成空间等于<ph id="ph5">`Count`</ph>– (<bpt id="p2">*</bpt>宽度<ept id="p2">*</ept>–<bpt id="p3">*</bpt>小于<ept id="p3">*</ept>)。</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Make sure your tabular columns are wide enough to allow for wide letters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 确保表格列的宽度足以容纳较宽的字母。</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve">
          <source>The number of spaces to insert before displaying or printing the next expression in a list.</source>
          <target state="translated">要显示或打印列表中的下一步表达式之前插入的空格数。</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve">
          <source>Used with the <bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function to position output.</source>
          <target state="translated">与使用<bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数来确定输出位置。</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve">
          <source>Used with the <bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> functions to position output.</source>
          <target state="translated">与使用<bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数确定输出位置。</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve">
          <source>If the current print position on the current line is larger than <ph id="ph1">`Column`</ph>, <ph id="ph2">`TAB`</ph> skips to the column value equal to <ph id="ph3">`Column`</ph> on the next output line.</source>
          <target state="translated">如果在当前行的当前打印位置大于<ph id="ph1">`Column`</ph>，<ph id="ph2">`TAB`</ph>跳过为列的值等于<ph id="ph3">`Column`</ph>下一步的输出行上。</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Column`</ph> is less than 1, <ph id="ph2">`TAB`</ph> moves the print position to column 1.</source>
          <target state="translated">如果<ph id="ph1">`Column`</ph>小于 1，<ph id="ph2">`TAB`</ph>将打印位置移动到第 1 列。</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Column`</ph> is larger than the output line width, <ph id="ph2">`TAB`</ph> calculates the next print position using the formula:       Column Mod width       For example, if <bpt id="p1">*</bpt>width<ept id="p1">*</ept> is 80 and you specify <ph id="ph3">`TAB(`</ph>90<ph id="ph4">`)`</ph>, the next print will start at column 10 (the remainder of 90/80).</source>
          <target state="translated">如果<ph id="ph1">`Column`</ph>大于输出线条宽度，<ph id="ph2">`TAB`</ph>计算使用公式的下一步打印位置︰ 列 Mod 宽度，例如，如果<bpt id="p1">*</bpt>宽度<ept id="p1">*</ept>是 80，并指定<ph id="ph3">`TAB(`</ph>90<ph id="ph4">`)`</ph>，则下一个打印将开始列 10 （90/80 的余数）。</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Column`</ph> is less than the current print position, printing starts on the next line at the calculated print position.</source>
          <target state="translated">如果<ph id="ph1">`Column`</ph>小于当前打印位置，在下一行计算的输出位置的打印启动。</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve">
          <source>If the calculated print position is larger than the current print position, printing starts at the calculated print position on the same line.</source>
          <target state="translated">如果计算出的打印位置大于当前打印位置，打印开始计算在同一行上打印位置。</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve">
          <source>The leftmost print position on an output line is always 1.</source>
          <target state="translated">在输出行上的最左边打印位置始终为 1。</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve">
          <source>When you use the <ph id="ph1">`Print`</ph> or <ph id="ph2">`PrintLine`</ph> functions to print to files, the rightmost print position is the current width of the output file, which you can set using the <ph id="ph3">`FileWidth`</ph> function.</source>
          <target state="translated">当你使用<ph id="ph1">`Print`</ph>或<ph id="ph2">`PrintLine`</ph>函数来打印到文件，最右边的打印位置是输出文件中，你可以使用设置的当前宽度<ph id="ph3">`FileWidth`</ph>函数。</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`TAB`</ph> function can also be used with the <ph id="ph2">`WriteLine`</ph> function.</source>
          <target state="translated"><ph id="ph1">`TAB`</ph>函数还可用于<ph id="ph2">`WriteLine`</ph>函数。</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve">
          <source>It cannot be used with &lt;xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=fullName&gt; or &lt;xref:System.Console.WriteLine%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">它不能使用&lt;xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=fullName&gt;或&lt;xref:System.Console.WriteLine%2A?displayProperty=fullName&gt;。&lt;/xref:System.Console.WriteLine%2A?displayProperty=fullName&gt; &lt;/xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Make sure your tabular columns are wide enough to contain wide letters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 确保表格列的宽度足以包含较宽的字母。</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve">
          <source>Used with the <bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> functions to position output.</source>
          <target state="translated">与使用<bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数确定输出位置。</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve">
          <source>Used with the <bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> functions to position output.</source>
          <target state="translated">与使用<bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数确定输出位置。</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve">
          <source>If the current print position on the current line is greater than <ph id="ph1">`Column`</ph>, <ph id="ph2">`TAB`</ph> skips to the column value equal to <ph id="ph3">`Column`</ph> on the next output line.</source>
          <target state="translated">如果在当前行的当前打印位置大于<ph id="ph1">`Column`</ph>，<ph id="ph2">`TAB`</ph>跳过为列的值等于<ph id="ph3">`Column`</ph>下一步的输出行上。</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Column`</ph> is less than 1, <ph id="ph2">`TAB`</ph> moves the print position to column 1.</source>
          <target state="translated">如果<ph id="ph1">`Column`</ph>小于 1，<ph id="ph2">`TAB`</ph>将打印位置移动到第 1 列。</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Column`</ph> is greater than the output line width, <ph id="ph2">`TAB`</ph> calculates the next print position using the formula:       Column Mod width       For example, if <bpt id="p1">*</bpt>width<ept id="p1">*</ept> is 80 and you specify <ph id="ph3">`TAB(`</ph>90<ph id="ph4">`)`</ph>, the next print will start at column 10 (the remainder of 90/80).</source>
          <target state="translated">如果<ph id="ph1">`Column`</ph>大于输出线条宽度，<ph id="ph2">`TAB`</ph>计算使用公式的下一步打印位置︰ 列 Mod 宽度，例如，如果<bpt id="p1">*</bpt>宽度<ept id="p1">*</ept>是 80，并指定<ph id="ph3">`TAB(`</ph>90<ph id="ph4">`)`</ph>，则下一个打印将开始列 10 （90/80 的余数）。</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Column`</ph> is less than the current print position, printing starts on the next line at the calculated print position.</source>
          <target state="translated">如果<ph id="ph1">`Column`</ph>小于当前打印位置，在下一行计算的输出位置的打印启动。</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve">
          <source>If the calculated print position is greater than the current print position, printing starts at the calculated print position on the same line.</source>
          <target state="translated">如果计算出的打印位置大于当前打印位置，打印开始计算在同一行上打印位置。</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve">
          <source>The leftmost print position on an output line is always 1.</source>
          <target state="translated">在输出行上的最左边打印位置始终为 1。</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve">
          <source>When you use the <ph id="ph1">`Print`</ph> or <ph id="ph2">`PrintLine`</ph> functions to print to files, the rightmost print position is the current width of the output file, which you can set using the <ph id="ph3">`FileWidth`</ph> function.</source>
          <target state="translated">当你使用<ph id="ph1">`Print`</ph>或<ph id="ph2">`PrintLine`</ph>函数来打印到文件，最右边的打印位置是输出文件中，你可以使用设置的当前宽度<ph id="ph3">`FileWidth`</ph>函数。</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`TAB`</ph> function can also be used with the <ph id="ph2">`WriteLine`</ph> function.</source>
          <target state="translated"><ph id="ph1">`TAB`</ph>函数还可用于<ph id="ph2">`WriteLine`</ph>函数。</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve">
          <source>It cannot be used with &lt;xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=fullName&gt; or &lt;xref:System.Console.WriteLine%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">它不能使用&lt;xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=fullName&gt;或&lt;xref:System.Console.WriteLine%2A?displayProperty=fullName&gt;。&lt;/xref:System.Console.WriteLine%2A?displayProperty=fullName&gt; &lt;/xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Make sure your tabular columns are wide enough to contain wide letters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 确保表格列的宽度足以包含较宽的字母。</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve">
          <source>The column number moved to before displaying or printing the next expression in a list.</source>
          <target state="translated">显示或打印列表中的下一步表达式之前移动到的列号。</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve">
          <source>If omitted, <bpt id="p1">&lt;xref uid="langword_csharp_TAB" name="TAB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> moves the insertion point to the start of the next print zone.</source>
          <target state="translated">如果省略， <bpt id="p1">&lt;xref uid="langword_csharp_TAB" name="TAB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>将插入点移到下一步的打印区域的开始。</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve">
          <source>Used with the <bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> functions to position output.</source>
          <target state="translated">与使用<bpt id="p1">&lt;xref uid="langword_csharp_Print" name="Print" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_PrintLine" name="PrintLine" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>函数确定输出位置。</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve">
          <source>Controls access by other processes to all or part of a file opened by using the <bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">通过使用打开的文件的全部或部分其他进程来控制访问<bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和<bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are used in environments where several processes might need access to the same file.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数是在环境中使用其中多个进程可能需要访问同一文件。</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are always used in pairs.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数始终成对使用。</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve">
          <source>The arguments to <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> must be identical.</source>
          <target state="translated">自变量<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>必须相同。</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph>, or <ph id="ph2">`FromRecord`</ph> and <ph id="ph3">`ToRecord`</ph> are not supplied, the lock will be for the whole file.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>，或<ph id="ph2">`FromRecord`</ph>和<ph id="ph3">`ToRecord`</ph>是未提供，将被锁定整个文件。</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph> alone is specified the single record will be locked/unlocked.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>单独指定单个记录将锁定/解锁。</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve">
          <source>If the file has been opened for sequential input or output, <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> affect the whole file, regardless of the range specified by <ph id="ph3">`FromRecord`</ph> and<ph id="ph4">`ToRecord`</ph>.</source>
          <target state="translated">如果已打开文件进行连续的输入或输出，<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>影响整个文件，而不考虑指定的范围<ph id="ph3">`FromRecord`</ph>和<ph id="ph4">`ToRecord`</ph>。</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve">
          <source>Controls access by other processes to all or part of a file opened by using the <bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">通过使用打开的文件的全部或部分其他进程来控制访问<bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和<bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are used in environments where several processes might need access to the same file.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数是在环境中使用其中多个进程可能需要访问同一文件。</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are always used in pairs.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数始终成对使用。</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve">
          <source>The arguments to <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> must be identical.</source>
          <target state="translated">自变量<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>必须相同。</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph>, or <ph id="ph2">`FromRecord`</ph> and <ph id="ph3">`ToRecord`</ph> are not supplied, the lock will be for the whole file.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>，或<ph id="ph2">`FromRecord`</ph>和<ph id="ph3">`ToRecord`</ph>是未提供，将被锁定整个文件。</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph> alone is specified the single record will be locked/unlocked.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>单独指定单个记录将锁定/解锁。</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve">
          <source>If the file has been opened for sequential input or output, <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> affect the whole file, regardless of the range specified by <ph id="ph3">`FromRecord`</ph> and<ph id="ph4">`ToRecord`</ph>.</source>
          <target state="translated">如果已打开文件进行连续的输入或输出，<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>影响整个文件，而不考虑指定的范围<ph id="ph3">`FromRecord`</ph>和<ph id="ph4">`ToRecord`</ph>。</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve">
          <source>Number of the only record or byte to lock or unlock</source>
          <target state="translated">数的唯一记录或锁定或解锁的字节</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve">
          <source>Controls access by other processes to all or part of a file opened by using the <bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">通过使用打开的文件的全部或部分其他进程来控制访问<bpt id="p1">&lt;xref uid="langword_csharp_Open" name="Open" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you better productivity and performance in file I/O operations than <bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>功能使你更好的工作效率和性能在文件 I/O 操作比<bpt id="p2">&lt;xref uid="langword_csharp_Lock" name="Lock" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和<bpt id="p3">&lt;xref uid="langword_csharp_Unlock" name="Unlock" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.FileSystem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are used in environments where several processes might need access to the same file.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数是在环境中使用其中多个进程可能需要访问同一文件。</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> functions are always used in pairs.</source>
          <target state="translated"><ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>函数始终成对使用。</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve">
          <source>The arguments to <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> must be identical.</source>
          <target state="translated">自变量<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>必须相同。</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph>, or <ph id="ph2">`FromRecord`</ph> and <ph id="ph3">`ToRecord`</ph> are not supplied, the lock will be for the whole file.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>，或<ph id="ph2">`FromRecord`</ph>和<ph id="ph3">`ToRecord`</ph>是未提供，将被锁定整个文件。</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Record`</ph> alone is specified the single record will be locked/unlocked.</source>
          <target state="translated">如果<ph id="ph1">`Record`</ph>单独指定单个记录将锁定/解锁。</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve">
          <source>If the file has been opened for sequential input or output, <ph id="ph1">`Lock`</ph> and <ph id="ph2">`Unlock`</ph> affect the whole file, regardless of the range specified by <ph id="ph3">`FromRecord`</ph> and<ph id="ph4">`ToRecord`</ph>.</source>
          <target state="translated">如果已打开文件进行连续的输入或输出，<ph id="ph1">`Lock`</ph>和<ph id="ph2">`Unlock`</ph>影响整个文件，而不考虑指定的范围<ph id="ph3">`FromRecord`</ph>和<ph id="ph4">`ToRecord`</ph>。</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve">
          <source>Any valid file number.</source>
          <target state="translated">任何有效的文件数。</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve">
          <source>Number of the first record or byte to lock or unlock.</source>
          <target state="translated">第一个记录或锁定或解锁的字节数。</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve">
          <source>Number of the last record or byte to lock or unlock.</source>
          <target state="translated">最后一个记录或锁定或解锁的字节数。</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve">
          <source>Writes data to a sequential file.</source>
          <target state="translated">将数据写入顺序文件。</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve">
          <source>Data written with <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is usually read from a file by using <bpt id="p2">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">数据使用编写<bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从文件通常通过使用读取<bpt id="p2">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> functions are provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Write`</ph>和<ph id="ph2">`WriteLine`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`Output`</ph>, a blank line is printed to the file.</source>
          <target state="translated">如果省略<ph id="ph1">`Output`</ph>，向文件打印一个空行。</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve">
          <source>Multiple expressions can be separated with a comma.</source>
          <target state="translated">可以用逗号分隔多个表达式。</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve">
          <source>Unlike the <ph id="ph1">`Print`</ph> function, the <ph id="ph2">`Write`</ph> function inserts commas between items and quotation marks around strings as they are written to the file.</source>
          <target state="translated">与不同<ph id="ph1">`Print`</ph>函数，<ph id="ph2">`Write`</ph>函数插入项与字符串周围的引号之间的逗号，按它们写入到文件的形式。</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve">
          <source>You do not have to put explicit delimiters in the list.</source>
          <target state="translated">无需显式分隔符放入列表。</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Write`</ph> is used to write data to a file, only numeric, <ph id="ph2">`Boolean`</ph>, date, null, and <ph id="ph3">`Error`</ph> data formats are supported.</source>
          <target state="translated">当<ph id="ph1">`Write`</ph>用于将数据写入到文件中，仅数字<ph id="ph2">`Boolean`</ph>，日期、 null 和<ph id="ph3">`Error`</ph>支持数据格式。</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve">
          <source>The following universal assumptions are followed so the data can always be read and correctly interpreted using <ph id="ph1">`Input`</ph>, regardless of locale:      -   Numeric data is always written using the period as the decimal separator.</source>
          <target state="translated">下面的通用假设遵循这样的数据始终能够阅读和使用正确的解释<ph id="ph1">`Input`</ph>，而不考虑区域设置:-数值写入数据时总是使用句点作为小数分隔符。</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve">
          <source>-   For <ph id="ph1">`Boolean`</ph> data, either <ph id="ph2">`#TRUE#`</ph> or <ph id="ph3">`#FALSE#`</ph> is printed.</source>
          <target state="translated">-为<ph id="ph1">`Boolean`</ph>数据，<ph id="ph2">`#TRUE#`</ph>或<ph id="ph3">`#FALSE#`</ph>打印。</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`True`</ph> and <ph id="ph2">`False`</ph> keywords are not translated, regardless of locale.</source>
          <target state="translated"><ph id="ph1">`True`</ph>和<ph id="ph2">`False`</ph>无论区域设置如何，都不翻译关键字。</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve">
          <source>-   Date data is written to the file using the universal date format.</source>
          <target state="translated">-日期数据写入到文件使用的通用日期格式。</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve">
          <source>When either the date or the time component is missing or zero, only the part provided is written to the file.</source>
          <target state="translated">时的日期或时间组件缺失或为零时，仅提供部分是写入文件。</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve">
          <source>-   Nothing is written to the file if <ph id="ph1">`Output`</ph> data is empty.</source>
          <target state="translated">-则不写入到文件，如果<ph id="ph1">`Output`</ph>数据为空。</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve">
          <source>However, for null data, <ph id="ph1">`#NULL#`</ph> is written.</source>
          <target state="translated">但是，对于 null 数据一样，<ph id="ph1">`#NULL#`</ph>写入。</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve">
          <source>-   For <ph id="ph1">`Error`</ph> data, the output appears as <ph id="ph2">`#ERROR errorcode#`</ph>.</source>
          <target state="translated">-为<ph id="ph1">`Error`</ph>数据，输出将显示为<ph id="ph2">`#ERROR errorcode#`</ph>。</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Error`</ph> keyword is not translated, regardless of locale.</source>
          <target state="translated"><ph id="ph1">`Error`</ph>不转换关键字，而不考虑区域设置。</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`WriteLine`</ph> inserts a newline character (that is, a carriage return/line feed, or <ph id="ph2">`Chr(13) + Chr(10)`</ph>), after it has written the final character in <ph id="ph3">`Output`</ph> to the file.</source>
          <target state="translated"><ph id="ph1">`WriteLine`</ph>将插入一个换行符 (即回车符/换行符，或<ph id="ph2">`Chr(13) + Chr(10)`</ph>)，在其写入的最后一个字符后<ph id="ph3">`Output`</ph>文件。</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve">
          <source>You can embed quotation marks in a string by using double quotation marks, or "".</source>
          <target state="translated">可以在字符串中嵌入引号引起来通过使用双引号括起来，或""。</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve">
          <source>For example,       <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#63<ept id="p2">](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._145_1.vb)</ept><ept id="p1">]</ept>       returns a string with the value of <ph id="ph1">`Double quotation marks aren't "difficult" to handle`</ph>.</source>
          <target state="translated">例如， <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef&amp;#63;<ept id="p2">](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._145_1.vb)</ept> <ept id="p1">]</ept>返回的值的字符串<ph id="ph1">`Double quotation marks aren't "difficult" to handle`</ph>。</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve">
          <source>Writing to a file by using the <ph id="ph1">`Write`</ph> or <ph id="ph2">`WriteLine`</ph> functions requires <ph id="ph3">`Append`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">通过使用对文件进行写入<ph id="ph1">`Write`</ph>或<ph id="ph2">`WriteLine`</ph>函数需要<ph id="ph3">`Append`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; .</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that contains any valid file number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含任何有效的文件数的表达式。</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve">
          <source>One or more comma-delimited expressions to write to a file.</source>
          <target state="translated">一个或多个以逗号分隔表达式以写入到的文件。</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve">
          <source>File mode is invalid.</source>
          <target state="translated">文件模式无效。</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve">
          <source>Writes data to a sequential file.</source>
          <target state="translated">将数据写入顺序文件。</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve">
          <source>Data written with <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is usually read from a file by using <bpt id="p2">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">数据使用编写<bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从文件通常通过使用读取<bpt id="p2">&lt;xref uid="langword_csharp_Input" name="Input" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> functions are provided for backward compatibility and may affect performance.</source>
          <target state="translated"><ph id="ph1">`Write`</ph>和<ph id="ph2">`WriteLine`</ph>函数提供用于向后兼容性，并且可能会影响性能。</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve">
          <source>For non-legacy applications, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides better performance.</source>
          <target state="translated">对于非旧式应用程序，<ph id="ph1">`My.Computer.FileSystem`</ph>对象提供更好的性能。</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>File Access with Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Visual Basic 文件访问<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`Output`</ph>, a blank line is printed to the file.</source>
          <target state="translated">如果省略<ph id="ph1">`Output`</ph>，向文件打印一个空行。</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve">
          <source>Multiple expressions can be separated with a comma.</source>
          <target state="translated">可以用逗号分隔多个表达式。</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve">
          <source>Unlike the <ph id="ph1">`Print`</ph> function, the <ph id="ph2">`Write`</ph> function inserts commas between items and quotation marks around strings as they are written to the file.</source>
          <target state="translated">与不同<ph id="ph1">`Print`</ph>函数，<ph id="ph2">`Write`</ph>函数插入项与字符串周围的引号之间的逗号，按它们写入到文件的形式。</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve">
          <source>You do not have to put explicit delimiters in the list.</source>
          <target state="translated">无需显式分隔符放入列表。</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Write`</ph> is used to write data to a file, only numeric, <ph id="ph2">`Boolean`</ph>, date, null, and <ph id="ph3">`Error`</ph> data formats are supported.</source>
          <target state="translated">当<ph id="ph1">`Write`</ph>用于将数据写入到文件中，仅数字<ph id="ph2">`Boolean`</ph>，日期、 null 和<ph id="ph3">`Error`</ph>支持数据格式。</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve">
          <source>The following universal assumptions are followed so the data can always be read and correctly interpreted using <ph id="ph1">`Input`</ph>, regardless of locale:      -   Numeric data is always written using the period as the decimal separator.</source>
          <target state="translated">下面的通用假设遵循这样的数据始终能够阅读和使用正确的解释<ph id="ph1">`Input`</ph>，而不考虑区域设置:-数值写入数据时总是使用句点作为小数分隔符。</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve">
          <source>-   For <ph id="ph1">`Boolean`</ph> data, either <ph id="ph2">`#TRUE#`</ph> or <ph id="ph3">`#FALSE#`</ph> is printed.</source>
          <target state="translated">-为<ph id="ph1">`Boolean`</ph>数据，<ph id="ph2">`#TRUE#`</ph>或<ph id="ph3">`#FALSE#`</ph>打印。</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`True`</ph> and <ph id="ph2">`False`</ph> keywords are not translated, regardless of locale.</source>
          <target state="translated"><ph id="ph1">`True`</ph>和<ph id="ph2">`False`</ph>无论区域设置如何，都不翻译关键字。</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve">
          <source>-   Date data is written to the file using the universal date format.</source>
          <target state="translated">-日期数据写入到文件使用的通用日期格式。</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve">
          <source>When either the date or the time component is missing or zero, only the part provided is written to the file.</source>
          <target state="translated">时的日期或时间组件缺失或为零时，仅提供部分是写入文件。</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve">
          <source>-   Nothing is written to the file if <ph id="ph1">`Output`</ph> data is empty.</source>
          <target state="translated">-则不写入到文件，如果<ph id="ph1">`Output`</ph>数据为空。</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve">
          <source>However, for null data, <ph id="ph1">`#NULL#`</ph> is written.</source>
          <target state="translated">但是，对于 null 数据一样，<ph id="ph1">`#NULL#`</ph>写入。</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve">
          <source>-   For <ph id="ph1">`Error`</ph> data, the output appears as <ph id="ph2">`#ERROR errorcode#`</ph>.</source>
          <target state="translated">-为<ph id="ph1">`Error`</ph>数据，输出将显示为<ph id="ph2">`#ERROR errorcode#`</ph>。</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Error`</ph> keyword is not translated, regardless of locale.</source>
          <target state="translated"><ph id="ph1">`Error`</ph>不转换关键字，而不考虑区域设置。</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`WriteLine`</ph> inserts a newline character (that is, a carriage return/line feed, or <ph id="ph2">`Chr(13) + Chr(10)`</ph>), after it has written the final character in <ph id="ph3">`Output`</ph> to the file.</source>
          <target state="translated"><ph id="ph1">`WriteLine`</ph>将插入一个换行符 (即回车符/换行符，或<ph id="ph2">`Chr(13) + Chr(10)`</ph>)，在其写入的最后一个字符后<ph id="ph3">`Output`</ph>文件。</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve">
          <source>You can embed quotation marks in a string by using double quotation marks, or "".</source>
          <target state="translated">可以在字符串中嵌入引号引起来通过使用双引号括起来，或""。</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve">
          <source>For example,       <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#63<ept id="p2">](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._172_1.vb)</ept><ept id="p1">]</ept>       returns a string with the value of <ph id="ph1">`Double quotation marks aren't "difficult" to handle`</ph>.</source>
          <target state="translated">例如， <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>VbVbalrCatRef&amp;#63;<ept id="p2">](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._172_1.vb)</ept> <ept id="p1">]</ept>返回的值的字符串<ph id="ph1">`Double quotation marks aren't "difficult" to handle`</ph>。</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve">
          <source>Writing to a file by using the <ph id="ph1">`Write`</ph> or <ph id="ph2">`WriteLine`</ph> functions requires <ph id="ph3">`Append`</ph> access from the <ph id="ph4">`FileIOPermissionAccess`</ph> enumeration.</source>
          <target state="translated">通过使用对文件进行写入<ph id="ph1">`Write`</ph>或<ph id="ph2">`WriteLine`</ph>函数需要<ph id="ph3">`Append`</ph>从访问<ph id="ph4">`FileIOPermissionAccess`</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt; .</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Security.Permissions.FileIOPermissionAccess&gt;。&lt;/xref:System.Security.Permissions.FileIOPermissionAccess&gt;</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that contains any valid file number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含任何有效的文件数的表达式。</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve">
          <source>One or more comma-delimited expressions to write to a file.</source>
          <target state="translated">一个或多个以逗号分隔表达式以写入到的文件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>