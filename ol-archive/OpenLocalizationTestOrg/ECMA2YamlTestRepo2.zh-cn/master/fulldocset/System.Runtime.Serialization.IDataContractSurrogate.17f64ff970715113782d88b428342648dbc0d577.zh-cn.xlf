<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">905c14769cbf01faa2a4715cab9ff22565142665</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.IDataContractSurrogate.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">991e5aac4f7b18d5162f5d608deeb0741ed7fca9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33df00df818b2b1baa8399c5998c1f9267961c1e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the methods needed to substitute one type for another by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; during serialization, deserialization, and export and import of XML schema documents (XSD).</source>
          <target state="translated">提供将一种类型替换为另一所需的方法&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;期间序列化、 反序列化，并导出和导入 XML 架构文档 (XSD)。&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use the IDataContractSurrogate when using the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations.</source>
          <target state="translated">使用时使用 IDataContractSurrogate&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;如果你需要执行下列操作之一︰ 替换一个类型或对象的另一个字符串，或者动态生成架构变体。&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For a sample application, see <bpt id="p1">[</bpt>DataContract Surrogate<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关示例应用程序，请参阅<bpt id="p1">[</bpt>DataContract 代理项<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about data contracts, see <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关数据协定的详细信息，请参阅<bpt id="p1">[</bpt>使用数据协定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>At run time, you can find the specific &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; for any operation in a service by using the &lt;xref:System.ServiceModel.Description.OperationDescription&gt; to find the &lt;xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt; instance.</source>
          <target state="translated">在运行时，可以查找特定于&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;中通过使用服务的任何操作&lt;xref:System.ServiceModel.Description.OperationDescription&gt;查找&lt;xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt;实例。&lt;/xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt; &lt;/xref:System.ServiceModel.Description.OperationDescription&gt; &lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about implementing the interface to create a surrogate, see <bpt id="p1">[</bpt>Data Contract Surrogates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关实现接口以创建一个代理项的详细信息，请参阅<bpt id="p1">[</bpt>数据协定代理项<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can also use the IDataContractSurrogate to affect the import and export of XML schemas when you are using the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt; and &lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt; classes.</source>
          <target state="translated">此外可以使用 IDataContractSurrogate 来影响导入和导出 XML 架构，当你使用&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;和&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;类。&lt;/xref:System.Runtime.Serialization.XsdDataContractImporter&gt; &lt;/xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can do so by assigning the IDataContractSurrogate to the &lt;xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt; property of the &lt;xref:System.Runtime.Serialization.ExportOptions&gt; class, or to the &lt;xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt; property of the &lt;xref:System.Runtime.Serialization.ImportOptions&gt; class.</source>
          <target state="translated">你可以做到这一点将分配到 IDataContractSurrogate&lt;xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt;属性&lt;xref:System.Runtime.Serialization.ExportOptions&gt;类，或&lt;xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt;属性的&lt;xref:System.Runtime.Serialization.ImportOptions&gt;类。&lt;/xref:System.Runtime.Serialization.ImportOptions&gt; &lt;/xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt; &lt;/xref:System.Runtime.Serialization.ExportOptions&gt; &lt;/xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Schema Import and Export<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>架构导入和导出<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">在架构导出操作期间插入非 null 返回值的架构批注。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MemberInfo&gt; that describes the member.</source>
          <target state="translated">A&lt;xref:System.Reflection.MemberInfo&gt;成员进行描述的。&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt;.</source>
          <target state="translated">A &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An object that represents the annotation to be inserted into the XML schema definition.</source>
          <target state="translated">一个对象，表示要插入到 XML 架构定义中的批注。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">在架构导出操作期间插入非 null 返回值的架构批注。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The CLR type to be replaced.</source>
          <target state="translated">要替换的 CLR 类型。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data contract type to be annotated.</source>
          <target state="translated">要添加批注的数据协定类型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An object that represents the annotation to be inserted into the XML schema definition.</source>
          <target state="translated">一个对象，表示要插入到 XML 架构定义中的批注。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.</source>
          <target state="translated">在序列化、 反序列化和架构导入和导出，将返回一个替换指定的类型的数据协定类型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The CLR type &lt;xref:System.Type&gt; to substitute.</source>
          <target state="translated">CLR 类型&lt;xref:System.Type&gt;替换。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to substitute for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> value.</source>
          <target state="translated">&lt;xref:System.Type&gt;用于替换<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>值。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This type must be serializable by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.</source>
          <target state="translated">此类型必须是受支持&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;。&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;可序列化</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, it must be marked with the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">例如，它都必须标记为&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;属性或序列化程序可识别的其他机制。&lt;/xref:System.Runtime.Serialization.DataContractAttribute&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>During deserialization, returns an object that is a substitute for the specified object.</source>
          <target state="translated">在反序列化，将返回一个对象，它指定的对象的替代。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In a simple implementation, use an if…then…else control structure to test whether the <ph id="ph1">`obj`</ph> value is of the surrogated type.</source>
          <target state="translated">在简单实现中，使用 if … then … else 控制结构测试是否<ph id="ph1">`obj`</ph>代理项类型的值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If so, transform it as necessary and return the substituted object.</source>
          <target state="translated">如果是这样，请将它转换为必需并返回被替换的对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The substituted object can be a new instance or the same <ph id="ph1">`obj`</ph> instance.</source>
          <target state="translated">被替换的对象可以是的新实例或相同<ph id="ph1">`obj`</ph>实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The deserialized object to be substituted.</source>
          <target state="translated">要替换的反序列化的对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; that the substituted object should be assigned to.</source>
          <target state="translated">&lt;xref:System.Type&gt;被替换的对象应分配给。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The substituted deserialized object.</source>
          <target state="translated">被替换的反序列化的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This object must be of a type that is serializable by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.</source>
          <target state="translated">此对象必须是受支持&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;。&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;可序列化的类型</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, it must be marked with the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">例如，它都必须标记为&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;属性或序列化程序可识别的其他机制。&lt;/xref:System.Runtime.Serialization.DataContractAttribute&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Sets the collection of known types to use for serialization and deserialization of the custom data objects.</source>
          <target state="translated">设置要用于序列化的已知类型的集合和反序列化的自定义数据对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This method is required during schema export or schema import only if annotations are inserted into the schema using the &lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt; method.</source>
          <target state="translated">此方法才需要在架构导出或架构导入过程批注插入架构使用&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt;方法。&lt;/xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> of &lt;xref:System.Type&gt; to add known types to.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph>的&lt;xref:System.Type&gt;添加到已知的类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>During serialization, returns an object that substitutes the specified object.</source>
          <target state="translated">序列化期间，返回一个替换指定的对象的对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This method must not return <ph id="ph1">`null`</ph> because on deserialization the data will be cast to type &lt;xref:System.Object&gt; and an &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">此方法必须返回<ph id="ph1">`null`</ph>因为在反序列化数据将被强制转换为类型&lt;xref:System.Object&gt;和&lt;xref:System.InvalidCastException&gt;引发。&lt;/xref:System.InvalidCastException&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object to substitute.</source>
          <target state="translated">要替换的对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; that the substituted object should be assigned to.</source>
          <target state="translated">&lt;xref:System.Type&gt;被替换的对象应分配给。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The substituted object that will be serialized.</source>
          <target state="translated">被替换的对象进行序列化。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The object must be serializable by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.</source>
          <target state="translated">该对象必须是受支持&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;。&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;可序列化</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, it must be marked with the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">例如，它都必须标记为&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;属性或序列化程序可识别的其他机制。&lt;/xref:System.Runtime.Serialization.DataContractAttribute&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>During schema import, returns the type referenced by the schema.</source>
          <target state="translated">架构导入过程中返回由该架构引用的类型。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Null`</ph> should be returned if a CLR type does not exist for representing the schema type.</source>
          <target state="translated"><ph id="ph1">`Null`</ph>应返回如果 CLR 类型不存在用于表示架构类型。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This will cause a new type to be generated during schema import.</source>
          <target state="translated">这将导致在架构导入过程中生成的新类型。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of the type in schema.</source>
          <target state="translated">架构中类型的名称。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The namespace of the type in schema.</source>
          <target state="translated">架构中类型的命名空间。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.</source>
          <target state="translated">表示插入到 XML 架构定义，这是可以用于查找引用的类型的数据中的批注对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to use for the referenced type.</source>
          <target state="translated">&lt;xref:System.Type&gt;将用于引用类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Processes the type that has been generated from the imported schema.</source>
          <target state="translated">处理已从导入的架构中生成的类型。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The input &lt;xref:System.CodeDom.CodeTypeDeclaration&gt; or other information in the &lt;xref:System.CodeDom.CodeCompileUnit&gt; can be modified by the user in this method.</source>
          <target state="translated">输入&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;或中的其他信息&lt;xref:System.CodeDom.CodeCompileUnit&gt;可通过此方法中的用户修改。&lt;/xref:System.CodeDom.CodeCompileUnit&gt; &lt;/xref:System.CodeDom.CodeTypeDeclaration&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph> is returned, it will cause the type to not be generated.</source>
          <target state="translated">如果<ph id="ph1">`null`</ph>返回，它将导致要不会生成的类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If a new &lt;xref:System.CodeDom.CodeTypeDeclaration&gt; is returned, it will replace the original type generated.</source>
          <target state="translated">如果新&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;返回，它将替换生成的原始类型。&lt;/xref:System.CodeDom.CodeTypeDeclaration&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeDeclaration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to process that represents the type declaration generated during schema import.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeDeclaration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>到表示在架构导入过程中生成的类型声明的进程。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the other code generated during schema import.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含在架构导入期间生成的其他代码。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeDeclaration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the processed type.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeDeclaration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含所处理的类型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>