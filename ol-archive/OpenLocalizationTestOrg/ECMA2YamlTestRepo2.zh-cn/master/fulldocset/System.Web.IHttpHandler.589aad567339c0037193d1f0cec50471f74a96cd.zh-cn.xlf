<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88b333ea3e4674af973d2abc550709dbf19184e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.IHttpHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8f572b239e5d5a353e03e4bf7332f1828fe709a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05f454ae158f9fa0a44a411d6d3a5e7e617a123d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.</source>
          <target state="translated">定义 ASP.NET 实现以异步方式处理 HTTP Web 请求中使用自定义 HTTP 处理程序的协定。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language.</source>
          <target state="translated">你可以编写自定义 HTTP 处理程序来处理特定的预定义任何的类型公共语言规范 (CLS) 符合语言中的 HTTP 请求。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Executable code defined in the <ph id="ph1">`HttpHandler`</ph> classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests.</source>
          <target state="translated">在中定义的可执行代码<ph id="ph1">`HttpHandler`</ph>到这些特定请求的类，而不是传统的 ASP 或 ASP.NET Web 页，进行响应。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">HTTP 处理程序为你提供一种与低级别的请求和响应服务的 IIS Web 服务器交互，并提供功能非常类似于 ISAPI 扩展但了一个更简单的编程模型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If your handler will access session state values, it must implement the &lt;xref:System.Web.SessionState.IRequiresSessionState&gt; interface (a marker interface with no methods).</source>
          <target state="translated">如果您的处理程序将访问会话状态的值，它必须实现&lt;xref:System.Web.SessionState.IRequiresSessionState&gt;接口 （不包含任何方法的标记接口）。&lt;/xref:System.Web.SessionState.IRequiresSessionState&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether another request can use the <bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">获取一个值，该值指示是否可以使用另一个请求<bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You explicitly set the IsReusable property to <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> by code you provide that overrides the IsReusable property accessor (getter).</source>
          <target state="translated">显式 IsReusable 属性设置为<ph id="ph1">`true`</ph>或<ph id="ph2">`false`</ph>由你提供可重写 IsReusable 属性访问器 (getter) 的代码。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance is reusable; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例是可重用; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Enables processing of HTTP Web requests by a custom <bpt id="p1">&lt;xref uid="langword_csharp_HttpHandler" name="HttpHandler" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that implements the <bpt id="p2">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">由自定义 HTTP Web 请求的允许处理<bpt id="p1">&lt;xref uid="langword_csharp_HttpHandler" name="HttpHandler" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实现<bpt id="p2">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>接口。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Place your custom <ph id="ph1">`HttpHandler`</ph> code in the ProcessRequest virtual method, as shown in the following example.</source>
          <target state="translated">将您的自定义<ph id="ph1">`HttpHandler`</ph>代码在 ProcessRequest 虚拟方法中，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that provides references to the intrinsic server objects (for example, <bpt id="p2">&lt;xref uid="langword_csharp_Request" name="Request" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Response" name="Response" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Session" name="Session" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, and <bpt id="p5">&lt;xref uid="langword_csharp_Server" name="Server" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>) used to service HTTP requests.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>提供对内部服务器对象的引用的对象 (例如， <bpt id="p2">&lt;xref uid="langword_csharp_Request" name="Request" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>， <bpt id="p3">&lt;xref uid="langword_csharp_Response" name="Response" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>， <bpt id="p4">&lt;xref uid="langword_csharp_Session" name="Session" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>，和<bpt id="p5">&lt;xref uid="langword_csharp_Server" name="Server" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>) 用于 HTTP 请求提供服务。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>