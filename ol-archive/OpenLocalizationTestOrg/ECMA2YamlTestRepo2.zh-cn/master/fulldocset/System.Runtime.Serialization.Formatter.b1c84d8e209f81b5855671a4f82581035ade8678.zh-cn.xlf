<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0614c66219eaa02b51dfb8c870c69a0a274dcea2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.Formatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bdb934667dd3c101aeb0289c08a140f22e74b6f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebee4c4f4c4d887d6a6c102829c7db864c9f4408</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides base functionality for the common language runtime serialization formatters.</source>
          <target state="translated">提供公共语言运行时序列化格式化程序的基本功能。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Formatter is the <ph id="ph1">`abstract`</ph> base class for all runtime serialization formatters, and provides some helper methods for implementing the &lt;xref:System.Runtime.Serialization.IFormatter&gt; interface.</source>
          <target state="translated">格式化程序是<ph id="ph1">`abstract`</ph>所有运行时序列化格式化程序的基本类并提供一些帮助器方法用于实现&lt;xref:System.Runtime.Serialization.IFormatter&gt;接口。&lt;/xref:System.Runtime.Serialization.IFormatter&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Formatter also manages queuing objects for serialization and generating IDs on a per-object basis.</source>
          <target state="translated">格式化程序还管理进行序列化和每个对象基础上的生成 Id 的队列对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates a &lt;xref:System.Collections.Queue&gt; for objects to serialize and a &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt; to generate IDs for them.</source>
          <target state="translated">创建&lt;xref:System.Collections.Queue&gt;对于序列化的对象和一个&lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;若要为其生成 IDs。&lt;/xref:System.Runtime.Serialization.ObjectIDGenerator&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">当在派生类中重写，获取或设置<bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与当前格式化程序一起使用。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.SerializationBinder&gt; performs lookups for types from the type names passed during deserialization.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;执行查找类型的反序列化期间传递的类型名称。&lt;/xref:System.Runtime.Serialization.SerializationBinder&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If no &lt;xref:System.Runtime.Serialization.SerializationBinder&gt; is set, a default is used.</source>
          <target state="translated">如果没有&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;设置，则使用默认值。&lt;/xref:System.Runtime.Serialization.SerializationBinder&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与当前格式化程序一起使用。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for the current serialization.</source>
          <target state="translated">当在派生类中重写，获取或设置&lt;xref:System.Runtime.Serialization.StreamingContext&gt;用于当前序列化。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; is an indication of either the source of the bits being deserialized or the destination of the bits being serialized.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;反序列化的位的源或正在序列化的位的目标是下列任一工具的相对值。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It has no impact on default serialization, but is passed as an argument to &lt;xref:System.Runtime.Serialization.ISerializable&gt; and &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;.</source>
          <target state="translated">它不会影响对默认序列化，但作为自变量传递给&lt;xref:System.Runtime.Serialization.ISerializable&gt;和&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;。&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt; &lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for the current serialization.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;用于当前序列化。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the stream attached to the formatter when it was created, creating a graph of objects identical to the graph originally serialized into that stream.</source>
          <target state="translated">当在派生类中重写，反序列化流时创建，附加到格式化程序创建的对象关系图相同最初序列化到该流的图。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The stream to deserialize.</source>
          <target state="translated">要反序列化的流。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The top object of the deserialized graph of objects.</source>
          <target state="translated">对象的反序列化关系图的顶级对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns the next object to serialize, from the formatter's internal work queue.</source>
          <target state="translated">返回要序列化，格式化程序的内部工作队列中的下一个对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Objects are returned in a first in first out order based on how they were passed to &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;.</source>
          <target state="translated">在以先进先出顺序基于如何它们传递到&lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;.&lt;/xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;返回对象</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The ID of the object is put into the <ph id="ph1">`objID`</ph> parameter and the object is returned from the function.</source>
          <target state="translated">对象的 ID 放入<ph id="ph1">`objID`</ph>参数，该对象从函数返回。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The ID assigned to the current object during serialization.</source>
          <target state="translated">在序列化过程中分配给当前对象的 ID。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The next object to serialize.</source>
          <target state="translated">下一个要序列化的对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The next object retrieved from the work queue did not have an assigned ID.</source>
          <target state="translated">从工作队列检索到的下一步对象没有分配的 id。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Contains the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectIDGenerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">包含<bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectIDGenerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与当前格式化程序一起使用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt; maintains a list of the objects that have been identified and the IDs that they were given.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;维护的已发现的对象以及它们提供的 Id 列表。&lt;/xref:System.Runtime.Serialization.ObjectIDGenerator&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Contains a <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the objects left to serialize.</source>
          <target state="translated">包含<bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的对象要序列化。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Objects scheduled for serialization with the &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt; method are pushed on the queue.</source>
          <target state="translated">计划通过进行序列化的对象&lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;方法压入队列。&lt;/xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Schedules an object for later serialization.</source>
          <target state="translated">将计划稍后进行序列化的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Schedule obtains an ID for the object and puts it on the queue for later serialization if this is a new object ID.</source>
          <target state="translated">计划获取对象的 ID，并将其放在队列中为更高版本的序列化中，如果这是一个新的对象 id。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The schedule is a work queue of objects to serialize, and is held inside the formatter.</source>
          <target state="translated">计划是工作队列的对象要序列化，它包含在格式化程序。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the object is already on the work queue, it will not be added a second time, but an exception will not be thrown either.</source>
          <target state="translated">如果在工作队列已存在的对象，它将不添加第二次，但之一，不会引发异常。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The object to schedule for serialization.</source>
          <target state="translated">要计划的序列化的对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The object ID assigned to the object.</source>
          <target state="translated">分配给对象的对象 ID。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the graph of objects with the specified root to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，序列化的对象与已连接到格式化程序流的指定根的图。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The stream to which the objects are serialized.</source>
          <target state="translated">对象序列化到流。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object at the root of the graph to serialize.</source>
          <target state="translated">要序列化的关系图的根处的对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">当在派生类中重写，获取或设置<bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与当前格式化程序一起使用。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Runtime.Serialization.SurrogateSelector&gt; to look up implementations of &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt; that control the serialization of a particular type.</source>
          <target state="translated">使用&lt;xref:System.Runtime.Serialization.SurrogateSelector&gt;要查找的实现&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;用于控制特定类型的序列化。&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt; &lt;/xref:System.Runtime.Serialization.SurrogateSelector&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If an object type has a matching surrogate, then serialization and deserialization are handed off to the surrogate even if the type implements the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface.</source>
          <target state="translated">如果一个对象类型有匹配的代理项，则序列化和反序列化会被移交给该代理项即使该类型实现&lt;xref:System.Runtime.Serialization.ISerializable&gt;接口。&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与当前格式化程序一起使用。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an array to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，将数组写入流已附加到格式化程序。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The array to write.</source>
          <target state="translated">要写入的数组。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The name of the array.</source>
          <target state="translated">数组的名称。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The type of elements that the array holds.</source>
          <target state="translated">数组中包含的元素的类型。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a Boolean value to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，将一个布尔值写入流已附加到格式化程序。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an 8-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，将一个 8 位无符号的整数写入流已附加到格式化程序。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a Unicode character to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，将 Unicode 字符写入流已附加到格式化程序。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a &lt;xref:System.DateTime&gt; value to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写时写入&lt;xref:System.DateTime&gt;已连接到格式化程序流的值。&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a &lt;xref:System.Decimal&gt; value to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写时写入&lt;xref:System.Decimal&gt;已连接到格式化程序流的值。&lt;/xref:System.Decimal&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a double-precision floating-point number to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，将写入已附加到格式化程序流的双精度浮点数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 16-bit signed integer to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，将一个 16 位带符号的整数写入流已附加到格式化程序。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 32-bit signed integer to the stream.</source>
          <target state="translated">当在派生类中重写，将一个 32 位带符号的整数写入流。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 64-bit signed integer to the stream.</source>
          <target state="translated">当在派生类中重写，将一个 64 位带符号的整数写入流。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Inspects the type of data received, and calls the appropriate <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method to perform the write to the stream already attached to the formatter.</source>
          <target state="translated">检查接收的数据类型并调用相应<bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>方法来执行对已附加到格式化程序流的写入。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To use this method properly, all the <ph id="ph1">`Write`</ph> methods (&lt;xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt; method, &lt;xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt; method, &lt;xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt; method, and so on) should have the appropriate functionality.</source>
          <target state="translated">若要正确，请使用此方法所有<ph id="ph1">`Write`</ph>方法 (&lt;xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt;方法，&lt;xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt;方法，&lt;xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt;方法，等等) 应具有适当的功能。&lt;/xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt; &lt;/xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt; &lt;/xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name of the member to serialize.</source>
          <target state="translated">要序列化的成员名称。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The object to write to the stream attached to the formatter.</source>
          <target state="translated">要写入到流的格式化程序附加的对象。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an object reference to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写时写入对已附加到格式化程序流的对象引用。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Schedules the object with the graph walker to handle the work.</source>
          <target state="translated">使用 graph walker 来处理工作计划对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The object reference to write.</source>
          <target state="translated">要写入的对象引用。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The type of object the reference points to.</source>
          <target state="translated">引用所指向的对象的类型。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an 8-bit signed integer to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，已连接到格式化程序的流中写入的 8 位有符号的整数。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a single-precision floating-point number to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，写入流已附加到格式化程序的单精度浮点数。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a &lt;xref:System.TimeSpan&gt; value to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写时写入&lt;xref:System.TimeSpan&gt;已连接到格式化程序流的值。&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 16-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，将一个 16 位无符号的整数写入流已附加到格式化程序。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 32-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，写入流已附加到格式化程序的 32 位无符号的整数。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 64-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，将写入已附加到格式化程序流的 64 位无符号的整数。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">要写入的值。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a value of the given type to the stream already attached to the formatter.</source>
          <target state="translated">当在派生类中重写，将给定类型的值写入已连接到格式化程序的流。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The object representing the value type.</source>
          <target state="translated">表示值类型的对象。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">成员的名称。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the value type.</source>
          <target state="translated">&lt;xref:System.Type&gt;的值类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>