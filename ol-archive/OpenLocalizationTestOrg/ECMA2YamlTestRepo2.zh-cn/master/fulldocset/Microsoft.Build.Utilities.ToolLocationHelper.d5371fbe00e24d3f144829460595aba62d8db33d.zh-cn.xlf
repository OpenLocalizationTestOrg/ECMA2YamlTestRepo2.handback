<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b00d1f4711b6f18447e727ef1130aa4500a8be1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Build.Utilities.ToolLocationHelper.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3f11b576bfc029b85adb74e1a48641b19ce4209</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bf4c233253e9d9beb63f96cc068642f885d7b8d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides utility methods for locating <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> and <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK files and directories.</source>
          <target state="translated">提供实用工具方法，用于查找<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>和<ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK 文件和目录。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Clears the appDomain wide cache of platform and extension SDKs.</source>
          <target state="translated">清除平台与扩展 Sdk 的 appDomain 宽缓存。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets a sorted list of <bpt id="p1">&lt;xref href="Microsoft.Build.Utilities.AssemblyFoldersExInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects which contain information about the directories in which the third party assemblies are registered.</source>
          <target state="translated">获取的已排序的列表<bpt id="p1">&lt;xref href="Microsoft.Build.Utilities.AssemblyFoldersExInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，其中包含有关在其中注册的第三方程序集的目录的信息。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This information is used at build and design time.</source>
          <target state="translated">在生成和设计时使用此信息。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This method enumerates the <ph id="ph1">`AssemblyFoldersEx`</ph> registry location and returns the list of <ph id="ph2">`AssemblyFoldersExInfo`</ph>in the same order that they are searched for reference assemblies at design and build time.</source>
          <target state="translated">此方法枚举<ph id="ph1">`AssemblyFoldersEx`</ph>注册表位置，并返回的列表<ph id="ph2">`AssemblyFoldersExInfo`</ph>顺序它们在设计的引用程序集来搜索和生成时间。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>On a 64-bit operating system, if targeting 64-bit, add in the 64-bit hive then the 32-bit hive; if targeting 32-bit, add in the 32-bit hive then the 64-bit hive.</source>
          <target state="translated">64 位操作系统上，如果面向 64 位，添加在 64 位 hive 然后 32 位 hive 中;如果目标 32 位，，添加在 32 位 hive 然后的 64 位配置单元。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>On 32-bit machine only add in the 32-bit hive.</source>
          <target state="translated">在仅 32 位计算机上的 32 位配置单元中添加。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The root registry location for the targeted framework.</source>
          <target state="translated">目标框架根注册表位置。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For .NET this is SOFTWARE\MICROSOFT<ph id="ph1">\\</ph>.NETFramework.</source>
          <target state="translated">对于.NET 这是 SOFTWARE\MICROSOFT<ph id="ph1">\\</ph>。NETFramework。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The targeted framework version (2.0, 3.0, 3.5, 4.0, ….).</source>
          <target state="translated">目标的框架版本 （2.0、 3.0、 3.5、 4.0、...）。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The name of the folder, (AssemblyFoldersEx) could also be PocketPC\AssemblyFoldersEx, or others.</source>
          <target state="translated">PocketPC\AssemblyFoldersEx，或其他人，也可能是文件夹，(AssemblyFoldersEx) 的名称。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The targeted minimum and maximum OS versions in the registry.</source>
          <target state="translated">目标最小和最高 OS 版本在注册表中。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These values are used to return only directories for OS versions between the declared minimum and maximum.</source>
          <target state="translated">这些值用于最小和最大返回仅用于操作系统版本之间的已声明的目录。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If this value is blank or null, no filtering is done.</source>
          <target state="translated">如果此值为空或 null，都会执行任何筛选。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The targeted platform GUIDs.</source>
          <target state="translated">目标的平台 Guid。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Used to return only directories which have a matching platform GUID.</source>
          <target state="translated">用于返回其具有匹配平台 GUID 的目录。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If this value is blank or null no filtering is done.</source>
          <target state="translated">如果此值为空或 null 都会执行任何筛选。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The targeted processor architecture.</source>
          <target state="translated">目标的处理器体系结构。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This determines which registry hives are searched and in which order.</source>
          <target state="translated">这将确定哪些注册表配置单元中搜索以及按什么顺序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns list of <bpt id="p1">&lt;xref uid="langword_csharp_AssemblyFoldersExInfo" name="AssemblyFoldersExInfo" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回列表的<bpt id="p1">&lt;xref uid="langword_csharp_AssemblyFoldersExInfo" name="AssemblyFoldersExInfo" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creates a display name given the target framework details.</source>
          <target state="translated">创建给定的目标 framework 详细信息的显示名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is the equivalent of the target framework moniker, but for display.</source>
          <target state="translated">此命令等效的目标框架名字对象，而是用于显示。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If one cannot be found from the redist list file, a synthesized one is returned, so there is always a display name.</source>
          <target state="translated">如果一个无法找到从 redist 列表文件，合成类型的值，则返回其中一个，因此没有始终显示名称。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The target framework directory.</source>
          <target state="translated">目标框架目录。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The framework name.</source>
          <target state="translated">框架名称。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a display name given the target framework details.</source>
          <target state="translated">返回指定的目标 framework 详细信息的显示名称。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the full name of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> root registry key.</source>
          <target state="translated">获取的完整名称<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>根注册表项。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>到目标。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A string containing the full name of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> root registry key.</source>
          <target state="translated">包含的完整名称的字符串<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>根注册表项。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the name of the value under the &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt; that contains the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK installation path.</source>
          <target state="translated">获取下的值的名称&lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt;包含<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK 安装路径。&lt;/xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>到目标。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns a string containing the name of the registry key value under the &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt; that contains the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK installation path.</source>
          <target state="translated">返回包含下的注册表项值的名称的字符串&lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt;包含<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK 安装路径。&lt;/xref:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey*&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Name of the value of GetDotNetFrameworkRootRegistryKey that contains the SDK install root path</source>
          <target state="translated">名称的值的包含的 SDK 的 GetDotNetFrameworkRootRegistryKey 安装根路径</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio the requested SDK is associated with</source>
          <target state="translated">与关联的 Visual Studio 的请求的 SDK 版本</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.String&gt;.</source>
          <target state="translated">返回&lt;xref:System.String&gt;.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns the full name of the .NET Framework SDK root registry key.</source>
          <target state="translated">返回.NET Framework SDK 根注册表项的完整名称。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the registry key root which indicates where to find the .NETFramework sdk.</source>
          <target state="translated">返回指示在何处查找注册表项根的字符串表示形式。NETFramework sdk。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns the full name of the .NET Framework SDK root registry key</source>
          <target state="translated">返回.NET Framework SDK 根注册表项的完整名称</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio the requested SDK is associated with</source>
          <target state="translated">与关联的 Visual Studio 的请求的 SDK 版本</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.String&gt;.</source>
          <target state="translated">返回&lt;xref:System.String&gt;.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the prefix of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> folder.</source>
          <target state="translated">获取的前缀<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>文件夹。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An example of the value returned is the string "v2.0".</source>
          <target state="translated">返回的一个示例是值的字符串"v2.0"。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>到目标。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns the prefix of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> folder.</source>
          <target state="translated">返回的前缀<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>文件夹。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> root directory.</source>
          <target state="translated">获取的完全限定的路径<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>根目录。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>到目标。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> root directory, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) if the targeted version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> is not installed.</source>
          <target state="translated">包含的完全限定的路径的字符串<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>根目录中，则为空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) 如果的目标的版本<ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>未安装。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to the framework's root directory.</source>
          <target state="translated">获取到框架的根目录的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Desired architecture, or DotNetFrameworkArchitecture.Current for the architecture this process is currently running under.</source>
          <target state="translated">所需的体系结构或此进程当前正在运行下的体系结构的 DotNetFrameworkArchitecture.Current。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns a fully qualified path to the framework's root directory.</source>
          <target state="translated">返回到框架的根目录的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to a file in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> directory.</source>
          <target state="translated">获取到的文件中的完全限定的路径<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>目录。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The file to locate in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> directory.</source>
          <target state="translated">要查找中的文件<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>目录。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>到目标。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the specified file, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) if the targeted version of the <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> is not installed.</source>
          <target state="translated">包含指定的文件，则为 null 引用的完全限定的路径的字符串 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) 如果的目标的版本<ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>未安装。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to a file in the frameworks root directory for the specified architecture.</source>
          <target state="translated">获取指定的体系结构的框架根目录中的文件的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>File name to locate in the .NET Framework directory</source>
          <target state="translated">要在.NET Framework 目录中找到的文件名称</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Desired architecture, or DotNetFrameworkArchitecture.Current for the architecture this process is currently running under.</source>
          <target state="translated">所需的体系结构或此进程当前正在运行下的体系结构的 DotNetFrameworkArchitecture.Current。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns a fully qualified path to a file in the frameworks root directory.</source>
          <target state="translated">返回到框架根目录中的文件的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns the path to the reference assemblies location for the given framework version.</source>
          <target state="translated">返回给定的 framework 版本的引用程序集位置的路径。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns a string containing the fully qualified path to the Reference Assemblies folder, or a null reference (Nothing in Visual Basic) if the targeted version of the .NET Framework is not installed.</source>
          <target state="translated">返回包含 Reference Assemblies 文件夹中或 null 引用 (在 Visual Basic 中为 Nothing) 的完全限定的路径，如果未安装.NET Framework 的目标的版本的字符串。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the fully qualified path to the \bin directory of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK.</source>
          <target state="translated">获取在的 \bin 目录的完全限定的路径<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>到目标。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the \bin directory of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) if the targeted version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK is not installed.</source>
          <target state="translated">包含的 \bin 目录的完全限定的路径的字符串<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK，则为空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) 如果的目标的版本<ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK 未安装。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns the path to the "bin" directory of the .NET Framework SDK.</source>
          <target state="translated">返回.NET Framework SDK 的"bin"目录的路径。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio the requested SDK is associated with</source>
          <target state="translated">与关联的 Visual Studio 的请求的 SDK 版本</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Path string.</source>
          <target state="translated">路径字符串。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the fully qualified path to a file in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK.</source>
          <target state="translated">获取到的文件中的完全限定的路径<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The path for the SDK takes in consideration the processor architecture environment information for the calling process, so it might end up being ".../bin/i64", for example.</source>
          <target state="translated">Sdk 的路径需要考虑的处理器体系结构环境信息调用进程，因此它可能最终将".../bin/i64"，例如。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Unlike &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile%2A&gt; and &lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile%2A&gt; this method checks for the existence of the file, so that an invalid <ph id="ph1">`fileName`</ph> returns null.</source>
          <target state="translated">与不同&lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile%2A&gt;和&lt;xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile%2A&gt;此方法检查是否存在该文件，以便无效<ph id="ph1">`fileName`</ph>，则返回 null。&lt;/xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile%2A&gt; &lt;/xref:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The file to locate in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK.</source>
          <target state="translated">要查找中的文件<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to target.</source>
          <target state="translated">版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>到目标。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the \bin directory of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) if the targeted version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> SDK is not installed.</source>
          <target state="translated">包含的 \bin 目录的完全限定的路径的字符串<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK，则为空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph2">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>) 如果的目标的版本<ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>SDK 未安装。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to a file in the .NET Framework SDK.</source>
          <target state="translated">获取.NET Framework SDK 中的文件的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>File name to locate in the .NET Framework SDK directory</source>
          <target state="translated">要在.NET Framework SDK 目录中找到的文件名称</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The required architecture of the requested file.</source>
          <target state="translated">请求的文件所需体系结构。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns a fully qualified path to a file in the .NET Framework SDK.</source>
          <target state="translated">返回到.NET Framework SDK 中的文件的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Throws an error if the .NET Framework SDK can't be found.</source>
          <target state="translated">如果找不到.NET Framework SDK，则引发错误。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Get a fully qualified path to a file in the .NET Framework SDK.</source>
          <target state="translated">获取.NET Framework SDK 中的文件的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Error if the .NET Framework SDK can't be found.</source>
          <target state="translated">如果找不到.NET Framework SDK 时出错。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>File name to locate in the .NET Framework SDK directory</source>
          <target state="translated">要在.NET Framework SDK 目录中找到的文件名称</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the requested SDK.</source>
          <target state="translated">请求的 SDK 与关联的 Visual Studio 的版本。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Path string.</source>
          <target state="translated">路径字符串。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Get a fully qualified path to a file in the .NET Framework SDK.</source>
          <target state="translated">获取.NET Framework SDK 中的文件的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Error if the .NET Framework SDK can't be found.</source>
          <target state="translated">如果找不到.NET Framework SDK 时出错。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>File name to locate in the .NET Framework SDK directory</source>
          <target state="translated">要在.NET Framework SDK 目录中找到的文件名称</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Version of the targeted .NET Framework</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the requested SDK.</source>
          <target state="translated">请求的 SDK 与关联的 Visual Studio 的版本。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The required architecture of the requested file.</source>
          <target state="translated">请求的文件所需体系结构。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Path string.</source>
          <target state="translated">路径字符串。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets the paths to the reference assemblies location for the given target framework.</source>
          <target state="translated">获取给定的目标框架的引用程序集位置的路径。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This method assumes that the requested ReferenceAssemblyRoot path will be the ProgramFiles directory that is specified by Environment.SpecialFolder.ProgramFiles.</source>
          <target state="translated">此方法假定所请求的 ReferenceAssemblyRoot 路径将 Environment.SpecialFolder.ProgramFiles 由指定的程序文件目录。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In addition, when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5, or 4, the correctly chained reference assembly paths for the legacy .NET Framework versions will be returned.</source>
          <target state="translated">此外，当。TargetFrameworkVersion 为 2.0、 3.0、 3.5 或 4 NETFramework 或.NET Framework targetFrameworkIdentifiers 会看到，将返回适用于旧的.NET framework 的正确链接的引用程序集路径。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.</source>
          <target state="translated">此链接将使用现有 GetPathToDotNetFrameworkReferenceAssemblies 以生成引用程序集路径的列表。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The framework name.</source>
          <target state="translated">框架名称。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Returns the paths to the reference assemblies location.</source>
          <target state="translated">返回引用程序集位置的路径。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>When the frameworkName is null</source>
          <target state="translated">当 frameworkName 为 null</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets the paths to the reference assemblies location for the given framework version relative to a given targetFrameworkRoot.</source>
          <target state="translated">获取相对于给定 targetFrameworkRoot 给定的 framework 版本的引用程序集位置的路径。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This method does not check to see if the path exists or not.</source>
          <target state="translated">此方法不会检查以确定路径是否存在与否。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Root directory which will be used to calculate the reference assembly path.</source>
          <target state="translated">它将用于计算引用程序集路径的根目录。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The references assembies will be generated in the following way TargetFrameworkRootPath\TargetFrameworkIdentifier\TargetFrameworkVersion\SubType\TargetFrameworkSubType.</source>
          <target state="translated">将按以下方式 TargetFrameworkRootPath\TargetFrameworkIdentifier\TargetFrameworkVersion\SubType\TargetFrameworkSubType 生成引用 assembies。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A frameworkName class which represents a TargetFrameworkMoniker.</source>
          <target state="translated">FrameworkName 类，该类表示 TargetFrameworkMoniker。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This cannot be null.</source>
          <target state="translated">这不能为 null。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns the paths to the reference assemblies location.</source>
          <target state="translated">返回引用程序集位置的路径。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Returns the paths to the reference assemblies location for the given target framework.</source>
          <target state="translated">返回给定的目标框架的引用程序集位置的路径。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths for the legacy .NET Framework versions.</source>
          <target state="translated">此方法将假定所请求的 ReferenceAssemblyRoot 路径都不是指定 Environment.SpecialFolder.ProgramFiles 中还包括的程序文件目录时。看到 NETFramework 或.NET Framework targetFrameworkIdentifiers 和 targetFrameworkVersion 是 2.0、 3.0、 3.5 或 4.0，我们将返回适用于旧的.NET framework 的正确链接的引用程序集路径。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.</source>
          <target state="translated">此链接将使用现有 GetPathToDotNetFrameworkReferenceAssemblies 以生成引用程序集路径的列表。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Identifier being targeted</source>
          <target state="translated">作为目标的标识符</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Version being targeted</source>
          <target state="translated">作为目标版本</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Profile being targeted</source>
          <target state="translated">目标配置文件</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Collection of reference assembly locations.</source>
          <target state="translated">引用程序集位置的集合。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When the frameworkName is null</source>
          <target state="translated">当 frameworkName 为 null</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Returns the path to the reference assemblies location for the given target framework's standard libraries (i.e. mscorlib).</source>
          <target state="translated">返回给定的目标框架的标准库 (即 mscorlib) 的引用程序集位置的路径。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths for the legacy .NET Framework versions.</source>
          <target state="translated">此方法将假定所请求的 ReferenceAssemblyRoot 路径都不是指定 Environment.SpecialFolder.ProgramFiles 中还包括的程序文件目录时。看到 NETFramework 或.NET Framework targetFrameworkIdentifiers 和 targetFrameworkVersion 是 2.0、 3.0、 3.5 或 4.0，我们将返回适用于旧的.NET framework 的正确链接的引用程序集路径。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.</source>
          <target state="translated">此链接将使用现有 GetPathToDotNetFrameworkReferenceAssemblies 以生成引用程序集路径的列表。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Identifier being targeted</source>
          <target state="translated">作为目标的标识符</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Version being targeted</source>
          <target state="translated">作为目标版本</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Profile being targeted</source>
          <target state="translated">目标配置文件</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Collection of reference assembly locations.</source>
          <target state="translated">引用程序集位置的集合。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>When the frameworkName is null</source>
          <target state="translated">当 frameworkName 为 null</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Returns the path to mscorlib and system.dll</source>
          <target state="translated">将路径返回到 mscorlib 和 system.dll</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Identifier being targeted</source>
          <target state="translated">作为目标的标识符</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Version being targeted</source>
          <target state="translated">作为目标版本</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Profile being targeted</source>
          <target state="translated">目标配置文件</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This is used to determine where we should look for the standard libraries.</source>
          <target state="translated">这用于确定我们应查找的位置的标准库。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Note, this parameter is only used for .NET Framework 3.5 or less.</source>
          <target state="translated">请注意，此参数仅用于.NET Framework 3.5 或更少。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Collection of reference assembly locations.</source>
          <target state="translated">引用程序集位置的集合。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>When the frameworkName is null</source>
          <target state="translated">当 frameworkName 为 null</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets a fully qualified path to a file in the system directory.</source>
          <target state="translated">获取系统目录中的文件的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This API builds the full path plus filename for a file in the System folder.</source>
          <target state="translated">此 API 生成的完整路径加上文件名的文件系统文件夹中。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>It doesn't check for the existence of the file prior to returning.</source>
          <target state="translated">它不会检查在返回前文件存在。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The file to locate in the System folder.</source>
          <target state="translated">要在系统文件夹中找到的文件。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A string containing the fully qualified path to the the file in the system directory.</source>
          <target state="translated">包含的完全限定的路径的字符串中的系统目录的文件。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Returns the path to the Windows SDK for the desired .NET Framework and Visual Studio version.</source>
          <target state="translated">返回所需的.NET Framework 和 Visual Studio 版本的 Windows SDK 的路径。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Note that this is only supported for a targeted .NET Framework version of 4.5 and above.</source>
          <target state="translated">请注意，这仅支持目标.NET Framework 版本 4.5 和更高版本。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Target .NET Framework version</source>
          <target state="translated">目标.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the SDK.</source>
          <target state="translated">版本的 Visual Studio 与 SDK。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Path to the appropriate Windows SDK location</source>
          <target state="translated">到适当的 Windows SDK 位置的路径</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Returns the path to a file in the Windows SDK for the desired .NET Framework and Visual Studio version.</source>
          <target state="translated">返回所需的.NET Framework 和 Visual Studio 版本的 Windows SDK 中的文件的路径。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Note that this is only supported for a targeted .NET Framework version of 4.5 and above.</source>
          <target state="translated">请注意，这仅支持目标.NET Framework 版本 4.5 和更高版本。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The name of the file being requested.</source>
          <target state="translated">所请求文件的名称。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Target .NET Framework version.</source>
          <target state="translated">目标.NET Framework 版本。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the SDK.</source>
          <target state="translated">版本的 Visual Studio 与 SDK。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Path to the appropriate Windows SDK file</source>
          <target state="translated">相应的 Windows SDK 文件路径</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Returns the path to a file in the Windows SDK for the desired .NET Framework and Visual Studio version and the desired architecture.</source>
          <target state="translated">返回所需的.NET Framework 和 Visual Studio 版本和所需的体系结构在 Windows SDK 中的文件的路径。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Note that this is only supported for a targeted .NET Framework version of 4.5 and above.</source>
          <target state="translated">请注意，这仅支持目标.NET Framework 版本 4.5 和更高版本。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The name of the file being requested.</source>
          <target state="translated">所请求文件的名称。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Target .NET Framework version.</source>
          <target state="translated">目标.NET Framework 版本。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Version of Visual Studio associated with the requested SDK.</source>
          <target state="translated">请求的 SDK 与关联的 Visual Studio 的版本。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Desired architecture of the resultant file.</source>
          <target state="translated">所需的结果文件的体系结构。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Path to the appropriate Windows SDK file</source>
          <target state="translated">相应的 Windows SDK 文件路径</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Given an SDK moniker and the targeted platform get the path to the SDK root if it exists.</source>
          <target state="translated">如果存在到 SDK 根中给定 SDK 标记和目标的平台 get 路径。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Moniker for the sdk</source>
          <target state="translated">标记 sdk</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Identifier for the platform</source>
          <target state="translated">平台标识符</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Version of the platform</source>
          <target state="translated">平台版本</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A full path to the sdk root if the sdk exists in the targeted platform or an empty string if it does not exist.</source>
          <target state="translated">如果它不存在，sdk 将存在于目标的平台或空字符串 sdk 根目录完整路径。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Given an SDKName, targetPlatformIdentifier and TargetPlatformVersion search the default sdk locations for the passed in sdk name.</source>
          <target state="translated">给定 SDKName，targetPlatformIdentifier 和 TargetPlatformVersion 搜索传入的默认 sdk 位置 sdk 名称中。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The format of the sdk moniker is SDKName, Version=X.X</source>
          <target state="translated">Sdk 名字对象的格式是 SDKName，Version=X.X</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Name of the SDK to determine the installation location for.</source>
          <target state="translated">若要确定的安装位置的 sdk 的名称。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">若要查找适用于 Sdk 的目标的平台</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">要查找适用于 Sdk 的目标的平台版本</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Location of the SDK if it is found, empty string if it could not be found</source>
          <target state="translated">Sdk 的位置找到此属性，如果为空字符串，如果找不到该</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Given an SDKName, targetPlatformIdentifier and TargetPlatformVersion search the default sdk locations for the passed in sdk name.</source>
          <target state="translated">给定 SDKName，targetPlatformIdentifier 和 TargetPlatformVersion 搜索传入的默认 sdk 位置 sdk 名称中。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The format of the sdk moniker is SDKName, Version=X.X</source>
          <target state="translated">Sdk 名字对象的格式是 SDKName，Version=X.X</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Name of the SDK to determine the installation location for.</source>
          <target state="translated">若要确定的安装位置的 sdk 的名称。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">若要查找适用于 Sdk 的目标的平台</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">要查找适用于 Sdk 的目标的平台版本</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>List of disk roots to search for sdks within</source>
          <target state="translated">磁盘根中的 sdk 搜索列表</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Registry root to look for sdks within</source>
          <target state="translated">注册表根目录内的 sdk 查找</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Location of the SDK if it is found, empty string if it could not be found</source>
          <target state="translated">Sdk 的位置找到此属性，如果为空字符串，如果找不到该</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Given an SDKName, targetPlatformIdentifier and TargetPlatformVersion search the default sdk locations for the passed in sdk name.</source>
          <target state="translated">给定 SDKName，targetPlatformIdentifier 和 TargetPlatformVersion 搜索传入的默认 sdk 位置 sdk 名称中。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The format of the sdk moniker is SDKName, Version=X.X</source>
          <target state="translated">Sdk 名字对象的格式是 SDKName，Version=X.X</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Name of the SDK to determine the installation location for.</source>
          <target state="translated">若要确定的安装位置的 sdk 的名称。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">若要查找适用于 Sdk 的目标的平台</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">要查找适用于 Sdk 的目标的平台版本</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>List of disk roots to search for sdks within</source>
          <target state="translated">磁盘根中的 sdk 搜索列表</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Registry root to look for sdks within</source>
          <target state="translated">注册表根目录内的 sdk 查找</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Location of the SDK if it is found, empty string if it could not be found</source>
          <target state="translated">Sdk 的位置找到此属性，如果为空字符串，如果找不到该</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Get a list of SDK's installed on the machine for a given target platform</source>
          <target state="translated">获取给定的目标平台的计算机上安装的 SDK 中的列表</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">若要查找适用于 Sdk 的目标的平台</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">要查找适用于 Sdk 的目标的平台版本</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>IDictionary of installed SDKS and their location.</source>
          <target state="translated">已安装的 SDK 和其位置的 IDictionary。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>K:SDKName V:SDK installation location</source>
          <target state="translated">K:SDKName V:SDK 安装位置</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Get a list of SDK's installed on the machine for a given target platform</source>
          <target state="translated">获取给定的目标平台的计算机上安装的 SDK 中的列表</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Array of disk locations to search for sdks</source>
          <target state="translated">要搜索 sdk 的磁盘位置的数组</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Root registry location to look for sdks</source>
          <target state="translated">根注册表位置查找 sdk</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Targeted platform to find SDKs for</source>
          <target state="translated">若要查找适用于 Sdk 的目标的平台</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Targeted platform version to find SDKs for</source>
          <target state="translated">要查找适用于 Sdk 的目标的平台版本</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>IDictionary of installed SDKS and their location.</source>
          <target state="translated">已安装的 SDK 和其位置的 IDictionary。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>K:SDKName V:SDK installation location</source>
          <target state="translated">K:SDKName V:SDK 安装位置</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Given a target platform identifier and a target platform version, search the default SDK locations for the platform SDK for that target platform.</source>
          <target state="translated">给定目标平台标识符和目标平台版本，搜索该目标平台的平台 SDK 的默认 SDK 位置。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Targeted platform for which to find SDK.</source>
          <target state="translated">为其查找 SDK 的目标的平台。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Targeted platform version for which to find SDK.</source>
          <target state="translated">为其查找 SDK 的目标的平台版本。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Returns the location of the SDK if it is found, otherwise, returns an empty string if the SDK could not be found.</source>
          <target state="translated">返回的 sdk 的位置找到时，否则，返回空字符串如果找不到 SDK。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Given a target platform identifier and a target platform version, search the default SDK locations for the platform SDK for that target platform.</source>
          <target state="translated">给定目标平台标识符和目标平台版本，搜索该目标平台的平台 SDK 的默认 SDK 位置。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Targeted platform for which to find SDK.</source>
          <target state="translated">为其查找 SDK 的目标的平台。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Targeted platform version for which to find SDK.</source>
          <target state="translated">为其查找 SDK 的目标的平台版本。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Returns the location of the SDK if it is found, otherwise, returns an empty string if the SDK could not be found.</source>
          <target state="translated">返回的 sdk 的位置找到时，否则，返回空字符串如果找不到 SDK。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Given a target platform identifier and a target platform version, search the default SDK locations for the platform SDK for that target platform.</source>
          <target state="translated">给定目标平台标识符和目标平台版本，搜索该目标平台的平台 SDK 的默认 SDK 位置。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Targeted platform for which to find SDK.</source>
          <target state="translated">为其查找 SDK 的目标的平台。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Targeted platform version for which to find SDK.</source>
          <target state="translated">为其查找 SDK 的目标的平台版本。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Array of disk roots within which to search for SDK.</source>
          <target state="translated">在其中搜索 SDK 磁盘根的数组。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Registry root within which to search for SDK.</source>
          <target state="translated">在其中搜索 SDK 注册表根目录。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Returns the location of the SDK if it is found, otherwise, returns an empty string if the SDK could not be found.</source>
          <target state="translated">返回的 sdk 的位置找到时，否则，返回空字符串如果找不到 SDK。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Given a target platform identifier and a target platform version, search the default SDK locations for the platform SDK for that target platform.</source>
          <target state="translated">给定目标平台标识符和目标平台版本，搜索该目标平台的平台 SDK 的默认 SDK 位置。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Targeted platform for which to find SDK.</source>
          <target state="translated">为其查找 SDK 的目标的平台。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Targeted platform version for which to find SDK.</source>
          <target state="translated">为其查找 SDK 的目标的平台版本。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Array of disk roots within which to search for SDK.</source>
          <target state="translated">在其中搜索 SDK 磁盘根的数组。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Registry root within which to search for SDK.</source>
          <target state="translated">在其中搜索 SDK 注册表根目录。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Returns the location of the SDK if it is found, otherwise, returns an empty string if the SDK could not be found.</source>
          <target state="translated">返回的 sdk 的位置找到时，否则，返回空字符串如果找不到 SDK。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Gets the root location for the reference assembly directory under the program files directory.</source>
          <target state="translated">获取下 program files 目录的引用程序集目录的根位置。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Returns the root location for the reference assembly directory.</source>
          <target state="translated">返回引用程序集目录的根位置。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the design-time files for the SDK at the specified SDK root.</source>
          <target state="translated">获取指定的 SDK 根处的 sdk 中包含的设计时文件 SDK 文件夹的列表。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">该列表位于必须用于引用在搜索中的顺序。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK, must contain a design-time folder.</source>
          <target state="translated">该 SDK 的根文件夹必须包含的设计时文件夹。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for design-time files in the SDK, in the order that must be used for the search.</source>
          <target state="translated">返回要用于搜索在 SDK 中，必须用于搜索的顺序的设计时文件的文件夹的列表。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the design-time files for the SDK at the specified SDK root.</source>
          <target state="translated">获取指定的 SDK 根处的 sdk 中包含的设计时文件 SDK 文件夹的列表。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">该列表位于必须用于引用在搜索中的顺序。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK, must contain a design-time folder.</source>
          <target state="translated">该 SDK 的根文件夹必须包含的设计时文件夹。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The configuration the SDK is targeting.</source>
          <target state="translated">配置 SDK 设定为目标。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This is “Debug” or “Retail”.</source>
          <target state="translated">这是"调试"或"发布"。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The architecture the SDK is targeting.</source>
          <target state="translated">体系结构 SDK 设定为目标。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for design-time files in the SDK, in the order that must be used for the search.</source>
          <target state="translated">返回要用于搜索在 SDK 中，必须用于搜索的顺序的设计时文件的文件夹的列表。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the redist files for the SDK at the specified SDK root.</source>
          <target state="translated">获取指定的 SDK 根处的 sdk 中包含的 redist 文件 SDK 文件夹的列表。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">该列表位于必须用于引用在搜索中的顺序。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK, must contain a redist folder.</source>
          <target state="translated">该 SDK 的根文件夹必须包含的 redist 文件夹。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for redist files in the SDK, in the order that must be used for the search.</source>
          <target state="translated">返回要用于搜索在 SDK 中，必须用于搜索的顺序的 redist 文件的文件夹的列表。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the redist files for the SDK at the specified SDK root.</source>
          <target state="translated">获取指定的 SDK 根处的 sdk 中包含的 redist 文件 SDK 文件夹的列表。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">该列表位于必须用于引用在搜索中的顺序。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK, must contain a redist folder.</source>
          <target state="translated">该 SDK 的根文件夹必须包含的 redist 文件夹。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The configuration the SDK is targeting.</source>
          <target state="translated">配置 SDK 设定为目标。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This is “Debug” or “Retail”.</source>
          <target state="translated">这是"调试"或"发布"。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The architecture the SDK is targeting.</source>
          <target state="translated">体系结构 SDK 设定为目标。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for redist files in the SDK, in the order that must be used for the search.</source>
          <target state="translated">返回要用于搜索在 SDK 中，必须用于搜索的顺序的 redist 文件的文件夹的列表。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the references for the SDK at the specified SDK root.</source>
          <target state="translated">获取 SDK 文件夹，其中包含指定的 SDK 根处的 sdk 的引用列表。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">该列表位于必须用于引用在搜索中的顺序。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK.</source>
          <target state="translated">SDK 的根文件夹。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for references in the SDK, in the order that must be used for the search.</source>
          <target state="translated">返回要在搜索中的 SDK，必须用于搜索的顺序的引用中使用的文件夹的列表。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Get the list of SDK folders which contain the references for the SDK at the specified SDK root.</source>
          <target state="translated">获取 SDK 文件夹，其中包含指定的 SDK 根处的 sdk 的引用列表。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The list is in the order that must be used in searching for references.</source>
          <target state="translated">该列表位于必须用于引用在搜索中的顺序。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The root folder for the SDK.</source>
          <target state="translated">SDK 的根文件夹。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The configuration the SDK is targeting.</source>
          <target state="translated">配置 SDK 设定为目标。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This is “Debug” or “Retail”.</source>
          <target state="translated">这是"调试"或"发布"。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The architecture the SDK is targeting.</source>
          <target state="translated">体系结构 SDK 设定为目标。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Returns the list of folders to be used in searching for references in the SDK, in the order that must be used for the search.</source>
          <target state="translated">返回要在搜索中的 SDK，必须用于搜索的顺序的引用中使用的文件夹的列表。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Gets a list of supported target framework monikers.</source>
          <target state="translated">获取支持的目标框架名字对象的列表。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>list of supported target framework monikers</source>
          <target state="translated">支持的目标框架名字对象的列表</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Get a list of target platform SDKs on the machine.</source>
          <target state="translated">获取计算机上的目标平台 Sdk 的列表。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>List of Target Platform SDKs, Item1: TargetPlatformName Item2: Version of SDK Item3: Path to sdk root</source>
          <target state="translated">目标平台 Sdk，Item1 的列表︰ TargetPlatformName Item2︰ 版本的 SDK Item3: sdk 根路径</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Get a list of target platform SDKs on the machine.</source>
          <target state="translated">获取计算机上的目标平台 Sdk 的列表。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>List of disk locations to search for platform SDKs.</source>
          <target state="translated">要搜索的平台 Sdk 的磁盘位置的列表。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Registry root location to look for platform SDKs.</source>
          <target state="translated">若要寻找平台 Sdk 的注册表根位置。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Returns a list of target platform SDKs.</source>
          <target state="translated">返回目标平台 Sdk 的列表。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Gets the highest version of a target framework moniker based on the identifier.</source>
          <target state="translated">获取基于标识符的目标框架名字对象的最高版本。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Target framework root directory.</source>
          <target state="translated">目标 framework 根目录。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Framework identifier.</source>
          <target state="translated">Framework 标识符。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Returns the highest version of a target framework moniker based on the identifier.</source>
          <target state="translated">返回基于标识符的目标框架名字对象的最高版本。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>This method will only find full frameworks; no profiles will be returned.</source>
          <target state="translated">此方法将仅查找完全框架;将返回没有配置文件。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Gets the fully qualified path of the system directory.</source>
          <target state="translated">获取系统目录的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>An example of the value returned is the string "C:\WinNT\System32".</source>
          <target state="translated">返回的一个示例是值的"C:\WinNT\System32"的字符串。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>A string containing a directory path to the system directory.</source>
          <target state="translated">包含指向系统目录的目录路径的字符串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>