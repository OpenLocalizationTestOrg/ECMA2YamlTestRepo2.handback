<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">085ba39263569752ea39d9e26decce6f162e819f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.Schema.XamlMemberInvoker.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d647680bd465f97abf04d528b55c23117c34dfb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5783c7cffc50fd29c379d18a1216fbb8f751b456</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</source>
          <target state="translated">提供一个扩展点，它可以访问通过反射以外的技术的 XAML 成员的成员特征。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The purpose of XamlMemberInvoker is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through &lt;xref:System.Type&gt; and &lt;xref:System.Reflection.MemberInfo&gt;, and so on.</source>
          <target state="translated">XamlMemberInvoker 的目的是启用可扩展的 XAML 类型系统、 架构和一个有效的运行时不依赖于完全 CLR 功能，例如 CLR 特性，通过反射信息&lt;xref:System.Type&gt;和&lt;xref:System.Reflection.MemberInfo&gt;，依次类推。&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Subclasses of XamlMemberInvoker are used as input parameters for the alternate constructors of XAML schema classes such as &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">XAML 的架构类，例如&lt;xref:System.Xaml.XamlMember&gt;.&lt;/xref:System.Xaml.XamlMember&gt;的备用构造函数的 XamlMemberInvoker 子类使用作为输入参数</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You subclass &lt;xref:System.Xaml.XamlMember&gt; and pass the XamlMemberInvoker through to the base constructor.</source>
          <target state="translated">你可以子类&lt;xref:System.Xaml.XamlMember&gt;并将通过 XamlMemberInvoker 传递到基构造函数。&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Along with defining a XamlMemberInvoker for the constructor, you must also provide overrides for at least some of the <ph id="ph1">`Lookup`</ph> methods of &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">以及定义构造函数 XamlMemberInvoker，你还必须提供替代至少的一些<ph id="ph1">`Lookup`</ph> &lt;xref:System.Xaml.XamlMember&gt;.&lt;/xref:System.Xaml.XamlMember&gt;方法</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XamlMemberInvoker has a default implementation.</source>
          <target state="translated">XamlMemberInvoker 具有默认的实现。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The default implementation follows a similar model to the default implementation of XAML schema types &lt;xref:System.Xaml.XamlType&gt; and &lt;xref:System.Xaml.XamlMember&gt;: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, &lt;xref:System.Type&gt; and &lt;xref:System.Reflection.MemberInfo&gt;, and so on.</source>
          <target state="translated">默认实现到 XAML 架构类型的默认实现中遵循类似的模型&lt;xref:System.Xaml.XamlType&gt;和&lt;xref:System.Xaml.XamlMember&gt;: CLR 类型系统用于实例化、 值和查找操作，包括使用 CLR 特性&lt;xref:System.Type&gt;和&lt;xref:System.Reflection.MemberInfo&gt;，依次类推。&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt; &lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>XamlMemberInvoker provides methods for basic get and set operations (&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;; &lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;).</source>
          <target state="translated">XamlMemberInvoker 进行基本的 get 和 set 运算 (&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;; 提供的方法&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;).&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It also provides the properties &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt; and &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;, but these are not virtual.</source>
          <target state="translated">它还提供了属性&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;和&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;，但它们不是虚拟。&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt; &lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  It may be possible to obtain a XamlMemberInvoker value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 有可能获取 XamlMemberInvoker 值表示 XAML 指令，它将作为 System.Xaml 实现中的专用类实现。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you attempt to call &lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt; or &lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt; on this invoker, an exception is thrown.</source>
          <target state="translated">如果你尝试调用&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;或&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;上此调用程序会引发异常。&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt; &lt;/xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default implementation is empty.</source>
          <target state="translated">默认实现为空。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This constructor is invoked internally to provide a value for &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A&gt;.</source>
          <target state="translated">内部调用此构造函数来为&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A&gt;.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A&gt;提供值</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For a &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; subclass, it is expected that you either use the &lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt; signature for construction or provide an override that calls &lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt; as base.</source>
          <target state="translated">有关&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;子类化，请应或者使用&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;构造的签名或提供重写调用&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;作为基础。&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt; &lt;/xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt; &lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Providing the &lt;xref:System.Xaml.XamlMember&gt; implements a default pattern where &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; is immutable.</source>
          <target state="translated">提供&lt;xref:System.Xaml.XamlMember&gt;实现的默认模式 where&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;不可变。&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, based on a provided <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，基于所提供<bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This constructor is called internally based on the &lt;xref:System.Xaml.XamlMember&gt; where the &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; is used for construction.</source>
          <target state="translated">此构造函数调用，内部根据&lt;xref:System.Xaml.XamlMember&gt;其中&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;用于构造。&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the specific XAML member relevant to this <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>值与此相关的特定 XAML 成员<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;member&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;member&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a value of the relevant property from an instance.</source>
          <target state="translated">从实例中获取相关属性的值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An instance of the owner type for the member.</source>
          <target state="translated">该成员的所有者类型的实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The requested property value.</source>
          <target state="translated">请求的属性值中。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Invoked this method on a <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on an unknown <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在调用此方法<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>基于为未知<bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept>       Invoked this method on a write-only member.</source>
          <target state="translated"><bpt id="p1">**</bpt>-或-<ept id="p1">**</ept>只写的成员上调用此方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept>       &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*&gt; is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept>       &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*&gt; is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter*&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Sets a value of the relevant property on an instance.</source>
          <target state="translated">设置实例的相关属性的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An instance of the owner type for the member.</source>
          <target state="translated">该成员的所有者类型的实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The property value to set.</source>
          <target state="translated">要设置的属性值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Invoked this method on a <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on an unknown <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在调用此方法<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>基于为未知<bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept>       Invoked this method on a read-only member.</source>
          <target state="translated"><bpt id="p1">**</bpt>-或-<ept id="p1">**</ept>只读成员上调用此方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept>       &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*&gt; is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept>       &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*&gt; is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Indicates whether the value needs to be persisted by serialization processes.</source>
          <target state="translated">指示是否需要通过序列化过程中保留的值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;xref:System.Xaml.Schema.ShouldSerializeResult&gt; if the XAML member itself is &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;, or if no CLR-reflection relevant <ph id="ph1">`ShouldSerialize`</ph> method is found on the underlying member through default reflection.</source>
          <target state="translated">默认实现返回&lt;xref:System.Xaml.Schema.ShouldSerializeResult&gt;XAML 成员是否&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;，或如果没有与 CLR 反射相关<ph id="ph1">`ShouldSerialize`</ph>默认反射通过基础成员上找不到方法。&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.Schema.ShouldSerializeResult&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The instance with the property to be examined for persistence.</source>
          <target state="translated">要检查其持久性的属性具有的实例。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
          <target state="translated">枚举的值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Reflection.MethodInfo&gt; for the CLR method that gets values for the property that is relevant for this <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取&lt;xref:System.Reflection.MethodInfo&gt;为 CLR 属性获取值的方法是适用于这<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This property relies on calling &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt; on the constructing &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">此属性依赖于&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;在构造&lt;xref:System.Xaml.XamlMember&gt;。&lt;/xref:System.Xaml.XamlMember&gt;上&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;调用</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For an unknown &lt;xref:System.Xaml.XamlMember&gt;, or for cases where &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt; returns <ph id="ph1">`null`</ph>, this property returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">对于未知&lt;xref:System.Xaml.XamlMember&gt;，或用例其中&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;返回<ph id="ph1">`null`</ph>，此属性返回<ph id="ph2">`null`</ph>。&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodInfo&gt; for the CLR method that gets values for the property that is relevant for this <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodInfo&gt;为 CLR 属性获取值的方法是适用于这<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Reflection.MethodInfo&gt; for the CLR method that sets values for the property that is relevant for this <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取&lt;xref:System.Reflection.MethodInfo&gt;CLR 进行设置的属性的值的方法是适用于这<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This property relies on calling &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt; on the constructing &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">此属性依赖于&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;在构造&lt;xref:System.Xaml.XamlMember&gt;。&lt;/xref:System.Xaml.XamlMember&gt;上&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;调用</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For an unknown &lt;xref:System.Xaml.XamlMember&gt;, or for cases where &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt; returns <ph id="ph1">`null`</ph>, this property returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">对于未知&lt;xref:System.Xaml.XamlMember&gt;，或用例其中&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;返回<ph id="ph1">`null`</ph>，此属性返回<ph id="ph2">`null`</ph>。&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodInfo&gt; for the CLR method that sets values for the property that is relevant for this <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodInfo&gt;CLR 进行设置的属性的值的方法是适用于这<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Provides a static value that represents an unknown, not fully implemented <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">提供一个静态值，表示未完全实现的未知<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Supplying this value for a &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</source>
          <target state="translated">提供此值&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;System.Xaml 参数定义 API 将通常会导致调用的代码引发异常。&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A static value that represents an unknown, not fully implemented <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个静态值，表示未完全实现的未知<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>