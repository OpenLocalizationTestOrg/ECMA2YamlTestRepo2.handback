<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18e730162e3264a7bcd2b35b6f6319b1f0643671</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.ECDiffieHellman.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6d91033291154c7031f833ab34a61fb5a5e273d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6fa8106f6c74ff2a1ac7908f33bf6e6e89ede61</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract base class that Elliptic Curve Diffie-Hellman (ECDH) algorithm implementations can derive from.</source>
          <target state="translated">提供一个抽象基类算法实现可以派生自该椭圆曲线 Diffie-hellman (ECDH)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class provides the basic set of operations that all ECDH implementations must support.</source>
          <target state="translated">此类提供基本的一套所有 ECDH 实现必须都支持的操作。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class serves as the abstract base class for ECDH implementations.</source>
          <target state="translated">此类用作 ECDH 实现的抽象基类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This constructor is called by classes that derive from the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; class.</source>
          <target state="translated">从&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;类&lt;/xref:System.Security.Cryptography.ECDiffieHellman&gt;派生的类将调用此构造函数</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt; class is the only implementation that is currently included in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;类是唯一的实现，当前处于<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。&lt;/xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For information about how to create a new implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm, see the &lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt; method.</source>
          <target state="translated">有关如何创建椭圆曲线 Diffie-hellman (ECDH) 算法的新实现的信息，请参阅&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt;方法。&lt;/xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">创建的椭圆曲线 Diffie-hellman (ECDH) 算法的默认实现的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A new instance of the default implementation of this class.</source>
          <target state="translated">默认实现此类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the specified implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">创建的指定实现的椭圆曲线 Diffie-hellman (ECDH) 算法的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you develop your own implementation of an &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; object, you can use the Create method overload to create a custom <ph id="ph1">`algorithm`</ph> string that specifies your implementation.</source>
          <target state="translated">如果你要开发您自己的实现&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;对象时，你可以使用创建方法重载创建自定义<ph id="ph1">`algorithm`</ph>字符串，指定您的实现。&lt;/xref:System.Security.Cryptography.ECDiffieHellman&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`algorithm`</ph> parameter specifies the name of an implementation of the ECDH algorithm.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>参数指定实现的 ECDH 算法的名称。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following strings all refer to the same implementation, which is the only implementation currently supported in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>:      -   "ECDH"      -   "ECDiffieHellman"      -   "ECDiffieHellmanCng"      -   "System.Security.Cryptography.ECDiffieHellmanCng"       You can also provide the name of a custom ECDH implementation for the <ph id="ph2">`algorithm`</ph> parameter.</source>
          <target state="translated">中支持所有引用相同的实现，它当前是唯一的实现以下字符串<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>:-"ECDH"-"ECDiffieHellman"-"ECDiffieHellmanCng"-"System.Security.Cryptography.ECDiffieHellmanCng"可以还提供的名称的自定义 ECDH 实现<ph id="ph2">`algorithm`</ph>参数。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you do that, the &lt;xref:System.Security.Cryptography.CryptoConfig&gt; object will use it to determine whether an ECDH object can be created.</source>
          <target state="translated">如果你做，&lt;xref:System.Security.Cryptography.CryptoConfig&gt;对象将使用它来确定是否可以创建 ECDH 对象。&lt;/xref:System.Security.Cryptography.CryptoConfig&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of an implementation of the ECDH algorithm.</source>
          <target state="translated">实现 ECDH 算法的名称。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A new instance of the specified implementation of this class.</source>
          <target state="translated">指定实现此类的新实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the specified algorithm name does not map to an ECDH implementation, this method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果指定的算法名称不映射到 ECDH 实现，此方法返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">algorithm</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">algorithm</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Derives bytes that can be used as a key using a hash function, given another party's public key and hash algorithm's name.</source>
          <target state="translated">派生可用作使用哈希函数，在给定名称的另一方的公共密钥和哈希算法的密钥的字节。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This overload calls the &lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt; method passing <ph id="ph1">`null`</ph> as the prepend and append values.</source>
          <target state="translated">此重载调用&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt;方法并传递<ph id="ph1">`null`</ph>作为前置并将值追加。&lt;/xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公钥。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">要用来派生密钥材料的哈希算法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">从另一方的公钥的密钥交换密钥材料。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a hash function, given another party's public key, hash algorithm's name, a prepend value and an append value.</source>
          <target state="translated">派生类中实现时，派生可用作使用哈希函数，给定另一方的公钥、 哈希算法的名称、 前置值和追加值的密钥的字节。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公钥。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">要用来派生密钥材料的哈希算法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">要添加到派生的机密之前哈希值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">要进行哈希处理之前将追加到派生的机密的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">从另一方的公钥的密钥交换密钥材料。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">派生的类必须重写此方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">派生可用作使用基于哈希的消息身份验证代码 (HMAC) 的密钥的字节。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This overload calls the &lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt; method passing <ph id="ph1">`null`</ph> as the prepend and append values.</source>
          <target state="translated">此重载调用&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt;方法并传递<ph id="ph1">`null`</ph>作为前置并将值追加。&lt;/xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公钥。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">要用来派生密钥材料的哈希算法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The key for the HMAC.</source>
          <target state="translated">对于 HMAC 密钥。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">从另一方的公钥的密钥交换密钥材料。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">派生类中实现时，派生可用作使用基于哈希的消息身份验证代码 (HMAC) 的密钥的字节。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公钥。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">要用来派生密钥材料的哈希算法。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The key for the HMAC.</source>
          <target state="translated">对于 HMAC 密钥。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">要添加到派生的机密之前哈希值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">要进行哈希处理之前将追加到派生的机密的值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">从另一方的公钥的密钥交换密钥材料。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">派生的类必须重写此方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Derives bytes that can be used as a key, given another party's public key.</source>
          <target state="translated">提供另一方的公钥派生可为密钥的字节。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about public keys, see the &lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt; class.</source>
          <target state="translated">有关公共密钥的详细信息，请参阅&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;类。&lt;/xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公钥。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">从另一方的公钥的密钥交换密钥材料。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a Transport Layer Security (TLS) Pseudo-Random Function (PRF) derivation algorithm.</source>
          <target state="translated">派生类中实现时，派生可用作使用传输层安全 (TLS) Pseudo-Random 函数 (PRF) 派生算法的密钥的字节。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公钥。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The ASCII-encoded PRF label.</source>
          <target state="translated">ASCII 编码 PRF 标签中。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The 64-byte PRF seed.</source>
          <target state="translated">64 字节 PRF 种子。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">从另一方的公钥的密钥交换密钥材料。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">派生的类必须重写此方法。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the name of the key exchange algorithm.</source>
          <target state="translated">获取密钥交换算法的名称。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default (non-overridden) implementation of this property returns the string "ECDiffieHellman".</source>
          <target state="translated">此属性的默认 （非中重写的） 实现返回字符串"ECDiffieHellman"。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This property is inherited from the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; base class.</source>
          <target state="translated">此属性继承自&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;基的类。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The name of the key exchange algorithm.</source>
          <target state="translated">密钥交换算法的名称。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the public key that is being used by the current Elliptic Curve Diffie-Hellman (ECDH) instance.</source>
          <target state="translated">获取由当前的椭圆曲线 Diffie-hellman (ECDH) 实例的公钥。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The public part of the ECDH key pair that is being used by this <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">正在使用此 ECDH 密钥对的公共部分<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the name of the signature algorithm.</source>
          <target state="translated">获取签名算法的名称。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This property is inherited from the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; base class.</source>
          <target state="translated">此属性继承自&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;基的类。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Elliptic Curve Diffie-Hellman (ECDH) algorithm is used for key derivation, not digital signature generation.</source>
          <target state="translated">椭圆曲线 Diffie-hellman (ECDH) 算法用于密钥派生，生成不数字签名。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Therefore, this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">因此，此属性返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>