<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c309ba25ae401589ce9fd292029aa6598d91b5e1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Pipes.PipeSecurity.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">827cd13cc98da5ae12f929cdc0255657aacaa5a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5992340166ff86e23c4f50dc858026d5199d32db</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the access control and audit security for a pipe.</source>
          <target state="translated">表示的访问控制和审核安全管道。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The PipeSecurity class specifies the access rights for a pipe and how access attempts are audited.</source>
          <target state="translated">PipeSecurity 类指定为管道和如何审核的访问尝试次数的访问权限。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class represents access and audit rights as a set of rules.</source>
          <target state="translated">此类表示为一组规则的访问和审核权限。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Each access rule is represented by a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object, while each audit rule is represented by a &lt;xref:System.IO.Pipes.PipeAuditRule&gt; object.</source>
          <target state="translated">每个规则都由&lt;xref:System.IO.Pipes.PipeAccessRule&gt;对象，而每个审核规则由&lt;xref:System.IO.Pipes.PipeAuditRule&gt;对象。&lt;/xref:System.IO.Pipes.PipeAuditRule&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The PipeSecurity class is an abstraction of the underlying Microsoft Windows file security system.</source>
          <target state="translated">PipeSecurity 类是基础的 Microsoft Windows 文件安全系统的抽象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.</source>
          <target state="translated">在此系统中，每个管道具有自定义访问控制列表 (DACL)，它控制对管道的访问和系统访问控制列表 (SACL)，指定进行审核的访问控制尝试。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Pipes.PipeAccessRule&gt; and &lt;xref:System.IO.Pipes.PipeAuditRule&gt; classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;和&lt;xref:System.IO.Pipes.PipeAuditRule&gt;类是抽象的访问控制项 (Ace)，包括 Dacl 和 Sacl。&lt;/xref:System.IO.Pipes.PipeAuditRule&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The PipeSecurity class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.</source>
          <target state="translated">PipeSecurity 类隐藏的许多 Dacl 和 Sacl; 的详细信息无需担心 ACE 排序或 null DACL。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use the PipeSecurity class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.</source>
          <target state="translated">PipeSecurity 类用于检索、 添加或更改表示 DACL 和 SACL 的管道的访问规则。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To persist new or changed access or audit rules to a pipe, use the &lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt; method.</source>
          <target state="translated">若要将新的或更改访问或审核到管道的规则，请使用&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;方法。&lt;/xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To retrieve access or audit rules from an existing file, use the &lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt; method.</source>
          <target state="translated">若要检索访问权限或审核从现有的文件的规则，请使用&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;方法。&lt;/xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This constructor creates an empty &lt;xref:System.IO.Pipes.PipeSecurity&gt; object that is not based on an existing pipe.</source>
          <target state="translated">此构造函数创建一个空&lt;xref:System.IO.Pipes.PipeSecurity&gt;不基于现有管道的对象。&lt;/xref:System.IO.Pipes.PipeSecurity&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can then populate the object with access control information and apply it to a pipe.</source>
          <target state="translated">然后可以使用访问控制信息填充该对象，并将其应用于管道。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can add access or audit rules to the &lt;xref:System.IO.Pipes.PipeSecurity&gt; object using the &lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt; method.</source>
          <target state="translated">你可以添加访问权限或审核规则&lt;xref:System.IO.Pipes.PipeSecurity&gt;对象使用&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;方法。&lt;/xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt; &lt;/xref:System.IO.Pipes.PipeSecurity&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can remove access or audit rules using the &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt; method.</source>
          <target state="translated">你可以删除访问权限或审核规则使用&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;方法。&lt;/xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To persist new or changed access or audit rules to a pipe, use the &lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt; method.</source>
          <target state="translated">若要将新的或更改访问或审核到管道的规则，请使用&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;方法。&lt;/xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To retrieve access or audit rules from an existing file, use the &lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt; method.</source>
          <target state="translated">若要检索访问权限或审核从现有的文件的规则，请使用&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;方法。&lt;/xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; of the securable object that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取&lt;xref:System.Type&gt;关联与当前的安全对象<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; property and return the type they use to represent access rights.</source>
          <target state="translated">派生自的类&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;类替代&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;属性，并返回它们用于表示的访问权限的类型。&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">当使用数组或包含多个类型的安全对象的集合时，使用此属性来确定要用于每个安全对象的正确的枚举类型。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The type of the securable object that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">与当前关联的安全对象类型<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified values.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用指定的值的类。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The recommended way to create access control rules is to use the constructors of the &lt;xref:System.IO.Pipes.PipeAccessRule&gt; class.</source>
          <target state="translated">创建访问控制规则的建议的方法是使用&lt;xref:System.IO.Pipes.PipeAccessRule&gt;类&lt;/xref:System.IO.Pipes.PipeAccessRule&gt;的构造函数</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The identity that the access rule applies to.</source>
          <target state="translated">访问规则适用于标识。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It must be an object that can be cast as a <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">它必须是可强制转换为一个对象<bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The access mask of this rule.</source>
          <target state="translated">此规则的访问掩码。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</source>
          <target state="translated">访问掩码是 32 位集合的匿名位，其含义由单个集成者定义</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this rule is inherited from a parent container; otherwise false.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此规则继承自父容器;否则为 false。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the inheritance properties of the access rule.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定访问规则的继承属性的值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定是否自动传播继承的访问规则的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The propagation flags are ignored if <ph id="ph1">`inheritanceFlags`</ph> is set to <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果，则忽略传播标志<ph id="ph1">`inheritanceFlags`</ph>设置为<bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the valid access control type.</source>
          <target state="translated">指定有效的访问控制类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that this method creates.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>此方法创建的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>， <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>，或<ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph>指定了一个无效值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>为零。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nor of a type, such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>既不属于类型<bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>也不的一种类型，如<bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，可以转换为类型<bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; of the object that is associated with the access rules of the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取&lt;xref:System.Type&gt;与当前的访问规则关联的对象<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; property and return the type they use to represent access rights.</source>
          <target state="translated">派生自的类&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;类替代&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;属性，并返回它们用于表示的访问权限的类型。&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">当使用数组或包含多个类型的安全对象的集合时，使用此属性来确定要用于每个安全对象的正确的枚举类型。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The type of the object that is associated with the access rules of the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">与当前的访问规则关联的对象类型<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">将访问规则添加到自定义访问控制列表 (DACL) 与当前的<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The AddAccessRule method adds a new rule to the list of rules that a &lt;xref:System.IO.Pipes.PipeSecurity&gt; object contains.If an access control list (ACL) already exists for the specified rule, the AddAccessRule method will still add the rule, with one exception: a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object that is created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value supersedes an object that is created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value.</source>
          <target state="translated">AddAccessRule 方法向&lt;xref:System.IO.Pipes.PipeSecurity&gt;对象包含的规则的列表添加新规则。如果对于指定的规则已存在的访问控制列表 (ACL)，AddAccessRule 方法仍将添加该规则，有一个例外︰&lt;xref:System.IO.Pipes.PipeAccessRule&gt;使用创建的对象&lt;xref:System.Security.AccessControl.AccessControlType&gt;值会取代使用创建的对象&lt;xref:System.Security.AccessControl.AccessControlType&gt;值。&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt; &lt;/xref:System.IO.Pipes.PipeSecurity&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The access rule to add.</source>
          <target state="translated">要添加的访问规则。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Adds an audit rule to the System Access Control List (SACL)that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">将审核规则添加到系统访问控制列表 (SACL) 与当前的<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The AddAuditRule method adds a new audit rule to the list of rules that a &lt;xref:System.IO.Pipes.PipeSecurity&gt; object contains.</source>
          <target state="translated">方法的列表中添加新的审核规则 AddAuditRule 规则&lt;xref:System.IO.Pipes.PipeSecurity&gt;对象包含。&lt;/xref:System.IO.Pipes.PipeSecurity&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If an audit rule already exists for the specified rule, the AddAuditRule method will still add the rule.</source>
          <target state="translated">如果审核规则已存在指定的规则，AddAuditRule 方法仍将添加该规则。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The audit rule to add.</source>
          <target state="translated">要添加的审核规则。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified values.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用指定的值的类。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The recommended way to create audit rules is to use the constructors of the &lt;xref:System.IO.Pipes.PipeAuditRule&gt; class.</source>
          <target state="translated">创建审核规则的建议的方法是使用&lt;xref:System.IO.Pipes.PipeAuditRule&gt;类&lt;/xref:System.IO.Pipes.PipeAuditRule&gt;的构造函数</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The identity that the access rule applies to.</source>
          <target state="translated">访问规则适用于标识。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It must be an object that can be cast as a <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">它必须是可强制转换为一个对象<bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The access mask of this rule.</source>
          <target state="translated">此规则的访问掩码。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</source>
          <target state="translated">访问掩码是 32 位集合的匿名位，其含义由单个集成者定义</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this rule is inherited from a parent container; otherwise, false..</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此规则继承自父容器;否则为 false...</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the inheritance properties of the access rule.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定访问规则的继承属性的值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定是否自动传播继承的访问规则的值。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The propagation flags are ignored if <ph id="ph1">`inheritanceFlags`</ph> is set to <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果，则忽略传播标志<ph id="ph1">`inheritanceFlags`</ph>设置为<bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the valid access control type.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值指定有效的访问控制类型。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that this method creates.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>此方法创建的对象。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">accessMask</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">inheritanceFlags</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">propagationFlags</ph><ept id="p3">&lt;/code&gt;</ept>, or <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">flags</ph><ept id="p4">&lt;/code&gt;</ept> properties specify an invalid value.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">accessMask</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">inheritanceFlags</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">propagationFlags</ph><ept id="p3">&lt;/code&gt;</ept>, or <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">flags</ph><ept id="p4">&lt;/code&gt;</ept> properties specify an invalid value.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identityReference</ph><ept id="p1">&lt;/code&gt;</ept> property is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identityReference</ph><ept id="p1">&lt;/code&gt;</ept> property is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">accessMask</ph><ept id="p1">&lt;/code&gt;</ept> property is zero.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">accessMask</ph> <ept id="p1">&lt;/code&gt;</ept>属性为零。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identityReference</ph><ept id="p1">&lt;/code&gt;</ept> property is neither of type <bpt id="p2">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> nor of a type, such as <bpt id="p3">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, that can be converted to type <bpt id="p4">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">identityReference</ph> <ept id="p1">&lt;/code&gt;</ept>属性的类型既不是<bpt id="p2">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>也不的一种类型，如<bpt id="p3">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，可以转换为类型<bpt id="p4">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; object associated with the audit rules of the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取&lt;xref:System.Type&gt;对象与当前的审核规则关联<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; property and return the type they use to represent access rights.</source>
          <target state="translated">派生自的类&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;类替代&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;属性，并返回它们用于表示的访问权限的类型。&lt;/xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">当使用数组或包含多个类型的安全对象的集合时，使用此属性来确定要用于每个安全对象的正确的枚举类型。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The type of the object that is associated with the audit rules of the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">与当前的审核规则关联的对象类型<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Saves the specified sections of the security descriptor that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to permanent storage.</source>
          <target state="translated">将保存与当前关联的安全描述符的指定的部分<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到永久存储的对象。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The handle of the securable object that the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is associated with.</source>
          <target state="translated">安全对象的句柄对象当前<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象与之关联。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Saves the specified sections of the security descriptor that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to permanent storage.</source>
          <target state="translated">将保存与当前关联的安全描述符的指定的部分<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到永久存储的对象。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name of the securable object that the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is associated with.</source>
          <target state="translated">对象的名称的安全对象的当前<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象与之关联。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">删除从自由访问控制列表 (DACL) 与当前关联的访问规则<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The RemoveAccessRule method removes either all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules or all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.</source>
          <target state="translated">RemoveAccessRule 方法移除所有匹配&lt;xref:System.Security.AccessControl.AccessControlType&gt;访问规则或所有匹配&lt;xref:System.Security.AccessControl.AccessControlType&gt;从当前访问规则&lt;xref:System.IO.Pipes.PipeSecurity&gt;对象。&lt;/xref:System.IO.Pipes.PipeSecurity&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For example, you can use this method to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules for a user by passing a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, and a user account.</source>
          <target state="translated">例如，你可以使用此方法删除所有&lt;xref:System.Security.AccessControl.AccessControlType&gt;通过访问用户的规则&lt;xref:System.IO.Pipes.PipeAccessRule&gt;对象创建使用&lt;xref:System.Security.AccessControl.AccessControlType&gt;值，&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值和用户帐户。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The RemoveAccessRule method removes any deny rules that specify the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value or the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value.</source>
          <target state="translated">RemoveAccessRule 方法中删除任何指定的拒绝规则&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值或&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The access rule to remove.</source>
          <target state="translated">要删除的访问规则。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the operation is successful; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果操作成功，则否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">删除从自由访问控制列表 (DACL) 与当前关联的指定的访问规则<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt; method removes either all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules or all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;方法移除所有匹配&lt;xref:System.Security.AccessControl.AccessControlType&gt;访问规则或所有匹配&lt;xref:System.Security.AccessControl.AccessControlType&gt;从当前访问规则&lt;xref:System.IO.Pipes.PipeSecurity&gt;对象。&lt;/xref:System.IO.Pipes.PipeSecurity&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, you can use this method to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules for a user by passing a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, and a user account.</source>
          <target state="translated">例如，你可以使用此方法删除所有&lt;xref:System.Security.AccessControl.AccessControlType&gt;通过访问用户的规则&lt;xref:System.IO.Pipes.PipeAccessRule&gt;对象创建使用&lt;xref:System.Security.AccessControl.AccessControlType&gt;值，&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值和用户帐户。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt; method removes any deny rules that specify the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value or the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;方法中删除任何指定的拒绝规则&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值或&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The access rule to remove.</source>
          <target state="translated">要删除的访问规则。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Removes an audit rule from the System Access Control List (SACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">删除从当前与关联系统访问控制列表 (SACL) 的审核规则<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The RemoveAuditRule method removes either all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rules or all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rules from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.</source>
          <target state="translated">RemoveAuditRule 方法移除所有匹配&lt;xref:System.Security.AccessControl.AccessControlType&gt;审核规则或所有匹配&lt;xref:System.Security.AccessControl.AccessControlType&gt;审核从当前规则&lt;xref:System.IO.Pipes.PipeSecurity&gt;对象。&lt;/xref:System.IO.Pipes.PipeSecurity&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For example, you can use this method to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rules for a user by passing a &lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value, and a user account.</source>
          <target state="translated">例如，你可以使用此方法删除所有&lt;xref:System.Security.AccessControl.AccessControlType&gt;审核规则的用户通过将传递&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;对象创建使用&lt;xref:System.Security.AccessControl.AccessControlType&gt;值，&lt;xref:System.Security.AccessControl.AuditFlags&gt;值和用户帐户。&lt;/xref:System.Security.AccessControl.AuditFlags&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.FileSystemAuditRule&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When you do this, the RemoveAuditRule method removes any deny rules that specify the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value or the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value.</source>
          <target state="translated">RemoveAuditRule 方法执行此操作时，删除任何指定的拒绝规则&lt;xref:System.Security.AccessControl.AuditFlags&gt;值或&lt;xref:System.Security.AccessControl.AuditFlags&gt;值。&lt;/xref:System.Security.AccessControl.AuditFlags&gt; &lt;/xref:System.Security.AccessControl.AuditFlags&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The audit rule to remove.</source>
          <target state="translated">要删除的审核规则。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the audit rule was removed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果已删除的审核规则;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">删除具有与指定的审核规则从系统访问控制列表 (SACL) 与当前的相同的安全标识符的所有审核规则<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The RemoveAuditRuleAll method removes all audit rules for the specified user.</source>
          <target state="translated">RemoveAuditRuleAll 方法中删除指定的用户的所有审核规则。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>It ignores all values in the &lt;xref:System.IO.Pipes.PipeAuditRule&gt; object except the user account.</source>
          <target state="translated">它会忽略中的所有值&lt;xref:System.IO.Pipes.PipeAuditRule&gt;对象除外的用户帐户。&lt;/xref:System.IO.Pipes.PipeAuditRule&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The audit rule to remove.</source>
          <target state="translated">要删除的审核规则。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">删除从当前与关联系统访问控制列表 (SACL) 的指定的审核规则<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The RemoveAuditRuleSpecific method removes the specified matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rule or the specified matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rule from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.</source>
          <target state="translated">RemoveAuditRuleSpecific 方法中删除指定的匹配&lt;xref:System.Security.AccessControl.AccessControlType&gt;审核规则或指定的匹配&lt;xref:System.Security.AccessControl.AccessControlType&gt;从当前的审核规则&lt;xref:System.IO.Pipes.PipeSecurity&gt;对象。&lt;/xref:System.IO.Pipes.PipeSecurity&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For example, you can use this method to remove a specified &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rule for a user by passing a &lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value, and a user account.</source>
          <target state="translated">例如，你可以使用此方法删除指定&lt;xref:System.Security.AccessControl.AccessControlType&gt;通过将传递用户的审核规则&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;对象创建使用&lt;xref:System.Security.AccessControl.AccessControlType&gt;值，&lt;xref:System.Security.AccessControl.AuditFlags&gt;值和用户帐户。&lt;/xref:System.Security.AccessControl.AuditFlags&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.FileSystemAuditRule&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When you do this, the RemoveAuditRuleSpecific method removes only a deny rule that specifies the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value.</source>
          <target state="translated">执行此操作时，RemoveAuditRuleSpecific 方法中删除指定的拒绝规则&lt;xref:System.Security.AccessControl.AuditFlags&gt;值。&lt;/xref:System.Security.AccessControl.AuditFlags&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>It does not remove any deny rules that specify the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value.</source>
          <target state="translated">它不会删除任何指定的拒绝规则&lt;xref:System.Security.AccessControl.AuditFlags&gt;值。&lt;/xref:System.Security.AccessControl.AuditFlags&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The audit rule to remove.</source>
          <target state="translated">要删除的审核规则。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and then adds the specified access rule.</source>
          <target state="translated">移除所有访问规则中自由访问控制列表 (DACL) 与当前的<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，然后将添加指定的访问规则。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The ResetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id="ph1">`rule`</ph> parameter.</source>
          <target state="translated">ResetAccessRule 方法将添加指定的访问控制列表 (ACL) 规则或覆盖匹配任何相同 ACL 规则<ph id="ph1">`rule`</ph>参数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value and the ResetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will be overwritten.</source>
          <target state="translated">例如，如果<ph id="ph1">`rule`</ph>参数指定&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值和 ResetAccessRule 方法查找指定的相同 ACL 规则&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值，则相同的规则将被覆盖。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If the ResetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will also be overwritten.</source>
          <target state="translated">如果 ResetAccessRule 方法找到相同的 ACL 规则，它指定&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值，则相同的规则也将被覆盖。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The access rule to add.</source>
          <target state="translated">要添加的访问规则。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">设置访问规则中自由访问控制列表 (DACL) 与当前的<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The SetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value of the <ph id="ph1">`rule`</ph> parameter.</source>
          <target state="translated">SetAccessRule 方法将添加指定的访问控制列表 (ACL) 规则或覆盖匹配任何相同 ACL 规则&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值<ph id="ph1">`rule`</ph>参数。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value and the SetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will be overwritten.</source>
          <target state="translated">例如，如果<ph id="ph1">`rule`</ph>参数指定&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值和 SetAccessRule 方法查找指定的相同 ACL 规则&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值，则相同的规则将被覆盖。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If the SetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will not be overwritten.</source>
          <target state="translated">如果 SetAccessRule 方法找到相同的 ACL 规则，它指定&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值，相同的规则不会被覆盖。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The rule to set.</source>
          <target state="translated">要设置的规则。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Sets an audit rule in the System Access Control List (SACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">设置在与当前关联系统访问控制列表 (SACL) 的审核规则<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The SetAuditRule method adds the specified audit rule or overwrites any identical audit rules that match the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value of the <ph id="ph1">`rule`</ph> parameter.</source>
          <target state="translated">SetAuditRule 方法将添加指定的审核规则或覆盖匹配任何相同的审核规则&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值<ph id="ph1">`rule`</ph>参数。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value and the SetAuditRule method finds an identical audit rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will be overwritten.</source>
          <target state="translated">例如，如果<ph id="ph1">`rule`</ph>参数指定&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值和 SetAuditRule 方法查找指定的相同的审核规则&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值，则相同的规则将被覆盖。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If the SetAuditRule method finds an identical audit rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will not be overwritten.</source>
          <target state="translated">如果 SetAuditRule 方法找到的相同的审核规则，它指定&lt;xref:System.IO.Pipes.PipeAccessRights&gt;值，相同的规则不会被覆盖。&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The rule to set.</source>
          <target state="translated">要设置的规则。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>