<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb8f9739e674c5062a08210f1e8f16b2798f50ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18d4c85a6ed3e01f39beec0a884c2a08ef6b77cd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c07d6684782aa957af7231de75350efc1a406fb9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a connection point object that enables a server control acting as a provider to form a connection with a consumer.</source>
          <target state="translated">定义使服务器控件中充当提供程序以形成与使用者连接的连接点对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</source>
          <target state="translated">在两个服务器控件之间的每个 Web 部件连接，每个控件必须具有 （以及其他要求） 关联的连接点对象，使它可连接到另一个控件并可提供或使用数据，具体取决于是否将控件指定为提供程序或连接的使用者。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; object in general contains the details for how a control can connect to another control and the type of data it can share.</source>
          <target state="translated">A&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;对象通常包含控件可以如何连接到另一个控件，它可以共享的数据的类型的详细信息。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For a control acting as the provider in a connection, its connection point must be a ProviderConnectionPoint object.</source>
          <target state="translated">对于作为连接中的提供程序的控件，其连接点必须 ProviderConnectionPoint 对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For details on Web Parts connections and connection points, see the topics listed in the See Also section below.</source>
          <target state="translated">有关 Web 部件连接和连接点的详细信息，请参阅下面的另请参阅部分中列出的主题。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a ProviderConnectionPoint object, several steps are required:      1.</source>
          <target state="translated">若要创建 ProviderConnectionPoint 对象，几个步骤是必需的︰ 1。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create an interface.</source>
          <target state="translated">创建用户界面。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When a provider shares data with a consumer, it does so by getting an instance of an interface, and returning that instance to a consumer.</source>
          <target state="translated">当与使用者提供程序共享数据时，它会以通过获取接口的实例并将该实例返回给使用者。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Implement the interface in a provider.</source>
          <target state="translated">提供程序中实现的接口。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; or other server control (any type of server control in a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; zone can be used) that will be the provider must implement the interface created in the first step.</source>
          <target state="translated">A&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;或其他服务器控件 (任何类型的服务器控件中&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;区域可用) 将提供程序必须实现的第一步中创建的接口。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Identify a callback method.</source>
          <target state="translated">标识一个回调方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A method in the provider must be identified as the callback method to establish a connection.</source>
          <target state="translated">在提供程序方法必须标识为要建立连接的回调方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This method returns an instance of the implemented interface to a consumer.</source>
          <target state="translated">此方法返回给使用者实现的接口的实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Web Parts approach for identifying a callback method in the provider is to add a <ph id="ph1">`ConnectionProvider`</ph> metadata attribute (defined by the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt; class) to the method that returns the interface instance.</source>
          <target state="translated">标识提供程序中的回调方法的 Web 部件方法是将添加<ph id="ph1">`ConnectionProvider`</ph>元数据属性 (由定义&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt;类) 返回的接口实例的方法。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When the attribute is added, the only required parameter is a display name to use for the provider connection point.</source>
          <target state="translated">添加属性后，所需的唯一参数是要使用的提供程序连接点的显示名称。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optional parameters can also be added, such as an ID for the connection point.</source>
          <target state="translated">可选参数也可以添加，例如连接点的 ID。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>After a control has been equipped to act as a provider, the control can participate in connections (assuming that a consumer control is similarly equipped and available).</source>
          <target state="translated">控件具有已配置为提供者后，该控件可以参与 （假设使用者控制了类似配置并且可用） 的连接。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To create a static, declarative connection in the markup of a Web page, developers can use the <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">若要创建的网页上的标记的静态声明性的连接，开发人员可以使用<ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph>元素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`ConnectionProvider`</ph> attribute in the provider source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the <ph id="ph2">`ProviderConnectionPointID`</ph> attribute in the <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> element on a page.</source>
          <target state="translated">如果<ph id="ph1">`ConnectionProvider`</ph>标识回叫方法的提供程序源代码中的属性指定的 ID 的连接点，则该值必须分配给<ph id="ph2">`ProviderConnectionPointID`</ph>属性中<ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph>页面上的元素。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One reason that a developer might specify an ID for a provider connection point is if there are multiple connection points in the provider control.</source>
          <target state="translated">开发人员可能会指定提供程序连接点的 ID 的原因之一是提供者控件中是否存在多个连接点。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If an ID is not specified for the provider connection point in the provider control, a value does not have to be assigned to the <ph id="ph1">`ProviderConnectionPointID`</ph> attribute in the page either, because the connection will be created using a default value obtained from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt; field.</source>
          <target state="translated">如果没有为提供程序控件中的提供程序连接点指定 ID，值没有要分配给<ph id="ph1">`ProviderConnectionPointID`</ph>属性页中，因为将使用从获取的默认值创建连接&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;字段。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To create a connection in code, developers must create a new ProviderConnectionPoint object by calling the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt; method and passing to it the ID of the provider control, along with the ID or index of the defined ProviderConnectionPoint object in the provider control.</source>
          <target state="translated">若要在代码中创建的连接，开发人员必须创建一个新的 ProviderConnectionPoint 对象通过调用&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;方法并向其传递提供程序管理，以及的 ID 或索引中的提供者控件的定义 ProviderConnectionPoint 对象的 ID。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The returned ProviderConnectionPoint object, along with a reference to the provider control, a reference to the consumer control, and a corresponding &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; object, are all passed to the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt; method to create a new &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; object.</source>
          <target state="translated">返回的 ProviderConnectionPoint 对象，以及对提供程序控件的引用、 对使用者控件和相应的引用&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;对象，都传递给&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;方法来创建一个新&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;对象。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Although developers can use provider connection points as part of establishing connections either declaratively or programmatically, users can also interact with provider connection points to establish connections through the user interface (UI).</source>
          <target state="translated">开发人员可以使用提供程序连接点，以声明方式或以编程方式建立连接的一部分，但用户可以与提供程序连接点建立连接通过用户界面 (UI) 还进行交互。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If developers declare a &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt; control on a Web page, it provides a run-time UI for users to create connections.</source>
          <target state="translated">如果开发人员声明&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;控件在网页上，它提供对用户创建连接的运行时用户界面。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If users choose the consumer control as the starting point for establishing the connection by clicking its connect verb (they could also choose the provider; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display name of the available provider connection point (or points if there are multiple ones).</source>
          <target state="translated">如果用户选择为通过单击建立连接的起始点的使用者控制其连接谓词 （它们还可以选择提供程序; 没有任何区别中生成连接），在 UI 中，他们将看到具有可用的提供程序连接点 （或如果有多个快照的点） 的显示名称的下拉列表框控件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Users must select a provider connection point to create a connection.</source>
          <target state="translated">用户必须选择提供程序连接点创建连接。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A ProviderConnectionPoint object associates directly with a specific provider control, and stores details about a connection in the properties it inherits from the base &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">ProviderConnectionPoint 对象将直接与一个特定的提供程序相关联，并将连接的详细信息存储在它继承自基的&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;类&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;的属性</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, in the inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; property, a provider connection point keeps the type of interface returned by the provider.</source>
          <target state="translated">例如，在继承&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;属性，提供程序连接点保存的提供程序返回的接口的类型。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the provider and consumer in a connection both work with the same interface type, the controls are compatible and capable of forming a direct connection.</source>
          <target state="translated">如果提供程序和中都使用相同的连接的使用者接口类型，这些控件是兼容并能够建立直接连接。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the provider and consumer cannot work with the same interface type, they are incompatible and must use a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object to translate the provider connection point's &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; value into a type that the consumer can work with.</source>
          <target state="translated">如果提供程序和使用者不能具有相同的接口类型，它们是不兼容，并且必须使用&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;要转换的提供程序连接点对象&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;值转换为使用者可以使用的类型。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Another important inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt; property, which provides a friendly name to display in the UI for users to choose a provider connection point when creating connections.</source>
          <target state="translated">另一个重要的继承的属性是&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;属性，它提供一个友好名称以显示在 UI 中供用户选择提供程序连接点时创建连接。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The display name is the required parameter when developers add a <ph id="ph1">`ConnectionProvider`</ph> attribute to the callback method in a provider control.</source>
          <target state="translated">显示名称是必需的参数，开发人员添加时<ph id="ph1">`ConnectionProvider`</ph>属性设为提供者控件中的回调方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt; property is also useful, as indicated above, because it provides a unique identifier for a provider connection point in the event that a provider has multiple connection points.</source>
          <target state="translated">继承&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;属性也十分有用，因为上述，由于其提供的唯一标识符的提供程序连接点的事件中某个提供程序具有多个连接点。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A provider can have multiple ProviderConnectionPoint objects defined in it, and in this case, when developers add the <ph id="ph1">`ConnectionProvider`</ph> attribute to a method, they should specify an ID value to distinguish each connection point.</source>
          <target state="translated">提供程序可以有多个 ProviderConnectionPoint 对象定义中，然后在此情况下，当开发人员将添加<ph id="ph1">`ConnectionProvider`</ph>属性到方法时，它们应指定一个要区分每个连接点的 ID 值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>One other notable inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt; property, which indicates whether a provider connection point can connect simultaneously to multiple consumers.</source>
          <target state="translated">另一个值得注意的继承的属性是&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;属性，用于指示提供程序连接点是否可以同时连接到多个使用者。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This property value is <ph id="ph1">`true`</ph> by default for provider connection points (whereas it defaults to <ph id="ph2">`false`</ph> for consumer connection points).</source>
          <target state="translated">此属性值是<ph id="ph1">`true`</ph>默认情况下，提供程序连接点 (而它默认为<ph id="ph2">`false`</ph>的使用者连接点)。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The ProviderConnectionPoint class adds several unique methods to the members it inherits from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">ProviderConnectionPoint 类会将多个唯一的方法添加到成员它将继承&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;类。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method retrieves an instance of the interface that the callback method will return to consumers.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;方法检索回调方法将返回给使用者的接口的实例。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt; method retrieves additional consumer interfaces that are part of an existing connection, but are not the interfaces used to establish the connection.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt;方法检索属于的现有连接的其他消费者接口，但不是接口用于建立连接。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The ProviderConnectionPoint constructor for the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; class simply calls the base constructor, passing to it the various parameters and initializing the base class.</source>
          <target state="translated">ProviderConnectionPoint 构造函数的&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;类只需调用基构造函数，传递到它的各种参数，并初始化基的类。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</source>
          <target state="translated">基类构造函数检查大量的连接点的参数，并可能会引发几个例外。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For a list of possible exceptions, see the Exceptions section.</source>
          <target state="translated">有关可能的异常的列表，请参阅异常部分。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can call the ProviderConnectionPoint constructor to create your own instance of the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; class.</source>
          <target state="translated">你可以调用 ProviderConnectionPoint 构造函数来创建您自己的实例的&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;类。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>However, in cases where you are simply establishing a connection and not extending the class, you should call the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt; method to return an existing connection point object from a provider.</source>
          <target state="translated">但是，在你所在只需建立的连接并不扩展类的情况下，应调用&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;方法从提供程序返回现有的连接点对象。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The method in the provider control that returns an interface instance to consumers to establish a connection.</source>
          <target state="translated">将接口实例返回给使用者以建立的连接提供程序控件中的方法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the interface that the provider serves to consumers.</source>
          <target state="translated">&lt;xref:System.Type&gt;的提供程序提供给使用者的接口。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the provider control with which the provider connection point is associated.</source>
          <target state="translated">&lt;xref:System.Type&gt;提供程序连接点与之关联的提供者控件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A friendly display name for the provider connection point that appears to users in the connection user interface (UI).</source>
          <target state="translated">用户在连接用户界面 (UI) 中显示的提供程序连接点友好显示名称。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A unique identifier for the provider connection point.</source>
          <target state="translated">提供程序连接点的唯一标识符。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating whether the provider connection point can have multiple simultaneous connections with consumers.</source>
          <target state="translated">一个布尔值，该值指示提供程序连接点是否可以具有多个使用者的并发连接。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>is not the same type as the provider control (or a valid class derived from it).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>不是与提供程序控件相同的类型 （或有效的类派生自它）。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Invokes the callback method in a provider control that gets an interface instance to return to consumers.</source>
          <target state="translated">调用中获取要返回给使用者的接口实例提供程序控制的回调方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method returns an object from the provider control that is an instance of the interface used to establish a connection.</source>
          <target state="translated">此方法是用来建立连接的接口的实例的提供程序控件从返回对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The type of the object will be the type of the implemented interface.</source>
          <target state="translated">对象的类型将是接口的实现的类型。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, two interfaces that are implemented for connections in the Web Parts control set are &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt; and &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;.</source>
          <target state="translated">例如，两个连接 Web 部件控件集内的实现的接口为&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;和&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;.&lt;/xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When the GetObject method is called on a &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; object, if the associated provider implements one of these interfaces, the returned object will be of the same type.</source>
          <target state="translated">GetObject 方法上的调用时&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;对象，如果关联的提供程序实现这些接口之一，返回的对象将相同的类型。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The GetObject method is called by &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; objects when a connection is being activated.</source>
          <target state="translated">GetObject 方法由调用&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;对象时连接正在激活。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is a critical step that actually initiates a connection and begins the process that enables two controls to share data.</source>
          <target state="translated">这是一个关键步骤实际发起的连接并开始过程，从而使两个控件共享数据。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The consumer control in a connection must be able to work with the same type of interface as the provider.</source>
          <target state="translated">连接中的使用者控件必须能够使用相同类型的接口作为提供程序。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If it does not, the controls are incompatible and a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object must be used to establish a connection.</source>
          <target state="translated">如果不存在，会不兼容的控件和&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;对象必须用于建立连接。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The control acting as the provider in a Web Parts connection.</source>
          <target state="translated">作为 Web 部件连接中的提供程序的控件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is an instance of the interface a provider returns to consumers to establish a connection.</source>
          <target state="translated">&lt;xref:System.Object&gt;即接口提供程序的实例返回给使用者建立连接。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets an optional collection of secondary interfaces that can be supported by a provider connection point.</source>
          <target state="translated">获取可选辅助接口可以支持的提供程序连接点的集合。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A provider connection point object always has a default interface that is used to establish a connection with consumers.</source>
          <target state="translated">提供程序连接点对象始终具有一个默认接口，用于与使用者建立连接。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An instance of the default interface is retrieved by calling the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method on a &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; object.</source>
          <target state="translated">通过调用检索默认接口的实例&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;方法&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;对象。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>However, some provider controls will implement multiple interfaces to provide to consumers as part of a connection.</source>
          <target state="translated">但是，某些提供程序控件将实现多个接口来作为连接的一部分提供给使用者。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>These interfaces, which are not the default ones used to establish a connection, are called secondary interfaces.</source>
          <target state="translated">这些接口，不使用默认模板用于建立连接，称为辅助接口。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The GetSecondaryInterfaces method provides a way to return a collection of references to the secondary interfaces, just as the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method returns a reference to the default interface.</source>
          <target state="translated">GetSecondaryInterfaces 方法可以返回就像对辅助接口的引用集合&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;方法返回对默认接口的引用。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The control acting as the provider in a Web Parts connection.</source>
          <target state="translated">作为 Web 部件连接中的提供程序的控件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of additional interfaces provided by the control acting as a provider.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>由控件中充当提供程序提供的其他接口。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>