<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fdb83d175479136df33f1017a6ceab13106b6ed</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Messaging.MessageQueueEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d182676a1fde3342b67cf5b75472ec63c5b3c0d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4672ec0455c354d8f3060781255926efffa18c3c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">提供一个只进游标，用于枚举消息队列。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use MessageQueueEnumerator for dynamic interaction with queues on the network.</source>
          <target state="translated">与网络上的队列进行动态交互使用 MessageQueueEnumerator。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Methods available through the &lt;xref:System.Messaging.MessageQueue&gt; class can return either a MessageQueueEnumerator containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</source>
          <target state="translated">方法可通过&lt;xref:System.Messaging.MessageQueue&gt;该类可以返回包含队列或包含队列集合调用了指定的方法时的快照的数组的动态列表的任一 MessageQueueEnumerator。&lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>There is no defined ordering of queues in a network.</source>
          <target state="translated">没有任何已定义的排序的网络中的队列。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</source>
          <target state="translated">它们不是有序，例如，通过计算机、 标签、 公共或私有状态或其他用户可访问的条件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A MessageQueueEnumerator is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">MessageQueueEnumerator 是光标，初始化为动态列表的开头。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can move the cursor to the first queue of the enumeration by calling &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">你可以将光标移到枚举的第一个队列中通过调用&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>After the enumerator has been initialized, you can use &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt; to step forward through the remaining queues.</source>
          <target state="translated">枚举数已初始化后，你可以使用&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;来单步执行其余的队列的前滚。&lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It is not possible to step backward with a MessageQueueEnumerator.</source>
          <target state="translated">不能与 MessageQueueEnumerator 逐步向后。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A cursor only allows forward movement through the queue enumeration.</source>
          <target state="translated">游标只允许通过队列枚举向前移动。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, you can call &lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt; to reset the enumeration and put the cursor at the beginning of the list again.</source>
          <target state="translated">但是，你可以调用&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;重置枚举，并将光标放在再次列表的开头。&lt;/xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</source>
          <target state="translated">枚举数是动态的因为可以通过枚举器访问的队列中追加光标的当前位置之外。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</source>
          <target state="translated">光标的当前位置不能访问不事先调用 Reset 之前插入队列。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">释放与枚举器关联的资源。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The operating system retains an open handle, &lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;, to the queue enumerator during the lifetime of the cursor.</source>
          <target state="translated">打开的句柄，操作系统会保留&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;，对光标的生存期内队列的枚举数。&lt;/xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you finish working with the enumerator, call Close to release the resources associated with the handle.</source>
          <target state="translated">当你完成使用枚举器时，调用接近释放与句柄关联的资源。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the current <bpt id="p1">&lt;xref href="System.Messaging.MessageQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the enumeration.</source>
          <target state="translated">获取当前<bpt id="p1">&lt;xref href="System.Messaging.MessageQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the enumerator is created, it does not point to anything, so Current is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">创建枚举器时，它不指向任何内容，因此当前无效，将引发异常，如果访问它。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You must call &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt; to position the cursor at the first queue in the enumeration.</source>
          <target state="translated">必须调用&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;将光标定位在枚举中的第一个队列。&lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Multiple calls to Current with no intervening calls to &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt; will return the same &lt;xref:System.Messaging.MessageQueue&gt; object.</source>
          <target state="translated">对当前具有到任何干预调用的多个调用&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;将返回相同&lt;xref:System.Messaging.MessageQueue&gt;对象。&lt;/xref:System.Messaging.MessageQueue&gt; &lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">将光标当前定位队列。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You called Current before the first call to &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext<bpt id="p1">*</bpt>&gt;. The cursor is located before the first queue in the enumeration.       -or-       You called Current after a call to &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext<ept id="p1">*</ept>&gt; had returned false (indicating the cursor is located after the last queue in the enumeration).</source>
          <target state="translated">在首次调用之前调用当前&lt;&gt; <bpt id="p1">*</bpt>1&gt;。光标位于之前在枚举中的第一个队列。      -或-在调用之后调用当前&lt;&gt; <ept id="p1">*</ept>1&gt; 已经返回 false （指示光标是否位于后在枚举中的最后一个队列）。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Calling Dispose allows the resources used by the &lt;xref:System.Messaging.MessageQueueEnumerator&gt; to be reallocated for other purposes.</source>
          <target state="translated">调用 Dispose 允许使用的资源&lt;xref:System.Messaging.MessageQueueEnumerator&gt;可以重新分配用于其他目的。&lt;/xref:System.Messaging.MessageQueueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关释放的详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Messaging.MessageQueueEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Messaging.MessageQueueEnumerator&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.Messaging.MessageQueueEnumerator&gt;引用。&lt;/xref:System.Messaging.MessageQueueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the native Message Queuing handle used to locate queues in a network.</source>
          <target state="translated">获取本机消息队列句柄用于定位在网络中的队列。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you no longer need this &lt;xref:System.Messaging.MessageQueueEnumerator&gt; instance, call &lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt; to free this handle to the resource.</source>
          <target state="translated">当不再需要此&lt;xref:System.Messaging.MessageQueueEnumerator&gt;实例时，调用&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;来释放此资源的句柄。&lt;/xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt; &lt;/xref:System.Messaging.MessageQueueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The native handle to the current queue.</source>
          <target state="translated">当前队列本机句柄。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The handle does not exist.</source>
          <target state="translated">句柄不存在。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">调用代码没有浏览权限。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next queue of the enumeration, if one is currently available.</source>
          <target state="translated">如果当前可用，将枚举数推进到枚举中的下一个队列。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>MoveNext returns <ph id="ph1">`false`</ph> immediately if there are no queues associated with the enumeration.</source>
          <target state="translated">MoveNext 返回<ph id="ph1">`false`</ph>立即如果与枚举没有任何队列。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>MoveNext will return <ph id="ph1">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated">将返回 MoveNext<ph id="ph1">`true`</ph>直到它已达到集合的末尾。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It will then return <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">然后，它将返回<ph id="ph1">`false`</ph>每个连续调用。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However once MoveNext has returned <ph id="ph1">`false`</ph>, accessing the &lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt; property will throw an exception.</source>
          <target state="translated">但是后返回 MoveNext <ph id="ph1">`false`</ph>，则访问&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;属性将引发异常。&lt;/xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Upon creation, an enumerator is conceptually positioned before the first &lt;xref:System.Messaging.MessageQueue&gt; of the enumeration, and the first call to MoveNext brings the first queue of the enumeration into view.</source>
          <target state="translated">创建后，枚举数从概念上讲定位早于第一个&lt;xref:System.Messaging.MessageQueue&gt;MoveNext 调用第一个枚举，以及使到视图枚举的第一个队列。&lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next queue; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has reached the end of the enumeration.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果枚举数已成功地推进到下一个队列中;，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果枚举数已达到枚举末尾。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">调用代码没有浏览权限。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Resets the cursor, so it points to the beginning of the enumeration.</source>
          <target state="translated">重置光标，使它指向在枚举的开头。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">一个枚举器会只进方向移动。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Use this method to return to the beginning of the enumeration of queues.</source>
          <target state="translated">使用此方法返回的队列的枚举的起始位置。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Reset positions the cursor at the first queue in the list.</source>
          <target state="translated">重置将光标置于在列表中的第一个队列。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You do not need to call &lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt; after calling Reset to move the cursor forward to the first queue in the enumeration.</source>
          <target state="translated">不需要调用&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;在调用重置移动光标后转发到枚举中的第一个队列。&lt;/xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the current <bpt id="p1">&lt;xref href="System.Messaging.MessageQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the enumeration.</source>
          <target state="translated">获取当前<bpt id="p1">&lt;xref href="System.Messaging.MessageQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">将光标当前定位队列。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>