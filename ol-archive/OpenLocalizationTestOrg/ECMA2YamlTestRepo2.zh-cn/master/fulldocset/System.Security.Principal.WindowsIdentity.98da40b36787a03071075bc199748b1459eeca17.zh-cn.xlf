<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a38df838726c1803f30d1526e370c8e3d9f664b5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Principal.WindowsIdentity.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93dd8a165c8e9ea575c5ff06f850939992a0adbb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06cc171de3de0aae0c122d51e479270b4a9706ed</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a Windows user.</source>
          <target state="translated">表示 Windows 用户。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A&gt; method to create a WindowsIdentity object that represents the current user.</source>
          <target state="translated">调用&lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A&gt;方法来创建一个表示当前用户的 WindowsIdentity 对象。&lt;/xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 此类型实现&lt;xref:System.IDisposable&gt;接口。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">完成后使用类型的操作后，你应释放类型直接或间接。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">若要直接释放类型，调用其&lt;xref:System.IDisposable.Dispose%2A&gt;中的方法<ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph>块。&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要间接释放类型，使用一种语言构造如<ph id="ph1">`using`</ph>（在 C# 中) 或<ph id="ph2">`Using`</ph>（在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分&lt;xref:System.IDisposable&gt;接口主题。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified Windows account token.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，用于表示指定的 Windows 帐户标记的用户。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
          <target state="translated">下表显示&lt;xref:System.Security.Principal.WindowsIdentity&gt;.&lt;/xref:System.Security.Principal.WindowsIdentity&gt;实例的初始属性的值</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;|<ph id="ph1">`Negotiate`</ph>|   |&lt;xref:System.Security.Principal.WindowsAccountType&gt;|<ph id="ph2">`Normal`</ph>|   |&lt;xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;|<ph id="ph3">`false`</ph>|      &gt; <ph id="ph4">[!NOTE]</ph> &gt;  You can retrieve the token represented by <ph id="ph5">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph6">`LogonUser`</ph> function.</source>
          <target state="translated">|属性 |初始值 |  |--------------|-------------------|  |&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;|<ph id="ph1">`Negotiate`</ph>|  |&lt;xref:System.Security.Principal.WindowsAccountType&gt;|<ph id="ph2">`Normal`</ph>|  |&lt;xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;|<ph id="ph3">`false`</ph>|    &amp;1;&gt; <ph id="ph4">[!NOTE]</ph>&amp;1;&gt; 可以检索所表示的令牌<ph id="ph5">`userToken`</ph>通过调用非托管的代码如 Win32 API<ph id="ph6">`LogonUser`</ph>函数。&lt;/xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt; &lt;/xref:System.Security.Principal.WindowsAccountType&gt; &lt;/xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
          <target state="translated">始终释放<ph id="ph1">`userToken`</ph>通过调用 Win32 API<ph id="ph2">`CloseHandle`</ph>函数。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">调用非托管的代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The account token for the user on whose behalf the code is running.</source>
          <target state="translated">帐户标记，以该用户的名义运行代码。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph>为 0。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph>是重复和无效的模拟。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
          <target state="translated">-或者-出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的类<bpt id="p2">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The object from which to construct the new instance of <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从中构造的新实例的对象<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified User Principal Name (UPN).</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示指定用户主体名称 (UPN) 的用户类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A UPN has the format <bpt id="p1">*</bpt>username<ept id="p1">*</ept><ph id="ph1">@</ph><bpt id="p2">*</bpt>domainname<ept id="p2">*</ept>.com, in other words, an email address.</source>
          <target state="translated">UPN 采用格式<bpt id="p1">*</bpt>用户名<ept id="p1">*</ept><ph id="ph1">@</ph><bpt id="p2">*</bpt>domainname<ept id="p2">*</ept>.com，换而言之，电子邮件地址。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The UPN identified in <ph id="ph1">`sUserPrincipalName`</ph> is used to retrieve a token for that user through the Win32 API <ph id="ph2">`LsaLogonUser`</ph> function.</source>
          <target state="translated">中的 UPN 标识<ph id="ph1">`sUserPrincipalName`</ph>用于检索该用户通过 Win32 API 的令牌<ph id="ph2">`LsaLogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In turn that token is used to identify the user.</source>
          <target state="translated">反过来，该令牌用于标识用户。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An exception might be returned due to the inability to log on using the supplied UPN.</source>
          <target state="translated">异常可能会返回由于无法使用所提供的 UPN 登录。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt; 此构造函数旨在供情况下，仅在加入到 Windows Server 2003 或更高版本的域的计算机上。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An exception is thrown for earlier domain types.</source>
          <target state="translated">对于更早版本的域类型引发异常。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This restriction is due to the fact that this constructor uses the <bpt id="p1">[</bpt>KERB_S4U_LOGON structure<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>, which was first introduced in Windows Server 2003.</source>
          <target state="translated">此限制是因为，此构造函数使用<bpt id="p1">[</bpt>KERB_S4U_LOGON 结构<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>，最初在 Windows Server 2003 中引入。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The UPN for the user on whose behalf the code is running.</source>
          <target state="translated">以该用户的名义运行代码 UPN。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
          <target state="translated">Windows NT 状态代码 STATUS_ACCESS_DENIED，Windows 返回。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>There is insufficient memory available.</source>
          <target state="translated">没有足够内存可用。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not attached to a Windows 2003 or later domain.</source>
          <target state="translated">-或者-计算机未连接到 Windows 2003 或更高版本的域。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not running Windows 2003 or later.</source>
          <target state="translated">-或者-计算机未运行 Windows 2003 或更高版本。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-or-       The user is not a member of the domain the computer is attached to.</source>
          <target state="translated">-或者-用户不是计算机连接到域的成员。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified Windows account token and the specified authentication type.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>按指定的 Windows 帐户标记和指定的身份验证类型表示的用户类。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
          <target state="translated">下表显示&lt;xref:System.Security.Principal.WindowsIdentity&gt;.&lt;/xref:System.Security.Principal.WindowsIdentity&gt;实例的初始属性的值</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Security.Principal.WindowsAccountType&gt;|<ph id="ph1">`Normal`</ph>|   |&lt;xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;|<ph id="ph2">`false`</ph>|       The value of the <ph id="ph3">`type`</ph> parameter is used to set the &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; parameter.</source>
          <target state="translated">|属性 |初始值 |  |--------------|-------------------|  |&lt;xref:System.Security.Principal.WindowsAccountType&gt;|<ph id="ph1">`Normal`</ph>|  |&lt;xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;|<ph id="ph2">`false`</ph>|      值<ph id="ph3">`type`</ph>参数用于设置&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;参数。&lt;/xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; &lt;/xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt; &lt;/xref:System.Security.Principal.WindowsAccountType&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; to <ph id="ph3">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph4">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，安全系统组&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;到<ph id="ph3">`Negotiate`</ph>在 Windows Vista 和更高版本的 Windows 操作系统和<ph id="ph4">`Kerberos`</ph>早期版本的 Windows 操作系统上。&lt;/xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The security system does not use this value; it is for informational use only.</source>
          <target state="translated">安全系统不使用此值;它是仅用于提供信息。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can retrieve the token represented by <ph id="ph2">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph3">`LogonUser`</ph> function.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 可以检索所表示的令牌<ph id="ph2">`userToken`</ph>通过调用非托管的代码如 Win32 API<ph id="ph3">`LogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
          <target state="translated">始终释放<ph id="ph1">`userToken`</ph>通过调用 Win32 API<ph id="ph2">`CloseHandle`</ph>函数。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">调用非托管的代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The account token for the user on whose behalf the code is running.</source>
          <target state="translated">帐户标记，以该用户的名义运行代码。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
          <target state="translated">（仅供参考之用。）用于标识用户的身份验证类型。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
          <target state="translated">有关详细信息，请参阅备注。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph>为 0。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph>是重复和无效的模拟。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
          <target state="translated">-或者-出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by information in a <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> stream.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类表示的信息的用户<bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>流。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The object containing the account information for the user.</source>
          <target state="translated">包含用户的帐户信息的对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An object that indicates the stream characteristics.</source>
          <target state="translated">一个对象，该值指示流特征。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be serialized across processes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>无法在进程之间进行序列化。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
          <target state="translated">-或者-出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类用户主体名称 (UPN) 和指定的身份验证类型表示由指定的用户。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">`type`</ph> parameter is used to set the &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; parameter.</source>
          <target state="translated">值<ph id="ph1">`type`</ph>参数用于设置&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;参数。&lt;/xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; to <ph id="ph3">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph4">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，安全系统组&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;到<ph id="ph3">`Negotiate`</ph>在 Windows Vista 和更高版本的 Windows 操作系统和<ph id="ph4">`Kerberos`</ph>早期版本的 Windows 操作系统上。&lt;/xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The security system does not use this value; it is for informational use only.</source>
          <target state="translated">安全系统不使用此值;它是仅用于提供信息。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The UPN identified in <ph id="ph1">`sUserPrincipalName`</ph> is used to retrieve a token for that user through the Win32 API <ph id="ph2">`LsaLogonUser`</ph> function.</source>
          <target state="translated">中的 UPN 标识<ph id="ph1">`sUserPrincipalName`</ph>用于检索该用户通过 Win32 API 的令牌<ph id="ph2">`LsaLogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In turn that token is used to identify the user.</source>
          <target state="translated">反过来，该令牌用于标识用户。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An exception might be returned due to the inability to log on using the supplied UPN.</source>
          <target state="translated">异常可能会返回由于无法使用所提供的 UPN 登录。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt; 此构造函数旨在供情况下，仅在加入到 Windows Server 2003 或更高版本的域的计算机上。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An exception is thrown for earlier domain types.</source>
          <target state="translated">对于更早版本的域类型引发异常。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This restriction is due to the fact that this constructor uses the <bpt id="p1">[</bpt>KERB_S4U_LOGON structure<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>, which was first introduced in Windows Server 2003.</source>
          <target state="translated">此限制是因为，此构造函数使用<bpt id="p1">[</bpt>KERB_S4U_LOGON 结构<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>，最初在 Windows Server 2003 中引入。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The UPN for the user on whose behalf the code is running.</source>
          <target state="translated">以该用户的名义运行代码 UPN。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
          <target state="translated">（仅供参考之用。）用于标识用户的身份验证类型。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
          <target state="translated">有关详细信息，请参阅备注。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
          <target state="translated">Windows NT 状态代码 STATUS_ACCESS_DENIED，Windows 返回。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>There is insufficient memory available.</source>
          <target state="translated">没有足够内存可用。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not attached to a Windows 2003 or later domain.</source>
          <target state="translated">-或者-计算机未连接到 Windows 2003 或更高版本的域。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not running Windows 2003 or later.</source>
          <target state="translated">-或者-计算机未运行 Windows 2003 或更高版本。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-or-       The user is not a member of the domain the computer is attached to.</source>
          <target state="translated">-或者-用户不是计算机连接到域的成员。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，用于表示指定的 Windows 帐户标记、 指定的身份验证类型和指定的 Windows 帐户类型的用户。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
          <target state="translated">下表显示&lt;xref:System.Security.Principal.WindowsIdentity&gt;.&lt;/xref:System.Security.Principal.WindowsIdentity&gt;实例的初始属性的值</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>|Property|Initial Value|   |--------------|-------------------|   |&lt;xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;|<ph id="ph1">`false`</ph>|       The value of the <ph id="ph2">`type`</ph> parameter is used to set the &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; parameter.</source>
          <target state="translated">|属性 |初始值 |  |--------------|-------------------|  |&lt;xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;|<ph id="ph1">`false`</ph>|      值<ph id="ph2">`type`</ph>参数用于设置&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;参数。&lt;/xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; &lt;/xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; to <ph id="ph3">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph4">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，安全系统组&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;到<ph id="ph3">`Negotiate`</ph>在 Windows Vista 和更高版本的 Windows 操作系统和<ph id="ph4">`Kerberos`</ph>早期版本的 Windows 操作系统上。&lt;/xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The security system does not use this value; it is for informational use only.</source>
          <target state="translated">安全系统不使用此值;它是仅用于提供信息。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can retrieve the token represented by <ph id="ph2">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph3">`LogonUser`</ph> function.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 可以检索所表示的令牌<ph id="ph2">`userToken`</ph>通过调用非托管的代码如 Win32 API<ph id="ph3">`LogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
          <target state="translated">始终释放<ph id="ph1">`userToken`</ph>通过调用 Win32 API<ph id="ph2">`CloseHandle`</ph>函数。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">调用非托管的代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The account token for the user on whose behalf the code is running.</source>
          <target state="translated">帐户标记，以该用户的名义运行代码。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
          <target state="translated">（仅供参考之用。）用于标识用户的身份验证类型。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
          <target state="translated">有关详细信息，请参阅备注。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>One of the enumeration values.</source>
          <target state="translated">枚举值之一。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph>为 0。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph>是重复和无效的模拟。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
          <target state="translated">-或者-出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，用于表示指定的 Windows 帐户标记、 指定的身份验证类型，指定的 Windows 帐户类型和指定的身份验证状态的用户。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">`type`</ph> parameter is used to set the &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; parameter.</source>
          <target state="translated">值<ph id="ph1">`type`</ph>参数用于设置&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;参数。&lt;/xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, the security system sets &lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt; to <ph id="ph3">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id="ph4">`Kerberos`</ph> on earlier versions of the Windows operating system.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，安全系统组&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;到<ph id="ph3">`Negotiate`</ph>在 Windows Vista 和更高版本的 Windows 操作系统和<ph id="ph4">`Kerberos`</ph>早期版本的 Windows 操作系统上。&lt;/xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The security system does not use this value; it is for informational use only.</source>
          <target state="translated">安全系统不使用此值;它是仅用于提供信息。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You can retrieve the token represented by <ph id="ph1">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id="ph2">`LogonUser`</ph> function.</source>
          <target state="translated">你可以检索所表示的令牌<ph id="ph1">`userToken`</ph>通过调用非托管的代码如 Win32 API<ph id="ph2">`LogonUser`</ph>函数。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Always release <ph id="ph1">`userToken`</ph> by calling the Win32 API <ph id="ph2">`CloseHandle`</ph> function.</source>
          <target state="translated">始终释放<ph id="ph1">`userToken`</ph>通过调用 Win32 API<ph id="ph2">`CloseHandle`</ph>函数。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more information on calling unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">调用非托管的代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The account token for the user on whose behalf the code is running.</source>
          <target state="translated">帐户标记，以该用户的名义运行代码。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>(Informational use only.) The type of authentication used to identify the user.</source>
          <target state="translated">（仅供参考之用。）用于标识用户的身份验证类型。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
          <target state="translated">有关详细信息，请参阅备注。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>One of the enumeration values.</source>
          <target state="translated">枚举值之一。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the user is authenticated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要指示对用户进行身份验证;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph>为 0。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph>是重复和无效的模拟。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-or-       A Win32 error occurred.</source>
          <target state="translated">-或者-出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets this <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">获取此<bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此<bpt id="p2">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets the type of authentication used to identify the user.</source>
          <target state="translated">获取用于标识用户的身份验证的类型。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This property is informational; it is not used by the security system.</source>
          <target state="translated">此属性是信息性;通过安全系统不使用它。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>On Windows Vista and later versions of the Windows operating system, the default value for this property is <ph id="ph1">`Negotiate`</ph>, which chooses the best security support provider (SSP) based on customer-configured security policy.</source>
          <target state="translated">在 Windows Vista 和更高版本的 Windows 操作系统上，此属性的默认值是<ph id="ph1">`Negotiate`</ph>，其中选择最佳安全支持提供程序 (SSP) 根据客户配置安全策略。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The default property value for earlier versions of the Windows operating system is <ph id="ph1">`Kerberos`</ph>.</source>
          <target state="translated">早期版本的 Windows 操作系统的默认属性值是<ph id="ph1">`Kerberos`</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The type of authentication used to identify the user.</source>
          <target state="translated">用于标识用户的身份验证类型。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
          <target state="translated">Windows NT 状态代码 STATUS_ACCESS_DENIED，Windows 返回。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>There is insufficient memory available.</source>
          <target state="translated">没有足够内存可用。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not attached to a Windows 2003 or later domain.</source>
          <target state="translated">-或者-计算机未连接到 Windows 2003 或更高版本的域。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-or-       The computer is not running Windows 2003 or later.</source>
          <target state="translated">-或者-计算机未运行 Windows 2003 或更高版本。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-or-       The user is not a member of the domain the computer is attached to.</source>
          <target state="translated">-或者-用户不是计算机连接到域的成员。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets all claims for the user represented by this Windows identity.</source>
          <target state="translated">获取表示此 Windows 标识的用户的所有声明。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A collection of claims for this <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">此声明的集合<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Creates a new  object that is a copy of the current instance.</source>
          <target state="translated">创建当前实例副本的新对象。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A copy of the current instance.</source>
          <target state="translated">当前实例的副本。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Identifies the name of the default <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> issuer.</source>
          <target state="translated">标识默认的名称<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>颁发者。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets claims that have the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsDeviceClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property key.</source>
          <target state="translated">获取声明<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsDeviceClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性键。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A collection of claims that have the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsDeviceClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property key.</source>
          <target state="translated">声明集合<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsDeviceClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性键。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
          <target state="translated">在完成使用&lt;xref:System.Security.Principal.WindowsIdentity&gt;.&lt;/xref:System.Security.Principal.WindowsIdentity&gt;时调用的 Dispose</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.Security.Principal.WindowsIdentity&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法离开&lt;xref:System.Security.Principal.WindowsIdentity&gt;中不可用状态。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.Security.Principal.WindowsIdentity&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Principal.WindowsIdentity&gt; was occupying.</source>
          <target state="translated">调用 Dispose 后，必须释放对所有引用&lt;xref:System.Security.Principal.WindowsIdentity&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.Security.Principal.WindowsIdentity&gt;占用。&lt;/xref:System.Security.Principal.WindowsIdentity&gt; &lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Security.Principal.WindowsIdentity&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用释放在发布到&lt;xref:System.Security.Principal.WindowsIdentity&gt;。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;最后一个引用之前</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Principal.WindowsIdentity&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.Security.Principal.WindowsIdentity&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Principal.WindowsIdentity&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.Security.Principal.WindowsIdentity&gt;引用。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that you can use as a sentinel value in your code to represent an anonymous user.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，你可以用作 sentinel 值在你的代码来表示匿名用户。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The property value does not represent the built-in anonymous identity used by the Windows operating system.</source>
          <target state="translated">属性值不表示 Windows 操作系统使用的内置匿名标识。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This property returns an empty &lt;xref:System.Security.Principal.WindowsIdentity&gt; object that enables you to treat operations as anonymous.</source>
          <target state="translated">此属性返回一个空&lt;xref:System.Security.Principal.WindowsIdentity&gt;对象，可将操作视为匿名。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.</source>
          <target state="translated">属性值不对应 Windows 匿名用户，并且不用于模拟。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Also, note that the identity returned by this property is not static; each call to GetAnonymous returns a different anonymous identity.</source>
          <target state="translated">此外，请注意，此属性返回的标识不是静态的;GetAnonymous 每次调用返回不同的匿名标识。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt; property to detect the return value from GetAnonymous.</source>
          <target state="translated">你可以使用&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;属性来检测 GetAnonymous 的返回值。&lt;/xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>However, &lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt; detects both the Windows anonymous identity and the anonymous identity returned by this method.</source>
          <target state="translated">但是，&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;检测 Windows 匿名标识和此方法返回的匿名标识。&lt;/xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>To use the latter identity, cache the GetAnonymous return value instead of relying on the &lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt; property.</source>
          <target state="translated">若要使用后一种标识，缓存 GetAnonymous 返回值而不是依靠&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;属性。&lt;/xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An object that represents an anonymous user.</source>
          <target state="translated">一个表示匿名用户的对象。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the current Windows user.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，表示当前 Windows 用户。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>An object that represents the current user.</source>
          <target state="translated">一个表示当前用户的对象。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the Windows identity for either the thread or the process, depending on the value of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">ifImpersonating</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，表示线程或进程，具体取决于的值的 Windows 标识<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">ifImpersonating</ph> <ept id="p2">&lt;/code&gt;</ept>参数。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ifImpersonating`</ph> is <ph id="ph2">`true`</ph> and the thread is not impersonating, the returned &lt;xref:System.Security.Principal.WindowsIdentity&gt; object has no value.</source>
          <target state="translated">如果<ph id="ph1">`ifImpersonating`</ph>是<ph id="ph2">`true`</ph>和线程不模拟时，返回&lt;xref:System.Security.Principal.WindowsIdentity&gt;对象不具有任何值。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ifImpersonating`</ph> is <ph id="ph2">`false`</ph> and the thread is impersonating, the &lt;xref:System.Security.Principal.WindowsIdentity&gt; for the thread is returned.</source>
          <target state="translated">如果<ph id="ph1">`ifImpersonating`</ph>是<ph id="ph2">`false`</ph>和线程正在模拟，则&lt;xref:System.Security.Principal.WindowsIdentity&gt;返回线程。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ifImpersonating`</ph> is <ph id="ph2">`false`</ph> and the thread is not impersonating, the &lt;xref:System.Security.Principal.WindowsIdentity&gt; for the process is returned.</source>
          <target state="translated">如果<ph id="ph1">`ifImpersonating`</ph>是<ph id="ph2">`false`</ph>且线程不模拟，则&lt;xref:System.Security.Principal.WindowsIdentity&gt;返回进程。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return the <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> only if the thread is currently impersonating; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to return the <bpt id="p4">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> of the thread if it is impersonating or the <bpt id="p5">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> of the process if the thread is not currently impersonating.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要返回<bpt id="p2">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>仅当线程正在模拟;<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>返回<bpt id="p4">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>如果它模拟的线程或<bpt id="p5">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>如果当前没有模拟线程的进程。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An object that represents a Windows user.</source>
          <target state="translated">一个表示 Windows 用户的对象。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the current Windows user, using the specified desired token access level.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示当前 Windows 用户，使用指定的对象所需标记访问级别。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`desiredAccess`</ph> parameter specifies an access mask that identifies the requested types of access to the access token.</source>
          <target state="translated"><ph id="ph1">`desiredAccess`</ph>参数指定标识的访问权限的访问令牌的请求的类型的访问掩码。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.</source>
          <target state="translated">与令牌的自由访问控制列表 (DACL) 来确定同意或拒绝哪些类型的访问，这些请求的访问类型进行比较。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">枚举值的按位组合。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>An object that represents the current user.</source>
          <target state="translated">一个表示当前用户的对象。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets the groups the current Windows user belongs to.</source>
          <target state="translated">获取当前 Windows 用户所属的组。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>An object representing the groups the current Windows user belongs to.</source>
          <target state="translated">表示当前 Windows 用户所属的组的对象。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">模拟表示的用户<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</source>
          <target state="translated">在 Windows NT 平台上，当前用户必须具有足够的权限，以允许模拟。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.</source>
          <target state="translated">表示模拟; 之前的 Windows 用户的对象这可以用于恢复为原始用户的上下文。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>An anonymous identity attempted to perform an impersonation.</source>
          <target state="translated">尝试执行模拟一个匿名标识。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>A Win32 error occurred.</source>
          <target state="translated">出现 Win32 错误。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the specified user token.</source>
          <target state="translated">模拟指定的用户标记所表示的用户。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</source>
          <target state="translated">在 Windows NT 平台上，当前用户必须具有足够的权限，以允许模拟。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Calling the Impersonate method with a <ph id="ph2">`userToken`</ph> value of &lt;xref:System.IntPtr&gt; is equivalent to calling the Win32 <ph id="ph3">`RevertToSelf`</ph> function.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 调用带有的 Impersonate 方法<ph id="ph2">`userToken`</ph>值&lt;xref:System.IntPtr&gt;等效于调用 Win32<ph id="ph3">`RevertToSelf`</ph>函数。&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If another user is currently being impersonated, control reverts to the original user.</source>
          <target state="translated">如果当前被模拟另一个用户，控件将恢复为原始用户。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>For more information about calls to unmanaged code, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关调用非托管代码的详细信息，请参阅<bpt id="p1">[</bpt>使用非托管 DLL 函数<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The handle of a Windows account token.</source>
          <target state="translated">Windows 帐户标记的句柄。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <bpt id="p1">&lt;xref uid="langword_csharp_LogonUser" name="LogonUser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">通常通过调用非托管代码，如调用 Win32 API 检索此标记<bpt id="p1">&lt;xref uid="langword_csharp_LogonUser" name="LogonUser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">表示模拟; 之前的 Windows 用户的对象此对象可以用于恢复为原始用户的上下文。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</source>
          <target state="translated">Windows NT 状态代码 STATUS_ACCESS_DENIED，Windows 返回。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>There is insufficient memory available.</source>
          <target state="translated">没有足够内存可用。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The caller does not have the correct permissions.</source>
          <target state="translated">调用方没有正确的权限。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Gets the impersonation level for the user.</source>
          <target state="translated">获取用户的模拟级别。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Describes the impersonation level to be used to connect to WMI.</source>
          <target state="translated">描述要用于连接到 WMI 的模拟级别。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the impersonation level.</source>
          <target state="translated">指定的模拟级别的枚举值之一。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the user account is identified as an anonymous account by the system.</source>
          <target state="translated">获取一个值，该值指示系统是否用户帐户标识为匿名帐户。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The IsAnonymous property detects both the Windows anonymous identity and the anonymous identity that is returned by the &lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt; method.</source>
          <target state="translated">IsAnonymous 属性检测 Windows 匿名标识和匿名标识返回&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;方法。&lt;/xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</source>
          <target state="translated">匿名帐户通常仅只能从基于 ASP.NET 的应用程序中时遇到由 Internet 信息服务 (IIS) 允许匿名访问。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user account is an anonymous account; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果用户帐户是匿名帐户;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the user has been authenticated by Windows.</source>
          <target state="translated">获取一个值，该值指示是否通过 Windows 身份验证用户。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user was authenticated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果用户进行身份验证;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the user account is identified as a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> account by the system.</source>
          <target state="translated">获取一个值，该值指示是否将用户帐户标识为<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>系统帐户。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user account is a <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> account; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果用户帐户是<bpt id="p2">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>帐户; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the user account is identified as a <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> account by the system.</source>
          <target state="translated">获取一个值，该值指示是否将用户帐户标识为<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>系统帐户。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user account is a <bpt id="p2">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> account; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果用户帐户是<bpt id="p2">&lt;xref href="System.Security.Principal.WindowsAccountType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>帐户; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Gets the user's Windows logon name.</source>
          <target state="translated">获取用户的 Windows 登录名。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The logon name is in the form DOMAIN\USERNAME.</source>
          <target state="translated">登录名是在窗体域 \ 用户名。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The Windows logon name of the user on whose behalf the code is being run.</source>
          <target state="translated">用户的名义运行代码的 Windows 登录名。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Gets the security identifier (SID) for the token owner.</source>
          <target state="translated">获取标记所有者的安全标识符 (SID)。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The SID uniquely identifies a user or group on all Windows NT implementations.</source>
          <target state="translated">SID 唯一标识用户或组在所有 Windows NT 实现上。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The returned SID identifies the default owner SID that will be applied to newly created objects.</source>
          <target state="translated">返回的 SID 标识默认所有者将应用到新创建的对象的 SID。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>An object for the token owner.</source>
          <target state="translated">用于标记所有者的对象。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Runs the specified action as the impersonated Windows identity.</source>
          <target state="translated">作为模拟 Windows 标识运行指定的操作。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Instead of using an impersonated method call and running your function in <bpt id="p1">&lt;xref href="System.Security.Principal.WindowsImpersonationContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, you can use RunImpersonated and provide your function directly as a parameter.</source>
          <target state="translated">而不是使用模拟的方法调用和中运行函数<bpt id="p1">&lt;xref href="System.Security.Principal.WindowsImpersonationContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，你可以使用 RunImpersonated 并直接作为参数提供函数。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The SafeAccessTokenHandle of the impersonated Windows identity.</source>
          <target state="translated">模拟 Windows 标识 SafeAccessTokenHandle。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The System.Action to run.</source>
          <target state="translated">要运行的 System.Action。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and is called back by the deserialization event when deserialization is complete.</source>
          <target state="translated">实现<bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接口，并在完成反序列化时，反序列化事件回调。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The source of the deserialization event.</source>
          <target state="translated">反序列化事件源。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the logical context information needed to recreate an instance of this execution context.</source>
          <target state="translated">集<bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>重新创建此执行上下文的实例所需的逻辑上下文信息的对象。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>This method sets a &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; with the logical call context information.</source>
          <target state="translated">此方法会设置&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;用逻辑调用上下文信息。&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>During deserialization, the execution context object is reconstituted from the &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; transmitted over the stream.</source>
          <target state="translated">在反序列化过程的执行上下文对象重建从&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;通过流传输。&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;。&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>An object containing the information required to serialize the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个包含序列化所需的信息的对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>An object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个包含源和与关联的序列化流的目标对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Gets the Windows account token for the user.</source>
          <target state="translated">获取用户的 Windows 帐户标记。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Do not explicitly release the account token that is returned by the Token property.</source>
          <target state="translated">不要显式释放令牌属性所返回的帐户标记。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The token is released by the &lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt; method, which you can call in code.</source>
          <target state="translated">令牌发布的&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;方法，你可以在代码中调用该方法。&lt;/xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt; is also automatically called by the garbage collector.</source>
          <target state="translated">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;此外会自动由垃圾回收器调用。&lt;/xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The account token that is returned by the Token property is a duplicate of the Windows token that is used to create the &lt;xref:System.Security.Principal.WindowsIdentity&gt; object and is automatically released by the .NET Framework.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 令牌属性所返回的帐户标记是用于创建 Windows 令牌的重复&lt;xref:System.Security.Principal.WindowsIdentity&gt;对象，并自动释放由.NET Framework。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>This is different from the account token (the <ph id="ph1">`userToken`</ph> parameter for the constructor), which is used to create the &lt;xref:System.Security.Principal.WindowsIdentity&gt; object.</source>
          <target state="translated">这是不同于用户的帐户标记 (<ph id="ph1">`userToken`</ph>构造函数的参数)，用于创建&lt;xref:System.Security.Principal.WindowsIdentity&gt;对象。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`userToken`</ph> is a Windows account token that is created by a call to <ph id="ph2">`LogonUser`</ph> and must be closed to avoid a memory leak.</source>
          <target state="translated"><ph id="ph1">`userToken`</ph>是通过调用创建的 Windows 帐户标记<ph id="ph2">`LogonUser`</ph>，必须关闭以避免内存泄露。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The handle of the access token associated with the current execution thread.</source>
          <target state="translated">与当前执行线程关联的访问令牌的句柄。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Gets the security identifier (SID) for the user.</source>
          <target state="translated">获取用户的安全标识符 (SID)。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The SID uniquely identifies a user or group on all Windows NT implementations.</source>
          <target state="translated">SID 唯一标识用户或组在所有 Windows NT 实现上。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Security.Principal.WindowsIdentity&gt; object returned by the &lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt; method is not the same as the Windows anonymous user.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.Security.Principal.WindowsIdentity&gt;返回对象&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;方法不是 Windows 匿名用户相同。&lt;/xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt; &lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This property gets <ph id="ph1">`null`</ph> for an anonymous user represented by the &lt;xref:System.Security.Principal.WindowsIdentity&gt; object returned by the &lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt; method; it does not get the SID representing an anonymous Windows user.</source>
          <target state="translated">此属性获取<ph id="ph1">`null`</ph>表示匿名用户&lt;xref:System.Security.Principal.WindowsIdentity&gt;返回对象&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;方法; 它不会获取表示匿名 Windows 用户的 SID。&lt;/xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt; &lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>An object for the user.</source>
          <target state="translated">用于用户的对象。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Gets claims that have the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsUserClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property key.</source>
          <target state="translated">获取声明<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsUserClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性键。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A collection of claims that have the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsUserClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property key.</source>
          <target state="translated">声明集合<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimTypes.WindowsUserClaim"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性键。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>