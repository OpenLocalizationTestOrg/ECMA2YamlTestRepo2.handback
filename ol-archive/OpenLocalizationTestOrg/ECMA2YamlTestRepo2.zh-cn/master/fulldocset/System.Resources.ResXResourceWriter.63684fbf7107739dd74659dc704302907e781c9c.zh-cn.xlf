<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47ff7f8a28dfdf2f570424ba56ee0b83c1afa6c1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Resources.ResXResourceWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33ea2e021def7a8c8529d9ccd5ff800cc8d95f70</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6be1bb336d98d4cad909c85a108551cd7042c185</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Writes resources in an XML resource (.resx) file or an output stream.</source>
          <target state="translated">将资源写入 XML 资源 (.resx) 文件或输出流。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ResXResourceWriter writes resources in XML format.</source>
          <target state="translated">ResXResourceWriter 将资源写入 XML 格式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To write a binary resource file, use &lt;xref:System.Resources.ResourceWriter&gt;.</source>
          <target state="translated">若要编写的二进制资源文件，使用&lt;xref:System.Resources.ResourceWriter&gt;.&lt;/xref:System.Resources.ResourceWriter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Resources are specified as name/value pairs using the &lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt; method.</source>
          <target state="translated">资源指定为使用的名称/值对&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;方法。&lt;/xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Resource names are case-sensitive when used for lookups; but to more easily support authoring tools and help eliminate bugs, ResXResourceWriter does not allow a.resx file to have names that vary only by case.</source>
          <target state="translated">资源名称是用于查找; 时，区分大小写但若要更轻松地支持创作工具，并帮助消除 bug，ResXResourceWriter 不允许一个.resx 文件具有仅因大小写的名称。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a.resx file, create a ResXResourceWriter with a unique file name, call &lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt; at least once, call &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; to write the resources file to disk, and then call &lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt; to close the file.</source>
          <target state="translated">若要创建一个.resx 文件，使用唯一的文件名，调用创建 ResXResourceWriter&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;至少一次，调用&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;以将资源文件写入到磁盘，然后调用&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;关闭此文件。&lt;/xref:System.Resources.ResXResourceWriter.Close%2A&gt; &lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt; &lt;/xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt; will implicitly &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; the file if required.</source>
          <target state="translated">调用&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;会隐式&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;如果所需的文件。&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt; &lt;/xref:System.Resources.ResXResourceWriter.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The resources are not necessarily written in the same order they were added.</source>
          <target state="translated">不在相同的顺序添加一定写入资源。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information on the format of a.resx file, see <bpt id="p1">[</bpt>Working with .resx Files Programmatically<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">格式一个.resx 文件的详细信息，请参阅<bpt id="p1">[</bpt>使用.resx 文件以编程方式<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 此类包含链接要求，并且在类级别应用于所有成员继承要求。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.SecurityException&gt; is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A&lt;xref:System.Security.SecurityException&gt;直接调用方或派生的类没有完全信任权限时，将引发。&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to the specified stream object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>资源写入指定的流对象的类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The output stream.</source>
          <target state="translated">输出流中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes to the specified &lt;xref:System.IO.TextWriter&gt; object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>写入指定的类&lt;xref:System.IO.TextWriter&gt;对象。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; object to send the output to.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;对象发送到的输出。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to the specified file.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>将资源写入到指定的文件的类。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This constructor creates <ph id="ph1">`filename`</ph> if it does not exist and overwrites it if it does.</source>
          <target state="translated">此构造函数创建<ph id="ph1">`filename`</ph>如果它不存在，如果是这样将覆盖它。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`filename`</ph> includes a directory path, the full path must exist or the constructor throws a &lt;xref:System.IO.DirectoryNotFoundException&gt; exception.</source>
          <target state="translated">如果<ph id="ph1">`filename`</ph>包括一个目录路径，必须存在的完整路径或构造函数引发&lt;xref:System.IO.DirectoryNotFoundException&gt;异常。&lt;/xref:System.IO.DirectoryNotFoundException&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The output file name.</source>
          <target state="translated">输出文件的名称。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The directory specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">中指定的目录<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">filename</ph> <ept id="p1">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to a specified stream object and sets a converter delegate.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，该类将资源写入到指定的流对象并设置转换器委托。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This delegate enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">此委托允许资源程序集要写入该目标之前的.NET framework 的版本<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>通过使用限定的程序集名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Visual Studio 和 MSBuild 使用此构造函数，当你创建的应用程序面向的之前的.NET Framework 的版本的资源时<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The stream to send the output to.</source>
          <target state="translated">要将输出发送到的流。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          <target state="translated">用于面向.NET Framework 的早期版本的委托。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to a specified &lt;xref:System.IO.TextWriter&gt; object and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>资源写入指定的类&lt;xref:System.IO.TextWriter&gt;对象并设置一个委托，可使资源程序集能够编写面向之前的.NET framework 的版本<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>通过使用限定的程序集名称。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Visual Studio 和 MSBuild 使用此构造函数，当你创建的应用程序面向的之前的.NET Framework 的版本的资源时<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The object to send output to.</source>
          <target state="translated">要将输出发送到的对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          <target state="translated">用于面向.NET Framework 的早期版本的委托。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to a specified file and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>资源写入指定的文件和设置一个委托，可使资源程序集能够编写面向之前的.NET framework 的版本的类<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>通过使用限定的程序集名称。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Visual Studio 和 MSBuild 使用此构造函数，当你创建的应用程序面向的之前的.NET Framework 的版本的资源时<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The file to send output to.</source>
          <target state="translated">要将输出发送到的文件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          <target state="translated">用于面向.NET Framework 的早期版本的委托。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The directory specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">中指定的目录<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">filename</ph> <ept id="p1">&lt;/code&gt;</ept>不存在。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Adds the specified alias to a list of aliases.</source>
          <target state="translated">将指定的别名添加到别名列表。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Resources whose values are from an aliased assembly are automatically added to the list of aliases.</source>
          <target state="translated">其值是从别名程序集的资源会自动添加到别名的列表。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">资源不写入直到&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;称为。&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name of the alias.</source>
          <target state="translated">别名的名称。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name of the assembly represented by <ph id="ph1">`aliasName`</ph>.</source>
          <target state="translated">由程序集的名称<ph id="ph1">`aliasName`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Adds a design-time property whose value is specifed as a byte array to the list of resources to write.</source>
          <target state="translated">添加其值是指定到要写入的资源的列表的字节数组形式的设计时属性。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The name of a property.</source>
          <target state="translated">属性的名称。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A byte array containing the value of the property to add.</source>
          <target state="translated">包含要添加的属性的值的字节数组。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The resource specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter has already been added.</source>
          <target state="translated">指定的资源<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>已添加参数。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Adds a design-time property whose value is specified as an object to the list of resources to write.</source>
          <target state="translated">添加值指定为要写入的资源的列表对象的设计时属性。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of a property.</source>
          <target state="translated">属性的名称。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An object that is the value of the property to add.</source>
          <target state="translated">一个对象，它要添加的属性的值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The resource specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter has already been added.</source>
          <target state="translated">指定的资源<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>已添加参数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Adds a design-time property whose value is specified as a string to the list of resources to write.</source>
          <target state="translated">将添加其值指定为连接到要写入的资源的列表的字符串的设计时属性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name of a property.</source>
          <target state="translated">属性的名称。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A string that is the value of the property to add.</source>
          <target state="translated">一个字符串，是要添加的属性的值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The resource specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> property has already been added.</source>
          <target state="translated">指定的资源<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>属性已添加。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the list of resources to write.</source>
          <target state="translated">添加中指定的已命名的资源<bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到要写入的资源的列表对象。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains a resource name/value pair.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含资源名称/值对的对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as a byte array to the list of resources to write.</source>
          <target state="translated">添加命名的资源指定为字节数组到要写入的资源的列表。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">资源不写入直到&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;称为。&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The resource is serialized and stored in a binary format.</source>
          <target state="translated">资源被序列化，并以二进制格式存储。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">资源的名称。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value of the resource to add as an 8-bit unsigned integer array.</source>
          <target state="translated">要添加为一个 8 位无符号的整数数组的资源的值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as an object to the list of resources to write.</source>
          <target state="translated">将添加指定为到要写入的资源的列表对象的已命名的资源。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">资源不写入直到&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;称为。&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The resource that was added must be serializable.</source>
          <target state="translated">已添加的资源必须是可序列化。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the resource being added is a string, it is written as a string; otherwise, the resource is serialized and stored in a binary format.</source>
          <target state="translated">如果正在添加的资源是一个字符串，则将其编写为一个字符串;否则为该资源的序列化，并以二进制格式存储中。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">资源的名称。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
          <target state="translated">资源的值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Adds a string resource to the resources.</source>
          <target state="translated">向资源添加字符串资源。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">资源不写入直到&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;称为。&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">资源的名称。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
          <target state="translated">资源的值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets the base path for the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取或设置中指定的相对文件路径的基路径<bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A path that, if prepended to the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, yields an absolute path to an XML resource file.</source>
          <target state="translated">一个路径，如果前面预置的相对文件路径中指定<bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，产生到 XML 资源文件的绝对路径。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies the default content type for a binary object.</source>
          <target state="translated">指定二进制对象的默认内容类型。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读的。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specifies the default content type for a byte array object.</source>
          <target state="translated">指定的字节数组对象的默认内容类型。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读的。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Calling this method is the equivalent of calling &lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;.</source>
          <target state="translated">调用此方法是调用&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;.&lt;/xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;的等效项</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the default content type for an object.</source>
          <target state="translated">指定对象的默认内容类型。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读的。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The Dispose method calls the &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; method, if necessary, before releasing managed and unmanaged system resources.</source>
          <target state="translated">Dispose 方法调用&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;方法，如有必要之前释放托管和非托管系统资源,。&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Calling Dispose allows the system resources used by the &lt;xref:System.Resources.ResXResourceWriter&gt; to be reallocated for other purposes.</source>
          <target state="translated">调用 Dispose 允许使用的系统资源&lt;xref:System.Resources.ResXResourceWriter&gt;可以重新分配用于其他目的。&lt;/xref:System.Resources.ResXResourceWriter&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关释放的详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The Dispose method calls the &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; method, if necessary, before releasing managed and unmanaged system resources.</source>
          <target state="translated">Dispose 方法调用&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;方法，如有必要之前释放托管和非托管系统资源,。&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Resources.ResXResourceWriter&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.Resources.ResXResourceWriter&gt;引用。&lt;/xref:System.Resources.ResXResourceWriter&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This member overrides the &lt;xref:System.Object.Finalize*&gt; method.</source>
          <target state="translated">此成员重写&lt;xref:System.Object.Finalize*&gt;方法。&lt;/xref:System.Object.Finalize*&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Writes all resources added by the &lt;xref:System.Resources.ResXResourceWriter.AddResource*&gt; method to the output file or stream.</source>
          <target state="translated">将通过添加的所有资源都写入&lt;xref:System.Resources.ResXResourceWriter.AddResource*&gt;写入输出文件或流的方法。&lt;/xref:System.Resources.ResXResourceWriter.AddResource*&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The Generate method writes the resources to the output file or stream.</source>
          <target state="translated">生成方法将资源写入到输出文件或流。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If you want to write the resources as well as close the output file or stream, call the &lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt; method.</source>
          <target state="translated">如果你想要将资源写入也尽可能接近输出文件或流，调用&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;方法。&lt;/xref:System.Resources.ResXResourceWriter.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The Generate method can be called only once.</source>
          <target state="translated">生成方法可以调用仅一次。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>After calling the Generate method, all &lt;xref:System.Resources.IResourceWriter&gt; methods other than &lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt; will throw an exception.</source>
          <target state="translated">调用生成方法后，所有&lt;xref:System.Resources.IResourceWriter&gt;以外的其他方法&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;将引发异常。&lt;/xref:System.Resources.ResXResourceWriter.Close%2A&gt; &lt;/xref:System.Resources.IResourceWriter&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The resource has already been saved.</source>
          <target state="translated">已保存的资源。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies the content type of an XML resource.</source>
          <target state="translated">指定的 XML 资源的内容类型。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读的。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies the schema to use in writing the XML file.</source>
          <target state="translated">指定要在写入 XML 文件中使用的架构。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读的。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The schema provides details on how to encode the resources based on the type of resource being written.</source>
          <target state="translated">该架构提供有关如何进行编码基于正在写入的资源类型的资源的详细信息。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Specifies the content type for a SOAP object.</source>
          <target state="translated">指定 SOAP 对象的内容类型。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读的。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Specifies the version of the schema that the XML output conforms to.</source>
          <target state="translated">指定 XML 输出所符合的架构的版本。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读的。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>