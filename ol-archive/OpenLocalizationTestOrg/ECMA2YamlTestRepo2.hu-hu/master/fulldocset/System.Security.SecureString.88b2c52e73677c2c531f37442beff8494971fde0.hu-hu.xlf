<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="hu-hu">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">174f0da1081f35785157244fe1d71fc69c350a80</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.SecureString.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b26f781b33daffc80c63d1ac4f68a7a5430ae291</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d18f00588ef24993438e6e7b3941d250b8f6593</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</source>
          <target state="translated">Szöveg, amelyet kell bizalmasan, többek között a számítógép memóriáját, amikor már nincs szükség törlésével jelöli.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Ez az osztály nem örökölhető.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>SecureString is a string type that provides a measure of security.</source>
          <target state="translated">SecureString olyan karakterlánc, amely egy biztonsági intézkedés biztosít.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>It tries to avoid storing potentially sensitive strings in process memory as plain text.</source>
          <target state="translated">Megkísérli ne tároljon bizalmas karakterlánc egyszerű szövegként folyamat memóriájában.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For limitations, however, see the <bpt id="p1">[</bpt>How secure is SecureString?<ept id="p1">](#HowSecure)</ept> section.) The value of an instance of SecureString is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</source>
          <target state="translated">(-Korlátozások, tekintse meg a <bpt id="p1">[</bpt>hogy mennyire vannak biztonságban van SecureString?<ept id="p1">](#HowSecure)</ept> szakaszában.) SecureString példányának értékének automatikusan védett a mechanizmussal az alapul szolgáló platform támogatott, ha a példány inicializálva, vagy az érték módosításának.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can render the instance immutable and prevent further modification by invoking the &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt; method.</source>
          <target state="translated">Az alkalmazás feldolgozhatja a példány nem módosítható, és hogy további módosításának megakadályozása a &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;metódus.&lt;/xref:System.Security.SecureString.MakeReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum length of a SecureString instance is 65,536 characters.</source>
          <target state="translated">A SecureString példány hossza legfeljebb 65 536 karakter lehet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Ez a típus megvalósítja az &lt;xref:System.IDisposable&gt;felületet.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Ha befejezte a típus egy példányát használja, ezért fel kell azt közvetve vagy közvetlenül.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">Arra, hogy a típus közvetlenül, hívja az &lt;xref:System.IDisposable.Dispose%2A&gt;metódust egy <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> blokk.&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Eltávolítása után közvetve, használjon egy nyelvi szerkezet például <ph id="ph1">`using`</ph> (a C#) vagy <ph id="ph2">`Using`</ph> (a Visual Basic nyelvben).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">A "Használatával az objektum, amely megvalósítja IDisposable" szakaszában talál további információt a &lt;xref:System.IDisposable&gt;felületet a témakörben.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SecureString class and its members are not visible to COM.</source>
          <target state="translated">A SecureString osztály és annak tagjait nem láthatók a COM számára.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;.</source>
          <target state="translated">További információkért lásd: &lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;.&lt;/xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this section:       <bpt id="p1">[</bpt>String vs. SecureString<ept id="p1">](#vsString)</ept>     <bpt id="p2">[</bpt>SecureString operations<ept id="p2">](#Ops)</ept>     <bpt id="p3">[</bpt>SecureString and interop<ept id="p3">](#interop)</ept>     <bpt id="p4">[</bpt>How secure is  SecureString?<ept id="p4">](#HowSecure)</ept></source>
          <target state="translated">Ebben a szakaszban: <bpt id="p1">[</bpt>vs karakterlánc. SecureString<ept id="p1">](#vsString)</ept><bpt id="p2">[</bpt>SecureString műveletek<ept id="p2">](#Ops)</ept><bpt id="p3">[</bpt>SecureString és együttműködési<ept id="p3">](#interop)</ept><bpt id="p4">[</bpt>hogy mennyire vannak biztonságban van SecureString?               <ept id="p4">](#HowSecure)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="vsString"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## String versus SecureString    An instance of the &lt;xref:System.String?displayProperty=fullName&gt; class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</source>
          <target state="translated"><bpt id="p1">&lt;a name="vsString"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Karakterlánc-vagy SecureString egy példányát a &lt;xref:System.String?displayProperty=fullName&gt;osztály csak nem módosítható, és már nem szükséges, ha nem lehet programozott módon ütemezni a szemétgyűjtő; Ez azt jelenti, hogy a példány írásvédett után létrejön, és nincs előre lehet jelezni, ha a példány törölve lesz a számítógép memóriájában.&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because &lt;xref:System.String?displayProperty=fullName&gt; instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</source>
          <target state="translated">Mivel &lt;xref:System.String?displayProperty=fullName&gt;példányai nem módosíthatók, a műveleteket, és módosítsa a meglévő példány ténylegesen készítsen másolatot az segítségével kezelheti.&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, if a &lt;xref:System.String&gt; object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</source>
          <target state="translated">Ezért ha egy &lt;xref:System.String&gt;objektum például egy jelszó, a hitelkártya száma vagy a személyes adatok bizalmas információkat tartalmaznak, fennáll a veszélye, az adatokat kell derüljön ki, miután használt, mert az alkalmazás nem lehet törölni az adatokat a számítógép elegendő memóriával.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>A SecureString object is similar to a &lt;xref:System.String&gt; object in that it has a text value.</source>
          <target state="translated">A SecureString objektum hasonlít egy &lt;xref:System.String&gt;objektum abban, hogy egy szöveges értéket tartalmaz.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the value of a SecureString object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the &lt;xref:System.Security.SecureString.Dispose%2A&gt; method  or by the .NET Framework garbage collector.</source>
          <target state="translated">Azonban egy objektum van rögzítve a memóriában, SecureString értékének használhat egy védelmi mechanizmust, például a titkosítás, az alapul szolgáló operációs rendszer által biztosított módosítható, amíg az alkalmazás csak olvashatóként jelöli meg és a törölhetők a számítógép elegendő memóriával az alkalmazás hívása vagy a &lt;xref:System.Security.SecureString.Dispose%2A&gt;metódust vagy a .NET-keretrendszer szemétgyűjtője.&lt;/xref:System.Security.SecureString.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a discussion of the limitations of the SecureString class, see the <bpt id="p1">[</bpt>How secure is  SecureString?<ept id="p1">](#HowSecure)</ept> section.</source>
          <target state="translated">A SecureString osztály vonatkozó korlátozások ismertetéséhez tekintse meg a <bpt id="p1">[</bpt>hogy mennyire vannak biztonságban van SecureString?<ept id="p1">](#HowSecure)</ept> szakasz.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="Ops"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## SecureString operations    The SecureString class includes members that allow you to do the following:       Instantiate a SecureString object    You instantiate a SecureString object by calling its parameterless constructor.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tetejére<ept id="p1">](#top)</ept> <bpt id="p2">&lt;a name="Ops"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## SecureString műveletek a SecureString osztály tagok, amelyek lehetővé teszik a következőket tartalmazza: SecureString objektumpéldányt egy a SecureString objektumpéldányt paraméter nélküli konstruktora meghívásával.      </target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add characters to a SecureString object    You can add a single character at a time to a SecureString object  by calling its &lt;xref:System.Security.SecureString.AppendChar%2A&gt; or &lt;xref:System.Security.SecureString.InsertAt%2A&gt; method.</source>
          <target state="translated">Adja hozzá a SecureString karakterek objektum adhat hozzá egy egyetlen karaktert egyszerre a SecureString objektumok meghívásával annak &lt;xref:System.Security.SecureString.AppendChar%2A&gt;vagy &lt;xref:System.Security.SecureString.InsertAt%2A&gt;metódus.&lt;/xref:System.Security.SecureString.InsertAt%2A&gt; &lt;/xref:System.Security.SecureString.AppendChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A SecureString object should never be constructed from a &lt;xref:System.String&gt;, because the sensitive data is already subject to the memory persistence consequences of the immutable &lt;xref:System.String&gt; class.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; A SecureString objektum soha nem állítható össze az olyan &lt;xref:System.String&gt;mert a bizalmas adatokat már nem módosítható &lt;xref:System.String&gt;az osztályt&lt;/xref:System.String&gt; memória adatmegőrzési következményeinek függvényében&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The best way to construct a SecureString object is from a character-at-a-time unmanaged source, such as the &lt;xref:System.Console.ReadKey%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">A legjobb módszer a SecureString objektum összeállításához forrásból származik karakter:-a-időben nem felügyelt, például a &lt;xref:System.Console.ReadKey%2A?displayProperty=fullName&gt;metódus.&lt;/xref:System.Console.ReadKey%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remove characters from a SecureString object    You can replace an individual character by calling the &lt;xref:System.Security.SecureString.SetAt%2A&gt; method, remove an individual character by calling the &lt;xref:System.Security.SecureString.RemoveAt%2A&gt; method, or remove all characters from the SecureString instance by calling the  &lt;xref:System.Security.SecureString.Clear%2A&gt; method.</source>
          <target state="translated">Távolítsa el a SecureString karaktereit objektum meghívásával lecserélheti a speciális karakterek a &lt;xref:System.Security.SecureString.SetAt%2A&gt;metódus, távolítsa el a speciális karakterek meghívásával a &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;metódus, vagy távolítsa el a SecureString az összes karaktert példány meghívásával a &lt;xref:System.Security.SecureString.Clear%2A&gt;metódus.&lt;/xref:System.Security.SecureString.Clear%2A&gt; &lt;/xref:System.Security.SecureString.RemoveAt%2A&gt; &lt;/xref:System.Security.SecureString.SetAt%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make the SecureString object read-only    Once you have defined the string that the SecureString object represents, you call its  &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt; method to make the string read-only.</source>
          <target state="translated">Ellenőrizze a SecureString objektum csak olvasható a karakterláncot, amely a SecureString objektum által jelképezett meghatározása után hívja a &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;módszer a karakterlánc csak olvasható.&lt;/xref:System.Security.SecureString.MakeReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get information about the SecureString object    The SecureString class has only two members that provide information about the string: its &lt;xref:System.Security.SecureString.Length%2A&gt; property, which indicates the number of UTF16-encoded code units in the string; and the &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;, method, which indicates whether the instance is read-only.</source>
          <target state="translated">Információk lekérdezése a SecureString objektum a SecureString osztály információval szolgálnak a karakterlánc csak két tagokkal rendelkezik: a &lt;xref:System.Security.SecureString.Length%2A&gt;tulajdonság, amely megadja, hogy a karakterlánc; a kód UTF16-kódolású egységek számának és a &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;, metódus, amely azt jelzi, hogy a példány írásvédett.&lt;/xref:System.Security.SecureString.IsReadOnly%2A&gt; &lt;/xref:System.Security.SecureString.Length%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Release the memory allocated to the SecureString instance    Because SecureString implements the &lt;xref:System.IDisposable&gt; interface, you release its memory by calling the &lt;xref:System.Security.SecureString.Dispose%2A&gt; method.</source>
          <target state="translated">A fenntartott memória mérete a SecureString példányhoz, mert SecureString valósítja meg a kibocsátási a &lt;xref:System.IDisposable&gt;felületet, az memória meghívásával engedje fel a &lt;xref:System.Security.SecureString.Dispose%2A&gt;metódus.&lt;/xref:System.Security.SecureString.Dispose%2A&gt; &lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SecureString class has no members that inspect, compare, or convert the value of a SecureString.</source>
          <target state="translated">A SecureString osztály rendelkezik tagok, amelyek vizsgálata, hasonlítsa össze, vagy a SecureString értékét.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absence of such members helps protect the value of the instance from accidental or malicious exposure.</source>
          <target state="translated">Ilyen kizárásával segít, hogy megvédjék a példány értékének véletlenül vagy szándékosan.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use appropriate members of the &lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=fullName&gt; class, such as the &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt; method, to manipulate the value of a SecureString object.</source>
          <target state="translated">Használja a megfelelő tagjai a &lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=fullName&gt;osztály, például a &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;metódust, az érték a SecureString objektumok módosítására.&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt; &lt;/xref:System.Runtime.InteropServices.Marshal?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Class Library commonly uses SecureString instances in the following ways:      -   To provide password information to a process by using the &lt;xref:System.Diagnostics.ProcessStartInfo&gt; structure or by calling an overload of the &lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName&gt; method that has a parameter of type SecureString.</source>
          <target state="translated">A .NET-keretrendszer Class Library SecureString példányok gyakran használja az alábbi módokon: - folyamatok jelszó-információkat biztosít a &lt;xref:System.Diagnostics.ProcessStartInfo&gt;felépítésének vagy egy túlterhelése, hívja az &lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName&gt;módszer, amelynek a SecureString típusú paraméterrel rendelkezik.&lt;/xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To provide network password information by calling a &lt;xref:System.Net.NetworkCredential&gt; class constructor that has a parameter of type SecureString or by using the &lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">-A hálózati jelszót adatmegadáshoz hívásával egy &lt;xref:System.Net.NetworkCredential&gt;osztálykonstruktor, amely a SecureString típusú vagy paramétereinek a &lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=fullName&gt;tulajdonság.&lt;/xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=fullName&gt; &lt;/xref:System.Net.NetworkCredential&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To provide password information for SQL Server Authentication by calling the &lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=fullName&gt; constructor or retrieving the value of the &lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">-A adja meg a jelszó-információkat az SQL Server-hitelesítés meghívásával a &lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=fullName&gt;konstruktor vagy értékének beolvasása a &lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=fullName&gt;tulajdonság.&lt;/xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To pass a string to unmanaged code.</source>
          <target state="translated">-A nem felügyelt kód karakterlánc átadni.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">További információkért lásd: a <bpt id="p1">[</bpt>SecureString és együttműködési<ept id="p1">](#interop)</ept> szakasz.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="interop"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## SecureString and interop    Because the operating system does not  directly support SecureString, you must convert the value of the SecureString object to the required string type before passing the string to a native method.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tetejére<ept id="p1">](#top)</ept> <bpt id="p2">&lt;a name="interop"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## SecureString és együttműködési, mert az operációs rendszer nem támogatja közvetlenül SecureString kell konvertálnia a SecureString objektum értékének a szükséges karakterlánctípus a karakterlánc egy natív mód való továbbítása előtt.      </target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.InteropServices.Marshal&gt; class has five methods that do this:      -   &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;, which converts the SecureString string value to a binary string (BSTR) recognized by COM.</source>
          <target state="translated">A &lt;xref:System.Runtime.InteropServices.Marshal&gt;osztály rendelkezik ehhez öt módszerek:- &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;, amely átalakítja a SecureString karakterláncértéket ismeri fel a COM-környezetbe. a bináris karakterlánc (BSTR)&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.Marshal&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt; and &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;, which copy the SecureString string value to an ANSI string in unmanaged memory.</source>
          <target state="translated">- &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;és &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;, amely a SecureString karakterláncértéket másolja a nem felügyelt memóriában ANSI-karakterlánc.&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt; and &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;, which copy the SecureString string value to a Unicode string in unmanaged memory.</source>
          <target state="translated">- &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;és &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;, amely a SecureString karakterláncértéket másolása egy Unicode karakterlánc nem felügyelt memóriában.&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these methods creates a clear-text string in unmanaged memory.</source>
          <target state="translated">Mindkét módszerhez a nem felügyelt egy tiszta szöveges karakterláncot hoz létre.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</source>
          <target state="translated">A feladata a fejlesztő nulla és, hogy a memória, amint azt már nem szükséges.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:      |Allocation and conversion method|Zero and free method|   |--------------------------------------|--------------------------|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=fullName&gt;|       <bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="HowSecure"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## How secure is SecureString?</source>
          <target state="translated">A karakterlánc átalakítás és a memória elosztási módszer nulla és a lefoglalt memória megfelelő metódust tartalmaz: |} Lemezfoglalási és -konvertálási metódus |} Nulla, és szabad metódus |}   |--------------------------------------|--------------------------|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=fullName&gt;|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=fullName&gt;|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=fullName&gt;|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=fullName&gt;|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=fullName&gt;|       <bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="HowSecure"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## How secure is SecureString?&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When created properly, a SecureString instance provides more data protection than a &lt;xref:System.String&gt;.</source>
          <target state="translated">Hozza létre, amikor a SecureString példánya &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; további védelmet biztosít</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating a string from a character-at-a-time source, &lt;xref:System.String&gt; creates multiple intermediate in memory, whereas  SecureString creates just a single instance.</source>
          <target state="translated">A karakterlánc egy karakter-:-a-időforrást, létrehozásakor &lt;xref:System.String&gt;a memóriában, több köztes hoz, mivel a SecureString csak egyetlen példányt hoz létre.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Garbage collection of &lt;xref:System.String&gt; objects  is non-deterministic.</source>
          <target state="translated">A szemétgyűjtés &lt;xref:System.String&gt;objektumok nem determinisztikus.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, because its memory is not pinned, the garbage collector will make additional copies of &lt;xref:System.String&gt; values when moving and compacting memory.</source>
          <target state="translated">Emellett az memória nincs rögzítve, mert a szemétgyűjtő bizonyosodhatunk további példányokat &lt;xref:System.String&gt;értékek áthelyezésekor és memória tömörítését.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the memory allocated to a SecureString object is pinned,  and that memory can be freed by calling the &lt;xref:System.Security.SecureString.Dispose%2A&gt; method.</source>
          <target state="translated">Ezzel szemben a SecureString objektum kiosztott memória van rögzítve, és, hogy a memória szabadítható meghívásával a &lt;xref:System.Security.SecureString.Dispose%2A&gt;metódus.&lt;/xref:System.Security.SecureString.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although data stored in a SecureString instance is more secure than data stored in a &lt;xref:System.String&gt; instance, there are significant limitations on how secure a SecureString instance is.</source>
          <target state="translated">Bár a SecureString példányban tárolt adatok több biztonságos, mint a &lt;xref:System.String&gt;példány, a SecureString példány hogyan biztonságos szigetek jelentős korlátozva&lt;/xref:System.String&gt; tárolt adatok</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include:       Platform    On the Windows operating system, the contents of a SecureString instance's internal character array is encrypted.</source>
          <target state="translated">Ezek közé tartoznak: Platform a a Windows operációs rendszer, a tartalmát a SecureString példány belső karaktertömbnek titkosítva van.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</source>
          <target state="translated">Hogy az API-k vagy kulcskezelés problémák hiányzik, mert titkosítási azonban nem érhető el minden platformon.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, SecureString is available on Desktop (Windows only), and not on .NET Core.</source>
          <target state="translated">Emiatt a SecureString áll rendelkezésre, asztalon (csak Windows), és nem a .NET Core.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duration    Even if the SecureString implementation is able to take advantage of encryption, the plain text assigned to the SecureString instance may be exposed at various times:      -   Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</source>
          <target state="translated">Időtartam páros képes kihasználni a titkosítás, az egyszerű szöveges példány különböző időpontokban válhat a SecureString rendelt SecureString végrehajtása esetén: – mivel a Windows nem biztosít egy biztonságos karakterláncot kell megadnia az operációs rendszer szintjén, továbbra is a .NET-keretrendszer példányhoz átalakítani a biztonságos karakterláncot kell megadnia az egyszerű szöveges ábrázolást akarja használni.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Whenever the value of the secure string is modified by methods such as &lt;xref:System.Security.SecureString.AppendChar%2A&gt; or &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, it must be decrypted (i.e., converted back to plain text), modified, and then encrypted again.</source>
          <target state="translated">– Amikor a biztonságos karakterlánc értéke módosul a metódusok, mint &lt;xref:System.Security.SecureString.AppendChar%2A&gt;vagy &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, akkor vissza kell fejteni (azaz, átalakított vissza gombra, és egyszerű szöveg), módosítva, és titkosítja, majd újra.&lt;/xref:System.Security.SecureString.RemoveAt%2A&gt; &lt;/xref:System.Security.SecureString.AppendChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</source>
          <target state="translated">-Ha a biztonságos karakterláncot kell megadnia egy együttműködési hívás használja, akkor át kell alakítani ANSI-karakterlánc, egy Unicode karakterlánc vagy bináris karakterlánc (BSTR).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">További információkért lásd: a <bpt id="p1">[</bpt>SecureString és együttműködési<ept id="p1">](#interop)</ept> szakasz.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The time interval for which the SecureString instance's value is exposed  is merely shortened in comparison to the &lt;xref:System.String&gt; class.</source>
          <target state="translated">Az időtartam, amelynek a SecureString Példányérték fel van fedve csupán csonkolva ellentétben az &lt;xref:System.String&gt;osztályhoz.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Storage versus usage    More generally, the SecureString class defines a storage mechanism for string values that should be protected or kept confidential.</source>
          <target state="translated">Használati és tároló általában a SecureString osztály határozzák meg tárolási védett vagy bizalmasan kell karakterlánc-értékek.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, outside of the .NET Framework itself, no usage mechanism supports SecureString.</source>
          <target state="translated">Kívül a .NET-keretrendszer magát, azonban használatának mechanizmus SecureString támogatja.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</source>
          <target state="translated">Ez azt jelenti, hogy a biztonságos karakterláncot kell konvertálni, amely felismeri a cél használható formában (általában egy egyszerű szöveges formában), és, hogy a felhasználó terület visszafejtési és -konvertálási kell megjelennie.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overall, SecureString is more secure than &lt;xref:System.String&gt; because it limits the exposure of sensitive string data.</source>
          <target state="translated">A teljes, SecureString, annál biztonságosabb &lt;xref:System.String&gt;mert bizalmas karakterlánc adatok veszélyeztetettségének.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</source>
          <target state="translated">Ezek a karakterláncok továbbra is válhat nyers memória, például a gazdagépen, a folyamatkép-kiírást vagy a felhasználó megtekinthető lapozófájl futó rosszindulatú folyamat eléréséhez használt művelet vagy folyamat.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of using SecureString to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</source>
          <target state="translated">Jelszavak védelmére SecureString helyett a javasolt megoldás egy nem átlátszó leíró használt folyamaton kívül tárolt hitelesítő adatok használatára.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Lap tetejére<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Egy új példányát inicializálja a <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> osztály.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this instance.</source>
          <target state="translated">Hiba történt a védelmét, vagy ez a példány értékének feloldása közben.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Ez a művelet nem támogatott ezen a platformon.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a subarray of <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects.</source>
          <target state="translated">Egy új példányát inicializálja a <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> egy subarray az osztály <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objektumok.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This constructor is not CLS-compliant.</source>
          <target state="translated">Ez a konstruktor nem CLS-kompatibilis.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The CLS-compliant alternative is <ph id="ph1">&amp;lt;</ph>xref:System.Security.SecureString.%23ctor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">A CLS-kompatibilis alternatíva ez <ph id="ph1">&amp;lt;</ph>xref:System.Security.SecureString.%23ctor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the new &lt;xref:System.Security.SecureString&gt; object to the number of characters in <ph id="ph1">`value`</ph> specified by <ph id="ph2">`length`</ph>; the value of the instance is then encrypted.</source>
          <target state="translated">Ez a konstruktor inicializálja az új &lt;xref:System.Security.SecureString&gt;karakterek száma objektum <ph id="ph1">`value`</ph> által megadott <ph id="ph2">`length`</ph>; a példány értékét a rendszer ezután titkosítja.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>In C#, this constructor is defined only in the context of unsafe code.</source>
          <target state="translated">A C# Ez a konstruktor csak nem biztonságos kóddal környezetében van definiálva.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A pointer to an array of <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects.</source>
          <target state="translated">A tömb mutató <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objektumok.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The number of elements of <ph id="ph1">`value`</ph> to include in the new instance.</source>
          <target state="translated">Az elemek száma <ph id="ph1">`value`</ph> ahhoz, hogy az új példány szerepeljen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;length&lt;/code&gt;</ph> is less than zero or greater than 65,536.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;length&lt;/code&gt;</ph>kisebb nullánál vagy nagyobb, mint 65,536 van.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Hiba történt a védelmét, vagy feloldása a biztonságos karakterlánc értéke.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Ez a művelet nem támogatott ezen a platformon.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Appends a character to the end of the current secure string.</source>
          <target state="translated">Az aktuális biztonságos karakterlánc végén fűzi hozzá karaktert.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is appended; then the new value of the secure string is re-protected.</source>
          <target state="translated">Ha az használ egy védelmi mechanizmust, például titkosítást, a biztonságos karakterláncot kell megadnia, ha vannak ilyenek, értéke nem védett; <ph id="ph1">`c`</ph> a rendszer hozzáfűzi; majd a biztonságos karakterláncot kell megadnia az új értéke újra védett.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A character to append to this secure string.</source>
          <target state="translated">A biztonságos karakterláncot hozzáfűzése karaktert.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">A biztonságos karakterláncot már el lett távolítva.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">A biztonságos karakterláncot csak olvasható.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">A művelet végrehajtása teszi a biztonságos karakterlánc hossza nagyobb, mint 65 536 karakter.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Hiba történt a védelmét, vagy feloldása a biztonságos karakterlánc értéke.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Deletes the value of the current secure string.</source>
          <target state="translated">Törli a jelenlegi biztonságos karakterlánc értékét.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</source>
          <target state="translated">A számítógép elegendő memóriával a biztonságos karakterlánc értéket tartalmazó nullákat tartalmaz, akkor biztonságos karakterlánc értéknek a hossza nullára van állítva.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">A biztonságos karakterláncot már el lett távolítva.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">A biztonságos karakterláncot csak olvasható.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current secure string.</source>
          <target state="translated">Másolat készítése az aktuális biztonságos karakterláncot kell megadnia.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an instance of a &lt;xref:System.Security.SecureString&gt; is marked read-only, the copy of that instance will not be read-only.</source>
          <target state="translated">Ha egy példányát a &lt;xref:System.Security.SecureString&gt;van megjelölve, csak olvasható, példánynak másolata nem lesz csak olvasható.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A duplicate of this secure string.</source>
          <target state="translated">Duplikált biztonságos karakterlánc.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">A biztonságos karakterláncot már el lett távolítva.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Hiba történt a védelmét, vagy feloldása a biztonságos karakterlánc értéke.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Feloldja a jelenlegi által használt erőforrások <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objektum.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method writes binary zeroes to the allocated memory that contains the value of this &lt;xref:System.Security.SecureString&gt; object, then frees the allocated memory.</source>
          <target state="translated">A Dispose metódus ír a lefoglalt memória az e értéket tartalmazó bináris nullából &lt;xref:System.Security.SecureString&gt;objektumot, majd a lefoglalt memória felszabadul.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">További információkért lásd: <bpt id="p1">[</bpt>szemétgyűjtés<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Inserts a character in this secure string at the specified index position.</source>
          <target state="translated">A biztonságos karakterláncot kell megadnia a megadott pozíciónál karaktert szúrja be.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is zero-based; the first character in this secure string is at index position zero.</source>
          <target state="translated">Az index kívül esik a nulla alapú; a biztonságos karakterlánc első karaktere az index nulla pozíciótól.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is inserted at the specified index position; then the new value is re-protected.</source>
          <target state="translated">Ha az használ egy védelmi mechanizmust, például titkosítást, a biztonságos karakterláncot kell megadnia, ha vannak ilyenek, értéke nem védett; <ph id="ph1">`c`</ph> csatlakoztatva van a megadott pozíciónál; majd a védelem visszaállítása új értéke.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InsertAt method yields the same results as the &lt;xref:System.Security.SecureString.AppendChar%2A&gt; method, which inserts a character at the end of a secure string, if the <ph id="ph1">`index`</ph> parameter of InsertAt is set to the length of this instance.</source>
          <target state="translated">A InsertAt metódus azonos adja eredményül a &lt;xref:System.Security.SecureString.AppendChar%2A&gt;metódus, amely karakter beszúrása egy biztonságos karakterláncot kell megadnia, végén, ha a <ph id="ph1">`index`</ph> InsertAt paraméterének értéke ehhez a példányhoz mennyi.&lt;/xref:System.Security.SecureString.AppendChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The index position where parameter <ph id="ph1">`c`</ph> is inserted.</source>
          <target state="translated">Az index elhelyezése where paraméter <ph id="ph1">`c`</ph> csatlakoztatva van.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The character to insert.</source>
          <target state="translated">A beszúrandó karakter.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">A biztonságos karakterláncot már el lett távolítva.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">A biztonságos karakterláncot csak olvasható.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or greater than the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>értéke nem nulla, biztonságos karakterlánc hosszánál nagyobb.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-or-       Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">– vagy – a művelet végrehajtása tenné a biztonságos karakterlánc hossza nagyobb, mint 65 536 karakter.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Hiba történt a védelmét, vagy feloldása a biztonságos karakterlánc értéke.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Indicates whether this secure string is marked read-only.</source>
          <target state="translated">Azt jelzi, hogy a biztonságos karakterláncot van megjelölve, csak olvasható.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an instance of &lt;xref:System.Security.SecureString&gt; is marked read-only by the &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt; method, any attempt to modify the value of the instance throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Miután &lt;xref:System.Security.SecureString&gt;van megjelölve, a &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;módszer, módosítsa a példány jelez értékét &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; tett bármilyen kísérlet&lt;/xref:System.Security.SecureString.MakeReadOnly%2A&gt; csak olvasható&lt;/xref:System.Security.SecureString&gt; példánya</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the IsReadOnly method to test whether a &lt;xref:System.Security.SecureString&gt; is read-only before attempting to modify it.</source>
          <target state="translated">A típus IsReadOnly metódust használja annak megállapítására, hogy egy &lt;xref:System.Security.SecureString&gt;csak olvasható előtt megpróbálja módosítani azt.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this secure string is marked read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Ha a biztonságos karakterláncot van megjelölve, csak olvasható; Ellenkező esetben <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">A biztonságos karakterláncot már el lett távolítva.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the current secure string.</source>
          <target state="translated">Lekérdezi a karakterek számát az aktuális biztonságos karakterláncot kell megadnia.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Length property returns the number of &lt;xref:System.Char&gt; objects in this instance, not the number of Unicode characters.</source>
          <target state="translated">A Length tulajdonságot számát adja vissza &lt;xref:System.Char&gt;objektumok ebben az esetben, nem Unicode karakterek száma.&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode character might be represented by more than one &lt;xref:System.Char&gt; object.</source>
          <target state="translated">A Unicode-karakter lehet, hogy képviseli egynél több &lt;xref:System.Char&gt;objektum.&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum length of a &lt;xref:System.Security.SecureString&gt; instance is 65,536 characters.</source>
          <target state="translated">Legfeljebb egy &lt;xref:System.Security.SecureString&gt;példány 65 536 karakterek.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects in this secure string.</source>
          <target state="translated">Hány <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> ezen objektumok biztonságos karakterlánc.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">A biztonságos karakterláncot már el lett távolítva.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Makes the text value of this secure string read-only.</source>
          <target state="translated">Lehetővé teszi a biztonságos karakterlánc szöveges érték, csak olvasható.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initialize the text value of an instance of the &lt;xref:System.Security.SecureString&gt; class with the &lt;xref:System.Security.SecureString.%23ctor%2A&gt; constructors, and modify the value with the &lt;xref:System.Security.SecureString.Clear%2A&gt;, &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, &lt;xref:System.Security.SecureString.SetAt%2A&gt;, &lt;xref:System.Security.SecureString.InsertAt%2A&gt;, and &lt;xref:System.Security.SecureString.AppendChar%2A&gt; methods.</source>
          <target state="translated">A szöveges érték, egy példányának inicializálása a &lt;xref:System.Security.SecureString&gt;az osztály a &lt;xref:System.Security.SecureString.%23ctor%2A&gt;konstruktorok, és módosítsa az értéket a &lt;xref:System.Security.SecureString.Clear%2A&gt;, &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, &lt;xref:System.Security.SecureString.SetAt%2A&gt;, &lt;xref:System.Security.SecureString.InsertAt%2A&gt;, és &lt;xref:System.Security.SecureString.AppendChar%2A&gt;módszerek.&lt;/xref:System.Security.SecureString.AppendChar%2A&gt; &lt;/xref:System.Security.SecureString.InsertAt%2A&gt; &lt;/xref:System.Security.SecureString.SetAt%2A&gt; &lt;/xref:System.Security.SecureString.RemoveAt%2A&gt; &lt;/xref:System.Security.SecureString.Clear%2A&gt; &lt;/xref:System.Security.SecureString.%23ctor%2A&gt; &lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you have made your final modifications, use the MakeReadOnly method to make the value of the instance immutable (read-only).</source>
          <target state="translated">Miután kiválasztotta a végleges módosítások, segítségével a MakeReadOnly metódust az érték a példány nem módosítható (csak olvasható).</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the value is marked as read-only, any further attempt to modify it throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Miután az érték csak olvashatóként van megjelölve, módosítsa ezt a további próbál jelez &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The effect of invoking MakeReadOnly is permanent because the &lt;xref:System.Security.SecureString&gt; class provides no means to make the secure string modifiable again.</source>
          <target state="translated">A MakeReadOnly metódust hívja a hatása az állandó mert a &lt;xref:System.Security.SecureString&gt;osztály nem teszi lehetővé a biztonságos karakterláncot módosíthatóvá tételéhez újra.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt; method to test whether an instance of &lt;xref:System.Security.SecureString&gt; is read-only.</source>
          <target state="translated">Használja a &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;metódust annak megállapítására, hogy egy példánya &lt;xref:System.Security.SecureString&gt;csak olvasható.&lt;/xref:System.Security.SecureString&gt; &lt;/xref:System.Security.SecureString.IsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">A biztonságos karakterláncot már el lett távolítva.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Removes the character at the specified index position from this secure string.</source>
          <target state="translated">A megadott pozíciónál karakter eltávolítása a biztonságos karakterláncot kell megadnia.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">Az index kívül esik a nulla alapú; Ebben a példában az első karakter van index nulla pozíciótól.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</source>
          <target state="translated">Ha az használ egy védelmi mechanizmust, például titkosítást, a biztonságos karakterláncot kell megadnia, ha vannak ilyenek, értéke nem védett; a megadott pozíciónál karakter eltávolítása; az új érték akkor a védelem visszaállítása.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The index position of a character in this secure string.</source>
          <target state="translated">Az index pozíciója karaktert a biztonságos karakterláncot kell megadnia.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">A biztonságos karakterláncot már el lett távolítva.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">A biztonságos karakterláncot csak olvasható.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>értéke nem nulla, vagy nagyobb, mint a biztonságos karakterlánc hosszának egyenlőnek.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Hiba történt a védelmét, vagy feloldása a biztonságos karakterlánc értéke.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Replaces the existing character at the specified index position with another character.</source>
          <target state="translated">Lecseréli a meglévő a megadott pozíciónál levő karaktert egy másik karakter.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">Az index kívül esik a nulla alapú; Ebben a példában az első karakter van index nulla pozíciótól.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is assigned to the specified index position; then the new value is re-protected.</source>
          <target state="translated">Ha az használ egy védelmi mechanizmust, például titkosítást, a biztonságos karakterláncot kell megadnia, ha vannak ilyenek, értéke nem védett; <ph id="ph1">`c`</ph> van rendelve a megadott index beosztáshoz; majd a védelem visszaállítása új értéke.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The index position of an existing character in this secure string</source>
          <target state="translated">A biztonságos karakterláncot kell megadnia az index egy meglévő karakter pozíciója</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A character that replaces the existing character.</source>
          <target state="translated">Lecseréli a meglévő karakter karaktert.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">A biztonságos karakterláncot már el lett távolítva.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">A biztonságos karakterláncot csak olvasható.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>értéke nem nulla, vagy nagyobb, mint a biztonságos karakterlánc hosszának egyenlőnek.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Hiba történt a védelmét, vagy feloldása a biztonságos karakterlánc értéke.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>