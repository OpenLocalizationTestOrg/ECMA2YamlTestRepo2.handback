<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="hu-hu">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7e536ec7fc4ccbcc90abed36fdeb93a3a29ea8f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.IReceiveMarkupExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9597fe7ddc0abb362224875d337415ec46726ca4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1474a3c7fa23a9a0d0ba3449e0da6f6e3367c707</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.</source>
          <target state="translated">Ez egy olyan mechanizmus, amellyel típusok deklarálhatnak, hogy azok fogadhat kifejezés (vagy egy másik osztály) egy markup extension, ahol a kimeneti egy másik tulajdonság típusa, mint a target tulajdonság.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Do not use for <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementations; see Remarks.</source>
          <target state="translated">Ne használjon <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> megvalósítások; lásd: a megjegyzések.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph>, IReceiveMarkupExtension was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing.</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph>, IReceiveMarkupExtension lett WPF-specifikus technika lehetővé tevő típusok adjon meg egy másik codepath, amikor egyetlen XAML-elérhető tagot ahol állítja kódkiterjesztés XAML elemzése során.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, ez az interfész már elavult, és a .NET-keretrendszer XAML-szolgáltatások implementációja hogyan kódkiterjesztés megkaphatja a szolgáltatások helyére vagy típusok hívhat meg kódkiterjesztés adott beállító logikát.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt; attributes applied.</source>
          <target state="translated">A <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> megvalósításokhoz, ha kíván különleges feldolgozási hajtható végre, ha a tulajdonságok beállítása által kódkiterjesztés, nem pedig egy másik módszerrel típusok definiálni kell a &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;alkalmazott attribútumok.&lt;/xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The attribute specifies a callback, which is typically defined as a private member of the type.</source>
          <target state="translated">Az attribútum határozza meg, hogy egy visszahívást, amelyet általában a típus saját tagként.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In infrastructure implementations of WPF classes, most cases where &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt; is applied reference a <ph id="ph1">`ReceiveMarkupExtension`</ph> method that previously implemented this interface, but now instead use context through the callback.</source>
          <target state="translated">Infrastruktúra-implementációkban WPF osztályok, legtöbb esetben where &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;van alkalmazva hivatkozás egy <ph id="ph1">`ReceiveMarkupExtension`</ph> metódus korábban megvalósítva Ez az interfész, de most helyette keresztül a visszahívási környezet használata.&lt;/xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides the handling for markup extensions that provide property values.</source>
          <target state="translated">A kódkiterjesztésekben tulajdonság értékeket kezelésének biztosít.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Do not use for <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementations; see Remarks in <bpt id="p1">&lt;xref href="System.Windows.Markup.IReceiveMarkupExtension"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Ne használjon <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> megvalósítások; lásd: <bpt id="p1">&lt;xref href="System.Windows.Markup.IReceiveMarkupExtension"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the target property.</source>
          <target state="translated">A target tulajdonság neve.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The markup extension instance of the incoming data.</source>
          <target state="translated">A kódkiterjesztési bővítmény példánya a bejövő adatok.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Can provide additional services that should be performed when processing the markup extension data for a property value.</source>
          <target state="translated">A tulajdonság értéke markup bővítmény adatainak feldolgozása során végrehajtandó további szolgáltatásokat biztosít.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>