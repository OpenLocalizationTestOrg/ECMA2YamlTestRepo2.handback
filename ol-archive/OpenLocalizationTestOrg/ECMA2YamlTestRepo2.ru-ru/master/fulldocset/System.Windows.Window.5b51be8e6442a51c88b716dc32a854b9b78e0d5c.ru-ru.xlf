<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7172c27ebcd4693a42b484604cff94ac6acd1306</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Window.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4119341e55e118230bf70eed4f7179ef30065f01</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">582455b08242d27076383f3e723bd48f521b75e4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</source>
          <target state="translated">Предоставляет возможность создавать, настраивать, показывать и управлять временем жизни и диалоговые окна.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The point of interaction between a user and a standalone application is a window.</source>
          <target state="translated">Точка взаимодействия между пользователем и автономное приложение — это окно.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> window consists of two distinct areas:      -   A non-client area, which hosts the windows adornments, including an icon, title, System menu, minimize button, maximize button, restore button, close button, and a border.</source>
          <target state="translated">Объект <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> окно состоит из двух различных областей:-неклиентскую область, которая содержит элементы оформления окна, включая значок, заголовок, системное меню «свернуть», разверните кнопки, восстановления, кнопку закрытия и границу.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A client area, which hosts application-specific content.</source>
          <target state="translated">— Клиентская область, в котором размещается содержимое для конкретного приложения.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A standard window is shown in the following figure:       <bpt id="p1">![</bpt>Window elements<ept id="p1">]</ept><bpt id="p2">(~/add/media/windowoverviewfigure1.PNG "</bpt>Window elements<ept id="p2">")</ept>       Window encapsulates the ability to create, configure, show, and manage the lifetime of both windows and dialog boxes, and provides the following key services:       <bpt id="p3">**</bpt>Lifetime Management<ept id="p3">**</ept>: &lt;xref:System.Windows.Window.Activate%2A&gt;, &lt;xref:System.Windows.Window.Activated&gt;, &lt;xref:System.Windows.Window.Close%2A&gt;, &lt;xref:System.Windows.Window.Closed&gt;, &lt;xref:System.Windows.Window.Closing&gt;, &lt;xref:System.Windows.Window.Deactivated&gt;, &lt;xref:System.Windows.Window.Hide%2A&gt;, &lt;xref:System.Windows.Window.IsActive%2A&gt;, &lt;xref:System.Windows.Window.Show%2A&gt;, &lt;xref:System.Windows.Window.SourceInitialized&gt;.</source>
          <target state="translated">Стандартное окно показано на следующем рисунке: <bpt id="p1">![</bpt>элементов окна<ept id="p1">]</ept><bpt id="p2">(~/add/media/windowoverviewfigure1.PNG "</bpt>элементов окна<ept id="p2">")</ept> инкапсулирует возможность создавать, настраивать, показывать и управлять временем жизни окна и диалоговые окна и предоставляет следующие ключевые службы: <bpt id="p3">**</bpt>управления жизненным циклом<ept id="p3">**</ept>: &lt;xref:System.Windows.Window.Activate%2A&gt;, &lt;xref:System.Windows.Window.Activated&gt;( &lt;xref:System.Windows.Window.Close%2A&gt;), &lt;xref:System.Windows.Window.Closed&gt;( &lt;xref:System.Windows.Window.Closing&gt;), &lt;xref:System.Windows.Window.Deactivated&gt;( &lt;xref:System.Windows.Window.Hide%2A&gt;), &lt;xref:System.Windows.Window.IsActive%2A&gt;( &lt;xref:System.Windows.Window.Show%2A&gt;), &lt;xref:System.Windows.Window.SourceInitialized&gt;.&lt;/xref:System.Windows.Window.SourceInitialized&gt; &lt;/xref:System.Windows.Window.Show%2A&gt; &lt;/xref:System.Windows.Window.IsActive%2A&gt; &lt;/xref:System.Windows.Window.Hide%2A&gt; &lt;/xref:System.Windows.Window.Deactivated&gt; &lt;/xref:System.Windows.Window.Closing&gt; &lt;/xref:System.Windows.Window.Closed&gt; &lt;/xref:System.Windows.Window.Close%2A&gt; &lt;/xref:System.Windows.Window.Activated&gt; &lt;/xref:System.Windows.Window.Activate%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Window Management<ept id="p1">**</ept>: &lt;xref:System.Windows.Window.GetWindow%2A&gt;, &lt;xref:System.Windows.Window.OwnedWindows%2A&gt;, &lt;xref:System.Windows.Window.Owner%2A&gt;.</source>
          <target state="translated"><bpt id="p1">**</bpt>Управление окнами<ept id="p1">**</ept>: &lt;xref:System.Windows.Window.GetWindow%2A&gt;( &lt;xref:System.Windows.Window.OwnedWindows%2A&gt;), &lt;xref:System.Windows.Window.Owner%2A&gt;.&lt;/xref:System.Windows.Window.Owner%2A&gt; &lt;/xref:System.Windows.Window.OwnedWindows%2A&gt; &lt;/xref:System.Windows.Window.GetWindow%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Appearance and Behavior<ept id="p1">**</ept>: &lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;, &lt;xref:System.Windows.Window.ContentRendered&gt;, &lt;xref:System.Windows.Window.DragMove%2A&gt;, &lt;xref:System.Windows.Window.Icon%2A&gt;, &lt;xref:System.Windows.Window.Left%2A&gt;, &lt;xref:System.Windows.Window.LocationChanged&gt;, &lt;xref:System.Windows.Window.ResizeMode%2A&gt;, &lt;xref:System.Windows.Window.RestoreBounds%2A&gt;, &lt;xref:System.Windows.Window.ShowActivated%2A&gt;, &lt;xref:System.Windows.Window.ShowInTaskbar%2A&gt;, &lt;xref:System.Windows.Window.SizeToContent%2A&gt;, &lt;xref:System.Windows.Window.StateChanged&gt;, &lt;xref:System.Windows.Window.Title%2A&gt;, &lt;xref:System.Windows.Window.Top%2A&gt;, &lt;xref:System.Windows.Window.Topmost%2A&gt;, &lt;xref:System.Windows.Window.WindowStartupLocation%2A&gt;, &lt;xref:System.Windows.Window.WindowState%2A&gt;, &lt;xref:System.Windows.Window.WindowStyle%2A&gt;       <bpt id="p2">**</bpt>Dialog Boxes<ept id="p2">**</ept>: &lt;xref:System.Windows.Window.DialogResult%2A&gt;, &lt;xref:System.Windows.Window.ShowDialog%2A&gt;.</source>
          <target state="translated"><bpt id="p1">**</bpt>Appearance and Behavior<ept id="p1">**</ept>: &lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;, &lt;xref:System.Windows.Window.ContentRendered&gt;, &lt;xref:System.Windows.Window.DragMove%2A&gt;, &lt;xref:System.Windows.Window.Icon%2A&gt;, &lt;xref:System.Windows.Window.Left%2A&gt;, &lt;xref:System.Windows.Window.LocationChanged&gt;, &lt;xref:System.Windows.Window.ResizeMode%2A&gt;, &lt;xref:System.Windows.Window.RestoreBounds%2A&gt;, &lt;xref:System.Windows.Window.ShowActivated%2A&gt;, &lt;xref:System.Windows.Window.ShowInTaskbar%2A&gt;, &lt;xref:System.Windows.Window.SizeToContent%2A&gt;, &lt;xref:System.Windows.Window.StateChanged&gt;, &lt;xref:System.Windows.Window.Title%2A&gt;, &lt;xref:System.Windows.Window.Top%2A&gt;, &lt;xref:System.Windows.Window.Topmost%2A&gt;, &lt;xref:System.Windows.Window.WindowStartupLocation%2A&gt;, &lt;xref:System.Windows.Window.WindowState%2A&gt;, &lt;xref:System.Windows.Window.WindowStyle%2A&gt;       <bpt id="p2">**</bpt>Dialog Boxes<ept id="p2">**</ept>: &lt;xref:System.Windows.Window.DialogResult%2A&gt;, &lt;xref:System.Windows.Window.ShowDialog%2A&gt;.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt;&lt;/xref:System.Windows.Window.DialogResult%2A&gt;&lt;/xref:System.Windows.Window.WindowStyle%2A&gt;&lt;/xref:System.Windows.Window.WindowState%2A&gt;&lt;/xref:System.Windows.Window.WindowStartupLocation%2A&gt;&lt;/xref:System.Windows.Window.Topmost%2A&gt;&lt;/xref:System.Windows.Window.Top%2A&gt;&lt;/xref:System.Windows.Window.Title%2A&gt;&lt;/xref:System.Windows.Window.StateChanged&gt;&lt;/xref:System.Windows.Window.SizeToContent%2A&gt;&lt;/xref:System.Windows.Window.ShowInTaskbar%2A&gt;&lt;/xref:System.Windows.Window.ShowActivated%2A&gt;&lt;/xref:System.Windows.Window.RestoreBounds%2A&gt;&lt;/xref:System.Windows.Window.ResizeMode%2A&gt;&lt;/xref:System.Windows.Window.LocationChanged&gt;&lt;/xref:System.Windows.Window.Left%2A&gt;&lt;/xref:System.Windows.Window.Icon%2A&gt;&lt;/xref:System.Windows.Window.DragMove%2A&gt;&lt;/xref:System.Windows.Window.ContentRendered&gt;&lt;/xref:System.Windows.Window.AllowsTransparency%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, &lt;xref:System.Windows.Application&gt; exposes special support for managing all of the windows in an application:      -   Application maintains a list of all the windows that are currently instantiated in the application.</source>
          <target state="translated">Кроме того &lt;xref:System.Windows.Application&gt;предоставляет специальную поддержку для управления все окна в приложении:-приложение поддерживает список всех окон, которые в данный момент созданы в приложении.&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This list is exposed by the &lt;xref:System.Windows.Application.Windows%2A&gt; property.</source>
          <target state="translated">Этот список предоставляется &lt;xref:System.Windows.Application.Windows%2A&gt;свойство.&lt;/xref:System.Windows.Application.Windows%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   By default, &lt;xref:System.Windows.Application.MainWindow%2A&gt; is automatically set with a reference to the first Window that is instantiated in an application.</source>
          <target state="translated">-По умолчанию &lt;xref:System.Windows.Application.MainWindow%2A&gt;автоматически устанавливается со ссылкой на первое окно, экземпляр которого создается в приложении.&lt;/xref:System.Windows.Application.MainWindow%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This thereby making the window the main application window.</source>
          <target state="translated">Это делая окна главного окна приложения.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Window can be implemented using markup, markup and code-behind, or code.</source>
          <target state="translated">Окно может быть реализован с помощью разметки, разметки и кода или кода.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Window is primarily used to display windows and dialog boxes for standalone applications.</source>
          <target state="translated">Окно в основном используется для отображения окна и диалоговые окна для автономных приложений.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, for applications that require navigation at the window level, such as wizards, you can use &lt;xref:System.Windows.Navigation.NavigationWindow&gt; instead; &lt;xref:System.Windows.Navigation.NavigationWindow&gt; derives from Window and extends it with browser-style navigation support.</source>
          <target state="translated">Однако для приложений, требующих навигации на уровне окна, например мастера, можно использовать &lt;xref:System.Windows.Navigation.NavigationWindow&gt;вместо; &lt;xref:System.Windows.Navigation.NavigationWindow&gt;является производным от окна и расширяет его с поддержкой навигации в стиле браузера.&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Islands of navigable content can be incorporated into other content and content containers using &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек Острова содержимого с поддержкой навигации могут включаться в другие содержимое и контейнеры с помощью &lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Window needs <ph id="ph1">`UnmanagedCode`</ph> security permission to be instantiated.</source>
          <target state="translated">Окно должно <ph id="ph1">`UnmanagedCode`</ph> создания разрешения безопасности.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This has the following consequences:      -   <ph id="ph1">[!INCLUDE[TLA#tla_clickonce](~/add/includes/tlasharptla-clickonce-md.md)]</ph>-deployed standalone applications will request permission elevation when launched from either the Internet or Local Intranet zones.</source>
          <target state="translated">Это приводит к следующим последствиям:- <ph id="ph1">[!INCLUDE[TLA#tla_clickonce](~/add/includes/tlasharptla-clickonce-md.md)]</ph>-развернутой отдельные приложения запросят повышения разрешений при запуске из зон Интернета или локальной интрасети.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]</ph> that request anything less than full permissions will not be able to instantiate windows or dialog boxes.</source>
          <target state="translated">- <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]</ph> , запрашивающие меньше, чем полные права доступа не будет иметь возможность создать экземпляр windows или диалоговым окнам.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about standalone application deployment and security considerations, see <bpt id="p1">[</bpt>WPF Security Strategy - Platform Security<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Сведения о автономное развертывание приложений и рекомендации по безопасности см. в разделе <bpt id="p1">[</bpt>стратегия безопасности WPF — безопасность платформы<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Window is a &lt;xref:System.Windows.Controls.ContentControl&gt;, which means that it can contain a single object of any type (such as a string, an image, or a panel).</source>
          <target state="translated">Окно &lt;xref:System.Windows.Controls.ContentControl&gt;, что означает, что он может содержать один объект любого типа (например, строки, изображения или панели).&lt;/xref:System.Windows.Controls.ContentControl&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Windows.Controls.ContentControl&gt; class.</source>
          <target state="translated">Дополнительные сведения см. в разделе &lt;xref:System.Windows.Controls.ContentControl&gt;класса.&lt;/xref:System.Windows.Controls.ContentControl&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, Window is a root element and, therefore, cannot be part of another element's content.</source>
          <target state="translated">Кроме того окно является корневым элементом и, следовательно, не может быть частью содержимого другого элемента.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;, &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;, &lt;xref:System.Windows.Window.Top%2A&gt;, and &lt;xref:System.Windows.Window.Left%2A&gt; properties set on a Window through a style will not be applied at run time.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;, &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;, &lt;xref:System.Windows.Window.Top%2A&gt;, и &lt;xref:System.Windows.Window.Left%2A&gt;Свойства, заданные через стиль окна не будут применяться во время выполнения.&lt;/xref:System.Windows.Window.Left%2A&gt; &lt;/xref:System.Windows.Window.Top%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Customizing the Window Control    To apply the same property settings to multiple Window controls, use the &lt;xref:System.Windows.FrameworkElement.Style%2A&gt; property.</source>
          <target state="translated">Настройка окна элемента управления для применения значения свойств для нескольких элементов управления окна, используйте &lt;xref:System.Windows.FrameworkElement.Style%2A&gt;свойство.&lt;/xref:System.Windows.FrameworkElement.Style%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify the default &lt;xref:System.Windows.Controls.ControlTemplate&gt; to give the control a unique appearance.</source>
          <target state="translated">Можно изменить значение по умолчанию &lt;xref:System.Windows.Controls.ControlTemplate&gt;для предоставления уникального внешнего вида элемента управления.&lt;/xref:System.Windows.Controls.ControlTemplate&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about creating a &lt;xref:System.Windows.Controls.ControlTemplate&gt;, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о создании &lt;xref:System.Windows.Controls.ControlTemplate&gt;, в разделе <bpt id="p1">[</bpt>Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.&lt;/xref:System.Windows.Controls.ControlTemplate&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To see the parts and states that are specific to the Window, see <bpt id="p1">[</bpt>Window Styles and Templates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Части и состояния, характерные для окна см. в разделе <bpt id="p1">[</bpt>окна Стили и шаблоны<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">Свойства зависимостей для этого элемента управления могут быть заданы посредством стиля элемента управления по умолчанию.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">Если свойство задано стилем по умолчанию, когда элемент управления появится в приложении свойство может изменять значения по умолчанию.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">Стиль по умолчанию определяется по какая тема рабочего стола используется при запуске приложения.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>темы по умолчанию WPF<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Setting a visual property will only have an effect if that property is both present in Window control's default template and is set by using a .</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек свойства visual будет действовать только если это свойство более присутствует в шаблоне элемента управления окна по умолчанию и задается с помощью.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)</ept>.</source>
          <target state="translated">Список визуальных свойств можно найти в разделе «Изменение Visual структуры управления» в <bpt id="p1">[</bpt>Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate<ept id="p1">](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructor initializes the &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;, &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;, &lt;xref:System.Windows.Window.Top%2A&gt;, and &lt;xref:System.Windows.Window.Left%2A&gt; properties to their default &lt;xref:System.Windows.Window&gt; values.</source>
          <target state="translated">Конструктор инициализирует &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;, &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;, &lt;xref:System.Windows.Window.Top%2A&gt;, и &lt;xref:System.Windows.Window.Left%2A&gt;Свойства по умолчанию &lt;xref:System.Windows.Window&gt;значения.&lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window.Left%2A&gt; &lt;/xref:System.Windows.Window.Top%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Height%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a window is created within an &lt;xref:System.AppDomain&gt; that has an &lt;xref:System.Windows.Application&gt; object, the constructor adds the &lt;xref:System.Windows.Window&gt; object to the set of &lt;xref:System.Windows.Application&gt;-managed windows via the &lt;xref:System.Windows.Application.Windows%2A&gt; property of the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">Если окно создается в пределах &lt;xref:System.AppDomain&gt;с &lt;xref:System.Windows.Application&gt;объекта конструктор добавляет &lt;xref:System.Windows.Window&gt;объекта в набор &lt;xref:System.Windows.Application&gt;-управляемых windows через &lt;xref:System.Windows.Application.Windows%2A&gt;свойство &lt;xref:System.Windows.Application&gt;объекта.&lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Attempts to bring the window to the foreground and activates it.</source>
          <target state="translated">Пытается переместить окно на передний план и активирует его.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rules that determine whether the window is activated are the same as those used by the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> <ph id="ph2">`SetForegroundWindow`</ph> function (User32.dll).</source>
          <target state="translated">Правила, определяющие, имеет ли окно активироваться совпадают с используемыми <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> <ph id="ph2">`SetForegroundWindow`</ph> функции (User32.dll).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the window is activated in a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application that is not the user's foreground application, &lt;xref:System.Windows.Application.Activated&gt; event is raised.</source>
          <target state="translated">Если окно активируется в <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> приложение, которое не является приложением пользователя переднего плана, &lt;xref:System.Windows.Application.Activated&gt;событие.&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method cannot be called when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек этот метод нельзя вызывать, когда окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> was successfully activated; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> был успешно активирован; в противном случае — <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Occurs when a window becomes the foreground window.</source>
          <target state="translated">Происходит, когда окно становится окно переднего плана.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>A window is activated (becomes the foreground window) when:      -   The window is first opened.</source>
          <target state="translated">Окно активируется (попадает на передний план) при:-сначала открывается окно.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A user switches to a window by selecting it with the mouse, pressing ALT+TAB, or from Task Manager.</source>
          <target state="translated">-Пользователь переключается на окно, выбрав его с помощью мыши, нажав клавиши ALT + TAB или из диспетчера задач.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A user clicks the window's taskbar button.</source>
          <target state="translated">-Пользователь нажимает кнопку панели задач.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows that need to detect when they become activate can handle the Activated event.</source>
          <target state="translated">Windows, которые необходимо обнаружить, когда они становятся активации можно обрабатывать событие Activated.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a window is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">После активации окна он может деактивировать и повторно много раз за время своего существования.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application's behavior or state depends on its activation state, it can inspect &lt;xref:System.Windows.Window.IsActive%2A&gt; to determine which activation state it's in.</source>
          <target state="translated">Если поведение или состояние приложения зависит от состояния его активации, его можно проверить, &lt;xref:System.Windows.Window.IsActive%2A&gt;Чтобы определить, какое состояние активации его с in.&lt;/xref:System.Windows.Window.IsActive%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can also be &lt;xref:System.Windows.Application.Activated&gt;.</source>
          <target state="translated">Приложение также может быть &lt;xref:System.Windows.Application.Activated&gt;.&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a window's client area supports transparency.</source>
          <target state="translated">Возвращает или задает значение, указывающее, поддерживает ли клиентская область окна прозрачность.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Windows.Controls.Control.Background%2A&gt; property of a window is set to a transparent color, using &lt;xref:System.Windows.Media.Brushes.Transparent%2A&gt; for example, the window remains opaque.</source>
          <target state="translated">Когда &lt;xref:System.Windows.Controls.Control.Background%2A&gt;окна свойству прозрачного цвета, с помощью &lt;xref:System.Windows.Media.Brushes.Transparent%2A&gt;к примеру, окно остается непрозрачное.&lt;/xref:System.Windows.Media.Brushes.Transparent%2A&gt; &lt;/xref:System.Windows.Controls.Control.Background%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the desktop and any running applications "beneath" the window cannot be seen.</source>
          <target state="translated">Это означает, что отображается рабочий стол и любые выполняемые операции «под окном».</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable this type of transparency, AllowsTransparency must be set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Чтобы включить этот тип прозрачности, AllowsTransparency должно быть присвоено <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>AllowsTransparency exists to facilitate the creation of non-rectangular windows, and, consequently, when AllowsTransparency is set to <ph id="ph1">`true`</ph>, a window's &lt;xref:System.Windows.Window.WindowStyle%2A&gt; property must be set to &lt;xref:System.Windows.WindowStyle&gt;.</source>
          <target state="translated">Существует AllowsTransparency позволяет создавать непрямоугольные окна и, следовательно, если AllowsTransparency имеет значение <ph id="ph1">`true`</ph>, окна, &lt;xref:System.Windows.Window.WindowStyle%2A&gt;свойство должно быть присвоено &lt;xref:System.Windows.WindowStyle&gt;.&lt;/xref:System.Windows.WindowStyle&gt; &lt;/xref:System.Windows.Window.WindowStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowAllowsTransparency"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.AllowsTransparencyProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowAllowsTransparency"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.AllowsTransparencyProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.AllowsTransparencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the window supports transparency; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если окно поддерживает прозрачность; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A window that has a &lt;xref:System.Windows.Window.WindowStyle*&gt; value of anything other than <bpt id="p1">&lt;xref href="System.Windows.WindowStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Окна, которое имеет &lt;xref:System.Windows.Window.WindowStyle*&gt;значение любых данных, отличных от <bpt id="p1">&lt;xref href="System.Windows.WindowStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Window.WindowStyle*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.AllowsTransparency*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.AllowsTransparency*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.AllowsTransparency*&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Override this method to arrange and size a window and its child elements.</source>
          <target state="translated">Переопределите этот метод для упорядочения и задания размера окна и его дочерние элементы.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>ArrangeOverride is not called when the &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property has a value of &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">ArrangeOverride не вызывается, когда &lt;xref:System.Windows.UIElement.Visibility%2A&gt;свойство имеет значение &lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property is either &lt;xref:System.Windows.Visibility&gt; or &lt;xref:System.Windows.Visibility&gt;, ArrangeOverride is called.</source>
          <target state="translated">Если значение &lt;xref:System.Windows.UIElement.Visibility%2A&gt;равно либо &lt;xref:System.Windows.Visibility&gt;или &lt;xref:System.Windows.Visibility&gt;, называется ArrangeOverride.&lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When either &lt;xref:System.Windows.Window.Show%2A&gt; or &lt;xref:System.Windows.Window.ShowDialog%2A&gt; are called, the &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property of a &lt;xref:System.Windows.Window&gt; is set to &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек при &lt;xref:System.Windows.Window.Show%2A&gt;или &lt;xref:System.Windows.Window.ShowDialog%2A&gt;вызываются &lt;xref:System.Windows.UIElement.Visibility%2A&gt;свойство &lt;xref:System.Windows.Window&gt;имеет значение &lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt; &lt;/xref:System.Windows.Window.ShowDialog%2A&gt; &lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that reflects the final size that the window should use to arrange itself and its children.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Size"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , которое отражает окончательный размер, который следует использовать окну для размещения себя и свои дочерние элементы.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that reflects the actual size that was used.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Size"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , которое отражает фактический размер, который был использован.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Manually closes a <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Закрывает вручную <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.Window&gt; can be closed using one of several, well-known, system-provided mechanisms located in its title bar, including:      -   ALT+F4.</source>
          <target state="translated">Объект &lt;xref:System.Windows.Window&gt;может быть закрыто с помощью одного из нескольких хорошо известных, системных механизмов, расположенных в его заголовке, включая:-ALT + F4.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   System menu &amp;#124; <bpt id="p1">**</bpt>Close<ept id="p1">**</ept>.</source>
          <target state="translated">-Меню система | <bpt id="p1">**</bpt>Close<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button.</source>
          <target state="translated">- <bpt id="p1">**</bpt>Закрыть<ept id="p1">**</ept> кнопки.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.Window&gt; can also be closed using one of several well-known mechanisms within the client area that are provided by developers, including:      -   <bpt id="p1">**</bpt>File<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>Exit<ept id="p2">**</ept> on a main window.</source>
          <target state="translated">&lt;xref:System.Windows.Window&gt;Может быть закрыто с помощью одного из нескольких хорошо известных механизмов в клиентской области, предоставляемых разработчиками, включая:- <bpt id="p1">**</bpt>файл<ept id="p1">**</ept> | <bpt id="p2">**</bpt>Выхода<ept id="p2">**</ept> в главном окне.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>File<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>Close<ept id="p2">**</ept> or a <bpt id="p3">**</bpt>Close<ept id="p3">**</ept> button on a child window.</source>
          <target state="translated">-   <bpt id="p1">**</bpt>File<ept id="p1">**</ept> | <bpt id="p2">**</bpt>Закрыть<ept id="p2">**</ept> или <bpt id="p3">**</bpt>закрыть<ept id="p3">**</ept> кнопки для дочернего окна.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><bpt id="p1">**</bpt>OK<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept> buttons on a dialog box are also developer-provided, although will likely set &lt;xref:System.Windows.Window.DialogResult%2A&gt;, which automatically closes a window that was opened by calling &lt;xref:System.Windows.Window.ShowDialog%2A&gt;.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> <ph id="ph2"> &gt;  </ph> <bpt id="p1">**</bpt>ОК<ept id="p1">**</ept> и <bpt id="p2">**</bpt>отменить<ept id="p2">**</ept> кнопки в диалоговом окне также указан для разработчиков, несмотря на то что скорее всего будет задан &lt;xref:System.Windows.Window.DialogResult%2A&gt;, который автоматически закрывает окно, которое было открыто путем вызова &lt;xref:System.Windows.Window.ShowDialog%2A&gt;.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt; &lt;/xref:System.Windows.Window.DialogResult%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>These mechanisms require you to explicitly call Close to close a window.</source>
          <target state="translated">Эти механизмы необходимо явно вызвать метод Close для закрытия окна.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If a window, opened by calling &lt;xref:System.Windows.Window.ShowDialog%2A&gt;, and with a &lt;xref:System.Windows.Controls.Button&gt; with its &lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt; property set to true, will automatically close when the button is either clicked, or ESC is pressed.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек при открытии окна, вызвав &lt;xref:System.Windows.Window.ShowDialog%2A&gt;и с &lt;xref:System.Windows.Controls.Button&gt;с его &lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt;свойству задано значение true, автоматически закроется при нажатии кнопки либо или нажатия клавиши ESC.&lt;/xref:System.Windows.Controls.Button.IsCancel%2A&gt; &lt;/xref:System.Windows.Controls.Button&gt; &lt;/xref:System.Windows.Window.ShowDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the window was opened using &lt;xref:System.Windows.Window.Show%2A&gt;, however, Close must be explicitly called, such as from &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event handler for the &lt;xref:System.Windows.Controls.Button&gt;.</source>
          <target state="translated">Если окно было открыто с помощью &lt;xref:System.Windows.Window.Show%2A&gt;, однако закройте должны быть явно вызываемые, например в результате &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;обработчик событий для &lt;xref:System.Windows.Controls.Button&gt;.&lt;/xref:System.Windows.Controls.Button&gt; &lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; &lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Closing a window causes the &lt;xref:System.Windows.Window.Closing&gt; event to be raised.</source>
          <target state="translated">Закрытие окна вызывает &lt;xref:System.Windows.Window.Closing&gt;быть активизировано событие.&lt;/xref:System.Windows.Window.Closing&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Window.Closing&gt; event isn't canceled, the following occurs:      -   The &lt;xref:System.Windows.Window&gt; is removed from &lt;xref:System.Windows.Application.Windows%2A?displayProperty=fullName&gt; (if an &lt;xref:System.Windows.Application&gt; object exists).</source>
          <target state="translated">Если &lt;xref:System.Windows.Window.Closing&gt;событий не отменяется, то происходит следующее: - &lt;xref:System.Windows.Window&gt;удаляется из &lt;xref:System.Windows.Application.Windows%2A?displayProperty=fullName&gt;(если &lt;xref:System.Windows.Application&gt;объект существует).&lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Windows%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window.Closing&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Windows.Window&gt; is removed from the owner &lt;xref:System.Windows.Window&gt; if the owner/owned relationship was established before the owned &lt;xref:System.Windows.Window&gt; was shown and after the owner &lt;xref:System.Windows.Window&gt; was opened.</source>
          <target state="translated">- &lt;xref:System.Windows.Window&gt;Удаляется из владельца &lt;xref:System.Windows.Window&gt;Если владелец/собственное связь была установлена до принадлежащие &lt;xref:System.Windows.Window&gt;было показано и после владельца &lt;xref:System.Windows.Window&gt;был открыт.&lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Windows.Window.Closed&gt; event is raised.</source>
          <target state="translated">- &lt;xref:System.Windows.Window.Closed&gt;События.&lt;/xref:System.Windows.Window.Closed&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Unmanaged resources created by the &lt;xref:System.Windows.Window&gt; are disposed.</source>
          <target state="translated">-Неуправляемые ресурсы, созданные &lt;xref:System.Windows.Window&gt;удаляются.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If &lt;xref:System.Windows.Window.ShowDialog%2A&gt; was called to show the &lt;xref:System.Windows.Window&gt;, &lt;xref:System.Windows.Window.ShowDialog%2A&gt; returns.</source>
          <target state="translated">-Если &lt;xref:System.Windows.Window.ShowDialog%2A&gt;был вызван для отображения &lt;xref:System.Windows.Window&gt;, &lt;xref:System.Windows.Window.ShowDialog%2A&gt;возвращает.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window.ShowDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Closing a &lt;xref:System.Windows.Window&gt; causes any windows that it owns to be closed.</source>
          <target state="translated">Закрытие &lt;xref:System.Windows.Window&gt;предписывает принадлежащих ему будет закрыта.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, closing a &lt;xref:System.Windows.Window&gt; may cause an application to stop running depending on how the &lt;xref:System.Windows.Application.ShutdownMode%2A?displayProperty=fullName&gt; property is set.</source>
          <target state="translated">Кроме того, закрытие &lt;xref:System.Windows.Window&gt;может привести к остановке выполнения в зависимости от того как приложение &lt;xref:System.Windows.Application.ShutdownMode%2A?displayProperty=fullName&gt;свойству.&lt;/xref:System.Windows.Application.ShutdownMode%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method cannot be called when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек этот метод нельзя вызывать, когда окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Occurs when the window is about to close.</source>
          <target state="translated">Происходит при закрытии окна.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once this event is raised, a window cannot be prevented from closing.</source>
          <target state="translated">После данного события, не может быть закрытие окна предотвратить.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.UIElement.Visibility<bpt id="p1">*</bpt>&gt; is set, or &lt;xref:System.Windows.Window.Show<ept id="p1">*</ept>&gt;, &lt;xref:System.Windows.Window.ShowDialog<bpt id="p2">*</bpt>&gt;, or &lt;xref:System.Windows.Window.Hide<ept id="p2">*</ept>&gt; is called while a window is closing.</source>
          <target state="translated">&lt;&gt;<bpt id="p1">*</bpt>настроек имеет значение, или &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>настроек, &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>настроек, или &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>настроек вызывается во время закрытия окна.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Occurs directly after &lt;xref:System.Windows.Window.Close*&gt; is called, and can be handled to cancel window closure.</source>
          <target state="translated">Происходит непосредственно после &lt;xref:System.Windows.Window.Close*&gt;вызывается и может быть использован для отмены закрытия окна.&lt;/xref:System.Windows.Window.Close*&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Closing can be handled to detect when a window is being closed (for example, when &lt;xref:System.Windows.Window.Close%2A&gt; is called).</source>
          <target state="translated">Закрытие могут обрабатываться для обнаружения при закрытии окна (например, в том случае, когда &lt;xref:System.Windows.Window.Close%2A&gt;вызывается).&lt;/xref:System.Windows.Window.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, Closing can be used to prevent a window from closing.</source>
          <target state="translated">Кроме того закрытия можно использовать для предотвращения закрытия окна.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent a window from closing, you can set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.ComponentModel.CancelEventArgs&gt; argument to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Для предотвращения закрытия окна, можно задать &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;Свойства &lt;xref:System.ComponentModel.CancelEventArgs&gt;аргумент <ph id="ph1">`true`</ph>.&lt;/xref:System.ComponentModel.CancelEventArgs&gt; &lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Closing event is raised when &lt;xref:System.Windows.Window.Close%2A&gt; is called, if a window's Close button is clicked, or if the user presses ALT+F4.</source>
          <target state="translated">Событие закрытия при &lt;xref:System.Windows.Window.Close%2A&gt;вызывается, если щелкнуть кнопку закрытия окна или при нажатии клавиш ALT + F4.&lt;/xref:System.Windows.Window.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an owned window was opened by its owner window using &lt;xref:System.Windows.Window.Show%2A&gt;, and the owner window is closed, the owned window's Closing event is not raised.</source>
          <target state="translated">Если собственное окно был открыт с помощью окна его владельца &lt;xref:System.Windows.Window.Show%2A&gt;и закрытии окна-владельца, не возникает событие Closing собственное окно.&lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the owner of a window is closed (see &lt;xref:System.Windows.Window.Owner%2A&gt;), Closing is not raised on the owned window.</source>
          <target state="translated">Если владелец окна закрывается (см. &lt;xref:System.Windows.Window.Owner%2A&gt;), закрывающая не возникает на собственное окно.&lt;/xref:System.Windows.Window.Owner%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called, the Closing event for each window is raised.</source>
          <target state="translated">Если &lt;xref:System.Windows.Application.Shutdown%2A&gt;вызывается событие Closing для каждого окна вызывается событие.&lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if Closing is canceled, cancellation is ignored.</source>
          <target state="translated">При отмене закрытия отмены учитывается.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a session ends because a user logs off or shuts down, Closing is not raised; handle &lt;xref:System.Windows.Application.SessionEnding&gt; to implement code that cancels application closure.</source>
          <target state="translated">При завершении сеанса, так как пользователь выходит из системы или завершает работу, не возникает закрытия; обрабатывать &lt;xref:System.Windows.Application.SessionEnding&gt;реализовать код, который отменяет закрытия приложения.&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to reinstantiate the window each time you show it, you can handle the Closing event, cancel it, and call the &lt;xref:System.Windows.Window.Hide%2A&gt; method.</source>
          <target state="translated">Если вы хотите показать или скрыть окно несколько раз в течение жизненного цикла приложения и не требуется при каждом ее видимой, повторного создания экземпляра окна, можно обработать событие Closing, отменить его и вызвать &lt;xref:System.Windows.Window.Hide%2A&gt;метод.&lt;/xref:System.Windows.Window.Hide%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, you can call &lt;xref:System.Windows.Window.Show%2A&gt; on the same instance to reopen it.</source>
          <target state="translated">Затем можно вызвать &lt;xref:System.Windows.Window.Show%2A&gt;в том же экземпляре, чтобы снова открыть его.&lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.UIElement.Visibility<bpt id="p1">*</bpt>&gt; is set, or &lt;xref:System.Windows.Window.Show<ept id="p1">*</ept>&gt;, &lt;xref:System.Windows.Window.ShowDialog<bpt id="p2">*</bpt>&gt;, or &lt;xref:System.Windows.Window.Close<ept id="p2">*</ept>&gt; is called while a window is closing.</source>
          <target state="translated">&lt;&gt;<bpt id="p1">*</bpt>настроек имеет значение, или &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>настроек, &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>настроек, или &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>настроек вызывается во время закрытия окна.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Occurs after a window's content has been rendered.</source>
          <target state="translated">Происходит после завершения отображения содержимого окна.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the window has no content, this event is not raised.</source>
          <target state="translated">Если окно не имеет содержимого, это событие не возникает.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Occurs when a window becomes a background window.</source>
          <target state="translated">Происходит при выведении окна на задний план.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>A window is deactivated (becomes a background window) when:      -   A user switches to another window in the current application.</source>
          <target state="translated">Окно деактивируется (попадает на задний план) при:-пользователь переключается на другое окно в текущем приложении.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A user switches to the window in another application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">-Пользователь переключается на окно в другом приложении, с помощью клавиш ALT + TAB или с помощью диспетчера задач.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A user clicks the taskbar button for a window in another application.</source>
          <target state="translated">-Пользователь нажимает кнопку панели задач для окна в другое приложение.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows that need to detect when they become deactivated by handling the Deactivated event.</source>
          <target state="translated">Windows, которые необходимо обнаружить, когда они становятся деактивированный обработки событий деактивирован.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a window is first deactivated, it may be reactivated and deactivated many times during its lifetime.</source>
          <target state="translated">После деактивации окна его повторной активации и деактивации множество раз за время существования.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application's behavior or state depends on its activation state, it can inspect &lt;xref:System.Windows.Window.IsActive%2A&gt; to determine which activation state it's in.</source>
          <target state="translated">Если поведение или состояние приложения зависит от состояния его активации, его можно проверить, &lt;xref:System.Windows.Window.IsActive%2A&gt;Чтобы определить, какое состояние активации его с in.&lt;/xref:System.Windows.Window.IsActive%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can also be &lt;xref:System.Windows.Application.Deactivated&gt;.</source>
          <target state="translated">Приложение также может быть &lt;xref:System.Windows.Application.Deactivated&gt;.&lt;/xref:System.Windows.Application.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Gets or sets the dialog result value, which is the value that is returned from the &lt;xref:System.Windows.Window.ShowDialog*&gt; method.</source>
          <target state="translated">Возвращает или задает значение результат диалогового окна, которое является значением, которое возвращается из &lt;xref:System.Windows.Window.ShowDialog*&gt;метод.&lt;/xref:System.Windows.Window.ShowDialog*&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>DialogResult can be used from the code that showed a dialog box to determine whether a user accepted (<ph id="ph1">`true`</ph>) or canceled (<ph id="ph2">`false`</ph>) the dialog box.</source>
          <target state="translated">DialogResult можно использовать из кода, в который было показано диалоговое окно для определения того, приняты ли пользователь (<ph id="ph1">`true`</ph>) или отменена (<ph id="ph2">`false`</ph>) диалоговое окно.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a dialog box was accepted, this signifies to the code that opened the dialog box to retrieve the data that was collected by the user and process it.</source>
          <target state="translated">Если диалоговое окно было принято, это означает для кода, который открывается диалоговое окно для получения данных, собранных с пользователем и его.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a dialog box was canceled, however, this signifies that calling code should stop any further processing.</source>
          <target state="translated">Если диалоговое окно было отменено, однако это означает, что вызывающему коду следует прекратить дальнейшую обработку.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, a dialog box is canceled when a user does one of the following:      -   PressesALT+F4.</source>
          <target state="translated">По умолчанию диалоговое окно отменяется, когда пользователь выполняет одно из следующих:-PressesALT + F4.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button.</source>
          <target state="translated">-Щелкает <bpt id="p1">**</bpt>закрыть<ept id="p1">**</ept> кнопки.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Selects <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> from the System menu.</source>
          <target state="translated">-Выбор <bpt id="p1">**</bpt>закрыть<ept id="p1">**</ept> в системном меню.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>In all of these cases, DialogResult is <ph id="ph1">`false`</ph> by default.</source>
          <target state="translated">Во всех этих случаях DialogResult — <ph id="ph1">`false`</ph> по умолчанию.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>A dialog box typically provides a special button to cancel a dialog, which is the button whose &lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt; property is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Диалоговое окно обычно предоставляет отдельную кнопку, чтобы закрыть диалоговое окно, который является кнопкой которого &lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt;свойству <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Controls.Button.IsCancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>A button configured this way will automatically close a window when either it is pressed, or when the ESC key is pressed.</source>
          <target state="translated">Кнопка, настроенная таким образом автоматически закроется окно при нажатии или при нажатии клавиши ESC.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either of these cases, DialogResult remains <ph id="ph1">`false`</ph>.</source>
          <target state="translated">В любом из этих случаев, остается DialogResult <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>A dialog box also typically provides an accept button, which is the button whose &lt;xref:System.Windows.Controls.Button.IsDefault%2A&gt; property is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Диалоговое окно также обычно предоставляет кнопки «принять», который является кнопкой которого &lt;xref:System.Windows.Controls.Button.IsDefault%2A&gt;свойству <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Controls.Button.IsDefault%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>A button configured this way will raise its &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event when either it or the ENTER key is pressed.</source>
          <target state="translated">Кнопка, настроенная таким образом будет вызывать его &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;событие при нажатии ее или клавишу ВВОД.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it won't automatically close the dialog box, nor will it set DialogResult to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Тем не менее, он не будет автоматически закрыто диалоговым окном, нельзя будет задать DialogResult <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>You need to manually write this code, usually from the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event handler for the default button.</source>
          <target state="translated">Необходимо вручную записать этот код, обычно из &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;обработчик событий для кнопки по умолчанию.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>DialogResult is <ph id="ph1">`null`</ph> when the dialog box is shown but neither accepted nor canceled.</source>
          <target state="translated">DialogResult — <ph id="ph1">`null`</ph> при отображении диалогового окна но принятые ни отменена.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a dialog box closes, you can get the dialog result from the value returned by &lt;xref:System.Windows.Window.ShowDialog%2A&gt; method, or by inspecting the DialogResult property.</source>
          <target state="translated">После закрытия диалогового окна можно получить результат диалогового окна из значения, возвращенного &lt;xref:System.Windows.Window.ShowDialog%2A&gt;метод, или путем проверки свойства DialogResult.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>DialogResult can only be set when a &lt;xref:System.Windows.Window&gt; is opened by calling its &lt;xref:System.Windows.Window.ShowDialog%2A&gt; method.</source>
          <target state="translated">DialogResult можно задать только при &lt;xref:System.Windows.Window&gt;открытия путем вызова его &lt;xref:System.Windows.Window.ShowDialog%2A&gt;метод.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Nullable%601<ph id="ph2">&amp;gt;</ph> value of type &lt;xref:System.Boolean&gt;.</source>
          <target state="translated">Объект <ph id="ph1">&amp;lt;</ph>xref:System.Nullable%601<ph id="ph2">&amp;gt;</ph> значение типа &lt;xref:System.Boolean&gt;.&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>DialogResult is set before a window is opened by calling &lt;xref:System.Windows.Window.ShowDialog<bpt id="p1">*</bpt>&gt;.       -or-       DialogResult is set on a window that is opened by calling &lt;xref:System.Windows.Window.Show<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">Имеет значение DialogResult до открытия окна путем вызова &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>настроек.       - или - имеет значение DialogResult в окне, которое открывается вызовом &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>настроек.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Occurs after the DPI of the screen on which the Window is displayed changes.</source>
          <target state="translated">Происходит после изменения отображения разрешение экрана, на котором находится окна.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.RoutedEvent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for when the DPI of the screen the Window is on changes.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.RoutedEvent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> когда DPI экрана окна находится на изменения.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</source>
          <target state="translated">Разрешает окну перетаскивать мышью с нажатой левой кнопкой над открытой клиентской области окна.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The left mouse button must be down when DragMove is called.</source>
          <target state="translated">Левая кнопка мыши должна быть отключена, при вызове DragMove.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to detect when the left mouse button is pressed is to handle the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event.</source>
          <target state="translated">Является одним из способов определить при нажатии левой кнопки мыши для обработки &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;событий.&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>When DragMove is called, the left mouse button must be depressed over an exposed area of the window's client area.</source>
          <target state="translated">При вызове DragMove необходимо нажата левая кнопка мыши над открытой клиентской области окна.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method cannot be called when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек этот метод нельзя вызывать, когда окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The left mouse button is not down.</source>
          <target state="translated">Левая кнопка мыши не нажата.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Returns a reference to the <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that hosts the content tree within which the dependency object is located.</source>
          <target state="translated">Возвращает ссылку на <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объект, содержащий дерево содержимого, в котором расположен объект зависимостей.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The dependency object.</source>
          <target state="translated">Объект зависимости.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> reference to the host window.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ссылку на главное окно.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dependencyObject&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;dependencyObject&lt;/code&gt;</ph>имеет значение null.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Makes a window invisible.</source>
          <target state="translated">Делает окно невидимым.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>A window is not closed when it is hidden, and neither the &lt;xref:System.Windows.Window.Closing&gt; nor &lt;xref:System.Windows.Window.Closed&gt; event is raised.</source>
          <target state="translated">Окно не закрывается после скрыта и ни &lt;xref:System.Windows.Window.Closing&gt;, ни &lt;xref:System.Windows.Window.Closed&gt;события.&lt;/xref:System.Windows.Window.Closed&gt; &lt;/xref:System.Windows.Window.Closing&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the window's &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property is set to &lt;xref:System.Windows.Visibility?displayProperty=fullName&gt;.</source>
          <target state="translated">Вместо этого окна &lt;xref:System.Windows.UIElement.Visibility%2A&gt;свойству &lt;xref:System.Windows.Visibility?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Visibility?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a window is the application's &lt;xref:System.Windows.Application.MainWindow%2A&gt; and the application's &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is &lt;xref:System.Windows.ShutdownMode&gt;, the application does not shut down.</source>
          <target state="translated">Если окно приложения &lt;xref:System.Windows.Application.MainWindow%2A&gt;и приложения &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;— &lt;xref:System.Windows.ShutdownMode&gt;, приложение не завершает работу.&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application.MainWindow%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise, the application does not shut down if a window is the only window and the application's shutdown mode is &lt;xref:System.Windows.ShutdownMode&gt;.</source>
          <target state="translated">Аналогичным образом приложения не завершена, если окно только окно и режим завершения работы приложения &lt;xref:System.Windows.ShutdownMode&gt;.&lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to re-instantiate the window each time you show it, you can handle the &lt;xref:System.Windows.Window.Closing&gt; event, cancel it, and call the Hide method.</source>
          <target state="translated">Если нужно показать или скрыть окно несколько раз в течение жизненного цикла приложения, и вы не хотите повторно создать экземпляр окна при каждом ее видимой, может обрабатывать &lt;xref:System.Windows.Window.Closing&gt;события, отменить его и вызвать метод скрыть.&lt;/xref:System.Windows.Window.Closing&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, you can call &lt;xref:System.Windows.Window.Show%2A&gt; on the same instance to re-open it.</source>
          <target state="translated">Затем можно вызвать &lt;xref:System.Windows.Window.Show%2A&gt;в том же экземпляре, чтобы повторно открыть его.&lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Hide is called on a window that is closing (<bpt id="p1">&lt;xref href="System.Windows.Window.Closing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) or has been closed (<bpt id="p2">&lt;xref href="System.Windows.Window.Closed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Скрыть вызывается в окне, которое закрывает (<bpt id="p1">&lt;xref href="System.Windows.Window.Closing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) или был закрыт (<bpt id="p2">&lt;xref href="System.Windows.Window.Closed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Gets or sets a window's icon.</source>
          <target state="translated">Возвращает или задает значок окна.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> standalone applications have two types of icons:      -   One assembly icon, which is specified by using the <ph id="ph2">`&lt;ApplicationIcon&gt;`</ph> property in the application's project build file.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>Автономные приложения имеют два вида значков:-одна сборка значок, который задается с помощью <ph id="ph2">`&lt;ApplicationIcon&gt;`</ph> файл сборки свойство в проекте приложения.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>This icon is used as the desktop icon for an assembly.</source>
          <target state="translated">Этот значок используется на рабочем столе для сборки.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  When debugging in Visual Studio, your icon may not appear due to the hosting process.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек при отладке в Visual Studio значка может отсутствовать из-за процесса размещения.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you run the executable, the icon will appear.</source>
          <target state="translated">При запуске исполняемого файла, то появляется значок.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Hosting Process (vshost.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>размещение процесс (vshost.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   One icon per window that is specified by setting Icon.</source>
          <target state="translated">— Один значок каждого окна, который задается параметром значок.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each window, this icon is used in its title bar, its task bar button, and in its ALT-TAB application selection list entry.</source>
          <target state="translated">Для каждого окна этот значок используется в строке заголовка кнопке панели задач и его элемент списка выбора приложения ALT TAB.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> window always displays an icon.</source>
          <target state="translated">Объект <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> окно всегда отображается значок.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>When one is not provided by setting Icon, <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> chooses an icon to display based on the following rules:      1.</source>
          <target state="translated">Если значение не указано, задав значок <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> выбирает значок для отображения на основе следующих правил: 1.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the assembly icon, if specified.</source>
          <target state="translated">Используйте значок сборки, если указан.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the assembly icon is not specified, use the default <ph id="ph1">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph> icon.</source>
          <target state="translated">Если значок сборки не указан, используется значение по умолчанию <ph id="ph1">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph> значок.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use Icon to specify a custom window icon, you can restore the default application icon by setting Icon to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Если значок позволяет указать значок пользовательского окна, можно восстановить значок приложения по умолчанию, установив значок <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>A single icon can be used in a variety of ways in <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph>, including being shown in the title bar of a window, the task bar for a window, the ALT+TAB file selection list.</source>
          <target state="translated">Один значок может использоваться различными способами в <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph>, включая показывается в строке заголовка окна, на панели задач для окна, список выбора файлов ALT + TAB.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these shows the icon using a different size; a 16x16 pixel icon is displayed in the title bar of a window and in the task bar, while a 32x32 pixel icon is displayed in the ALT+TAB file selection list.</source>
          <target state="translated">Каждый из них будет отображаться значок разного размера; значок 16 x 16 пикселей отображается в строке заголовка окна и на панели задач, пока значок 32 x 32 пикселя отображается в списке выбора файлов ALT + TAB.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some applications, like <ph id="ph1">[!INCLUDE[TLA#tla_winexpl](~/add/includes/tlasharptla-winexpl-md.md)]</ph>, provide a <bpt id="p1">**</bpt>View<ept id="p1">**</ept> menu that allows you to choose the size of the icon you'd like to view.</source>
          <target state="translated">Некоторые приложения, например <ph id="ph1">[!INCLUDE[TLA#tla_winexpl](~/add/includes/tlasharptla-winexpl-md.md)]</ph>, предоставляют <bpt id="p1">**</bpt>представление<ept id="p1">**</ept> меню, в котором можно выбрать размер значка, который вы хотите просмотреть.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cater to the various display sizes, an icon file is composed of one or more actual icons where each one represents a version of the icon that targets a specific size and color depth.</source>
          <target state="translated">Чтобы ориентироваться на различные размеры, файл значка состоит из одного или нескольких реальных значков, каждый из которых представляет версии значка, который предназначен для определенной глубины размер и цвет.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, one icon may only have a single 16x16 pixel icon with 16 colors, while another may contain 16x16 pixel and 32x32 pixel icons with both 16 colors and 256 colors.</source>
          <target state="translated">Например один значок может иметь только один значок 16 x 16 точек с 16 цветами, а другой — 16 x 16 точек и 32 x 32 пикселя значков с 16 цветами и 256 цветов.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>If icons for all possible sizes and color depths exist within an icon file, &lt;xref:System.Windows.Window&gt; will use the appropriate icon.</source>
          <target state="translated">Если существуют значки всех возможных размеров и цветов в файл значка &lt;xref:System.Windows.Window&gt;будет использовать соответствующий значок.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an icon file contains only a subset of all the possible icons, &lt;xref:System.Windows.Window&gt; uses the next most appropriate icon in order of decreasing sizes and color depth.</source>
          <target state="translated">Если файл значка содержит только подмножество всех возможных значков &lt;xref:System.Windows.Window&gt;использует Далее наиболее соответствующий значок в порядке уменьшения размеров и цветов.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is that an icon will always be used by &lt;xref:System.Windows.Window&gt;, although the icon used may not target the required size and color depth.</source>
          <target state="translated">Результатом является то, что значок будет всегда использоваться &lt;xref:System.Windows.Window&gt;, несмотря на то, что значок, используемый целевыми могут быть не требуется глубину размер и цвет.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a 16x16 pixel icon with 16 colors may be used for display as a 32x32 pixel icon with 256 colors.</source>
          <target state="translated">Значок 16 x 16 точек с 16 цветами может использоваться для отображения как значок 32 x 32 точки с 256 цветами.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can cause undesirable visual effects, such as pixilation, but may be avoided by creating icons for all targeted sizes and color depths.</source>
          <target state="translated">Это может вызвать нежелательные визуальные эффекты, такие как пиксиляцию, но можно избежать, создавая значки всех целевых размеров и цветов.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowIcon"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.IconProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowIcon"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.IconProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.IconProperty&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Media.ImageSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the icon.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.ImageSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Представляющий значок.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.Icon*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.Icon*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.Icon*&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the window is active.</source>
          <target state="translated">Возвращает значение, указывающее, активна ли окно.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>An active window is the user's current foreground window and has the focus, which is signified by the active appearance of the title bar.</source>
          <target state="translated">Активное окно пользователя текущее окно переднего плана и имеет фокус, принятое active внешний вид заголовка окна.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>An active window will also be the top-most of all top-level windows that don't explicitly set the &lt;xref:System.Windows.Window.Topmost%2A&gt; property.</source>
          <target state="translated">Активного окна также будет самый верхний всех окон верхнего уровня, в которых не задано явно &lt;xref:System.Windows.Window.Topmost%2A&gt;свойство.&lt;/xref:System.Windows.Window.Topmost%2A&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowIsActive"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.IsActiveProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowIsActive"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.IsActiveProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.IsActiveProperty&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the window is active; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если окно является активным; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.IsActive*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.IsActive*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.IsActive*&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Gets or sets the position of the window's left edge, in relation to the desktop.</source>
          <target state="translated">Возвращает или задает позицию левого края окна относительно рабочего стола.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Windows.Window&gt; is maximized or minimized, this value represents the left edge of the restore point for the &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">Если &lt;xref:System.Windows.Window&gt;развернуто или развернуто, это значение соответствует левого края восстановления точки для &lt;xref:System.Windows.Window&gt;.&lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set through a style.</source>
          <target state="translated">Это свойство нельзя задать с помощью стиля.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a value, Left is set to the system default value.</source>
          <target state="translated">Если значение не указано, то значение по умолчанию имеет значение слева.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify the system default value by setting Left to &lt;xref:System.Double.NaN&gt;.</source>
          <target state="translated">Можно также указать значение по умолчанию, задав влево, чтобы &lt;xref:System.Double.NaN&gt;.&lt;/xref:System.Double.NaN&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither &lt;xref:System.Double.NegativeInfinity&gt; nor &lt;xref:System.Double.PositiveInfinity&gt; is a valid value for Left.</source>
          <target state="translated">Ни &lt;xref:System.Double.NegativeInfinity&gt;, ни &lt;xref:System.Double.PositiveInfinity&gt;является допустимым значением для слева.&lt;/xref:System.Double.PositiveInfinity&gt; &lt;/xref:System.Double.NegativeInfinity&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowLeft"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.LeftProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowLeft"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.LeftProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.LeftProperty&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The position of the window's left edge, in logical units (1/96th of an inch).</source>
          <target state="translated">Положение окна левого края в логических единицах (1/96 дюйма).</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.Left*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.Left*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.Left*&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Occurs when the window's location changes.</source>
          <target state="translated">Происходит при изменении положения окна.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>A window's location changes when:      -   A user moves a window by dragging it with the window's title bar.</source>
          <target state="translated">При изменении местоположения окна:-пользователь передвигает окно, перетащив заголовок окна.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A window is moved after &lt;xref:System.Windows.Window.DragMove%2A&gt; is called.</source>
          <target state="translated">-Поменять окна &lt;xref:System.Windows.Window.DragMove%2A&gt;называется.&lt;/xref:System.Windows.Window.DragMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Either the &lt;xref:System.Windows.Window.Left%2A&gt; or &lt;xref:System.Windows.Window.Top%2A&gt; property is set programmatically.</source>
          <target state="translated">-Либо &lt;xref:System.Windows.Window.Left%2A&gt;или &lt;xref:System.Windows.Window.Top%2A&gt;задано программным путем.&lt;/xref:System.Windows.Window.Top%2A&gt; &lt;/xref:System.Windows.Window.Left%2A&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The <bpt id="p1">**</bpt>Move<ept id="p1">**</ept> menu item of a window's System menu is chosen.</source>
          <target state="translated">- <bpt id="p1">**</bpt>Переместить<ept id="p1">**</ept> выбранного пункта меню окна системного меню.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Windows.Window.WindowState%2A&gt; property is changed.</source>
          <target state="translated">- &lt;xref:System.Windows.Window.WindowState%2A&gt;Изменить свойство.&lt;/xref:System.Windows.Window.WindowState%2A&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Gets an enumerator for a window's logical child elements.</source>
          <target state="translated">Возвращает перечислитель для логических дочерних окон элементов.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; a window's logical child elements.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;Окна логических дочерних элементов.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Override this method to measure the size of a window.</source>
          <target state="translated">Переопределите этот метод для определения размера окна.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>MeasureOverride is not called when the &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property has a value of &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">MeasureOverride не вызывается, когда &lt;xref:System.Windows.UIElement.Visibility%2A&gt;свойство имеет значение &lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property is either &lt;xref:System.Windows.Visibility&gt; or &lt;xref:System.Windows.Visibility&gt;, MeasureOverride is called.</source>
          <target state="translated">Если значение &lt;xref:System.Windows.UIElement.Visibility%2A&gt;равно либо &lt;xref:System.Windows.Visibility&gt;или &lt;xref:System.Windows.Visibility&gt;, называется MeasureOverride.&lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When either &lt;xref:System.Windows.Window.Show%2A&gt; or &lt;xref:System.Windows.Window.ShowDialog%2A&gt; are called, the &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property of a &lt;xref:System.Windows.Window&gt; is set to &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек при &lt;xref:System.Windows.Window.Show%2A&gt;или &lt;xref:System.Windows.Window.ShowDialog%2A&gt;вызываются &lt;xref:System.Windows.UIElement.Visibility%2A&gt;свойство &lt;xref:System.Windows.Window&gt;имеет значение &lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt; &lt;/xref:System.Windows.Window.ShowDialog%2A&gt; &lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that reflects the available size that this window can give to the child.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Size"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , которое отражает доступный размер, который в этом окне можно предоставить дочернему элементу.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Infinity can be given as a value to indicate that the window will size to whatever content is available.</source>
          <target state="translated">Можно задать бесконечное значение для указания, что окно будет масштабироваться любым содержимым.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Size"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , которое отражает размер, который определяет это окно требуется во время структурирования, основываясь на вычисления размеров дочерних элементов.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Window.Activated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.Window.Activated"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnActivated raises the &lt;xref:System.Windows.Window.Activated&gt; event.</source>
          <target state="translated">Вызывает OnActivated &lt;xref:System.Windows.Window.Activated&gt;событий.&lt;/xref:System.Windows.Window.Activated&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Window&gt; may override OnActivated.</source>
          <target state="translated">Тип, производный от &lt;xref:System.Windows.Window&gt;могут переопределять OnActivated.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnActivated on the base class if &lt;xref:System.Windows.Window.Activated&gt; needs to be raised.</source>
          <target state="translated">Переопределенный метод должен вызвать метод OnActivated базового класса, если &lt;xref:System.Windows.Window.Activated&gt;должен вызываться.&lt;/xref:System.Windows.Window.Activated&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;, Содержащий данные события.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Window.Closed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.Window.Closed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnClosed raises the &lt;xref:System.Windows.Window.Closed&gt; event.</source>
          <target state="translated">Вызывает OnClosed &lt;xref:System.Windows.Window.Closed&gt;событий.&lt;/xref:System.Windows.Window.Closed&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Window&gt; may override OnClosed.</source>
          <target state="translated">Тип, производный от &lt;xref:System.Windows.Window&gt;могут переопределять OnClosed.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnClosed on the base class if &lt;xref:System.Windows.Window.Closed&gt; needs to be raised.</source>
          <target state="translated">Переопределенный метод необходимо вызвать OnClosed базового класса, если &lt;xref:System.Windows.Window.Closed&gt;должен вызываться.&lt;/xref:System.Windows.Window.Closed&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;, Содержащий данные события.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Window.Closing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.Window.Closing"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnClosing raises the &lt;xref:System.Windows.Window.Closing&gt; event.</source>
          <target state="translated">Вызывает OnClosing &lt;xref:System.Windows.Window.Closing&gt;событий.&lt;/xref:System.Windows.Window.Closing&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Window&gt; may override OnClosing.</source>
          <target state="translated">Тип, производный от &lt;xref:System.Windows.Window&gt;могут переопределять OnClosing.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnClosing on the base class if &lt;xref:System.Windows.Window.Closing&gt; needs to be raised.</source>
          <target state="translated">Переопределенный метод должен вызвать метод OnClosing базового класса, если &lt;xref:System.Windows.Window.Closing&gt;должен вызываться.&lt;/xref:System.Windows.Window.Closing&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.CancelEventArgs&gt; that contains the event data.</source>
          <target state="translated">Объект &lt;xref:System.ComponentModel.CancelEventArgs&gt;, содержащий данные события.&lt;/xref:System.ComponentModel.CancelEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Called when the &lt;xref:System.Windows.Controls.ContentControl.Content*&gt; property changes.</source>
          <target state="translated">Вызывается, когда &lt;xref:System.Windows.Controls.ContentControl.Content*&gt;изменения свойств.&lt;/xref:System.Windows.Controls.ContentControl.Content*&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A reference to the root of the old content tree.</source>
          <target state="translated">Ссылка на корневой элемент старого дерева содержимого.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A reference to the root of the new content tree.</source>
          <target state="translated">Ссылка на корневой элемент нового дерева содержимого.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Window.ContentRendered"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.Window.ContentRendered"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnContentRendered raises the &lt;xref:System.Windows.Window.ContentRendered&gt; event.</source>
          <target state="translated">Вызывает OnContentRendered &lt;xref:System.Windows.Window.ContentRendered&gt;событий.&lt;/xref:System.Windows.Window.ContentRendered&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Window&gt; may override OnContentRendered.</source>
          <target state="translated">Тип, производный от &lt;xref:System.Windows.Window&gt;могут переопределять OnContentRendered.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnContentRendered on the base class if &lt;xref:System.Windows.Window.ContentRendered&gt; needs to be raised.</source>
          <target state="translated">Переопределенный метод должен вызвать метод OnContentRendered базового класса, если &lt;xref:System.Windows.Window.ContentRendered&gt;должен вызываться.&lt;/xref:System.Windows.Window.ContentRendered&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;, Содержащий данные события.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Creates and returns a <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.WindowAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for this <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Создает и возвращает <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.WindowAutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> для этого объекта <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A&gt;.</source>
          <target state="translated">Этот метод переопределяет &lt;xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A&gt;.&lt;/xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.WindowAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for this <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.WindowAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for this <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Window.Deactivated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.Window.Deactivated"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnDeactivated raises the &lt;xref:System.Windows.Window.Deactivated&gt; event.</source>
          <target state="translated">Вызывает OnDeactivated &lt;xref:System.Windows.Window.Deactivated&gt;событий.&lt;/xref:System.Windows.Window.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Window&gt; may override OnDeactivated.</source>
          <target state="translated">Тип, производный от &lt;xref:System.Windows.Window&gt;могут переопределять OnDeactivated.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnDeactivated on the base class if &lt;xref:System.Windows.Window.Deactivated&gt; needs to be raised.</source>
          <target state="translated">Переопределенный метод необходимо вызвать OnDeactivated базового класса, если &lt;xref:System.Windows.Window.Deactivated&gt;должен вызываться.&lt;/xref:System.Windows.Window.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;, Содержащий данные события.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Called when the DPI at which this window is rendered changes.</source>
          <target state="translated">Вызывается, когда DPI, когда это окно отображается изменения.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The previous DPI scale setting.</source>
          <target state="translated">Установка предыдущих точек на ДЮЙМ масштаб.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The new DPI scale setting.</source>
          <target state="translated">Новый параметр DPI масштаб.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Window.LocationChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.Window.LocationChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnLocationChanged raises the &lt;xref:System.Windows.Window.LocationChanged&gt; event.</source>
          <target state="translated">Вызывает OnLocationChanged &lt;xref:System.Windows.Window.LocationChanged&gt;событий.&lt;/xref:System.Windows.Window.LocationChanged&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Window&gt; may override OnLocationChanged.</source>
          <target state="translated">Тип, производный от &lt;xref:System.Windows.Window&gt;могут переопределять OnLocationChanged.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnLocationChanged on the base class if &lt;xref:System.Windows.Window.LocationChanged&gt; needs to be raised.</source>
          <target state="translated">Переопределенный метод должен вызвать метод OnLocationChanged базового класса, если &lt;xref:System.Windows.Window.LocationChanged&gt;должен вызываться.&lt;/xref:System.Windows.Window.LocationChanged&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;, Содержащий данные события.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Вызывается, когда <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событием.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation does not change the handled state (the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property) of the &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt; event data.</source>
          <target state="translated">Эта реализация не изменяет состояние обработки ( &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;свойство) из &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;данные события.&lt;/xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt; &lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Данные для события.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Window.SourceInitialized"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.Window.SourceInitialized"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnSourceInitialized raises the &lt;xref:System.Windows.Window.SourceInitialized&gt; event.</source>
          <target state="translated">Вызывает OnSourceInitialized &lt;xref:System.Windows.Window.SourceInitialized&gt;событий.&lt;/xref:System.Windows.Window.SourceInitialized&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Window&gt; may override OnSourceInitialized.</source>
          <target state="translated">Тип, производный от &lt;xref:System.Windows.Window&gt;могут переопределять OnSourceInitialized.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnSourceInitialized on the base class if &lt;xref:System.Windows.Window.SourceInitialized&gt; needs to be raised.</source>
          <target state="translated">Переопределенный метод должен вызвать метод OnSourceInitialized базового класса, если &lt;xref:System.Windows.Window.SourceInitialized&gt;должен вызываться.&lt;/xref:System.Windows.Window.SourceInitialized&gt;</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;, Содержащий данные события.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Window.StateChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.Window.StateChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnStateChanged raises the &lt;xref:System.Windows.Window.StateChanged&gt; event.</source>
          <target state="translated">Вызывает OnStateChanged &lt;xref:System.Windows.Window.StateChanged&gt;событий.&lt;/xref:System.Windows.Window.StateChanged&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type that derives from &lt;xref:System.Windows.Window&gt; may override OnStateChanged.</source>
          <target state="translated">Тип, производный от &lt;xref:System.Windows.Window&gt;могут переопределять OnStateChanged.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overridden method must call OnStateChanged on the base class if &lt;xref:System.Windows.Window.StateChanged&gt; needs to be raised.</source>
          <target state="translated">Переопределенный метод должен вызвать метод OnStateChanged базового класса, если &lt;xref:System.Windows.Window.StateChanged&gt;должен вызываться.&lt;/xref:System.Windows.Window.StateChanged&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;, Содержащий данные события.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Called when the parent of the window is changed.</source>
          <target state="translated">Вызывается при изменении родительского окна.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The previous parent.</source>
          <target state="translated">Предыдущий родительский элемент.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Set to null if the <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> did not have a previous parent.</source>
          <target state="translated">Значение null, если <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> отсутствует предыдущий родительский.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Gets a collection of windows for which this window is the owner.</source>
          <target state="translated">Возвращает коллекцию окон, владельцем которых является в этом окне.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>An owned window is one whose &lt;xref:System.Windows.Window.Owner%2A&gt; property is set with a reference to another window, which is known as the owner window.</source>
          <target state="translated">Собственное окно — это которого &lt;xref:System.Windows.Window.Owner%2A&gt;свойству со ссылкой на другое окно, которая называется окно-владелец.&lt;/xref:System.Windows.Window.Owner%2A&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>To find all the windows that an owner window owns, you can enumerate &lt;xref:System.Windows.WindowCollection&gt; that is returned by the OwnedWindows property.</source>
          <target state="translated">Чтобы найти все окна, которыми владеет окно-владелец, можно перечислить &lt;xref:System.Windows.WindowCollection&gt;, возвращаемого свойством OwnedWindows.&lt;/xref:System.Windows.WindowCollection&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.WindowCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains references to the windows for which this window is the owner.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.WindowCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий ссылки на windows, владельцем которых является в этом окне.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that owns this <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Возвращает или задает <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , которому принадлежит это <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a child window is opened by a parent window by calling &lt;xref:System.Windows.Window.ShowDialog%2A&gt;, an implicit relationship is established between both parent and child window.</source>
          <target state="translated">При открытии дочернего окна родительское окно, вызвав &lt;xref:System.Windows.Window.ShowDialog%2A&gt;, явную связь устанавливается между родительским и дочерним окнами.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>This relationship enforces certain behaviors, including with respect to minimizing, maximizing, and restoring.</source>
          <target state="translated">Эта связь накладывает определенное поведение, в том числе по отношению к минимуму, разворачивания и восстановления.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a child window is created by a parent window by calling &lt;xref:System.Windows.Window.Show%2A&gt;, however, the child window does not have a relationship with the parent window.</source>
          <target state="translated">При создании дочернего окна родительское окно, вызвав &lt;xref:System.Windows.Window.Show%2A&gt;, однако, дочернее окно не имеет связи с родительским окном.&lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that:      -   The child window does not have a reference to the parent window.</source>
          <target state="translated">Это означает, что:-дочернее окно не имеет ссылки на родительском окне.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The behavior of the child window is not dependent on the behavior of the parent window; either window can cover the other, or be minimized, maximized, and restored independently of the other.</source>
          <target state="translated">-Поведение дочернего окна не зависит от поведения родительского окна. либо окна может охватывать другого или свести к минимуму, разворачиваться и восстанавливаться независимо от другого.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow you to create a relationship between a child window and a parent window, &lt;xref:System.Windows.Window&gt; supports the notion of ownership.</source>
          <target state="translated">Чтобы можно было создать связь между дочерним и родительского окна, &lt;xref:System.Windows.Window&gt;поддерживает понятие владения.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ownership is established when the Owner property of a window (the owned window) is set with a reference to another window (the owner window).</source>
          <target state="translated">Если задано свойство «владелец» окна (собственного окна), со ссылкой на другое окно (окно-владелец) установки владельца.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once this relationship is established, the following behaviors are exhibited:      -   If an owner window is minimized, all its owned windows are minimized as well.</source>
          <target state="translated">После установления этой связи проявляется следующее поведение:-Если окно-владелец сворачивается, все его собственные окна также сворачиваются.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If an owned window is minimized, its owner is not minimized.</source>
          <target state="translated">-Если собственное окно сворачивается, его владелец не сводится к минимуму.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If an owner window is maximized, both the owner window and its owned windows are restored.</source>
          <target state="translated">-Если развернуто окно-владелец, окна-владельца и его собственные окна восстанавливаются.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   An owner window can never cover an owned window.</source>
          <target state="translated">-Окно-владелец никогда не может перекрывать собственное окно.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Owned windows that were not opened using &lt;xref:System.Windows.Window.ShowDialog%2A&gt; are not modal.</source>
          <target state="translated">Используемых windows, которые не были открыты с помощью &lt;xref:System.Windows.Window.ShowDialog%2A&gt;не модальное.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can still interact with the owner window.</source>
          <target state="translated">Пользователь по-прежнему могут взаимодействовать с окна-владельца.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If you close an owner window, its owned windows are also closed.</source>
          <target state="translated">-Если закрыть окно-владелец, его собственные окна также будут закрыты.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If an owned window was opened by its owner window using &lt;xref:System.Windows.Window.Show%2A&gt;, and the owner window is closed, the owned window's &lt;xref:System.Windows.Window.Closing&gt; event is not raised.</source>
          <target state="translated">-Если собственное окно был открыт с помощью окна его владельца &lt;xref:System.Windows.Window.Show%2A&gt;и владелец закрытия окна, принадлежащие окна &lt;xref:System.Windows.Window.Closing&gt;событие не происходит.&lt;/xref:System.Windows.Window.Closing&gt; &lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you open a child window by calling &lt;xref:System.Windows.Window.ShowDialog%2A&gt;, you should also set the Owner property of the child window.</source>
          <target state="translated">При открытии дочернего окна, вызвав &lt;xref:System.Windows.Window.ShowDialog%2A&gt;, также следует задать свойство «владелец» дочернего окна.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you don't, then your users won't be able to restore both child window and parent window by pressing the task bar button.</source>
          <target state="translated">Если этого не сделать, пользователи не будет доступной для восстановления дочернее окно и родительское окно, нажав кнопку панели задач.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, pressing the task bar button will yield a list of windows, including both child and parent window, for them to select; only the selected window is restored.</source>
          <target state="translated">Вместо этого нажав кнопку панели задач даст список окон, включая, дочерние и родительские окна для них требуется выделить; восстанавливается только выбранный период.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You should also set the Owner property on a window that that is opened by calling &lt;xref:System.Windows.Window.ShowDialog%2A&gt; to ensure correct behavior with .</source>
          <target state="translated">Настроек <ph id="ph1">[!IMPORTANT]</ph> настроек также следует задать свойство «владелец» в окне, которое открывается путем вызова &lt;xref:System.Windows.Window.ShowDialog%2A&gt;для обеспечения правильного поведения с.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the owner of this <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , представляющий владельца этого <bpt id="p2">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>A window tries to own itself       -or-       Two windows try to own each other.</source>
          <target state="translated">Окно пытается стать владельцем самого себя - или - два окна пытаются стать владельцами друг с другом.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The Owner property is set on a visible window shown using &lt;xref:System.Windows.Window.ShowDialog*&gt;       -or-       The Owner property is set with a window that has not been previously shown.</source>
          <target state="translated">Задать свойство владельца для видимого окна отображается с помощью &lt;xref:System.Windows.Window.ShowDialog*&gt;- или - это свойство имеет значение с помощью окна, который не был показан ранее.&lt;/xref:System.Windows.Window.ShowDialog*&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Gets or sets the resize mode.</source>
          <target state="translated">Возвращает или задает режим изменения размера.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are four options:      -   <bpt id="p1">**</bpt>NoResize<ept id="p1">**</ept>.</source>
          <target state="translated">Ниже приведены четыре параметра:- <bpt id="p1">**</bpt>NoResize<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user cannot resize the window.</source>
          <target state="translated">Пользователь не может изменять размеры окна.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Maximize and Minimize boxes are not shown.</source>
          <target state="translated">Развернуть и свернуть поля не отображаются.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>CanMinimize<ept id="p1">**</ept>.</source>
          <target state="translated">- <bpt id="p1">**</bpt>CanMinimize<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can only minimize the window and restore it from the taskbar.</source>
          <target state="translated">Пользователь может только свернуть окно и восстановите ее из панели задач.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Minimize and Maximize boxes are both shown, but only the Minimize box is enabled.</source>
          <target state="translated">Свернуть и развернуть отображаются, но включена только кнопка "Свернуть".</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>CanResize<ept id="p1">**</ept>.</source>
          <target state="translated">- <bpt id="p1">**</bpt>CanResize<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user has the full ability to resize the window, using the Minimize and Maximize boxes, and a draggable outline around the window.</source>
          <target state="translated">Пользователь имеет возможность полного размера окна, с помощью свернуть и развернуть, а также перетаскиваемый контур вокруг окна.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Minimize and Maximize boxes are shown and enabled.</source>
          <target state="translated">Свернуть и развернуть отображаются и включены.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>(Default).</source>
          <target state="translated">(По умолчанию).</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>CanResizeWithGrip<ept id="p1">**</ept>.</source>
          <target state="translated">- <bpt id="p1">**</bpt>CanResizeWithGrip<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option has the same functionality as &lt;xref:System.Windows.ResizeMode&gt;, but adds a "resize grip" to the lower right corner of the window.</source>
          <target state="translated">Этот параметр может иметь ту же функциональность, что &lt;xref:System.Windows.ResizeMode&gt;, но добавляет «захват для изменения размера» в правом нижнем углу окна.&lt;/xref:System.Windows.ResizeMode&gt;</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowResizeMode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.ResizeModeProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowResizeMode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.ResizeModeProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.Window.ResizeModeProperty&gt;</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.ResizeMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value specifying the resize mode.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.ResizeMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее режим изменения размера.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.ResizeMode*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.ResizeMode*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.ResizeMode*&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Gets the size and location of a window before being either minimized or maximized.</source>
          <target state="translated">Возвращает размер и расположение окна перед сворачиванием либо развернуто.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>The restore rectangle is the region occupied by the window before it was minimized or maximized.</source>
          <target state="translated">Прямоугольник восстановления — область, занятая окном до его сворачивания или разворачивания.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use RestoreBounds to save the last size and location of a window before an application is closed, and retrieve those values the next time an application starts to restore a window to the way a user left it.</source>
          <target state="translated">Используйте RestoreBounds для сохранения последний размер и расположение окна перед закрытием приложения и получить эти значения при очередном запуске приложения, чтобы восстановить окно, так как пользователь остался.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you query RestoreBounds before the window has been shown or after it has been closed, &lt;xref:System.Windows.Rect.Empty%2A&gt; is returned.</source>
          <target state="translated">Если вы запрашиваете RestoreBounds перед показали окна или после его закрытия &lt;xref:System.Windows.Rect.Empty%2A&gt;возвращается.&lt;/xref:System.Windows.Rect.Empty%2A&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не может получить это свойство при размещении окна в браузере.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the size and location of a window before being either minimized or maximized.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , определяет размер и расположение окна перед Свертывание или развертывание.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Opens a window and returns without waiting for the newly opened window to close.</source>
          <target state="translated">Открывает окно и возвращается без ожидания закрытия нового открытого окна.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Windows.Window&gt; class is instantiated, it is not visible by default.</source>
          <target state="translated">Когда &lt;xref:System.Windows.Window&gt;создается экземпляр класса, она не отображается по умолчанию.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>Show shows a window and returns immediately, without waiting for the window to be closed.</source>
          <target state="translated">Показать показано окно и возврат немедленно, без ожидания окна будет закрыта.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, the opened window does not prevent users from interacting with other windows in the application.</source>
          <target state="translated">Следовательно открытое окно не запрещает пользователям взаимодействовать с другими окнами в приложении.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type of window is called a <bpt id="p1">*</bpt>modeless<ept id="p1">*</ept> window.</source>
          <target state="translated">Этот тип окна называется <bpt id="p1">*</bpt>немодальное<ept id="p1">*</ept> окна.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>Common examples of modeless windows are properties windows, toolboxes, and palettes.</source>
          <target state="translated">Распространенными примерами немодальных окон являются свойства окон, панелей инструментов и палитры.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>To restrict a user to interacting with a specific window, the window must be opened by calling &lt;xref:System.Windows.Window.ShowDialog%2A&gt;.</source>
          <target state="translated">Чтобы ограничить пользователя для взаимодействия с конкретным окном, окно должно быть установлено путем вызова &lt;xref:System.Windows.Window.ShowDialog%2A&gt;.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>A window that is opened by calling Show does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</source>
          <target state="translated">Окно, которое открывается вызовом Показать автоматически не имеет связь с окном, открывший его; в частности открытого окна не знает, какое окно он открыт.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>This relationship can be established using the &lt;xref:System.Windows.Window.Owner%2A&gt; property and managed using the &lt;xref:System.Windows.Window.OwnedWindows%2A&gt; property.</source>
          <target state="translated">Эту связь можно установить с помощью &lt;xref:System.Windows.Window.Owner%2A&gt;свойство и управляемых с помощью &lt;xref:System.Windows.Window.OwnedWindows%2A&gt;свойство.&lt;/xref:System.Windows.Window.OwnedWindows%2A&gt; &lt;/xref:System.Windows.Window.Owner%2A&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Show achieves the same end result as setting &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property of the &lt;xref:System.Windows.Window&gt; object to &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">Вызов Показать обеспечивает такой же результат окончания как свойства &lt;xref:System.Windows.UIElement.Visibility%2A&gt; &lt;xref:System.Windows.Window&gt;объекта &lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, there is a difference between the two from a timing perspective.</source>
          <target state="translated">Тем не менее есть различие между ними с точки зрения времени.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Show is a synchronous operation that returns only after the &lt;xref:System.Windows.FrameworkElement.Loaded&gt; event on the child window has been raised:       <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>WindowShowTimingSnippets#ShowSync<ept id="p2">](~/add/codesnippet/visualbasic/windowshowtimingsnippets/window1.xaml.vb#showsync)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>WindowShowTimingSnippets#ShowSync<ept id="p4">](~/add/codesnippet/csharp/WindowShowTimingSnippets.CSharp/Window1.xaml.cs#showsync)</ept><ept id="p3">]</ept>       Setting &lt;xref:System.Windows.UIElement.Visibility%2A&gt;, however, is an asynchronous operation that returns immediately:       <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>WindowShowTimingSnippets#ShowASync<ept id="p6">](~/add/codesnippet/visualbasic/windowshowtimingsnippets/window1.xaml.vb#showasync)</ept><ept id="p5">]</ept>  <bpt id="p7">[!code-cs</bpt><bpt id="p8">[</bpt>WindowShowTimingSnippets#ShowASync<ept id="p8">](~/add/codesnippet/csharp/WindowShowTimingSnippets.CSharp/Window1.xaml.cs#showasync)</ept><ept id="p7">]</ept>       When setting &lt;xref:System.Windows.UIElement.Visibility%2A&gt;, any window events you register before you set &lt;xref:System.Windows.UIElement.Visibility%2A&gt; may not be raised until after the method in which you set &lt;xref:System.Windows.UIElement.Visibility%2A&gt; has completed execution.</source>
          <target state="translated">Вызов Показать выполняется в синхронном режиме, который возвращает только после &lt;xref:System.Windows.FrameworkElement.Loaded&gt;события на дочернее окно: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>WindowShowTimingSnippets #ShowSync<ept id="p2">](~/add/codesnippet/visualbasic/windowshowtimingsnippets/window1.xaml.vb#showsync)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>WindowShowTimingSnippets #ShowSync<ept id="p4">](~/add/codesnippet/csharp/WindowShowTimingSnippets.CSharp/Window1.xaml.cs#showsync)</ept> <ept id="p3">]</ept> параметр &lt;xref:System.Windows.UIElement.Visibility%2A&gt;, то, сразу же завершает асинхронную операцию: <bpt id="p5">[!code-vb</bpt> <bpt id="p6">[</bpt>WindowShowTimingSnippets #ShowASync<ept id="p6">](~/add/codesnippet/visualbasic/windowshowtimingsnippets/window1.xaml.vb#showasync)</ept><ept id="p5">]</ept><bpt id="p7">[!code-cs</bpt><bpt id="p8">[</bpt>WindowShowTimingSnippets #ShowASync<ept id="p8">](~/add/codesnippet/csharp/WindowShowTimingSnippets.CSharp/Window1.xaml.cs#showasync)</ept> <ept id="p7">]</ept> при задании &lt;xref:System.Windows.UIElement.Visibility%2A&gt;, все события окна регистрировать перед установкой &lt;xref:System.Windows.UIElement.Visibility%2A&gt;могут не возникать до и после метода, в котором заданы &lt;xref:System.Windows.UIElement.Visibility%2A&gt;завершила выполнение.&lt;/xref:System.Windows.UIElement.Visibility%2A&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt; &lt;/xref:System.Windows.UIElement.Visibility%2A&gt;   &lt;/xref:System.Windows.UIElement.Visibility%2A&gt;   &lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Show is called on a window that is closing (<bpt id="p1">&lt;xref href="System.Windows.Window.Closing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) or has been closed (<bpt id="p2">&lt;xref href="System.Windows.Window.Closed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Показать вызывается в окне, которое закрывает (<bpt id="p1">&lt;xref href="System.Windows.Window.Closing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) или был закрыт (<bpt id="p2">&lt;xref href="System.Windows.Window.Closed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a window is activated when first shown.</source>
          <target state="translated">Возвращает или задает значение, указывающее, является ли окно активируется при первом отображении.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a window with its ShowActivated property set to <ph id="ph1">`false`</ph> is opened, the window is not activated and its &lt;xref:System.Windows.Window.Activated&gt; event is not raised until a user manually activates the window by selecting it.</source>
          <target state="translated">Если окно для его свойства ShowActivated <ph id="ph1">`false`</ph> является открывается, окно не активируется и его &lt;xref:System.Windows.Window.Activated&gt;событие не происходит, пока пользователь вручную активирует окно, выбрав его.&lt;/xref:System.Windows.Window.Activated&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the window is selected, it activates and deactivates normally.</source>
          <target state="translated">После выбора окна, она активирует и деактивируется в обычном режиме.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent a window from being activated when it opens, the ShowActivated property must be set to <ph id="ph1">`false`</ph> before the window is shown (by calling &lt;xref:System.Windows.Window.Show%2A&gt;); setting ShowActivated to <ph id="ph2">`false`</ph> after a window is shown has no effect.</source>
          <target state="translated">Чтобы окно активироваться при его открытии, свойство ShowActivated должно быть присвоено <ph id="ph1">`false`</ph> перед отображением этого окна (путем вызова &lt;xref:System.Windows.Window.Show%2A&gt;); установка ShowActivated <ph id="ph2">`false`</ph> после окна на экран не делает ничего.&lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting ShowActivated to <ph id="ph1">`false`</ph> on a window that is opened modally, by calling &lt;xref:System.Windows.Window.ShowDialog%2A&gt;, has no real impact.</source>
          <target state="translated">Установка ShowActivated <ph id="ph1">`false`</ph> в окне, которое открывается как модальная, вызвав &lt;xref:System.Windows.Window.ShowDialog%2A&gt;, имеет никаких реальных последствий.&lt;/xref:System.Windows.Window.ShowDialog%2A&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the modal window will not be activated, the modal window will prevent the user from activating any other open application windows.</source>
          <target state="translated">Несмотря на то, что не будут активированы модальное окно, модальное окно будет запрещает пользователю активацию любые другие открытые окна приложения.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowShowActivated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.ShowActivatedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowShowActivated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.ShowActivatedProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.ShowActivatedProperty&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a window is activated when first shown; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если окно активируется при первом отображении; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.ShowActivated*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.ShowActivated*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.ShowActivated*&gt;</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Opens a window and returns only when the newly opened window is closed.</source>
          <target state="translated">Открывает окно и возвращает только в том случае, когда закрывается только что открытого окна.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Windows.Window&gt; class is instantiated, it is not visible by default.</source>
          <target state="translated">Когда &lt;xref:System.Windows.Window&gt;создается экземпляр класса, она не отображается по умолчанию.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>ShowDialog shows the window, disables all other windows in the application, and returns only when the window is closed.</source>
          <target state="translated">ShowDialog показано окно, отключает все окна в приложении и возвращает только при закрытии окна.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type of window is known as a <bpt id="p1">*</bpt>modal<ept id="p1">*</ept> window.</source>
          <target state="translated">Этот тип окна называется <bpt id="p1">*</bpt>модального<ept id="p1">*</ept> окно.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modal windows are primarily used as dialog boxes.</source>
          <target state="translated">Модальные окна в основном используются как диалоговые окна.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>A dialog box is a special type of window that applications use to interact with users to complete tasks, such as opening files or printing documents.</source>
          <target state="translated">Диалоговое окно — это специальный тип окна, используемый приложениями для взаимодействия с пользователями при выполнении задач, таких как открытие файлов или печать документов.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dialog boxes commonly allow users to accept or cancel the task for which they were shown before the dialog box is closed.</source>
          <target state="translated">Диалоговые окна зачастую позволяют пользователям принять или отменить задачу, для которого они были показаны, прежде чем закрыть диалоговое окно.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>ShowDialog returns a &lt;xref:System.Nullable%601&gt;&lt;xref:System.Boolean&gt; value that specifies whether the activity was accepted or canceled.</source>
          <target state="translated">ShowDialog возвращает &lt;xref:System.Nullable%601&gt; &lt;xref:System.Boolean&gt;значение, указывающее, было ли действие принятия или отмены.&lt;/xref:System.Boolean&gt;&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is the value of the &lt;xref:System.Windows.Window.DialogResult%2A&gt; property before a window closes.</source>
          <target state="translated">Возвращаемое значение является значением &lt;xref:System.Windows.Window.DialogResult%2A&gt;свойство перед закрытием окна.&lt;/xref:System.Windows.Window.DialogResult%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Window.DialogResult%2A&gt;.</source>
          <target state="translated">Дополнительные сведения см. в разделе &lt;xref:System.Windows.Window.DialogResult%2A&gt;.&lt;/xref:System.Windows.Window.DialogResult%2A&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>A window that is opened by calling the ShowDialog method does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</source>
          <target state="translated">Окно, которое открывается с помощью метода ShowDialog автоматически не имеет связи с окном, открывший его; в частности открытого окна не знает, какое окно он открыт.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>This relationship can be established using the &lt;xref:System.Windows.Window.Owner%2A&gt; property and managed using the &lt;xref:System.Windows.Window.OwnedWindows%2A&gt; property.</source>
          <target state="translated">Эту связь можно установить с помощью &lt;xref:System.Windows.Window.Owner%2A&gt;свойство и управляемых с помощью &lt;xref:System.Windows.Window.OwnedWindows%2A&gt;свойство.&lt;/xref:System.Windows.Window.OwnedWindows%2A&gt; &lt;/xref:System.Windows.Window.Owner%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>To support <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> automation (see <bpt id="p1">[</bpt>UI Automation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>), &lt;xref:System.Windows.Window.Owner%2A&gt; must be set for a window opened by calling ShowDialog.</source>
          <target state="translated">Для поддержки <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> автоматизации (см. <bpt id="p1">[</bpt>Обзор модели автоматизации пользовательского интерфейса<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>), &lt;xref:System.Windows.Window.Owner%2A&gt;должно быть задано для окно, открытое посредством вызова ShowDialog.&lt;/xref:System.Windows.Window.Owner%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a modal <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> window (a window opened by calling ShowDialog) is closed, the previously activated window is reactivated.</source>
          <target state="translated">Когда модальный <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> закрытия окна (окно открывается вызовом ShowDialog), ранее активированное окно активируется повторно.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a modal <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> window has an owner window (see &lt;xref:System.Windows.Window.Owner%2A&gt;), the owner window is not reactivated when the modal <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> window is closed unless it was the previously activated window.</source>
          <target state="translated">Если модальное окно <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> окно имеет окно-владелец (см. &lt;xref:System.Windows.Window.Owner%2A&gt;), окно-владелец не активируется повторно, когда модальное <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> окно закрывается, если она была ранее активированное окно.&lt;/xref:System.Windows.Window.Owner%2A&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method cannot be called when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек этот метод нельзя вызывать, когда окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Nullable%601<ph id="ph2">&amp;gt;</ph> value of type &lt;xref:System.Boolean&gt; that specifies whether the activity was accepted (<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) or canceled (<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Объект <ph id="ph1">&amp;lt;</ph>xref:System.Nullable%601<ph id="ph2">&amp;gt;</ph> значение типа &lt;xref:System.Boolean&gt;, указывающий, принят ли действие (<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) или отменена (<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The return value is the value of the &lt;xref:System.Windows.Window.DialogResult*&gt; property before a window closes.</source>
          <target state="translated">Возвращаемое значение является значением &lt;xref:System.Windows.Window.DialogResult*&gt;свойство перед закрытием окна.&lt;/xref:System.Windows.Window.DialogResult*&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>ShowDialog is called on a window that is closing (<bpt id="p1">&lt;xref href="System.Windows.Window.Closing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) or has been closed (<bpt id="p2">&lt;xref href="System.Windows.Window.Closed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).</source>
          <target state="translated">ShowDialog вызывается в окне, которое закрывает (<bpt id="p1">&lt;xref href="System.Windows.Window.Closing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) или был закрыт (<bpt id="p2">&lt;xref href="System.Windows.Window.Closed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the window has a task bar button.</source>
          <target state="translated">Возвращает или задает значение, указывающее, имеет ли окно кнопку в панели задач.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>If ShowInTaskbar is set to <ph id="ph1">`true`</ph>, the window will also appear in the ALT+TAB application selection list.</source>
          <target state="translated">Если имеет значение ShowInTaskbar <ph id="ph1">`true`</ph>, окне также отображаются в списке выбора приложения ALT + TAB.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>The icon that is used for both the task bar button and the ALT+TAB application selection list is the value of the &lt;xref:System.Windows.Window.Icon%2A&gt; property.</source>
          <target state="translated">Значок, используемый для кнопки панели задач и список выбора приложения ALT + TAB — это значение &lt;xref:System.Windows.Window.Icon%2A&gt;Свойства.&lt;/xref:System.Windows.Window.Icon%2A&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowShowInTaskbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.ShowInTaskbarProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowShowInTaskbar"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.ShowInTaskbarProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.ShowInTaskbarProperty&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the window has a task bar button; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если окно имеет кнопку в панели задач; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Does not apply when the window is hosted in a browser.</source>
          <target state="translated">Не применяется, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.ShowInTaskbar*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.ShowInTaskbar*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.ShowInTaskbar*&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</source>
          <target state="translated">Возвращает или задает значение, указывающее, будет ли автоматически размер окна в соответствии с размером его содержимого.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>When SizeToContent is set to &lt;xref:System.Windows.SizeToContent&gt;, setting either &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; or &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; has no effect; both properties can be set, but the values they are set with are not applied to the window.</source>
          <target state="translated">При значении SizeToContent контейнер имеет значение &lt;xref:System.Windows.SizeToContent&gt;, устанавливая либо &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;или &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;не влияет; оба свойства могут быть заданы, но они устанавливаются с помощью значения не применяются к окна.&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Height%2A&gt; &lt;/xref:System.Windows.SizeToContent&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>When SizeToContent is set to &lt;xref:System.Windows.SizeToContent&gt;, setting &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; does not change the height of the window.</source>
          <target state="translated">При значении SizeToContent контейнер имеет значение &lt;xref:System.Windows.SizeToContent&gt;, параметр &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;не изменяет высоту окна.&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt; &lt;/xref:System.Windows.SizeToContent&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>When SizeToContent is set to &lt;xref:System.Windows.SizeToContent&gt;, setting &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; does not change the width of the window.</source>
          <target state="translated">При значении SizeToContent контейнер имеет значение &lt;xref:System.Windows.SizeToContent&gt;, параметр &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;не изменяет ширину окна.&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.SizeToContent&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>If SizeToContent has a value other than &lt;xref:System.Windows.SizeToContent&gt;:      -   SizeToContent is automatically set to &lt;xref:System.Windows.SizeToContent&gt; if a user resizes the window by using the resize grip or dragging the border.</source>
          <target state="translated">При значении SizeToContent контейнер имеет значение, отличное от &lt;xref:System.Windows.SizeToContent&gt;:-значении SizeToContent контейнер автоматически устанавливается значение &lt;xref:System.Windows.SizeToContent&gt;при изменении размера окна с помощью захвата для изменения размера или перетащив границу.&lt;/xref:System.Windows.SizeToContent&gt; &lt;/xref:System.Windows.SizeToContent&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the size of the content changes in a way that causes the window to resize itself, &lt;xref:System.Windows.FrameworkElement.SizeChanged&gt; is raised.</source>
          <target state="translated">-При изменении размера содержимого, в результате которого его окно будет изменяться, &lt;xref:System.Windows.FrameworkElement.SizeChanged&gt;возникает.&lt;/xref:System.Windows.FrameworkElement.SizeChanged&gt;</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a window is transparent (see &lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;), you should consider setting SizeToContent to &lt;xref:System.Windows.SizeToContent&gt; to ensure the window is no larger than its visible content.</source>
          <target state="translated">Если окно является прозрачным (см. &lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;), следует рассмотреть возможность установки значении SizeToContent контейнер &lt;xref:System.Windows.SizeToContent&gt;для обеспечения окна не больше его видимого содержимого.&lt;/xref:System.Windows.SizeToContent&gt; &lt;/xref:System.Windows.Window.AllowsTransparency%2A&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowSizeToContent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.SizeToContentProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowSizeToContent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.SizeToContentProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.SizeToContentProperty&gt;</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.SizeToContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.SizeToContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.SizeToContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref href="System.Windows.SizeToContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.SizeToContent*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.SizeToContent*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.SizeToContent*&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This event is raised to support interoperation with <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>.</source>
          <target state="translated">Это событие вызывается для поддержки взаимодействия с <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">&lt;xref href="System.Windows.Interop.HwndSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">See <bpt id="p1">&lt;xref href="System.Windows.Interop.HwndSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Occurs when the window's &lt;xref:System.Windows.Window.WindowState*&gt; property changes.</source>
          <target state="translated">Происходит, когда окно &lt;xref:System.Windows.Window.WindowState*&gt;изменения свойств.&lt;/xref:System.Windows.Window.WindowState*&gt;</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> taskbar thumbnail for the <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Возвращает или задает <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> эскиз задач для <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to use the <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> taskbar thumbnail, see the &lt;xref:System.Windows.Shell.TaskbarItemInfo&gt; class.</source>
          <target state="translated">Дополнительные сведения об использовании <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> эскиз задач см. &lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;класс.&lt;/xref:System.Windows.Shell.TaskbarItemInfo&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> taskbar thumbnail for the <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> Эскиз задач для <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.TaskbarItemInfo*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.TaskbarItemInfo*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.TaskbarItemInfo*&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Gets or sets a window's title.</source>
          <target state="translated">Возвращает или задает заголовок окна.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>The title of a &lt;xref:System.Windows.Window&gt;, &lt;xref:System.Windows.Navigation.NavigationWindow&gt;, or <ph id="ph1">[!INCLUDE[TLA#tla_iegeneric](~/add/includes/tlasharptla-iegeneric-md.md)]</ph>, can also be set by using &lt;xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Заголовок &lt;xref:System.Windows.Window&gt;, &lt;xref:System.Windows.Navigation.NavigationWindow&gt;, или <ph id="ph1">[!INCLUDE[TLA#tla_iegeneric](~/add/includes/tlasharptla-iegeneric-md.md)]</ph>, можно также задать с помощью &lt;xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowTitle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.TitleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowTitle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.TitleProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.TitleProperty&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the window's title.</source>
          <target state="translated">Объект &lt;xref:System.String&gt;, содержащий заголовок окна.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.Title*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.Title*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.Title*&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Gets or sets the position of the window's top edge, in relation to the desktop.</source>
          <target state="translated">Возвращает или задает позицию верхнего края окна относительно рабочего стола.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Windows.Window&gt; is maximized or minimized, this value represents the top edge of the restore point for the &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">Если &lt;xref:System.Windows.Window&gt;развернуто или развернуто, это значение соответствует верхнего края восстановления точки для &lt;xref:System.Windows.Window&gt;.&lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be set through a style.</source>
          <target state="translated">Это свойство нельзя задать с помощью стиля.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a value, Top is set to the system default value.</source>
          <target state="translated">Если значение не указано, то значение по умолчанию имеет значение Top.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify the system default value by setting Top to &lt;xref:System.Double.NaN&gt;.</source>
          <target state="translated">Можно также указать значение по умолчанию, задав значение &lt;xref:System.Double.NaN&gt;.&lt;/xref:System.Double.NaN&gt; Top</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither &lt;xref:System.Double.NegativeInfinity&gt; nor &lt;xref:System.Double.PositiveInfinity&gt; is a valid value for Top.</source>
          <target state="translated">Ни &lt;xref:System.Double.NegativeInfinity&gt;, ни &lt;xref:System.Double.PositiveInfinity&gt;является допустимым значением для верхней.&lt;/xref:System.Double.PositiveInfinity&gt; &lt;/xref:System.Double.NegativeInfinity&gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowTop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.TopProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowTop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.TopProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.TopProperty&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The position of the window's top, in logical units (1/96").</source>
          <target state="translated">Позиция верхнего окна в логических единицах (1/96").</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a window appears in the topmost z-order.</source>
          <target state="translated">Возвращает или задает значение, указывающее, отображается ли окно в верхнем z порядке.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>A window whose Topmost property is set to <ph id="ph1">`true`</ph> appears above all windows whose Topmost properties are set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Окно переднего плана, свойство которого имеет значение <ph id="ph1">`true`</ph> появляется над всеми переднего плана, свойства которого присваиваются windows <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the group of windows that have Topmost property is set to <ph id="ph1">`true`</ph>, the window that is currently activated is the topmost window.</source>
          <target state="translated">В группе windows, имеющих Topmost является свойство <ph id="ph1">`true`</ph>, окно, которое активируется в настоящее время является самое верхнее окно.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise for the group of windows that have Topmost property is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Аналогичным образом для группы windows, имеющие Topmost свойству <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowTopmost"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.TopmostProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowTopmost"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.TopmostProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.TopmostProperty&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the window is topmost; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если окно является самым верхним; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.Topmost*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.Topmost*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.Topmost*&gt;</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.Top*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.Top*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.Top*&gt;</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Gets or sets the position of the window when first shown.</source>
          <target state="translated">Возвращает или задает позицию окна при первом отображении.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting &lt;xref:System.Windows.WindowStartupLocation&gt; to &lt;xref:System.Windows.WindowStartupLocation&gt; causes a window to be positioned according to its &lt;xref:System.Windows.Window.Left%2A&gt; and &lt;xref:System.Windows.Window.Top%2A&gt; property values.</source>
          <target state="translated">Параметр &lt;xref:System.Windows.WindowStartupLocation&gt;для &lt;xref:System.Windows.WindowStartupLocation&gt;окно будет располагаться в соответствии с его &lt;xref:System.Windows.Window.Left%2A&gt;и &lt;xref:System.Windows.Window.Top%2A&gt;значений свойств.&lt;/xref:System.Windows.Window.Top%2A&gt; &lt;/xref:System.Windows.Window.Left%2A&gt; &lt;/xref:System.Windows.WindowStartupLocation&gt; &lt;/xref:System.Windows.WindowStartupLocation&gt;</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>If either the &lt;xref:System.Windows.Window.Left%2A&gt; or &lt;xref:System.Windows.Window.Top%2A&gt; properties aren't specified, their values are determined by <ph id="ph1">[!INCLUDE[TLA2#tla_mswin](~/add/includes/tla2sharptla-mswin-md.md)]</ph>.</source>
          <target state="translated">Если параметр &lt;xref:System.Windows.Window.Left%2A&gt;или &lt;xref:System.Windows.Window.Top%2A&gt;не были указаны свойства, их значения определяются <ph id="ph1">[!INCLUDE[TLA2#tla_mswin](~/add/includes/tla2sharptla-mswin-md.md)]</ph>.&lt;/xref:System.Windows.Window.Top%2A&gt; &lt;/xref:System.Windows.Window.Left%2A&gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting &lt;xref:System.Windows.WindowStartupLocation&gt; causes a window to be positioned in the center of the screen that contains the mouse cursor.</source>
          <target state="translated">Параметр &lt;xref:System.Windows.WindowStartupLocation&gt;Выводить окно должен располагаться в центре экрана, содержащего курсор мыши.&lt;/xref:System.Windows.WindowStartupLocation&gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting &lt;xref:System.Windows.WindowStartupLocation&gt; to &lt;xref:System.Windows.WindowStartupLocation&gt; causes a window to be positioned in the center of its owner window (see &lt;xref:System.Windows.Window.Owner%2A&gt;), if specified.</source>
          <target state="translated">Параметр &lt;xref:System.Windows.WindowStartupLocation&gt;для &lt;xref:System.Windows.WindowStartupLocation&gt;Выводить окно должен располагаться в центре окна-владельца (см. &lt;xref:System.Windows.Window.Owner%2A&gt;), если он указан.&lt;/xref:System.Windows.Window.Owner%2A&gt; &lt;/xref:System.Windows.WindowStartupLocation&gt; &lt;/xref:System.Windows.WindowStartupLocation&gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owner window can be either another WPF window or a non-WPF window.</source>
          <target state="translated">Окно-владелец может быть еще одно окно WPF или окна не WPF.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  For more information about WPF windows with non-WPF windows, see <bpt id="p1">[</bpt>WPF and Win32 Interoperation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and &lt;xref:System.Windows.Interop.WindowInteropHelper&gt;.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек Дополнительные сведения об окнах WPF с windows, отличных от WPF см. в разделе <bpt id="p1">[</bpt>WPF и взаимодействие Win32<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> и &lt;xref:System.Windows.Interop.WindowInteropHelper&gt;.&lt;/xref:System.Windows.Interop.WindowInteropHelper&gt;</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an owner window is not specified, the position of the window is determined in the same way as if &lt;xref:System.Windows.WindowStartupLocation&gt; is set to &lt;xref:System.Windows.WindowStartupLocation&gt;.</source>
          <target state="translated">Если окно-владелец не указан, положение окна определяется таким же образом, если &lt;xref:System.Windows.WindowStartupLocation&gt;задано значение &lt;xref:System.Windows.WindowStartupLocation&gt;.&lt;/xref:System.Windows.WindowStartupLocation&gt; &lt;/xref:System.Windows.WindowStartupLocation&gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get the value of this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства при размещении окна в браузере.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.WindowStartupLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the top/left position of a window when first shown.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.WindowStartupLocation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее позицию верхнего левого при первом отображении окна.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.WindowStartupLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref href="System.Windows.WindowStartupLocation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</source>
          <target state="translated">Возвращает или задает значение, указывающее, восстановлены ли, сворачивать и разворачивать.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before a window is minimized or maximized, its size and location are stored in &lt;xref:System.Windows.Window.RestoreBounds%2A&gt;.</source>
          <target state="translated">Прежде чем окна сворачивать или разворачивать, его размер и расположение, хранятся в &lt;xref:System.Windows.Window.RestoreBounds%2A&gt;.&lt;/xref:System.Windows.Window.RestoreBounds%2A&gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a window is subsequently restored, its size and location values are restored with the values from &lt;xref:System.Windows.Window.RestoreBounds%2A&gt;.</source>
          <target state="translated">При последующем восстановлении окна со значениями из &lt;xref:System.Windows.Window.RestoreBounds%2A&gt;.&lt;/xref:System.Windows.Window.RestoreBounds%2A&gt; восстанавливаются значения его размер и расположение</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the WindowState property is changed, &lt;xref:System.Windows.Window.StateChanged&gt; is raised.</source>
          <target state="translated">При изменении свойства WindowState &lt;xref:System.Windows.Window.StateChanged&gt;возникает.&lt;/xref:System.Windows.Window.StateChanged&gt;</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowWindowState"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.WindowStateProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowWindowState"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.WindowStateProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt; &lt;/xref:System.Windows.Window.WindowStateProperty&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.WindowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that determines whether a window is restored, minimized, or maximized.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.WindowState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , определяющий восстановления ли, сворачивать или разворачивать.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.WindowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (restored).</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref href="System.Windows.WindowState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (восстановления).</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.WindowState*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.WindowState*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.WindowState*&gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Gets or sets a window's border style.</source>
          <target state="translated">Возвращает или задает стиль границы окна.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>WindowStyle can be one of the &lt;xref:System.Windows.WindowStyle&gt; enumeration values, including &lt;xref:System.Windows.WindowStyle&gt;, &lt;xref:System.Windows.WindowStyle&gt;, &lt;xref:System.Windows.WindowStyle&gt; (default), and &lt;xref:System.Windows.WindowStyle&gt;.</source>
          <target state="translated">WindowStyle может принимать одно из &lt;xref:System.Windows.WindowStyle&gt;значений перечисления, включая &lt;xref:System.Windows.WindowStyle&gt;, &lt;xref:System.Windows.WindowStyle&gt;, &lt;xref:System.Windows.WindowStyle&gt;(по умолчанию) и &lt;xref:System.Windows.WindowStyle&gt;.&lt;/xref:System.Windows.WindowStyle&gt; &lt;/xref:System.Windows.WindowStyle&gt; &lt;/xref:System.Windows.WindowStyle&gt; &lt;/xref:System.Windows.WindowStyle&gt; &lt;/xref:System.Windows.WindowStyle&gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following figure shows the window styles on <ph id="ph1">[!INCLUDE[TLA#tla_longhorn](~/add/includes/ajax-current-ext-md.md)]</ph> (Windows Vista Aero theme, with transparent glass enabled):       <bpt id="p1">![</bpt>Window styles<ept id="p1">]</ept><bpt id="p2">(~/add/media/windowoverviewfigure6.PNG "</bpt>Window styles<ept id="p2">")</ept><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">На следующем рисунке показана стили окна на <ph id="ph1">[!INCLUDE[TLA#tla_longhorn](~/add/includes/ajax-current-ext-md.md)]</ph> (Windows Vista Aero тема с прозрачности включен): <bpt id="p1">![</bpt>стили окна<ept id="p1">]</ept><bpt id="p2">(~/add/media/windowoverviewfigure6.PNG "</bpt>стили окна<ept id="p2">")</ept> <ph id="ph2">      &gt; </ph> <ph id="ph3">[!NOTE]</ph> настроек не удается задать или получить значение этого свойства, если окно размещено в браузере.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowWindowStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Window.WindowStyleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowWindowStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.Window.WindowStyleProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Window.WindowStyleProperty&gt;</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.WindowStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies a window's border style.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.WindowStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , указывающее стиль границы окна.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.WindowStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref href="System.Windows.WindowStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Window.WindowStyle*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.Window.WindowStyle*&gt;свойство зависимостей.&lt;/xref:System.Windows.Window.WindowStyle*&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>