<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">869e2d13071ffdd5c6fbb3cdaec0c6cbfba8ffe0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.BufferedStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfc15ee86ba9181f690e516b871fd2be4e180055</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">578f042a0dadbb4176f263189037db06eac6b3e9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adds a buffering layer to read and write operations on another stream.</source>
          <target state="translated">Добавляет буферизацию для выполнения операций на другой поток чтения и записи.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a default buffer size of 4096 bytes.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса размер буфера по умолчанию — 4096 байт.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shared read/write buffer is allocated the first time a <ph id="ph1">`BufferedStream`</ph> object is initialized with this constructor.</source>
          <target state="translated">Общий, чтение и запись буфера выделяется первый раз <ph id="ph1">`BufferedStream`</ph> объект инициализируется с помощью этого конструктора.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The shared buffer is not used if all reads and writes are greater than or equal to <ph id="ph1">`bufferSize`</ph>.</source>
          <target state="translated">Общий буфер не используется, если все операции чтения и записи, больше или равно <ph id="ph1">`bufferSize`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The current stream.</source>
          <target state="translated">Текущий поток.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified buffer size.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с заданным размером буфера.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shared read/write buffer is allocated the first time a <ph id="ph1">`BufferedStream`</ph> object is initialized with this constructor.</source>
          <target state="translated">Общий, чтение и запись буфера выделяется первый раз <ph id="ph1">`BufferedStream`</ph> объект инициализируется с помощью этого конструктора.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The shared buffer is not used if all reads and writes are greater than or equal to <ph id="ph1">`bufferSize`</ph>.</source>
          <target state="translated">Общий буфер не используется, если все операции чтения и записи, больше или равно <ph id="ph1">`bufferSize`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The current stream.</source>
          <target state="translated">Текущий поток.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The buffer size in bytes.</source>
          <target state="translated">Размер буфера в байтах.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">Начинает операцию асинхронного чтения.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(Рекомендуется использовать &lt;xref:System.IO.BufferedStream.ReadAsync*&gt;вместо; см. в разделе "Примечания".)&lt;/xref:System.IO.BufferedStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginRead%2A&gt; and &lt;xref:System.IO.Stream.EndRead%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">В .NET Framework 4 и более ранних версий, необходимо использовать методы, такие как &lt;xref:System.IO.Stream.BeginRead%2A&gt;и &lt;xref:System.IO.Stream.EndRead%2A&gt;для реализации асинхронных операций.&lt;/xref:System.IO.Stream.EndRead%2A&gt; &lt;/xref:System.IO.Stream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Эти методы по-прежнему доступны в <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, и &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, вы легко реализовать асинхронные операции с файлами справки.&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt; must be called exactly once for every call to BeginRead.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;должен вызываться ровно один раз для каждого вызова BeginRead.&lt;/xref:System.IO.BufferedStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">Невозможность закончить процесс чтения до начала другой операции чтения может привести к нежелательным поведению, например взаимоблокировки.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.BufferedStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек используйте &lt;xref:System.IO.BufferedStream.CanRead%2A&gt;свойство, чтобы определить, поддерживает ли текущий экземпляр чтение.&lt;/xref:System.IO.BufferedStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.BufferedStream.EndRead%2A&gt; must be called with this &lt;xref:System.IAsyncResult&gt; to find out how many bytes were read.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndRead%2A&gt;должен вызываться с этим &lt;xref:System.IAsyncResult&gt;Чтобы узнать, сколько байтов, считанных.&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.BufferedStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The buffer to read the data into.</source>
          <target state="translated">Буфер для чтения данных.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data read from the stream.</source>
          <target state="translated">Смещение байтов в <ph id="ph1">`buffer`</ph> с которого начинается запись данных, считанных из потока.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Максимальное число байтов для чтения.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the read is complete.</source>
          <target state="translated">Необязательный асинхронный обратный вызов, вызываемый по завершении чтения.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
          <target state="translated">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного асинхронного запроса на чтение от других запросов.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An object that represents the asynchronous read, which could still be pending.</source>
          <target state="translated">Объект, представляющий асинхронное чтение, которое может все еще быть отложена.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>или <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Attempted an asynchronous read past the end of the stream.</source>
          <target state="translated">Предпринята попытка асинхронного чтения за концом потока.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The buffer length minus <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> is less than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Длина буфера минус <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept> — меньше, чем <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The current stream does not support the read operation.</source>
          <target state="translated">Текущий поток не поддерживает операции чтения.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">Начинает операцию асинхронной записи.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(Рекомендуется использовать &lt;xref:System.IO.BufferedStream.WriteAsync*&gt;вместо; см. в разделе "Примечания".)&lt;/xref:System.IO.BufferedStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginWrite%2A&gt; and &lt;xref:System.IO.Stream.EndWrite%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">В .NET Framework 4 и более ранних версий, необходимо использовать методы, такие как &lt;xref:System.IO.Stream.BeginWrite%2A&gt;и &lt;xref:System.IO.Stream.EndWrite%2A&gt;для реализации асинхронных операций.&lt;/xref:System.IO.Stream.EndWrite%2A&gt; &lt;/xref:System.IO.Stream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Эти методы по-прежнему доступны в <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, и &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, вы легко реализовать асинхронные операции с файлами справки.&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt; must be called exactly once on every &lt;xref:System.IAsyncResult&gt; from BeginWrite.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;должен вызываться ровно по одному разу для каждого &lt;xref:System.IAsyncResult&gt;из BeginWrite.&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.BufferedStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt; will block until the I/O operation has completed.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;будет заблокирован до завершения операции ввода-вывода.&lt;/xref:System.IO.BufferedStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The buffer containing data to write to the current stream.</source>
          <target state="translated">Буфер, содержащий данные для записи в текущий поток.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">Отсчитываемое от нуля смещение в <ph id="ph1">`buffer`</ph> с которого начинается копирование байтов в текущий поток.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Максимальное число байтов для записи.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The method to be called when the asynchronous write operation is completed.</source>
          <target state="translated">Метод, вызываемый после завершения операции асинхронной записи.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного асинхронного запроса запись от других запросов.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An object that references the asynchronous write which could still be pending.</source>
          <target state="translated">Объект, который ссылается на асинхронную запись, которая может все еще быть отложена.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> length minus <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> is less than <ph id="ph3">&lt;code&gt;count&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>Длина минус <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> — меньше, чем <ph id="ph3">&lt;code&gt;count&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>или <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">Поток не поддерживает запись.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">Возвращает значение, указывающее, поддерживает ли текущий поток операции чтения.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support reading, calls to the &lt;xref:System.IO.BufferedStream.Read%2A&gt;, &lt;xref:System.IO.BufferedStream.ReadByte%2A&gt;, &lt;xref:System.IO.Stream.BeginRead%2A&gt;, &lt;xref:System.IO.Stream.EndRead%2A&gt;, and the <ph id="ph1">`Peek`</ph> methods of &lt;xref:System.IO.StreamReader&gt;, &lt;xref:System.IO.StringReader&gt;, and &lt;xref:System.IO.TextReader&gt; throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">Если класс, производный от &lt;xref:System.IO.Stream&gt;не поддерживает чтение, при вызове &lt;xref:System.IO.BufferedStream.Read%2A&gt;, &lt;xref:System.IO.BufferedStream.ReadByte%2A&gt;, &lt;xref:System.IO.Stream.BeginRead%2A&gt;, &lt;xref:System.IO.Stream.EndRead%2A&gt;и <ph id="ph1">`Peek`</ph> методы &lt;xref:System.IO.StreamReader&gt;, &lt;xref:System.IO.StringReader&gt;и &lt;xref:System.IO.TextReader&gt;исключение &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.TextReader&gt; &lt;/xref:System.IO.StringReader&gt; &lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.Stream.EndRead%2A&gt; &lt;/xref:System.IO.Stream.BeginRead%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadByte%2A&gt; &lt;/xref:System.IO.BufferedStream.Read%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если поток закрыт, это свойство возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports reading; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with write-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если поток поддерживает чтение; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Если поток закрыт или открыт с доступом только для записи.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">Возвращает значение, указывающее, поддерживает ли текущий поток поиск.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support seeking, calls to &lt;xref:System.IO.BufferedStream.Length%2A&gt;, &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Position%2A&gt;, and &lt;xref:System.IO.BufferedStream.Seek%2A&gt; throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">Если класс, производный от &lt;xref:System.IO.Stream&gt;не поддерживает поиск, при вызове &lt;xref:System.IO.BufferedStream.Length%2A&gt;, &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Position%2A&gt;и &lt;xref:System.IO.BufferedStream.Seek%2A&gt;исключение &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.BufferedStream.Seek%2A&gt; &lt;/xref:System.IO.BufferedStream.Position%2A&gt; &lt;/xref:System.IO.BufferedStream.SetLength%2A&gt; &lt;/xref:System.IO.BufferedStream.Length%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если поток закрыт, это свойство возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports seeking; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or if the stream was constructed from an operating system handle such as a pipe or output to the console.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если поток поддерживает поиск; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Если поток закрыт или если поток был сконструирован из дескриптора операционной системы, такие как канал или вывод на консоль.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">Возвращает значение, указывающее, поддерживает ли текущий поток операции записи.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support writing, a call to &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Write%2A&gt;, or &lt;xref:System.IO.BufferedStream.WriteByte%2A&gt; throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">Если класс, производный от &lt;xref:System.IO.Stream&gt;не поддерживает запись, при вызове &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Write%2A&gt;, или &lt;xref:System.IO.BufferedStream.WriteByte%2A&gt;создает &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.BufferedStream.WriteByte%2A&gt; &lt;/xref:System.IO.BufferedStream.Write%2A&gt; &lt;/xref:System.IO.BufferedStream.SetLength%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если поток закрыт, это свойство возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports writing; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если поток поддерживает запись; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Если поток закрыт или открыт для доступа только для чтения.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Waits for the pending asynchronous read operation to complete.</source>
          <target state="translated">Ожидает завершения отложенной асинхронной операции чтения для завершения.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(Рекомендуется использовать &lt;xref:System.IO.BufferedStream.ReadAsync*&gt;вместо; см. в разделе "Примечания".)&lt;/xref:System.IO.BufferedStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginRead%2A&gt; and &lt;xref:System.IO.Stream.EndRead%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">В .NET Framework 4 и более ранних версий, необходимо использовать методы, такие как &lt;xref:System.IO.Stream.BeginRead%2A&gt;и &lt;xref:System.IO.Stream.EndRead%2A&gt;для реализации асинхронных операций.&lt;/xref:System.IO.Stream.EndRead%2A&gt; &lt;/xref:System.IO.Stream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Эти методы по-прежнему доступны в <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, и &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, вы легко реализовать асинхронные операции с файлами справки.&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndRead must be called with this &lt;xref:System.IAsyncResult&gt; to find out how many bytes were read.</source>
          <target state="translated">С этим необходимо вызвать метод EndRead &lt;xref:System.IAsyncResult&gt;Чтобы узнать, сколько байтов, считанных.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The reference to the pending asynchronous request to wait for.</source>
          <target state="translated">Ссылка на отложенный асинхронный запрос для ожидания.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</source>
          <target state="translated">Число байтов, считанных из потока, от 0 (ноль) и количество запрошенных байтов.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Streams only return 0 only at the end of the stream, otherwise, they should block until at least 1 byte is available.</source>
          <target state="translated">Потоки возвращают 0 только только в конце потока, в противном случае они должны блокироваться, пока не будет доступен по крайней мере 1 байт.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.BufferedStream.BeginRead*&gt; on this class.</source>
          <target state="translated">Этот &lt;xref:System.IAsyncResult&gt;объект не был создан путем вызова &lt;xref:System.IO.BufferedStream.BeginRead*&gt;для этого класса.&lt;/xref:System.IO.BufferedStream.BeginRead*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation and blocks until the I/O operation is complete.</source>
          <target state="translated">Завершает асинхронную операцию записи и блокирует до завершения операции ввода-вывода.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(Рекомендуется использовать &lt;xref:System.IO.BufferedStream.WriteAsync*&gt;вместо; см. в разделе "Примечания".)&lt;/xref:System.IO.BufferedStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginWrite%2A&gt; and &lt;xref:System.IO.Stream.EndWrite%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">В .NET Framework 4 и более ранних версий, необходимо использовать методы, такие как &lt;xref:System.IO.Stream.BeginWrite%2A&gt;и &lt;xref:System.IO.Stream.EndWrite%2A&gt;для реализации асинхронных операций.&lt;/xref:System.IO.Stream.EndWrite%2A&gt; &lt;/xref:System.IO.Stream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Эти методы по-прежнему доступны в <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, и &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, вы легко реализовать асинхронные операции с файлами справки.&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndWrite must be called exactly once for every call to &lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;.</source>
          <target state="translated">Метод EndWrite должен вызываться ровно по одному разу для каждого вызова &lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;.&lt;/xref:System.IO.BufferedStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to end a read process before beginning another read operation can cause deadlock or other undesirable behavior.</source>
          <target state="translated">Невозможность закончить процесс чтения до начала другой операции чтения может привести к взаимоблокировке или другим нежелательным последствиям.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The pending asynchronous request.</source>
          <target state="translated">Отложенный асинхронный запрос.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.BufferedStream.BeginWrite*&gt; on this class.</source>
          <target state="translated">Этот &lt;xref:System.IAsyncResult&gt;объект не был создан путем вызова &lt;xref:System.IO.BufferedStream.BeginWrite*&gt;для этого класса.&lt;/xref:System.IO.BufferedStream.BeginWrite*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Очищает все буферы для этого потока и вызывает запись всех буферизованных данных в базовое устройство.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Flush`</ph> or &lt;xref:System.IO.Stream.Close%2A&gt;.</source>
          <target state="translated">Сброс потока его основной кодировщик не очищается, пока не будет явно вызван метод <ph id="ph1">`Flush`</ph> или &lt;xref:System.IO.Stream.Close%2A&gt;.&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the &lt;xref:System.IO.BufferedStream.%23ctor%2A&gt; constructor, thus specifying the buffer size while creating the <ph id="ph1">`BufferedStream`</ph> object, the content is flushed when it reaches the buffer size.</source>
          <target state="translated">Если вы используете &lt;xref:System.IO.BufferedStream.%23ctor%2A&gt;конструктор, в котором размер буфера при создании <ph id="ph1">`BufferedStream`</ph> объекта содержимое очищается при достижении размера буфера.&lt;/xref:System.IO.BufferedStream.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, code such as <ph id="ph1">`BufferedStream bs = new BufferedStream(bs, 5)`</ph> will flush the content when the buffer size reaches 5 bytes.</source>
          <target state="translated">Например, такие как код <ph id="ph1">`BufferedStream bs = new BufferedStream(bs, 5)`</ph> содержимое будут удалены, когда размер буфера достигнет 5 байт.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>All the read and write methods of <ph id="ph1">`BufferedStream`</ph> automatically maintain the buffer, so there is no need to invoke <ph id="ph2">`Flush`</ph> when switching back and forth between reading and writing.</source>
          <target state="translated">Все методы чтения и записи из <ph id="ph1">`BufferedStream`</ph> автоматически поддерживают буфер, поэтому нет необходимости вызывать <ph id="ph2">`Flush`</ph> при переключении между чтением и записью.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">Поток был удален.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The data source or repository is not open.</source>
          <target state="translated">Источник данных или хранилище не открыто.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</source>
          <target state="translated">Асинхронно очищает все буферы для этого потока, вызывает запись всех буферизованных данных в базовое устройство и отслеживает запросы отмены.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Токен для отслеживания запросов отмены.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию очистки.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">Поток был удален.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets the stream length in bytes.</source>
          <target state="translated">Возвращает длину потока в байтах.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The stream length in bytes.</source>
          <target state="translated">Длина потока в байтах.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The underlying stream is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or closed.</source>
          <target state="translated">Основной поток является <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> или закрыт.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">Поток не поддерживает поиск.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets the position within the current stream.</source>
          <target state="translated">Возвращает позицию в текущем потоке.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`get`</ph> accessor invokes &lt;xref:System.IO.BufferedStream.Seek%2A&gt; to obtain the current position within the underlying stream and then adjusts this value according to the current position within the buffer.</source>
          <target state="translated"><ph id="ph1">`get`</ph> Вызывает метод доступа &lt;xref:System.IO.BufferedStream.Seek%2A&gt;получить текущую позицию в базовом потоке и затем изменяет это значение в соответствии с текущей позиции в буфере.&lt;/xref:System.IO.BufferedStream.Seek%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`set`</ph> accessor copies any data previously written to the buffer to the underlying stream, and then invokes &lt;xref:System.IO.BufferedStream.Seek%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`set`</ph> Доступа копирует все данные, записанные ранее в буфер в основной поток, а затем вызывает &lt;xref:System.IO.BufferedStream.Seek%2A&gt;.&lt;/xref:System.IO.BufferedStream.Seek%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Поддерживается поиск в любом месте за пределами длины потока.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The position within the current stream.</source>
          <target state="translated">Позиция в текущем потоке.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The value passed to &lt;xref:System.IO.BufferedStream.Seek*&gt; is negative.</source>
          <target state="translated">Значение, передаваемое &lt;xref:System.IO.BufferedStream.Seek*&gt;является отрицательным значением.&lt;/xref:System.IO.BufferedStream.Seek*&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An I/O error occurs, such as the stream being closed.</source>
          <target state="translated">Ошибка ввода-вывода, например указанный поток закрыт.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">Поток не поддерживает поиск.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Copies bytes from the current buffered stream to an array.</source>
          <target state="translated">Копирует байты из текущего буферизованного потока в массив.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Read`</ph> method will return 0 only if the end of the stream is reached.</source>
          <target state="translated"><ph id="ph1">`Read`</ph> Метод возвращает 0 только в том случае, если достигнут конец потока.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>In all other cases, <ph id="ph1">`Read`</ph> always reads at least one byte from the stream before returning.</source>
          <target state="translated">Во всех остальных случаях <ph id="ph1">`Read`</ph> всегда считывает хотя бы один байт из потока перед возвратом.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>By definition, if no data is available from the stream upon a call to <ph id="ph1">`Read`</ph>, the <ph id="ph2">`Read`</ph> method returns 0 (the end of the stream is reached automatically).</source>
          <target state="translated">По определению, если данные недоступны в потоке при вызове <ph id="ph1">`Read`</ph>, <ph id="ph2">`Read`</ph> метод возвращает значение 0 (автоматически достигается конец потока).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">Реализация может вернуть меньше байтов, чем было запрошено, даже если не достигнут конец потока.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.IO.BinaryReader&gt; for reading primitive data types.</source>
          <target state="translated">Используйте &lt;xref:System.IO.BinaryReader&gt;для чтения простых типов данных.&lt;/xref:System.IO.BinaryReader&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The buffer to which bytes are to be copied.</source>
          <target state="translated">Буфер, в который копируются байты.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The byte offset in the buffer at which to begin reading bytes.</source>
          <target state="translated">Смещение байтов в буфере, с которого должно начинаться чтение байтов.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The number of bytes to be read.</source>
          <target state="translated">Число байтов для чтения.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Общее число байтов, считанных в <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or 0 if the end of the stream has been reached before any data can be read.</source>
          <target state="translated">Это может быть меньше запрошенного числа байтов, если что столько байтов в настоящее время недоступны, или 0, если был достигнут конец потока перед данными может быть считаны.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>или <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The stream is not open or is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Поток не открыт или является <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">Поток не поддерживает чтение.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">Асинхронно считывает последовательность байтов из текущего потока, перемещает позицию внутри потока на число считанных байтов и отслеживает запросы отмены.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a cancellation token by creating an instance of the &lt;xref:System.Threading.CancellationTokenSource&gt; class and passing the &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt; property as the <ph id="ph1">`cancellationToken`</ph> parameter.</source>
          <target state="translated">Токен отмены, который можно создать путем создания экземпляра &lt;xref:System.Threading.CancellationTokenSource&gt;класса и передавая &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;свойство как <ph id="ph1">`cancellationToken`</ph> параметр.&lt;/xref:System.Threading.CancellationTokenSource.Token%2A&gt; &lt;/xref:System.Threading.CancellationTokenSource&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The buffer to write the data into.</source>
          <target state="translated">Буфер для записи данных.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data from the stream.</source>
          <target state="translated">Смещение байтов в <ph id="ph1">`buffer`</ph> с которого начинается запись данных из потока.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Максимальное число байтов для чтения.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Токен для отслеживания запросов отмены.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию чтения.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">Значение <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">TResult</ph> <ept id="p1">&lt;/code&gt;</ept> параметр содержит общее число байтов, считанных в буфер.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">Значение результата может быть меньше запрошенного числа байтов, если число текущих доступных байтов меньше запрошенного числа, или он может быть 0 (нуль), если был достигнут конец потока.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>или <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">Сумма <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept> и <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept> больше, чем длина буфера.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">Поток не поддерживает чтение.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">Поток был удален.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">Поток в данный момент используется предыдущей операцией чтения.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Reads a byte from the underlying stream and returns the byte cast to an <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or returns -1 if reading from the end of the stream.</source>
          <target state="translated">Считывает байт из базового потока и возвращает байт, приведенный к <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, или значение -1, если чтение с конца потока.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The byte cast to an <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or -1 if reading from the end of the stream.</source>
          <target state="translated">Байт приводится к <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, или значение -1, если чтение с конца потока.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An I/O error occurs, such as the stream being closed.</source>
          <target state="translated">Ошибка ввода-вывода, например указанный поток закрыт.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">Поток не поддерживает чтение.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Sets the position within the current buffered stream.</source>
          <target state="translated">Задает позицию в текущий буферизованный поток.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position will precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`offset`</ph> является отрицательным, новая позиция будет предшествовать позиции, заданной параметром <ph id="ph2">`origin`</ph> на число байтов, указанное в <ph id="ph3">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`offset`</ph> is 0, the new position will be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`offset`</ph> равно 0, новая позиция будет позиции, указанной параметром <ph id="ph2">`origin`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position will follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`offset`</ph> является положительным, новая позиция будет следовать позиции, указанной параметром <ph id="ph2">`origin`</ph> на число байтов, указанное в <ph id="ph3">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.IO.BufferedStream&gt; object is the base stream for a &lt;xref:System.IO.StreamReader&gt; object, calling the Seek method can cause the position of the stream to no longer match the position of the internal buffer in the reader.</source>
          <target state="translated">Если &lt;xref:System.IO.BufferedStream&gt;объект находится в базовый поток для &lt;xref:System.IO.StreamReader&gt;объекта, вызов метода Seek может привести к позиции потока, больше не соответствует позиции внутреннего буфера в модуле чтения.&lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.BufferedStream&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reset the internal buffer, call the &lt;xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName&gt; method; however, this method slows performance and should be called only when absolutely necessary.</source>
          <target state="translated">Чтобы сбросить во внутреннем буфере, вызовите &lt;xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName&gt;метода; тем не менее, этот метод снижает производительность и должен вызываться только в случае крайней необходимости.&lt;/xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Поддерживается поиск в любом месте за пределами длины потока.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A byte offset relative to <ph id="ph1">`origin`</ph>.</source>
          <target state="translated">Смещение байтов относительно <ph id="ph1">`origin`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.IO.SeekOrigin&gt; indicating the reference point from which to obtain the new position.</source>
          <target state="translated">Значение типа &lt;xref:System.IO.SeekOrigin&gt;определяет точку отсчета для получения новой позиции.&lt;/xref:System.IO.SeekOrigin&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The new position within the current buffered stream.</source>
          <target state="translated">Новое положение в текущий буферизованный поток.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The stream is not open or is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Поток не открыт или является <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">Поток не поддерживает поиск.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Sets the length of the buffered stream.</source>
          <target state="translated">Задает длину буферизованного потока.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The buffer is flushed before setting the length of the underlying data source or repository.</source>
          <target state="translated">Буфер очищается перед установкой длины базового источника данных или репозиторий.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified value is less than the current length of the buffered stream, the buffered stream is truncated.</source>
          <target state="translated">Если указанное значение меньше текущей длины буферизованного потока, буферизованный поток усекается.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified value is larger than the current length of the buffered stream, the buffered stream is expanded.</source>
          <target state="translated">Если указанное значение больше текущей длины буферизованного потока, буферизованный поток будет расширен.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the buffered stream is expanded, the contents of the buffered stream between the old and the new lengths are not defined.</source>
          <target state="translated">При расширении буферизованный поток содержимого из буферизованного потока между старой и новой длины не определены.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SetLength`</ph> flushes any buffered writes if necessary.</source>
          <target state="translated"><ph id="ph1">`SetLength`</ph>Очищает весь буферизованный при необходимости.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>A stream must support both writing and seeking for <ph id="ph1">`SetLength`</ph> to work.</source>
          <target state="translated">Поток должен поддерживать запись и поиск для <ph id="ph1">`SetLength`</ph> для работы.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>An integer indicating the desired length of the current buffered stream in bytes.</source>
          <target state="translated">Целое число, указывающее, требуемая длина текущего буферизованного потока в байтах.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The stream is not open or is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Поток не открыт или является <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The stream does not support both writing and seeking.</source>
          <target state="translated">Поток не поддерживает запись и поиск.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.</source>
          <target state="translated">Копирует байты в буферизованный поток и перемещает текущую позицию в буферизованном потоке на число записанных байтов.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The byte array from which to copy <ph id="ph1">`count`</ph> bytes to the current buffered stream.</source>
          <target state="translated">Массив байтов, из которого копируются <ph id="ph1">`count`</ph> байтов в текущий буферизованный поток.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The offset in the buffer at which to begin copying bytes to the current buffered stream.</source>
          <target state="translated">Смещение в буфере, с которого начинается копирование байтов в текущий буферизованный поток.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The number of bytes to be written to the current buffered stream.</source>
          <target state="translated">Число байтов для записи в текущий буферизованный поток.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>или <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The stream is closed or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Поток закрыт или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">Поток не поддерживает запись.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">Асинхронно записывает последовательность байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a cancellation token by creating an instance of the &lt;xref:System.Threading.CancellationTokenSource&gt; class and passing the &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt; property as the <ph id="ph1">`cancellationToken`</ph> parameter.</source>
          <target state="translated">Токен отмены, который можно создать путем создания экземпляра &lt;xref:System.Threading.CancellationTokenSource&gt;класса и передавая &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;свойство как <ph id="ph1">`cancellationToken`</ph> параметр.&lt;/xref:System.Threading.CancellationTokenSource.Token%2A&gt; &lt;/xref:System.Threading.CancellationTokenSource&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The buffer to write data from.</source>
          <target state="translated">Буфер, из которого записываются данные.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> from which to begin copying bytes to the stream.</source>
          <target state="translated">Отсчитываемое от нуля смещение в <ph id="ph1">`buffer`</ph> с которого начинается копирование байтов в поток.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Максимальное число байтов для записи.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Токен для отслеживания запросов отмены.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию записи.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>или <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">Сумма <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept> и <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept> больше, чем длина буфера.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">Поток не поддерживает запись.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">Поток был удален.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">Поток в данный момент используется предыдущей операцией записи.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the buffered stream.</source>
          <target state="translated">Записывает байт в текущее положение в буферизованный поток.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A byte to write to the stream.</source>
          <target state="translated">Байт, записываемый в поток.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">Поток не поддерживает запись.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>