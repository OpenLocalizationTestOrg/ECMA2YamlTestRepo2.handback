<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18e366ad8b4ec0bed32aaeaa0054b441b06c34a4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Reflection.Binder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99360ebb0bd35915cd1e92e3a877b00a54a1be61</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f98751ecd10a223ca3b0da29a09e354e8b710aeb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</source>
          <target state="translated">Выбирает члена из списка кандидатов и выполняет преобразование типа из типа фактического аргумента в тип формального аргумента.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementations of the Binder class are used by methods such as &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;, which selects from a set of possible members to execute, based on a set of parameter types and argument values; &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;, which selects a method based on parameter types; and so on.</source>
          <target state="translated">Реализации класса привязки, используемые методами &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;, которые выполняет выборку из набора возможных элементов для выполнения, на основе набора типов параметров и значений аргументов; &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;, который выбирает метод на основе параметров типов; и т. д.&lt;/xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; &lt;/xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A default implementation of the Binder class is provided by the &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">Реализация по умолчанию класса связыватель обеспечивается &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt;свойство.&lt;/xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called by the constructors of derived classes, to initialize state in this type.</source>
          <target state="translated">Этот конструктор вызывается конструкторами производных классов для инициализации состояния данного типа.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Selects a field from the given set of fields, based on the specified criteria.</source>
          <target state="translated">Выбор поля из данного набора полей, согласно указанным условиям.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`bindingAttr`</ph> does not include &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;, the default binder implementation provided by &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt; simply returns the first element of <ph id="ph2">`match`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`bindingAttr`</ph> не включает &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;, реализация связыватель по умолчанию, предоставляемые &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt;просто возвращает первый элемент <ph id="ph2">`match`</ph>.&lt;/xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt; &lt;/xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>No selection is done.</source>
          <target state="translated">Выбор не выполняется.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method controls the binding provided by &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Этот метод управляет привязки, предоставляемые &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;.&lt;/xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Побитовое сочетание <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значения.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The set of fields that are candidates for matching.</source>
          <target state="translated">Набор полей, которые являются кандидатами для сопоставления.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">Например, если <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> используется объект <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, этот параметр указывает, соответствует набор полей, которые отражения определил возможна, обычно из-за наличия правильным именем члена.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">Реализация по умолчанию, предоставляемые <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> изменяет порядок элементов этого массива.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The field value used to locate a matching field.</source>
          <target state="translated">Значение поля, используемый для нахождения соответствующего поля.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; that is used to control the coercion of data types, in binder implementations that coerce types.</source>
          <target state="translated">Экземпляр &lt;xref:System.Globalization.CultureInfo&gt;, используемый для управления приведением типов данных в реализациях связывателя, выполняющих приведение типов.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`culture`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">Если <ph id="ph1">`culture`</ph> является <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, &lt;xref:System.Globalization.CultureInfo&gt;для текущего потока используется.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">Примечание. Например, если в реализации связывателя допускается приведение строковых значений в числовые типы, этот параметр необходим для преобразования <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , представляющий 1000, в <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> значение, поскольку при разных языках и региональных параметрах 1000 представляется по-разному.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The default binder does not do such string coercions.</source>
          <target state="translated">Связыватель по умолчанию не выполняет подобного преобразования строковых типов.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The matching field.</source>
          <target state="translated">Соответствующее поле.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">match</ph><ept id="p3">&lt;/code&gt;</ept> contains multiple fields that are equally good matches for <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept> включает <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, и <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">match</ph> <ept id="p3">&lt;/code&gt;</ept> содержит несколько полей, которые одинаково хорошо соответствуют <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> contains a <ph id="ph2">`MyClass`</ph> object that implements the <ph id="ph3">`IMyClass`</ph> interface, and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">match</ph><ept id="p2">&lt;/code&gt;</ept> contains a field of type <ph id="ph5">`MyClass`</ph> and a field of type <ph id="ph6">`IMyClass`</ph>.</source>
          <target state="translated">Например <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> содержит <ph id="ph2">`MyClass`</ph> объект, реализующий <ph id="ph3">`IMyClass`</ph> интерфейс, и <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph4">match</ph> <ept id="p2">&lt;/code&gt;</ept> содержит поле типа <ph id="ph5">`MyClass`</ph> и поля типа <ph id="ph6">`IMyClass`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">match</ph><ept id="p3">&lt;/code&gt;</ept> contains no fields that can accept <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept> включает <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, и <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">match</ph> <ept id="p3">&lt;/code&gt;</ept> не содержит полей, которые могут принимать <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">match</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept> включает <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, и <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">match</ph> <ept id="p3">&lt;/code&gt;</ept> является <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> или пустой массив.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Selects a method to invoke from the given set of methods, based on the supplied arguments.</source>
          <target state="translated">Выбирает метод, вызываемый из данного набора методов в зависимости от предоставленных аргументов.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default binder takes into account both parameters that have values and <ph id="ph1">`params`</ph> arrays (<ph id="ph2">`ParamArray`</ph> arrays in Visual Basic).</source>
          <target state="translated">Связыватель по умолчанию учитывает оба параметра, имеющие значения и <ph id="ph1">`params`</ph> массивов (<ph id="ph2">`ParamArray`</ph> массивов в Visual Basic).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, it is possible to find a match in cases where <ph id="ph1">`args`</ph> and <ph id="ph2">`match`</ph> do not contain the same number of elements.</source>
          <target state="translated">Таким образом, можно найти соответствие в случаях, где <ph id="ph1">`args`</ph> и <ph id="ph2">`match`</ph> не содержат одинаковое количество элементов.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by BindToMethod.</source>
          <target state="translated">Связыватель позволяет клиенту сопоставить массив аргументов обратно в исходном виде, если аргумент массива был изменен с помощью метода BindToMethod.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this remap capability to get back by-reference arguments when such arguments are present.</source>
          <target state="translated">Эту возможность преобразования можно используйте для возврата аргументов по ссылке, при наличии таких аргументов.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you pass arguments by name, the binder reorders the argument array.</source>
          <target state="translated">При передаче аргументов по имени связыватель изменяет порядок массива аргументов.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`state`</ph> parameter keeps track of argument reordering, thus enabling the binder's &lt;xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt; method to reorder the argument array to its original form.</source>
          <target state="translated"><ph id="ph1">`state`</ph> Параметр сохраняет отслеживания о аргумент переупорядочение, благодаря чему средство привязки &lt;xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt;метод порядок аргументов в исходном виде.&lt;/xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BindToMethod method is used by the &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Метод метод BindToMethod используется &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;метод.&lt;/xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Побитовое сочетание <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значения.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The set of methods that are candidates for matching.</source>
          <target state="translated">Набор методов, являющихся кандидатами для сопоставления.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">Например, если <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> используется объект <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, этот параметр указывает, соответствует набор методов, которые отражения определил возможна, обычно из-за наличия правильным именем члена.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">Реализация по умолчанию, предоставляемые <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> изменяет порядок элементов этого массива.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The arguments that are passed in.</source>
          <target state="translated">Аргументы, передаваемые в.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <ph id="ph1">`names`</ph> parameter is used to specify an order other than positional order.</source>
          <target state="translated">Связыватель может изменить порядок аргументов в этом массиве; Например, связыватель по умолчанию изменяет порядок аргументов, если <ph id="ph1">`names`</ph> параметр используется для указания порядке, отличном от порядка по позиции.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</source>
          <target state="translated">Если реализации связывателя выполняется приведение типов аргументов, типы и значения аргументов, можно изменить также.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">Массив модификаторов параметров, позволяющий привязке работать с подписями параметров, в которых были изменены типы.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default binder implementation does not use this parameter.</source>
          <target state="translated">Реализация связыватель по умолчанию этот параметр не используется.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; that is used to control the coercion of data types, in binder implementations that coerce types.</source>
          <target state="translated">Экземпляр &lt;xref:System.Globalization.CultureInfo&gt;, используемый для управления приведением типов данных в реализациях связывателя, выполняющих приведение типов.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`culture`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">Если <ph id="ph1">`culture`</ph> является <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, &lt;xref:System.Globalization.CultureInfo&gt;для текущего потока используется.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">Примечание. Например, если в реализации связывателя допускается приведение строковых значений в числовые типы, этот параметр необходим для преобразования <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , представляющий 1000, в <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> значение, поскольку при разных языках и региональных параметрах 1000 представляется по-разному.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The default binder does not do such string coercions.</source>
          <target state="translated">Связыватель по умолчанию не выполняет подобного преобразования строковых типов.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The parameter names, if parameter names are to be considered when matching, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if arguments are to be treated as purely positional.</source>
          <target state="translated">Имена параметров, если имена параметров должны учитываться при сопоставлении, или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если рассматривать исключительно как позиционные аргументы.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, parameter names must be used if arguments are not supplied in positional order.</source>
          <target state="translated">Например имена параметров необходимо использовать, если аргументы не передаются в порядковой позиции.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After the method returns, <ph id="ph1">`state`</ph> contains a binder-provided object that keeps track of argument reordering.</source>
          <target state="translated">После возврата из этого метода <ph id="ph1">`state`</ph> содержит предоставленный связывателем объект, который отслеживает изменение порядка аргументов.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The binder creates this object, and the binder is the sole consumer of this object.</source>
          <target state="translated">Связыватель создает этот объект и является единственным объектом-получателем данного объекта.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`state`</ph> is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> returns, you must pass <ph id="ph2">`state`</ph> to the &lt;xref:System.Reflection.Binder.ReorderArgumentArray*&gt; method if you want to restore <ph id="ph3">`args`</ph> to its original order, for example, so that you can retrieve the values of <bpt id="p3">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> parameters (<bpt id="p4">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> parameters in Visual Basic).</source>
          <target state="translated">Если <ph id="ph1">`state`</ph> не <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> при <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> возвращает, необходимо передать <ph id="ph2">`state`</ph> для &lt;xref:System.Reflection.Binder.ReorderArgumentArray*&gt;метод, если вы хотите восстановить <ph id="ph3">`args`</ph> исходного заказа, например, чтобы вы могли получать значения <bpt id="p3">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> параметров (<bpt id="p4">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> в Visual Basic).&lt;/xref:System.Reflection.Binder.ReorderArgumentArray*&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The matching method.</source>
          <target state="translated">Соответствующий метод.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains multiple methods that are equally good matches for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">args</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> содержит несколько методов, которые одинаково хорошо соответствуют <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">args</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> contains a <ph id="ph2">`MyClass`</ph> object that implements the <ph id="ph3">`IMyClass`</ph> interface, and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">match</ph><ept id="p2">&lt;/code&gt;</ept> contains a method that takes <ph id="ph5">`MyClass`</ph> and a method that takes <ph id="ph6">`IMyClass`</ph>.</source>
          <target state="translated">Например <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">args</ph> <ept id="p1">&lt;/code&gt;</ept> содержит <ph id="ph2">`MyClass`</ph> объект, реализующий <ph id="ph3">`IMyClass`</ph> интерфейс, и <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph4">match</ph> <ept id="p2">&lt;/code&gt;</ept> содержит метод, который принимает <ph id="ph5">`MyClass`</ph> и метод, который принимает <ph id="ph6">`IMyClass`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains no methods that can accept the arguments supplied in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">args</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> не содержит методов, которые могут принимать аргументы, переданные в <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">args</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> — <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> или пустой массив.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Changes the type of the given <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given <bpt id="p2">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Изменяет тип данного <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> для данного <bpt id="p2">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reflection models the accessibility rules of the common type system.</source>
          <target state="translated">Отражение моделирует правила доступности для системы общих типов.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</source>
          <target state="translated">Например если вызывающий объект находится в той же сборке, вызывающий объект не нужны специальные разрешения для внутренних членов.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the caller needs &lt;xref:System.Security.Permissions.ReflectionPermission&gt;.</source>
          <target state="translated">В противном случае вызывающий объект должен &lt;xref:System.Security.Permissions.ReflectionPermission&gt;.&lt;/xref:System.Security.Permissions.ReflectionPermission&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is consistent with lookup of members that are protected, private, and so on.</source>
          <target state="translated">Это при поиске членов, которые защищены, закрытого и т. д.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The general principle is that <ph id="ph1">`ChangeType`</ph> should perform only widening coercions, which never lose data.</source>
          <target state="translated">Представляет общий принцип, <ph id="ph1">`ChangeType`</ph> должен выполнять только расширяющее преобразование, которое никогда не потерять данные.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</source>
          <target state="translated">Примером расширяющего преобразования является преобразование значение, которое является 32-разрядное целое число со знаком в значение, которое является 64-разрядное целое число со знаком.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is distinguished from a narrowing coercion, which may lose data.</source>
          <target state="translated">Этим оно отличается от сужающего преобразования, может произойти потеря данных.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</source>
          <target state="translated">Примером сужающего преобразования является преобразование 64-разрядное целое число со знаком в 32-разрядное целое число со знаком.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the coercions performed by the default <ph id="ph1">`ChangeType`</ph>.</source>
          <target state="translated">В следующей таблице перечислены преобразования, выполняемые по умолчанию <ph id="ph1">`ChangeType`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Source type|Target type|   |-----------------|-----------------|   |Any type|Its base type.|   |Any type|The interface it implements.|   |Char|UInt16, UInt32, Int32, UInt64, Int64, Single, Double|   |Byte|Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double|   |SByte|Int16, Int32, Int64, Single, Double|   |UInt16|UInt32, Int32, UInt64, Int64, Single, Double|   |Int16|Int32, Int64, Single, Double|   |UInt32|UInt64, Int64, Single, Double|   |Int32|Int64, Single, Double|   |UInt64|Single, Double|   |Int64|Single, Double|   |Single|Double|   |Non-reference|By-reference.|</source>
          <target state="translated">| Тип источника | Целевой тип |   |-----------------|-----------------|   | Любой тип | Базовый тип. |   | Любой тип | Он реализует интерфейс. |   | Char | UInt16, UInt32, Int32, UInt64, Int64, Single, Double |   | Байт | Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double |   | SByte | Int16, Int32, Int64, Single, Double |   | UInt16 | UInt32, Int32, UInt64, Int64, Single, Double |   | Int16 | Int32, Int64, Single, Double |   | UInt32 | UInt64, Int64, Single, Double |   | Int32 | Int64, один дважды |   | UInt64 | Единый, двойные |   | Int64 | Единый, двойные |   | Один | Двойные |   | Не ссылка | По ссылке. |</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The object to change into a new <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Объект для изменения в новый <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that <ph id="ph1">`value`</ph> will become.</source>
          <target state="translated">Новый <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , <ph id="ph1">`value`</ph> станет.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; that is used to control the coercion of data types.</source>
          <target state="translated">Экземпляр &lt;xref:System.Globalization.CultureInfo&gt;, используемый для управления приведением типов данных.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`culture`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">Если <ph id="ph1">`culture`</ph> является <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, &lt;xref:System.Globalization.CultureInfo&gt;для текущего потока используется.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Note   For example, this parameter is necessary to convert a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">Примечание. Например, этот параметр необходим для преобразования <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , представляющий 1000, в <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> значение, поскольку при разных языках и региональных параметрах 1000 представляется по-разному.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An object that contains the given value as the new type.</source>
          <target state="translated">Объект, содержащий заданное значение в качестве нового типа.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Upon returning from &lt;xref:System.Reflection.Binder.BindToMethod*&gt;, restores the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> argument to what it was when it came from <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">При возвращении с &lt;xref:System.Reflection.Binder.BindToMethod*&gt;, восстанавливает <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">args</ph> <ept id="p1">&lt;/code&gt;</ept> аргумента в том случае, если он поступает от <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.Binder.BindToMethod*&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime calls this method if <ph id="ph1">`state`</ph> is not <ph id="ph2">`null`</ph> after a return from <ph id="ph3">`BindToMethod`</ph>.</source>
          <target state="translated">Среда вызывает этот метод, если <ph id="ph1">`state`</ph> не <ph id="ph2">`null`</ph> после возвращения из <ph id="ph3">`BindToMethod`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The actual arguments that are passed in.</source>
          <target state="translated">Фактические аргументы, передаваемые в.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Both the types and values of the arguments can be changed.</source>
          <target state="translated">Можно изменить типы и значения аргументов.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A binder-provided object that keeps track of argument reordering.</source>
          <target state="translated">Предоставленный связывателем объект, который отслеживает изменение порядка аргументов.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Selects a method from the given set of methods, based on the argument type.</source>
          <target state="translated">Выбирает метод из данного набора методов в зависимости от типа аргумента.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should return <ph id="ph1">`null`</ph> if no method matches the criteria.</source>
          <target state="translated">Этот метод должен возвращать <ph id="ph1">`null`</ph> Если метод не соответствует критерию.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method controls the selection provided by the <ph id="ph1">`GetConstructor`</ph> and <ph id="ph2">`GetMethod`</ph> methods on <ph id="ph3">`Type`</ph>.</source>
          <target state="translated">Этот метод управляет выбором, предоставляемые <ph id="ph1">`GetConstructor`</ph> и <ph id="ph2">`GetMethod`</ph> методы <ph id="ph3">`Type`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Побитовое сочетание <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значения.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The set of methods that are candidates for matching.</source>
          <target state="translated">Набор методов, являющихся кандидатами для сопоставления.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">Например, если <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> используется объект <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, этот параметр указывает, соответствует набор методов, которые отражения определил возможна, обычно из-за наличия правильным именем члена.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">Реализация по умолчанию, предоставляемые <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> изменяет порядок элементов этого массива.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The parameter types used to locate a matching method.</source>
          <target state="translated">Типы параметров, используемый для нахождения соответствующего метода.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">Массив модификаторов параметров, позволяющий привязке работать с подписями параметров, в которых были изменены типы.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The matching method, if found; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Соответствующий метод, если найден; в противном случае <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains multiple methods that are equally good matches for the parameter types described by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">types</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> содержит несколько методов, которые хорошо совпадений для типов параметров, описываемых <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">types</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For example, the array in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">types</ph><ept id="p1">&lt;/code&gt;</ept> contains a &lt;xref:System.Type&gt; object for <ph id="ph2">`MyClass`</ph> and the array in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">match</ph><ept id="p2">&lt;/code&gt;</ept> contains a method that takes a base class of <ph id="ph4">`MyClass`</ph> and a method that takes an interface that <ph id="ph5">`MyClass`</ph> implements.</source>
          <target state="translated">Например, массив в <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">types</ph> <ept id="p1">&lt;/code&gt;</ept> содержит &lt;xref:System.Type&gt;для объекта <ph id="ph2">`MyClass`</ph> и массива в <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph3">match</ph> <ept id="p2">&lt;/code&gt;</ept> содержит метод, который принимает базовый класс <ph id="ph4">`MyClass`</ph> и метод, который принимает интерфейс, <ph id="ph5">`MyClass`</ph> реализует.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> — <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> или пустой массив.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-or-       An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">types</ph><ept id="p1">&lt;/code&gt;</ept> derives from &lt;xref:System.Type&gt;, but is not of type <bpt id="p2">&lt;xref uid="langword_csharp_RuntimeType" name="RuntimeType" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">- или - элемент <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">types</ph> <ept id="p1">&lt;/code&gt;</ept> является производным от &lt;xref:System.Type&gt;, но не относится к типу <bpt id="p2">&lt;xref uid="langword_csharp_RuntimeType" name="RuntimeType" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Selects a property from the given set of properties, based on the specified criteria.</source>
          <target state="translated">Выбирает свойство из заданного набора свойств в зависимости от заданных критериев.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method controls the selection provided by the <ph id="ph1">`GetProperty`</ph> method on <ph id="ph2">`Type`</ph>.</source>
          <target state="translated">Этот метод управляет выбором, предоставляемые <ph id="ph1">`GetProperty`</ph> метод <ph id="ph2">`Type`</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Побитовое сочетание <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значения.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The set of properties that are candidates for matching.</source>
          <target state="translated">Набор свойств, которые являются кандидатами для сопоставления.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">Например, если <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> используется объект <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, этот параметр указывает, соответствует набор свойств, которые отражения определил возможна, обычно из-за наличия правильным именем члена.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">Реализация по умолчанию, предоставляемые <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> изменяет порядок элементов этого массива.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The return value the matching property must have.</source>
          <target state="translated">Должен иметь возвращаемое значение, соответствующее свойство.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The index types of the property being searched for.</source>
          <target state="translated">Типы индексов свойства, поиск которого выполняется.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Used for index properties such as the indexer for a class.</source>
          <target state="translated">Используется для свойств индекса, например указателя для класса.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">Массив модификаторов параметров, позволяющий привязке работать с подписями параметров, в которых были изменены типы.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The matching property.</source>
          <target state="translated">Соответствующее свойство.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains multiple properties that are equally good matches for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">returnType</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">indexes</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> содержит несколько свойств, которые одинаково хорошо соответствуют <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">returnType</ph> <ept id="p2">&lt;/code&gt;</ept> и <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">indexes</ph> <ept id="p3">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">Для связывателя по умолчанию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept> — <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> или пустой массив.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>