<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59d0e692a4f187a91206d925ed26bd10132538f6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.HandleRef.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4427df096bd8308baccf9b6e46d0cd2d7e9471ec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffde11eda59cc7e4497da620dd922a195c60d014</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Wraps a managed object holding a handle to a resource that is passed to unmanaged code using platform invoke.</source>
          <target state="translated">Формирует оболочку для вызова неуправляемого кода управляемый объект, содержащий дескриптор к ресурсу, который передается в неуправляемый код, с помощью платформы.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Starting with the .NET Framework 2.0, the functionality of the HandleRef class has been replaced by the &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; class and its derived classes, as well as by the &lt;xref:System.Runtime.InteropServices.CriticalHandle&gt; class.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>Настроек начиная с .NET Framework 2.0, функциональность класса HandleRef будет заменен &lt;xref:System.Runtime.InteropServices.SafeHandle&gt;класс и его производные классы, а также как и в случае с &lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;классом.&lt;/xref:System.Runtime.InteropServices.CriticalHandle&gt; &lt;/xref:System.Runtime.InteropServices.SafeHandle&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use platform invoke to call a managed object, and the object is not referenced elsewhere after the platform invoke call, it is possible for the garbage collector to finalize the managed object.</source>
          <target state="translated">При использовании платформы для вызова управляемого объекта и объект не используется в другом месте после вызова платформы, возможно для сбора мусора для завершения управляемого объекта.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This action releases the resource and invalidates the handle, causing the platform invoke call to fail.</source>
          <target state="translated">Это действие освобождает ресурс и аннулирует обработку, вызывая сбой вызова неуправляемого кода.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Wrapping a handle with HandleRef guarantees that the managed object is not garbage collected until the platform invoke call completes.</source>
          <target state="translated">Перезапись дескриптора с HandleRef гарантирует, что управляемый объект не завершает мусора до вызова платформы.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of platform invoke services, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Описание платформы служб вызова неуправляемого кода см. в разделе <bpt id="p1">[</bpt>использование неуправляемых функций DLL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HandleRef value type, like &lt;xref:System.Runtime.InteropServices.GCHandle&gt;, is a special type recognized by the interop marshaler.</source>
          <target state="translated">HandleRef тип значений, таких как &lt;xref:System.Runtime.InteropServices.GCHandle&gt;, — это специальный тип распознается упаковщик взаимодействия.&lt;/xref:System.Runtime.InteropServices.GCHandle&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A normal, nonpinned &lt;xref:System.Runtime.InteropServices.GCHandle&gt; also prevents untimely garbage collection, yet HandleRef provides better performance.</source>
          <target state="translated">Это Обычный нефиксированный &lt;xref:System.Runtime.InteropServices.GCHandle&gt;также предотвращает несвоевременное удаление сборщиком мусора, но HandleRef обеспечивает более высокую производительность.&lt;/xref:System.Runtime.InteropServices.GCHandle&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although using HandleRef to keep an object alive for the duration of a platform invoke call is preferred, you can also use the &lt;xref:System.GC.KeepAlive%2A?displayProperty=fullName&gt; method for the same purpose.</source>
          <target state="translated">Несмотря на то, что использование HandleRef для сохранения объекта в течение платформы вызова неуправляемого кода вызова является предпочтительным, можно также использовать &lt;xref:System.GC.KeepAlive%2A?displayProperty=fullName&gt;метод для той же цели.&lt;/xref:System.GC.KeepAlive%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HandleRef constructor takes two parameters: an &lt;xref:System.Object&gt; representing the wrapper, and an &lt;xref:System.IntPtr&gt; representing the unmanaged handle.</source>
          <target state="translated">HandleRef конструктор принимает два параметра: &lt;xref:System.Object&gt;представляет оболочку, а &lt;xref:System.IntPtr&gt;представляет неуправляемую обработку.&lt;/xref:System.IntPtr&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The interop marshaler passes only the handle to unmanaged code, and guarantees that the wrapper (passed as the first parameter to the constructor of the <ph id="ph1">`HandleRef`</ph>) remains alive for the duration of the call.</source>
          <target state="translated">Упаковщик взаимодействия передает только дескриптор в неуправляемый код, а также обеспечивает оболочки (передается как первый параметр конструктор класса <ph id="ph1">`HandleRef`</ph>) остается активным в течение всего вызова.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the object to wrap and a handle to the resource used by unmanaged code.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класс с объектом для перезаписи и дескриптор для ресурса, используемого в неуправляемом коде.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A managed object that should not be finalized until the platform invoke call returns.</source>
          <target state="translated">Возвращает управляемый объект, который не следует завершать до вызова платформы.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; that indicates a handle to a resource.</source>
          <target state="translated">&lt;xref:System.IntPtr&gt;Указывает дескриптор для ресурса.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the handle to a resource.</source>
          <target state="translated">Возвращает дескриптор для ресурса.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The handle to a resource.</source>
          <target state="translated">Дескриптор для ресурса.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns the internal integer representation of a <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Возвращает внутренний целочисленный представление <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекта.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to retrieve an internal integer representation from.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> извлекаемого внутренней целочисленным представлением из объекта.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; object that represents a <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.IntPtr&gt;, Представляющий <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекта.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the object holding the handle to a resource.</source>
          <target state="translated">Возвращает объект, содержащий дескриптор для ресурса.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The object holding the handle to a resource.</source>
          <target state="translated">Объект, содержащий дескриптор для ресурса.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>