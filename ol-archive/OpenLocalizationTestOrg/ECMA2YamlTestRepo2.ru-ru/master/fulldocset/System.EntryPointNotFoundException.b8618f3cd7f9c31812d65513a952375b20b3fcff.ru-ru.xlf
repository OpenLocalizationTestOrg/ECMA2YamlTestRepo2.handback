<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0534d815a44e5eef8224016b2183acc6d8f0ff24</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.EntryPointNotFoundException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65687a1c5d0c79b71db55b3d30dfa6877c3d104d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fc7bed916b1d36594f8ce77813370676a4c46f8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The exception that is thrown when an attempt to load a class fails due to the absence of an entry method.</source>
          <target state="translated">Исключение, возникающее, когда попытка загрузки класса завершается неудачей из-за отсутствия метода входа.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An EntryPointNotFoundException exception is thrown when the common language runtime is unable to load an assembly because it cannot identify the assembly's entry point.</source>
          <target state="translated">EntryPointNotFoundException-исключение возникает, когда общеязыковая среда выполнения не удается загрузить сборку, так как он не может идентифицировать точкой входа сборки.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception can be thrown under the following conditions:      -   The common language runtime is unable to locate an application entry point (typically a <ph id="ph1">`Main`</ph> method) in an executable assembly.</source>
          <target state="translated">Это исключение может возникать при следующих условиях:-общеязыковая среда выполнения не удается найти точку входа приложения (обычно <ph id="ph1">`Main`</ph> метод) в исполняемую сборку.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application entry point must be a global or <ph id="ph1">`static`</ph> method that has either no parameters or a string array as its only parameter.</source>
          <target state="translated">Точка входа приложения должны быть глобальными или <ph id="ph1">`static`</ph> метода, имеющего без параметров или массив строк в качестве единственного параметра.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The entry point can return <ph id="ph1">`void`</ph>, or it can return an &lt;xref:System.Int32&gt; or &lt;xref:System.UInt32&gt; exit code.</source>
          <target state="translated">Точка входа может возвращать <ph id="ph1">`void`</ph>, или она может возвращать &lt;xref:System.Int32&gt;или &lt;xref:System.UInt32&gt;код выхода.&lt;/xref:System.UInt32&gt; &lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application assembly cannot define more than one entry point.</source>
          <target state="translated">Сборка приложения нельзя определить более одной точки входа.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The call to a function in a Windows DLL cannot be resolved because the function cannot be found.</source>
          <target state="translated">-Не удается разрешить вызов функции в Windows DLL, поскольку не удалось найти функцию.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the following example, an EntryPointNotFoundException exception is thrown because User32.dll does not include a function named <ph id="ph1">`GetMyNumber`</ph>.</source>
          <target state="translated">В следующем примере создается исключение EntryPointNotFoundException-исключение, поскольку User32.dll не включает функцию с именем <ph id="ph1">`GetMyNumber`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_1.cs)</ept><ept id="p1">]</ept>      <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_1.vb)</ept><ept id="p3">]</ept>      -   The call to a function in a Windows DLL cannot be resolved because the name used in the method call does not match a name found in the assembly.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_1.vb)</ept> <ept id="p3">]</ept> -вызов функции в Windows DLL не удается разрешить, поскольку имя, используемое в вызове метода, не соответствует имени, находящиеся в сборке.      </target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Frequently, this occurs because the &lt;xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName&gt; field is either implicitly or explicitly set to <ph id="ph1">`true`</ph>, the called method includes one or more string parameters and has both an ANSI and a Unicode version, and the name used in the method call does not correspond to the name of this ANSI or Unicode version.</source>
          <target state="translated">Часто это происходит из-за &lt;xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName&gt;неявно или явно задано значение <ph id="ph1">`true`</ph>, вызванный метод включает один или несколько параметров строки ANSI и Юникод и имеет имя, используемое в вызове метода не соответствуют имени этой версии ANSI или Юникод.&lt;/xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example provides an illustration by attempting to call the Windows <ph id="ph1">`MessageBox`</ph> function in User32.dll.</source>
          <target state="translated">Ниже приведен пример, попытка вызова Windows <ph id="ph1">`MessageBox`</ph> функции в библиотеке User32.dll.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the first method definition specifies &lt;xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName&gt; for string marshaling, the common language looks for the wide-character version of the function, <ph id="ph1">`MessageBoxW`</ph>, instead of the name used in the method call, <ph id="ph2">`MessageBox`</ph>.</source>
          <target state="translated">Так как первое определение метода задает &lt;xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName&gt;для маршалинга строк, общий язык ищет версию расширенных символов функции, <ph id="ph1">`MessageBoxW`</ph>, а не имя, используемое в вызове метода <ph id="ph2">`MessageBox`</ph>.&lt;/xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second method definition corrects this problem by calling the <ph id="ph1">`MessageBoxW`</ph> instead of the <ph id="ph2">`MessageBox`</ph> function.</source>
          <target state="translated">Второе определение метода решает эту проблему путем вызова <ph id="ph1">`MessageBoxW`</ph> вместо <ph id="ph2">`MessageBox`</ph> функции.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#2<ept id="p2">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_2.vb)</ept><ept id="p1">]</ept>      <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#2<ept id="p4">](~/add/codesnippet/csharp/t-system.entrypointnotfo_2.cs)</ept><ept id="p3">]</ept>      -   You are trying to call a function in a dynamic link library by its simple name rather than its decorated name.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#2<ept id="p2">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_2.vb)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#2<ept id="p4">](~/add/codesnippet/csharp/t-system.entrypointnotfo_2.cs)</ept> <ept id="p3">]</ept> -вы пытаетесь вызвать функцию в библиотеке динамической компоновки его простое имя, а не его декорированное имя.      </target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the C++ compiler generates a decorated name for DLL functions.</source>
          <target state="translated">Как правило компилятор C++ создает внутреннее имя функции DLL.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following C++ code defines a function named <ph id="ph1">`Double`</ph> in a library named TestDll.dll.</source>
          <target state="translated">Например, в следующем коде C++ определяется функция с именем <ph id="ph1">`Double`</ph> в библиотеке с именем TestDll.dll.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#6<ept id="p2">](~/add/codesnippet/cpp/testdll/testdll.cpp#6)</ept><ept id="p1">]</ept>           When the code in the following example tries to call the function, an EntryPointNotFoundException exception is thrown because the <ph id="ph1">`Double`</ph> function cannot be found.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#6<ept id="p2">](~/add/codesnippet/cpp/testdll/testdll.cpp#6)</ept> <ept id="p1">]</ept> Если в коде, в следующем примере предпринимается попытка вызова функции, EntryPointNotFoundException-исключение создается, поскольку <ph id="ph1">`Double`</ph> не удается найти функцию.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#7<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_4.cs)</ept><ept id="p1">]</ept>      <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#7<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_4.vb)</ept><ept id="p3">]</ept>           However, if the function is called by using its decorated name (in this case, <ph id="ph1">`?Double@@YAHH@Z`</ph>), the function call succeeds, as the following example shows.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#7<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_4.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#7<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_4.vb)</ept> <ept id="p3">]</ept> тем не менее, если функция вызывается с помощью его декорированное имя (в данном случае <ph id="ph1">`?Double@@YAHH@Z`</ph>), успешного вызова функции, как показано в следующем примере.      </target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#8<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_5.cs)</ept><ept id="p1">]</ept>      <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#8<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_5.vb)</ept><ept id="p3">]</ept>           You can find the decorated names of functions exported by a DLL by using a utility such as Dumpbin.exe.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#8<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_5.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#8<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_5.vb)</ept> <ept id="p3">]</ept> можно найти декорированные имена функций, экспортируемых из библиотеки DLL с помощью служебной программы, как Dumpbin.exe.      </target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You are attempting to call a method in a managed assembly as if it were an unmanaged dynamic link library.</source>
          <target state="translated">— Выполняется попытка вызвать метод в управляемую сборку, как если бы он был неуправляемых библиотек.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To see this in action, compile the following example to an assembly named StringUtilities.dll.</source>
          <target state="translated">Чтобы увидеть это в действии, скомпилируйте сборку с именем StringUtilities.dll в следующем примере.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#3<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_6.cs)</ept><ept id="p1">]</ept>      <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#3<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_6.vb)</ept><ept id="p3">]</ept>           Then compile and execute the following example, which attempts to call the <ph id="ph1">`StringUtilities.SayGoodMorning`</ph> method in the StringUtilities.dll dynamic link library as if it were unmanaged code.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#3<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_6.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#3<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_6.vb)</ept> <ept id="p3">]</ept> затем Скомпилируйте и выполните следующий пример, который пытается вызвать <ph id="ph1">`StringUtilities.SayGoodMorning`</ph> методу в библиотеке динамической компоновки StringUtilities.dll как если бы он был неуправляемого кода.      </target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is an EntryPointNotFoundException exception.</source>
          <target state="translated">Результат — EntryPointNotFoundException-исключение.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#4<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_7.cs)</ept><ept id="p1">]</ept>      <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#4<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_7.vb)</ept><ept id="p3">]</ept>           To eliminate the exception, add a reference to the managed assembly and access the <ph id="ph1">`StringUtilities.SayGoodMorning`</ph> method just as you would access any other method in managed code, as the following example does.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#4<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_7.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#4<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_7.vb)</ept> <ept id="p3">]</ept> Чтобы устранить исключение, добавьте ссылку на управляемую сборку и доступа <ph id="ph1">`StringUtilities.SayGoodMorning`</ph> точно так же, как и к любой другой метод в управляемом коде, как в следующем примере выполняется метод.      </target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#5<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_8.cs)</ept><ept id="p1">]</ept>      <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#5<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_8.vb)</ept><ept id="p3">]</ept>      -   You are trying to call a method in a COM DLL as if it were a Windows DLL.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.EntryPointNotFoundException.Class#5<ept id="p2">](~/add/codesnippet/csharp/t-system.entrypointnotfo_8.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.EntryPointNotFoundException.Class#5<ept id="p4">](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_8.vb)</ept> <ept id="p3">]</ept> -вы пытаетесь вызвать метод в DLL-библиотеку COM, как если бы оно библиотека DLL Windows.      </target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access a COM DLL, select the <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> option in Visual Studio to add a reference to the project, and then select the type library from the <bpt id="p2">**</bpt>COM<ept id="p2">**</ept> tab.</source>
          <target state="translated">Чтобы получить доступ к DLL-библиотеку COM, выберите <bpt id="p1">**</bpt>добавить ссылку<ept id="p1">**</ept> в Visual Studio, чтобы добавить ссылку на проект, а затем выберите библиотеку типов из <bpt id="p2">**</bpt>COM<ept id="p2">**</ept> вкладки.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of initial property values for an instance of EntryPointNotFoundException, see the &lt;xref:System.EntryPointNotFoundException.%23ctor%2A&gt; constructors.</source>
          <target state="translated">Список начальных значений свойств для экземпляра класса EntryPointNotFoundException см. в разделе &lt;xref:System.EntryPointNotFoundException.%23ctor%2A&gt;конструкторов.&lt;/xref:System.EntryPointNotFoundException.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.EntryPointNotFoundException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.EntryPointNotFoundException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the &lt;xref:System.Exception.Message%2A&gt; property of the new instance to a system-supplied message that describes the error, such as "Entry point was not found."</source>
          <target state="translated">Этот конструктор инициализирует &lt;xref:System.Exception.Message%2A&gt;свойство нового экземпляра, предоставляемое системой сообщение, описывающее ошибку, например «Записи точка не найдена».&lt;/xref:System.Exception.Message%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Это сообщение учитывает текущую культуру системы.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of &lt;xref:System.EntryPointNotFoundException&gt;.</source>
          <target state="translated">В следующей таблице показаны исходные значения свойств для экземпляра класса &lt;xref:System.EntryPointNotFoundException&gt;.&lt;/xref:System.EntryPointNotFoundException&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Value|   |--------------|-----------|   |&lt;xref:System.Exception.InnerException%2A&gt;|A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).|   |&lt;xref:System.TypeLoadException.Message%2A&gt;|The localized error message string.|</source>
          <target state="translated">| Свойство | Значение |   |--------------|-----------|   | &lt;xref:System.Exception.InnerException%2A&gt;| Пустая ссылка (<ph id="ph1">`Nothing`</ph> в Visual Basic). |   | &lt;xref:System.TypeLoadException.Message%2A&gt;| Строка локализованного сообщения об. |&lt;/xref:System.TypeLoadException.Message%2A&gt; &lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.EntryPointNotFoundException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified error message.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.EntryPointNotFoundException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с указанным сообщением об ошибке.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Содержимое <ph id="ph1">`message`</ph> предназначен должно быть понятно пользователю.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Код, вызывающий этот конструктор, должен убедиться, что эта строка локализована для текущего языка и региональных параметров системы.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of &lt;xref:System.EntryPointNotFoundException&gt;.</source>
          <target state="translated">В следующей таблице показаны исходные значения свойств для экземпляра класса &lt;xref:System.EntryPointNotFoundException&gt;.&lt;/xref:System.EntryPointNotFoundException&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Value|   |--------------|-----------|   |&lt;xref:System.Exception.InnerException%2A&gt;|A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).|   |&lt;xref:System.TypeLoadException.Message%2A&gt;|The error message string.|</source>
          <target state="translated">| Свойство | Значение |   |--------------|-----------|   | &lt;xref:System.Exception.InnerException%2A&gt;| Пустая ссылка (<ph id="ph1">`Nothing`</ph> в Visual Basic). |   | &lt;xref:System.TypeLoadException.Message%2A&gt;| Строка сообщения об ошибке. |&lt;/xref:System.TypeLoadException.Message%2A&gt; &lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Сообщение об ошибке с объяснением причин исключения.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.EntryPointNotFoundException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with serialized data.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.EntryPointNotFoundException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> сериализованными данными.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Объект, содержащий сериализованные данные объекта.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Контекстные сведения об источнике или назначении.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.EntryPointNotFoundException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.EntryPointNotFoundException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the &lt;xref:System.Exception.InnerException%2A&gt; property.</source>
          <target state="translated">Исключение, созданное как прямой результат предыдущего исключения, должно содержать ссылку на предыдущее исключение в &lt;xref:System.Exception.InnerException%2A&gt;свойство.&lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Exception.InnerException%2A&gt; property returns the same value that is passed into the constructor, or a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) if the &lt;xref:System.Exception.InnerException%2A&gt; property does not supply the inner exception value to the constructor.</source>
          <target state="translated">&lt;xref:System.Exception.InnerException%2A&gt;Свойство возвращает то же значение, которое передается конструктору, или пустую ссылку (<ph id="ph1">`Nothing`</ph> в Visual Basic) Если &lt;xref:System.Exception.InnerException%2A&gt;свойства не предоставляет конструктору значение внутреннего исключения.&lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of &lt;xref:System.EntryPointNotFoundException&gt;.</source>
          <target state="translated">В следующей таблице показаны исходные значения свойств для экземпляра класса &lt;xref:System.EntryPointNotFoundException&gt;.&lt;/xref:System.EntryPointNotFoundException&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Value|   |--------------|-----------|   |&lt;xref:System.Exception.InnerException%2A&gt;|The inner exception reference.|   |&lt;xref:System.TypeLoadException.Message%2A&gt;|The error message string.|</source>
          <target state="translated">| Свойство | Значение |   |--------------|-----------|   | &lt;xref:System.Exception.InnerException%2A&gt;| Ссылка на внутреннее исключение. |   | &lt;xref:System.TypeLoadException.Message%2A&gt;| Строка сообщения об ошибке. |&lt;/xref:System.TypeLoadException.Message%2A&gt; &lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Сообщение об ошибке с объяснением причин исключения.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Исключение, которое стало причиной текущего исключения.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`inner`</ph> parameter is not a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic), the current exception is raised in a <bpt id="p2">&lt;xref uid="langword_csharp_catch" name="catch" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> block that handles the inner exception.</source>
          <target state="translated">Если <ph id="ph1">`inner`</ph> параметр не является указателем null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> в Visual Basic), текущее исключение сгенерировано в <bpt id="p2">&lt;xref uid="langword_csharp_catch" name="catch" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> блок, обрабатывающем внутреннее исключение.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>