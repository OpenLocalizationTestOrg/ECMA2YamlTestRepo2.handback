<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18662fc7d4230fec1646d4f41a321def8a23513b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.ConstrainedExecution.CriticalFinalizerObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a5736c7dcdd99a345b20fb0791d808fd69d96cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9b04922d7371f340cf7d6c6a6bd3b788587af5a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Ensures that all finalization code in derived classes is marked as critical.</source>
          <target state="translated">Гарантирует, что весь код завершения в производных классах помечен как критический с точки.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes deriving from the CriticalFinalizerObject class are implicitly treated as a constrained execution region (CER).</source>
          <target state="translated">Классы, производные от класса CriticalFinalizerObject неявно рассматриваются как область с ограничением выполнения (CER).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires code in the finalizer to only call code with a strong reliability contract.</source>
          <target state="translated">Для этого кода в методе завершения вызывал только код с помощью строгого контракта надежности.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about CERs, see the &lt;xref:System.Runtime.ConstrainedExecution&gt; namespace.</source>
          <target state="translated">Дополнительные сведения об областях CER см. в разделе &lt;xref:System.Runtime.ConstrainedExecution&gt;пространства имен.&lt;/xref:System.Runtime.ConstrainedExecution&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In classes derived from the CriticalFinalizerObject class, the common language runtime (CLR) guarantees that all critical finalization code will be given the opportunity to execute, provided the finalizer follows the rules for a CER, even in situations where the CLR forcibly unloads an application domain or aborts a thread.</source>
          <target state="translated">В классах, производных от класса CriticalFinalizerObject которое гарантирует среды выполнения (CLR), которые все критический код завершения получит возможность запуска, при условии, что метод завершения соответствует правилам для CER, даже в ситуациях, когда среда CLR принудительно выгружает домен приложения или прерывает выполнение потока.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a finalizer violates the rules for a CER, it might not successfully execute.</source>
          <target state="translated">Если метод завершения нарушает правила для области CER, он может не выполниться успешно.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, the CLR establishes a weak ordering among normal and critical finalizers: for objects reclaimed by garbage collection at the same time, all the noncritical finalizers are called before any of the critical finalizers.</source>
          <target state="translated">Кроме того, среда CLR устанавливает слабое упорядочение среди обычных и критических методов завершения: для объектов сборщиком мусора, в то же время, все некритические методы завершения вызываются перед критическими.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a class such as &lt;xref:System.IO.FileStream&gt;, which holds data in the &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; class that is derived from CriticalFinalizerObject, can run a standard finalizer to flush out existing buffered data.</source>
          <target state="translated">Например, класса, например &lt;xref:System.IO.FileStream&gt;, которая хранит данные в &lt;xref:System.Runtime.InteropServices.SafeHandle&gt;класс, производный от класса CriticalFinalizerObject, можно запустить стандартный метод завершения, чтобы сбросить существующие буферизованные данные.&lt;/xref:System.Runtime.InteropServices.SafeHandle&gt; &lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, you do not need to write classes that derive from the CriticalFinalizerObject class.</source>
          <target state="translated">В большинстве случаев писать классы, которые являются производными от класса CriticalFinalizerObject необязательно.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework class library provides two classes, &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; and &lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;, that provide critical finalization functionality for handle resources.</source>
          <target state="translated">Библиотека классов .NET Framework предоставляет два класса &lt;xref:System.Runtime.InteropServices.SafeHandle&gt;и &lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;, обеспечивающие функциональность критическое завершение для ресурсов обработчика.&lt;/xref:System.Runtime.InteropServices.CriticalHandle&gt; &lt;/xref:System.Runtime.InteropServices.SafeHandle&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, the .NET Framework provides a set of prewritten classes derived from the &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; class, and this set is located in the &lt;xref:Microsoft.Win32.SafeHandles&gt; namespace.</source>
          <target state="translated">Кроме того, платформа .NET Framework предоставляет набор встроенные классы, производные от &lt;xref:System.Runtime.InteropServices.SafeHandle&gt;класса и этот набор находится в &lt;xref:Microsoft.Win32.SafeHandles&gt;пространства имен.&lt;/xref:Microsoft.Win32.SafeHandles&gt; &lt;/xref:System.Runtime.InteropServices.SafeHandle&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>These classes are designed to provide common functionality for supporting file and operating system handles.</source>
          <target state="translated">Эти классы предназначены для предоставляют общие функции для поддержки дескрипторов файлов и операционной системы.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Releases all the resources used by the <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Освобождает все ресурсы, используемые <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The finalizer for any types deriving from &lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt; is given the opportunity to execute and will not be aborted, assuming the finalizer correctly follows the rules for a constrained execution region (CER).</source>
          <target state="translated">Метод завершения для типов, производных от &lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;предоставляется возможность выполнения и не может быть отменено, при условии, что метод завершения правильно соответствует правилам для области с ограничением выполнения (CER).&lt;/xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>