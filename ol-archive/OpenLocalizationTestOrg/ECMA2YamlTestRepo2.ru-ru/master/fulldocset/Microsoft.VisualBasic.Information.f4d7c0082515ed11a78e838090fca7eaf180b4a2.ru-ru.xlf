<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37e507b692d22cbd6ad4e589a76d68e2460b3f57</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Information.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">410e11b7ce97a043e4b28e67faab6d4b0841b980</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c09943a549e137ae8049e7252a5922fd68398c89</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Information" name="Information" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> module contains the procedures used to return, test for, or verify information.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Information" name="Information" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Модуль содержит процедуры, используемые для возврата, проверять или проверьте сведения о.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</source>
          <target state="translated">Этот модуль поддерживает ключевые слова языка Visual Basic и члены библиотеки времени выполнения, которые предоставляют сведения об ошибке, проверка данных, определение границ массива и получить сведения о данных тип и цвет.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">Возвращает целое число, указывающее номер строки последней инструкции.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">Только для чтения.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Visual Basic encounters no line numbers, it returns 0.</source>
          <target state="translated">Если Visual Basic не обнаруживает номера строки, она возвращает 0.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">Возвращает целое число, указывающее номер строки последней инструкции.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">Только для чтения.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Contains information about run-time errors.</source>
          <target state="translated">Содержит сведения об ошибках во время выполнения.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties of the <ph id="ph1">`Err`</ph> object are set by the generator of an error—Visual Basic, an object, or the programmer.</source>
          <target state="translated">Свойства <ph id="ph1">`Err`</ph> объекта устанавливаются генератором ошибки — Visual Basic, объектом или программистом.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a run-time error occurs, the properties of the <ph id="ph1">`Err`</ph> object are filled with information that uniquely identifies the error and that you can use to handle the error.</source>
          <target state="translated">При возникновении ошибки во время выполнения свойства <ph id="ph1">`Err`</ph> объекта заполняются данными, который уникально идентифицирует ошибку, и можно использовать для обработки ошибки.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generate a run-time error in your code, use the <ph id="ph1">`Raise`</ph> method.</source>
          <target state="translated">Чтобы создать ошибку во время выполнения в коде, используйте <ph id="ph1">`Raise`</ph> метод.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Err`</ph> object's properties are reset to zero or zero-length strings ("") after an <ph id="ph2">`Exit Sub`</ph>, <ph id="ph3">`Exit Function`</ph>, <ph id="ph4">`Exit Property`</ph>, or <ph id="ph5">`Resume Next`</ph> statement within an error-handling routine.</source>
          <target state="translated"><ph id="ph1">`Err`</ph> Свойств объекта устанавливаются равными нулю или строка нулевой длины ("») после <ph id="ph2">`Exit Sub`</ph>, <ph id="ph3">`Exit Function`</ph>, <ph id="ph4">`Exit Property`</ph>, или <ph id="ph5">`Resume Next`</ph> инструкции подпрограммы обработки ошибок.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using any form of the <ph id="ph1">`Resume`</ph> statement outside of an error-handling routine will not reset the <ph id="ph2">`Err`</ph> object's properties.</source>
          <target state="translated">Использование форм <ph id="ph1">`Resume`</ph> инструкции за пределами подпрограммы обработки ошибок не приведет к сбросу <ph id="ph2">`Err`</ph> свойств объекта.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`Clear`</ph> method to explicitly reset <ph id="ph2">`Err`</ph>.</source>
          <target state="translated">Можно использовать <ph id="ph1">`Clear`</ph> метод явно сбросить <ph id="ph2">`Err`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`Raise`</ph> method rather than the <ph id="ph2">`Error`</ph> statement to generate run-time errors for system errors and class modules.</source>
          <target state="translated">Используйте <ph id="ph1">`Raise`</ph> метод вместо <ph id="ph2">`Error`</ph> инструкции для создания ошибки во время выполнения для системных ошибок и модулей класса.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your decision about whether to use the <ph id="ph1">`Raise`</ph> method in other code depends on the richness of the information you want to return.</source>
          <target state="translated">Решение о том, следует ли использовать <ph id="ph1">`Raise`</ph> метода в другой код зависит от полноты информации, чтобы вернуть.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Err`</ph> object is an intrinsic object with global scope.</source>
          <target state="translated"><ph id="ph1">`Err`</ph> Объект является внутренним объектом глобальной области.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you do not need to create an instance of it in your code.</source>
          <target state="translated">Таким образом необязательно создавать его экземпляр в коде.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Contains information about run-time errors.</source>
          <target state="translated">Содержит сведения об ошибках во время выполнения.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether a variable points to an array.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, указывает ли переменная на массив.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsArray`</ph> returns <ph id="ph2">`True`</ph> if the variable points to an array; otherwise, it returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsArray`</ph>Возвращает <ph id="ph2">`True`</ph> Если переменная указывает на массив; в противном случае он возвращает <ph id="ph3">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsArray`</ph> is especially useful with objects that might contain arrays.</source>
          <target state="translated"><ph id="ph1">`IsArray`</ph>особенно полезна для объектов, которые могут содержать массивы.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>переменная.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether a variable points to an array.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, указывает ли переменная на массив.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression represents a valid <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, представляет ли выражение допустимое <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> значение.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> is of the &lt;xref:System.DateTime&gt; data type or can be converted to it; otherwise, it returns <ph id="ph4">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsDate`</ph>Возвращает <ph id="ph2">`True`</ph> Если <ph id="ph3">`Expression`</ph> имеет &lt;xref:System.DateTime&gt;данных введите или может быть преобразован к нему; в противном случае — возвращает <ph id="ph4">`False`</ph>.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.DateTime&gt; data type holds both a date value and a time value.</source>
          <target state="translated">&lt;xref:System.DateTime&gt;Тип данных содержит значение даты и значения времени.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> represents a valid date, a valid time, or a valid date and time.</source>
          <target state="translated"><ph id="ph1">`IsDate`</ph>Возвращает <ph id="ph2">`True`</ph> Если <ph id="ph3">`Expression`</ph> представляет допустимую дату, допустимое время или допустимую дату и время.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>выражение.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression represents a valid <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, представляет ли выражение допустимое <bpt id="p2">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> значение.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression evaluates to the <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, является ли выражение значение <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsDBNull`</ph> returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> evaluates to the &lt;xref:System.DBNull&gt; type; otherwise, <ph id="ph4">`IsDBNull`</ph> returns <ph id="ph5">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsDBNull`</ph>Возвращает <ph id="ph2">`True`</ph> ли тип данных <ph id="ph3">`Expression`</ph> равен &lt;xref:System.DBNull&gt;типа; в противном случае <ph id="ph4">`IsDBNull`</ph> возвращает <ph id="ph5">`False`</ph>.&lt;/xref:System.DBNull&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.DBNull?displayProperty=fullName&gt; value indicates that the <ph id="ph1">`Object`</ph> represents missing or nonexistent data.</source>
          <target state="translated">&lt;xref:System.DBNull?displayProperty=fullName&gt;Значение указывает, что <ph id="ph1">`Object`</ph> представляет отсутствующие или несуществующие данные.&lt;/xref:System.DBNull?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DBNull`</ph> is not the same as <ph id="ph2">`Nothing`</ph>, which indicates that a variable has not yet been initialized.</source>
          <target state="translated"><ph id="ph1">`DBNull`</ph>не является таким же, как <ph id="ph2">`Nothing`</ph>, указывающая, что переменная не была инициализирована.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DBNull`</ph> is also not the same as a zero-length string (<ph id="ph2">`""`</ph>), which is sometimes referred to as a null string.</source>
          <target state="translated"><ph id="ph1">`DBNull`</ph>также не является таким же, как строка нулевой длины (<ph id="ph2">`""`</ph>), которые иногда называют пустой строкой.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>выражение.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression evaluates to the <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, является ли выражение значение <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression is an exception type.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, является ли выражение тип исключения.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsError`</ph> returns <ph id="ph2">`True`</ph> if the expression represents an <ph id="ph3">`Object`</ph> variable that derives from the &lt;xref:System.Exception&gt; class in the &lt;xref:System&gt; namespace.</source>
          <target state="translated"><ph id="ph1">`IsError`</ph>Возвращает <ph id="ph2">`True`</ph> Если выражение представляет <ph id="ph3">`Object`</ph> переменную, которая является производным от &lt;xref:System.Exception&gt;класса в &lt;xref:System&gt;пространства имен.&lt;/xref:System&gt; &lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception that derives from &lt;xref:System.Exception?displayProperty=fullName&gt; can be caught with the <ph id="ph1">`Try...Catch...Finally`</ph> statements.</source>
          <target state="translated">Исключение, которое является производным от &lt;xref:System.Exception?displayProperty=fullName&gt;может быть перехвачено с <ph id="ph1">`Try...Catch...Finally`</ph> инструкции.&lt;/xref:System.Exception?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>выражение.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression is an exception type.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, является ли выражение тип исключения.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression has no object assigned to it.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, имеет ли выражение присвоенные ее объекты.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNothing`</ph> returns <ph id="ph2">`True`</ph> if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNothing`</ph>Возвращает <ph id="ph2">`True`</ph> Если выражение представляет объектную переменную, которая в настоящее время нет объекта, назначенный на него; в противном случае, он возвращает <ph id="ph3">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNothing`</ph> is intended to work on reference types.</source>
          <target state="translated"><ph id="ph1">`IsNothing`</ph>предназначен для работы со ссылочными типами.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value type cannot hold a value of  and reverts to its default value if you assign <ph id="ph1">`Nothing`</ph> to it.</source>
          <target state="translated">Тип значения не может содержать значение и возвращается к значению по умолчанию, если назначить <ph id="ph1">`Nothing`</ph> к нему.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you supply a value type in <ph id="ph1">`Expression`</ph>, <ph id="ph2">`IsNothing`</ph> always returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated">При указании типа значения в <ph id="ph1">`Expression`</ph>, <ph id="ph2">`IsNothing`</ph> всегда возвращает <ph id="ph3">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>выражение.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression has no object assigned to it.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, имеет ли выражение присвоенные ее объекты.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression can be evaluated as a number.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, может ли выражение обрабатываться как число.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> is <ph id="ph4">`Boolean`</ph>, <ph id="ph5">`Byte`</ph>, <ph id="ph6">`Decimal`</ph>, <ph id="ph7">`Double`</ph>, <ph id="ph8">`Integer`</ph>, <ph id="ph9">`Long`</ph>, <ph id="ph10">`SByte`</ph>, <ph id="ph11">`Short`</ph>, <ph id="ph12">`Single`</ph>, <ph id="ph13">`UInteger`</ph>, <ph id="ph14">`ULong`</ph>, or <ph id="ph15">`UShort`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph>returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> is <ph id="ph4">`Boolean`</ph>, <ph id="ph5">`Byte`</ph>, <ph id="ph6">`Decimal`</ph>, <ph id="ph7">`Double`</ph>, <ph id="ph8">`Integer`</ph>, <ph id="ph9">`Long`</ph>, <ph id="ph10">`SByte`</ph>, <ph id="ph11">`Short`</ph>, <ph id="ph12">`Single`</ph>, <ph id="ph13">`UInteger`</ph>, <ph id="ph14">`ULong`</ph>, or <ph id="ph15">`UShort`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also returns <ph id="ph1">`True`</ph> if <ph id="ph2">`Expression`</ph> is a <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, or <ph id="ph5">`Object`</ph> that can be successfully converted to a number.</source>
          <target state="translated">Он также возвращает <ph id="ph1">`True`</ph> Если <ph id="ph2">`Expression`</ph> — <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, или <ph id="ph5">`Object`</ph> , преобразуется в число.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Expression`</ph> can contain non-numeric characters.</source>
          <target state="translated"><ph id="ph1">`Expression`</ph>может содержать алфавитно цифровые символы.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> is a string that contains a valid hexadecimal or octal number.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph>Возвращает <ph id="ph2">`True`</ph> Если <ph id="ph3">`Expression`</ph> является строка, содержащая допустимое шестнадцатеричное или восьмеричное число.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNumeric`</ph> also returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> contains a valid numeric expression that begins with a + or - character or contains commas.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph>также возвращает <ph id="ph2">`True`</ph> Если <ph id="ph3">`Expression`</ph> содержит допустимое числовое выражение, которое начинается с + или - символ или содержит запятые.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`False`</ph> if <ph id="ph3">`Expression`</ph> is of data type <ph id="ph4">`Date`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph>Возвращает <ph id="ph2">`False`</ph> Если <ph id="ph3">`Expression`</ph> относится к типу данных <ph id="ph4">`Date`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns <ph id="ph1">`False`</ph> if <ph id="ph2">`Expression`</ph> is a <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, or <ph id="ph5">`Object`</ph> that cannot be successfully converted to a number.</source>
          <target state="translated">Он возвращает <ph id="ph1">`False`</ph> Если <ph id="ph2">`Expression`</ph> — <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, или <ph id="ph5">`Object`</ph> , не может быть преобразован в число.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>выражение.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression can be evaluated as a number.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, может ли выражение обрабатываться как число.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression evaluates to a reference type.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, является ли выражение значение ссылочного типа.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`IsReference`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> represents a reference type, such as a class instance, a <ph id="ph4">`String`</ph> type, or an array of any type; otherwise, it returns <ph id="ph5">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsReference`</ph>Возвращает <ph id="ph2">`True`</ph> Если <ph id="ph3">`Expression`</ph> представляет ссылочным типом, например экземпляр класса <ph id="ph4">`String`</ph> типа или массив любого типа; в противном случае он возвращает <ph id="ph5">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>A reference type contains a pointer to data stored elsewhere in memory.</source>
          <target state="translated">Ссылочный тип содержит указатель на данные, хранящиеся в другом месте в памяти.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value type contains its own data.</source>
          <target state="translated">Тип значения содержит свои собственные данные.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>выражение.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether an expression evaluates to a reference type.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, является ли выражение значение ссылочного типа.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns the lowest available subscript for the indicated dimension of an array.</source>
          <target state="translated">Возвращает минимальный доступный индекс для указанного измерения массива.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</source>
          <target state="translated">Поскольку значения индексов массива начинаются с 0, минимальный доступный индекс для любой размерности всегда равен 0.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an array with the following dimensions, <ph id="ph1">`LBound`</ph> returns the values in the following table:      <ph id="ph2">```vb#   Dim a(100, 5, 4) As Byte   ```</ph>      |Call to LBound|Return value|   |--------------------|------------------|   |<ph id="ph3">`LBound(a, 1)`</ph>|0|   |<ph id="ph4">`LBound(a, 2)`</ph>|0|   |<ph id="ph5">`LBound(a, 3)`</ph>|0|</source>
          <target state="translated">Для массива со следующими измерениями <ph id="ph1">`LBound`</ph> возвращает значения в следующей таблице: <ph id="ph2">```vb#   Dim a(100, 5, 4) As Byte   ```</ph> | Вызов LBound | Возвращаемое значение |   |--------------------|------------------|   | <ph id="ph3">`LBound(a, 1)`</ph>|0|   | <ph id="ph4">`LBound(a, 2)`</ph>|0|   | <ph id="ph5">`LBound(a, 3)`</ph>|0|</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Array of any data type.</source>
          <target state="translated">Массив любого типа данных.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The array in which you want to find the lowest possible subscript of a dimension.</source>
          <target state="translated">Массив, в котором вы хотите найти минимального индекса измерения.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Необязательный параметр.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The dimension for which the lowest possible subscript is to be returned.</source>
          <target state="translated">Измерение, для которого возвращается минимальный индекс.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Use 1 for the first dimension, 2 for the second, and so on.</source>
          <target state="translated">Используйте 1 для первого измерения, 2 — для второго и т. д.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Rank`</ph> is omitted, 1 is assumed.</source>
          <target state="translated">Если <ph id="ph1">`Rank`</ph> — этот параметр опущен, используется значение 1.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The lowest value the subscript for the specified dimension can contain.</source>
          <target state="translated">Наименьшее значение может содержать индекс для указанного измерения.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_LBound" name="LBound" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> always returns 0 as long as <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p2">&lt;/code&gt;</ept> has been initialized, even if it has no elements, for example if it is a zero-length string.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_LBound" name="LBound" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>всегда возвращает значение 0, при условии, что <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">Array</ph> <ept id="p2">&lt;/code&gt;</ept> инициализации, даже если он не содержит элементов, например, если он является строкой нулевой длины.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_LBound" name="LBound" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> throws an &lt;xref:System.ArgumentNullException&gt;.</source>
          <target state="translated">If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_LBound" name="LBound" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> throws an &lt;xref:System.ArgumentNullException&gt;.&lt;/xref:System.ArgumentNullException&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Rank&lt;/code&gt;</ph> less than 1, or <ph id="ph2">&lt;code&gt;Rank&lt;/code&gt;</ph> is greater than the rank of <ph id="ph3">&lt;code&gt;Array&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Rank&lt;/code&gt;</ph>меньше 1 или <ph id="ph2">&lt;code&gt;Rank&lt;/code&gt;</ph> больше, чем ранг <ph id="ph3">&lt;code&gt;Array&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the RGB color code corresponding to the specified color number.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, представляющее цвет RGB, соответствующий указанному номеру цвета.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</source>
          <target state="translated">Начиная с наименьшего байта, возвращаемое значение указывает значения красного, зеленого и синего, используемые для установки соответствующего цвета в системе RGB, используемых в языке Visual Basic.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Color`</ph> argument has these settings.</source>
          <target state="translated"><ph id="ph1">`Color`</ph> Имеет следующие параметры.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Number|Color|Number|Color|   |------------|-----------|------------|-----------|   |0|Black|8|Gray|   |1|Blue|9|Light blue|   |2|Green|10|Light green|   |3|Cyan|11|Light cyan|   |4|Red|12|Light red|   |5|Magenta|13|Light magenta|   |6|Yellow|14|Light yellow|   |7|White|15|Bright white|</source>
          <target state="translated">| Номер | Цвет | Номер | Цвет |   |------------|-----------|------------|-----------|   |&amp;0; | Черный |&amp;8; | Серый |   |&amp;1; | Синий |&amp;9; | Темно-синий |   |&amp;2; | Зеленый |&amp;10; | Светло-зеленый |   |&amp;3; | Голубой |&amp;11; | Светло-голубой |   |&amp;4; | Красный |&amp;12; | Светло-красный |   |&amp;5; | Пурпурный |&amp;13; | Светло-пурпурный |   |&amp;6; | Желтый |&amp;14; | Светло-желтый |   |&amp;7; | Белый |&amp;15; | Яркий белый |</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A whole number in the range 0–15.</source>
          <target state="translated">Целое число в диапазоне от 0 до 15.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the RGB color code corresponding to the specified color number.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, представляющее цвет RGB, соответствующий указанному номеру цвета.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Color&lt;/code&gt;</ph> is outside of range 0 to 15, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Color&lt;/code&gt;</ph>находится вне диапазона 0 до 15 включительно.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing an RGB color value from a set of red, green and blue color components.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, представляющее значение RGB из набора компонентов красного, зеленого и синего цвета.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</source>
          <target state="translated">Методы и свойства, принимающие цвета приложения ожидают, что значение цвета спецификации число, представляющее RGB.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</source>
          <target state="translated">Значение RGB указывает относительную интенсивность красного, зеленого и синего цвета для отображения.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value for any argument to <ph id="ph1">`RGB`</ph> is greater than 255, 255 is used.</source>
          <target state="translated">Если значение любого из аргументов <ph id="ph1">`RGB`</ph> больше 255, используется значение 255.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists some standard colors and the red, green, and blue values they include.</source>
          <target state="translated">В следующей таблице перечислены некоторые стандартные цвета и красного, зеленого и синего значения, которые они содержат.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Color|Red value|Green value|Blue value|   |-----------|---------------|-----------------|----------------|   |Black|0|0|0|   |Blue|0|0|255|   |Green|0|255|0|   |Cyan|0|255|255|   |Red|255|0|0|   |Magenta|255|0|255|   |Yellow|255|255|0|   |White|255|255|255|</source>
          <target state="translated">| Цвет | Значение красного | Зеленый значение | Синий значение |   |-----------|---------------|-----------------|----------------|   | Черный |&amp;0; |&amp;0; |&amp;0; |   | Синий |&amp;0; |&amp;0; |&amp;255; |   | Зеленый |&amp;0; |&amp;255; |&amp;0; |   | Голубой |&amp;0; |&amp;255; |&amp;255; |   | Красный |&amp;255; |&amp;0; |&amp;0; |   | Пурпурный |&amp;255; |&amp;0; |&amp;255; |   | Желтый |&amp;255; |&amp;255; |&amp;0; |   | Белый |&amp;255; |&amp;255; |&amp;255; |</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the range 0–255, inclusive, that represents the intensity of the red component of the color.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>в диапазоне от 0 до 255 включительно представляющее интенсивность красного компонента цвета.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the range 0–255, inclusive, that represents the intensity of the green component of the color.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>в диапазоне от 0 до 255 включительно представляющее интенсивность зеленого компонента цвета.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>в диапазоне от 0 до 255 включительно представляющее интенсивность синего компонента цвета.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing an RGB color value from a set of red, green and blue color components.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, представляющее значение RGB из набора компонентов красного, зеленого и синего цвета.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Green&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;Blue&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;Red&lt;/code&gt;</ph> is outside of range 0 to 255, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Green&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;Blue&lt;/code&gt;</ph>, или <ph id="ph3">&lt;code&gt;Red&lt;/code&gt;</ph> выходит за пределы диапазона от 0 до 255 включительно.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the system data type name of a variable.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, содержащее имя системного типа данных переменной.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`SystemTypeName`</ph> returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</source>
          <target state="translated"><ph id="ph1">`SystemTypeName`</ph>Возвращает полное общих языка среды выполнения (CLR) имя типа с именем типа Visual Basic.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`VbName`</ph> contains "Date", <ph id="ph2">`SystemTypeName`</ph> returns "System.DateTime".</source>
          <target state="translated">Например если <ph id="ph1">`VbName`</ph> содержит «Date», <ph id="ph2">`SystemTypeName`</ph> возвращает «System.DateTime».</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`SystemTypeName`</ph> does not recognize the value of <ph id="ph2">`VbName`</ph>, it returns <ph id="ph3">`Nothing`</ph> (not the string "Nothing").</source>
          <target state="translated">Если <ph id="ph1">`SystemTypeName`</ph> не распознает значение <ph id="ph2">`VbName`</ph>, она возвращает <ph id="ph3">`Nothing`</ph> (не строка «Nothing»).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable containing a Visual Basic type name.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> переменная, содержащая имя типа Visual Basic.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the system data type name of a variable.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, содержащее имя системного типа данных переменной.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing data-type information about a variable.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, содержащее тип данных переменной.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the <ph id="ph1">`String`</ph> values returned by <ph id="ph2">`TypeName`</ph> for different contents of <ph id="ph3">`VarName`</ph>.</source>
          <target state="translated">В следующей таблице показаны <ph id="ph1">`String`</ph> значения, возвращаемые методом <ph id="ph2">`TypeName`</ph> для различного содержимого <ph id="ph3">`VarName`</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>|<ph id="ph1">`VarName`</ph> contents|String returned|   |------------------------|---------------------|   |16-bit <ph id="ph2">`True`</ph> or <ph id="ph3">`False`</ph> value type|"Boolean"|   |8-bit binary value type|"Byte"|   |16-bit character value type|"Char"|   |64-bit date and time value type|"Date"|   |Reference type indicating missing or nonexistent data|"DBNull"|   |128-bit fixed-point numeric value type|"Decimal"|   |64-bit floating-point numeric value type|"Double"|   |32-bit integer value type|"Integer"|   |Reference type pointing to an unspecialized object|"Object"|   |Reference type pointing to a specialized object created from class <bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept>|"<bpt id="p2">*</bpt>objectclass<ept id="p2">*</ept>"|   |64-bit integer value type|"Long"|   |Reference type with no object currently assigned to it|"Nothing"|   |8-bit signed integer value type|"SByte"|   |16-bit integer value type|"Short"|   |32-bit floating-point numeric value type|"Single"|   |Reference type pointing to a string of 16-bit characters|"String"|   |32-bit unsigned integer value type|"UInteger"|   |64-bit unsigned integer value type|"ULong"|   |16-bit unsigned integer value type|"UShort"|       If <ph id="ph4">`VarName`</ph> is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</source>
          <target state="translated">| <ph id="ph1">`VarName`</ph> содержимое | Возвращаемая строка |   |------------------------|---------------------|   | 16-разрядное <ph id="ph2">`True`</ph> или <ph id="ph3">`False`</ph> тип значения |» Логическое» |   | Тип 8-разрядное двоичное значение |» Байт» |   | Тип значения 16-разрядный символ |» Char» |   | Тип значения в 64-разрядных даты и времени |» Дата» |   | Указывает на отсутствующий или несуществующий данных тип ссылки |» Значение DBNull» |   | числовое значение с фиксированной запятой 128-разрядный тип |» Десятичное число» |   | Тип 64-разрядное значение с плавающей запятой числовые |» Двойные» |   | Тип 32-разрядное целое значение |» Целое число со знаком» |   | Ссылаться на тип, указывающий на неспециализированный объект |» Объект» |   | Ссылаться на тип, указывающий на специализированный объект, созданный из класса <bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept>|» <bpt id="p2">*</bpt>objectclass<ept id="p2">*</ept>» |   | Тип 64-разрядное целое значение |» Long» |   | Ссылаться на тип ни один из объектов в настоящее время назначено |» Nothing» |   | Тип значения 8-разрядное целое число со знаком |» SByte» |   | Тип 16-разрядное целое значение |» Короткий» |   | Тип 32-разрядное числовое значение с плавающей запятой |» Один» |   | Ссылаться на тип, указывающий на строку 16-разрядных символах |» Строка» |   | Тип значения для 32-разрядное целое число без знака |» UInteger» |   | Тип значения 64-разрядное целое число без знака |» ULong» |   | Тип значения 16-разрядное целое число без знака |» UShort» |       Если <ph id="ph4">`VarName`</ph> является массивом, возвращаемая строка может быть одной из строк в таблице выше с пустыми скобками.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`VarName`</ph> points to an array of integers, <ph id="ph2">`TypeName`</ph> returns "Integer()".</source>
          <target state="translated">Например если <ph id="ph1">`VarName`</ph> указывает на массив целых чисел, <ph id="ph2">`TypeName`</ph> возвращает «Integer()».</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`TypeName`</ph> returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</source>
          <target state="translated">Если <ph id="ph1">`TypeName`</ph> возвращает имя ссылочного типа, например класс, она возвращает только имя, не полное имя.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`VarName`</ph> points to an object of class &lt;xref:System.Drawing.Printing.PaperSource?displayProperty=fullName&gt;, <ph id="ph2">`TypeName`</ph> returns "PaperSource".</source>
          <target state="translated">Например если <ph id="ph1">`VarName`</ph> указывает на объект класса &lt;xref:System.Drawing.Printing.PaperSource?displayProperty=fullName&gt;, <ph id="ph2">`TypeName`</ph> возвращает «PaperSource».&lt;/xref:System.Drawing.Printing.PaperSource?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, <ph id="ph1">`TypeName`</ph> returns "Nothing".</source>
          <target state="translated">Обратите внимание, что если переменная объявлена с определенным типом класса, но не назначен объект, <ph id="ph1">`TypeName`</ph> возвращает «Nothing».</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>переменная.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_Option Strict" name="Option Strict" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Off" name="Off" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, you can pass a variable of any data type except a structure.</source>
          <target state="translated">Если <bpt id="p1">&lt;xref uid="langword_csharp_Option Strict" name="Option Strict" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> — <bpt id="p2">&lt;xref uid="langword_csharp_Off" name="Off" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, можно передать переменную любого типа данных, за исключением структуры.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing data-type information about a variable.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, содержащее тип данных переменной.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Returns the highest available subscript for the indicated dimension of an array.</source>
          <target state="translated">Возвращает наибольший доступный индекс для указанного измерения массива.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Array of any data type.</source>
          <target state="translated">Массив любого типа данных.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The array in which you want to find the highest possible subscript of a dimension.</source>
          <target state="translated">Массив, в котором вы хотите найти наибольшего индекса измерения.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Необязательный параметр.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The dimension for which the highest possible subscript is to be returned.</source>
          <target state="translated">Измерение, для которого возвращается максимальный индекс.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Use 1 for the first dimension, 2 for the second, and so on.</source>
          <target state="translated">Используйте 1 для первого измерения, 2 — для второго и т. д.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Rank`</ph> is omitted, 1 is assumed.</source>
          <target state="translated">Если <ph id="ph1">`Rank`</ph> — этот параметр опущен, используется значение 1.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The highest value the subscript for the specified dimension can contain.</source>
          <target state="translated">Самое большое значение может содержать индекс для указанного измерения.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p1">&lt;/code&gt;</ept> has only one element, <bpt id="p2">&lt;xref uid="langword_csharp_UBound" name="UBound" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> returns 0.</source>
          <target state="translated">Если <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Array</ph> <ept id="p1">&lt;/code&gt;</ept> содержит только один элемент <bpt id="p2">&lt;xref uid="langword_csharp_UBound" name="UBound" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> возвращает 0.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Array</ph><ept id="p1">&lt;/code&gt;</ept> has no elements, for example if it is a zero-length string, <bpt id="p2">&lt;xref uid="langword_csharp_UBound" name="UBound" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> returns -1.</source>
          <target state="translated">Если <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Array</ph> <ept id="p1">&lt;/code&gt;</ept> не содержит элементов, например, если он является строкой нулевой длины <bpt id="p2">&lt;xref uid="langword_csharp_UBound" name="UBound" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> возвращает -1.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Rank&lt;/code&gt;</ph> is less than 1, or <ph id="ph2">&lt;code&gt;Rank&lt;/code&gt;</ph> is greater than the rank of <ph id="ph3">&lt;code&gt;Array&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Rank&lt;/code&gt;</ph>меньше 1 или <ph id="ph2">&lt;code&gt;Rank&lt;/code&gt;</ph> больше, чем ранг <ph id="ph3">&lt;code&gt;Array&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the data type classification of a variable.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, содержащее классификацию типа данных переменной.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The integer value returned by <ph id="ph1">`VarType`</ph> is a member of the &lt;xref:Microsoft.VisualBasic.VariantType&gt;.</source>
          <target state="translated">Целочисленное значение, возвращаемое <ph id="ph1">`VarType`</ph> является членом &lt;xref:Microsoft.VisualBasic.VariantType&gt;.&lt;/xref:Microsoft.VisualBasic.VariantType&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the values returned by <ph id="ph1">`VarType`</ph> for special cases of <ph id="ph2">`VarName`</ph>.</source>
          <target state="translated">В следующей таблице показаны значения, возвращаемые методом <ph id="ph1">`VarType`</ph> для особых случаев <ph id="ph2">`VarName`</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Data type represented by <ph id="ph1">`VarName`</ph>|Value returned by <ph id="ph2">`VarType`</ph>|   |----------------------------------------|---------------------------------|   |<bpt id="p1">[</bpt>Nothing<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph3">|</ph><ph id="ph4">`VariantType.Object`</ph>|   |&lt;xref:System.DBNull&gt;|<ph id="ph5">`VariantType.Null`</ph>|   |Enumeration|Underlying data type (<ph id="ph6">`SByte`</ph>, <ph id="ph7">`Byte`</ph>, <ph id="ph8">`Short`</ph>, <ph id="ph9">`UShort`</ph>, <ph id="ph10">`Integer`</ph>, <ph id="ph11">`UInteger`</ph>, <ph id="ph12">`Long`</ph>, or <ph id="ph13">`ULong`</ph>)|   |Array|Bitwise OR of array element type and <ph id="ph14">`VariantType.Array`</ph>|   |Array of arrays|Bitwise OR of <ph id="ph15">`VariantType.Object`</ph> and <ph id="ph16">`VariantType.Array`</ph>|   |Structure (&lt;xref:System.ValueType?displayProperty=fullName&gt;)|<ph id="ph17">`VariantType.UserDefinedType`</ph>|   |&lt;xref:System.Exception&gt;|<ph id="ph18">`VariantType.Error`</ph>|   |Unknown|<ph id="ph19">`VariantType.Object`</ph><ph id="ph20">|</ph></source>
          <target state="translated">| Тип данных, представленный <ph id="ph1">`VarName`</ph>| Значение, возвращаемое <ph id="ph2">`VarType`</ph>|   |----------------------------------------|---------------------------------|   | <bpt id="p1">[</bpt>Nothing<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph3">|</ph><ph id="ph4">`VariantType.Object`</ph>|   | &lt;xref:System.DBNull&gt;| <ph id="ph5">`VariantType.Null`</ph>|   | Перечисление | Underlying data type (<ph id="ph6">`SByte`</ph>, <ph id="ph7">`Byte`</ph>, <ph id="ph8">`Short`</ph>, <ph id="ph9">`UShort`</ph>, <ph id="ph10">`Integer`</ph>, <ph id="ph11">`UInteger`</ph>, <ph id="ph12">`Long`</ph>, or <ph id="ph13">`ULong`</ph>)|   | Массив | Побитовый оператор или тип элемента массива и <ph id="ph14">`VariantType.Array`</ph>|   | Массив массивов | Побитовое или <ph id="ph15">`VariantType.Object`</ph> и <ph id="ph16">`VariantType.Array`</ph>|   | Структура (&lt;xref:System.ValueType?displayProperty=fullName&gt;) |<ph id="ph17">`VariantType.UserDefinedType`</ph>|   | &lt;xref:System.Exception&gt;| <ph id="ph18">`VariantType.Error`</ph>|   | Неизвестный | <ph id="ph19">`VariantType.Object`</ph><ph id="ph20">|</ph>&lt;/xref:System.Exception&gt;&lt;/xref:System.ValueType?displayProperty=fullName&gt;&lt;/xref:System.DBNull&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>переменная.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_Option Strict" name="Option Strict" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Off" name="Off" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, you can pass a variable of any data type except a structure.</source>
          <target state="translated">Если <bpt id="p1">&lt;xref uid="langword_csharp_Option Strict" name="Option Strict" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> — <bpt id="p2">&lt;xref uid="langword_csharp_Off" name="Off" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, можно передать переменную любого типа данных, за исключением структуры.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the data type classification of a variable.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, содержащее классификацию типа данных переменной.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the Visual Basic data type name of a variable.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, содержащее имя типа данных Visual Basic переменной.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`VbTypeName`</ph> returns the Visual Basic type name corresponding to the common language runtime type name.</source>
          <target state="translated"><ph id="ph1">`VbTypeName`</ph>Возвращает имя типа Visual Basic, соответствующее имя типа среды выполнения.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`UrtName`</ph> contains "Int32" or "System.Int32", <ph id="ph2">`VbTypeName`</ph> returns "Integer".</source>
          <target state="translated">Например если <ph id="ph1">`UrtName`</ph> содержит «Int32» или «System.Int32» <ph id="ph2">`VbTypeName`</ph> возвращает «Integer».</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`VbTypeName`</ph> does not recognize the value of <ph id="ph2">`UrtName`</ph>, it returns <ph id="ph3">`Nothing`</ph> (not the string "Nothing").</source>
          <target state="translated">Если <ph id="ph1">`VbTypeName`</ph> не распознает значение <ph id="ph2">`UrtName`</ph>, она возвращает <ph id="ph3">`Nothing`</ph> (не строка «Nothing»).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type name in <ph id="ph1">`UrtName`</ph> can be obtained from various sources, for example from the &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property in the &lt;xref:System.Reflection.MemberInfo&gt; array of the &lt;xref:System.Type&gt; class.</source>
          <target state="translated">Имя типа в <ph id="ph1">`UrtName`</ph> можно получить из разных источников, например из &lt;xref:System.Reflection.MemberInfo.Name%2A&gt;Свойства в &lt;xref:System.Reflection.MemberInfo&gt;массив объектов &lt;xref:System.Type&gt;класса.&lt;/xref:System.Type&gt; &lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Reflection.MemberInfo.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный параметр.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variable containing a type name used by the common language runtime.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>переменная, содержащая имя типа, используемое средой CLR.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value containing the Visual Basic data type name of a variable.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, содержащее имя типа данных Visual Basic переменной.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>