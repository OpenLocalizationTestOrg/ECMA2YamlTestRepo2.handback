<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5908d5d0edd2c520f9df0e5663e637eb8e199687</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Transactions.TransactionScope.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">780eb8f19bcee5437f98a20277d66953ec266a66</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0efb73e31bab693ae5bcf0057da20fea807e1bf7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Makes a code block transactional.</source>
          <target state="translated">Делает блок кода транзакционным.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Transactions&gt; infrastructure provides both an explicit programming model based on the &lt;xref:System.Transactions.Transaction&gt; class, as well as an implicit programming model using the TransactionScope class, in which transactions are automatically managed by the infrastructure.</source>
          <target state="translated">&lt;xref:System.Transactions&gt;Инфраструктура предоставляет как модель явного программирования на основе &lt;xref:System.Transactions.Transaction&gt;класса, а также модель неявного программирования, использование класса TransactionScope, в котором транзакции автоматически управляются инфраструктурой.&lt;/xref:System.Transactions.Transaction&gt; &lt;/xref:System.Transactions&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  It is recommended that you create implicit transactions using the TransactionScope class, so that the ambient transaction context is automatically managed for you.</source>
          <target state="translated">Настроек <ph id="ph1">[!IMPORTANT]</ph> настроек рекомендуется создавать неявные транзакции, использование класса TransactionScope, чтобы контекст внешней транзакции автоматически осуществляется.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should also use the TransactionScope and &lt;xref:System.Transactions.DependentTransaction&gt; class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</source>
          <target state="translated">Также следует использовать TransactionScope и &lt;xref:System.Transactions.DependentTransaction&gt;классов для приложений, которые требуют использования одной транзакции между несколькими вызовами функции или вызовов нескольких потоков.&lt;/xref:System.Transactions.DependentTransaction&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on this model, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">Дополнительные сведения об этой модели см. в разделе <bpt id="p1">[</bpt>реализации неявные транзакции с помощью области транзакции<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on writing a transactional application, see <bpt id="p1">[</bpt>Writing A Transactional Application<ept id="p1">](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8)</ept>.</source>
          <target state="translated">Дополнительные сведения о создании транзакционного приложения см. в разделе <bpt id="p1">[</bpt>записи транзакционного приложения<ept id="p1">](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon instantiating a TransactionScope by the <ph id="ph1">`new`</ph> statement, the transaction manager determines which transaction to participate in.</source>
          <target state="translated">После создания экземпляра TransactionScope с <ph id="ph1">`new`</ph> инструкции, диспетчер транзакций определяет, какой транзакции для участия в.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once determined, the scope always participates in that transaction.</source>
          <target state="translated">После определения область всегда участвует в этой транзакции.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision is based on two factors: whether an ambient transaction is present and the value of the <ph id="ph1">`TransactionScopeOption`</ph> parameter in the constructor.</source>
          <target state="translated">Решение на основе двух факторов: присутствует ли внешнюю транзакцию и значение <ph id="ph1">`TransactionScopeOption`</ph> параметр в конструкторе.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ambient transaction is the transaction your code executes in.</source>
          <target state="translated">Внешнюю транзакцию является код выполняется в транзакции.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can obtain a reference to the ambient transaction by calling the static &lt;xref:System.Transactions.Transaction.Current%2A&gt; property of the &lt;xref:System.Transactions.Transaction&gt; class.</source>
          <target state="translated">Ссылка на внешнюю транзакцию можно получить, вызвав статическое &lt;xref:System.Transactions.Transaction.Current%2A&gt;свойство &lt;xref:System.Transactions.Transaction&gt;класса.&lt;/xref:System.Transactions.Transaction&gt; &lt;/xref:System.Transactions.Transaction.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on how this parameter is used, please see the "Transaction Flow Management" section of the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">Дополнительные сведения об использовании этого параметра см. в разделе «Управление потока транзакций» из <bpt id="p1">[</bpt>реализации неявные транзакции с помощью области транзакции<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no exception occurs within the transaction scope (that is, between the initialization of the TransactionScope object and the calling of its &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; method), then the transaction in which the scope participates is allowed to proceed.</source>
          <target state="translated">Если исключение не возникает в области транзакции (то есть, между инициализации TransactionScope объекта и вызовом его &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;метод), то транзакции, в которой участвует область будет разрешено перейти.&lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception does occur within the transaction scope, the transaction in which it participates will be rolled back.</source>
          <target state="translated">Если в области транзакции возникает исключение, транзакция, в которой участвует будет выполнен откат.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When your application completes all work it wants to perform in a transaction, you should call the &lt;xref:System.Transactions.TransactionScope.Complete%2A&gt; method only once to inform that transaction manager that it is acceptable to commit the transaction.</source>
          <target state="translated">После завершения всей работы приложения необходимо выполнить в транзакции, следует вызвать &lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;метод только один раз, чтобы информировать диспетчер транзакций, что будет допустимо зафиксировать транзакцию.&lt;/xref:System.Transactions.TransactionScope.Complete%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call this method aborts the transaction.</source>
          <target state="translated">Если вызвать этот метод, транзакция прерывается.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to the &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; method marks the end of the transaction scope.</source>
          <target state="translated">Вызов &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;метод Отмечает конец области транзакции.&lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions that occur after calling this method may not affect the transaction.</source>
          <target state="translated">Исключения, возникающие после вызова этого метода могут не воздействовать на транзакцию.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you modify the value of &lt;xref:System.Transactions.Transaction.Current%2A&gt; inside a scope, an exception is thrown when &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; is called.</source>
          <target state="translated">Если изменить значение &lt;xref:System.Transactions.Transaction.Current%2A&gt;внутри области, создается исключение при &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;называется.&lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt; &lt;/xref:System.Transactions.Transaction.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, at the end of the scope, the previous value is restored.</source>
          <target state="translated">Однако в конце области восстанавливается предыдущее значение.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, if you call &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt; on &lt;xref:System.Transactions.Transaction.Current%2A&gt; inside a transaction scope that created the transaction, the transaction aborts at the end of the scope.</source>
          <target state="translated">Кроме того, при вызове метода &lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;на &lt;xref:System.Transactions.Transaction.Current%2A&gt;внутри области транзакции, создавший транзакцию, транзакция будет прервана в конце области.&lt;/xref:System.Transactions.Transaction.Current%2A&gt; &lt;/xref:System.Transactions.TransactionScope.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates a new transaction scope with the transaction scope option equal to &lt;xref:System.Transactions.TransactionScopeOption&gt;.</source>
          <target state="translated">Этот конструктор создает новую область транзакции с параметром области транзакции равно &lt;xref:System.Transactions.TransactionScopeOption&gt;.&lt;/xref:System.Transactions.TransactionScopeOption&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that a transaction is required by the new scope and the ambient transaction is used if one already exists.</source>
          <target state="translated">Это означает, что транзакция запрашивается новой областью и внешняя транзакция используется в том случае, если он уже существует.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it creates a new transaction before entering the scope.</source>
          <target state="translated">В противном случае он создает новую транзакцию до ввода области.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified asynchronous flow option.</source>
          <target state="translated">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с параметром указанный асинхронный поток.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified requirements.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с указанным требованиям.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с указанным значением времени ожидания и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;После которого области транзакции, время ожидания и транзакция прерывается.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value and requirements.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> с указанным значением времени ожидания и требования.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;После которого области транзакции, время ожидания и транзакция прерывается.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified requirements.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с указанным требованиям.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">`transactionOptions`</ph> parameter to specify an &lt;xref:System.Transactions.IsolationLevel&gt;, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</source>
          <target state="translated">При использовании <ph id="ph1">`transactionOptions`</ph> для указания &lt;xref:System.Transactions.IsolationLevel&gt;и область создает транзакцию позже, новую транзакцию связан с указанным уровнем изоляции.&lt;/xref:System.Transactions.IsolationLevel&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</source>
          <target state="translated">Если уровень изоляции передается вместе с транзакцией, транзакция должна иметь такой же уровень изоляции, или возникает исключение.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that describes the transaction options to use if a new transaction is created.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> структура, описывающая параметры транзакции для использования, если создана новая транзакция.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</source>
          <target state="translated">Если используется существующей транзакции, значение времени ожидания в этот параметр применяется к области транзакции.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If that time expires before the scope is disposed, the transaction is aborted.</source>
          <target state="translated">Если это время истекает до удаления области, транзакция прерывается.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified requirements and asynchronous flow option.</source>
          <target state="translated">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класс с указанным требованиям и параметр асинхронного потока.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value and COM+ interoperability requirements, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> с указанным значением времени ожидания и COM + требования в отношении взаимодействия и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This method uses &lt;xref:System.Security.Permissions.SecurityAction&gt; to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph1">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>Примечание<ept id="p1">**</ept> этот метод использует &lt;xref:System.Security.Permissions.SecurityAction&gt;для предотвращения вызова от ненадежного кода, однако требуется только непосредственно вызывающего метода должны обладать; <ph id="ph1">`FullTrust`</ph> набор разрешений.&lt;/xref:System.Security.Permissions.SecurityAction&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;После которого области транзакции, время ожидания и транзакция прерывается.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.EnterpriseServicesInteropOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes how the associated transaction interacts with COM+ transactions.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.EnterpriseServicesInteropOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисления, которое описывает взаимодействие со связанной транзакцией с транзакциями COM +.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с указанным значением времени ожидания и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;После которого области транзакции, время ожидания и транзакция прерывается.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified timeout value, requirements, and asynchronous flow option.</source>
          <target state="translated">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с указанным значением времени ожидания, требования и параметр асинхронного потока.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;После которого области транзакции, время ожидания и транзакция прерывается.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified scope and COM+ interoperability requirements, and transaction options.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с заданной областью и требованиями к взаимодействию с COM + и параметров транзакции.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">`transactionOptions`</ph> parameter to specify an &lt;xref:System.Transactions.IsolationLevel&gt;, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</source>
          <target state="translated">При использовании <ph id="ph1">`transactionOptions`</ph> для указания &lt;xref:System.Transactions.IsolationLevel&gt;и область создает транзакцию позже, новую транзакцию связан с указанным уровнем изоляции.&lt;/xref:System.Transactions.IsolationLevel&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</source>
          <target state="translated">Если уровень изоляции передается вместе с транзакцией, транзакция должна иметь такой же уровень изоляции, или возникает исключение.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This method uses &lt;xref:System.Security.Permissions.SecurityAction&gt; to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph1">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>Примечание<ept id="p1">**</ept> этот метод использует &lt;xref:System.Security.Permissions.SecurityAction&gt;для предотвращения вызова от ненадежного кода, однако требуется только непосредственно вызывающего метода должны обладать; <ph id="ph1">`FullTrust`</ph> набор разрешений.&lt;/xref:System.Security.Permissions.SecurityAction&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that describes the transaction options to use if a new transaction is created.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> структура, описывающая параметры транзакции для использования, если создана новая транзакция.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</source>
          <target state="translated">Если используется существующей транзакции, значение времени ожидания в этот параметр применяется к области транзакции.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If that time expires before the scope is disposed, the transaction is aborted.</source>
          <target state="translated">Если это время истекает до удаления области, транзакция прерывается.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.EnterpriseServicesInteropOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes how the associated transaction interacts with COM+ transactions.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.EnterpriseServicesInteropOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисления, которое описывает взаимодействие со связанной транзакцией с транзакциями COM +.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]       Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified requirements and asynchronous flow option.</source>
          <target state="translated">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класс с указанным требованиям и параметр асинхронного потока.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that describes the transaction options to use if a new transaction is created.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Transactions.TransactionOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> структура, описывающая параметры транзакции для использования, если создана новая транзакция.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</source>
          <target state="translated">Если используется существующей транзакции, значение времени ожидания в этот параметр применяется к области транзакции.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If that time expires before the scope is disposed, the transaction is aborted.</source>
          <target state="translated">Если это время истекает до удаления области, транзакция прерывается.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;xref href="System.Transactions.TransactionScopeAsyncFlowOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Indicates that all operations within the scope are completed successfully.</source>
          <target state="translated">Указывает на успешное завершение всех операций в области.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are satisfied that all operations within the scope are completed successfully, you should call this method only once to inform that transaction manager that the state across all resources is consistent, and the transaction can be committed.</source>
          <target state="translated">После успешного завершения всех операций в области, то этот метод следует вызывать только один раз для информирования этим диспетчером транзакций согласованного состояния во всех ресурсах, что транзакция может быть зафиксирована.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is very good practice to put the call as the last statement in the <ph id="ph1">`using`</ph> block.</source>
          <target state="translated">Его рекомендуется очень хорошо поместите вызов в последнем операторе в <ph id="ph1">`using`</ph> блока.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on how this method is used, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">Дополнительные сведения об использовании этого метода см. в разделе <bpt id="p1">[</bpt>реализации неявные транзакции с помощью области транзакции<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call this method aborts the transaction, because the transaction manager interprets this as a system failure, or exceptions thrown within the scope of transaction.</source>
          <target state="translated">Если вызвать этот метод, транзакция прерывается, поскольку диспетчер транзакций интерпретирует это как сбой системы или исключений, создаваемых в пределах области транзакции.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you should also note that calling this method does not guarantee a commit of the transaction.</source>
          <target state="translated">Однако следует также отметить, что вызов этого метода не гарантирует фиксации транзакции.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is merely a way of informing the transaction manager of your status.</source>
          <target state="translated">Это просто способ информирования диспетчера транзакций о состоянии.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling this method, you can no longer access the ambient transaction via the &lt;xref:System.Transactions.Transaction.Current%2A&gt; property, and trying to do so results in an exception being thrown.</source>
          <target state="translated">После вызова этого метода, больше не доступны через внешнюю транзакцию &lt;xref:System.Transactions.Transaction.Current%2A&gt;Свойства, а также при попытке сделать это произойдет исключение.&lt;/xref:System.Transactions.Transaction.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual work of commit between the resources manager happens at the <ph id="ph1">`End Using`</ph> statement if the &lt;xref:System.Transactions.TransactionScope&gt; object created the transaction.</source>
          <target state="translated">Фактические трудозатраты фиксации между диспетчером ресурсов осуществляется по <ph id="ph1">`End Using`</ph> инструкции Если &lt;xref:System.Transactions.TransactionScope&gt;создать объект транзакции.&lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it did not create the transaction, the commit occurs whenever &lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt; is called by the owner of the &lt;xref:System.Transactions.CommittableTransaction&gt; object.</source>
          <target state="translated">Если он не создавал транзакции, фиксация происходит при каждом вызове &lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;вызывается владельцем &lt;xref:System.Transactions.CommittableTransaction&gt;объекта.&lt;/xref:System.Transactions.CommittableTransaction&gt; &lt;/xref:System.Transactions.CommittableTransaction.Commit%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>At that point the Transaction Manager calls the resource managers and informs them to either commit or rollback, based on whether this method was called on the &lt;xref:System.Transactions.TransactionScope&gt; object.</source>
          <target state="translated">На этом этапе диспетчер транзакций вызывает диспетчеры ресурсов и о том, для фиксации или отката, в зависимости от того, является ли этот метод был вызван для &lt;xref:System.Transactions.TransactionScope&gt;объекта.&lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This method has already been called once.</source>
          <target state="translated">Этот метод уже был вызван один раз.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Ends the transaction scope.</source>
          <target state="translated">Завершает область транзакции.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method marks the end of the transaction scope.</source>
          <target state="translated">Вызов этого метода отмечает конец области транзакции.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Transactions.TransactionScope&gt; object created the transaction and &lt;xref:System.Transactions.TransactionScope.Complete%2A&gt; was called on the scope, the &lt;xref:System.Transactions.TransactionScope&gt; object attempts to commit the transaction when this method is called.</source>
          <target state="translated">Если &lt;xref:System.Transactions.TransactionScope&gt;создать объект транзакции и &lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;был вызван для области, &lt;xref:System.Transactions.TransactionScope&gt;объект пытается зафиксировать транзакцию, при вызове этого метода.&lt;/xref:System.Transactions.TransactionScope&gt; &lt;/xref:System.Transactions.TransactionScope.Complete%2A&gt; &lt;/xref:System.Transactions.TransactionScope&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the C# <ph id="ph1">`using`</ph> construction ensures that this method is called even if an exception occurs.</source>
          <target state="translated">Использование C# <ph id="ph1">`using`</ph> конструкции гарантирует, что этот метод вызывается, даже при возникновении исключения.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions that occur after calling this method may not affect the transaction.</source>
          <target state="translated">Исключения, возникающие после вызова этого метода могут не воздействовать на транзакцию.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method also restores the ambient transaction to it original state.</source>
          <target state="translated">Этот метод также восстанавливает внешнюю транзакцию в ее исходное состояние.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Transactions.TransactionAbortedException&gt; is thrown if the transaction is not actually committed.</source>
          <target state="translated">Объект &lt;xref:System.Transactions.TransactionAbortedException&gt;создается, если транзакция выполняется не фактически.&lt;/xref:System.Transactions.TransactionAbortedException&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is synchronous and blocks until the transaction has been committed or aborted.</source>
          <target state="translated">Этот метод является синхронным и блокирует до транзакция зафиксирована или прервана.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</source>
          <target state="translated">По этой причине следует очень внимательно использовать этот метод в приложении Windows Form (WinForm) или может возникнуть взаимоблокировка.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt; method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</source>
          <target state="translated">Если вызвать этот метод в одно событие управления WinForm (например, нажатие кнопки) и использовать синхронные &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;метод для прямого управления для выполнения некоторых задач пользовательского интерфейса (например, изменения цветов) в ходе обработки транзакций, произойдет взаимоблокировка.&lt;/xref:System.Windows.Forms.Control.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt; method is synchronous and blocks the worker thread until the UI thread finishes its job.</source>
          <target state="translated">Это вызвано &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;метод является синхронным и блокирует рабочий поток, пока поток пользовательского интерфейса не завершит свою работу.&lt;/xref:System.Windows.Forms.Control.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</source>
          <target state="translated">Однако в нашем сценарии поток пользовательского интерфейса также ждет, пока рабочий поток зафиксировать транзакцию.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</source>
          <target state="translated">Результат — что не сможет продолжить работу, и область бесконечно ожидает завершения фиксирования.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use &lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt; rather than &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt; wherever possible, because it is asynchronous and thus less prone to deadlock.</source>
          <target state="translated">Следует использовать &lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;вместо &lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;везде, где это возможно, поскольку он является асинхронным и, таким образом менее подвержены возникновению взаимоблокировки.&lt;/xref:System.Windows.Forms.Control.Invoke%2A&gt; &lt;/xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on how this method is used, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.</source>
          <target state="translated">Дополнительные сведения об использовании этого метода см. в разделе <bpt id="p1">[</bpt>реализации неявные транзакции с помощью области транзакции<ept id="p1">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> раздела.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>