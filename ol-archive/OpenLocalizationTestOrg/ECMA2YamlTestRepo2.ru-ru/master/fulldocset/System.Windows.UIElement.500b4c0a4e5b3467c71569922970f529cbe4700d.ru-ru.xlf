<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">622666fe3f8113d23c72052accb71885003cda5f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.UIElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61a41fb4c1cff3162275bb0fb29f0377eadd923d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61e81a5ed112cb763bdff1f73c0fa5ef7a296661</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>UIElement is a base class for WPF core level implementations building on <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> elements and basic presentation characteristics.</source>
          <target state="translated">Элементов пользовательского интерфейса — базовый класс для реализаций уровня ядра WPF, основаны <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> элементов и базовых характеристиках представления.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>UIElement provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</source>
          <target state="translated">Элементов пользовательского интерфейса служит отправной точкой для характеристик структуры элементов, а также представляет виртуальные методы, которые производные классы могут переопределять, влияющие макета, визуализации поведение элемента и его дочерних элементов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Much of the input and focusing behavior for elements in general is also defined in the UIElement class.</source>
          <target state="translated">Большую часть входных данных и поведение для элементов фокусировки в целом также определяется в классе элементов пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes the events for keyboard, mouse and stylus input, and related status properties.</source>
          <target state="translated">Сюда входят события клавиатуры, мыши и ввод от пера и свойства связанных состояния.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</source>
          <target state="translated">Многие из этих событий перенаправленных событий и многие события ввода имеют оба восходящей маршрутизацией версии, а также туннелирования версию события.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>These paired events are typically the events of greatest interest to control authors.</source>
          <target state="translated">Такие парные события обычно представляют наибольший интерес для разработчиков элементов управления.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>UIElement also includes <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> that relate to the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> event model, including methods that can raise specified routed events that are sourced from an element instance.</source>
          <target state="translated">Также включает UIElement <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> , которые связаны с <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> модель событий, включая методы, которые могут вызывать указанные перенаправленных событий, которые получают данные из экземпляра элемента.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In terms of architecture, UIElement can be considered roughly equivalent to a window handle in <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> programming, or an Element in <ph id="ph2">[!INCLUDE[TLA#tla_dhtml](~/add/includes/tlasharptla-dhtml-md.md)]</ph> programming.</source>
          <target state="translated">С точки зрения архитектуры элементов пользовательского интерфейса можно считать приблизительно эквивалентен дескриптора окна в <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> программирования или на элемент <ph id="ph2">[!INCLUDE[TLA#tla_dhtml](~/add/includes/tlasharptla-dhtml-md.md)]</ph> программирования.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>UIElement is a base element at the WPF core level.</source>
          <target state="translated">Элементов пользовательского интерфейса — это базовый элемент на уровне ядра WPF.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>A UIElement has the following capabilities that are specifically defined by the UIElement class:      -   Can render as a child element (UIElement derives from &lt;xref:System.Windows.Media.Visual&gt;, a high level graphics class)      -   Contains logic that is used to size and position possible child elements of a UIElement (when interpreted by a layout system)      -   Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)      -   Can raise routed events that travel a route through the logical element tree      -   Supports some aspects of the animation system       &lt;xref:System.Windows.FrameworkElement&gt; is the WPF framework-level implementation class that builds on UIElement, and adds specific interactions with the WPF framework level.</source>
          <target state="translated">UIElement имеет следующие возможности, специально определенные с помощью класса элементов пользовательского интерфейса:-могут отображаться в виде дочернего элемента (элементов пользовательского интерфейса является производным от &lt;xref:System.Windows.Media.Visual&gt;, высокий уровень графики класс) — содержит логику, используемую для определения размеров и позиционирования возможных дочерних элементов для элементов пользовательского интерфейса (при интерпретации системой структуры) - может отвечать на действия пользователя (в том числе управлять где ввода направляются посредством обработки маршрутизации событий или маршрутизации команд) - перенаправленных событий, которые перемещаются по логическому дереву элементов может вызвать - поддерживает некоторые аспекты системы анимации &lt;xref:System.Windows.FrameworkElement&gt;класс реализация уровня инфраструктуры WPF, основана на элементов пользовательского интерфейса и добавляет конкретных взаимодействий с уровня структуры WPF.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Media.Visual&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; adds and defines the following capabilities:      -   Additional framework-specific layout characteristics      -   Support for richer metadata reporting on properties      -   Class-specific implementation of certain input base classes and their attached properties or attached events      -   Style support      -   Further animation support       Another related class is &lt;xref:System.Windows.ContentElement&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;Добавляет и определяет следующие возможности: - структуры для конкретной среды дополнительные характеристики - поддержка обширные возможности отчетности метаданных по свойствам - реализацию класса определенных входных базовых классов и их присоединенных свойств или событий - поддержка стилей — поддержка дополнительной анимации, другой связанных классов &lt;xref:System.Windows.ContentElement&gt;.&lt;/xref:System.Windows.ContentElement&gt;&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.ContentElement&gt; class implements many of the same members as does UIElement; the difference between these two classes has to do with their intended place in the overall content model.</source>
          <target state="translated">&lt;xref:System.Windows.ContentElement&gt;Класс реализует многие из тех же членов, как и элементов пользовательского интерфейса; различие между этими двумя классами должен им месте в общей модели содержимого.&lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A UIElement derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</source>
          <target state="translated">Как правило, UIElement производный класс определяет относительно жесткую модель содержимого, это означает, что существуют ограничения на какие элементы могут быть дочерние элементы в разметке.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>There might be capacity for taking less restrictive child content in a UIElement, but that capacity is typically centralized in designated content properties.</source>
          <target state="translated">Может существовать возможность принимать менее строгий дочернее содержимое в UIElement, но эта емкость обычно централизуются в выделенных свойствах содержимого.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.ContentElement&gt; derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</source>
          <target state="translated">Объект &lt;xref:System.Windows.ContentElement&gt;производного класса обычно не накладывает содержимого для поддержки сценариев, таких как документы формата потока.&lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  &lt;xref:System.Windows.UIElement.Visibility%2A&gt; state affects all input handling by that element.</source>
          <target state="translated">настроек <ph id="ph1">[!IMPORTANT]</ph> настроек &lt;xref:System.Windows.UIElement.Visibility%2A&gt;состояния влияет на обработку всех входных по этому элементу.&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</source>
          <target state="translated">Элементы, которые не видны не участвуют в проверке нажатия и не принимают события ввода, даже если указатель мыши находится на границах, где бы элемент Если были видны.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a new instance that is actually of type &lt;xref:System.Windows.UIElement&gt; is uncommon in application code, because &lt;xref:System.Windows.UIElement&gt; is a base element.</source>
          <target state="translated">Создание нового экземпляра, который имеет тип &lt;xref:System.Windows.UIElement&gt;обычно не в коде приложения, так как &lt;xref:System.Windows.UIElement&gt;является базовым элементом.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>Base Elements Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>базовые элементы Обзор<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</source>
          <target state="translated">Добавляет обработчик перенаправленного события для указанного маршрутизируемого события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add the same handler for the same event multiple times without raising an exception.</source>
          <target state="translated">Можно добавить один и тот же обработчик для того же события несколько раз, не вызывая исключение.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the handler is actually invoked multiple times when the event is handled.</source>
          <target state="translated">Тем не менее обработчик вызывается несколько раз, когда событие обрабатывается.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</source>
          <target state="translated">Таким образом рассмотрим, как это поведение может иметь побочные эффекты, которые должны быть учтены в вашу реализацию обработчика.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use this method to provide the implementation of the "add" accessor for the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> event access pattern of a custom routed event.</source>
          <target state="translated">Этот метод обычно используется для реализации метода доступа «добавить» для <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> шаблона доступа события пользовательского маршрутизируемого события.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An identifier for the routed event to be handled.</source>
          <target state="translated">Идентификатор для перенаправленного события для обработки.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A reference to the handler implementation.</source>
          <target state="translated">Ссылка на реализацию обработчика.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</source>
          <target state="translated">Добавляет обработчик перенаправленного события для указанного маршрутизируемого события, помещая этот обработчик в коллекцию обработчиков текущего элемента.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specify <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handledEventsToo</ph><ept id="p1">&lt;/code&gt;</ept> as <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</source>
          <target state="translated">Укажите <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handledEventsToo</ph> <ept id="p1">&lt;/code&gt;</ept> как <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> чтобы предоставленный обработчик вызывался для перенаправленного события, которое уже было отмечено как обработанное другим элементом на маршруте события.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Processing low-level input events in a practical way is a complex task.</source>
          <target state="translated">Обработка событий низкоуровневого ввода практическая является сложной задачей.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</source>
          <target state="translated">Многие элементы управления реализуют поведение, определенное событие помечено как обработанное куда заменяется более интуитивным событием.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</source>
          <target state="translated">Как правило элемент управления только отметит событие ввода платформы как обработанное при наличии намеренной таким образом.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</source>
          <target state="translated">В некоторых сценариях желаемого возможно способа обработки входных событий.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is for these scenarios that registering handlers with <ph id="ph1">`handledEventsToo`</ph> as <ph id="ph2">`true`</ph> is appropriate.</source>
          <target state="translated">Он предназначен для этих сценариев, Регистрация обработчиков с <ph id="ph1">`handledEventsToo`</ph> как <ph id="ph2">`true`</ph> подходит.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>But you should not do this routinely.</source>
          <target state="translated">Однако не следует это регулярно.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</source>
          <target state="translated">Вызов обработчиков в ответ на все события, даже в случае обработки усложнит собственную логику обработки событий в приложении.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may see a decrease in performance if the handler logic is substantial.</source>
          <target state="translated">Снижение производительности могут появиться, если логику обработки является существенным.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</source>
          <target state="translated">Необходимо зарезервировать использование присоединения обработчиков для уже обработанных событий для ситуаций, где были обнаружены в процессе разработки, некоторые элементы управления обработки событий, которые по-прежнему необходимо обработать с логикой приложения.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</source>
          <target state="translated">Предотвращение классов определенные сочетания элементов управления другим способом является использование события предварительного просмотра.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; is marked handled by class handling, you might be able to add handlers for &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; instead.</source>
          <target state="translated">Например если &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;помечено как обработанное обработкой классов, можно добавить обработчики для &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;вместо.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add the same handler for the same event multiple times without raising an exception.</source>
          <target state="translated">Можно добавить один и тот же обработчик для того же события несколько раз, не вызывая исключение.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the handler is actually invoked multiple times when the event is handled.</source>
          <target state="translated">Тем не менее обработчик вызывается несколько раз, когда событие обрабатывается.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</source>
          <target state="translated">Таким образом рассмотрим, как это поведение может иметь побочные эффекты, которые должны быть учтены в вашу реализацию обработчика.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use this method to provide the implementation of the "add" accessor for the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> event access pattern of a custom routed event.</source>
          <target state="translated">Этот метод обычно используется для реализации метода доступа «добавить» для <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> шаблона доступа события пользовательского маршрутизируемого события.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An identifier for the routed event to be handled.</source>
          <target state="translated">Идентификатор для перенаправленного события для обработки.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A reference to the handler implementation.</source>
          <target state="translated">Ссылка на реализацию обработчика.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>для регистрации обработчика таким образом, чтобы он вызывался даже в том случае, если перенаправленное событие помечено как обработанное в его данных события. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> для регистрации обработчика с условием по умолчанию, что он не будет вызван, если перенаправленное событие уже помечено как обработанное.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Do not routinely ask to rehandle a routed event.</source>
          <target state="translated">Не следует постоянно прибегать к повторной обработке перенаправленного события.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information, see Remarks.</source>
          <target state="translated">Дополнительные сведения см. заметки.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Adds handlers to the specified <bpt id="p1">&lt;xref href="System.Windows.EventRoute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the current <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event handler collection.</source>
          <target state="translated">Добавляет указанный обработчики <bpt id="p1">&lt;xref href="System.Windows.EventRoute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> для текущего <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> коллекции обработчиков событий.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used by content host elements (either those that implement &lt;xref:System.Windows.IContentHost&gt; or those that don't) to add handlers for child elements to the &lt;xref:System.Windows.EventRoute&gt;.</source>
          <target state="translated">Этот метод может использоваться элементами содержимого узла (либо те, которые реализуют &lt;xref:System.Windows.IContentHost&gt;или без них) для добавления обработчиков для дочерних элементов на &lt;xref:System.Windows.EventRoute&gt;.&lt;/xref:System.Windows.EventRoute&gt; &lt;/xref:System.Windows.IContentHost&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ordinarily, this is not required for &lt;xref:System.Windows.UIElement&gt;, because handlers are automatically added for all elements found in a completed logical tree.</source>
          <target state="translated">Как правило, это не является обязательным для &lt;xref:System.Windows.UIElement&gt;, так как обработчики автоматически добавляются для всех элементов, найденных в завершенном логическом дереве.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in some cases where &lt;xref:System.Windows.ContentElement&gt; and &lt;xref:System.Windows.UIElement&gt; are mixed in templated trees, intervening elements that came from the template need to be added to a route.</source>
          <target state="translated">Однако в некоторых случаях где &lt;xref:System.Windows.ContentElement&gt;и &lt;xref:System.Windows.UIElement&gt;смешиваются в деревьях шаблонного промежуточные элементы, полученные из шаблона необходимость добавить маршрут.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both &lt;xref:System.Windows.ContentElement&gt; and &lt;xref:System.Windows.UIElement&gt; support a version of this method.</source>
          <target state="translated">Оба &lt;xref:System.Windows.ContentElement&gt;и &lt;xref:System.Windows.UIElement&gt;поддерживает версию этого метода.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The event route that handlers are added to.</source>
          <target state="translated">Маршрут события, обработчики добавляются.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The event data that is used to add the handlers.</source>
          <target state="translated">Данные события, используемый для добавления обработчиков.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This method uses the &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt; property of the event data to create the handlers.</source>
          <target state="translated">Этот метод использует &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt;Свойства данных для создания обработчиков событий.&lt;/xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</source>
          <target state="translated">Возвращает или задает значение, указывающее, является ли этот элемент может использоваться как целевой объект операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting AllowDrop to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Операции перетаскивания и вставки не включены по умолчанию и необходимо включить, задав значение AllowDrop намеренно <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by &lt;xref:System.Windows.UIElement&gt; or any other base element class.</source>
          <target state="translated">Кроме данной базовой настройки, и перетащите поведение зависит от способа реализации и не определяется &lt;xref:System.Windows.UIElement&gt;или других класса. базовый элемент&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain controls, for example, &lt;xref:System.Windows.Controls.RichTextBox&gt;, do have a default behavior.</source>
          <target state="translated">Некоторые элементы управления, например, &lt;xref:System.Windows.Controls.RichTextBox&gt;, есть ли у поведение по умолчанию.&lt;/xref:System.Windows.Controls.RichTextBox&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on drag and drop, see <bpt id="p1">[</bpt>Drag and Drop Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об операции перетаскивания см. в разделе <bpt id="p1">[</bpt>Drop Обзор и перетащите<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; overrides the metadata for this dependency property in its implementation.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;переопределяет метаданные для этого свойства зависимостей в своей реализации.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, &lt;xref:System.Windows.FrameworkElement&gt; designates this property to allow property value inheritance (&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; is <ph id="ph1">`true`</ph> in metadata).</source>
          <target state="translated">В частности &lt;xref:System.Windows.FrameworkElement&gt;задает это свойство, чтобы разрешить наследование значения свойства (&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; — <ph id="ph1">`true`</ph> в метаданных).&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property value inheritance in this context means that if there are child elements with no other value for AllowDrop assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</source>
          <target state="translated">Наследование значения свойства в данном контексте означает, если дочерние элементы и не имеет значения для AllowDrop, назначенного с помощью локальных значений или стилей, значение ближайшего родительского элемента с назначенным данным значением (опять же, либо в стилях, с помощью значений по умолчанию или локальное значение), то значение родительского элемента будет назначен всем ранее неназначенным дочерним элементам системой свойств.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as <ph id="ph1">`false`</ph>.</source>
          <target state="translated">На практике это означает, что можно указать, следует ли разрешить операции удаления в корневом элементе, и это значение будет распространено на все дочерние элементы, имеющие не было специально назначенный его как <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_AllowDrop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.AllowDropProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_AllowDrop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.AllowDropProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.AllowDropProperty&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element can be used as the target of a drag-and-drop operation; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если этот элемент может использоваться в качестве целевого объекта для операции перетаскивания и вставки; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AllowDrop*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.AllowDrop*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.AllowDrop*&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Applies an animation to a specified dependency property on this element.</source>
          <target state="translated">Применяет анимацию к указанному свойству зависимостей для этого элемента.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Any existing animations are stopped and replaced with the new animation.</source>
          <target state="translated">Все существующие анимации останавливаются и заменена новой анимацией.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>To remove an animation from a property, specify the identifier for that property as <ph id="ph1">`dp`</ph> and specify <ph id="ph2">`clock`</ph> as <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Чтобы удалить анимацию из свойства, укажите идентификатор для свойства в качестве <ph id="ph1">`dp`</ph> и укажите <ph id="ph2">`clock`</ph> как <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This removes the animation and the animated property is set to its base value.</source>
          <target state="translated">Это действие удаляет анимацию и анимированное свойство имеет значение к базовому значению.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the originally associated animation clock is not stopped.</source>
          <target state="translated">Тем не менее счетчик анимации не останавливается.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other animations assigned to that clock will continue to run.</source>
          <target state="translated">Любая другая назначенная этим часам анимация будет продолжать запуска.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The identifier for the property to animate.</source>
          <target state="translated">Идентификатор для свойства, для которого должна начаться анимация.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The animation clock that controls and declares the animation.</source>
          <target state="translated">Таймер анимации, контролирующий и объявляющий анимацию.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</source>
          <target state="translated">Применяет анимацию к указанному свойству зависимостей для этого элемента, с возможностью указать, что произойдет, если у свойства уже имеется запущенная анимация.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>To remove an animation from a property, specify the identifier for that property as <ph id="ph1">`dp`</ph> and specify <ph id="ph2">`clock`</ph> as <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Чтобы удалить анимацию из свойства, укажите идентификатор для свойства в качестве <ph id="ph1">`dp`</ph> и укажите <ph id="ph2">`clock`</ph> как <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This removes the animation and the animated property is set to its base value.</source>
          <target state="translated">Это действие удаляет анимацию и анимированное свойство имеет значение к базовому значению.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the originally associated animation clock is not stopped.</source>
          <target state="translated">Тем не менее счетчик анимации не останавливается.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other animations assigned to that clock will continue to run.</source>
          <target state="translated">Любая другая назначенная этим часам анимация будет продолжать запуска.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">Анимируемое свойство.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The animation clock that controls and declares the animation.</source>
          <target state="translated">Таймер анимации, контролирующий и объявляющий анимацию.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
          <target state="translated">Значение перечисления.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which will stop any existing animation and replace with the new one.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, который останавливает все существующие анимации и заменить новым.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether at least one touch is captured to this element.</source>
          <target state="translated">Получает значение, указывающее, захвачена ли к данному элементу по крайней мере одним касанием.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if at least one touch is captured to this element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если по крайней мере один touch выделяется для этого элемента; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AreAnyTouchesCaptured*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.AreAnyTouchesCaptured*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.AreAnyTouchesCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</source>
          <target state="translated">Получает значение, указывающее, захвачена ли хотя бы одна операция сенсорного ввода для этого элемента или для всех дочерних элементов в визуальном дереве.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если по крайней мере один touch выделяется для этого элемента или дочерние элементы в визуальном дереве; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AreAnyTouchesCapturedWithin*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.AreAnyTouchesCapturedWithin*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.AreAnyTouchesCapturedWithin*&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether at least one touch is pressed over this element.</source>
          <target state="translated">Возвращает значение, указывающее, нажата ли хотя бы одним касанием над данным элементом.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if at least one touch is pressed over this element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если по крайней мере один сенсорное нажатие этого элемента; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AreAnyTouchesDirectlyOver*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.AreAnyTouchesDirectlyOver*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.AreAnyTouchesDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</source>
          <target state="translated">Возвращает значение, указывающее, нажата ли хотя бы одним касанием данного элемента или всех дочерних элементов в визуальном дереве.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если хотя бы одно сенсорное нажатие данного элемента или дочерние элементы в визуальном дереве; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.AreAnyTouchesOver*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.AreAnyTouchesOver*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.AreAnyTouchesOver*&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Positions child elements and determines a size for a <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Размещает дочерние элементы и определяет размер для <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Parent elements call this method from their &lt;xref:System.Windows.UIElement.ArrangeCore*&gt; implementation (or a WPF framework-level equivalent) to form a recursive layout update.</source>
          <target state="translated">Родительские элементы вызывают этот метод из своей &lt;xref:System.Windows.UIElement.ArrangeCore*&gt;реализацию (или эквивалента уровня инфраструктуры WPF) для формирования рекурсивного обновление макета.&lt;/xref:System.Windows.UIElement.ArrangeCore*&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This method constitutes the second pass of a layout update.</source>
          <target state="translated">Этот метод образует второй проход обновления макета.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For WPF framework-level element deriving scenarios, behavior for Arrange should not (and cannot, unless you shadow) be changed.</source>
          <target state="translated">Для элемента уровня платформы WPF сценариям произведения, поведение для размещения не должны и невозможно, если скрытии изменить.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you should override the &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; implementation in your class.</source>
          <target state="translated">Вместо этого необходимо переопределить &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;реализацию вашего класса.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; implementation is called internally by Arrange as part of default WPF framework-level layout operations.</source>
          <target state="translated">Ваш &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;Реализация вызывается внутри размещения как часть операций структуры уровня платформы WPF по умолчанию.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; implementation should also call &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; on each child element, if it has child elements.</source>
          <target state="translated">Ваш &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;реализации должен также вызывать &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;для каждого дочернего элемента, если он содержит дочерние элементы.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; &lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For WPF core-level element deriving scenarios, the behavior for Arrange should not (and cannot, unless you shadow) be changed.</source>
          <target state="translated">Для сценариев наследование элемента уровня ядра WPF, поведение для размещения не должны и невозможно, если скрытии изменить.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you should override &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; in your class.</source>
          <target state="translated">Вместо этого следует переопределить &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;вашего класса.&lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; implementation is called internally by Arrange as part of default WPF framework-level layout operations.</source>
          <target state="translated">Ваш &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;Реализация вызывается внутри размещения как часть операций структуры уровня платформы WPF по умолчанию.&lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the &lt;xref:System.Windows.UIElement&gt; base element class.</source>
          <target state="translated">Тем не менее это предполагает, что вы используете макет уровня платформы WPF и его система макета, так как это часто не в случае если вы специально производный элементы уровня ядра WPF от &lt;xref:System.Windows.UIElement&gt;базового элемента класса.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; implementation should also call Arrange on each child element, if it has child elements.</source>
          <target state="translated">Ваш &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;реализации должен также вызывать расположение для каждого дочернего элемента, если он содержит дочерние элементы.&lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the WPF core-level scenario implies that you are not using a &lt;xref:System.Windows.FrameworkElement&gt; derived class, because &lt;xref:System.Windows.FrameworkElement&gt; seals &lt;xref:System.Windows.FrameworkElement.ArrangeCore%2A&gt;.</source>
          <target state="translated">Примечание сценария уровня ядра WPF подразумевает, что вы используете не &lt;xref:System.Windows.FrameworkElement&gt;производного класса, поскольку &lt;xref:System.Windows.FrameworkElement&gt;печати &lt;xref:System.Windows.FrameworkElement.ArrangeCore%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.ArrangeCore%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Computation of WPF framework-level layout positioning in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> consists of a &lt;xref:System.Windows.UIElement.Measure%2A&gt; call and an Arrange call.</source>
          <target state="translated">Расположение макета уровня платформы WPF, в вычисление <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> состоит из &lt;xref:System.Windows.UIElement.Measure%2A&gt;вызова и вызова расположение.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the &lt;xref:System.Windows.UIElement.Measure%2A&gt; call, the layout system determines an element's size requirements using a provided &lt;xref:System.Windows.Size&gt; (<ph id="ph1">`availableSize`</ph>) argument.</source>
          <target state="translated">Во время &lt;xref:System.Windows.UIElement.Measure%2A&gt;вызов, система макета определяет требования к размеру элемента, используя предоставленную &lt;xref:System.Windows.Size&gt;(<ph id="ph1">`availableSize`</ph>) аргумент.&lt;/xref:System.Windows.Size&gt; &lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the Arrange call, the layout system finalizes the size and position of an element's bounding box.</source>
          <target state="translated">Во время вызова упорядочить система макета завершает размер и положение ограничивающего прямоугольника элемента.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>макета<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`availableSize`</ph> can be any number from zero to infinity.</source>
          <target state="translated"><ph id="ph1">`availableSize`</ph>может быть любое целое число от нуля до бесконечности.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements to be laid out return the minimum &lt;xref:System.Windows.Size&gt; they require through the <ph id="ph1">`availableSize`</ph> parameter.</source>
          <target state="translated">Элементы должны размещаться вернуть минимальное значение &lt;xref:System.Windows.Size&gt;ими через <ph id="ph1">`availableSize`</ph> параметр.&lt;/xref:System.Windows.Size&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a layout is first instantiated, it always receives a &lt;xref:System.Windows.UIElement.Measure%2A&gt; call before Arrange.</source>
          <target state="translated">При создании макета она всегда получает &lt;xref:System.Windows.UIElement.Measure%2A&gt;вызывать перед расположение.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the first layout pass, it may receive an Arrange call without a &lt;xref:System.Windows.UIElement.Measure%2A&gt;; this can happen when a property that affects only Arrange is changed (such as alignment), or when the parent receives an Arrange without a &lt;xref:System.Windows.UIElement.Measure%2A&gt;.</source>
          <target state="translated">Однако после первого прохода разметки, он может появиться вызова расположение без &lt;xref:System.Windows.UIElement.Measure%2A&gt;Это может происходить при изменении свойства, влияющие только расположение (например, выравнивание), или когда родительский Получает расположение без &lt;xref:System.Windows.UIElement.Measure%2A&gt;.&lt;/xref:System.Windows.UIElement.Measure%2A&gt; &lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.UIElement.Measure%2A&gt; call will automatically invalidate an Arrange call.</source>
          <target state="translated">Объект &lt;xref:System.Windows.UIElement.Measure%2A&gt;вызова автоматически сделает вызов расположение.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Layout updates generally occur asynchronously (at a time determined by the layout system).</source>
          <target state="translated">Обновления структуры обычно происходят асинхронно (во времени, определяемую системой макета).</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element might not immediately reflect changes to properties that affect element sizing (such as &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;).</source>
          <target state="translated">Элемент не может немедленно отражаются изменения свойств, которые влияют на изменение размера элемента (например, &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;).&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Layout updates can be forced by using the &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек обновления макета можно выполнить принудительно с помощью &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;метода; тем не менее, вызов этой функции не рекомендуется, поскольку он обычно нет необходимости и может привести к снижению производительности.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>In many situations where calling &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; might be appropriate, the layout system will probably already be processing updates.</source>
          <target state="translated">Во многих случаях, когда вызов &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;может быть целесообразным, система макета, вероятно, уже быть обработки обновлений.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</source>
          <target state="translated">Система макета может обрабатывать изменения структуры таким образом, можно оптимизировать все необходимые обновления как часть пакета.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system keeps two separate queues of invalid layouts, one for &lt;xref:System.Windows.UIElement.Measure%2A&gt; and one for Arrange.</source>
          <target state="translated">Система макета отслеживает двух отдельных очередей недопустимый макетов, один для &lt;xref:System.Windows.UIElement.Measure%2A&gt;и один для размещения.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout queue is sorted based upon the order of elements in the visual tree.</source>
          <target state="translated">Очередь структур сортируется порядок элементов в визуальном дереве.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</source>
          <target state="translated">Элементы, расположенные выше в дереве находились вверху очереди, во избежание избыточного структурирования повторяющихся изменений в родительских объектов.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</source>
          <target state="translated">Дублирующиеся записи автоматически удаляются из очереди, а элементы автоматически удаляются из очереди, если они уже являются допустимыми.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>When updating layout, the &lt;xref:System.Windows.UIElement.Measure%2A&gt; queue is emptied first, followed by the Arrange queue.</source>
          <target state="translated">При обновлении макета, &lt;xref:System.Windows.UIElement.Measure%2A&gt;освобождения очереди во-первых, следуют расположение очереди.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element in the Arrange queue will never be arranged if there is an element in the &lt;xref:System.Windows.UIElement.Measure%2A&gt; queue.</source>
          <target state="translated">Никогда не будут расположены элемента в расположение очереди, если элемент в &lt;xref:System.Windows.UIElement.Measure%2A&gt;очереди.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The final size that the parent computes for the child element, provided as a <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">Окончательный размер, вычисляемый родительским элементом для дочернего элемента, представленного как <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> экземпляра.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Defines the template for WPF core-level arrange layout definition.</source>
          <target state="translated">Определяет шаблон для определения макета упорядочивания WPF уровня ядра.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The final area within the parent that element should use to arrange itself and its child elements.</source>
          <target state="translated">Итоговая область в родительском элементе, этот элемент должен использовать для размещения себя и своих дочерних элементов.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Starts an animation for a specified animated property on this element.</source>
          <target state="translated">Запускает анимацию для указанного свойства данного элемента.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</source>
          <target state="translated">При возвращении анимировано ли свойство, обратите внимание, что анимация начнется считаться анимации при отображении первый кадр отправной точкой, без анимации.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; for <ph id="ph1">`animation`</ph> is <ph id="ph2">`null`</ph>, then any current animations are removed and the current value of the property is held.</source>
          <target state="translated">Если &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;для <ph id="ph1">`animation`</ph> — <ph id="ph2">`null`</ph>, любые текущие анимации будут удалены и текущее значение свойства удерживается.&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the entire <ph id="ph1">`animation`</ph> value is <ph id="ph2">`null`</ph>, all animations are removed from the property and the property value reverts to its base value.</source>
          <target state="translated">Если вся <ph id="ph1">`animation`</ph> значение <ph id="ph2">`null`</ph>, все анимации будут удалены из свойства, и свойство возвращается к базовому значению.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the originally associated animation timeline is not stopped.</source>
          <target state="translated">Однако график анимации не останавливается.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other animations assigned to that timeline will continue to run.</source>
          <target state="translated">Любая другая назначенная этой шкале анимация будет продолжать запуска.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The property to animate, which is specified as a dependency property identifier.</source>
          <target state="translated">Анимируемое свойство, указанное как идентификатор свойства зависимостей.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The timeline of the animation to start.</source>
          <target state="translated">Временная шкала должна начинаться анимация.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</source>
          <target state="translated">Запускает указанную анимацию для указанного свойства данного элемента, с параметром, указывающим, что произойдет, если у свойства уже имеется запущенная анимация.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</source>
          <target state="translated">При возвращении анимировано ли свойство, обратите внимание, что анимация начнется считаться анимации при отображении первый кадр отправной точкой, без анимации.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; for <ph id="ph1">`animation`</ph> is <ph id="ph2">`null`</ph>, then any current animations are removed and the current value of the property is held.</source>
          <target state="translated">Если &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;для <ph id="ph1">`animation`</ph> — <ph id="ph2">`null`</ph>, любые текущие анимации будут удалены и текущее значение свойства удерживается.&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the entire <ph id="ph1">`animation`</ph> value is <ph id="ph2">`null`</ph>, all animations are removed from the property and the property value reverts to its base value.</source>
          <target state="translated">Если вся <ph id="ph1">`animation`</ph> значение <ph id="ph2">`null`</ph>, все анимации будут удалены из свойства, и свойство возвращается к базовому значению.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the originally associated animation timeline is not stopped.</source>
          <target state="translated">Однако график анимации не останавливается.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other animations assigned to that timeline will continue to run.</source>
          <target state="translated">Любая другая назначенная этой шкале анимация будет продолжать запуска.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The property to animate, which is specified as the dependency property identifier.</source>
          <target state="translated">Анимируемое свойство, заданное в качестве идентификатора свойства зависимости.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The timeline of the animation to be applied.</source>
          <target state="translated">Временная шкала для применения анимации.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</source>
          <target state="translated">Значение перечисления, которое указывает, как новая анимация взаимодействует с любыми текущими анимациями, которые уже влияют на значение свойства.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Gets or sets a bitmap effect that applies directly to the rendered content for this element.</source>
          <target state="translated">Возвращает или задает эффект растрового изображения, который применяется непосредственно к отображаемому содержимому этого элемента.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt; is an abstract type, therefore the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> usage requires an implemented derived class of &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;, such as &lt;xref:System.Windows.Media.Effects.OuterGlowBitmapEffect&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;является абстрактным типом, поэтому <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> использования требуется реализованный класс, производный от &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;, например &lt;xref:System.Windows.Media.Effects.OuterGlowBitmapEffect&gt;.&lt;/xref:System.Windows.Media.Effects.OuterGlowBitmapEffect&gt; &lt;/xref:System.Windows.Media.Effects.BitmapEffect&gt;&lt;/xref:System.Windows.Media.Effects.BitmapEffect&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that one implemented derived class is a collection type that allows you to specify more than one sequential &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;, using a nested tag syntax.</source>
          <target state="translated">Обратите внимание, что один реализованный производной класс является типом коллекции, которая позволяет указать несколько последовательных &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;, используя синтаксис вложенных тегов.&lt;/xref:System.Windows.Media.Effects.BitmapEffect&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>No existing derived class of &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt; supports a type converter, so the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntax that you use for this property is generally property element syntax.</source>
          <target state="translated">Нет существующих производный класс от &lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;поддерживает преобразователь типов, поэтому <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> синтаксиса, используемого для этого свойства обычно является синтаксис элемента свойства.&lt;/xref:System.Windows.Media.Effects.BitmapEffect&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_BitmapEffect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.BitmapEffectProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_BitmapEffect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.BitmapEffectProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.BitmapEffectProperty&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The bitmap effect to apply.</source>
          <target state="translated">Применяемый эффект точечного рисунка.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</source>
          <target state="translated">Возвращает или задает входной источник эффект растрового изображения, который применяется непосредственно к отображаемому содержимому этого элемента.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_BitmapEffectInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.BitmapEffectInputProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_BitmapEffectInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.BitmapEffectInputProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.BitmapEffectInputProperty&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The source for bitmap effects.</source>
          <target state="translated">Источник эффектов для точечных рисунков.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.BitmapEffectInput*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.BitmapEffectInput*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.BitmapEffectInput*&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.BitmapEffect*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.BitmapEffect*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.BitmapEffect*&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets or sets a cached representation of the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Возвращает или задает кэшированное представление <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the CacheMode property when you need to increase performance for content that is time consuming to render.</source>
          <target state="translated">Задайте для свойства CacheMode при необходимости для повышения производительности для содержимого, которое занимает много времени для подготовки к просмотру.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Media.BitmapCache&gt;.</source>
          <target state="translated">Дополнительные сведения см. в разделе &lt;xref:System.Windows.Media.BitmapCache&gt;.&lt;/xref:System.Windows.Media.BitmapCache&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.CacheMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds a cached representation of the <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Media.CacheMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> содержащий кэшированное представление <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.CacheMode*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.CacheMode*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.CacheMode*&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Attempts to force capture of the mouse to this element.</source>
          <target state="translated">Предпринимает попытку принудительного захвата мыши данным элементом.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be captured, an element must be enabled.</source>
          <target state="translated">Для отслеживания, необходимо включить элемент.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check whether &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt; is <ph id="ph1">`true`</ph> before you call CaptureMouse.</source>
          <target state="translated">Проверьте ли &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt;— <ph id="ph1">`true`</ph> перед вызовом метода CaptureMouse.&lt;/xref:System.Windows.UIElement.IsEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If calling CaptureMouse returns <ph id="ph1">`true`</ph>, then &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt; is also <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Если вызов возвращает CaptureMouse <ph id="ph1">`true`</ph>, затем &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;также <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>If calling CaptureMouse returns <ph id="ph1">`true`</ph>, then the &lt;xref:System.Windows.UIElement.GotMouseCapture&gt; and &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt; events are raised, with &lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName&gt; in the event data reported as the element where the CaptureMouse method is called.</source>
          <target state="translated">Если вызов возвращает CaptureMouse <ph id="ph1">`true`</ph>, то &lt;xref:System.Windows.UIElement.GotMouseCapture&gt;и &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;событий, с &lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName&gt;событий данные выводятся как элемент, в котором вызывается метод CaptureMouse.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.IsMouseCapturedChanged&gt; &lt;/xref:System.Windows.UIElement.GotMouseCapture&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</source>
          <target state="translated">При попытке захвата, возможен конфликт с уже существующим захватом, особенно с относящимися к перетаскивания и вставки с помощью мыши.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear mouse capture from all elements, call &lt;xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName&gt; with the <ph id="ph1">`element`</ph> parameter provided as <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Чтобы очистить захват мыши из всех элементов, вызовите &lt;xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName&gt;с <ph id="ph1">`element`</ph> указанный параметр как <ph id="ph2">`null`</ph>.&lt;/xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the mouse is successfully captured; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если успешно захват мыши; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Attempts to force capture of the stylus to this element.</source>
          <target state="translated">Предпринимает попытку захвата пера данным элементом.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation based on the underlying default stylus device always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Реализация по умолчанию, на основании основным устройством пера всегда возвращает <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</source>
          <target state="translated">Тем не менее при расширении устройств ввода, которые обеспечивают реализацию устройств для системы ввода, имеется возможность создать систему с альтернативной реализацией перьевого устройства, могут возвращать разные результаты.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</source>
          <target state="translated">При захвате пера элементом, он получает ввод от пера, даже если перо находится вне границ элемента.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stylus is typically captured only during drag-and-drop operations.</source>
          <target state="translated">Перо обычно захватывается только во время операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method calls an underlying static &lt;xref:System.Windows.Input.Stylus&gt; method &lt;xref:System.Windows.Input.Stylus.Capture%2A&gt;.</source>
          <target state="translated">Вызов этого метода вызывает базовый статический &lt;xref:System.Windows.Input.Stylus&gt;метод &lt;xref:System.Windows.Input.Stylus.Capture%2A&gt;.&lt;/xref:System.Windows.Input.Stylus.Capture%2A&gt; &lt;/xref:System.Windows.Input.Stylus&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual capture behavior is implemented by the active stylus device implementation.</source>
          <target state="translated">Поведение самого захвата реализуется с помощью реализации устройства пера active.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be captured, an element must be enabled.</source>
          <target state="translated">Для отслеживания, необходимо включить элемент.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check whether &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt; is <ph id="ph1">`true`</ph> return before you call CaptureStylus.</source>
          <target state="translated">Проверьте ли &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt;— <ph id="ph1">`true`</ph> возвращают перед вызовом метода CaptureStylus.&lt;/xref:System.Windows.UIElement.IsEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>If calling CaptureStylus returns <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt; is also <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Если вызов возвращает CaptureStylus <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;также <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stylus was successfully captured; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если перо успешно захвачено; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Attempts to force capture of a touch to this element.</source>
          <target state="translated">Предпринимает попытку принудительного получения операции сенсорного ввода для этого элемента.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>CaptureTouch will return <ph id="ph1">`false`</ph> if the &lt;xref:System.Windows.Input.TouchDevice&gt; is currently captured to another element.</source>
          <target state="translated">Возвращает CaptureTouch <ph id="ph1">`false`</ph> Если &lt;xref:System.Windows.Input.TouchDevice&gt;записывается в настоящее время в другой элемент.&lt;/xref:System.Windows.Input.TouchDevice&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>If CaptureTouch returns <ph id="ph1">`true`</ph>, then the &lt;xref:System.Windows.UIElement.GotTouchCapture&gt; event is raised.</source>
          <target state="translated">Возвращает CaptureTouch <ph id="ph1">`true`</ph>, то &lt;xref:System.Windows.UIElement.GotTouchCapture&gt;события.&lt;/xref:System.Windows.UIElement.GotTouchCapture&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>To release capture of a single touch from this element, use the &lt;xref:System.Windows.UIElement.ReleaseTouchCapture%2A&gt; method and specify the touch device to release.</source>
          <target state="translated">Чтобы освободить записи одним нажатием из этого элемента, используйте &lt;xref:System.Windows.UIElement.ReleaseTouchCapture%2A&gt;метод и указать устройство сенсорного ввода для освобождения.&lt;/xref:System.Windows.UIElement.ReleaseTouchCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>To release all touches from this element, use the &lt;xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A&gt; method.</source>
          <target state="translated">Чтобы освободить все изменения из этого элемента, используйте &lt;xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A&gt;метод.&lt;/xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The device to capture.</source>
          <target state="translated">Устройство для записи.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified touch is captured to this element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если указанная операция сенсорного ввода выделяется для этого элемента; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;touchDevice&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;touchDevice&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Gets or sets the geometry used to define the outline of the contents of an element.</source>
          <target state="translated">Возвращает или задает геометрию, используемую для определения контура содержимого элемента.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements outside the geometry will be visually clipped in the rendered layout.</source>
          <target state="translated">Элементы за пределами геометрии визуально усекаются при отображении.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The geometry does not have to be rectangular.</source>
          <target state="translated">Геометрия не обязательно должна быть прямоугольной.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Clip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ClipProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Clip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.ClipProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.ClipProperty&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The geometry to be used for clipping area sizing.</source>
          <target state="translated">Геометрия, используемая для определения размеров области отсечения.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The default is a null <bpt id="p1">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию равно null, <bpt id="p1">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Clip*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.Clip*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.Clip*&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</source>
          <target state="translated">Возвращает или задает значение, указывающее, следует ли усечение содержимого этого элемента (или содержимого, поступающего из его дочерних элементов данного элемента) в соответствии с размерами содержащего его элемента.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>For child elements, ClipToBounds has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; / &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; or &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; / &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;.</source>
          <target state="translated">Для дочерних элементов, значение ClipToBounds имеет другой эффект на макет поведения в зависимости от того, является ли высоты и ширины родительского элемента определяются &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;/ &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;или &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;/ &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; / &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; of the parent element are always respected regardless of the value of ClipToBounds and the effective clipping will always clip the content based on these maximums.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;/ &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;родительского элемента всегда учитывается независимо от значения значение ClipToBounds и эффективных вырезку всегда изменяет содержимое в зависимости от этих.&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;&lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent's &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; / &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; settings will not clip the content when ClipToBounds is <ph id="ph1">`false`</ph>, but will clip the content if ClipToBounds is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Родительский &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;/ &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;параметры не изменяет содержимое при значение ClipToBounds <ph id="ph1">`false`</ph>, но будет усечение содержимого, если значение ClipToBounds <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that defaulting to <ph id="ph1">`false`</ph> is the general behavior as implemented in the &lt;xref:System.Windows.UIElement&gt; class.</source>
          <target state="translated">Обратите внимание, что по умолчанию принимается <ph id="ph1">`false`</ph> является общее поведение, как он реализован в &lt;xref:System.Windows.UIElement&gt;классе.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible for any given element that derives from &lt;xref:System.Windows.UIElement&gt; to override the dependency property metadata for this property in that instance to default to <ph id="ph1">`true`</ph> instead.</source>
          <target state="translated">Это возможно для любого заданного элемента, производного от &lt;xref:System.Windows.UIElement&gt;для переопределения метаданных свойства зависимостей для этого свойства в экземпляре по умолчанию <ph id="ph1">`true`</ph> вместо.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Several existing derived classes override this metadata and/or adjust the dependency property default value.</source>
          <target state="translated">Некоторые существующие производные классы переопределить эти метаданные и/или изменить значения по умолчанию для свойства зависимостей.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.InkCanvas&gt;, &lt;xref:System.Windows.Controls.InkPresenter&gt;, and &lt;xref:System.Windows.Controls.Primitives.Popup&gt; each override the default value to be <ph id="ph1">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.InkCanvas&gt;, &lt;xref:System.Windows.Controls.InkPresenter&gt;, и &lt;xref:System.Windows.Controls.Primitives.Popup&gt;каждого переопределить это значение по умолчанию должно быть <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Controls.Primitives.Popup&gt; &lt;/xref:System.Windows.Controls.InkPresenter&gt;&lt;/xref:System.Windows.Controls.InkCanvas&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; overrides the metadata for this dependency property.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;переопределяет метаданные для этого свойства зависимостей.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, &lt;xref:System.Windows.FrameworkElement&gt; designates this property to allow property value inheritance (&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; is <ph id="ph1">`true`</ph> in metadata).</source>
          <target state="translated">В частности &lt;xref:System.Windows.FrameworkElement&gt;задает это свойство, чтобы разрешить наследование значения свойства (&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; — <ph id="ph1">`true`</ph> в метаданных).&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property value inheritance in this context means that if there are child elements with no other value for ClipToBounds assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</source>
          <target state="translated">Наследование значения свойства в данном контексте означает, что если существуют дочерние элементы и не имеет значения для значение ClipToBounds, назначенного с помощью локальных значений или стилей, значение ближайшего родительского элемента с этим значением будет назначено (опять же, либо в стилях, с помощью значений по умолчанию или локального значения), а затем будет присвоено значение из родительского элемента Все неназначенные дочерним элементам системой свойств.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as <ph id="ph1">`false`</ph>.</source>
          <target state="translated">На практике это означает, что можно указать, следует ли разрешить обрезать для границы в корневом элементе, и это значение будет распространено на все дочерние элементы, имеющие не было специально назначенный его как <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ClipToBounds"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ClipToBoundsProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ClipToBounds"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.ClipToBoundsProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.ClipToBoundsProperty&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the content should be clipped; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если содержимое должно быть обрезано; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.ClipToBounds*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.ClipToBounds*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.ClipToBounds*&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Gets a collection of <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects associated with this element.</source>
          <target state="translated">Возвращает коллекцию <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекты, связанные с данным элементом.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> включает обработку команд для данного элемента и объявляет компоновку между командой, ее событиями и обработчиками, присоединяемыми этим элементом.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another typical way to populate the CommandBindings collection is to use &lt;xref:System.Windows.Input.CommandManager&gt; methods programmatically.</source>
          <target state="translated">Другой способ заполнения коллекции поддержкой CommandBinding является использование &lt;xref:System.Windows.Input.CommandManager&gt;методы программным путем.&lt;/xref:System.Windows.Input.CommandManager&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_CommandBindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.CommandBindings&gt;       oneOrMoreCommandBindings     &lt;/object.CommandBindings&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_CommandBindings"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreCommandBindings<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Input.CommandBinding&gt; elements.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_CommandBindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Использование элемента свойства XAML <ph id="ph1">```   &lt;object&gt;     &lt;object.CommandBindings&gt;       oneOrMoreCommandBindings     &lt;/object.CommandBindings&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_CommandBindings"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## значений XAML <bpt id="p3">*</bpt>oneOrMoreCommandBindings<ept id="p3">*</ept> один или несколько &lt;xref:System.Windows.Input.CommandBinding&gt;элементы.&lt;/xref:System.Windows.Input.CommandBinding&gt;      </target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these should have a &lt;xref:System.Windows.Input.CommandBinding.Command%2A&gt; attribute set to a known command, and attributes set for the &lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt; and &lt;xref:System.Windows.Input.CommandBinding.Executed&gt; handler implementations.</source>
          <target state="translated">Каждый из них должен иметь &lt;xref:System.Windows.Input.CommandBinding.Command%2A&gt;атрибут известной командой, и атрибуты устанавливаются для &lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;и &lt;xref:System.Windows.Input.CommandBinding.Executed&gt;реализаций обработчиков.&lt;/xref:System.Windows.Input.CommandBinding.Executed&gt; &lt;/xref:System.Windows.Input.CommandBinding.CanExecute&gt; &lt;/xref:System.Windows.Input.CommandBinding.Command%2A&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see &lt;xref:System.Windows.Input.CommandBinding&gt;.</source>
          <target state="translated">Дополнительные сведения см. &lt;xref:System.Windows.Input.CommandBinding&gt;.&lt;/xref:System.Windows.Input.CommandBinding&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The collection of all <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Коллекция всех <bpt id="p1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объектов.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Gets the size that this element computed during the measure pass of the layout process.</source>
          <target state="translated">Возвращает размер, вычисленный этим элементом на этапе измерения процесса компоновки.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value returned by this property will only be a valid measurement if the value of the &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt; property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Значение, возвращаемое этим свойством только будет недопустимо, если значение &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt;свойство <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsMeasureValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>DesiredSize is typically checked as one of the measurement factors when you implement layout behavior overrides such as &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;, &lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;, or &lt;xref:System.Windows.UIElement.OnRender%2A&gt; (in the &lt;xref:System.Windows.UIElement.OnRender%2A&gt; case, you might check &lt;xref:System.Windows.UIElement.RenderSize%2A&gt; instead, but this depends on your implementation).</source>
          <target state="translated">Желаемый размер обычно проверяется как одним из факторов измерения при реализации поведения макета переопределяет, такие как &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;, &lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;, или &lt;xref:System.Windows.UIElement.OnRender%2A&gt;(в &lt;xref:System.Windows.UIElement.OnRender%2A&gt;случае можно проверить &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;вместо этого, но это зависит от реализации).&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt; &lt;/xref:System.Windows.UIElement.OnRender%2A&gt; &lt;/xref:System.Windows.UIElement.OnRender%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt; &lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the scenario, DesiredSize might be fully respected by your implementation logic, constraints on DesiredSize might be applied, and such constraints might also change other characteristics of either the parent element or child element.</source>
          <target state="translated">В зависимости от сценария желаемый размер может полностью соблюдать логику реализации, могут применяться ограничения на желаемый размер и ограничения, может также изменить другие характеристики родительского элемента или дочернего элемента.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to DesiredSize.</source>
          <target state="translated">Например элемент управления, который поддерживает прокручиваемые области (но не делает являются производными от управления уровня платформы WPF, которые уже позволяют прокручиваемые области) может сравнить доступный размер, чтобы желаемый размер.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control could then set an internal state that enabled scrollbars in the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> for that control.</source>
          <target state="translated">Элемент управления может затем устанавливать внутреннего состояния, включающее в <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> для этого элемента управления.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Or, DesiredSize could potentially also be ignored in certain scenarios.</source>
          <target state="translated">Или, потенциально может DesiredSize также учитывается в некоторых сценариях.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The computed size, which becomes the desired size for the arrange pass.</source>
          <target state="translated">Вычисленный размер, который становится предпочтительным размером на этапе упорядочения.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the drag target.</source>
          <target state="translated">Происходит, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве цели перетаскивания.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event for this class, so that DragEnter is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы DragEnter часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the DragEnter event are attached to the underlying &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, подключенные к событие DragEnter подключены к основному &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_DragEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.DragEnterEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewDragEnter&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_DragEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.DragEnterEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.DragEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewDragEnter&gt;.&lt;/xref:System.Windows.UIElement.PreviewDragEnter&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.DragEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnDragEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnDragEnter%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnDragEnter%2A&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the drag origin.</source>
          <target state="translated">Происходит, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event for this class so that DragLeave is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы DragLeave часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the DragLeave event are attached to the underlying &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию DragLeave присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_DragLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.DragLeaveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.DragDrop.PreviewDragLeave&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_DragLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.DragLeaveEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.DragEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.DragDrop.PreviewDragLeave&gt;.&lt;/xref:System.Windows.DragDrop.PreviewDragLeave&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.DragLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnDragLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnDragLeave%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnDragLeave%2A&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the potential drop target.</source>
          <target state="translated">Происходит, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве потенциальной цели.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs even if the drag originates in the element bounds.</source>
          <target state="translated">Это событие возникает, даже если источник перетаскивания находится в границах элемента.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the drag starts outside the bounds and then moves inside, this event is also raised, as well as &lt;xref:System.Windows.UIElement.DragEnter&gt; and related preview events.</source>
          <target state="translated">Если перетаскивание начинается за пределами границ, а затем перемещается, это событие также возникает, а также &lt;xref:System.Windows.UIElement.DragEnter&gt;и связанные события предварительного просмотра.&lt;/xref:System.Windows.UIElement.DragEnter&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event for this class so that DragOver is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы DragOver часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the DragOver event are attached to the underlying &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к события DragOver присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_DragOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.DragOverEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.DragDrop.PreviewDragOver&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_DragOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.DragOverEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.DragEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.DragDrop.PreviewDragOver&gt;.&lt;/xref:System.Windows.DragDrop.PreviewDragOver&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.DragOverEvent&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnDragOver%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnDragOver%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnDragOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragOver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.DragOver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drop event with this element as the drop target.</source>
          <target state="translated">Происходит, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве конечного расположения сброса.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event for this class so that Drop is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt;вложенное событие для этого класса, так что Drop входит в состав класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the Drop event are attached to the underlying &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, подключенные к удалить событие подключены к основному &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Drop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.DropEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewDrop&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Drop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.DropEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.DragEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewDrop&gt;.&lt;/xref:System.Windows.UIElement.PreviewDrop&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.DropEvent&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnDrop%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnDrop%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnDrop%2A&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.Drop"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.Drop"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Gets or sets the bitmap effect to apply to the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Возвращает или задает эффект растрового изображения, чтобы применить к <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Effect property to apply a bitmap effect to a &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Используйте свойство эффект для применения эффекта для точечных рисунков на &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Effect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.EffectProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Effect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.EffectProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.EffectProperty&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Media.Effects.Effect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the bitmap effect.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Effects.Effect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Представляющий эффект растрового изображения.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Effect*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.Effect*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.Effect*&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Attempts to set focus to this element.</source>
          <target state="translated">Предпринимается попытка установить фокус на этом элементе.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be focusable, &lt;xref:System.Windows.UIElement.Focusable%2A&gt; and &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt; must both be <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Необходимо получить фокус, &lt;xref:System.Windows.UIElement.Focusable%2A&gt;и &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt;должны быть <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsEnabled%2A&gt; &lt;/xref:System.Windows.UIElement.Focusable%2A&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Даже если элемент является обработка событий может иметь фокус и включена, в составе определенного дерева, (например, для составного элемента управления) может реагировать на события предварительного просмотра фокуса фокус, так как не таким образом этот метод вернет <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</source>
          <target state="translated">Фокус в общем случае характеризуется два разных понятия: фокус клавиатуры и логический фокус, которые не всегда совпадают.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Focus Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Input Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокус Обзор<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> или <bpt id="p2">[</bpt>фокусе<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>If calling Focus returns <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt; and &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; are also <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Если вызов возвращает фокус <ph id="ph1">`true`</ph>, &lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;и &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;также <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; &lt;/xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the related properties are not already <ph id="ph1">`true`</ph>, when you call  Focus, one or more of the following events are raised in the following order: &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt; (source is the new focus target), &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;, &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;, &lt;xref:System.Windows.UIElement.LostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement.GotKeyboardFocus&gt; (source is the new focus target).</source>
          <target state="translated">Если связанные свойства еще не <ph id="ph1">`true`</ph>, при вызове фокус, один или несколько из следующих событий вызываются в следующем порядке: &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt;(источник — новый целевой фокус), &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;, &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;, &lt;xref:System.Windows.UIElement.LostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement.GotKeyboardFocus&gt;(источник — новый целевой фокус).&lt;/xref:System.Windows.UIElement.GotKeyboardFocus&gt; &lt;/xref:System.Windows.UIElement.LostKeyboardFocus&gt; &lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt; &lt;/xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt; &lt;/xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt; &lt;/xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for this call to be successful, some other element in the application needed to have focus previously.</source>
          <target state="translated">В порядке для этого вызова для успешной работы другого элемента в приложении должны быть уже установлен фокус.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if keyboard focus and logical focus were set to this element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если фокус клавиатуры и логический фокус настроен для этого элемента; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> если только логический фокус было присвоено значение этого элемента, или вызов этого метода не привел к изменению фокуса.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the element can receive focus.</source>
          <target state="translated">Возвращает или задает значение, указывающее, может ли элемент получать фокус.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the focused element receives keyboard input.</source>
          <target state="translated">Получать только элемент фокус ввода с клавиатуры.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focusable is the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> property accessor for what is in reality a dependency property.</source>
          <target state="translated">Может иметь фокус — <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> доступа свойства для Какова на самом деле свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</source>
          <target state="translated">Это свойство зависимостей конкретного довольно часто имеет значение «по умолчанию» по-разному в производных классах элементов, особенно в элементах управления.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>This commonly occurs in one of two ways:      -   The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</source>
          <target state="translated">Это обычно происходит одним из двух способов: — свойство зависимостей наследуется от определенного производного класса, но этот производный класс переопределяет метаданные свойства зависимостей и изменяет значение свойства по умолчанию.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A style or template is applied to an element, which sets that dependency property value differently.</source>
          <target state="translated">-Стиля или шаблона применяется к элементу, который устанавливает это значение свойства зависимостей по-разному.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the apparent "default" of Focusable for a &lt;xref:System.Windows.Controls.Button&gt; control will be <ph id="ph1">`true`</ph>, even though &lt;xref:System.Windows.Controls.Button&gt; inherits Focusable as a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> property directly from &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Например, «по умолчанию» для Focusable для &lt;xref:System.Windows.Controls.Button&gt;элемент управления будет <ph id="ph1">`true`</ph>, даже если &lt;xref:System.Windows.Controls.Button&gt;наследует Focusable как <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> свойство непосредственно из &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Controls.Button&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the applied metadata value for the Focusable dependency property was overridden within the static constructor of the &lt;xref:System.Windows.Controls.Control&gt; base class, which is situated between &lt;xref:System.Windows.Controls.Button&gt; and &lt;xref:System.Windows.UIElement&gt; in the class hierarchy.</source>
          <target state="translated">Это, поскольку значение примененных метаданных для свойства зависимостей может иметь фокус был переопределен в статическом конструкторе &lt;xref:System.Windows.Controls.Control&gt;базового класса, который располагается между &lt;xref:System.Windows.Controls.Button&gt;и &lt;xref:System.Windows.UIElement&gt;в иерархии классов.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Controls.Button&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inherited by &lt;xref:System.Windows.Controls.Control&gt; or its derived classes, &lt;xref:System.Windows.Controls.Control&gt; redefines the default value of this property to be <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Если наследуемые &lt;xref:System.Windows.Controls.Control&gt;или его производных классов &lt;xref:System.Windows.Controls.Control&gt;переопределяет значение по умолчанию этого свойства было <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inherited by &lt;xref:System.Windows.Controls.Label&gt; (which is a &lt;xref:System.Windows.Controls.Control&gt; derived class), the default value is again redefined to be <ph id="ph1">`false`</ph>.</source>
          <target state="translated">При наследуются &lt;xref:System.Windows.Controls.Label&gt;(который является &lt;xref:System.Windows.Controls.Control&gt;производного класса), значение по умолчанию снова переопределен, чтобы быть <ph id="ph1">`false`</ph>.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Label&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Focusable"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.FocusableProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Focusable"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.FocusableProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.FocusableProperty&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is focusable; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если данный элемент может иметь фокус; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but see Remarks.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, но см. примечания.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.Focusable*&gt; property changes.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.Focusable*&gt;изменения свойств.&lt;/xref:System.Windows.UIElement.Focusable*&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Focusable*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.Focusable*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.Focusable*&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</source>
          <target state="translated">Возвращает значение базового свойства для указанного свойства данного элемента, без учета возможного анимированного значения из запущенной или остановленной анимации.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no animations are attached to the property, then the GetAnimationBaseValue return value is always identical to the &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt; return value.</source>
          <target state="translated">Если бы анимации не присоединялись к свойству, то возвращаемое значение GetAnimationBaseValue идентична всегда &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;возвращаемое значение.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</source>
          <target state="translated">Если прикреплена анимация, затем все возможные производные значения, включая начальные и остановки, игнорируются и значение свойства определяется в зависимости от всех других возможных входных значений.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>приоритет значения свойства зависимости<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The dependency property to check.</source>
          <target state="translated">Проверяемое свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The property value as if no animations are attached to the specified dependency property.</source>
          <target state="translated">Значение свойства, как если бы анимации не присоединялись к указанному свойству зависимостей.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Returns an alternative clipping geometry that represents the region that would be clipped if &lt;xref:System.Windows.UIElement.ClipToBounds*&gt; were set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Возвращает альтернативную геометрию обрезки, представляющую область, которая будет отсечена, если &lt;xref:System.Windows.UIElement.ClipToBounds*&gt;было присвоено <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.UIElement.ClipToBounds*&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation will return a legitimate value, but does not use the <ph id="ph1">`layoutSlotSize`</ph> parameter in its calculations.</source>
          <target state="translated">Реализация по умолчанию возвращает допустимое значение, но не использует <ph id="ph1">`layoutSlotSize`</ph> параметр в вычислениях.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead it uses the value of &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;.</source>
          <target state="translated">Вместо этого он использует значение &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;.&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is substantially overridden by the immediately derived &lt;xref:System.Windows.FrameworkElement&gt; class, and the &lt;xref:System.Windows.FrameworkElement&gt; override produces a more sophisticated behavior for general WPF framework-level elements.</source>
          <target state="translated">Большей части переопределить этот метод, немедленно производном &lt;xref:System.Windows.FrameworkElement&gt;класса и &lt;xref:System.Windows.FrameworkElement&gt;Переопределение создает более сложное поведение для общих элементов уровня платформы WPF.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see &lt;xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Дополнительные сведения см. в разделе &lt;xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The available size provided by the element.</source>
          <target state="translated">Доступный размер, предоставляемый элементом.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The potential clipping geometry.</source>
          <target state="translated">Потенциальная геометрия обрезки.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns an alternative <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> parent for this element if no visual parent exists.</source>
          <target state="translated">При переопределении в производном классе, возвращает альтернативный <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> родительским для данного элемента, если существует визуального родительского объекта.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default virtual implementation of this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Виртуальная реализация по умолчанию этот метод возвращает <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; provides a practical implementation.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;предоставляет практической реализации.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</source>
          <target state="translated">Альтернативные родительские элементы используются для маршрутизации событий, в случаях, когда элемент создает альтернативную родительскую структуру, чтобы его события, в результате которого отличается от стандартного шаблона маршрутизации вверх по визуальному дереву родительскому элементу, или вниз к просмотру маршрутизации.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>An object, if implementation of a derived class has an alternate parent connection to report.</source>
          <target state="translated">Объект, если реализация производного класса имеет соединение альтернативный родительский отчет.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag-and-drop event that involves this element.</source>
          <target state="translated">Происходит, когда система ввода сообщает о соответствующем событии перетаскивания и вставки, в котором участвует данный элемент.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GiveFeedback event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</source>
          <target state="translated">Событие GiveFeedback позволяет источнику события перетаскивания изменять внешний вид указателя мыши, чтобы дать пользователю визуальную обратную связь во время операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>The visual feedback reinforces that a drag-and-drop operation is in process.</source>
          <target state="translated">Визуальную обратную связь для более глубокого, операции перетаскивания и вставки находится в процессе.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event for this class so that GiveFeedback is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, GiveFeedback часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the GiveFeedback event are attached to the underlying &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию GiveFeedback присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GiveFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GiveFeedbackEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewGiveFeedback&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GiveFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.GiveFeedbackEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewGiveFeedback&gt;.&lt;/xref:System.Windows.UIElement.PreviewGiveFeedback&gt; &lt;/xref:System.Windows.GiveFeedbackEventHandler&gt; &lt;/xref:System.Windows.UIElement.GiveFeedbackEvent&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGiveFeedback%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnGiveFeedback%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnGiveFeedback%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GiveFeedback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.GiveFeedback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Occurs when this element gets logical focus.</source>
          <target state="translated">Происходит при получении этим элементом логического фокуса.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</source>
          <target state="translated">Логический фокус отличается от фокуса, если он является результатом вызова метода, в на другом уровне существует предыдущий фокус клавиатуры.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, keyboard focus remains where it is and the element where a &lt;xref:System.Windows.UIElement.Focus%2A&gt; method is called still gets logical focus.</source>
          <target state="translated">В этом случае фокус остается там, где это и элемент где &lt;xref:System.Windows.UIElement.Focus%2A&gt;вызывается метод по-прежнему возвращает логический фокус.&lt;/xref:System.Windows.UIElement.Focus%2A&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>A more precise interpretation of this event is that it is raised when the value of the &lt;xref:System.Windows.UIElement.IsFocused%2A&gt; property of an element in the route is changed from <ph id="ph1">`false`</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Точнее Интерпретация этого события является что он вызывается, когда значение &lt;xref:System.Windows.UIElement.IsFocused%2A&gt;Свойства элемента в маршруте изменяется с <ph id="ph1">`false`</ph> для <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Вследствие этого события восходящей маршрутизации, элемент, который получает фокус, может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that gained focus.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;в данных события, чтобы определить фактический элемент, полученные фокус.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|      -   There is no corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.GotFocusEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.RoutedEventHandler&gt;|      -Нет соответствующего события нисходящей.&lt;/xref:System.Windows.RoutedEventHandler&gt; &lt;/xref:System.Windows.UIElement.GotFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnGotFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Occurs when the keyboard is focused on this element.</source>
          <target state="translated">Происходит, когда фокус ввода с клавиатуры на данном элементе.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt; is a similar event that tracks status changes in a property that maintains the focus state for an element; the GotKeyboardFocus event is raised in many of the same circumstances.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;аналогичные событие, которое отслеживает изменения состояния в свойство, которое поддерживает состояния фокуса для элемента; событие GotKeyboardFocus возникает в тех же условиях.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Вследствие этого события восходящей маршрутизации, элемент, имеющий фокус ввода может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has focus.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;в данных события, чтобы определить фактический элемент, имеющий фокус.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event for this class so that GotKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы GotKeyboardFocus часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the GotKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, которые прикреплены к событию GotKeyboardFocus присоединяются к базовому объекту &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotKeyboardFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.GotKeyboardFocusEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt;.&lt;/xref:System.Windows.UIElement.PreviewGotKeyboardFocus&gt; &lt;/xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt; &lt;/xref:System.Windows.UIElement.GotKeyboardFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGotKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnGotKeyboardFocus%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnGotKeyboardFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotKeyboardFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Occurs when this element captures the mouse.</source>
          <target state="translated">Происходит при захвате мыши данным элементом.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</source>
          <target state="translated">При захвате мыши элементом, он получает ввод от мыши, даже если указатель мыши находится вне границ элемента.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</source>
          <target state="translated">Мышь обычно захватывается только во время операции перетаскивания и вставки и остается захваченной пока не произойдет действие операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Вследствие этого события восходящей маршрутизации, элемент, захвативший может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has mouse capture.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;событий системы отслеживания измененных данных, чтобы определить фактический элемент, имеющий мыши.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event for  this class so that GotMouseCapture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы GotMouseCapture часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the GotMouseCapture event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию GotMouseCapture присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotMouseCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotMouseCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotMouseCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.GotMouseCaptureEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Отсутствует соответствующее событие не определено туннелирования.&lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.GotMouseCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGotMouseCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnGotMouseCapture%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnGotMouseCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotMouseCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotMouseCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Occurs when this element captures the stylus.</source>
          <target state="translated">Происходит при захвате пера данным элементом.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</source>
          <target state="translated">При захвате пера элементом, он получает ввод от пера, даже если указатель находится вне границ элемента.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</source>
          <target state="translated">Перо обычно захватывается только во время операции перетаскивания и вставки и сохраняет захват, пока не произойдет действие операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Вследствие этого события восходящей маршрутизации, элемент, захвативший может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has capture.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;в данных события, чтобы определить фактический элемент, захвативший.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the attached event for this class so that GotStylusCapture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним для вложенного события для этого класса, чтобы GotStylusCapture входит в состав класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the GotStylusCapture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию GotStylusCapture присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotStylusCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotStylusCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotStylusCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.GotStylusCaptureEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Отсутствует соответствующее событие не определено туннелирования.&lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.GotStylusCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnGotStylusCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnGotStylusCapture%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnGotStylusCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotStylusCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotStylusCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Occurs when a touch is captured to this element.</source>
          <target state="translated">Происходит, когда сенсорного этого элемента.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_GotTouchCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.GotTouchCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement.OnGotTouchCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_GotTouchCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.GotTouchCaptureEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Переопределить &lt;xref:System.Windows.UIElement.OnGotTouchCapture%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnGotTouchCapture%2A&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.GotTouchCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotTouchCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotTouchCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this element has any animated properties.</source>
          <target state="translated">Возвращает значение, указывающее, является ли этот элемент имеет анимированные свойства.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns <ph id="ph1">`true`</ph> either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</source>
          <target state="translated">Это свойство возвращает <ph id="ph1">`true`</ph> для постоянных анимаций (без часов, всегда запущенной) или для анимаций, имеющих определенный график.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element has animations attached to any of its properties; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если этот элемент имеет анимированные свойства; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has focus.</source>
          <target state="translated">Возвращает значение, указывающее, является ли <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> имеет фокус.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subclasses can override this property to specify when the element has keyboard focus.</source>
          <target state="translated">Подклассы могут переопределить это свойство, чтобы указать, когда элемент имеет фокус клавиатуры.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when your &lt;xref:System.Windows.UIElement&gt; contains elements that can have keyboard focus and you want your element to report that it has focus.</source>
          <target state="translated">Это полезно, когда ваш &lt;xref:System.Windows.UIElement&gt;содержит элементы, которые могут иметь фокус клавиатуры и нужно вашего элемента отчета, что фокус.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has focus; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> имеет фокус; в противном случае <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Implements <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> to supply base element hit testing behavior (returning <bpt id="p1">&lt;xref href="System.Windows.Media.GeometryHitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Реализует <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> для предоставления базы поведения проверки нажатия для элемента (возвращая <bpt id="p1">&lt;xref href="System.Windows.Media.GeometryHitTestResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the original virtual method &lt;xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt; for information on overriding this method in further derived classes.</source>
          <target state="translated">См. исходный виртуальный метод &lt;xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt;для сведения о переопределении этого метода в дальнейшей производных классов.&lt;/xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that several specific controls (&lt;xref:System.Windows.Controls.TextBlock&gt;, for example) do have distinct implementations, which override this one.</source>
          <target state="translated">Обратите внимание, что некоторых элементов управления (&lt;xref:System.Windows.Controls.TextBlock&gt;, например) имеются разные реализации, которые переопределяют данную.&lt;/xref:System.Windows.Controls.TextBlock&gt;</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called from your application code.</source>
          <target state="translated">Этот метод не предназначен для непосредственного вызова из кода приложения.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</source>
          <target state="translated">Этот метод поддерживает внутренние поведения проверки местонахождения пера, предоставляемые различными аспектами системы ввода (ли указатель мыши находится над элементом, например).</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Describes the hit test to perform, including the initial hit point.</source>
          <target state="translated">Описывает проверку нажатия, включая начальную точку нажатия.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Results of the test, including the evaluated geometry.</source>
          <target state="translated">Результаты теста, включая вычисленную геометрию.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Implements &lt;xref:System.Windows.Media.Visual.HitTestCore*&gt; to supply base element hit testing behavior (returning <bpt id="p1">&lt;xref href="System.Windows.Media.HitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Реализует &lt;xref:System.Windows.Media.Visual.HitTestCore*&gt;для предоставления базы поведения проверки нажатия для элемента (возвращая <bpt id="p1">&lt;xref href="System.Windows.Media.HitTestResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).&lt;/xref:System.Windows.Media.Visual.HitTestCore*&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the original virtual method &lt;xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt; for information on overriding this method in further derived classes.</source>
          <target state="translated">См. исходный виртуальный метод &lt;xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt;для сведения о переопределении этого метода в дальнейшей производных классов.&lt;/xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that several specific controls (&lt;xref:System.Windows.Controls.TextBlock&gt;, for example) do have distinct implementations, which override HitTestCore as defined by &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Обратите внимание, что некоторых элементов управления (&lt;xref:System.Windows.Controls.TextBlock&gt;, например) имеются разные реализации, которые переопределяют HitTestCore в соответствии с определением &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Controls.TextBlock&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called from your application code.</source>
          <target state="translated">Этот метод не предназначен для непосредственного вызова из кода приложения.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</source>
          <target state="translated">Этот метод поддерживает внутренние поведения проверки местонахождения пера, предоставляемые различными аспектами системы ввода (ли указатель мыши находится над элементом, например).</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Describes the hit test to perform, including the initial hit point.</source>
          <target state="translated">Описывает проверку нажатия, включая начальную точку нажатия.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Results of the test, including the evaluated point.</source>
          <target state="translated">Результаты теста, включая вычисленную точку.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Gets the collection of input bindings associated with this element.</source>
          <target state="translated">Возвращает коллекцию привязок ввода, связанных с этим элементом.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>Input bindings support the binding of commands to input devices.</source>
          <target state="translated">Привязки ввода поддерживают привязку команд к устройствам ввода.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, &lt;xref:System.Windows.Input.MouseBinding&gt; implements input bindings that include properties that are particular to mouse devices.</source>
          <target state="translated">Например &lt;xref:System.Windows.Input.MouseBinding&gt;реализует входных привязок, которые включают свойства, которые связаны с конкретными устройствами мыши.&lt;/xref:System.Windows.Input.MouseBinding&gt;</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</source>
          <target state="translated">Коллекция привязок ввода включает как привязки ввода, относящиеся к типу так и привязки ввода, объявленные в экземпляре.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>A related property, &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt;, maintains a collection of command bindings.</source>
          <target state="translated">Связанное свойство &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt;, поддерживает коллекцию привязок команд.&lt;/xref:System.Windows.UIElement.CommandBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</source>
          <target state="translated">Они отличаются от привязок ввода, в том, что они представляют следующего уровня вниз обработки команд - действий, привязанных к известным командам.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_InputBindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.InputBindings&gt;       oneOrMoreInputBindings     &lt;/object.InputBindings&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_InputBindings"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreInputBindings<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Input.InputBinding&gt; elements (typically the &lt;xref:System.Windows.Input.KeyBinding&gt; or &lt;xref:System.Windows.Input.MouseBinding&gt; derived classes).</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_InputBindings"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Использование элемента свойства XAML <ph id="ph1">```   &lt;object&gt;     &lt;object.InputBindings&gt;       oneOrMoreInputBindings     &lt;/object.InputBindings&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_InputBindings"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## значений XAML <bpt id="p3">*</bpt>oneOrMoreInputBindings<ept id="p3">*</ept> один или несколько &lt;xref:System.Windows.Input.InputBinding&gt;элементов (обычно &lt;xref:System.Windows.Input.KeyBinding&gt;или &lt;xref:System.Windows.Input.MouseBinding&gt;производных классах).&lt;/xref:System.Windows.Input.MouseBinding&gt; &lt;/xref:System.Windows.Input.KeyBinding&gt; &lt;/xref:System.Windows.Input.InputBinding&gt;      </target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these is expected to have a &lt;xref:System.Windows.Input.InputBinding.Command%2A&gt; and &lt;xref:System.Windows.Input.InputBinding.Gesture%2A&gt; attribute set.</source>
          <target state="translated">Каждый из них должен иметь &lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;и &lt;xref:System.Windows.Input.InputBinding.Gesture%2A&gt;набором атрибутов.&lt;/xref:System.Windows.Input.InputBinding.Gesture%2A&gt; &lt;/xref:System.Windows.Input.InputBinding.Command%2A&gt;</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The collection of input bindings.</source>
          <target state="translated">Коллекция привязок ввода.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</source>
          <target state="translated">Возвращает элемент ввода в текущий элемент, расположенный по указанным координатам относительно начала текущего элемента.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.IInputElement&gt; is returned as the return type, because that type is a common interface for both &lt;xref:System.Windows.UIElement&gt; and &lt;xref:System.Windows.ContentElement&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.IInputElement&gt;возвращается как тип возвращаемого значения, так как этот тип является общий интерфейс для обоих &lt;xref:System.Windows.UIElement&gt;и &lt;xref:System.Windows.ContentElement&gt;.&lt;/xref:System.Windows.ContentElement&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.IInputElement&gt;</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the &lt;xref:System.Windows.IInputElement&gt; interface.</source>
          <target state="translated">Затем можно привести тип, возвращаемый соответствующим образом или использовать экземпляр интерфейса для определенных элементов, определяемых &lt;xref:System.Windows.IInputElement&gt;интерфейса.&lt;/xref:System.Windows.IInputElement&gt;</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method typically is not called from your application code.</source>
          <target state="translated">Этот метод обычно не вызывается из кода приложения.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</source>
          <target state="translated">Вызов этого метода подходит только в случае, если вы собираетесь повторно реализовать значительный объем низкоуровневых функций ввода, которые уже присутствуют, например воссоздание логики устройства мыши.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.IContentHost&gt; contracts an &lt;xref:System.Windows.IContentHost.InputHitTest%2A&gt; method with the same signature, which some elements choose to implement explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.IContentHost&gt;контракты &lt;xref:System.Windows.IContentHost.InputHitTest%2A&gt;метод с такой же сигнатурой, что выбрать некоторые элементы, чтобы явно реализовать.&lt;/xref:System.Windows.IContentHost.InputHitTest%2A&gt;&lt;/xref:System.Windows.IContentHost&gt;</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>The offset coordinates within this element.</source>
          <target state="translated">Смещение координаты внутри этого элемента.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>The element child that is located at the given position.</source>
          <target state="translated">Дочерний элемент, расположенный в заданной позиции.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Invalidates the arrange state (layout) for the element.</source>
          <target state="translated">Делает недействительным состояние компоновки (структуру) элемента.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by &lt;xref:System.Windows.UIElement.UpdateLayout*&gt;.</source>
          <target state="translated">После недействительной элемент будет иметь в макете обновлены, что произойдет асинхронно, если не будет сделано принудительно &lt;xref:System.Windows.UIElement.UpdateLayout*&gt;.&lt;/xref:System.Windows.UIElement.UpdateLayout*&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Frequent calls to InvalidateArrange or in particular to &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; have significant performance consequences.</source>
          <target state="translated">Часто использовать вызовы InvalidateArrange или в частности для &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;приводит к увеличению производительности последствиям.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> in your code.</source>
          <target state="translated">Поэтому следует избегать вызова этого метода, если не требуется абсолютная точность состояния структуры для последующих вызовов других <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> в коде.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>An advanced scenario where you might call InvalidateArrange is if you are creating a &lt;xref:System.Windows.PropertyChangedCallback&gt; for a dependency property that is not on a &lt;xref:System.Windows.Freezable&gt; or &lt;xref:System.Windows.FrameworkElement&gt; derived class that still influences the arrange pass of layout when it changes.</source>
          <target state="translated">Расширенный сценарий, где может вызывать InvalidateArrange — при создании &lt;xref:System.Windows.PropertyChangedCallback&gt;для свойства зависимостей, не принадлежащем &lt;xref:System.Windows.Freezable&gt;или &lt;xref:System.Windows.FrameworkElement&gt;производный класс, по-прежнему влияет на передачу размещения разметки при его изменении.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Invalidates the measurement state (layout) for the element.</source>
          <target state="translated">Делает недействительным состояние измерения (структуру) элемента.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method also calls &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt; internally, there is no need to call InvalidateMeasure and &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt; in succession.</source>
          <target state="translated">Вызывающий этот метод также вызывает &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;внутренним образом, нет необходимости вызывать InvalidateMeasure и &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;подряд.&lt;/xref:System.Windows.UIElement.InvalidateArrange%2A&gt; &lt;/xref:System.Windows.UIElement.InvalidateArrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the invalidation, the element will have its layout updated, which will occur asynchronously, unless &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; is called to force a synchronous layout change.</source>
          <target state="translated">После недействительной, элемент будет иметь в макете обновлены, что произойдет асинхронно, если не &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;вызывается принудительно изменять макет синхронной.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</source>
          <target state="translated">Система макета уровня платформы WPF выполняет собственную обработку изменений в визуальном дереве элемента, и в наиболее распространенных случаев недействительности система структуры вызывает эквивалент этого метода, при необходимости.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</source>
          <target state="translated">Этот метод следует вызывать только при создании полной реализации структуры, которой прямая обработка дерева элементов или подобные сложных сценариях.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>One such advanced scenario is if you are creating a &lt;xref:System.Windows.PropertyChangedCallback&gt; for a dependency property that is not on a &lt;xref:System.Windows.Freezable&gt; or &lt;xref:System.Windows.FrameworkElement&gt; derived class that still influences the measure pass of layout when it changes.</source>
          <target state="translated">Один таких сложных скриптов: при создании &lt;xref:System.Windows.PropertyChangedCallback&gt;для свойства зависимостей, не принадлежащем &lt;xref:System.Windows.Freezable&gt;или &lt;xref:System.Windows.FrameworkElement&gt;производный класс, по-прежнему влияет на передачу показателей разметки при его изменении.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>Frequent calls to InvalidateMeasure or in particular to &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; have significant performance consequences.</source>
          <target state="translated">Часто использовать вызовы InvalidateMeasure или в частности для &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;приводит к увеличению производительности последствиям.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> in your code.</source>
          <target state="translated">Поэтому следует избегать вызова этого метода, если не требуется абсолютная точность состояния структуры для последующих вызовов других <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> в коде.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Invalidates the rendering of the element, and forces a complete new layout pass.</source>
          <target state="translated">Делает недействительной отрисовку элемента и принудительно новый полный этап разметки.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.UIElement.OnRender*&gt; is called after the layout cycle is completed.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.OnRender*&gt;вызывается после завершения цикла разметки.&lt;/xref:System.Windows.UIElement.OnRender*&gt;</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt; internally.</source>
          <target state="translated">Этот метод вызывает метод &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;внутренне.&lt;/xref:System.Windows.UIElement.InvalidateArrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not generally called from your application code.</source>
          <target state="translated">Этот метод обычно не вызывается из кода приложения.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</source>
          <target state="translated">Система макета уровня платформы WPF выполняет собственную обработку изменений в визуальном дереве элемента и будет вызывать эквивалент данного метода, при необходимости уже.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is necessary only for advanced scenarios.</source>
          <target state="translated">Вызов этого метода необходим только в сложных сценариях.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>One such advanced scenario is if you are creating a &lt;xref:System.Windows.PropertyChangedCallback&gt; for a dependency property that is not on a &lt;xref:System.Windows.Freezable&gt; or &lt;xref:System.Windows.FrameworkElement&gt; derived class that still influences the layout when it changes.</source>
          <target state="translated">Один таких сложных скриптов: при создании &lt;xref:System.Windows.PropertyChangedCallback&gt;для свойства зависимостей, не принадлежащем &lt;xref:System.Windows.Freezable&gt;или &lt;xref:System.Windows.FrameworkElement&gt;производный класс, по-прежнему влияет на макет при его изменении.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</source>
          <target state="translated">Возвращает значение, указывающее, допустимы ли вычисляемый размер и положение дочерних элементов в структуре данного элемента.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force arrangement to be invalidated by calling &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt; on this element (or its parents).</source>
          <target state="translated">Можно принудительно выполнить компоновку недействительными, вызвав &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;для этого элемента (или его родительских объектов).&lt;/xref:System.Windows.UIElement.InvalidateArrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flags the layout for recomposition at such time as the layout system determines.</source>
          <target state="translated">Это помечает структуру для рекомпозиции в тех пор, определяется системой структуры.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, an immediate call to &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</source>
          <target state="translated">В качестве альтернативы немедленный вызов метода &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;может быть выполнено, но это следует делать только если известно, что без дальнейшей недействительности, ожидающих выполнения (большое число излишних принудительных обновлений окажет влияние на производительность).&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>IsArrangeValid cannot be <ph id="ph1">`true`</ph> unless &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt; is also <ph id="ph2">`true`</ph> (in the layout process, arrangement cannot be valid without measurement first being valid).</source>
          <target state="translated">Не может быть IsArrangeValid <ph id="ph1">`true`</ph> Если &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt;также <ph id="ph2">`true`</ph> (в процессе разметки расположение не может быть допустимым без измерения, сначала являются допустимыми).&lt;/xref:System.Windows.UIElement.IsMeasureValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the size and position of layout are valid; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если размер и положение макета являются допустимыми; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether this element is enabled in the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Возвращает или задает значение, указывающее, включен ли этот элемент в <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this property is influenced by class-specific implementations of &lt;xref:System.Windows.UIElement.IsEnabledCore%2A&gt; on particular elements, often at runtime.</source>
          <target state="translated">Обратите внимание, что это свойство зависит от реализации данного класса &lt;xref:System.Windows.UIElement.IsEnabledCore%2A&gt;на отдельных элементов, часто во время выполнения.&lt;/xref:System.Windows.UIElement.IsEnabledCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the default value listed here is sometimes not effective.</source>
          <target state="translated">Таким образом значение по умолчанию, перечисленных здесь не иногда действует.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a &lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt; will be IsEnabled <ph id="ph1">`false`</ph> whenever it is determined that there is no need to support a scrollbar.</source>
          <target state="translated">Например &lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;будет IsEnabled <ph id="ph1">`false`</ph> каждый раз, когда выясняется, что нет необходимости для поддержки прокрутки.&lt;/xref:System.Windows.Controls.Primitives.ScrollBar&gt;</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this value will also potentially be overridden by the value returned by &lt;xref:System.Windows.UIElement.IsEnabledCore%2A&gt;.</source>
          <target state="translated">Попытка задать это значение будет также может быть переопределено значения, возвращенного &lt;xref:System.Windows.UIElement.IsEnabledCore%2A&gt;.&lt;/xref:System.Windows.UIElement.IsEnabledCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</source>
          <target state="translated">Элементы, которые не включены не участвуют в проверке нажатия или фокусе и таким образом, не могут быть источниками входных событий.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsEnabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsEnabledProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsEnabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsEnabledProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsEnabledProperty&gt;</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если элемент включен; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsEnabled*&gt; property on this element changes.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.IsEnabled*&gt;Свойства для данного элемента.&lt;/xref:System.Windows.UIElement.IsEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Gets a value that becomes the return value of &lt;xref:System.Windows.UIElement.IsEnabled*&gt; in derived classes.</source>
          <target state="translated">Возвращает значение, возвращаемое значение становится &lt;xref:System.Windows.UIElement.IsEnabled*&gt;в производных классах.&lt;/xref:System.Windows.UIElement.IsEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если элемент включен; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsEnabled*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsEnabled*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Gets a value that determines whether this element has logical focus.</source>
          <target state="translated">Возвращает значение, определяющее, является ли этот элемент имеет логический фокус.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</source>
          <target state="translated">Логический фокус могут отличаться от фокус клавиатуры, если приложение имеет несколько фокусных секций, например между содержанием меню и остальной частью приложения.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</source>
          <target state="translated">В этом случае фокус клавиатуры можно только на одном элементе пользовательского интерфейса приложения, но некоторые элементы в других разделах фокуса могут сохранять логический фокус.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on logical focus, see <bpt id="p1">[</bpt>Focus Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о логическом фокусе см <bpt id="p1">[</bpt>фокус Обзор<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not set focus by setting this property (it is read-only).</source>
          <target state="translated">Не устанавливайте фокус, присвоив этому свойству (это только для чтения).</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical use for this property is to use it as a dependency property for a &lt;xref:System.Windows.Setter&gt; or &lt;xref:System.Windows.EventTrigger&gt;.</source>
          <target state="translated">Обычно это свойство используется для использования его в качестве свойства зависимостей &lt;xref:System.Windows.Setter&gt;или &lt;xref:System.Windows.EventTrigger&gt;.&lt;/xref:System.Windows.EventTrigger&gt; &lt;/xref:System.Windows.Setter&gt;</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set focus programmatically, call &lt;xref:System.Windows.UIElement.Focus%2A&gt;.</source>
          <target state="translated">Чтобы установить фокус программными средствами, вызовите &lt;xref:System.Windows.UIElement.Focus%2A&gt;.&lt;/xref:System.Windows.UIElement.Focus%2A&gt;</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</source>
          <target state="translated">Также можно установить фокус, действием пользователя или реализацией управления, которые могут включать поведение захвата мыши.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsFocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsFocusedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsFocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsFocusedProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsFocusedProperty&gt;</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element has logical focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если этот элемент имеет логический фокус; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsFocused*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsFocused*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsFocused*&gt;</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</source>
          <target state="translated">Возвращает или задает значение, указывающее, может ли этот элемент будет возвращен в результате проверки нажатия из какой-либо части его отображаемого содержимого.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</source>
          <target state="translated">Действительное значение данного свойства зависит от относительные позиции поддерживающих проверку нажатия элементов в логическом дереве.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain <ph id="ph1">`false`</ph>, even if attempting to set that value locally.</source>
          <target state="translated">Для экземпляра, если элемент является дочерним для элемента элемент, который является не нажатия видимым, действительное значение свойства для дочернего элемента останется <ph id="ph1">`false`</ph>, даже если при попытке задать это значение локально.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, it is important that you do not set IsHitTestVisible to <ph id="ph1">`false`</ph> on a composited control unless you do not want any input or hit testing on that control.</source>
          <target state="translated">По этой причине важно не задано IsHitTestVisible <ph id="ph1">`false`</ph> в составном элементе управления, если только не требуется никаких входных данных и попадания для данного элемента управления.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on hit testing, see <bpt id="p1">[</bpt>Hit Testing in the Visual Layer<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о проверке нажатия см. в разделе <bpt id="p1">[</bpt>нажатия на визуальном уровне<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsHitTestVisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsHitTestVisibleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsHitTestVisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsHitTestVisibleProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsHitTestVisibleProperty&gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element could be returned as a hit test result from at least one point; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если данный элемент может быть возвращен как результат проверки нажатия из по крайней мере одной точки; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsHitTestVisible*&gt; dependency property changes on this element.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.IsHitTestVisible*&gt;изменения свойств зависимостей для этого элемента.&lt;/xref:System.Windows.UIElement.IsHitTestVisible*&gt;</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsHitTestVisible*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsHitTestVisible*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsHitTestVisible*&gt;</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether an input method system, such as an <ph id="ph1">[!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)]</ph>,  is enabled for processing the input to this element.</source>
          <target state="translated">Возвращает значение, указывающее, является ли в системе метода ввода, такие как <ph id="ph1">[!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)]</ph>, активирована для обработки входных данных для этого элемента.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns the value that is returned by the attached property &lt;xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName&gt; for the currently enabled input methods (keyboard, speech, and other input devices).</source>
          <target state="translated">Это свойство возвращает значение, которое возвращается вложенное свойство &lt;xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName&gt;для в настоящий момент разрешенные методы ввода (клавиатуры, речи и других устройств ввода).&lt;/xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an input method is active; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если метод ввода активен; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>The default value of the underlying attached property is <bpt id="p1">&lt;xref uid="langword_csharp_true;" name="true;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> however, this will be influenced by the actual state of input methods at runtime.</source>
          <target state="translated">Значение по умолчанию базового прикрепленного свойства — <bpt id="p1">&lt;xref uid="langword_csharp_true;" name="true;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> тем не менее, это повлияет фактическое состояние методов ввода во время выполнения.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this element has keyboard focus.</source>
          <target state="translated">Возвращает значение, указывающее, является ли данный элемент фокус клавиатуры.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to the determined value of this property may be accompanied by focus-related events.</source>
          <target state="translated">Изменения на определенное значение этого свойства может сопровождаться события, связанные с фокусом.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>IsKeyboardFocused and &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</source>
          <target state="translated">IsKeyboardFocused и &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;обычно используются в обработчиках событий класса для других событий, например для определения ли элемент уже имеет фокус клавиатуры или вносить решения при мыши события и события клавиатуры возникают вместе.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsKeyboardFocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsKeyboardFocusedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsKeyboardFocused"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsKeyboardFocusedProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsKeyboardFocusedProperty&gt;</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element has keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если этот элемент имеет фокус клавиатуры; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsKeyboardFocused*&gt; property changes on this element.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.IsKeyboardFocused*&gt;изменения свойств для этого элемента.&lt;/xref:System.Windows.UIElement.IsKeyboardFocused*&gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsKeyboardFocused*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsKeyboardFocused*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsKeyboardFocused*&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</source>
          <target state="translated">Возвращает значение, указывающее, находится ли фокус клавиатуры элемент или его дочерних элементах визуального дерева.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to the value of this property typically raise the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt; event, unless a derived class has overridden &lt;xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A&gt; to suppress the event.</source>
          <target state="translated">Изменения значения этого свойства обычно вызывают &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;событие, если производный класс не переопределяет &lt;xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A&gt;Отключение событие.&lt;/xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A&gt; &lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not set this property directly, but you can set the focus to an element by calling &lt;xref:System.Windows.UIElement.Focus%2A&gt;, or by making a &lt;xref:System.Windows.UIElement.MoveFocus%2A&gt; request.</source>
          <target state="translated">Это свойство не задано непосредственно, но можно перевести фокус на элемент, вызвав &lt;xref:System.Windows.UIElement.Focus%2A&gt;, или путем создания &lt;xref:System.Windows.UIElement.MoveFocus%2A&gt;запроса.&lt;/xref:System.Windows.UIElement.MoveFocus%2A&gt; &lt;/xref:System.Windows.UIElement.Focus%2A&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>Either of these method calls might change this property value.</source>
          <target state="translated">Одно из этих вызовов метода может изменить значение этого свойства.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt; and IsKeyboardFocusWithin are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;и IsKeyboardFocusWithin обычно используются в обработчиках событий класса для других событий, например чтобы определить элемент уже имеет фокус клавиатуры, или делать решения при мыши события и события клавиатуры возникают вместе.&lt;/xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsKeyboardFocusWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsKeyboardFocusWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty&gt;</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if keyboard focus is on the element or its child elements; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если фокус клавиатуры находится на элементе или его дочерними элементами; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the IsKeyboardFocusWithinChanged property changes on this element.</source>
          <target state="translated">Происходит при изменении значения свойства IsKeyboardFocusWithinChanged данного элемента.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin*&gt;</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether manipulation events are enabled on this <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Возвращает или задает значение, указывающее, включены ли события манипуляции в данном <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to true if you want the &lt;xref:System.Windows.UIElement&gt; to receive the &lt;xref:System.Windows.UIElement.ManipulationStarting&gt;, &lt;xref:System.Windows.UIElement.ManipulationStarted&gt;, &lt;xref:System.Windows.UIElement.ManipulationDelta&gt;, &lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;, &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;, and &lt;xref:System.Windows.UIElement.ManipulationCompleted&gt; events.</source>
          <target state="translated">Если установлено значение true, если вы хотите &lt;xref:System.Windows.UIElement&gt;получать &lt;xref:System.Windows.UIElement.ManipulationStarting&gt;, &lt;xref:System.Windows.UIElement.ManipulationStarted&gt;, &lt;xref:System.Windows.UIElement.ManipulationDelta&gt;, &lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;, &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;, и &lt;xref:System.Windows.UIElement.ManipulationCompleted&gt;события.&lt;/xref:System.Windows.UIElement.ManipulationCompleted&gt; &lt;/xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt; &lt;/xref:System.Windows.UIElement.ManipulationInertiaStarting&gt; &lt;/xref:System.Windows.UIElement.ManipulationDelta&gt; &lt;/xref:System.Windows.UIElement.ManipulationStarted&gt; &lt;/xref:System.Windows.UIElement.ManipulationStarting&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о манипуляциях см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Пример приложения, который реагирует на манипуляции см. в разделе <bpt id="p1">[</bpt>Пошаговое руководство: создание первого Touch приложения<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if manipulation events are enabled on this <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если на это включены события манипуляции <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; в противном случае <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsManipulationEnabled*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsManipulationEnabled*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsManipulationEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current size returned by layout measure is valid.</source>
          <target state="translated">Возвращает значение, указывающее, допустим ли текущий размер, возвращенный измерением структуры.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force measurement and arrangement to be invalidated by calling &lt;xref:System.Windows.UIElement.InvalidateMeasure%2A&gt; on this element (or any parent element up the visual tree).</source>
          <target state="translated">Можно принудительно измерение и компоновку недействительными, вызвав метод &lt;xref:System.Windows.UIElement.InvalidateMeasure%2A&gt;для этого элемента (или любого родительского элемента вверх по визуальному дереву).&lt;/xref:System.Windows.UIElement.InvalidateMeasure%2A&gt;</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</source>
          <target state="translated">Это назначает структуру для рекомпозиции асинхронно, происходящих во время, определяемое системой макета.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you could make an immediate call to &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;.</source>
          <target state="translated">Кроме того можно внести немедленный вызов метода &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you should only call &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</source>
          <target state="translated">Тем не менее, следует вызывать только &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;Если весьма вероятно, что без дальнейшей недействительности, ожидающих выполнения (большое число излишних принудительных обновлений будет иметь влияние на производительность).&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>If IsMeasureValid is <ph id="ph1">`false`</ph>, &lt;xref:System.Windows.UIElement.IsArrangeValid%2A&gt; must also be <ph id="ph2">`false`</ph> (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</source>
          <target state="translated">Если IsMeasureValid <ph id="ph1">`false`</ph>, &lt;xref:System.Windows.UIElement.IsArrangeValid%2A&gt;также должен быть <ph id="ph2">`false`</ph> (логикой принудительно процесса компоновки, расположение не может быть допустимым без измерения, сначала являются допустимыми).&lt;/xref:System.Windows.UIElement.IsArrangeValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the measure pass of layout returned a valid and current value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если проход измерения макета вернул значение действительными и текущими; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the mouse is captured to this element.</source>
          <target state="translated">Возвращает значение, указывающее, захвачена ли мышь к данному элементу.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mouse capture state is related to in-process drag-and-drop operations.</source>
          <target state="translated">Состояние захвата мыши соотносится с операции перетаскивания и вставки в процессе.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseCaptured"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsMouseCapturedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseCaptured"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsMouseCapturedProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsMouseCapturedProperty&gt;</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element has mouse capture; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если элемент имеет захват мыши; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsMouseCaptured*&gt; property changes on this element.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.IsMouseCaptured*&gt;изменения свойств для этого элемента.&lt;/xref:System.Windows.UIElement.IsMouseCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsMouseCaptured*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsMouseCaptured*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsMouseCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</source>
          <target state="translated">Возвращает значение, определяющее, удерживается ли захват мыши данным элементом или дочерними элементами его визуального дерева.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseCaptureWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsMouseCaptureWithinProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseCaptureWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsMouseCaptureWithinProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsMouseCaptureWithinProperty&gt;</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element or a contained element has mouse capture; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если элемент или содержащийся в нем элемент получил захват мыши; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCaptureWithinProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> changes on this element.</source>
          <target state="translated">Происходит, когда значение <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCaptureWithinProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> изменений для этого элемента.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsMouseCaptureWithin*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsMouseCaptureWithin*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsMouseCaptureWithin*&gt;</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</source>
          <target state="translated">Возвращает значение, указывающее, соответствует ли позиция указателя мыши результатам проверки нажатия, которой учитывается компоновка элемента.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;, this property is only <ph id="ph1">`true`</ph> if the mouse pointer is over the literal element—as it is for a hit test.</source>
          <target state="translated">В отличие от &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;, это свойство доступно только <ph id="ph1">`true`</ph> если указатель мыши находится над элемент literal, как и для попаданий тест.&lt;/xref:System.Windows.UIElement.IsMouseOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если указатель мыши находится над дочерним элементом, в частности по элементам, которые являются частью глубокого шаблона элемента и его композиции, это свойство будет <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</source>
          <target state="translated">Если вы не знаете как составного элемента управления (например, используется это свойство в пользовательский шаблон элемента управления для элемента управления, можно определить), это свойство может возвращать непредвиденные результаты.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most scenarios where you are not authoring controls, use &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt; instead.</source>
          <target state="translated">В большинстве сценариев, где вы не создаете элементы управления, использовать &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;вместо.&lt;/xref:System.Windows.UIElement.IsMouseOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse is captured by this element, and this property is <ph id="ph1">`true`</ph> at time of capture, this property will continue to return <ph id="ph2">`true`</ph> until mouse capture is lost and the pointer is not over its bounds.</source>
          <target state="translated">Если мышь захвачена элементом, и это свойство является <ph id="ph1">`true`</ph> во время записи, это свойство будет продолжать возвращать <ph id="ph2">`true`</ph> пока захват мыши не будет потерян и указатель не выйдет за границы элемента.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseDirectlyOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseDirectlyOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverProperty&gt;</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the mouse pointer is over the same element result as a hit test; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если указатель мыши находится над тем же элементом проверки нажатия; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt; property changes on this element.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt;изменения свойств для этого элемента.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</source>
          <target state="translated">Возвращает значение, указывающее, находится ли указатель мыши над данным элементом (включая дочерние элементы в визуальном дереве).</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</source>
          <target state="translated">Как правило элементы управления составляются таким образом, что различные элементы внутри элемента управления (визуальное дерево) сообщают состояние мыши для вмещающего элемента управления.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a &lt;xref:System.Windows.Controls.ListBox&gt; style control will report IsMouseOver as <ph id="ph1">`true`</ph> if the mouse is anywhere over its geometry, including any &lt;xref:System.Windows.Controls.ListBoxItem&gt;.</source>
          <target state="translated">Например &lt;xref:System.Windows.Controls.ListBox&gt;стиля элемента управления сообщит IsMouseOver как <ph id="ph1">`true`</ph> если указатель мыши в любом месте за геометрического объекта, включая любые &lt;xref:System.Windows.Controls.ListBoxItem&gt;.&lt;/xref:System.Windows.Controls.ListBoxItem&gt; &lt;/xref:System.Windows.Controls.ListBox&gt;</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</source>
          <target state="translated">Несмотря на то, что аналогичные события «IsMouseOverChanged» не существует, выполните несколько схожих событий.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can handle &lt;xref:System.Windows.UIElement.MouseEnter&gt;, &lt;xref:System.Windows.UIElement.MouseMove&gt;, and &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.</source>
          <target state="translated">Например, можно обработать &lt;xref:System.Windows.UIElement.MouseEnter&gt;, &lt;xref:System.Windows.UIElement.MouseMove&gt;и &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt; &lt;/xref:System.Windows.UIElement.MouseMove&gt; &lt;/xref:System.Windows.UIElement.MouseEnter&gt;</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element captures the mouse, this property remains <ph id="ph1">`true`</ph> until mouse capture is lost and the mouse pointer leaves the element bounds.</source>
          <target state="translated">При захвате мыши данным элементом, это свойство остается <ph id="ph1">`true`</ph> пока захват мыши не будет потерян и указатель мыши покидает границы элемента.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</source>
          <target state="translated">Некоторые элементы управления произвольно захватывают мышь на определенные действия, которые не затрагивают мышь напрямую.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can lead to IsMouseOver being <ph id="ph1">`true`</ph> even though the mouse has not apparently moved.</source>
          <target state="translated">Это может привести к состоянию IsMouseOver <ph id="ph1">`true`</ph> несмотря на то, что мышь перемещена не очевидно.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsMouseOverProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsMouseOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsMouseOverProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsMouseOverProperty&gt;</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if mouse pointer is over the element or its child elements; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если указатель мыши находится над элементом или его дочерними элементами; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsMouseOver*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsMouseOver*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsMouseOver*&gt;</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the stylus is captured by this element.</source>
          <target state="translated">Возвращает значение, указывающее, захвачено ли перо данным элементом.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusCaptured"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsStylusCapturedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusCaptured"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsStylusCapturedProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsStylusCapturedProperty&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element has stylus capture; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если элемент имеет захват пера; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsStylusCaptured*&gt; property changes on this element.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.IsStylusCaptured*&gt;изменения свойств для этого элемента.&lt;/xref:System.Windows.UIElement.IsStylusCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsStylusCaptured*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsStylusCaptured*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsStylusCaptured*&gt;</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</source>
          <target state="translated">Возвращает значение, определяющее, является ли захват пера удерживается данным элементом или элементом в пределах границ элемента и его визуального дерева.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Touch Input Support in Windows Vista<ept id="p1">](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0)</ept> and <bpt id="p2">[</bpt>Input Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Touch поддержки входных данных в Windows Vista<ept id="p1">](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0)</ept> и <bpt id="p2">[</bpt>фокусе<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusCaptureWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsStylusCaptureWithinProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusCaptureWithin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsStylusCaptureWithinProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithinProperty&gt;</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element or a contained element has stylus capture; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если элемент или содержащийся в нем элемент получил захват пера; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt; property changes on this element.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt;изменения свойств для этого элемента.&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt;</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Это <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> события, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithin*&gt;</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</source>
          <target state="translated">Возвращает значение, указывающее, соответствует ли позиция пера результатам проверки нажатия, которой учитывается компоновка элемента.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;, this property is only <ph id="ph1">`true`</ph> if the stylus is over the element.</source>
          <target state="translated">В отличие от &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;, это свойство доступно только <ph id="ph1">`true`</ph> если перо находится над элементом.&lt;/xref:System.Windows.UIElement.IsStylusOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если перо находится над дочерним элементом или над элементами, которые являются частью глубокой композиции элемента (визуальное дерево), это свойство будет <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</source>
          <target state="translated">Если вы не знаете как составного элемента управления (например, используется это свойство в пользовательский шаблон элемента управления для элемента управления, можно определить), это свойство может возвращать непредвиденные результаты.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most scenarios where you are not authoring controls, use &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt; instead.</source>
          <target state="translated">В большинстве сценариев, где вы не создаете элементы управления, использовать &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;вместо.&lt;/xref:System.Windows.UIElement.IsStylusOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element has stylus capture and this property is <ph id="ph1">`true`</ph> at the time of capture, this property remains <ph id="ph2">`true`</ph> until stylus capture is lost and the stylus is not over its bounds.</source>
          <target state="translated">Если этот элемент имеет захват пера, и это свойство является <ph id="ph1">`true`</ph> во время записи, это свойство остается <ph id="ph2">`true`</ph> пока не будет освобождено и перо не выйдет за границы элемента.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusDirectlyOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsStylusDirectlyOverProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusDirectlyOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsStylusDirectlyOverProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOverProperty&gt;</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stylus pointer is over the same element result as a hit test; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если указатель пера находится над тем же элементом проверки нажатия; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt; property changes on this element.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt;изменения свойств для этого элемента.&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOver*&gt;</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</source>
          <target state="translated">Возвращает значение, указывающее, находится ли курсор пера над данным элементом (включая визуальные дочерние элементы).</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element has stylus capture, this property will continue to return <ph id="ph1">`true`</ph> until stylus capture is lost and the pointer is out of its bounds.</source>
          <target state="translated">Если этот элемент имеет захват пера, это свойство будет продолжать возвращать <ph id="ph1">`true`</ph> пока не будет освобождено и указатель мыши выходит за его границы.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsStylusOverProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsStylusOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsStylusOverProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsStylusOverProperty&gt;</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if stylus cursor is over the element or its child elements; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если курсор пера находится над элементом или его дочерними элементами; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsStylusOver*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsStylusOver*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsStylusOver*&gt;</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this element is visible in the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Возвращает значение, указывающее, видим ли данный элемент в <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>Determination of the IsVisible value takes all factors of layout into account.</source>
          <target state="translated">Определение значения IsVisible учитывает все факторы макета.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, &lt;xref:System.Windows.UIElement.Visibility%2A&gt;, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</source>
          <target state="translated">Напротив &lt;xref:System.Windows.UIElement.Visibility%2A&gt;, являющееся задаваемое свойство только указывает на намерение программно сделать элемент видимым или невидимым.&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements where IsVisible is <ph id="ph1">`false`</ph> do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</source>
          <target state="translated">Элементы, где IsVisible <ph id="ph1">`false`</ph> не участвуют в событиях ввода (или командах), не влияют на проход измерения или компоновки структуры, не получают фокус, не входящие в последовательность перехода и не будут включаться в проверки нажатия.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, elements where &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt; is <ph id="ph1">`false`</ph> will still participate in events and commands, and hit testing, but are also not focusable.</source>
          <target state="translated">В отличие от этого, элементы которой &lt;xref:System.Windows.UIElement.IsEnabled%2A&gt;— <ph id="ph1">`false`</ph> по-прежнему будет участвовать в события и команды и попадания, хотя и не может иметь фокус.&lt;/xref:System.Windows.UIElement.IsEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsVisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.IsVisibleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsVisible"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.IsVisibleProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.IsVisibleProperty&gt;</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если элемент видим; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.UIElement.IsVisible*&gt; property changes on this element.</source>
          <target state="translated">Происходит, когда значение &lt;xref:System.Windows.UIElement.IsVisible*&gt;изменения свойств для этого элемента.&lt;/xref:System.Windows.UIElement.IsVisible*&gt;</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the &lt;xref:System.Windows.UIElement.IsVisible%2A&gt; property.</source>
          <target state="translated">Это событие не происходит, если элемент не визуализируется системой структуры по причинам, отличным от значения &lt;xref:System.Windows.UIElement.IsVisible%2A&gt;свойство.&lt;/xref:System.Windows.UIElement.IsVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the element might not have an associated visual.</source>
          <target state="translated">Например элемент не может иметь связан визуальный.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.IsVisible*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.IsVisible*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.IsVisible*&gt;</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>Occurs when a key is pressed while focus is on this element.</source>
          <target state="translated">Происходит при нажатии клавиши, когда фокус ввода установлен на данном элементе.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key handling interacts with other platform features such as commanding and text composition.</source>
          <target state="translated">Обработка клавиш взаимодействует с другими функциями платформы, такие как выполнение команд и композиция текста.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>The KeyDown event is a lower-level text input event that might not behave as expected on certain controls.</source>
          <target state="translated">События KeyDown является событием входной текст нижнего уровня, которое может работать некорректно, в некоторых элементах управления.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</source>
          <target state="translated">Это так, как некоторые элементы управления имеют композиции элементов управления или обработку ввода обработку класса, который предоставляет более высокого уровня версия текста, а также связанные события.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event for this class so that KeyDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы KeyDown часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the KeyDown event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, подключенные к событием KeyDown подключены к основному &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_KeyDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.KeyDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewKeyDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_KeyDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.KeyDownEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewKeyDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewKeyDown&gt; &lt;/xref:System.Windows.Input.KeyEventHandler&gt; &lt;/xref:System.Windows.UIElement.KeyDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnKeyDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnKeyDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnKeyDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Occurs when a key is released while focus is on this element.</source>
          <target state="translated">Происходит при отпускании клавиши, когда фокус ввода установлен на данном элементе.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event for this class so that  KeyUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы KeyUp часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the KeyUp event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию KeyUp присоединяются к базовому объекту &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_KeyUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.KeyUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewKeyUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_KeyUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.KeyUpEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewKeyUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewKeyUp&gt; &lt;/xref:System.Windows.Input.KeyEventHandler&gt; &lt;/xref:System.Windows.UIElement.KeyUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnKeyUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnKeyUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnKeyUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Occurs when the layout of the various visual elements associated with the current <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> changes.</source>
          <target state="translated">Происходит при различных визуальных элементов макета, связанной с текущим <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> изменений.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>A layout update can occur as a result of a property change, a window resize, or an explicit user request.</source>
          <target state="translated">Обновление структуры может произойти в результате изменения свойства, изменения размеров окна или по явному запросу пользователя.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.</source>
          <target state="translated">Этот член представляет <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> событий, не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>Occurs when this element loses logical focus.</source>
          <target state="translated">Происходит при потере данным элементом логического фокуса.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</source>
          <target state="translated">Логический фокус отличается от фокуса, если фокус был намеренно вытеснен посредством вызова метода, но на другом уровне существует предыдущий фокус клавиатуры.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, keyboard focus remains where it is, and the element where a &lt;xref:System.Windows.UIElement.Focus%2A&gt; method is called still gets logical focus.</source>
          <target state="translated">В этом сценарии, остается фокус клавиатуры, там, где это и элемент где &lt;xref:System.Windows.UIElement.Focus%2A&gt;вызывается метод по-прежнему возвращает логический фокус.&lt;/xref:System.Windows.UIElement.Focus%2A&gt;</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>A more precise interpretation of this event is that it is raised when the value of the &lt;xref:System.Windows.UIElement.IsFocused%2A&gt; property of an element in the route changes from <ph id="ph1">`true`</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Точнее интерпретацию этого события является что он вызывается, когда значение &lt;xref:System.Windows.UIElement.IsFocused%2A&gt;изменяет свойства элемента в маршруте с <ph id="ph1">`true`</ph> для <ph id="ph2">`false`</ph>.&lt;/xref:System.Windows.UIElement.IsFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Вследствие этого события восходящей маршрутизации, элемент, который теряет фокус может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that gained focus.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;в данных события, чтобы определить фактический элемент, полученные фокус.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|      -   There is no corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.LostFocusEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.RoutedEventHandler&gt;|      -Нет соответствующего события нисходящей.&lt;/xref:System.Windows.RoutedEventHandler&gt; &lt;/xref:System.Windows.UIElement.LostFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnLostFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnLostFocus%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnLostFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>Occurs when the keyboard is no longer focused on this element,.</source>
          <target state="translated">Происходит, когда на этот элемент больше не фокус ввода с клавиатуры.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Вследствие этого события восходящей маршрутизации, элемент, который потерял фокус ввода может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost focus.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;в данных события, чтобы определить фактический элемент, который потерял фокус.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event for this class, so that LostKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы LostKeyboardFocus часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the LostKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию LostKeyboardFocus присоединяются к базовому объекту &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostKeyboardFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.LostKeyboardFocusEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt;.&lt;/xref:System.Windows.UIElement.PreviewLostKeyboardFocus&gt; &lt;/xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt; &lt;/xref:System.Windows.UIElement.LostKeyboardFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnLostKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnLostKeyboardFocus%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnLostKeyboardFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostKeyboardFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>Occurs when this element loses mouse capture.</source>
          <target state="translated">Происходит при потере элементом захвата мыши.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</source>
          <target state="translated">При захвате мыши элементом, он получает ввод от мыши, даже если указатель находится вне границ элемента.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mouse is typically captured only during drag-and-drop operations.</source>
          <target state="translated">Мышь обычно захватывается только во время операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Вследствие этого события восходящей маршрутизации, элемент, который теряет захват может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost capture.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;в данных события, чтобы определить фактический элемент, который потерял захват.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event for this class, so that LostMouseCapture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы LostMouseCapture часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the LostMouseCapture event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию LostMouseCapture присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostMouseCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostMouseCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostMouseCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.LostMouseCaptureEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Отсутствует соответствующее событие не определено туннелирования.&lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.LostMouseCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnLostMouseCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnLostMouseCapture%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnLostMouseCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>Occurs when this element loses stylus capture.</source>
          <target state="translated">Происходит при потере элементом захвата пера.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</source>
          <target state="translated">При захвате пера элементом, он получает ввод от пера, даже если указатель находится вне границ элемента.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stylus is typically captured only during drag-and-drop operations.</source>
          <target state="translated">Перо обычно захватывается только во время операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Вследствие этого события восходящей маршрутизации, элемент, который теряет фокус может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost focus.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;в данных события, чтобы определить фактический элемент, который потерял фокус.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event for this class, so that LostStylusCapture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы LostStylusCapture часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the LostStylusCapture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию LostStylusCapture присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostStylusCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostStylusCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostStylusCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.LostStylusCaptureEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Отсутствует соответствующее событие не определено туннелирования.&lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.LostStylusCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnLostStylusCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnLostStylusCapture%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnLostStylusCapture%2A&gt;</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostStylusCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostStylusCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>Occurs when this element loses a touch capture.</source>
          <target state="translated">Происходит при потере элементом захвата сенсорный ввод.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_LostTouchCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.LostTouchCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement.OnLostTouchCapture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_LostTouchCapture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.LostTouchCaptureEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Переопределить &lt;xref:System.Windows.UIElement.OnLostTouchCapture%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnLostTouchCapture%2A&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.LostTouchCaptureEvent&gt;</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostTouchCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostTouchCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>Occurs when the manipulation encounters a boundary.</source>
          <target state="translated">Происходит, когда манипуляция сталкивается с границей.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationBoundaryFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationBoundaryFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent&gt;</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>Occurs when a manipulation and inertia on the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is complete.</source>
          <target state="translated">Происходит, когда манипуляции и инерции в <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекта завершена.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event to get information about the manipulation when it completes.</source>
          <target state="translated">Это событие можно использовать для получения сведений о манипуляции после ее завершения.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the &lt;xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=fullName&gt; property to determine the total amount the position of the manipulation changed.</source>
          <target state="translated">Например, можно использовать &lt;xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=fullName&gt;Изменить свойство для определения общей суммы позиции манипуляции.&lt;/xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о манипуляциях см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Пример приложения, который реагирует на манипуляции см. в разделе <bpt id="p1">[</bpt>Пошаговое руководство: создание первого Touch приложения<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationCompleted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationCompletedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationCompletedEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationCompleted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.ManipulationCompletedEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationCompletedEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationCompletedEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationCompletedEvent&gt;</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationCompleted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Occurs when the input device changes position during a manipulation.</source>
          <target state="translated">Происходит при устройство ввода меняет положение в процессе манипуляции.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManipulationDelta event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</source>
          <target state="translated">Это событие ManipulationDelta возникает несколько раз, когда пользователь перетаскивает пальца по экрану во время обработки и при инерции.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A&gt; property to check whether the event is occurring during inertia.</source>
          <target state="translated">Можно использовать &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A&gt;свойство, чтобы проверить, является ли событие происходит во время инерции.&lt;/xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A&gt;</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>The element on with ManipulationDelta event occurs is not affected in any way when the event occurs.</source>
          <target state="translated">На элемент с событием ManipulationDelta влияния не оказывается каким-либо образом при возникновении события.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must provide the logic to the element that is to be manipulated.</source>
          <target state="translated">Необходимо предоставить логику для элемента, должны обрабатываться.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt; and &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt; properties, which are of type &lt;xref:System.Windows.Input.ManipulationDelta&gt;, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</source>
          <target state="translated">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;И &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;Свойства, которые относятся к типу &lt;xref:System.Windows.Input.ManipulationDelta&gt;, содержат данные о изменение позиции манипуляций и интерпретируются как перемещение, изменение размера или поворот объекта.&lt;/xref:System.Windows.Input.ManipulationDelta&gt; &lt;/xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt; &lt;/xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT">
          <source>You apply that information to the element that is to be manipulated.</source>
          <target state="translated">Эти сведения применяются для элемента, должны обрабатываться.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о манипуляциях см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Пример приложения, который реагирует на манипуляции см. в разделе <bpt id="p1">[</bpt>Пошаговое руководство: создание первого Touch приложения<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationDelta"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationDeltaEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationDelta"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.ManipulationDeltaEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationDeltaEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationDeltaEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationDeltaEvent&gt;</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationDelta"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationDelta"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>Occurs when the input device loses contact with the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object during a manipulation and inertia begins.</source>
          <target state="translated">Происходит, когда устройство ввода теряет контакт с <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объект во время манипуляции и инерции начинается.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManipulationInertiaStarting event occurs when the user lifts all of the fingers from the screen during a manipulation.</source>
          <target state="translated">Это событие ManipulationInertiaStarting возникает, когда пользователь отрывает все пальцев на экране во время обработки.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a user "throws" a &lt;xref:System.Windows.UIElement&gt; across a surface, the user will touch the &lt;xref:System.Windows.UIElement&gt; to begin the action, move the finger across the screen for a short distance, and then release the &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Например, если пользователь «вызывает» &lt;xref:System.Windows.UIElement&gt;по поверхности, пользователь будет затронуто &lt;xref:System.Windows.UIElement&gt;начинается действие перемещения пальцем по экрану для короткое расстояние и отпустите &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user releases the element, inertia begins and the ManipulationInertiaStarting event occurs.</source>
          <target state="translated">Когда пользователь отпускает элемент, инерции начинается и событие ManipulationInertiaStarting.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement&gt; continues to receive &lt;xref:System.Windows.UIElement.ManipulationDelta&gt; events to indicate that inertia is occurring on the element.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement&gt;Продолжает получать &lt;xref:System.Windows.UIElement.ManipulationDelta&gt;события, чтобы указать, что происходит в элементе инерции.&lt;/xref:System.Windows.UIElement.ManipulationDelta&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event to specify the behavior of the inertia.</source>
          <target state="translated">Это событие можно использовать для указания поведения инерции.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can set the initial velocity that is used when inertia begins.</source>
          <target state="translated">Например можно задать начальную скорость, которая используется, когда начинается инерция.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</source>
          <target state="translated">Можно также указать величину инерции, задав требуемое замедление или установив нужное размещение.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</source>
          <target state="translated">Можно задать эти значения для каждого типа манипуляции (трансляции, расширения или вращения) независимо друг от друга.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;.</source>
          <target state="translated">Дополнительные сведения см. в разделе &lt;xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;.&lt;/xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о манипуляциях см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Пример приложения, который реагирует на манипуляции см. в разделе <bpt id="p1">[</bpt>Пошаговое руководство: создание первого Touch приложения<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationInertiaStarting"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationInertiaStartingEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationInertiaStarting"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.ManipulationInertiaStartingEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationInertiaStartingEvent&gt;</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationInertiaStarting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationInertiaStarting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>Occurs when an input device begins a manipulation on the <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Происходит при начале манипуляции устройства ввода <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекта.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManipulationStarted event occurs after the &lt;xref:System.Windows.UIElement.ManipulationStarting&gt; event.</source>
          <target state="translated">Событие ManipulationStarted возникает после &lt;xref:System.Windows.UIElement.ManipulationStarting&gt;событий.&lt;/xref:System.Windows.UIElement.ManipulationStarting&gt;</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do the following with the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs&gt;:      -   Get the element that the manipulation's position is relative to by using the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A&gt; property.</source>
          <target state="translated">Действия с &lt;xref:System.Windows.Input.ManipulationStartedEventArgs&gt;:-получить элемент, позиция манипуляции относительно, используя &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A&gt;свойство.&lt;/xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A&gt; &lt;/xref:System.Windows.Input.ManipulationStartedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Get the origin of the manipulation by using the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A&gt; property.</source>
          <target state="translated">-Получение исходная точка манипуляции с помощью &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A&gt;свойство.&lt;/xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A&gt;</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Cancel the manipulation by calling the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A&gt; method.</source>
          <target state="translated">-Отменить обработку путем вызова &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A&gt;метод.&lt;/xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A&gt;</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о манипуляциях см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Пример приложения, который реагирует на манипуляции см. в разделе <bpt id="p1">[</bpt>Пошаговое руководство: создание первого Touch приложения<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationStarted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationStartedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationStartedEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationStarted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.ManipulationStartedEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationStartedEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationStartedEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationStartedEvent&gt;</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>Occurs when the manipulation processor is first created.</source>
          <target state="translated">Происходит при создании обработчика манипуляции.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManipulationStarting event occurs on an element that has the &lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt; property set to <ph id="ph1">`true`</ph> when the user puts a finger on it.</source>
          <target state="translated">ManipulationStarting событие происходит на элемент, имеющий &lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;свойство <ph id="ph1">`true`</ph> когда пользователь помещает палец с ним&lt;/xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, subsequent manipulation events report the position of the manipulation relative to the element that has &lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt; set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">По умолчанию события манипуляции последующих отчетов позиции манипуляции относительно элемента, который имеет &lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;равным <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify that the position should be relative to another element by setting the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt; property.</source>
          <target state="translated">Можно указать, что значение должно быть относительно другого элемента, задав &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt;свойство.&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt;</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can make the manipulation relative to the parent of the element.</source>
          <target state="translated">Например можно сделать обработки относительно родительского элемента.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also do the following in an event handler for ManipulationStarting:      -   Specify whether the user needs more than one finger to perform the manipulations by setting the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">Можно также выполнить следующие действия в обработчике событий для ManipulationStarting: — Укажите, должна ли пользователь более чем одним пальцем для манипуляций, задав &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName&gt;свойство.&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Specify which types of manipulation are enabled by setting the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName&gt; property to a &lt;xref:System.Windows.Input.ManipulationModes&gt; enumeration.</source>
          <target state="translated">-Указать, какие типы обработки включены, задав &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName&gt;Свойства &lt;xref:System.Windows.Input.ManipulationModes&gt;перечисления.&lt;/xref:System.Windows.Input.ManipulationModes&gt; &lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Specify the center of a single-finger rotation by setting the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">-Укажите центр вращения касания одним пальцем, задав &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName&gt;свойство.&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Cancel the manipulation by calling the &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">-Отменить обработку путем вызова &lt;xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName&gt;метод.&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about manipulations, see the <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о манипуляциях см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of an application that responds to manipulations, see <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Пример приложения, который реагирует на манипуляции см. в разделе <bpt id="p1">[</bpt>Пошаговое руководство: создание первого Touch приложения<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ManipulationStarting"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.ManipulationStartingEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationStartingEventArgs&gt;.|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ManipulationStarting"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.ManipulationStartingEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.ManipulationStartingEventArgs&gt;.|&lt;/xref:System.Windows.Input.ManipulationStartingEventArgs&gt;&lt;/xref:System.EventHandler%601&gt;&lt;/xref:System.Windows.UIElement.ManipulationStartingEvent&gt;</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>Updates the &lt;xref:System.Windows.UIElement.DesiredSize<bpt id="p1">*</bpt>&gt; of a <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>. Parent elements call this method from their own &lt;xref:System.Windows.UIElement.MeasureCore<ept id="p1">*</ept>&gt; implementations to form a recursive layout update.</source>
          <target state="translated">Updates the &lt;&gt;<bpt id="p1">*</bpt>&gt; of a <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>. Родительские элементы вызывают этот метод из своей собственной &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>настроек реализации для формирования структуры рекурсивного обновления.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</source>
          <target state="translated">Вызов этого метода составляет первый проход (проход «Мера») обновления макета.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT">
          <source>Computation of layout positioning in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> is comprised of a Measure call and an &lt;xref:System.Windows.UIElement.Arrange%2A&gt; call.</source>
          <target state="translated">Расположение макета в вычислении <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> состоит вызова мер и &lt;xref:System.Windows.UIElement.Arrange%2A&gt;вызовите.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the Measure call, an element determines its size requirements by using an <ph id="ph1">`availableSize`</ph> input.</source>
          <target state="translated">Во время вызова мер элемент определяет требования к его размер с помощью <ph id="ph1">`availableSize`</ph> ввода.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the &lt;xref:System.Windows.UIElement.Arrange%2A&gt; call, the element size is finalized.</source>
          <target state="translated">Во время &lt;xref:System.Windows.UIElement.Arrange%2A&gt;завершения вызова, размер элемента.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`availableSize`</ph> can be any number from zero to infinite.</source>
          <target state="translated"><ph id="ph1">`availableSize`</ph>может быть любое целое число от нуля до бесконечности.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements participating in layout should return the minimum &lt;xref:System.Windows.Size&gt; they require for a given <ph id="ph1">`availableSize`</ph>.</source>
          <target state="translated">Элементы, которые участвуют в макете должен вернуть минимальное значение &lt;xref:System.Windows.Size&gt;им требуется для данной <ph id="ph1">`availableSize`</ph>.&lt;/xref:System.Windows.Size&gt;</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a layout is first instantiated, it always receives a Measure call before &lt;xref:System.Windows.UIElement.Arrange%2A&gt;.</source>
          <target state="translated">При создании макета всегда получает вызов меры перед &lt;xref:System.Windows.UIElement.Arrange%2A&gt;.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the first layout pass, it may receive an &lt;xref:System.Windows.UIElement.Arrange%2A&gt; call without a Measure; this can happen when a property that affects only &lt;xref:System.Windows.UIElement.Arrange%2A&gt; is changed (such as alignment), or when the parent receives an &lt;xref:System.Windows.UIElement.Arrange%2A&gt; without a Measure.</source>
          <target state="translated">Однако после первого прохода разметки, он может появиться &lt;xref:System.Windows.UIElement.Arrange%2A&gt;вызывается без меры; это может произойти, если свойство, которое влияет только на &lt;xref:System.Windows.UIElement.Arrange%2A&gt;изменяется (например, выравнивание), или при получении родительского &lt;xref:System.Windows.UIElement.Arrange%2A&gt;без мера.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt; &lt;/xref:System.Windows.UIElement.Arrange%2A&gt; &lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Measure call will automatically invalidate an &lt;xref:System.Windows.UIElement.Arrange%2A&gt; call.</source>
          <target state="translated">Автоматически сделает вызов мер &lt;xref:System.Windows.UIElement.Arrange%2A&gt;вызовите.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT">
          <source>Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</source>
          <target state="translated">Обновления макета выполняется асинхронно, таким образом, чтобы главный поток не ожидает каждого из возможных изменений структуры.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT">
          <source>Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; property, for example).</source>
          <target state="translated">Запрос элемента посредством проверки значений свойств кода может не сразу отражать изменения свойств, которые взаимодействуют с характеристиками размера или структуры ( &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;Свойства, например).&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Layout updates can be forced by using the &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt; method.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек обновления макета можно выполнить принудительно с помощью &lt;xref:System.Windows.UIElement.UpdateLayout%2A&gt;метод.&lt;/xref:System.Windows.UIElement.UpdateLayout%2A&gt;</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, calling this method is usually unnecessary and can cause poor performance.</source>
          <target state="translated">Тем не менее вызов этого метода обычно нет необходимости и может привести к снижению производительности.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system keeps two separate queues of invalid layouts, one for Measure and one for &lt;xref:System.Windows.UIElement.Arrange%2A&gt;.</source>
          <target state="translated">Система макета отслеживает двух отдельных очередей недопустимый макеты, для измерения и одну для &lt;xref:System.Windows.UIElement.Arrange%2A&gt;.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</source>
          <target state="translated">Очередь структур сортируется порядок элементов в визуальном дереве структурирования элементов; в верхней части очереди, во избежание избыточного структурирования повторяющихся изменений в родительских элементов, элементы, расположенные выше в дереве.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</source>
          <target state="translated">Дублирующиеся записи автоматически удаляются из очереди, а элементы автоматически удаляются из очереди, если они уже проверены макета.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT">
          <source>When updating layout, the Measure queue is emptied first, followed by the &lt;xref:System.Windows.UIElement.Arrange%2A&gt; queue.</source>
          <target state="translated">При обновлении макета, мера освобождения очереди во-первых, за которым следует &lt;xref:System.Windows.UIElement.Arrange%2A&gt;очереди.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element in the &lt;xref:System.Windows.UIElement.Arrange%2A&gt; queue will never be arranged if there is an element in the Measure queue.</source>
          <target state="translated">На элемент &lt;xref:System.Windows.UIElement.Arrange%2A&gt;очереди никогда не быть упорядочены, если элемент в очередь мер.&lt;/xref:System.Windows.UIElement.Arrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>The available space that a parent element can allocate a child element.</source>
          <target state="translated">Доступное пространство, что родительский элемент может выделить дочернему элементу.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</source>
          <target state="translated">Дочерний элемент может запросить больше пространства, чем доступно; Указанный размер может быть размещен, если возможна прокрутка в модели содержимого для текущего элемента.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</source>
          <target state="translated">При переопределении в производном классе предоставляет логику измерений для определения размеров данного элемента правильно, с учетом размера любого дочернего содержимого элемента.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is more common to derive an element from &lt;xref:System.Windows.FrameworkElement&gt; rather than &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Чаще всего для получения элемента из &lt;xref:System.Windows.FrameworkElement&gt;вместо &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are deriving from &lt;xref:System.Windows.FrameworkElement&gt;, note that an override of MeasureCore on &lt;xref:System.Windows.FrameworkElement&gt; seals the MeasureCore method.</source>
          <target state="translated">При наследовании от &lt;xref:System.Windows.FrameworkElement&gt;, обратите внимание, что переопределение MeasureCore на &lt;xref:System.Windows.FrameworkElement&gt;запечатывает метод MeasureCore.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you only override MeasureCore as a means to alter layout measure characteristics if you derive from &lt;xref:System.Windows.UIElement&gt; through an inheritance that does not include &lt;xref:System.Windows.FrameworkElement&gt;.</source>
          <target state="translated">Таким образом можно переопределять только MeasureCore позволяет изменить характеристики измерения структуры при наследовании от &lt;xref:System.Windows.UIElement&gt;через наследование, которая не включает &lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might be the case if you are attempting to build your own implementation on the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> core-level.</source>
          <target state="translated">Это может случиться, если вы пытаетесь использовать собственную реализацию <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> уровня ядра.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, if you are deriving from &lt;xref:System.Windows.FrameworkElement&gt;, then the implementation template for Measure behavior is the &lt;xref:System.Windows.FrameworkElement&gt; implementation of .&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;.</source>
          <target state="translated">В противном случае, если вы сделаете производный от &lt;xref:System.Windows.FrameworkElement&gt;, шаблон реализации мер поведение является &lt;xref:System.Windows.FrameworkElement&gt;реализация.&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>A parent element with child elements must call &lt;xref:System.Windows.UIElement.Measure%2A&gt; on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</source>
          <target state="translated">Родительский элемент, содержащий дочерние элементы должны вызывать &lt;xref:System.Windows.UIElement.Measure%2A&gt;на каждый дочерний элемент, в противном случае эти дочерние элементы не размера или упорядочены и эффективно исчезнет из макета.&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>The available size that the parent element can allocate for the child.</source>
          <target state="translated">Доступный размер, который можно выделить родительским элементом для дочернего элемента.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>The desired size of this element in layout.</source>
          <target state="translated">Нужный размер этого элемента в макете.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>Occurs when any mouse button is pressed while the pointer is over this element.</source>
          <target state="translated">Происходит при нажатии любой кнопки мыши в тот момент, когда указатель находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event for this class, so that MouseDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы MouseDown часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseDown event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, подключенные к MouseDown-событие подключены к основному &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MouseDown event is often raised together with either &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;, which correspond to a press of one of the two standard mouse buttons.</source>
          <target state="translated">MouseDown-событие часто возникает вместе с либо &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;или &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;, которые соответствуют нажмите одну из двух кнопок мыши стандартных.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; and &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event reaches this element along the event route.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;и &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;также перенаправленные события, но они являются прямой перенаправленные события, и возникает соответствующее событие кнопками при &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;событий достигает этого элемента на маршруте события.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt;&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks for &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.</source>
          <target state="translated">См. Примечания &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;или &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some controls might have inherent class handling for mouse button events.</source>
          <target state="translated">Настроек <ph id="ph1">[!IMPORTANT]</ph> настроек некоторые элементы управления могут иметь внутреннюю обработку классов для событий кнопок мыши.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT">
          <source>The left mouse button down event is the most likely event to have class handling in a control.</source>
          <target state="translated">Событие нажатия кнопки мыши является наиболее вероятным событием с обработкой классов в элементе управления.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class handling often marks the underlying &lt;xref:System.Windows.Input.Mouse&gt; class event as handled.</source>
          <target state="translated">Обработчик часто класса помечает базовый &lt;xref:System.Windows.Input.Mouse&gt;класс событие как обработанное.&lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</source>
          <target state="translated">Когда событие помечено как обработанное, другие обработчики экземпляра, присоединенные к данному элементу, не инициируются.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</source>
          <target state="translated">Любые другие обработчики класса или экземпляра, присоединенные к элементам в восходящем направлении к корню дерева пользовательского интерфейса, также обычно не инициируются.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can resolve the issue that is outlined in the preceding Important and still receive MouseDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt; event, which is not marked as handled by the controls.</source>
          <target state="translated">Можно устранить проблему, которая описана в Важном и продолжать получать события MouseDown для левой кнопки мыши событий в производном классе с обработкой класса с помощью любого из следующих решений:-присоединения обработчиков &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt;события, который не помечен как обработанное в элементах управления.&lt;/xref:System.Windows.UIElement.PreviewMouseDown&gt;</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</source>
          <target state="translated">Обратите внимание, что это события предварительного просмотра, маршрут начинается с корневого элемента следует к элементу управления.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Register a handler on the control procedurally by calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt; and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</source>
          <target state="translated">-Регистрация обработчика в элементе управления с помощью процедур, вызвав &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;и выбрав параметр подписи, который позволяет обработчикам прослушивать события, даже если они помечены как обработанное в данные о событии.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseDownEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseDown&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnMouseDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnMouseDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer enters the bounds of this element.</source>
          <target state="translated">Происходит, когда указатель мыши попадает внутрь границ данного элемента.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT">
          <source>MouseEnter is a  that uses the direct event handling routing strategy.</source>
          <target state="translated">MouseEnter: использует прямой обработки стратегия маршрутизации события.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT">
          <source>Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</source>
          <target state="translated">Прямые перенаправленные события не вызываются по маршруту; Вместо этого они обрабатываются в том же элементе где они возникли.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, they do enable other aspects of routed event behavior, such as event triggers in styles.</source>
          <target state="translated">Тем не менее они включают другие аспекты поведения маршрутизируемых событий, например триггеры событий в стилях.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although MouseEnter tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt; property value has changed from <ph id="ph1">`false`</ph> to <ph id="ph2">`true`</ph> on this element.</source>
          <target state="translated">Несмотря на то, что MouseEnter отслеживает, когда указатель мыши попадает внутрь границ элемента, это событие более буквально о том, что &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;значение свойства было изменено с <ph id="ph1">`false`</ph> для <ph id="ph2">`true`</ph> для этого элемента.&lt;/xref:System.Windows.UIElement.IsMouseOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event for this class, so that MouseEnter is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы MouseEnter часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseEnter event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событие MouseEnter присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.Controls.Button&gt; (or any &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt; derived class) has native handling for a &lt;xref:System.Windows.UIElement.KeyDown&gt; event when the button has focus, and the pressed key is the space bar.</source>
          <target state="translated">Объект &lt;xref:System.Windows.Controls.Button&gt;(или любой &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;производный класс) имеет собственную обработку &lt;xref:System.Windows.UIElement.KeyDown&gt;событие, когда кнопка находится в фокусе, и нажатой клавише находится панель пространства&lt;/xref:System.Windows.UIElement.KeyDown&gt; &lt;/xref:System.Windows.Controls.Primitives.ButtonBase&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT">
          <source>The native handling raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</source>
          <target state="translated">Вызывает обработчики &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;событий с помощью кнопки, как источник, а также захватывает мышь, даже если для перемещения указателя мыши отображается.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result of the mouse capture, a MouseEnter event is also raised with the button as the source.</source>
          <target state="translated">В результате захвата мыши событие MouseEnter также вызывается с помощью кнопки как источник.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, if an element captures the mouse, then MouseEnter is raised, as well as &lt;xref:System.Windows.UIElement.GotMouseCapture&gt; and possibly other control-specific events.</source>
          <target state="translated">Как правило, если элемент управления захватил мышь, вызывается MouseEnter, а также &lt;xref:System.Windows.UIElement.GotMouseCapture&gt;и возможно другие события элемента управления.&lt;/xref:System.Windows.UIElement.GotMouseCapture&gt;</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseEnterEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseEnterEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnMouseEnter%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseEnter%2A&gt; &lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer leaves the bounds of this element.</source>
          <target state="translated">Происходит, когда указатель мыши покидает границы данного элемента.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT">
          <source>MouseLeave is a  that uses the direct event handling routing strategy.</source>
          <target state="translated">MouseLeave: использует прямой обработки стратегия маршрутизации события.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT">
          <source>Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</source>
          <target state="translated">Прямые перенаправленные события не вызываются по маршруту; Вместо этого они обрабатываются в том же элементе где они возникли.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, they do enable other aspects of routed event behavior, such as event triggers in styles.</source>
          <target state="translated">Тем не менее они включают другие аспекты поведения маршрутизируемых событий, например триггеры событий в стилях.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although MouseLeave tracks when the mouse leaves an element, this event more literally reports that the &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt; property value has changed from <ph id="ph1">`true`</ph> to <ph id="ph2">`false`</ph> on this element.</source>
          <target state="translated">MouseLeave отслеживает, когда указатель мыши покидает элемент, это событие более буквально о том, что &lt;xref:System.Windows.UIElement.IsMouseOver%2A&gt;значение свойства было изменено с <ph id="ph1">`true`</ph> для <ph id="ph2">`false`</ph> для этого элемента.&lt;/xref:System.Windows.UIElement.IsMouseOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event for this class, so that MouseLeave is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы MouseLeave часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseLeave event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, подключенные к MouseLeave-событие подключены к основному &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseLeaveEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseLeaveEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnMouseLeave%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseLeave%2A&gt; &lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>Occurs when the left mouse button is pressed while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при нажатии левой кнопки мыши, когда указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Несмотря на то, что это кажется маршруту через дерево элементов, фактически является прямой перенаправленного события, которое возникает и восходящему на дереве элементов каждого &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Это событие является одним из нескольких связанных событий, сообщающих кнопки мыши базовая &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;события, который является вложенным событием, которое обрабатывается каждым элементом на маршруте событий.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event.</source>
          <target state="translated">Данные события данного события предоставляет данные события базового &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;событий.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Если это событие помечено как обработанное на маршруте события, по-прежнему возникают определенные события кнопки мыши; Тем не менее, необходимо добавить обработчики событий кнопки мыши путем явного вызова &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, с помощью параметра для обработки событий, которые уже помечено как обработанное, чтобы быть прослушивателей события.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark MouseLeftButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Если пометить MouseLeftButtonDown обрабатываются по существу пометка &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;обрабатываются для всех последующих прослушивателей в маршруте и на всех событий, связанных с.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT">
          <source>This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.</source>
          <target state="translated">Возможно в нем создается класс обработчика события, такие как &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.&lt;/xref:System.Windows.Controls.Control.MouseDoubleClick&gt;</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">С концептуальной точки зрения это событие (и другие события кнопки мыши &lt;xref:System.Windows.UIElement&gt;) быть мыши «служба» (с помощью определения службы, предоставляемые &lt;xref:System.Windows.Input.Mouse&gt;класса).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">Событие добавляет удобство нет необходимости проверять состояние кнопок мыши (слева направо, вверх вниз) исходного события мыши в данных события.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Для более сложных сценариев, таких как проверка состояния стандартным кнопок может потребоваться использовать <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> на &lt;xref:System.Windows.Input.Mouse&gt;класс, а не &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some control classes might have inherent class handling for mouse button events.</source>
          <target state="translated">Настроек <ph id="ph1">[!IMPORTANT]</ph> настроек некоторые классы элементов управления могут иметь внутреннюю обработку классов для событий кнопок мыши.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT">
          <source>The left mouse button down event is the most likely event to have class handling in a control.</source>
          <target state="translated">Событие нажатия кнопки мыши является наиболее вероятным событием с обработкой классов в элементе управления.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class handling often marks the underlying &lt;xref:System.Windows.Input.Mouse&gt; class event as handled.</source>
          <target state="translated">Обработчик часто класса помечает базовый &lt;xref:System.Windows.Input.Mouse&gt;класс событие как обработанное.&lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</source>
          <target state="translated">Когда событие помечено как обработанное, другие обработчики экземпляра, присоединенные к данному элементу, не инициируются.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</source>
          <target state="translated">Любые другие обработчики класса или экземпляра, присоединенные к элементам в восходящем направлении к корню дерева пользовательского интерфейса, также обычно не инициируются.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can resolve the issue that is outlined in the preceding Important and still receive MouseLeftButtonDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt; event, which is not marked as handled by the controls.</source>
          <target state="translated">Можно устранить проблему, которая описана в Важном и продолжать получать события MouseLeftButtonDown для левой кнопки мыши событий в производном классе с обработкой класса с помощью любого из следующих решений:-присоединения обработчиков &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt;события, который не помечен как обработанное в элементах управления.&lt;/xref:System.Windows.UIElement.PreviewMouseDown&gt;</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</source>
          <target state="translated">Обратите внимание, что это события предварительного просмотра, маршрут начинается с корневого элемента следует к элементу управления.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Register a handler on the control procedurally by calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt; and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</source>
          <target state="translated">-Регистрация обработчика в элементе управления с помощью процедур, вызвав &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;и выбрав параметр подписи, который позволяет обработчикам прослушивать события, даже если они помечены как обработанное в данные о событии.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseLeftButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseLeftButtonDownEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>Occurs when the left mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при отпускании левой кнопки мыши, пока указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Несмотря на то, что это кажется маршруту через дерево элементов, фактически является прямой перенаправленного события, которое возникает и восходящему на дереве элементов каждого &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Это событие является одним из нескольких связанных событий, сообщающих кнопки мыши базовая &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;события, который является вложенным событием, которое обрабатывается каждым элементом на маршруте событий.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event.</source>
          <target state="translated">Данные события данного события предоставляет данные события базового &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;событий.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Если это событие помечено как обработанное на маршруте события, по-прежнему возникают определенные события кнопки мыши; Тем не менее, необходимо добавить обработчики событий кнопки мыши путем явного вызова &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, с помощью параметра для обработки событий, которые уже помечено как обработанное, чтобы быть прослушивателей события.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark MouseLeftButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Если пометить MouseLeftButtonUp обрабатываются по существу пометка &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;обрабатываются для всех последующих прослушивателей в маршруте и на всех событий, связанных с.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">С концептуальной точки зрения это событие (и другие события кнопки мыши &lt;xref:System.Windows.UIElement&gt;) быть мыши «служба» (с помощью определения службы, предоставляемые &lt;xref:System.Windows.Input.Mouse&gt;класса).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">Событие добавляет удобство нет необходимости проверять состояние кнопок мыши (слева направо, вверх вниз) исходного события мыши в данных события.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Для более сложных сценариев, таких как проверка состояния стандартным кнопок может потребоваться использовать <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> на &lt;xref:System.Windows.Input.Mouse&gt;класс, а не &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseLeftButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseLeftButtonUpEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer moves while over this element.</source>
          <target state="translated">Происходит при перемещении указателя мыши над данным элементом.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event for this class, so that MouseMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы MouseMove часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseMove event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные события MouseMove присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseMoveEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseMove&gt; &lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnMouseMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnMouseMove%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>Occurs when the right mouse button is pressed while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при нажатии правой кнопки мыши, когда указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Несмотря на то, что это кажется маршруту через дерево элементов, фактически является прямой перенаправленного события, которое возникает и восходящему на дереве элементов каждого &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Это событие является одним из нескольких связанных событий, сообщающих кнопки мыши базовая &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;события, который является вложенным событием, которое обрабатывается каждым элементом на маршруте событий.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event.</source>
          <target state="translated">Данные события данного события предоставляет данные события базового &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;событий.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Если это событие помечено как обработанное на маршруте события, по-прежнему возникают определенные события кнопки мыши; Тем не менее, необходимо добавить обработчики событий кнопки мыши путем явного вызова &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, с помощью параметра для обработки событий, которые уже помечено как обработанное, чтобы быть прослушивателей события.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark MouseRightButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Если пометить MouseRightButtonDown обрабатываются по существу пометка &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;обрабатываются для всех последующих прослушивателей в маршруте и на всех событий, связанных с.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.</source>
          <target state="translated">Возможно в нем создается класс обработчика события, такие как &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.&lt;/xref:System.Windows.Controls.Control.MouseDoubleClick&gt;</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">С концептуальной точки зрения это событие (и другие события кнопки мыши &lt;xref:System.Windows.UIElement&gt;) быть мыши «служба» (с помощью определения службы, предоставляемые &lt;xref:System.Windows.Input.Mouse&gt;класса).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">Событие добавляет удобство нет необходимости проверять состояние кнопок мыши (слева направо, вверх вниз) исходного события мыши в данных события.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Для более сложных сценариев, таких как проверка состояния стандартным кнопок может потребоваться использовать <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> на &lt;xref:System.Windows.Input.Mouse&gt;класс, а не &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Right button mouse events frequently have native handling in application scenarios.</source>
          <target state="translated">Часто сценарии приложений имеют обработчики для событий правой кнопки мыши.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a right mouse button down might display a context menu.</source>
          <target state="translated">Например правой кнопкой мыши вниз может отображаться контекстное меню.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>ContextMenu Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>Обзор ContextMenu<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseRightButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseRightButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseRightButtonDownEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnMouseRightButtonDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseRightButtonDown%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseRightButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve">
          <source>Occurs when the right mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при отпускании правой кнопки мыши, пока указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Несмотря на то, что это кажется маршруту через дерево элементов, фактически является прямой перенаправленного события, которое возникает и восходящему на дереве элементов каждого &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Это событие является одним из нескольких связанных событий, сообщающих кнопки мыши базовая &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;события, который является вложенным событием, которое обрабатывается каждым элементом на маршруте событий.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event.</source>
          <target state="translated">Данные события данного события предоставляет данные события базового &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;событий.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Если это событие помечено как обработанное на маршруте события, по-прежнему возникают определенные события кнопки мыши; Тем не менее, необходимо добавить обработчики событий кнопки мыши путем явного вызова &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, с помощью параметра для обработки событий, которые уже помечено как обработанное, чтобы быть прослушивателей события.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark MouseRightButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Если пометить MouseRightButtonUp обрабатываются по существу пометка &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;обрабатываются для всех последующих прослушивателей в маршруте и на всех событий, связанных с.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">С концептуальной точки зрения это событие (и другие события кнопки мыши &lt;xref:System.Windows.UIElement&gt;) быть мыши «служба» (с помощью определения службы, предоставляемые &lt;xref:System.Windows.Input.Mouse&gt;класса).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">Событие добавляет удобство нет необходимости проверять состояние кнопок мыши (слева направо, вверх вниз) исходного события мыши в данных события.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Для более сложных сценариев, таких как проверка состояния стандартным кнопок может потребоваться использовать <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> на &lt;xref:System.Windows.Input.Mouse&gt;класс, а не &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseRightButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnMouseRightButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseRightButtonUpEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnMouseRightButtonUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseRightButtonUp%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseRightButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve">
          <source>Occurs when any mouse button is released over this element.</source>
          <target state="translated">Происходит при отпускании любой кнопки мыши над данным элементом.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; attached event for this class, so that MouseUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы MouseUp часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseUp event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, подключенные к MouseUp-событие подключены к основному &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MouseUp event is often raised together with either &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;, which correspond to a release of one of the two standard mouse buttons.</source>
          <target state="translated">MouseUp-событие часто возникает вместе с либо &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;или &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;, которые соответствуют выпуск одну из двух кнопок стандартных действий мыши.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; and &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event reaches this element along the event route.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;и &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;также перенаправленные события, но они являются прямой перенаправленные события, и возникает соответствующее событие кнопками при &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;событий достигает этого элемента на маршруте события.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt;&lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks for &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;.</source>
          <target state="translated">См. Примечания &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;или &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewMouseUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseUpEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewMouseUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseUp&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnMouseUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnMouseUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve">
          <source>Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при вращении колесика мыши в момент, когда указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the MouseWheel event from a focused or captured element, the mouse pointer might actually be over another element.</source>
          <target state="translated">Фокус или захват мыши имеют приоритет над которого указатель мыши; Таким образом при получении события колесика мыши от элемента, или получившего, указатель мыши может быть фактически над другим элементом.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event for this class, so that MouseWheel is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt;присоединенные события для этого класса, чтобы колесика мыши входит в состав класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the MouseWheel event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию колесика мыши присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_MouseWheel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.MouseWheelEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewMouseWheel&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_MouseWheel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.MouseWheelEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewMouseWheel&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseWheel&gt; &lt;/xref:System.Windows.Input.MouseWheelEventHandler&gt; &lt;/xref:System.Windows.UIElement.MouseWheelEvent&gt;</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnMouseWheel%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnMouseWheel%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnMouseWheel%2A&gt;</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseWheel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseWheel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve">
          <source>Attempts to move focus from this element to another element.</source>
          <target state="translated">Пытается переместить фокус с данного элемента в другой элемент.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve">
          <source>The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</source>
          <target state="translated">Направление перемещения фокуса задается указанием направления, которое интерпретируется в организации визуального родителя данного элемента.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure you check the return value of this method.</source>
          <target state="translated">Убедитесь, что проверяйте возвращаемое значение этого метода.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT">
          <source>A return value of <ph id="ph1">`false`</ph> might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</source>
          <target state="translated">Возвращаемое значение <ph id="ph1">`false`</ph> может быть возвращено, если затребована остановки вкладку и запрос обхода не запрашивали программы-оболочки.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</source>
          <target state="translated">Запрос обхода, который содержит свойство, которое определяет способ перемещения в порядке, или направление для визуального перемещения.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested traversal was performed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если запрос на перемещение было выполнено; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>Provides class handling for when an access key that is meaningful for this element is invoked.</source>
          <target state="translated">Предоставляет обработку класса при клавиши доступа, которая может применяться для данного элемента вызывается.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no actual AccessKey event in the &lt;xref:System.Windows.UIElement&gt; class, or elsewhere, which you can raise or attach handlers for.</source>
          <target state="translated">Нет фактического события AccessKey в &lt;xref:System.Windows.UIElement&gt;класса или в других местах, который можно инициировать или прикрепить for. обработчики&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the event is originated via a dedicated manager class, &lt;xref:System.Windows.Input.AccessKeyManager&gt;, which post-processes all input to search for access keys that are applicable to the entire input model.</source>
          <target state="translated">Вместо этого событие инициируется посредством выделенного класса диспетчера, &lt;xref:System.Windows.Input.AccessKeyManager&gt;, после которого обрабатывает все входные данные для поиска клавиш доступа, применимых ко всей модели ввода.&lt;/xref:System.Windows.Input.AccessKeyManager&gt;</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve">
          <source>The event data to the access key event.</source>
          <target state="translated">Данные события для события клавиши доступа.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve">
          <source>The event data reports which key was invoked, and indicate whether the <bpt id="p1">&lt;xref href="System.Windows.Input.AccessKeyManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that controls the sending of these events also sent this access key invocation to other elements.</source>
          <target state="translated">Данные события сообщают, какая из клавиш была вызвана и указывает ли <bpt id="p1">&lt;xref href="System.Windows.Input.AccessKeyManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объект, управляющий отправкой таких событий также отправляется этого вызова ключа доступа другие элементы.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve">
          <source>Supports layout behavior when a child element is resized.</source>
          <target state="translated">Поддерживает поведение структуры при изменении размера дочернего элемента.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically not called by your application code.</source>
          <target state="translated">Этот метод обычно не вызывается кодом приложения.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</source>
          <target state="translated">Он предоставляется этот производный элемент, которую классы могут выполнять дальнейшие проверки для состояния возможно недействительного макета.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</source>
          <target state="translated">Классы могут также пытаться выполнять оптимизацию, чтобы минимизировать время обработки прохода структуры на основе изменений размера дочерних элементов.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example derived element class that implements OnChildDesiredSizeChanged is the &lt;xref:System.Windows.Controls.Grid&gt; control.</source>
          <target state="translated">Производный элемент пример класса, реализующего — OnChildDesiredSizeChanged &lt;xref:System.Windows.Controls.Grid&gt;управления.&lt;/xref:System.Windows.Controls.Grid&gt;</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>The child element that is being resized.</source>
          <target state="translated">Дочерний элемент, изменяющего размеры.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve">
          <source>Returns class-specific <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementations for the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure.</source>
          <target state="translated">Возвращает характерные для класса <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> реализации для <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> инфраструктуры.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve">
          <source>The type-specific <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Конкретного типа <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> реализации.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragOver?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragOver?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.GiveFeedbackEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.GiveFeedbackEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event by using the event data provided.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события с помощью предоставленных данных события.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve">
          <source>This event data must contain the identifier for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Данные о событии должны содержать идентификатор для <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotTouchCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch is captured to this element.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotTouchCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие, возникающее при сенсорного этого элемента.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnGotTouchCapture method has no default implementation.</source>
          <target state="translated">Метод OnGotTouchCapture имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnGotTouchCapture in a derived class to handle the &lt;xref:System.Windows.UIElement.GotTouchCapture&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnGotTouchCapture &lt;xref:System.Windows.UIElement.GotTouchCapture&gt;событий.&lt;/xref:System.Windows.UIElement.GotTouchCapture&gt;</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnGotTouchCapture method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnGotTouchCapture базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsKeyboardFocusedChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsKeyboardFocusedChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> события для этого элемента.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt; dependency property changes.</source>
          <target state="translated">Этот виртуальный метод вызывается при значение &lt;xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;изменения свойств зависимостей.&lt;/xref:System.Windows.UIElement.IsKeyboardFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">Виртуальный метод вызывается первым и может использовать данные события, при необходимости.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">Затем &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;события с этого же экземпляра данных события.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the  &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt; event is not a routed event.</source>
          <target state="translated">Обратите внимание, что &lt;xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;событие не является маршрутизируемым.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Поэтому его нельзя пометить как обработанное в обработчике класса.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve">
          <source>Invoked just before the <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsKeyboardFocusWithinChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised by this element.</source>
          <target state="translated">Вызывается непосредственно перед <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsKeyboardFocusWithinChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> события с помощью данного элемента.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; dependency property changes .</source>
          <target state="translated">Этот виртуальный метод вызывается при значение &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;изменения свойств зависимостей.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">Виртуальный метод вызывается первым и может использовать данные события, при необходимости.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">Затем &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;события с этого же экземпляра данных события.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt; event is not a routed event.</source>
          <target state="translated">Обратите внимание, что &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;событие не является маршрутизируемым.&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged&gt;</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Поэтому его нельзя пометить как обработанное в обработчике класса.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCapturedChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCapturedChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> события для этого элемента.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt; dependency property changes its value.</source>
          <target state="translated">Этот виртуальный метод вызывается при значение &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;свойств зависимостей изменяется значение.&lt;/xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">Виртуальный метод вызывается первым и может использовать данные события, при необходимости.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">Затем &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;события с этого же экземпляра данных события.&lt;/xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt; event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Обратите внимание, что событие &lt;xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;не перенаправленного события; Поэтому его нельзя пометить как обработанное в обработчике класса.&lt;/xref:System.Windows.UIElement.IsMouseCapturedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCaptureWithinChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseCaptureWithinChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> события для этого элемента.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseDirectlyOverChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsMouseDirectlyOverChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> события для этого элемента.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver%2A&gt; dependency property changes its value.</source>
          <target state="translated">Этот виртуальный метод вызывается при значение &lt;xref:System.Windows.UIElement.IsMouseDirectlyOver%2A&gt;свойств зависимостей изменяется значение.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">Виртуальный метод вызывается первым и может использовать данные события, при необходимости.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">Затем &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;события с этого же экземпляра данных события.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt; event is not a routed event.</source>
          <target state="translated">Обратите внимание, что &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;событие не является маршрутизируемым.&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Поэтому его нельзя пометить как обработанное в обработчике класса.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusCapturedChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusCapturedChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> события для этого элемента.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt; dependency property changes its value.</source>
          <target state="translated">Этот виртуальный метод вызывается при значение &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;свойств зависимостей изменяется значение.&lt;/xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">Виртуальный метод вызывается первым и может использовать данные события, при необходимости.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsStylusCapturedChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">Затем &lt;xref:System.Windows.UIElement.IsStylusCapturedChanged&gt;события с этого же экземпляра данных события.&lt;/xref:System.Windows.UIElement.IsStylusCapturedChanged&gt;</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the event is not a routed event.</source>
          <target state="translated">Обратите внимание, что событие не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Поэтому его нельзя пометить как обработанное в обработчике класса.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusCaptureWithinChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusCaptureWithinChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> события для этого элемента.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin%2A&gt; dependency property changes its value.</source>
          <target state="translated">Этот виртуальный метод вызывается при значение &lt;xref:System.Windows.UIElement.IsStylusCaptureWithin%2A&gt;свойств зависимостей изменяется значение.&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithin%2A&gt;</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">Виртуальный метод вызывается первым и может использовать данные события, при необходимости.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsStylusCaptureWithinChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">Затем &lt;xref:System.Windows.UIElement.IsStylusCaptureWithinChanged&gt;события с этого же экземпляра данных события.&lt;/xref:System.Windows.UIElement.IsStylusCaptureWithinChanged&gt;</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the event is not a routed event.</source>
          <target state="translated">Обратите внимание, что событие не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot mark it as handled in the class handler.</source>
          <target state="translated">Поэтому его нельзя пометить как обработанное в обработчике класса.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusDirectlyOverChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.IsStylusDirectlyOverChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> события для этого элемента.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT">
          <source>This virtual method is raised when the value of the &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver%2A&gt; dependency property changes its value.</source>
          <target state="translated">Этот виртуальный метод вызывается при значение &lt;xref:System.Windows.UIElement.IsStylusDirectlyOver%2A&gt;свойств зависимостей изменяется значение.&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual method is raised first and can manipulate the event data as necessary.</source>
          <target state="translated">Виртуальный метод вызывается первым и может использовать данные события, при необходимости.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.UIElement.IsStylusDirectlyOverChanged&gt; event is raised with that same event data instance.</source>
          <target state="translated">Затем &lt;xref:System.Windows.UIElement.IsStylusDirectlyOverChanged&gt;события с этого же экземпляра данных события.&lt;/xref:System.Windows.UIElement.IsStylusDirectlyOverChanged&gt;</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that the event is not a routed event.</source>
          <target state="translated">Обратите внимание, что событие не является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore you cannot mark it as handled in the class handler.</source>
          <target state="translated">Поэтому его нельзя пометить как обработанное в обработчике класса.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event by using the event data that is provided.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события с помощью предоставленных данных события.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve">
          <source>This event data must contain the identifier for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Данные о событии должны содержать идентификатор для <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostTouchCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when this element loses a touch capture.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostTouchCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события, которое происходит при потере элементом захвата сенсорный ввод.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnLostTouchCapture method has no default implementation.</source>
          <target state="translated">Метод OnLostTouchCapture имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnLostTouchCapture in a derived class to handle the &lt;xref:System.Windows.UIElement.LostTouchCapture&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnLostTouchCapture &lt;xref:System.Windows.UIElement.LostTouchCapture&gt;событий.&lt;/xref:System.Windows.UIElement.LostTouchCapture&gt;</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnLostTouchCapture method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnLostTouchCapture базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Вызывается, когда <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationBoundaryFeedback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событием.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationBoundaryFeedback method has no default implementation.</source>
          <target state="translated">Метод OnManipulationBoundaryFeedback имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationBoundaryFeedback in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnManipulationBoundaryFeedback &lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;событий.&lt;/xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationBoundaryFeedback method of the base class so that base classes receive the event.</source>
          <target state="translated">Убедитесь, что вызвать метод OnManipulationBoundaryFeedback базового класса, чтобы базовые классы получили событие.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Данные для события.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Вызывается, когда <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationCompleted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событием.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationCompleted method has no default implementation.</source>
          <target state="translated">Метод OnManipulationCompleted имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationCompleted in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationCompleted&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnManipulationCompleted &lt;xref:System.Windows.UIElement.ManipulationCompleted&gt;событий.&lt;/xref:System.Windows.UIElement.ManipulationCompleted&gt;</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationCompleted method of the base class so that base classes receive the event.</source>
          <target state="translated">Убедитесь, что вызвать метод OnManipulationCompleted базового класса, чтобы базовые классы получили событие.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Данные для события.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationDelta"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Вызывается, когда <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationDelta"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событием.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationDelta method has no default implementation.</source>
          <target state="translated">Метод OnManipulationDelta имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationDelta in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationDelta&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnManipulationDelta &lt;xref:System.Windows.UIElement.ManipulationDelta&gt;событий.&lt;/xref:System.Windows.UIElement.ManipulationDelta&gt;</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationDelta method of the base class so that base classes receive the event.</source>
          <target state="translated">Убедитесь, что вызвать метод OnManipulationDelta базового класса, чтобы базовые классы получили событие.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Данные для события.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationInertiaStarting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Вызывается, когда <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationInertiaStarting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событием.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationInertiaStarting method has no default implementation.</source>
          <target state="translated">Метод OnManipulationInertiaStarting имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationInertiaStarting in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnManipulationInertiaStarting &lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;событий.&lt;/xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationInertiaStarting method of the base class so that base classes receive the event.</source>
          <target state="translated">Убедитесь, что вызвать метод OnManipulationInertiaStarting базового класса, чтобы базовые классы получили событие.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Данные для события.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">Вызывается, когда <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событием.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationStarted method has no default implementation.</source>
          <target state="translated">Метод OnManipulationStarted имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationStarted in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationStarted&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnManipulationStarted &lt;xref:System.Windows.UIElement.ManipulationStarted&gt;событий.&lt;/xref:System.Windows.UIElement.ManipulationStarted&gt;</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the OnManipulationStarted method of the base class so that base classes receive the event.</source>
          <target state="translated">Убедитесь, что вызвать метод OnManipulationStarted базового класса, чтобы базовые классы получили событие.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve">
          <source>The data for the event.</source>
          <target state="translated">Данные для события.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when the manipulation processor is first created.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.ManipulationStarting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> создан перенаправленное событие, возникающее при первом обработчика манипуляции.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnManipulationStarting method has no default implementation.</source>
          <target state="translated">Метод OnManipulationStarting имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnManipulationStarting in a derived class to handle the &lt;xref:System.Windows.UIElement.ManipulationStarting&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnManipulationStarting &lt;xref:System.Windows.UIElement.ManipulationStarting&gt;событий.&lt;/xref:System.Windows.UIElement.ManipulationStarting&gt;</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnManipulationStarting method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnManipulationStarting базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.ManipulationStartingEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.ManipulationStartingEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve">
          <source>This event data reports details about the mouse button that was pressed and the handled state.</source>
          <target state="translated">Данные о событии содержат сведения о нажатой кнопке мыши и состоянии обработки.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие возникает для этого элемента.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is similar to the <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</source>
          <target state="translated">Этот метод аналогичен <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> шаблона On * методы: этот метод предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the matching event is a routed event, with a direct routing strategy.</source>
          <target state="translated">В этом случае соответствующее событие является маршрутизируемым, с прямой стратегией маршрутизации.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Пометка события обрабатываются по-прежнему полезно для предотвращения обработчиками (для которых не указан <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие возникает для этого элемента.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is similar to the <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</source>
          <target state="translated">Этот метод аналогичен <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> шаблона On * методы: этот метод предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the matching event is a routed event, with a direct routing strategy.</source>
          <target state="translated">В этом случае соответствующее событие является маршрутизируемым, с прямой стратегией маршрутизации.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Пометка события обрабатываются по-прежнему полезно для предотвращения обработчиками (для которых не указан <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event is raised on this element.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события для этого элемента.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event appears to travel a bubbling route but actually travels in an indirect way.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;Событие отображается передавать маршруту, но фактически перемещается Косвенным способом.&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;базовое событие, пузырьковая Маршрутизация и каждого &lt;xref:System.Windows.UIElement&gt;вдоль событие маршрута использует одинаковые обработки событий для прямой перенаправленное событие &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;.&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Несмотря на то, что вы можете пометить &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;событие как обработанное в целях данного элемента, состояние обработки выполнения не является постоянным для остальных элементов на маршруте события.&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Тем не менее, может потребоваться пометить событие как обработанное, чтобы предотвратить общих обработчиков экземпляра (те, которые не указывает <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">Реализация по умолчанию для общих мыши обработка событий в &lt;xref:System.Windows.UIElement&gt;прослушивает &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;и преобразует его в соответствующее событие локального.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Если вы хотите переопределить данную логику, необходимо создать производный класс.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.</source>
          <target state="translated">В статическом конструкторе производного класса регистрация обработчика альтернативных класс &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnMouseLeftButtonDown.</source>
          <target state="translated">Невозможно изменить поведение обработки мыши &lt;xref:System.Windows.UIElement&gt;путем переопределения OnMouseLeftButtonDown.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can override this method in order to change event handling for a specific mouse state.</source>
          <target state="translated">Кроме того можно переопределить этот метод, чтобы изменить обработку события для конкретного состояния мыши.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you choose to call the base implementation depends on your scenario.</source>
          <target state="translated">Вы можете отказаться от вызвать базовую реализацию зависит от сценария.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseLeftButtonDown.</source>
          <target state="translated">Если не вызывается базовый отключает обработку ввода по умолчанию для этого события мыши в классах предка, которые также предполагается, что для вызова OnMouseLeftButtonDown.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can derive from &lt;xref:System.Windows.Controls.Button&gt; and override OnMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">Например, можно получить из &lt;xref:System.Windows.Controls.Button&gt;и переопределять OnMouseLeftButtonDown в производном классе без вызова базовой реализации; Однако это переопределение отключает &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;событий.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve">
          <source>The event data reports that the left mouse button was pressed.</source>
          <target state="translated">Данные события сообщают, что была нажата левая кнопка мыши.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; event appears to travel a bubbling route but actually travels in an indirect way.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;Событие отображается передавать маршруту, но фактически перемещается Косвенным способом.&lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;базовое событие, пузырьковая Маршрутизация и каждого &lt;xref:System.Windows.UIElement&gt;вдоль событие маршрута использует одинаковые обработки событий для прямой перенаправленное событие &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;.&lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Несмотря на то, что вы можете пометить &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;событие как обработанное в целях данного элемента, состояние обработки выполнения не является постоянным для остальных элементов на маршруте события.&lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Тем не менее, может потребоваться пометить событие как обработанное, чтобы предотвратить общих обработчиков экземпляра (те, которые не указывает <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">Реализация по умолчанию для общих мыши обработка событий в &lt;xref:System.Windows.UIElement&gt;прослушивает &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;и преобразует его в соответствующее событие локального.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Если вы хотите переопределить данную логику, необходимо создать производный класс.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.</source>
          <target state="translated">В статическом конструкторе производного класса регистрация обработчика альтернативных класс &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnMouseLeftButtonUp.</source>
          <target state="translated">Невозможно изменить поведение обработки мыши &lt;xref:System.Windows.UIElement&gt;путем переопределения OnMouseLeftButtonUp.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve">
          <source>The event data reports that the left mouse button was released.</source>
          <target state="translated">Данные о событии отжатии левой кнопки мыши.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt; event appears to travel a bubbling route but actually travels in an indirect way.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;Событие отображается передавать маршруту, но фактически перемещается Косвенным способом.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;базовое событие, пузырьковая Маршрутизация и каждого &lt;xref:System.Windows.UIElement&gt;вдоль событие маршрута использует одинаковые обработки событий для прямой перенаправленное событие &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Несмотря на то, что вы можете пометить &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;событие как обработанное в целях данного элемента, состояние обработки выполнения не является постоянным для остальных элементов на маршруте события.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Тем не менее, может потребоваться пометить событие как обработанное, чтобы предотвратить общих обработчиков экземпляра (те, которые не указывает <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">Реализация по умолчанию для общих мыши обработка событий в &lt;xref:System.Windows.UIElement&gt;прослушивает &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;и преобразует его в соответствующее событие локального.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Если вы хотите переопределить данную логику, необходимо создать производный класс.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.</source>
          <target state="translated">В статическом конструкторе производного класса регистрация обработчика альтернативных класс &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnMouseRightButtonDown.</source>
          <target state="translated">Невозможно изменить поведение обработки мыши &lt;xref:System.Windows.UIElement&gt;путем переопределения OnMouseRightButtonDown.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can override this method in order to change event handling for a specific mouse state.</source>
          <target state="translated">Кроме того можно переопределить этот метод, чтобы изменить обработку события для конкретного состояния мыши.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you choose to call the base implementation depends on your scenario.</source>
          <target state="translated">Вы можете отказаться от вызвать базовую реализацию зависит от сценария.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseRightButtonDown.</source>
          <target state="translated">Если не вызывается базовый отключает обработку ввода по умолчанию для этого события мыши в классах предка, которые также предполагается, что для вызова OnMouseRightButtonDown.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can derive from &lt;xref:System.Windows.Controls.Control&gt; and override OnMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the &lt;xref:System.Windows.Controls.Control&gt; default behavior.</source>
          <target state="translated">Например, можно получить из &lt;xref:System.Windows.Controls.Control&gt;и переопределения в производном классе без вызова базы OnMouseRightButtonDown; Однако это переопределение отключает службы меню контекста на элементе управления, которые входят в состав из &lt;xref:System.Windows.Controls.Control&gt;поведение по умолчанию.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve">
          <source>The event data reports that the right mouse button was pressed.</source>
          <target state="translated">Данные события сообщают, что была нажата правая кнопка мыши.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt; event appears to travel a bubbling route but actually travels in an indirect way.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;Событие отображается передавать маршруту, но фактически перемещается Косвенным способом.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;базовое событие, пузырьковая Маршрутизация и каждого &lt;xref:System.Windows.UIElement&gt;вдоль событие маршрута использует одинаковые обработки событий для прямой перенаправленное событие &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Несмотря на то, что вы можете пометить &lt;xref:System.Windows.UIElement.MouseRightButtonUp&gt;событие как обработанное в целях данного элемента, состояние обработки выполнения не является постоянным для остальных элементов на маршруте события.&lt;/xref:System.Windows.UIElement.MouseRightButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Тем не менее, может потребоваться пометить событие как обработанное, чтобы предотвратить общих обработчиков экземпляра (те, которые не указывает <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">Реализация по умолчанию для общих мыши обработка событий в &lt;xref:System.Windows.UIElement&gt;прослушивает &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;и преобразует его в соответствующее событие локального.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Если вы хотите переопределить данную логику, необходимо создать производный класс.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.</source>
          <target state="translated">В статическом конструкторе производного класса регистрация обработчика альтернативных класс &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnMouseRightButtonUp.</source>
          <target state="translated">Невозможно изменить поведение обработки мыши &lt;xref:System.Windows.UIElement&gt;путем переопределения OnMouseRightButtonUp.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve">
          <source>The event data reports that the right mouse button was released.</source>
          <target state="translated">Данные о событии отжатии правой кнопки мыши.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> перенаправленное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve">
          <source>The event data reports that the mouse button was released.</source>
          <target state="translated">Данные о событии отжатии кнопки мыши.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseWheelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseWheelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.GiveFeedbackEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.GiveFeedbackEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.KeyEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.KeyboardFocusChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное перенаправленное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve">
          <source>The event data reports that one or more mouse buttons were pressed.</source>
          <target state="translated">Данные о событии информируют о нажатии одной или нескольких кнопок мыши.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; event appears to travel a tunneling route but actually travels in an indirect way.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;Событие отображается передавать нисходящую, но фактически перемещается Косвенным способом.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;Базовый событие, которое направлено туннеля и каждого &lt;xref:System.Windows.UIElement&gt;вдоль событие маршрута использует одинаковые обработки событий для прямой &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; перенаправленное событие&lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Несмотря на то, что вы можете пометить &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;событие как обработанное в целях данного элемента, состояние обработки выполнения не является постоянным для остальных элементов на маршруте события.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Тем не менее, может потребоваться пометить событие как обработанное, чтобы предотвратить общих обработчиков экземпляра (те, которые не указывает <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">Реализация по умолчанию для общих мыши обработка событий в &lt;xref:System.Windows.UIElement&gt;прослушивает &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;и преобразует его в соответствующее событие локального.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Если вы хотите переопределить данную логику, необходимо создать производный класс.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.</source>
          <target state="translated">В статическом конструкторе производного класса регистрация обработчика альтернативных класс &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnPreviewMouseLeftButtonDown.</source>
          <target state="translated">Невозможно изменить поведение обработки мыши &lt;xref:System.Windows.UIElement&gt;путем переопределения OnPreviewMouseLeftButtonDown.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can override this method in order to change event handling for a specific mouse state.</source>
          <target state="translated">Кроме того можно переопределить этот метод, чтобы изменить обработку события для конкретного состояния мыши.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you choose to call the base implementation depends on your scenario.</source>
          <target state="translated">Вы можете отказаться от вызвать базовую реализацию зависит от сценария.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseLeftButtonDown.</source>
          <target state="translated">Если не вызывается базовый отключает обработку ввода по умолчанию для этого события мыши в классах предка, которые также предполагается, что для вызова OnPreviewMouseLeftButtonDown.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can derive from &lt;xref:System.Windows.Controls.Button&gt; and override OnPreviewMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">Например, можно получить из &lt;xref:System.Windows.Controls.Button&gt;и переопределять OnPreviewMouseLeftButtonDown в производном классе без вызова базовой реализации; Однако это переопределение отключает &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;событий.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve">
          <source>The event data reports that the left mouse button was pressed.</source>
          <target state="translated">Данные события сообщают, что была нажата левая кнопка мыши.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; event appears to travel a tunneling route but actually travels in an indirect way.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;Событие отображается передавать нисходящую, но фактически перемещается Косвенным способом.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;Базовый событие, которое направлено туннеля и каждого &lt;xref:System.Windows.UIElement&gt;вдоль событие маршрута использует одинаковые обработки событий для прямой &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; перенаправленное событие&lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Несмотря на то, что вы можете пометить &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;событие как обработанное в целях данного элемента, состояние обработки выполнения не является постоянным для остальных элементов на маршруте события.&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Тем не менее, может потребоваться пометить событие как обработанное, чтобы предотвратить общих обработчиков экземпляра (те, которые не указывает <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">Реализация по умолчанию для общих мыши обработка событий в &lt;xref:System.Windows.UIElement&gt;прослушивает &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;и преобразует его в соответствующее событие локального.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Если вы хотите переопределить данную логику, необходимо создать производный класс.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.</source>
          <target state="translated">В статическом конструкторе производного класса регистрация обработчика альтернативных класс &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnPreviewMouseLeftButtonUp.</source>
          <target state="translated">Невозможно изменить поведение обработки мыши &lt;xref:System.Windows.UIElement&gt;путем переопределения OnPreviewMouseLeftButtonUp.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve">
          <source>The event data reports that the left mouse button was released.</source>
          <target state="translated">Данные о событии отжатии левой кнопки мыши.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; event appears to travel a tunneling route but actually travels in an indirect way.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;Событие отображается передавать нисходящую, но фактически перемещается Косвенным способом.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;Базовый событие, которое направлено туннеля и каждого &lt;xref:System.Windows.UIElement&gt;вдоль событие маршрута использует одинаковые обработки событий для прямой &lt;xref:System.Windows.UIElement.MouseRightButtonDown&gt;.&lt;/xref:System.Windows.UIElement.MouseRightButtonDown&gt; перенаправленное событие&lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Несмотря на то, что вы можете пометить &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;событие как обработанное в целях данного элемента, состояние обработки выполнения не является постоянным для остальных элементов на маршруте события.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Тем не менее, может потребоваться пометить событие как обработанное, чтобы предотвратить общих обработчиков экземпляра (те, которые не указывает <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">Реализация по умолчанию для общих мыши обработка событий в &lt;xref:System.Windows.UIElement&gt;прослушивает &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;и преобразует его в соответствующее событие локального.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Если вы хотите переопределить данную логику, необходимо создать производный класс.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.</source>
          <target state="translated">В статическом конструкторе производного класса регистрация обработчика альтернативных класс &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnPreviewMouseRightButtonDown.</source>
          <target state="translated">Невозможно изменить поведение обработки мыши &lt;xref:System.Windows.UIElement&gt;путем переопределения OnPreviewMouseRightButtonDown.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can override this method in order to change event handling for a specific mouse state.</source>
          <target state="translated">Кроме того можно переопределить этот метод, чтобы изменить обработку события для конкретного состояния мыши.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you choose to call the base implementation depends on your scenario.</source>
          <target state="translated">Вы можете отказаться от вызвать базовую реализацию зависит от сценария.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseRightButtonDown.</source>
          <target state="translated">Если не вызывается базовый отключает обработку ввода по умолчанию для этого события мыши в классах предка, которые также предполагается, что для вызова OnPreviewMouseRightButtonDown.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can derive from &lt;xref:System.Windows.Controls.Control&gt; and override OnPreviewMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the &lt;xref:System.Windows.Controls.Control&gt; default behavior.</source>
          <target state="translated">Например, можно получить из &lt;xref:System.Windows.Controls.Control&gt;и переопределения в производном классе без вызова базы OnPreviewMouseRightButtonDown; Однако это переопределение отключает службы меню контекста на элементе управления, которые входят в состав из &lt;xref:System.Windows.Controls.Control&gt;поведение по умолчанию.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve">
          <source>The event data reports that the right mouse button was pressed.</source>
          <target state="translated">Данные события сообщают, что была нажата правая кнопка мыши.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; event appears to travel a tunneling route but actually travels in an indirect way.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;Событие отображается передавать нисходящую, но фактически перемещается Косвенным способом.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;Базовый событие, которое направлено туннеля и каждого &lt;xref:System.Windows.UIElement&gt;вдоль событие маршрута использует одинаковые обработки событий для прямой &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; перенаправленное событие&lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can mark the &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</source>
          <target state="translated">Несмотря на то, что вы можете пометить &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;событие как обработанное в целях данного элемента, состояние обработки выполнения не является постоянным для остальных элементов на маршруте события.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Тем не менее, может потребоваться пометить событие как обработанное, чтобы предотвратить общих обработчиков экземпляра (те, которые не указывает <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.</source>
          <target state="translated">Реализация по умолчанию для общих мыши обработка событий в &lt;xref:System.Windows.UIElement&gt;прослушивает &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;и преобразует его в соответствующее событие локального.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to override this logic, you must create a derived class.</source>
          <target state="translated">Если вы хотите переопределить данную логику, необходимо создать производный класс.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.</source>
          <target state="translated">В статическом конструкторе производного класса регистрация обработчика альтернативных класс &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement&gt; by overriding OnPreviewMouseRightButtonUp.</source>
          <target state="translated">Невозможно изменить поведение обработки мыши &lt;xref:System.Windows.UIElement&gt;путем переопределения OnPreviewMouseRightButtonUp.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve">
          <source>The event data reports that the right mouse button was released.</source>
          <target state="translated">Данные о событии отжатии правой кнопки мыши.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve">
          <source>The event data reports that one or more mouse buttons were released.</source>
          <target state="translated">Данные о событии отжатии одной или нескольких кнопок мыши.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.MouseWheelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.MouseWheelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.QueryContinueDragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.QueryContinueDragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusDownEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusDownEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusSystemGestureEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusSystemGestureEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.TextCompositionEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.TextCompositionEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch presses this element.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие, возникающее при сенсорном нажатии этого элемента.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreviewTouchDown method has no default implementation.</source>
          <target state="translated">Метод OnPreviewTouchDown имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnPreviewTouchDown in a derived class to handle the &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnPreviewTouchDown &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;событий.&lt;/xref:System.Windows.UIElement.PreviewTouchDown&gt;</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnPreviewTouchDown method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnPreviewTouchDown базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch moves while inside this element.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события, которое происходит при перемещении касания внутри этого элемента.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreviewTouchMove method has no default implementation.</source>
          <target state="translated">Метод OnPreviewTouchMove имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnPreviewTouchMove in a derived class to handle the &lt;xref:System.Windows.UIElement.PreviewTouchMove&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnPreviewTouchMove &lt;xref:System.Windows.UIElement.PreviewTouchMove&gt;событий.&lt;/xref:System.Windows.UIElement.PreviewTouchMove&gt;</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnPreviewTouchMove method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnPreviewTouchMove базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch is released inside this element.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события, которое происходит при отпускании касания внутри этого элемента.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPreviewTouchUp method has no default implementation.</source>
          <target state="translated">Метод OnPreviewTouchUp имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnPreviewTouchUp in a derived class to handle the &lt;xref:System.Windows.UIElement.PreviewTouchUp&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnPreviewTouchUp &lt;xref:System.Windows.UIElement.PreviewTouchUp&gt;событий.&lt;/xref:System.Windows.UIElement.PreviewTouchUp&gt;</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnPreviewTouchUp method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnPreviewTouchUp базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.QueryContinueDragEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.QueryContinueDragEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.QueryCursorEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.QueryCursorEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, participates in rendering operations that are directed by the layout system.</source>
          <target state="translated">При переопределении в производном классе участвует в операциях отрисовки, направляемых системой макета.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve">
          <source>The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</source>
          <target state="translated">Инструкции отрисовки для данного элемента не используются непосредственно при вызове этого метода и вместо этого сохраняются для последующего асинхронного использования, компоновку и отрисовку.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation in the &lt;xref:System.Windows.UIElement&gt; class.</source>
          <target state="translated">Этот метод не имеет по умолчанию реализации в &lt;xref:System.Windows.UIElement&gt;классе.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve">
          <source>The drawing instructions for a specific element.</source>
          <target state="translated">Инструкции по указанному элементу отрисовке.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve">
          <source>This context is provided to the layout system.</source>
          <target state="translated">Этот контекст передается система макета.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, participates in rendering operations that are directed by the layout system.</source>
          <target state="translated">При переопределении в производном классе участвует в операциях отрисовки, направляемых системой макета.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve">
          <source>This method is invoked after layout update, and before rendering, if the element's &lt;xref:System.Windows.UIElement.RenderSize*&gt; has changed as a result of layout update.</source>
          <target state="translated">Этот метод вызывается после обновления макета и перед отрисовкой, если элемент &lt;xref:System.Windows.UIElement.RenderSize*&gt;изменилось в результате обновления макета.&lt;/xref:System.Windows.UIElement.RenderSize*&gt;</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical WPF framework-level element uses the override implementation from &lt;xref:System.Windows.FrameworkElement&gt;.</source>
          <target state="translated">Обычный элемент уровня платформы WPF использует реализации переопределения из &lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.FrameworkElement&gt; implementation invalidates the &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; properties and handles the basics of remaking the layout.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;Делает недействительными реализации &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;и &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;свойств и дескрипторы основы изменяют макет.&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overriding OnRenderSizeChanged at the &lt;xref:System.Windows.UIElement&gt; level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</source>
          <target state="translated">Переопределение OnRenderSizeChanged на &lt;xref:System.Windows.UIElement&gt;уровне означает, что элемент реализации намеренно не используется реализация уровня инфраструктуры WPF, и таким образом элемент должен обрабатывать логику макета напрямую, обычно путем написания системе замены макета.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve">
          <source>The packaged parameters (<bpt id="p1">&lt;xref href="System.Windows.SizeChangedInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), which includes old and new sizes, and which dimension actually changes.</source>
          <target state="translated">Упакованные параметры (<bpt id="p1">&lt;xref href="System.Windows.SizeChangedInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), которая содержит старый и новый размеры и измерение, которое фактически изменяется.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusButtonEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusDownEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusDownEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event is raised by this element.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> присоединенные события с помощью данного элемента.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is similar to <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</source>
          <target state="translated">Этот метод аналогичен <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> шаблона On * методы: этот метод предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the matching event is a routed event.</source>
          <target state="translated">В этом случае соответствующее событие является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Пометка события обрабатываются по-прежнему полезно для предотвращения обработчиками (для которых не указан <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event is raised by this element.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> присоединенные события с помощью данного элемента.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no default implementation.</source>
          <target state="translated">У этого метода нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</source>
          <target state="translated">Поскольку промежуточный класс в цепочке наследования может реализовать этот метод, рекомендуется вызывать базовую реализацию в реализации.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call base either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Вызов базовой реализации можно до или после специальной обработки, в зависимости от требований.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is similar to <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</source>
          <target state="translated">Этот метод аналогичен <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> шаблона On * методы: этот метод предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case the matching event is a routed event.</source>
          <target state="translated">В этом случае соответствующее событие является маршрутизируемым.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify <ph id="ph1">`handledEventsToo`</ph>) from being invoked.</source>
          <target state="translated">Пометка события обрабатываются по-прежнему полезно для предотвращения обработчиками (для которых не указан <ph id="ph1">`handledEventsToo`</ph>) вызов.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusSystemGestureEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusSystemGestureEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.StylusEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve">
          <source>Invoked when an unhandled <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.</source>
          <target state="translated">Вызывается, когда необработанное <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> вложенное событие встречает на своем маршруте, производный от этого класса элемент.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Реализуйте этот метод, чтобы добавить обработчик класса для данного события.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Input.TextCompositionEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Input.TextCompositionEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch presses inside this element.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленное событие, возникающее при сенсорном нажатии внутри этого элемента.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnTouchDown method has no default implementation.</source>
          <target state="translated">Метод OnTouchDown имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchDown in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchDown&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnTouchDown &lt;xref:System.Windows.UIElement.TouchDown&gt;событий.&lt;/xref:System.Windows.UIElement.TouchDown&gt;</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchDown method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnTouchDown базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch moves from outside to inside the bounds of this element.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события, которое происходит при перемещении касания внутрь границ данного элемента.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT">
          <source>TheOnTouchEnter method has no default implementation.</source>
          <target state="translated">У метода TheOnTouchEnter нет реализации по умолчанию.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchEnter in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchEnter&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnTouchEnter &lt;xref:System.Windows.UIElement.TouchEnter&gt;событий.&lt;/xref:System.Windows.UIElement.TouchEnter&gt;</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchEnter method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnTouchEnter базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch moves from inside to outside the bounds of this <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события, которое происходит при перемещении касания за границы это <bpt id="p2">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnTouchLeave method has no default implementation.</source>
          <target state="translated">Метод OnTouchLeave имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchLeave in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchLeave&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnTouchLeave &lt;xref:System.Windows.UIElement.TouchLeave&gt;событий.&lt;/xref:System.Windows.UIElement.TouchLeave&gt;</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchLeave method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnTouchLeave базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch moves while inside this element.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события, которое происходит при перемещении касания внутри этого элемента.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnTouchMove method has no default implementation.</source>
          <target state="translated">Метод OnTouchMove имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchMove in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchMove&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnTouchMove &lt;xref:System.Windows.UIElement.TouchMove&gt;событий.&lt;/xref:System.Windows.UIElement.TouchMove&gt;</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchMove method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnTouchMove базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when a touch is released inside this element.</source>
          <target state="translated">Предоставляет обработку класса для <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события, которое происходит при отпускании касания внутри этого элемента.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnTouchUp method has no default implementation.</source>
          <target state="translated">Метод OnTouchUp имеет реализация по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override OnTouchUp in a derived class to handle the &lt;xref:System.Windows.UIElement.TouchUp&gt; event.</source>
          <target state="translated">Переопределить в производном классе позволяет обработать OnTouchUp &lt;xref:System.Windows.UIElement.TouchUp&gt;событий.&lt;/xref:System.Windows.UIElement.TouchUp&gt;</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to call the base class’s OnTouchUp method so that base classes receive the event.</source>
          <target state="translated">Необходимо вызвать метод OnTouchUp базового класса, чтобы получать события, базовые классы.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.Input.TouchEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve">
          <source>Invoked when the parent element of this <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> reports a change to its underlying visual parent.</source>
          <target state="translated">Вызывается, когда родительский элемент <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> сообщает об изменении в базовой визуального родительского объекта.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve">
          <source>The previous parent.</source>
          <target state="translated">Предыдущий родительский элемент.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve">
          <source>This may be provided as <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> did not have a parent element previously.</source>
          <target state="translated">Это может быть указано как <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ранее не имеет родительского элемента.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve">
          <source>Gets or sets the opacity factor applied to the entire <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when it is rendered in the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Возвращает или задает коэффициент непрозрачности, применяемый ко всему <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> при его отрисовке в <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT">
          <source>The 1.0 default value is the default provided by the initial metadata of this dependency property on the &lt;xref:System.Windows.UIElement&gt; class.</source>
          <target state="translated">1.0 по умолчанию используется значение по умолчанию, предоставляемые исходных метаданных этого свойства зависимостей для &lt;xref:System.Windows.UIElement&gt;класса.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</source>
          <target state="translated">Другие производные классы потенциально может изменить это значение по умолчанию, переопределяя метаданные в своем конструкторе класса.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of Opacity won't be applied to actual layout unless the element is also visible (&lt;xref:System.Windows.UIElement.IsVisible%2A&gt; is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">Значение прозрачности не будет применяться к фактическая структура, если элемент видим также (&lt;xref:System.Windows.UIElement.IsVisible%2A&gt; — <ph id="ph1">`true`</ph>).&lt;/xref:System.Windows.UIElement.IsVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT">
          <source>Opacity is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</source>
          <target state="translated">Прозрачность применяется от родительских элементов на вниз по дереву элементов к дочерним элементам, но видимые эффекты вложенных настроек прозрачности не указано в значении свойства отдельных дочерних элементов.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item Opacity property would still be 0.2 when queried.</source>
          <target state="translated">Например если список имеет прозрачность 50% (0,5) и один из его элементов есть собственная прозрачность 20% (0.2), чистая видимая прозрачность элемента списка будут отображаться как если бы он был 10% (0,1), но значение свойства элемента списка свойство прозрачности по-прежнему будет 0,2 при запросе.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</source>
          <target state="translated">Даже если объявленной или вычисленной прозрачности равно 0, элемент по-прежнему участвует в событиях ввода и командах и потенциально может получить фокус.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT">
          <source>This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</source>
          <target state="translated">Этот аспект может быть полезно, если для экземпляра можно использовать объект непрозрачности нуля (например, фигуры) для маскировки базовых объектов прозрачными элементами.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT">
          <source>The opacity-zero object can then handle all the input event processing for an underlying area.</source>
          <target state="translated">Непрозрачность нулевой объект затем можно обработать все события ввода, обработки для базовой области.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the <ph id="ph1">`Background`</ph> or <ph id="ph2">`Fill`</ph> of the object or shape should be set to a value, even if it is &lt;xref:System.Windows.Media.Brushes.Transparent%2A&gt;, otherwise hit testing is not enabled, and no events are received.</source>
          <target state="translated">Тем не менее <ph id="ph1">`Background`</ph> или <ph id="ph2">`Fill`</ph> фигуры или объекта должно быть присвоено значение, даже если это &lt;xref:System.Windows.Media.Brushes.Transparent%2A&gt;, в противном случае попадания не включен, и события не принимаются.&lt;/xref:System.Windows.Media.Brushes.Transparent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Opacity"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.OpacityProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Opacity"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.OpacityProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.OpacityProperty&gt;</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve">
          <source>The opacity factor.</source>
          <target state="translated">Коэффициент непрозрачности.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve">
          <source>Default opacity is 1.0.</source>
          <target state="translated">По умолчанию непрозрачность равна 1,0.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve">
          <source>Expected values are between 0.0 and 1.0.</source>
          <target state="translated">Ожидаемые значения находятся в диапазоне от 0,0 до 1,0.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve">
          <source>Gets or sets an opacity mask, as a <bpt id="p1">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is applied to any alpha-channel masking for the rendered content of this element.</source>
          <target state="translated">Возвращает или задает маску непрозрачности в виде <bpt id="p1">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> реализацию, которая применяется для любого альфа канала маскировании отображаемого содержимого этого элемента.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property only uses whatever the alpha channel value is for the supplied &lt;xref:System.Windows.Media.Brush&gt;.</source>
          <target state="translated">Это свойство используется только любое значение альфа-канала — для предоставленного &lt;xref:System.Windows.Media.Brush&gt;.&lt;/xref:System.Windows.Media.Brush&gt;</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other channels of the &lt;xref:System.Windows.Media.Brush&gt;'s rendered content (Red, Green, or Blue) are ignored.</source>
          <target state="translated">Другие каналы &lt;xref:System.Windows.Media.Brush&gt;отображенное содержимое (красный, зеленый или синий) игнорируются.&lt;/xref:System.Windows.Media.Brush&gt;</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most typical &lt;xref:System.Windows.Media.Brush&gt; for this purpose is an &lt;xref:System.Windows.Media.ImageBrush&gt;, which can be used for a variety of photo masking techniques such as a vignette.</source>
          <target state="translated">Наиболее распространенными &lt;xref:System.Windows.Media.Brush&gt;для этой цели &lt;xref:System.Windows.Media.ImageBrush&gt;, который может использоваться для различных фото маскировки методы, такие как виньетирования.&lt;/xref:System.Windows.Media.ImageBrush&gt; &lt;/xref:System.Windows.Media.Brush&gt;</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT">
          <source>But any defined &lt;xref:System.Windows.Media.Brush&gt; (such as &lt;xref:System.Windows.Media.LinearGradientBrush&gt;) can be used.</source>
          <target state="translated">Но любые определенные &lt;xref:System.Windows.Media.Brush&gt;(такие как &lt;xref:System.Windows.Media.LinearGradientBrush&gt;) может использоваться.&lt;/xref:System.Windows.Media.LinearGradientBrush&gt; &lt;/xref:System.Windows.Media.Brush&gt;</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, this property value can use an inline syntax that is specific to each implementation of the &lt;xref:System.Windows.Media.Brush&gt; abstract class.</source>
          <target state="translated">В <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, значение этого свойства можно использовать встроенный синтаксис, которая относится к каждой реализации &lt;xref:System.Windows.Media.Brush&gt;абстрактного класса.&lt;/xref:System.Windows.Media.Brush&gt;</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Painting with Solid Colors and Gradients Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Рисование с сплошные цвета и градиенты Обзор<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_OpacityMask"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.OpacityMaskProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_OpacityMask"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.OpacityMaskProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.OpacityMaskProperty&gt;</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve">
          <source>The brush to use for opacity masking.</source>
          <target state="translated">Кисть для маски непрозрачности.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.OpacityMask*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.OpacityMask*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.OpacityMask*&gt;</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Opacity*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.Opacity*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.Opacity*&gt;</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve">
          <source>Gets a value that uniquely identifies this element.</source>
          <target state="translated">Возвращает значение, однозначно определяющее этот элемент.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT">
          <source>PersistId uniquely identifies each element.</source>
          <target state="translated">PersistId однозначно идентифицирует каждый элемент.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element keeps the same PersistId every time the same <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> is loaded (including binary representations).</source>
          <target state="translated">Сохраняет элемент того же PersistId каждый раз же <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> загружается (включая двоичные представления).</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT">
          <source>This identifier is used for internal loading, parsing and serialization requirements.</source>
          <target state="translated">Этот идентификатор используется для внутренней загрузки, синтаксического анализа и сериализации требований.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not intended to be used by your application code.</source>
          <target state="translated">Он не предназначен для использования в коде приложения.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has no relationship to the &lt;xref:System.Object.GetHashCode%2A&gt; result for any given instance.</source>
          <target state="translated">Это свойство не имеет отношения к &lt;xref:System.Object.GetHashCode%2A&gt;результат для любого заданного экземпляра.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve">
          <source>The unique identifier for this element.</source>
          <target state="translated">Уникальный идентификатор для этого элемента.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</source>
          <target state="translated">При переопределении в производном классе, возвращает элемент, который должен получить фокус для указанного направления перемещения фокуса, без перемещения фокуса на этот элемент.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method in this class is incomplete, and always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Реализация по умолчанию этого метода в данном классе является неполной и всегда возвращает <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve">
          <source>The direction of the requested focus traversal.</source>
          <target state="translated">Направление запроса на перемещение фокуса.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve">
          <source>The element that would have received focus if &lt;xref:System.Windows.UIElement.MoveFocus*&gt; were actually invoked.</source>
          <target state="translated">Элемент, который будет получил фокус, если &lt;xref:System.Windows.UIElement.MoveFocus*&gt;были фактически вызывается.&lt;/xref:System.Windows.UIElement.MoveFocus*&gt;</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the drag target.</source>
          <target state="translated">Происходит, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве цели перетаскивания.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event for this class, so that PreviewDragEnter is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewDragEnter часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewDragEnter event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewDragEnter присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewDragEnterEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.DragEnter&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewDragEnterEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.DragEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.DragEnter&gt;.&lt;/xref:System.Windows.UIElement.DragEnter&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewDragEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewDragEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewDragEnter%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewDragEnter%2A&gt;</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the drag origin.</source>
          <target state="translated">Происходит, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве источника перетаскивания.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event for this class, so that PreviewDragLeave is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewDragLeave часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewDragLeave event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewDragLeave присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewDragLeaveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.DragLeave&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewDragLeaveEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.DragEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.DragLeave&gt;.&lt;/xref:System.Windows.UIElement.DragLeave&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewDragLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewDragLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewDragLeave%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewDragLeave%2A&gt;</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drag event with this element as the potential drop target.</source>
          <target state="translated">Происходит, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве потенциальной цели.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event for this class, so that PreviewDragOver is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewDragOver часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewDragOver event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewDragOver присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewDragOverEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.DragOver&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewDragOver"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewDragOverEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.DragEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.DragOver&gt;.&lt;/xref:System.Windows.UIElement.DragOver&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewDragOverEvent&gt;</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewDragOver%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewDragOver%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewDragOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragOver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDragOver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve">
          <source>Occurs when the input system reports an underlying drop event with this element as the drop target.</source>
          <target state="translated">Происходит, когда система ввода сообщает о соответствующем событии перетаскивания, имеющем в качестве конечного расположения сброса.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event for this class, so that PreviewDrop is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewDrop часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewDrop event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewDrop присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewDrop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewDropEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.Drop&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewDrop"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewDropEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.DragEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.Drop&gt;.&lt;/xref:System.Windows.UIElement.Drop&gt; &lt;/xref:System.Windows.DragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewDropEvent&gt;</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewDrop%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewDrop%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewDrop%2A&gt;</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDrop"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewDrop"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve">
          <source>Occurs when a drag-and-drop operation is started.</source>
          <target state="translated">Происходит при начале операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewGiveFeedback event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</source>
          <target state="translated">Событие PreviewGiveFeedback позволяет источнику события перетаскивания изменять внешний вид указателя мыши, чтобы дать пользователю визуальную обратную связь во время операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event for this class, so that PreviewGiveFeedback is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewGiveFeedback часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewGiveFeedback event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewGiveFeedback присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewGiveFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewGiveFeedbackEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.GiveFeedback&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewGiveFeedback"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewGiveFeedbackEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.GiveFeedback&gt;.&lt;/xref:System.Windows.UIElement.GiveFeedback&gt; &lt;/xref:System.Windows.GiveFeedbackEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewGiveFeedbackEvent&gt;</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A&gt;</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewGiveFeedback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewGiveFeedback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve">
          <source>Occurs when the keyboard is focused on this element.</source>
          <target state="translated">Происходит, когда фокус ввода с клавиатуры на данном элементе.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Так как это событие нисходящей маршрутизации элемент, имеющий фокус может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has focus.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;в данных события, чтобы определить фактический элемент, имеющий фокус.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event for this class, so that PreviewGotKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewGotKeyboardFocus часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewGotKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewGotKeyboardFocus присоединяются к базовому объекту &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewGotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.GotKeyboardFocus&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewGotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.GotKeyboardFocus&gt;.&lt;/xref:System.Windows.UIElement.GotKeyboardFocus&gt; &lt;/xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewGotKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewGotKeyboardFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve">
          <source>Occurs when a key is pressed while focus is on this element.</source>
          <target state="translated">Происходит при нажатии клавиши, когда фокус ввода установлен на данном элементе.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key handling interacts with other platform features such as commanding and text composition.</source>
          <target state="translated">Обработка клавиш взаимодействует с другими функциями платформы, такие как выполнение команд и композиция текста.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.KeyDown&gt; event is a lower-level text input event that might not behave as expected on certain controls.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.KeyDown&gt;Событие является событием входной текст нижнего уровня, могут работать некорректно, в некоторых элементах управления.&lt;/xref:System.Windows.UIElement.KeyDown&gt;</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</source>
          <target state="translated">Это так, как некоторые элементы управления имеют композиции элементов управления или обработку ввода обработку класса, который предоставляет более высокого уровня версия текста, а также связанные события.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event for this class, so that PreviewKeyDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewKeyDown часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewKeyDown event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewKeyDown присоединяются к базовому объекту &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewKeyDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewKeyDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.KeyDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewKeyDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewKeyDownEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.KeyDown&gt;.&lt;/xref:System.Windows.UIElement.KeyDown&gt; &lt;/xref:System.Windows.Input.KeyEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewKeyDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewKeyDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewKeyDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewKeyDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewKeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewKeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve">
          <source>Occurs when a key is released while focus is on this element.</source>
          <target state="translated">Происходит при отпускании клавиши, когда фокус ввода установлен на данном элементе.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key handling interacts with other platform features such as commanding and text composition.</source>
          <target state="translated">Обработка клавиш взаимодействует с другими функциями платформы, такие как выполнение команд и композиция текста.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.UIElement.KeyUp&gt; event is a lower-level text input event that might not behave as expected on certain controls.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.KeyUp&gt;Событие является событием входной текст нижнего уровня, могут работать некорректно, в некоторых элементах управления.&lt;/xref:System.Windows.UIElement.KeyUp&gt;</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</source>
          <target state="translated">Это так, как некоторые элементы управления имеют композиции элементов управления или обработку ввода обработку класса, который предоставляет более высокого уровня версия текста, а также связанные события.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, check the documentation for individual controls.</source>
          <target state="translated">Дополнительные сведения обратитесь к документации для отдельных элементов управления.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event for this class, so that PreviewKeyUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewKeyUp часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewKeyUp event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewKeyUp присоединяются к базовому объекту &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewKeyUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewKeyUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.KeyUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewKeyUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewKeyUpEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.KeyUp&gt;.&lt;/xref:System.Windows.UIElement.KeyUp&gt; &lt;/xref:System.Windows.Input.KeyEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewKeyUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewKeyUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewKeyUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewKeyUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewKeyUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewKeyUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve">
          <source>Occurs when the keyboard is no longer focused on this element.</source>
          <target state="translated">Происходит, когда на этот элемент больше не фокус ввода с клавиатуры.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</source>
          <target state="translated">Так как это событие нисходящей маршрутизации элемент, который потерял фокус может быть дочерний элемент, а не элемента, которому фактически присоединен обработчик событий.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost focus.</source>
          <target state="translated">Проверьте &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;в данных события, чтобы определить фактический элемент, который потерял фокус.&lt;/xref:System.Windows.RoutedEventArgs.Source%2A&gt;</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event for this class, so that PreviewLostKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewLostKeyboardFocus часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewLostKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewLostKeyboardFocus присоединяются к базовому объекту &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewLostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.LostKeyboardFocus&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewLostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.LostKeyboardFocus&gt;.&lt;/xref:System.Windows.UIElement.LostKeyboardFocus&gt; &lt;/xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent&gt;</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewLostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewLostKeyboardFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve">
          <source>Occurs when any mouse button is pressed while the pointer is over this element.</source>
          <target state="translated">Происходит при нажатии любой кнопки мыши в тот момент, когда указатель находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached event for this class, so that PreviewMouseDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewMouseDown часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewMouseDown event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewMouseDown присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewMouseDown event is often raised together with either &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;, which correspond to a press of one of the two standard mouse buttons.</source>
          <target state="translated">Событие PreviewMouseDown часто возникает вместе с либо &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;или &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;, которые соответствуют нажмите одну из двух кнопок мыши стандартных.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; and &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event reaches this element along the event route.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;и &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;также перенаправленные события, но они являются прямой перенаправленные события, и возникает соответствующее событие кнопками при &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;событий достигает этого элемента на маршруте события.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks for &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;.</source>
          <target state="translated">См. Примечания &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;или &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDown&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.MouseDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewMouseDownEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.MouseDown&gt;.&lt;/xref:System.Windows.UIElement.MouseDown&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewMouseDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewMouseDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve">
          <source>Occurs when the left mouse button is pressed while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при нажатии левой кнопки мыши, когда указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Несмотря на то, что это может показаться шагом следовать нисходящую через дерево элементов, фактически является прямой перенаправленного события, которое возникает и восходящему на дереве элементов каждого &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Это событие является одним из нескольких связанных событий, сообщающих кнопки мыши базовая &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;события, который является вложенным событием, которое обрабатывается каждым элементом на маршруте событий.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event.</source>
          <target state="translated">Данные события данного события предоставляет данные события базового &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;событий.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Если это событие помечено как обработанное на маршруте события, по-прежнему возникают определенные события кнопки мыши; Тем не менее, необходимо добавить обработчики событий кнопки мыши путем явного вызова &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, с помощью параметра для обработки событий, которые уже помечено как обработанное, чтобы быть прослушивателей события.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark PreviewMouseLeftButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Если пометить PreviewMouseLeftButtonDown обрабатываются по существу пометка &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;обрабатываются для всех последующих прослушивателей в маршруте и на всех событий, связанных с.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT">
          <source>This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.</source>
          <target state="translated">Возможно в нем создается класс обработчика события, такие как &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.&lt;/xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">С концептуальной точки зрения это событие (и другие события кнопки мыши &lt;xref:System.Windows.UIElement&gt;) быть мыши «служба» (с помощью определения службы, предоставляемые &lt;xref:System.Windows.Input.Mouse&gt;класса).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">Событие добавляет удобство нет необходимости проверять состояние кнопок мыши (слева направо, вверх вниз) исходного события мыши в данных события.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Для более сложных сценариев, таких как проверка состояния стандартным кнопок может потребоваться использовать <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> на &lt;xref:System.Windows.Input.Mouse&gt;класс, а не &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve">
          <source>Occurs when the left mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при отпускании левой кнопки мыши, пока указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Несмотря на то, что это может показаться шагом следовать нисходящую через дерево элементов, фактически является прямой перенаправленного события, которое возникает и восходящему на дереве элементов каждого &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Это событие является одним из нескольких связанных событий, сообщающих кнопки мыши базовая &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;события, который является вложенным событием, которое обрабатывается каждым элементом на маршруте событий.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event.</source>
          <target state="translated">Данные события данного события предоставляет данные события базового &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;событий.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Если это событие помечено как обработанное на маршруте события, по-прежнему возникают определенные события кнопки мыши; Тем не менее, необходимо добавить обработчики событий кнопки мыши путем явного вызова &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, с помощью параметра для обработки событий, которые уже помечено как обработанное, чтобы быть прослушивателей события.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark PreviewMouseLeftButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Если пометить PreviewMouseLeftButtonUp обрабатываются по существу пометка &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;обрабатываются для всех последующих прослушивателей в маршруте и на всех событий, связанных с.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">С концептуальной точки зрения это событие (и другие события кнопки мыши &lt;xref:System.Windows.UIElement&gt;) быть мыши «служба» (с помощью определения службы, предоставляемые &lt;xref:System.Windows.Input.Mouse&gt;класса).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">Событие добавляет удобство нет необходимости проверять состояние кнопок мыши (слева направо, вверх вниз) исходного события мыши в данных события.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Для более сложных сценариев, таких как проверка состояния стандартным кнопок может потребоваться использовать <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> на &lt;xref:System.Windows.Input.Mouse&gt;класс, а не &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer moves while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при перемещении указателя мыши, когда указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</source>
          <target state="translated">Это событие происходит, и когда указатель мыши входит в пределы элемента, а также при перемещении указателя мыши оставаясь в пределах границ элемента.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event for this class, so that PreviewMouseMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewMouseMove часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewMouseMove event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewMouseMove присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.MouseMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewMouseMoveEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.MouseMove&gt;.&lt;/xref:System.Windows.UIElement.MouseMove&gt; &lt;/xref:System.Windows.Input.MouseEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewMouseMove%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewMouseMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve">
          <source>Occurs when the right mouse button is pressed while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при нажатии правой кнопки мыши, когда указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Несмотря на то, что это может показаться шагом следовать нисходящую через дерево элементов, фактически является прямой перенаправленного события, которое возникает и восходящему на дереве элементов каждого &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Это событие является одним из нескольких связанных событий, сообщающих кнопки мыши базовая &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;события, который является вложенным событием, которое обрабатывается каждым элементом на маршруте событий.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event.</source>
          <target state="translated">Данные события данного события предоставляет данные события базового &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;событий.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Если это событие помечено как обработанное на маршруте события, по-прежнему возникают определенные события кнопки мыши; Тем не менее, необходимо добавить обработчики событий кнопки мыши путем явного вызова &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, с помощью параметра для обработки событий, которые уже помечено как обработанное, чтобы быть прослушивателей события.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark PreviewMouseRightButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Если пометить PreviewMouseRightButtonDown обрабатываются по существу пометка &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;обрабатываются для всех последующих прослушивателей в маршруте и на всех событий, связанных с.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" extradata="MT">
          <source>This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.</source>
          <target state="translated">Возможно в нем создается класс обработчика события, такие как &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.&lt;/xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">С концептуальной точки зрения это событие (и другие события кнопки мыши &lt;xref:System.Windows.UIElement&gt;) быть мыши «служба» (с помощью определения службы, предоставляемые &lt;xref:System.Windows.Input.Mouse&gt;класса).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">Событие добавляет удобство нет необходимости проверять состояние кнопок мыши (слева направо, вверх вниз) исходного события мыши в данных события.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Для более сложных сценариев, таких как проверка состояния стандартным кнопок может потребоваться использовать <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> на &lt;xref:System.Windows.Input.Mouse&gt;класс, а не &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve">
          <source>Occurs when the right mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при отпускании правой кнопки мыши, пока указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Несмотря на то, что это может показаться шагом следовать нисходящую через дерево элементов, фактически является прямой перенаправленного события, которое возникает и восходящему на дереве элементов каждого &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.</source>
          <target state="translated">Это событие является одним из нескольких связанных событий, сообщающих кнопки мыши базовая &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;события, который является вложенным событием, которое обрабатывается каждым элементом на маршруте событий.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event.</source>
          <target state="translated">Данные события данного события предоставляет данные события базового &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;событий.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.</source>
          <target state="translated">Если это событие помечено как обработанное на маршруте события, по-прежнему возникают определенные события кнопки мыши; Тем не менее, необходимо добавить обработчики событий кнопки мыши путем явного вызова &lt;xref:System.Windows.UIElement.AddHandler%2A&gt;, с помощью параметра для обработки событий, которые уже помечено как обработанное, чтобы быть прослушивателей события.&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you mark PreviewMouseRightButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.</source>
          <target state="translated">Если пометить PreviewMouseRightButtonUp обрабатываются по существу пометка &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;обрабатываются для всех последующих прослушивателей в маршруте и на всех событий, связанных с.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement&gt;) to be a mouse "service" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).</source>
          <target state="translated">С концептуальной точки зрения это событие (и другие события кнопки мыши &lt;xref:System.Windows.UIElement&gt;) быть мыши «служба» (с помощью определения службы, предоставляемые &lt;xref:System.Windows.Input.Mouse&gt;класса).&lt;/xref:System.Windows.Input.Mouse&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</source>
          <target state="translated">Событие добавляет удобство нет необходимости проверять состояние кнопок мыши (слева направо, вверх вниз) исходного события мыши в данных события.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Для более сложных сценариев, таких как проверка состояния стандартным кнопок может потребоваться использовать <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> на &lt;xref:System.Windows.Input.Mouse&gt;класс, а не &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse&gt;</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseRightButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve">
          <source>Occurs when any mouse button is released while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при отпускании любой кнопки мыши, если указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event for this class, so that PreviewMouseUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewMouseUp часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewMouseUp event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewMouseUp присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewMouseUp event is often raised together with either &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;, which correspond to a press of one of the two standard mouse buttons.</source>
          <target state="translated">Событие PreviewMouseUp часто возникает вместе с либо &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;или &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;, которые соответствуют нажмите одну из двух кнопок мыши стандартных.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; and &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event reaches this element along the event route.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;и &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;также перенаправленные события, но они являются прямой перенаправленные события, и возникает соответствующее событие кнопками при &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;событий достигает этого элемента на маршруте события.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;&lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks for &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;.</source>
          <target state="translated">См. Примечания &lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;или &lt;xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewMouseRightButtonUp&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.MouseUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewMouseUpEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.MouseUp&gt;.&lt;/xref:System.Windows.UIElement.MouseUp&gt; &lt;/xref:System.Windows.Input.MouseButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewMouseUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewMouseUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve">
          <source>Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</source>
          <target state="translated">Происходит при вращении колесика мыши в момент, когда указатель мыши находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</source>
          <target state="translated">Фокус или захват мыши имеют приоритет над которого указатель мыши; Таким образом при получении этого события из элемента или получившего, указатель мыши может быть фактически над другим элементом.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event for this class, so that &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt; is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt;вложенное событие для этого класса, чтобы &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt;входит в состав класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseMove&gt; &lt;/xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt; event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к &lt;xref:System.Windows.UIElement.PreviewMouseMove&gt;событий присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseMove&gt;</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseWheel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewMouseWheelEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.MouseWheel&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewMouseWheel"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewMouseWheelEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.MouseWheel&gt;.&lt;/xref:System.Windows.UIElement.MouseWheel&gt; &lt;/xref:System.Windows.Input.MouseWheelEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseWheelEvent&gt;</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewMouseWheel%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewMouseWheel%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewMouseWheel%2A&gt;</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseWheel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewMouseWheel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve">
          <source>Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</source>
          <target state="translated">Происходит при изменении состояния клавиатуры или мыши кнопки во время операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewQueryContinueDrag event enables the drag source to declare whether the drag-and-drop operation should be canceled.</source>
          <target state="translated">Событие PreviewQueryContinueDrag позволяет источнику перетаскивания для объявления, должна ли быть отменена операция перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event for this class, so that PreviewQueryContinueDrag is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewQueryContinueDrag часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewQueryContinueDrag event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewQueryContinueDrag присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewQueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewQueryContinueDragEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.QueryContinueDrag&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewQueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewQueryContinueDragEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.QueryContinueDrag&gt;.&lt;/xref:System.Windows.UIElement.QueryContinueDrag&gt; &lt;/xref:System.Windows.QueryContinueDragEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewQueryContinueDragEvent&gt;</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A&gt;</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewQueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewQueryContinueDrag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus button is pressed while the pointer is over this element.</source>
          <target state="translated">Происходит при нажатии кнопки пера в тот момент, когда указатель находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusButtonDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewStylusButtonDown часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusButtonDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewStylusButtonDown присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Touch Input Support in Windows Vista<ept id="p1">](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0)</ept> and <bpt id="p2">[</bpt>Input Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Touch поддержки входных данных в Windows Vista<ept id="p1">](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0)</ept> и <bpt id="p2">[</bpt>фокусе<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusButtonDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusButtonDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewStylusButtonDownEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.StylusButtonDown&gt;.&lt;/xref:System.Windows.UIElement.StylusButtonDown&gt; &lt;/xref:System.Windows.Input.StylusButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus button is released while the pointer is over this element.</source>
          <target state="translated">Происходит при отпускании кнопки пера, когда указатель находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusButtonUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewStylusButtonUp часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusButtonUp event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewStylusButtonUp присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusButtonUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusButtonUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewStylusButtonUpEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.StylusButtonUp&gt;.&lt;/xref:System.Windows.UIElement.StylusButtonUp&gt; &lt;/xref:System.Windows.Input.StylusButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus touches the digitizer while it is over this element.</source>
          <target state="translated">Происходит, когда перо касается дигитайзера, когда оно находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewStylusDown часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewStylusDown присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewStylusDownEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.StylusDown&gt;.&lt;/xref:System.Windows.UIElement.StylusDown&gt; &lt;/xref:System.Windows.Input.StylusDownEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewStylusDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewStylusDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus moves over an element without actually touching the digitizer.</source>
          <target state="translated">Происходит при движении пера над элементом без касания дигитайзера.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusInAirMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewStylusInAirMove часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusInAirMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, подключенные к событие PreviewStylusInAirMove подключены к основному &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusInAirMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusInAirMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusInAirMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.StylusInAirMove&gt;.&lt;/xref:System.Windows.UIElement.StylusInAirMove&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInAirMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInAirMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</source>
          <target state="translated">Происходит, когда перо находится достаточно близко от дигитайзера, чтобы быть обнаруженным, находясь над данным элементом.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusInRange is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewStylusInRange часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusInRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewStylusInRange присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusInRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusInRangeEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusInRange&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusInRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewStylusInRangeEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.StylusInRange&gt;.&lt;/xref:System.Windows.UIElement.StylusInRange&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusInRangeEvent&gt;</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusInRange%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewStylusInRange%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewStylusInRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus moves while over the element.</source>
          <target state="translated">Происходит при движении пера над элементом.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve">
          <source>The stylus must move while being detected by the digitizer to raise this event, otherwise, <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInAirMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is raised instead.</source>
          <target state="translated">Перемещаемое перо должно обнаруживаться дигитайзером для вызова этого события, в противном случае <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusInAirMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> вызывается событие.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewStylusMove часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewStylusMove присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewStylusMoveEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.StylusMove&gt;.&lt;/xref:System.Windows.UIElement.StylusMove&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewStylusMove%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewStylusMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus is too far from the digitizer to be detected.</source>
          <target state="translated">Происходит, когда перо находится слишком далеко от дигитайзера, чтобы быть обнаруженным.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusOutOfRange is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewStylusOutOfRange часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusOutOfRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, которые прикреплены к событию PreviewStylusOutOfRange присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusOutOfRange&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.StylusOutOfRange&gt;.&lt;/xref:System.Windows.UIElement.StylusOutOfRange&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent&gt;</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusOutOfRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve">
          <source>Occurs when a user performs one of several stylus gestures.</source>
          <target state="translated">Происходит при использовании пользователем одного из жестов пером.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about stylus gestures, see &lt;xref:System.Windows.Input.SystemGesture&gt;.</source>
          <target state="translated">Сведения о жестах пера см. в разделе &lt;xref:System.Windows.Input.SystemGesture&gt;.&lt;/xref:System.Windows.Input.SystemGesture&gt;</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusSystemGesture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewStylusSystemGesture часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewStylusSystemGesture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewStylusSystemGesture присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusSystemGesture&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.StylusSystemGesture&gt;.&lt;/xref:System.Windows.UIElement.StylusSystemGesture&gt; &lt;/xref:System.Windows.Input.StylusSystemGestureEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent&gt;</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A&gt;</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusSystemGesture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve">
          <source>Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</source>
          <target state="translated">Происходит, когда пользователь отрывает перо от планшета, когда перо находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event for this class, so that &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt; is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt;вложенное событие для этого класса, чтобы &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt;входит в состав класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusDown&gt; &lt;/xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt; event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt;событий присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusDown&gt;</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewStylusUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.StylusUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewStylusUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewStylusUpEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.StylusUp&gt;.&lt;/xref:System.Windows.UIElement.StylusUp&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewStylusUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewStylusUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewStylusUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewStylusUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewStylusUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve">
          <source>Occurs when this element gets text in a device-independent manner.</source>
          <target state="translated">Происходит при получении этим элементом текста аппаратно независимым способом.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreviewTextInput event allows a component or application to listen for text input in a device-independent manner.</source>
          <target state="translated">Событие PreviewTextInput позволяет компонента или приложения для прослушивания ввода текста в аппаратно независимым способом.</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The keyboard is the primary means of PreviewTextInput; but speech, handwriting, and other input devices can also generate PreviewTextInput.</source>
          <target state="translated">Клавиатура является основным средством PreviewTextInput; Однако речи, рукописного ввода и других устройств ввода можно также создавать PreviewTextInput.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</source>
          <target state="translated">Из-за сочетания клавиш — клавиатуры по умолчанию или редакторам методов ввода, несколько событий клавиш могут сгенерировать только одно событие ввода текста.</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event for this class, so that PreviewTextInput is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы PreviewTextInput часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the PreviewTextInput event are attached to the underlying &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию PreviewTextInput присоединяются к базовому объекту &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewTextInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewTextInputEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.TextInput&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewTextInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewTextInputEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.TextInput&gt;.&lt;/xref:System.Windows.UIElement.TextInput&gt; &lt;/xref:System.Windows.Input.TextCompositionEventHandler&gt; &lt;/xref:System.Windows.UIElement.PreviewTextInputEvent&gt;</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewTextInput%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewTextInput%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewTextInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTextInput"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTextInput"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve">
          <source>Occurs when a finger touches the screen while the finger is over this element.</source>
          <target state="translated">Происходит при касании пальцем экрана, когда палец находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the PreviewTouchDown and &lt;xref:System.Windows.UIElement.TouchDown&gt; events do not occur until a finger touches the screen and moves.</source>
          <target state="translated">По умолчанию, PreviewTouchDown и &lt;xref:System.Windows.UIElement.TouchDown&gt;событий не выполняется до пальцем экрана касается и перемещает.&lt;/xref:System.Windows.UIElement.TouchDown&gt;</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a &lt;xref:System.Windows.Input.Stylus&gt;.</source>
          <target state="translated">Пальца на экране необходимо удерживать нажатой его без его перемещения нажатие и удерживайте поведение &lt;xref:System.Windows.Input.Stylus&gt;.&lt;/xref:System.Windows.Input.Stylus&gt;</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The press and hold behavior is equivalent to a mouse right-click.</source>
          <target state="translated">Поведение нажатия и удерживания соответствует щелчку правой кнопкой мыши.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cause the PreviewTouchDown and &lt;xref:System.Windows.UIElement.TouchDown&gt; events to occur as soon as a finger touches the screen, set the &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; attached property to <ph id="ph1">`false`</ph> for this element.</source>
          <target state="translated">Вызвать PreviewTouchDown и &lt;xref:System.Windows.UIElement.TouchDown&gt;события к как можно скорее касании пальцем экрана, задать &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt;присоединенному свойству <ph id="ph1">`false`</ph> для этого элемента.&lt;/xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.TouchDown&gt;</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewTouchDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.TouchDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewTouchDownEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.TouchDown&gt;.&lt;/xref:System.Windows.UIElement.TouchDown&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.PreviewTouchDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewTouchDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewTouchDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewTouchDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve">
          <source>Occurs when a finger moves on the screen while the finger is over this element.</source>
          <target state="translated">Происходит при перемещении пальца на экране, когда палец находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewTouchMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.TouchMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewTouchMoveEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.TouchMove&gt;.&lt;/xref:System.Windows.UIElement.TouchMove&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.PreviewTouchMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewTouchMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewTouchMove%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewTouchMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve">
          <source>Occurs when a finger is raised off of the screen while the finger is over this element.</source>
          <target state="translated">Происходит, когда палец отрывается экрана, когда палец находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.PreviewTouchUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement.TouchUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_PreviewTouchUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.PreviewTouchUpEvent&gt;|   | Стратегия маршрутизации | Туннелирование |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Соответствующие восходящей событие является &lt;xref:System.Windows.UIElement.TouchUp&gt;.&lt;/xref:System.Windows.UIElement.TouchUp&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.PreviewTouchUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnPreviewTouchUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnPreviewTouchUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnPreviewTouchUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.PreviewTouchUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve">
          <source>Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</source>
          <target state="translated">Происходит при изменении состояния клавиатуры или мыши кнопки во время операции перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The QueryContinueDrag event enables the drag source to determine whether the drag-and-drop operation should be canceled.</source>
          <target state="translated">Событие QueryContinueDrag позволяет источнику перетаскивания определить, должна ли быть отменена операция перетаскивания и вставки.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event for this class, so that QueryContinueDrag is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы QueryContinueDrag часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the QueryContinueDrag event are attached to the underlying &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, которые прикреплены к событию QueryContinueDrag присоединяются к базовому объекту &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_QueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.QueryContinueDragEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewQueryContinueDrag&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_QueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.QueryContinueDragEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewQueryContinueDrag&gt;.&lt;/xref:System.Windows.UIElement.PreviewQueryContinueDrag&gt; &lt;/xref:System.Windows.QueryContinueDragEventHandler&gt; &lt;/xref:System.Windows.UIElement.QueryContinueDragEvent&gt;</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnQueryContinueDrag%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnQueryContinueDrag%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnQueryContinueDrag%2A&gt;</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.QueryContinueDrag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.QueryContinueDrag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve">
          <source>Occurs when the cursor is requested to display.</source>
          <target state="translated">Происходит при запросе отображения курсора.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve">
          <source>This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</source>
          <target state="translated">Это событие возникает для элемента каждый раз, что указатель мыши перемещается в новое положение, что означает, что может потребоваться изменить объекта курсора на новое место.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event for this class, so that QueryCursor is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы QueryCursor часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the QueryCursor event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию QueryCursor присоединяются к базовому объекту &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</source>
          <target state="translated">Курсор, который ссылается данное имя события не обязательно текстового курсора (которую иногда называют курсора).</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in <ph id="ph1">[!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)]</ph> programming.</source>
          <target state="translated">Вместо этого в данном контексте курсор является объект, который объявляет графическое отображение на экране, связанные с несколькими возможными устройствами ввода или концепциями в <ph id="ph1">[!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)]</ph> программирования.</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" extradata="MT">
          <source>That object is represented by the &lt;xref:System.Windows.Input.Cursor&gt; class in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">Этот объект представляется &lt;xref:System.Windows.Input.Cursor&gt;в класс <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.&lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> Система ввода позволяет изменять этот курсор, когда он представляет экранную позицию указателя мыши.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use predefined values from the &lt;xref:System.Windows.Input.Cursors&gt; enumeration, or you can declare a custom cursor as an image file.</source>
          <target state="translated">Можно использовать стандартные значения из &lt;xref:System.Windows.Input.Cursors&gt;перечисления, либо можно объявить пользовательский курсор в файл изображения.&lt;/xref:System.Windows.Input.Cursors&gt;</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Listening for the QueryCursor event is not an efficient technique for cursor management.</source>
          <target state="translated">Прослушивание события QueryCursor не является эффективным методика управления курсора.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, each element should define its own cursor behavior with &lt;xref:System.Windows.FrameworkContentElement.Cursor%2A&gt; and &lt;xref:System.Windows.FrameworkContentElement.ForceCursor%2A&gt;.</source>
          <target state="translated">Вместо этого каждый элемент должен определить свое поведение курсора, и &lt;xref:System.Windows.FrameworkContentElement.Cursor%2A&gt; &lt;xref:System.Windows.FrameworkContentElement.ForceCursor%2A&gt;.&lt;/xref:System.Windows.FrameworkContentElement.ForceCursor%2A&gt; &lt;/xref:System.Windows.FrameworkContentElement.Cursor%2A&gt;</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should only rely on QueryCursor if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</source>
          <target state="translated">Только следует полагаться на QueryCursor, если не используются базовые элементы уровня платформы WPF или в непредвиденных случаях когда определение работы курсоров, на основе каждого элемента не соответствует вашим потребностям.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on implementing cursor behavior in response to QueryCursor, see &lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;.</source>
          <target state="translated">Дополнительные сведения о реализации поведение курсора в ответ на QueryCursor см. в разделе &lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;.&lt;/xref:System.Windows.Input.QueryCursorEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_QueryCursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.QueryCursorEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;|      -   There is no defined corresponding tunneling event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_QueryCursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.QueryCursorEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;|      -Отсутствует соответствующее событие не определено туннелирования.&lt;/xref:System.Windows.Input.QueryCursorEventHandler&gt; &lt;/xref:System.Windows.UIElement.QueryCursorEvent&gt;</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnQueryCursor%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnQueryCursor%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnQueryCursor%2A&gt;</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.QueryCursor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.QueryCursor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve">
          <source>Raises a specific routed event.</source>
          <target state="translated">Вызывает определенное перенаправленное событие.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.RoutedEvent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be raised is identified within the <bpt id="p2">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance that is provided (as the &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt; property of that event data).</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.RoutedEvent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Вызываемого идентифицируется в <bpt id="p2">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> экземпляр, который предоставляется (как &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt;свойство данных этого события).&lt;/xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt;</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`e`</ph> parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because &lt;xref:System.Windows.RoutedEventArgs&gt; derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</source>
          <target state="translated"><ph id="ph1">`e`</ph> Параметр типизируется как общий базовый тип для всех данных маршрутизируемого события; тем не менее, данные о событии должны быть предоставлены как наиболее конкретный тип данных события, доступные для события, так как &lt;xref:System.Windows.RoutedEventArgs&gt;производные классы содержат определенные свойства данных, предназначенные для конкретного события, инициируемого.&lt;/xref:System.Windows.RoutedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.RoutedEventArgs&gt; is not just the state properties for the event; it also identifies which routed event to raise.</source>
          <target state="translated">&lt;xref:System.Windows.RoutedEventArgs&gt;не только свойства состояния события; Он также определяет какие перенаправленного события.&lt;/xref:System.Windows.RoutedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event-raising pattern and the routed event data both differ from <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> events and data classes, which typically just contain properties that are related to the event.</source>
          <target state="translated">Данный шаблон генерации событий и данные о событии и отличаться от <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> классы событий и данных, которые обычно содержат свойства, относящиеся к событию.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data and also identifies the event to raise.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные о событии, а также определяет события.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve">
          <source>Releases all captured touch devices from this element.</source>
          <target state="translated">Освобождает все полученные сенсорные устройства из этого элемента.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve">
          <source>Releases the mouse capture, if this element held the capture.</source>
          <target state="translated">Освобождает захват мыши, если элемент произвел захват.</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element did not hold the capture, calling this method has no effect.</source>
          <target state="translated">Если этот элемент не содержит записи, вызов этого метода не оказывает влияния.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider checking the value of &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt; before you call this method.</source>
          <target state="translated">Рассмотрите возможность проверки значения &lt;xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;перед вызовом этого метода.&lt;/xref:System.Windows.UIElement.IsMouseCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve">
          <source>Releases the stylus device capture, if this element held the capture.</source>
          <target state="translated">Освобождает перо, если элемент произвел захват.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this element did not hold the capture, calling this method has no effect.</source>
          <target state="translated">Если этот элемент не содержит записи, вызов этого метода не оказывает влияния.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider checking the value of &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt; before you call this method.</source>
          <target state="translated">Рассмотрите возможность проверки значения &lt;xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;перед вызовом этого метода.&lt;/xref:System.Windows.UIElement.IsStylusCaptured%2A&gt;</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve">
          <source>Attempts to release the specified touch device from this element.</source>
          <target state="translated">Предпринимает попытку освободить заданное сенсорное устройство из этого элемента.</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve">
          <source>The device to release.</source>
          <target state="translated">Устройство, чтобы освободить.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the touch device is released; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если устройство сенсорного ввода освободить; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;touchDevice&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;touchDevice&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve">
          <source>Removes the specified routed event handler from this element.</source>
          <target state="translated">Удаляет указанный обработчик маршрутизируемого события из этого элемента.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most common scenario for using this <ph id="ph1">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph> is when you implement the <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> level.</source>
          <target state="translated">Наиболее распространенный сценарий с помощью этого <ph id="ph1">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph> — при реализации <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> «программу-оболочку» события, связанный с пользовательских перенаправленных событий, особенно при реализовать логику «удалить» для обработчиков <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> уровне.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example that follows this remarks section illustrates this scenario.</source>
          <target state="translated">Это в следующем примере иллюстрируются сценарием примечания.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</source>
          <target state="translated">Вызов этого метода имеет смысл, если обработчики, зарегистрированные с критериями, соответствующими входным параметрам для вызова данного метода, отсутствуют.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</source>
          <target state="translated">Если более чем один обработчик присоединяется, соответствующих критериям, только первый обработчик в случае, когда обработчик хранилище будет удалено.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is consistent with <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> behavior of the <ph id="ph2">`-=`</ph> operator.</source>
          <target state="translated">Такое поведение согласуется с <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> поведение <ph id="ph2">`-=`</ph> оператор.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither <ph id="ph1">`routedEvent`</ph> nor <ph id="ph2">`handler`</ph> may be <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Ни <ph id="ph1">`routedEvent`</ph> , ни <ph id="ph2">`handler`</ph> может быть <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to provide either value as <ph id="ph1">`null`</ph> will raise an exception.</source>
          <target state="translated">Попытка присвоить значение, либо как <ph id="ph1">`null`</ph> вызовет исключение.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method ignores the <ph id="ph1">`handledEventsToo`</ph> parameter information, which is provided if the handler was first added with the &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; signature that enables handling of already-handled events.</source>
          <target state="translated">Этот метод игнорирует <ph id="ph1">`handledEventsToo`</ph> добавлены сведения о параметрах, который предоставляется, если обработчик был первоначально с &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;подпись, которая включает обработку событий уже обработана.&lt;/xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Either type of handler is removed.</source>
          <target state="translated">Любой из типов обработчика удаляется.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve">
          <source>The identifier of the routed event for which the handler is attached.</source>
          <target state="translated">Идентификатор перенаправленного события, к которому присоединен обработчик.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve">
          <source>The specific handler implementation to remove from the event handler collection on this element.</source>
          <target state="translated">Конкретная реализация обработчика для удаления из коллекции обработчиков событий для этого элемента.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve">
          <source>Gets (or sets, but see Remarks) the final render size of this element.</source>
          <target state="translated">Возвращает (или задает, см. раздел Примечания) окончательный размер этого элемента отрисовки.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Do not attempt to set this property, either in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> or in code, if using the WPF framework-level layout system.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>Настроек не пытайтесь задать это свойство, либо в <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> или в коде, если используется система макета уровня платформы WPF.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nearly all typical application scenarios will use this layout system.</source>
          <target state="translated">Почти все сценарии типичного приложения будут использовать эту систему макета.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system will not respect sizes set in the RenderSize property directly.</source>
          <target state="translated">Система макета не будут использовать размеры set в свойстве RenderSize напрямую.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RenderSize property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the &lt;xref:System.Windows.Documents.Adorner&gt; class.</source>
          <target state="translated">Свойство RenderSize объявлено для записи только для включения определенных мост вариантов, которые намеренно обойти типичное расположение протоколов, таких как поддержка &lt;xref:System.Windows.Documents.Adorner&gt;класса.&lt;/xref:System.Windows.Documents.Adorner&gt; уровня ядра WPF</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be used for checking the applicable render size within layout system overrides such as &lt;xref:System.Windows.UIElement.OnRender%2A&gt; or &lt;xref:System.Windows.UIElement.GetLayoutClip%2A&gt;.</source>
          <target state="translated">Это свойство может использоваться для проверки переопределяет размер отрисовки применимо в рамках системы макета, например &lt;xref:System.Windows.UIElement.OnRender%2A&gt;или &lt;xref:System.Windows.UIElement.GetLayoutClip%2A&gt;.&lt;/xref:System.Windows.UIElement.GetLayoutClip%2A&gt; &lt;/xref:System.Windows.UIElement.OnRender%2A&gt;</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT">
          <source>A more common scenario is handling the &lt;xref:System.Windows.FrameworkElement.SizeChanged&gt; event with the class handler override or the &lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt; event.</source>
          <target state="translated">Обработка распространенный сценарий &lt;xref:System.Windows.FrameworkElement.SizeChanged&gt;переопределить событие с обработчиком класс или &lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;событий.&lt;/xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt; &lt;/xref:System.Windows.FrameworkElement.SizeChanged&gt;</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_RenderSize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_RenderSize"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Использование текста XAML</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve">
          <source>The rendered size for this element.</source>
          <target state="translated">Отрисовываемый размер этого элемента.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve">
          <source>Gets or sets transform information that affects the rendering position of this element.</source>
          <target state="translated">Возвращает или задает информацию о преобразовании, которая влияет на позицию отрисовки данного элемента.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT">
          <source>A render transform does not regenerate layout size or render size information.</source>
          <target state="translated">Преобразование визуализации повторно создать размер структуры или не отображают сведения о размере.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Render transforms are typically intended for animating or applying a temporary effect to an element.</source>
          <target state="translated">Отображать преобразованиях обычно предназначены для анимации или применения временных эффектов к элементу.</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Например, элемент может масштабироваться при с фокусом ввода или наведении может флуктуаций при загрузке, чтобы привлечь внимание к этой части <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_RenderTransform"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.RenderTransformProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_RenderTransform"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.RenderTransformProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.RenderTransformProperty&gt;</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve">
          <source>Describes the specifics of the desired render transform.</source>
          <target state="translated">Описывает специфику желаемого преобразования визуализации.</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Transform.Identity%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Значение по умолчанию — <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Transform.Identity%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve">
          <source>Gets or sets the center point of any possible render transform declared by &lt;xref:System.Windows.UIElement.RenderTransform*&gt;, relative to the bounds of the element.</source>
          <target state="translated">Возвращает или задает центральную точку любого возможного преобразования отображения для объявления &lt;xref:System.Windows.UIElement.RenderTransform*&gt;, относительно границ элемента.&lt;/xref:System.Windows.UIElement.RenderTransform*&gt;</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT">
          <source>RenderTransformOrigin has a somewhat nonstandard use of the &lt;xref:System.Windows.Point&gt; structure value, in that the &lt;xref:System.Windows.Point&gt; does not represent an absolute location in a coordinate system.</source>
          <target state="translated">RenderTransformOrigin имеет несколько нестандартное использование &lt;xref:System.Windows.Point&gt;Структура значения, в том, что &lt;xref:System.Windows.Point&gt;не представляет абсолютное расположение, в системе координат.&lt;/xref:System.Windows.Point&gt; &lt;/xref:System.Windows.Point&gt;</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</source>
          <target state="translated">Вместо этого значения в диапазоне от 0 до 1, интерпретируются как коэффициент для диапазона текущего элемента в каждом осей x и y.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</source>
          <target state="translated">Например, (значение&amp;0;.5,0.5) вызовет преобразование при прорисовке центрирование по элементу, а (1,1) поместит преобразование при прорисовке в нижнем правом углу элемента.</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Double.NaN&gt; is not an accepted value.</source>
          <target state="translated">&lt;xref:System.Double.NaN&gt;не является приемлемым значением.&lt;/xref:System.Double.NaN&gt;</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</source>
          <target state="translated">Значения за 0 и 1, также являются допустимыми и приведет к более нестандартным эффектам преобразования.</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, if you set RenderTransformOrigin to be (5,5), and then apply a &lt;xref:System.Windows.Media.RotateTransform&gt;, the rotation point will be well outside the bounds of the element itself.</source>
          <target state="translated">Например при установке RenderTransformOrigin (5,5), и затем применить &lt;xref:System.Windows.Media.RotateTransform&gt;, точки вращения будет также вне границ элемента.&lt;/xref:System.Windows.Media.RotateTransform&gt;</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transform will spin your element around in a big circle that originates beyond bottom right.</source>
          <target state="translated">Преобразование будет вращать элемент по большому кругу, рассчитанная далеко внизу и справа.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</source>
          <target state="translated">Источник может быть где-либо внутри родительского элемента и возможно, это будет возможно из кадра или представления.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" extradata="MT">
          <source>Negative point values are similar, these will go beyond the top left bounds.</source>
          <target state="translated">Отрицательные значения точек похожи, они будут выходят за рамки верхней левой границы.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</source>
          <target state="translated">Визуализации преобразований, не влияют на макет и обычно используются для анимации или применения временных эффектов к элементу.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_RenderTransformOrigin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object RenderTransformOrigin="xOrigin, yOrigin"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_RenderTransformOrigin"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph2">```   &lt;object&gt;     &lt;object.RenderTransformOrigin&gt;       &lt;Point X=" xOrigin " Y=" yOrigin "/&gt;     &lt;/object.RenderTransformOrigin&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_RenderTransformOrigin"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>xOrigin<ept id="p4">*</ept>    The horizontal origin factor.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_RenderTransformOrigin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Использование атрибута XAML <ph id="ph1">```   &lt;object RenderTransformOrigin="xOrigin, yOrigin"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_RenderTransformOrigin"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## использование элемента свойства XAML <ph id="ph2">```   &lt;object&gt;     &lt;object.RenderTransformOrigin&gt;       &lt;Point X=" xOrigin " Y=" yOrigin "/&gt;     &lt;/object.RenderTransformOrigin&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_RenderTransformOrigin"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> ## значений XAML <bpt id="p4">*</bpt>xOrigin<ept id="p4">*</ept> Горизонтальный коэффициент источника.            </target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is typically given as a value between 0 and 1.</source>
          <target state="translated">Обычно задается как значение от 0 до 1.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks.</source>
          <target state="translated">См. заметки.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>yOrigin<ept id="p1">*</ept>    The vertical origin factor.</source>
          <target state="translated"><bpt id="p1">*</bpt>yOrigin<ept id="p1">*</ept> вертикальный коэффициент источника.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is typically given as a value between 0 and 1.</source>
          <target state="translated">Обычно задается как значение от 0 до 1.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks.</source>
          <target state="translated">См. заметки.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_RenderTransformOrigin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.RenderTransformOriginProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_RenderTransformOrigin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.RenderTransformOriginProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.RenderTransformOriginProperty&gt;</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve">
          <source>The value that declares the render transform.</source>
          <target state="translated">Значение, объявляющее преобразование при прорисовке.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve">
          <source>The default value is a <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with coordinates (0,0).</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> с координатами (0,0).</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.RenderTransformOrigin*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.RenderTransformOrigin*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.RenderTransformOrigin*&gt;</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.RenderTransform*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.RenderTransform*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.RenderTransform*&gt;</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.UIElement.CommandBindings*&gt; property on instances of this class.</source>
          <target state="translated">Возвращает, должны ли процессы сериализации сериализовать содержимое &lt;xref:System.Windows.UIElement.CommandBindings*&gt;Свойства для экземпляров этого класса.&lt;/xref:System.Windows.UIElement.CommandBindings*&gt;</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will return <ph id="ph1">`true`</ph> if &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt; is locally set.</source>
          <target state="translated">Будет возвращен <ph id="ph1">`true`</ph> Если &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt;установлено локально.&lt;/xref:System.Windows.UIElement.CommandBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt; property does not have a simple default value.</source>
          <target state="translated">Это <ph id="ph1">`ShouldSerialize`</ph> метод предоставляется, поскольку &lt;xref:System.Windows.UIElement.CommandBindings%2A&gt;свойство не имеет значения по умолчанию.&lt;/xref:System.Windows.UIElement.CommandBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">Этот метод указывает, изменилось ли свойство со значением по умолчанию.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer or developing your own control incorporating a &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Этот метод обычно вызывается при разработке либо конструктора, либо собственного элемента управления, включающего &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Default Values with the ShouldSerialize and Reset Methods<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>определение значения по умолчанию с ShouldSerialize и Reset методы<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.UIElement.CommandBindings*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если &lt;xref:System.Windows.UIElement.CommandBindings*&gt;значение свойства должно быть сериализованы; в противном случае — <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.UIElement.CommandBindings*&gt;</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.UIElement.InputBindings*&gt; property on instances of this class.</source>
          <target state="translated">Возвращает, должны ли процессы сериализации сериализовать содержимое &lt;xref:System.Windows.UIElement.InputBindings*&gt;Свойства для экземпляров этого класса.&lt;/xref:System.Windows.UIElement.InputBindings*&gt;</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will return <ph id="ph1">`true`</ph> if &lt;xref:System.Windows.UIElement.InputBindings%2A&gt; is locally set.</source>
          <target state="translated">Будет возвращен <ph id="ph1">`true`</ph> Если &lt;xref:System.Windows.UIElement.InputBindings%2A&gt;установлено локально.&lt;/xref:System.Windows.UIElement.InputBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.UIElement.InputBindings%2A&gt; property does not have a simple default value.</source>
          <target state="translated">Это <ph id="ph1">`ShouldSerialize`</ph> метод предоставляется, поскольку &lt;xref:System.Windows.UIElement.InputBindings%2A&gt;свойство не имеет значения по умолчанию.&lt;/xref:System.Windows.UIElement.InputBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">Этот метод указывает, изменилось ли свойство со значением по умолчанию.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically invoke this method if you are either developing a designer or developing your own control incorporating a &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">Этот метод обычно вызывается при разработке либо конструктора, либо собственного элемента управления, включающего &lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Default Values with the ShouldSerialize and Reset Methods<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>определение значения по умолчанию с ShouldSerialize и Reset методы<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.UIElement.InputBindings*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если &lt;xref:System.Windows.UIElement.InputBindings*&gt;значение свойства должно быть сериализованы; в противном случае — <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.UIElement.InputBindings*&gt;</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</source>
          <target state="translated">Возвращает или задает значение, определяющее ли отображение этого элемента должны использоваться параметры пикселей для определенного устройства при отрисовке.</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set this property to <ph id="ph1">`true`</ph> on your root element to enable pixel snap rendering throughout the UI.</source>
          <target state="translated">Это свойство можно задать <ph id="ph1">`true`</ph> в корневом элементе, чтобы включить пикселей привязать визуализации на протяжении пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT">
          <source>For devices operating at greater than 96 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph>, pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</source>
          <target state="translated">Для устройств, работающих с более чем 96 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph>, пикселей привязать визуализации можно свести к минимуму сглаживания visual артефактов вблизи сплошных линий одним.</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inherited by &lt;xref:System.Windows.FrameworkElement&gt; or any possible derived classes, &lt;xref:System.Windows.FrameworkElement&gt; overrides the metadata for this dependency property to set the &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; metadata property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Если наследуемые &lt;xref:System.Windows.FrameworkElement&gt;или какой-либо возможной производные классы, &lt;xref:System.Windows.FrameworkElement&gt;переопределяет метаданные для этого свойства зависимостей задать &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;Свойства метаданных для <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" extradata="MT">
          <source>What this achieves is that only the outermost element in a subtree needs to specify SnapsToDevicePixels as <ph id="ph1">`true`</ph>, and all child elements of that subtree will then report SnapsToDevicePixels as <ph id="ph2">`true`</ph> and will have the SnapsToDevicePixels visual effect.</source>
          <target state="translated">Это достигается является необходимость указать SnapsToDevicePixels как внешнего элемента в поддереве <ph id="ph1">`true`</ph>, так и все дочерние элементы элемента поддерево будет SnapsToDevicePixels как <ph id="ph2">`true`</ph> и оказывает воздействия visual SnapsToDevicePixels.</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_SnapsToDevicePixels"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.SnapsToDevicePixelsProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_SnapsToDevicePixels"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.SnapsToDevicePixelsProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.SnapsToDevicePixelsProperty&gt;</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element should render in accordance to device pixels; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если элемент должен отрисовываться соответствии с пикселями устройства; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve">
          <source>The default as declared on <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию, объявленное в <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> — <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.SnapsToDevicePixels*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.SnapsToDevicePixels*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.SnapsToDevicePixels*&gt;</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus button is pressed while the pointer is over this element.</source>
          <target state="translated">Происходит при нажатии кнопки пера в тот момент, когда указатель находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event for this class, so that StylusButtonDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusButtonDown часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusButtonDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusButtonDown присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusButtonDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusButtonDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusButtonDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusButtonDownEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewStylusButtonDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusButtonDown&gt; &lt;/xref:System.Windows.Input.StylusButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusButtonDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusButtonDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnStylusButtonDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusButtonDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus button is released while the pointer is over this element.</source>
          <target state="translated">Происходит при отпускании кнопки пера, когда указатель находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event for this class, so that StylusButtonUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusButtonUp часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusButtonUp event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusButtonUp присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusButtonUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusButtonUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusButtonUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusButtonUpEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewStylusButtonUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusButtonUp&gt; &lt;/xref:System.Windows.Input.StylusButtonEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusButtonUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusButtonUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnStylusButtonUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusButtonUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus touches the digitizer while the stylus is over this element.</source>
          <target state="translated">Происходит, когда перо касается дигитайзера, когда перо находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event for this class, so that StylusDown is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusDown часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusDown присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusDownEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewStylusDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusDown&gt; &lt;/xref:System.Windows.Input.StylusDownEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnStylusDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus enters the bounds of this element.</source>
          <target state="translated">Происходит, когда перо попадает внутрь границ данного элемента.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT">
          <source>StylusEnter is a  that uses the direct event handling routing strategy.</source>
          <target state="translated">StylusEnter: использует прямой обработки стратегия маршрутизации события.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</source>
          <target state="translated">Прямые перенаправленные события не вызываются по маршруту; Вместо этого они обрабатываются в том же элементе где они возникли.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, they do enable other aspects of routed event behavior, such as event triggers in styles.</source>
          <target state="translated">Тем не менее они включают другие аспекты поведения маршрутизируемых событий, например триггеры событий в стилях.</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although StylusEnter tracks when the stylus enters the bounds of an element, this event more literally reports that the &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt; property value has changed from <ph id="ph1">`false`</ph> to <ph id="ph2">`true`</ph> on this element.</source>
          <target state="translated">StylusEnter отслеживает, когда перо попадает внутрь границ элемента, это событие более буквально о том, что &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;значение свойства было изменено с <ph id="ph1">`false`</ph> для <ph id="ph2">`true`</ph> для этого элемента.&lt;/xref:System.Windows.UIElement.IsStylusOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event for this class, so that StylusEnter is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusEnter часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusEnter event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusEnter присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusEnterEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnStylusEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusEnterEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnStylusEnter%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusEnter%2A&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus moves over an element without actually touching the digitizer.</source>
          <target state="translated">Происходит при движении пера над элементом без касания дигитайзера.</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event for this class, so that StylusInAirMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusInAirMove часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusInAirMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, подключенные к событие StylusInAirMove подключены к основному &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusInAirMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusInAirMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusInAirMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusInAirMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusInAirMoveEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewStylusInAirMove&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusInAirMove&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusInAirMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusInAirMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnStylusInAirMove%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusInAirMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInAirMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInAirMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</source>
          <target state="translated">Происходит, когда перо находится достаточно близко от дигитайзера, чтобы быть обнаруженным, находясь над данным элементом.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event for this class, so that StylusInRange is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusInRange часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusInRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusInRange присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusInRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusInRangeEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusInRange&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusInRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusInRangeEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewStylusInRange&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusInRange&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusInRangeEvent&gt;</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusInRange%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnStylusInRange%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusInRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus leaves the bounds of the element.</source>
          <target state="translated">Происходит, когда перо покидает границы элемента.</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" extradata="MT">
          <source>StylusLeave is a  that uses the direct event handling routing strategy.</source>
          <target state="translated">StylusLeave: использует прямой обработки стратегия маршрутизации события.</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT">
          <source>Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</source>
          <target state="translated">Прямые перенаправленные события не вызываются по маршруту; Вместо этого они обрабатываются в том же элементе где они возникли.</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, they do enable other aspects of routed event behavior, such as event triggers in styles.</source>
          <target state="translated">Тем не менее они включают другие аспекты поведения маршрутизируемых событий, например триггеры событий в стилях.</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although StylusLeave tracks when the stylus leaves the bounds of an element, this event more literally reports that the &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt; property value has changed from <ph id="ph1">`true`</ph> to <ph id="ph2">`false`</ph> on this element.</source>
          <target state="translated">StylusLeave отслеживает, когда перо покидает границы элемента, это событие более буквально о том, что &lt;xref:System.Windows.UIElement.IsStylusOver%2A&gt;значение свойства было изменено с <ph id="ph1">`true`</ph> для <ph id="ph2">`false`</ph> для этого элемента.&lt;/xref:System.Windows.UIElement.IsStylusOver%2A&gt;</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event for this class, so that StylusLeave is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusLeave часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusLeave event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusLeave присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusLeaveEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement.OnStylusLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusLeaveEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Переопределить &lt;xref:System.Windows.UIElement.OnStylusLeave%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusLeave%2A&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus moves over this element.</source>
          <target state="translated">Происходит при движении пера над данным элементом.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve">
          <source>The stylus must move while on the digitizer to raise this event.</source>
          <target state="translated">Перо должно перемещаться по дигитайзеру для порождения этого события.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInAirMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is raised instead.</source>
          <target state="translated">В противном случае <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusInAirMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> вызывается событие.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event for this class, so that StylusMove is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusMove часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusMove присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusMoveEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewStylusMove&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusMove&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnStylusMove%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve">
          <source>Occurs when the stylus is too far from the digitizer to be detected, while over this element.</source>
          <target state="translated">Происходит, когда перо находится слишком далеко от дигитайзера для обнаружения, находясь над данным элементом.</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event for this class, so that StylusOutOfRange is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusOutOfRange часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusOutOfRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusOutOfRange присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusOutOfRangeEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusOutOfRange&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusOutOfRangeEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewStylusOutOfRange&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusOutOfRange&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusOutOfRangeEvent&gt;</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusOutOfRange%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnStylusOutOfRange%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusOutOfRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusOutOfRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusOutOfRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve">
          <source>Gets a collection of all stylus plug-in (customization) objects associated with this element.</source>
          <target state="translated">Возвращает коллекцию всех объектов пера подключаемого модуля (настройки), связанные с данным элементом.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a control that populates this collection is &lt;xref:System.Windows.Controls.InkCanvas&gt;.</source>
          <target state="translated">Пример элемента управления, который заполняет этой коллекции является &lt;xref:System.Windows.Controls.InkCanvas&gt;.&lt;/xref:System.Windows.Controls.InkCanvas&gt;</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.InkCanvas&gt; adds the &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt; as a collection item, which enables the &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt; to interact with stylus input and produce the unique rendering in response to stylus driven events.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.InkCanvas&gt;Добавляет &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;как элемент коллекции, который позволяет &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;для взаимодействия с ввод от пера и создания уникальных визуализации в ответ на управляемых событий пера.&lt;/xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt; &lt;/xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;&lt;/xref:System.Windows.Controls.InkCanvas&gt;</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on creating custom plug-ins that can receive and interpret stylus input, see <bpt id="p1">[</bpt>Intercepting Input from the Stylus<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Сведения о создании пользовательских подключаемых модулей, который может получать и интерпретировать ввод от пера, см. в разделе <bpt id="p1">[</bpt>от пера<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve">
          <source>The collection of stylus plug-ins, as a specialized collection.</source>
          <target state="translated">Коллекция подключаемые модули пера, как специализированная коллекция.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve">
          <source>Occurs when a user performs one of several stylus gestures.</source>
          <target state="translated">Происходит при использовании пользователем одного из жестов пером.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about stylus gestures, see &lt;xref:System.Windows.Input.SystemGesture&gt;.</source>
          <target state="translated">Дополнительные сведения о жестах пера см. в разделе &lt;xref:System.Windows.Input.SystemGesture&gt;.&lt;/xref:System.Windows.Input.SystemGesture&gt;</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event for this class, so that StylusSystemGesture is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusSystemGesture часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusSystemGesture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusSystemGesture присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusSystemGestureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusSystemGesture&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusSystemGestureEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewStylusSystemGesture&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusSystemGesture&gt; &lt;/xref:System.Windows.Input.StylusSystemGestureEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusSystemGestureEvent&gt;</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusSystemGesture%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnStylusSystemGesture%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusSystemGesture%2A&gt;</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusSystemGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusSystemGesture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve">
          <source>Occurs when the user raises the stylus off the digitizer while it is over this element.</source>
          <target state="translated">Происходит, когда пользователь отрывает перо от планшета, когда оно находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event for this class, so that StylusUp is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы StylusUp часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the StylusUp event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию StylusUp присоединяются к базовому объекту &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" extradata="MT">
          <source>Touch, mouse, and stylus input exist in a particular relationship.</source>
          <target state="translated">Сенсорный ввод, мышь и ввод от пера существует определенная связь.</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_StylusUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.StylusUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewStylusUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_StylusUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.StylusUpEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewStylusUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewStylusUp&gt; &lt;/xref:System.Windows.Input.StylusEventHandler&gt; &lt;/xref:System.Windows.UIElement.StylusUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnStylusUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnStylusUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnStylusUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.StylusUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve">
          <source>Occurs when this element gets text in a device-independent manner.</source>
          <target state="translated">Происходит при получении этим элементом текста аппаратно независимым способом.</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This event might already be marked as handled by the internal implementations of composited controls.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>Настроек это событие уже может быть помечено как обработанное внутренними реализациями составных элементов управления.</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remark below.</source>
          <target state="translated">См. примечания ниже.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TextInput event may already be marked as handled by the internal implementations of composited controls.</source>
          <target state="translated">Событие TextInput уже могут быть помечены как обработанное внутренними реализациями составных элементов управления.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a &lt;xref:System.Windows.Controls.TextBox&gt; is a composited control where the TextInput event is already marked as handled; within its compositing.</source>
          <target state="translated">Например &lt;xref:System.Windows.Controls.TextBox&gt;является составной элемент управления, где TextInput событие уже помечено как обработанное; внутри элемента.&lt;/xref:System.Windows.Controls.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</source>
          <target state="translated">Элементы управления этого, так как он должен определять некоторые виды ввода, например клавиши со стрелками, как имеющие специальное значение для этого элемента управления.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use &lt;xref:System.Windows.UIElement.PreviewTextInput&gt; as the event where you attach handlers for text input, you may receive better results.</source>
          <target state="translated">Если вы используете &lt;xref:System.Windows.UIElement.PreviewTextInput&gt;как событий, где присоединение обработчиков для ввода текста, может получать более точные результаты.&lt;/xref:System.Windows.UIElement.PreviewTextInput&gt;</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" extradata="MT">
          <source>This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</source>
          <target state="translated">Этот прием позволяет обойти большинство случаях данное событие уже помечено как обработанное и предотвращает получение событий на маршруте события обработчиком композиции элемента управления.</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TextInput event allows a component or application to listen for text input in a device-independent manner.</source>
          <target state="translated">Событие TextInput позволяет компонента или приложения для прослушивания ввода текста в аппаратно независимым способом.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT">
          <source>The keyboard is the primary means of TextInput, but speech, handwriting, and other input devices can also raise TextInput.</source>
          <target state="translated">Клавиатура является основным средством TextInput, но речи, рукописного текста и других устройств ввода также могут вызывать TextInput.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</source>
          <target state="translated">Из-за сочетания клавиш — клавиатуры по умолчанию или редакторам методов ввода, несколько событий клавиш могут сгенерировать только одно событие ввода текста.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event creates an alias for the &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event for this class, so that TextInput is part of the class members list when &lt;xref:System.Windows.UIElement&gt; is inherited as a base element.</source>
          <target state="translated">Это событие создает псевдоним &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt;вложенное событие для этого класса, таким образом, чтобы TextInput часть класса список членов, когда &lt;xref:System.Windows.UIElement&gt;наследуется от базового элемента.&lt;/xref:System.Windows.UIElement&gt; &lt;/xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handlers that are attached to the TextInput event are attached to the underlying &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event and receive the same event data instance.</source>
          <target state="translated">Обработчики событий, присоединенные к событию TextInput присоединяются к базовому объекту &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt;вложенное событие и получить тот же экземпляр данных события.&lt;/xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TextInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TextInputEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewTextInput&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TextInput"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.TextInputEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewTextInput&gt;.&lt;/xref:System.Windows.UIElement.PreviewTextInput&gt; &lt;/xref:System.Windows.Input.TextCompositionEventHandler&gt; &lt;/xref:System.Windows.UIElement.TextInputEvent&gt;</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnTextInput%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnTextInput%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnTextInput%2A&gt;</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TextInput"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.TextInput"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Идентификаторы перенаправленных событий создаются при их регистрации.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Эти идентификаторы можно использовать для добавления обработчиков классов.</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">Дополнительные сведения о регистрации перенаправленных событий см. в разделе &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">Дополнительные сведения об использовании идентификаторов перенаправленных событий для добавления обработчиков класса см. в разделе &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve">
          <source>Occurs when a finger touches the screen while the finger is over this element.</source>
          <target state="translated">Происходит при касании пальцем экрана, когда палец находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt; and TouchDown events do not occur until a finger touches the screen and moves.</source>
          <target state="translated">По умолчанию &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;и TouchDown событий не выполняется до пальцем экрана касается и перемещает.&lt;/xref:System.Windows.UIElement.PreviewTouchDown&gt;</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a &lt;xref:System.Windows.Input.Stylus&gt;.</source>
          <target state="translated">Пальца на экране необходимо удерживать нажатой его без его перемещения нажатие и удерживайте поведение &lt;xref:System.Windows.Input.Stylus&gt;.&lt;/xref:System.Windows.Input.Stylus&gt;</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" extradata="MT">
          <source>The press and hold behavior is equivalent to a mouse right-click.</source>
          <target state="translated">Поведение нажатия и удерживания соответствует щелчку правой кнопкой мыши.</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cause the &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt; and TouchDown events to occur as soon as a finger touches the screen, set the &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; attached property to <ph id="ph1">`false`</ph> for this element.</source>
          <target state="translated">Чтобы вызвать &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;и события TouchDown к как можно скорее касании пальцем экрана, установите &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt;присоединенного свойства для <ph id="ph1">`false`</ph> для этого элемента.&lt;/xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.UIElement.PreviewTouchDown&gt;</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchDown"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.TouchDownEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewTouchDown&gt;.&lt;/xref:System.Windows.UIElement.PreviewTouchDown&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchDownEvent&gt;</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnTouchDown%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnTouchDown%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnTouchDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve">
          <source>Occurs when a touch moves from outside to inside the bounds of this element.</source>
          <target state="translated">Происходит при перемещении касания внутрь границ данного элемента.</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is always raised, whether or not the touch device is captured to this element.</source>
          <target state="translated">Это событие всегда возникает, независимо от захвата сенсорного устройства данным элементом.</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchEnterEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement.OnTouchEnter%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchEnter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.TouchEnterEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Переопределить &lt;xref:System.Windows.UIElement.OnTouchEnter%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnTouchEnter%2A&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchEnterEvent&gt;</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchEnter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchEnter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve">
          <source>Gets all touch devices that are captured to this element.</source>
          <target state="translated">Получает все сенсорные устройства, переданные в этот элемент.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve">
          <source>An enumeration of <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are captured to this element.</source>
          <target state="translated">Перечисление <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекты, переданные в этот элемент.</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve">
          <source>Gets all touch devices that are captured to this element or any child elements in its visual tree.</source>
          <target state="translated">Получает все сенсорные устройства, переданные в этот элемент или всех дочерних элементов в визуальном дереве.</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve">
          <source>An enumeration of <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are captured to this element or any child elements in its visual tree.</source>
          <target state="translated">Перечисление <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекты, переданные в этот элемент или всех дочерних элементов в визуальном дереве.</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve">
          <source>Gets all touch devices that are over this element.</source>
          <target state="translated">Получает все сенсорные устройства, находящиеся над данным элементом.</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve">
          <source>An enumeration of <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are over this element.</source>
          <target state="translated">Перечисление <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекты, которые являются над данным элементом.</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve">
          <source>Gets all touch devices that are over this element or any child elements in its visual tree.</source>
          <target state="translated">Получает все сенсорные устройства, находящиеся над данным элементом или всех дочерних элементов в визуальном дереве.</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve">
          <source>An enumeration of <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are over this element or any child elements in its visual tree.</source>
          <target state="translated">Перечисление <bpt id="p1">&lt;xref href="System.Windows.Input.TouchDevice"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекты, которые являются данного элемента или всех дочерних элементов в визуальном дереве.</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve">
          <source>Occurs when a touch moves from inside to outside the bounds of this element.</source>
          <target state="translated">Происходит при перемещении касания за границы данного элемента.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is always raised, whether or not the touch device is captured to this element.</source>
          <target state="translated">Это событие всегда возникает, независимо от захвата сенсорного устройства данным элементом.</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchLeaveEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement.OnTouchLeave%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchLeave"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.TouchLeaveEvent&gt;|   | Стратегия маршрутизации | Прямой |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Переопределить &lt;xref:System.Windows.UIElement.OnTouchLeave%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnTouchLeave%2A&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchLeaveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve">
          <source>Occurs when a finger moves on the screen while the finger is over this element.</source>
          <target state="translated">Происходит при перемещении пальца на экране, когда палец находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewTouchMove&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchMove"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.TouchMoveEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewTouchMove&gt;.&lt;/xref:System.Windows.UIElement.PreviewTouchMove&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchMoveEvent&gt;</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnTouchMove%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnTouchMove%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnTouchMove%2A&gt;</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve">
          <source>Occurs when a finger is raised off of the screen while the finger is over this element.</source>
          <target state="translated">Происходит, когда палец отрывается экрана, когда палец находится над данным элементом.</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_TouchUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.TouchUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement.PreviewTouchUp&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_TouchUp"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Направлено сведения о событии ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.TouchUpEvent&gt;|   | Стратегия маршрутизации | Передача вверх |   | Делегат | &lt;xref:System.EventHandler%601&gt;типа &lt;xref:System.Windows.Input.TouchEventArgs&gt;. |      -Соответствующие туннелирования событие является &lt;xref:System.Windows.UIElement.PreviewTouchUp&gt;.&lt;/xref:System.Windows.UIElement.PreviewTouchUp&gt; &lt;/xref:System.Windows.Input.TouchEventArgs&gt; &lt;/xref:System.EventHandler%601&gt; &lt;/xref:System.Windows.UIElement.TouchUpEvent&gt;</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Override &lt;xref:System.Windows.UIElement.OnTouchUp%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated">-Переопределить &lt;xref:System.Windows.UIElement.OnTouchUp%2A&gt;реализации класса обработчик данного события в производных классах.&lt;/xref:System.Windows.UIElement.OnTouchUp%2A&gt;</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">Идентифицирует <bpt id="p1">&lt;xref href="System.Windows.UIElement.TouchUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> перенаправленного события.</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve">
          <source>Translates a point relative to this element to coordinates that are relative to the specified element.</source>
          <target state="translated">Преобразует точку относительно данного элемента в координаты относительно указанного элемента.</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing <ph id="ph1">`null`</ph> for <ph id="ph2">`relativeTo`</ph> is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</source>
          <target state="translated">Передача <ph id="ph1">`null`</ph> для <ph id="ph2">`relativeTo`</ph> разрешена и указывает, что координаты должен указываться относительно корневого элемента в логическом дереве, к которому принадлежит этот элемент.</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used for translating hit test point values.</source>
          <target state="translated">Этот метод используется для преобразования попаданий тестовые точки значения.</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</source>
          <target state="translated">Вызов этого метода имеет значение, главным образом, при разработке элемента управления и необходимо обработать ввод на более низком уровне.</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</source>
          <target state="translated">Если вы используете существующие элементы управления, можно считать, что готовые элементы будут сообщать правильно преобразованные результаты проверки нажатия.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve">
          <source>The point value, as relative to this element.</source>
          <target state="translated">Значение точки относительно данного элемента.</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve">
          <source>The element to translate the given point into.</source>
          <target state="translated">Элемент, который преобразуется данная точка в.</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve">
          <source>A point value, now relative to the target element rather than this source element.</source>
          <target state="translated">Значение точки, теперь относительно целевого элемента, а не исходного.</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve">
          <source>Gets or sets the unique identifier (for localization) for this element.</source>
          <target state="translated">Возвращает или задает уникальный идентификатор (в целях локализации) для этого элемента.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" extradata="MT">
          <source>Used by designers to get the <ph id="ph1">`x:Uid`</ph> value (see <bpt id="p1">[</bpt>WPF Globalization and Localization Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information).</source>
          <target state="translated">Используемые конструкторы для получения <ph id="ph1">`x:Uid`</ph> значение (в разделе <bpt id="p1">[</bpt>Общие сведения о локализации и глобализации WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> для получения дополнительной информации).</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowWindowStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.UidProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_WindowWindowStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.UidProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.UidProperty&gt;</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve">
          <source>A string that is the unique identifier for this element.</source>
          <target state="translated">Строка, представляющая уникальный идентификатор для этого элемента.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Uid*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.Uid*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.Uid*&gt;</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve">
          <source>Ensures that all visual child elements of this element are properly updated for layout.</source>
          <target state="translated">Обеспечивает правильно обновление всех визуальных дочерних элементов данного элемента для макета.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call this method, elements with &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt;<ph id="ph1">`false`</ph> or &lt;xref:System.Windows.UIElement.IsArrangeValid%2A&gt;<ph id="ph2">`false`</ph> will call element-specific &lt;xref:System.Windows.UIElement.MeasureCore%2A&gt; and &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; methods, which forces layout update, and all computed sizes will be validated.</source>
          <target state="translated">При вызове этого метода, элементы с &lt;xref:System.Windows.UIElement.IsMeasureValid%2A&gt; <ph id="ph1">`false`</ph> или &lt;xref:System.Windows.UIElement.IsArrangeValid%2A&gt; <ph id="ph2">`false`</ph> вызовет конкретного элемента &lt;xref:System.Windows.UIElement.MeasureCore%2A&gt;и &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;методы, что заставляет макета обновления и будут проверены все размеры вычисляемый.&lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt; &lt;/xref:System.Windows.UIElement.MeasureCore%2A&gt; &lt;/xref:System.Windows.UIElement.IsArrangeValid%2A&gt;&lt;/xref:System.Windows.UIElement.IsMeasureValid%2A&gt;</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</source>
          <target state="translated">Вызов этого метода имеет смысл, если макет не содержит изменений или имеют недопустимое состояние упорядочение ни измерения макета.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if layout is invalid in either respect, the UpdateLayout call will redo the entire layout.</source>
          <target state="translated">Тем не менее если в отношении либо Недопустимый макет, вызов UpdateLayout отменят всего макета.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should avoid calling UpdateLayout after each incremental and minor change in the element tree.</source>
          <target state="translated">Поэтому следует избегать вызова UpdateLayout после каждого изменения добавочного, так и дополнительный номер в дереве элементов.</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT">
          <source>The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</source>
          <target state="translated">Система макета выполнит макета элемента с отложенным способом, используя алгоритм балансирования производительности и денежных единиц и взвешенной стратегией отложить изменения корней, пока все дочерние элементы являются допустимыми.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should only call UpdateLayout if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</source>
          <target state="translated">UpdateLayout следует вызывать только в том случае, если абсолютной необходимости в обновлении размеров и позиций, и только после того, что вы являетесь, что выполнены все изменения свойств, что элемент управления, которые может повлиять на макет.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> visibility of this element.</source>
          <target state="translated">Возвращает или задает <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> видимость данного элемента.</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve">
          <source>This is a dependency property.</source>
          <target state="translated">Это свойство зависимостей.</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property affects the value of &lt;xref:System.Windows.UIElement.IsVisible%2A&gt;, which in turn may raise the &lt;xref:System.Windows.UIElement.IsVisibleChanged&gt; event.</source>
          <target state="translated">Задание этого свойства влияет на значение &lt;xref:System.Windows.UIElement.IsVisible%2A&gt;, который в свою очередь может вызвать &lt;xref:System.Windows.UIElement.IsVisibleChanged&gt;событий.&lt;/xref:System.Windows.UIElement.IsVisibleChanged&gt; &lt;/xref:System.Windows.UIElement.IsVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, &lt;xref:System.Windows.UIElement.IsVisible%2A&gt; has other factors that influence it, for instance the visibility settings of parents that contain it.</source>
          <target state="translated">Однако &lt;xref:System.Windows.UIElement.IsVisible%2A&gt;есть другие факторы, которые влияют на его, например параметры видимости родительских элементов, содержащих его.&lt;/xref:System.Windows.UIElement.IsVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements where Visibility is not &lt;xref:System.Windows.Visibility&gt; do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</source>
          <target state="translated">Элементы, которых не видимость &lt;xref:System.Windows.Visibility&gt;не участвуют в входного события (или командах), не влияют на этапах либо измерения или компоновки макета, не входящие в последовательность перехода и не будут включаться в проверки нажатия.&lt;/xref:System.Windows.Visibility&gt;</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inherited by &lt;xref:System.Windows.Window&gt; or its derived classes, &lt;xref:System.Windows.Window&gt; redefines the default value of this property to be &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">Если наследуемые &lt;xref:System.Windows.Window&gt;или его производные классы &lt;xref:System.Windows.Window&gt;переопределяет значение по умолчанию для этого свойства значение &lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" extradata="MT">
          <source>This has the effect of not running the Measure pass of layout on an initially created &lt;xref:System.Windows.Window&gt;, and &lt;xref:System.Windows.UIElement.RenderSize%2A&gt; returns (0,0).</source>
          <target state="translated">Действует, не работающих передачу показателей разметки на первоначально созданный &lt;xref:System.Windows.Window&gt;, и &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;возвращает (0,0).&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">Дополнительные сведения см. в разделе &lt;xref:System.Windows.Window&gt;.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.Primitives.Popup&gt; also redefines the default value to be &lt;xref:System.Windows.Visibility&gt;, with similar resulting behavior for &lt;xref:System.Windows.Controls.Primitives.Popup&gt; and its derived classes.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;переопределяет значение по умолчанию, необходимо также &lt;xref:System.Windows.Visibility&gt;, с похожим поведением, полученный для &lt;xref:System.Windows.Controls.Primitives.Popup&gt;и его производные классы.&lt;/xref:System.Windows.Controls.Primitives.Popup&gt; &lt;/xref:System.Windows.Visibility&gt;&lt;/xref:System.Windows.Controls.Primitives.Popup&gt;</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Visibility"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement.VisibilityProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Visibility"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## Сведения о свойстве зависимостей ^ ^ ^   |-|-|   | Поле идентификатора | &lt;xref:System.Windows.UIElement.VisibilityProperty&gt;|   | Значение свойства метаданных <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.UIElement.VisibilityProperty&gt;</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
          <target state="translated">Значение перечисления.</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Visibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref href="System.Windows.Visibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.UIElement.Visibility*&gt; dependency property.</source>
          <target state="translated">Идентифицирует &lt;xref:System.Windows.UIElement.Visibility*&gt;свойство зависимостей.&lt;/xref:System.Windows.UIElement.Visibility*&gt;</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>