<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6932b2e3121c971bbf3626d444598d3e69d16db1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.CodeDomSerializerBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">caab9cbedb2dd5a9725295d98c9a70543c58d4cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">919911bbb75cd038efaf38a3e35e1b29b611f214</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class for <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">Предоставляет базовый класс для <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> классы.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CodeDomSerializerBase class is used as a shared base between the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt; and &lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt; classes.</source>
          <target state="translated">Класс CodeDomSerializerBase используется в качестве общей базы между &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;и &lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt;классы.&lt;/xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt; &lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Public &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt; classes derive from the CodeDomSerializerBase class.</source>
          <target state="translated">Открытые &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;классы являются производными от класса CodeDomSerializerBase.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each public class defines its own public API.</source>
          <target state="translated">Каждый открытый класс определяет собственный открытый API.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CodeDomSerializerBase class defines no public API, but does offer a multitude of utility methods that can be used to aid the serialization process.</source>
          <target state="translated">Класс CodeDomSerializerBase определяет нет открытого API, но предлагает множество служебных методов, которые можно использовать для облегчения процесса сериализации.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Deserializes the given expression into an in-memory object.</source>
          <target state="translated">Выполняет десериализацию заданного выражения в объект в памяти.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a helper method that derived classes can call to deserialize an expression.</source>
          <target state="translated">Это вспомогательный метод, который производные классы могут вызывать для десериализации выражения.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>It deserializes the statement by interpreting and executing the CodeDOM expression specified by the <ph id="ph1">`expression`</ph> parameter, and then returns the results.</source>
          <target state="translated">Он выполняет десериализацию оператора путем обработки и выполнения выражения CodeDOM, заданного атрибутом <ph id="ph1">`expression`</ph> параметра, а затем возвращает результаты.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object needs to be created as a result of this expression, it will be given the name specified by the <ph id="ph1">`name`</ph> parameter.</source>
          <target state="translated">Если объект должен быть создан в результате этого выражения, он получит имя, указанное в <ph id="ph1">`name`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name can be <ph id="ph1">`null`</ph> if there is no need to name the object.</source>
          <target state="translated">Имя может быть <ph id="ph1">`null`</ph> , если нет необходимости имя объекта.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes how specific expressions are handled.</source>
          <target state="translated">В следующей таблице описаны конкретных выражения обрабатываются.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Expression|Behavior|   |----------------|--------------|   |&lt;xref:System.CodeDom.CodeThisReferenceExpression&gt;|This expression represents <ph id="ph1">`this`</ph> or <ph id="ph2">`Me`</ph>.</source>
          <target state="translated">| Выражение | Поведение |   |----------------|--------------|   | &lt;xref:System.CodeDom.CodeThisReferenceExpression&gt;| Это выражение представляет <ph id="ph1">`this`</ph> или <ph id="ph2">`Me`</ph>.&lt;/xref:System.CodeDom.CodeThisReferenceExpression&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To locate the object that is associated with this expression, the DeserializeExpression method will look in the context stack for a &lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;.</source>
          <target state="translated">Чтобы найти объект, связанный с этого выражения, метод DeserializeExpression будет выглядеть в стек контекстов для &lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.RootContext&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This object contains the root object of the graph and the expression that represents it.</source>
          <target state="translated">Этот объект содержит корневой объект графа и выражение, которое он представляет.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object is present and the expression matches, the root object will be returned.</source>
          <target state="translated">Если объект существует, а выражение совпадает, возвращается корневой объект.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>An error is reported if an instance cannot be located.|   |&lt;xref:System.CodeDom.CodeFieldReferenceExpression&gt;|If the target of the field reference evaluates to the root object, the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt; method of the manager parameter will be used to retrieve the object instance based on name.</source>
          <target state="translated">Сообщено об ошибке, если экземпляр не найден. |   | &lt;xref:System.CodeDom.CodeFieldReferenceExpression&gt;| Если целевой ссылки на это поле имеет значение корневого объекта &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;метод параметра manager будет использоваться для получения экземпляра объекта, на основе имени.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt; &lt;/xref:System.CodeDom.CodeFieldReferenceExpression&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, standard reflection is used against the target object to locate the requested field.</source>
          <target state="translated">В противном случае — стандартное отражение используется для поиска запрошенного поля с целевым объектом.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>An error is reported if the field cannot be located.|   |&lt;xref:System.CodeDom.CodeVariableReferenceExpression&gt;|The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt; method of the <ph id="ph1">`manager`</ph> parameter is used to locate the instance representing the given variable name.</source>
          <target state="translated">Сообщено об ошибке, если не удается найти поле. |   | &lt;xref:System.CodeDom.CodeVariableReferenceExpression&gt;| &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;Метод <ph id="ph1">`manager`</ph> параметр используется для поиска экземпляра, представляющий имя данной переменной.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt; &lt;/xref:System.CodeDom.CodeVariableReferenceExpression&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>An error is reported if an instance cannot be located.|       DeserializeExpression continues to interpret expressions until they are completely resolved to an object, or until it can no longer simplify the expression.</source>
          <target state="translated">Сообщено об ошибке, если экземпляр не найден. |       DeserializeExpression продолжает интерпретировать выражения до их полностью разрешения на объект или больше не может упростить выражение.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, DeserializeExpression will return a &lt;xref:System.CodeDom.CodeExpression&gt; that contains the most simplified expression.</source>
          <target state="translated">В этом случае будет возвращать DeserializeExpression &lt;xref:System.CodeDom.CodeExpression&gt;, содержащее выражение, наиболее упрощенной.&lt;/xref:System.CodeDom.CodeExpression&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following expressions are not supported:      -   &lt;xref:System.CodeDom.CodeEventReferenceExpression&gt;      -   &lt;xref:System.CodeDom.CodeMethodReferenceExpression&gt;      -   &lt;xref:System.CodeDom.CodeDelegateCreateExpression&gt;</source>
          <target state="translated">Не поддерживаются следующие выражения:- &lt;xref:System.CodeDom.CodeEventReferenceExpression&gt;- &lt;xref:System.CodeDom.CodeMethodReferenceExpression&gt;- &lt;xref:System.CodeDom.CodeDelegateCreateExpression&gt;&lt;/xref:System.CodeDom.CodeDelegateCreateExpression&gt; &lt;/xref:System.CodeDom.CodeMethodReferenceExpression&gt; &lt;/xref:System.CodeDom.CodeEventReferenceExpression&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The name of the object that results from the expression.</source>
          <target state="translated">Имя объекта, получаемое из выражения.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no need to name the object.</source>
          <target state="translated">Может быть <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если нет необходимости имя объекта.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to interpret.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Интерпретировать.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An object resulting from interpretation of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">expression</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Объект, полученный из интерпретацию <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">expression</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns an instance of the given type.</source>
          <target state="translated">Возвращает экземпляр данного типа.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeserializeInstance method is invoked during deserialization to obtain an instance of an object.</source>
          <target state="translated">Метод DeserializeInstance вызывается во время десериализации для получения экземпляра объекта.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this is called, an instance of the requested type should be returned.</source>
          <target state="translated">При вызове, должны возвращаться экземпляр запрошенного типа.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation invokes the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt; method of the <ph id="ph1">`manager`</ph> parameter.</source>
          <target state="translated">Реализация по умолчанию вызывает &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;метод <ph id="ph1">`manager`</ph> параметр.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the instance to return.</source>
          <target state="translated">&lt;xref:System.Type&gt;Для возврата экземпляра.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the constructor for <ph id="ph1">`type`</ph>.</source>
          <target state="translated">Параметры для передачи конструктору для <ph id="ph1">`type`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The name of the deserialized object.</source>
          <target state="translated">Имя Десериализованный объект.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add this object to the design container; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>для добавления этого объекта в контейнер конструктора; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The object must implement <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this to have any effect.</source>
          <target state="translated">Объект должен реализовать <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> для этого в действие.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An instance of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Экземпляр <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Deserializes properties on the given object from the invariant culture’s resource bundle.</source>
          <target state="translated">Выполняет десериализацию свойств заданного объекта в набор ресурсов инвариантного языка и региональных параметров.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeserializePropertiesFromResources method is a helper method that derived classes can call.</source>
          <target state="translated">Метод DeserializePropertiesFromResources — что можно вызвать вспомогательный метод, который производных классов.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>It looks for properties on the given object and attempts to load their values out of the invariant culture’s resource bundle.</source>
          <target state="translated">Он выполняет поиск свойств данного объекта и пытается загрузить их значения из набора ресурсов инвариантного языка и региональных параметров.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is generally used to handle design-time properties that are not emitted into source code.</source>
          <target state="translated">Обычно используется для обработки свойства времени проектирования, которые не преобразуются в исходный код.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should not be used for localized properties because it only operates on the invariant culture.</source>
          <target state="translated">Он должен не использоваться для локализованные свойства, так как он работает только с инвариантным языком и региональными параметрами.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method inspects all of the properties of the <ph id="ph1">`value`</ph> parameter that match the attributes specified by the <ph id="ph2">`filter`</ph> parameter, and then checks for those properties in a resource binary object.</source>
          <target state="translated">Этот метод проверяет все свойства <ph id="ph1">`value`</ph> параметр, который соответствует атрибутами, заданными <ph id="ph2">`filter`</ph> параметра, а затем проверяет наличие этих свойств в двоичном объекте ресурса.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for deserializing properties that cannot be represented in code, such as design-time properties.</source>
          <target state="translated">Это полезно для десериализации свойств, которые не могут быть представлены в коде, например свойства во время разработки.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method requires that a designer loader offers an &lt;xref:System.ComponentModel.Design.IResourceService&gt; to read resources.</source>
          <target state="translated">Этот метод требует, что загрузчик конструктора предлагает &lt;xref:System.ComponentModel.Design.IResourceService&gt;для чтения ресурсов.&lt;/xref:System.ComponentModel.Design.IResourceService&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.ComponentModel.Design.IResourceService&gt; provides a &lt;xref:System.Resources.ResXResourceReader&gt; for the invariant culture, then DeserializePropertiesFromResources will read resources from the XML resource (.resx) file’s metadata section, which is not included in final compiled code.</source>
          <target state="translated">Если &lt;xref:System.ComponentModel.Design.IResourceService&gt;предоставляет &lt;xref:System.Resources.ResXResourceReader&gt;для инвариантных региональных параметров, затем DeserializePropertiesFromResources будет чтения ресурсов из раздела метаданных XML-файл ресурсов (RESX), который не включен в окончательный скомпилированный код.&lt;/xref:System.Resources.ResXResourceReader&gt; &lt;/xref:System.ComponentModel.Design.IResourceService&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this service is not available, no resources will be read.</source>
          <target state="translated">Если эта служба не доступна, ресурсы не будут считываться.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The object from which the properties are to be deserialized.</source>
          <target state="translated">Объект, из которого выполняется десериализация свойств.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Attribute&gt; array that filters which properties will be deserialized.</source>
          <target state="translated">&lt;xref:System.Attribute&gt;Массив, который фильтрует свойства, которые будут десериализованы.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Deserializes a statement by interpreting and executing a CodeDOM statement.</source>
          <target state="translated">Выполняет десериализацию оператора путем обработки и выполнения инструкции CodeDOM.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeserializeStatement method is a helper method that derived classes can call.</source>
          <target state="translated">Метод DeserializeStatement — что можно вызвать вспомогательный метод, который производных классов.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>It interprets the <ph id="ph1">`statement`</ph> parameter.</source>
          <target state="translated">Он интерпретирует <ph id="ph1">`statement`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CodeDom.CodeStatement&gt; being deserialized will be pushed on the context stack.</source>
          <target state="translated">&lt;xref:System.CodeDom.CodeStatement&gt;Десериализуемого помещаются в стек контекста.&lt;/xref:System.CodeDom.CodeStatement&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для десериализации.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Возвращает коллекцию атрибутов, как определено в проект с целевой версией платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The serialization manager.</source>
          <target state="translated">Диспетчер сериализации.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The target type.</source>
          <target state="translated">Тип целевого объекта.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Коллекция атрибутов в проект целевой версии платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Возвращает коллекцию атрибутов, как определено в проект с целевой версией платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The serialization manager.</source>
          <target state="translated">Диспетчер сериализации.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An object of the target type.</source>
          <target state="translated">Объект типа целевого объекта.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Коллекция атрибутов в проект целевой версии платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets a collection of events as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Возвращает коллекцию событий, как определено в проект с целевой версией платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The serialization manager.</source>
          <target state="translated">Диспетчер сериализации.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An object of the target type.</source>
          <target state="translated">Объект типа целевого объекта.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An array of attributes to pass to the target version of the .NET Framework.</source>
          <target state="translated">Массив атрибутов, которые будут переданы целевой версии платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A collection of events as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Коллекция событий, определенных в проекте целевой версии платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Returns an expression for the given object.</source>
          <target state="translated">Возвращает выражение для данного объекта.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetExpression method returns an expression representing the given object.</source>
          <target state="translated">Метод GetExpression Возвращает выражение, представляющее данный объект.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can return <ph id="ph1">`null`</ph>, indicating that no expression has been set that describes the object.</source>
          <target state="translated">Она может возвращать <ph id="ph1">`null`</ph>, означающее, что выражение не было установлено, описывающую объект.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Expressions are acquired in one of three ways:      -   The expression could be the result of a prior call to the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt; method.</source>
          <target state="translated">Получение выражений осуществляется одним из трех способов:-выражение может быть результатом предыдущего вызова &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The expression could have been found in the &lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;.</source>
          <target state="translated">-Выражение может найдено в списке &lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.RootContext&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The expression could be derived through &lt;xref:System.ComponentModel.Design.IReferenceService&gt;.</source>
          <target state="translated">-Выражение может быть получен посредством &lt;xref:System.ComponentModel.Design.IReferenceService&gt;.&lt;/xref:System.ComponentModel.Design.IReferenceService&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>To derive expressions through &lt;xref:System.ComponentModel.Design.IReferenceService&gt;, the GetExpression method queries the reference service for a name for the given object.</source>
          <target state="translated">Для создания выражений с помощью &lt;xref:System.ComponentModel.Design.IReferenceService&gt;, метод GetExpression запрашивает службу ссылку на имя для данного объекта.&lt;/xref:System.ComponentModel.Design.IReferenceService&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the expression service returns a valid name, &lt;xref:System.ComponentModel.Design.IReferenceService&gt;, the GetExpression method checks to see if there is a "." in the name.</source>
          <target state="translated">Если служба выражение возвращает допустимое имя &lt;xref:System.ComponentModel.Design.IReferenceService&gt;, GetExpression метод проверяет, существует ли «.» в имени.&lt;/xref:System.ComponentModel.Design.IReferenceService&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indicates that the expression service found this object as the return value of a read-only property on another object.</source>
          <target state="translated">Это означает, что службу выражений найти этот объект как возвращаемое значение свойства только для чтения на другом объекте.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a ".", GetExpression will split the reference into parts.</source>
          <target state="translated">При наличии «.», GetExpression будет разделить ссылки на части.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The leftmost part is a name that will be evaluated with the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt; method.</source>
          <target state="translated">Крайней левой части имеет имя, которое будет вычисляться с &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each subsequent part, a property reference expression will be built.</source>
          <target state="translated">Для каждой последующей части будет строиться выражение со ссылкой на свойство.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The final expression will then be returned.</source>
          <target state="translated">Затем будет возвращаться окончательное выражение.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object did not have an expression set, or if the object was not found in the reference service, GetExpression will return <ph id="ph1">`null`</ph>, indicating there is no existing expression for the object.</source>
          <target state="translated">Если объект не содержал значение выражения или если объект не найден в службе ссылочных, возвращает GetExpression <ph id="ph1">`null`</ph>, указывающее, имеется существующий вычисляемое выражение для объекта.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The object for which to get an expression.</source>
          <target state="translated">Объект, для которого необходимо получить выражение.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing v<bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">alue</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if there is no existing expression for v<bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">alue</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> представляющий v<bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">alue</ph><ept id="p2">&lt;/code&gt;</ept>, или <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> при наличии существующего вычисляемое выражение для v<bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">alue</ph><ept id="p4">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets a collection of properties as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Возвращает коллекцию свойств, как определено в проект с целевой версией платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The serialization manager.</source>
          <target state="translated">Диспетчер сериализации.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An object of the target type.</source>
          <target state="translated">Объект типа целевого объекта.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An array of attributes to pass to the target version of the .NET Framework.</source>
          <target state="translated">Массив атрибутов, которые будут переданы целевой версии платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A collection of properties as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Коллекция свойств в проект целевой версии платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets a reflection type generated from type metadata.</source>
          <target state="translated">Получает тип отражения, созданный из типа метаданных.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value will not be equal to <ph id="ph1">`type`</ph> and should not be used for comparison with non-reflection types.</source>
          <target state="translated">Возвращаемое значение не будет равен <ph id="ph1">`type`</ph> и не должен использоваться для сравнения с типами, не связанными с отражением.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The serialization manager.</source>
          <target state="translated">Диспетчер сериализации.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The type to use metadata from.</source>
          <target state="translated">Тип, используемые метаданные.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A reflection type generated from the metadata of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Тип отражения, созданный из метаданных <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets a reflection type generated from object metadata.</source>
          <target state="translated">Получает тип отражения, созданный из метаданных объекта.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value will not be equal to the type of object and should not be used for comparison with non-reflection types.</source>
          <target state="translated">Возвращаемое значение не может быть равным тип объекта и не должен использоваться для сравнения с типами, не связанными с отражением.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The serialization manager.</source>
          <target state="translated">Диспетчер сериализации.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The object to use metadata from.</source>
          <target state="translated">Объект для использования метаданных.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A reflection type generated from the metadata of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">object</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Тип отражения, созданный из метаданных <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">object</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Locates a serializer for the given object value.</source>
          <target state="translated">Определяет местоположение сериализатора для значения заданного объекта.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetSerializer method is an extension to the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Метод GetSerializer — это расширение &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt; method takes an object type, rather than an object value.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;Метод принимает тип объекта, а не значение объекта.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an external party had overridden metadata for a specific object through &lt;xref:System.ComponentModel.TypeDescriptor&gt;, that metadata override would not be seen by the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt; method, which only takes a type.</source>
          <target state="translated">Если третьих переопределен метаданные для объекта через &lt;xref:System.ComponentModel.TypeDescriptor&gt;, что переопределение метаданных бы не видны &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;метод, который принимает только тип.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetSerializer method checks the metadata of the value and the value’s type.</source>
          <target state="translated">Метод GetSerializer проверяет метаданные значение и тип значения.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the two differ, GetSerializer will look to see if there is a custom designer serializer attribute on the value.</source>
          <target state="translated">Если два отличаются, GetSerializer будет выглядеть для просмотра, если отсутствует атрибут настраиваемого сериализатора конструктора значение.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, GetSerializer will attempt to use it.</source>
          <target state="translated">В этом случае GetSerializer попытается использовать его.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it will defer to &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">В противном случае он будет откладываться для &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The object specifying the serializer to retrieve.</source>
          <target state="translated">Объект, указывающий сериализатора.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is appropriate for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> подходит для <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Locates a serializer for the given type.</source>
          <target state="translated">Определяет местоположение сериализатора для заданного типа.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetSerializer method is an extension to the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Метод GetSerializer — это расширение &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt; method takes an object type, rather than an object value.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;Метод принимает тип объекта, а не значение объекта.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; specifying the serializer to retrieve.</source>
          <target state="translated">&lt;xref:System.Type&gt;Указание сериализатора.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomSerializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is appropriate for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">valueType</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomSerializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> подходит для <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">valueType</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;valueType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;valueType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is aware of the target version of the .NET Framework, for use in type filtering.</source>
          <target state="translated">Возвращает <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , известно о целевой версии платформы .NET Framework, для использования в фильтрация по типу.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The type description provider service.</source>
          <target state="translated">Служба поставщика описания типа.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>An object from which the type description provider service can be derived, if <ph id="ph1">`provider`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Объект, от которого можно наследовать служба поставщик описания типа, если <ph id="ph1">`provider`</ph> — <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A .NET Framework-aware type description provider.</source>
          <target state="translated">.NET Framework поддержкой поставщик описания типа.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Returns a unique name for the given object.</source>
          <target state="translated">Возвращает уникальное имя для данного объекта.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetUniqueName method calls the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A&gt; method.</source>
          <target state="translated">Вызовы метода GetUniqueName &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method does not return a name, then GetUniqueName uses &lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt; to fabricate a valid name for the object.</source>
          <target state="translated">Если этот метод не возвращает имя, а затем использует GetUniqueName &lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;при изготовлении допустимое имя для объекта.&lt;/xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the service is not available, GetUniqueName will fabricate a name based on the short type name combined with an index number to make it unique.</source>
          <target state="translated">Если служба недоступна, GetUniqueName будет используется имя, основанное на сокращенное имя вместе с индексом, чтобы сделать его уникальным.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting name is associated with the serialization manager by calling the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt; method before the new name is returned.</source>
          <target state="translated">Результирующее имя связано с диспетчер сериализации, путем вызова &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;метод перед возвращением новое имя.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The object for which the name will be retrieved.</source>
          <target state="translated">Объект, для которого извлекается имя.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A unique name for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Уникальное имя для <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether the given object has been serialized.</source>
          <target state="translated">Возвращает значение, указывающее, ли сериализация заданного объекта.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the <ph id="ph1">`value`</ph> parameter to be considered serialized, the <ph id="ph2">`manager`</ph> parameter or another serializer must have called the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt; method to create a relationship between <ph id="ph3">`value`</ph> and a referring expression.</source>
          <target state="translated">Для <ph id="ph1">`value`</ph> сериализации параметра следует учитывать, <ph id="ph2">`manager`</ph> параметр или другой сериализатор необходимо вызвать метод &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;метод, чтобы создать связь между <ph id="ph3">`value`</ph> и ссылающийся выражение.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The object to test for previous serialization.</source>
          <target state="translated">Объект для предыдущей сериализации.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> has been serialized; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> были сериализованы; в противном случае — <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</source>
          <target state="translated">Возвращает значение, указывающее, ли сериализация заданного объекта, при необходимости рассматривается заранее установленное.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the <ph id="ph1">`value`</ph> parameter to be considered serialized, the <ph id="ph2">`manager`</ph> parameter or another serializer must have called the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt; method to create a relationship between <ph id="ph3">`value`</ph> and a referring expression.</source>
          <target state="translated">Для <ph id="ph1">`value`</ph> сериализации параметра следует учитывать, <ph id="ph2">`manager`</ph> параметр или другой сериализатор необходимо вызвать метод &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;метод, чтобы создать связь между <ph id="ph3">`value`</ph> и ссылающийся выражение.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The object to test for previous serialization.</source>
          <target state="translated">Объект для предыдущей сериализации.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include preset expressions; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Чтобы включить готовые выражения; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> has been serialized; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> были сериализованы; в противном случае — <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Returns an expression representing the creation of the given object.</source>
          <target state="translated">Возвращает выражение, представляющее создание данного объекта.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeCreationExpression method can be used to serialize an expression that represents the creation of the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Метод SerializeCreationExpression используется для сериализации выражение, представляющее создание <ph id="ph1">`value`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is aware of instance descriptors.</source>
          <target state="translated">Ему известно о дескрипторах экземпляров.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`isComplete`</ph> parameter is set to <ph id="ph2">`true`</ph> if the expression represents a fully configured object, or <ph id="ph3">`false`</ph> if further serialization must be done on the object’s properties.</source>
          <target state="translated"><ph id="ph1">`isComplete`</ph> Параметра равным <ph id="ph2">`true`</ph> Если выражение представляет полностью настроенный объект, или <ph id="ph3">`false`</ph> при дальнейшей сериализации необходимо использовать свойства объекта.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Объект для сериализации.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`value`</ph> was fully serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если <ph id="ph1">`value`</ph> были полностью сериализованы; в противном случае — <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>An expression representing the creation of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Выражение, представляющее создание <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Serializes the given event into the given statement collection.</source>
          <target state="translated">Сериализует заданное событие в указанную коллекцию инструкций.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeEvent method is a helper method that derived classes can call to serialize a single event into the given &lt;xref:System.CodeDom.CodeStatementCollection&gt;.</source>
          <target state="translated">Метод SerializeEvent — можно вызвать вспомогательный метод, который производные классы для сериализации одного события в данной &lt;xref:System.CodeDom.CodeStatementCollection&gt;.&lt;/xref:System.CodeDom.CodeStatementCollection&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>SerializeEvent queries the serialization manager for a &lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt; for the given event, and then asks the &lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt; to serialize it.</source>
          <target state="translated">Диспетчер сериализации для запросов SerializeEvent &lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;для данного события и запрашивает &lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;для сериализации его.&lt;/xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt; &lt;/xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>SerializeEvent places the <ph id="ph1">`statements`</ph> and <ph id="ph2">`descriptor`</ph> parameters on the &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.</source>
          <target state="translated">Окружение SerializeEvent <ph id="ph1">`statements`</ph> и <ph id="ph2">`descriptor`</ph> параметры &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>SerializeEvent requires an &lt;xref:System.ComponentModel.Design.IEventBindingService&gt; to discover event bindings to methods that are not compiled.</source>
          <target state="translated">Требуется SerializeEvent &lt;xref:System.ComponentModel.Design.IEventBindingService&gt;для обнаружения связи с событиями методы, которые не компилируются.&lt;/xref:System.ComponentModel.Design.IEventBindingService&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this service is not present, event bindings to non-compiled methods will not be written.</source>
          <target state="translated">Если эта служба отсутствует, привязки событий в методы нескомпилированных не записывается.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event bindings to compiled methods will still be serialized if the objects to which the events are bound can be converted into expressions.</source>
          <target state="translated">По-прежнему будут сериализованы привязки событий к скомпилированным методам, если объекты, с которыми связаны события, могут быть преобразованы в выражениях.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into which the event will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , В который будет сериализовано событие.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The object to which <ph id="ph1">`descriptor`</ph> is bound.</source>
          <target state="translated">Объект, к которому <ph id="ph1">`descriptor`</ph> привязан.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying the event to serialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Указания события для сериализации.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;descriptor&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;descriptor&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IEventBindingService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not available.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IEventBindingService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>недоступен.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Serializes the specified events into the given statement collection.</source>
          <target state="translated">Сериализует заданные события в указанную коллекцию инструкций.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeEvents method is a helper method that derived classes can call.</source>
          <target state="translated">Метод SerializeEvents — что можно вызвать вспомогательный метод, который производных классов.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>It looks at events on the <ph id="ph1">`value`</ph> parameter that match the <ph id="ph2">`filter`</ph> parameter, and then it calls the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt; method for each event.</source>
          <target state="translated">Он выполняет поиск событий <ph id="ph1">`value`</ph> параметр, который соответствует <ph id="ph2">`filter`</ph> параметра, а затем вызывает &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;метод для каждого события.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeEvents method places the &lt;xref:System.ComponentModel.InheritanceAttribute&gt; for <ph id="ph1">`value`</ph> on the &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.</source>
          <target state="translated">Метод мест SerializeEvents &lt;xref:System.ComponentModel.InheritanceAttribute&gt;для <ph id="ph1">`value`</ph> &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.ContextStack&gt; &lt;/xref:System.ComponentModel.InheritanceAttribute&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into which the event will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , В который будет сериализовано событие.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The object on which events will be serialized.</source>
          <target state="translated">Объект, на котором будут сериализованы события.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Attribute&gt; array that filters which events will be serialized.</source>
          <target state="translated">&lt;xref:System.Attribute&gt;Массив, который фильтрует события, для сериализации.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Serializes the properties on the given object into the given statement collection.</source>
          <target state="translated">Сериализует свойства заданного объекта в указанную коллекцию инструкций.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeProperties method is a helper method that derived classes can call.</source>
          <target state="translated">Метод SerializeProperties — что можно вызвать вспомогательный метод, который производных классов.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>It looks at properties on the <ph id="ph1">`value`</ph> parameter that match the <ph id="ph2">`filter`</ph> parameter, and then it calls the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt; method for each property.</source>
          <target state="translated">Он просматривает свойства в <ph id="ph1">`value`</ph> параметр, который соответствует <ph id="ph2">`filter`</ph> параметра, а затем вызывает &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;метод для каждого свойства.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeProperties method places the &lt;xref:System.ComponentModel.InheritanceAttribute&gt; for <ph id="ph1">`value`</ph> on the &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.</source>
          <target state="translated">Метод мест SerializeProperties &lt;xref:System.ComponentModel.InheritanceAttribute&gt;для <ph id="ph1">`value`</ph> &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.ContextStack&gt; &lt;/xref:System.ComponentModel.InheritanceAttribute&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into which the properties will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , В который будут сериализованы свойства.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The object on which the properties will be serialized.</source>
          <target state="translated">Объект, на котором будут сериализованы свойства.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Attribute&gt; array that filters which properties will be serialized.</source>
          <target state="translated">&lt;xref:System.Attribute&gt;Массив, который фильтрует свойства, которые будут сериализованы.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Serializes the properties on the given object into the invariant culture’s resource bundle.</source>
          <target state="translated">Сериализует свойства заданного объекта в набор ресурсов инвариантного языка и региональных параметров.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializePropertiesToResources method is a helper method that derived classes can call.</source>
          <target state="translated">Метод SerializePropertiesToResources — что можно вызвать вспомогательный метод, который производных классов.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>It looks at properties on the <ph id="ph1">`value`</ph> parameter that match the <ph id="ph2">`filter`</ph> parameter, and then it serializes the properties into the invariant culture resource bundle.</source>
          <target state="translated">Он просматривает свойства в <ph id="ph1">`value`</ph> параметр, который соответствует <ph id="ph2">`filter`</ph> параметра, а затем выполняет сериализацию свойств в набор ресурсов инвариантного языка и региональных параметров.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resource service returns a &lt;xref:System.Resources.ResXResourceWriter&gt;, the property values will be stored in the metadata section of the XML resource (.resx) file.</source>
          <target state="translated">Если служба ресурсов возвращает &lt;xref:System.Resources.ResXResourceWriter&gt;, значения свойств, которые будут храниться в метаданных части XML-файл ресурсов (RESX).&lt;/xref:System.Resources.ResXResourceWriter&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`statements`</ph> parameter is not used.</source>
          <target state="translated"><ph id="ph1">`statements`</ph> Параметр не используется.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be serialized as a resource, a property must be simple (not a content property) and its value must be serializable.</source>
          <target state="translated">Должны быть сериализованы как ресурс, свойство должно быть простое (не свойством содержимого) и его значение должны быть сериализуемыми.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties that do not conform to this pattern will be skipped.</source>
          <target state="translated">Свойства, которые не соответствуют этому шаблону, пропускаются.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>SerializePropertiesToResources requires an &lt;xref:System.ComponentModel.Design.IResourceService&gt; to obtain a &lt;xref:System.Resources.ResourceWriter&gt; to write resources for the invariant culture.</source>
          <target state="translated">Требуется SerializePropertiesToResources &lt;xref:System.ComponentModel.Design.IResourceService&gt;для получения &lt;xref:System.Resources.ResourceWriter&gt;для записи ресурсов для нейтральной культуры.&lt;/xref:System.Resources.ResourceWriter&gt; &lt;/xref:System.ComponentModel.Design.IResourceService&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this service is not available, no resources will be written.</source>
          <target state="translated">Если эта служба не доступна, ресурсы не будут записаны.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Not used.</source>
          <target state="translated">Не используется.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The object whose properties will be serialized.</source>
          <target state="translated">Объект, свойства которого будут сериализованы.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Attribute&gt; array that filters which properties will be serialized.</source>
          <target state="translated">&lt;xref:System.Attribute&gt;Массив, который фильтрует свойства, которые будут сериализованы.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Serializes a property on the given object.</source>
          <target state="translated">Сериализует свойства заданного объекта.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeProperty method retrieves a &lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt; for the <ph id="ph1">`propertyToSerialize`</ph> parameter and delegates to it.</source>
          <target state="translated">Метод SerializeProperty получает &lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;для <ph id="ph1">`propertyToSerialize`</ph> параметр и делегаты для него&lt;/xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>SerializeProperty places the <ph id="ph1">`statements`</ph> and <ph id="ph2">`propertyToSerialize`</ph> parameters on the &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.</source>
          <target state="translated">Окружение SerializeProperty <ph id="ph1">`statements`</ph> и <ph id="ph2">`propertyToSerialize`</ph> параметры &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into which the property will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> В который будет сериализовано свойство.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The object on which the property will be serialized.</source>
          <target state="translated">Объект, на котором будет сериализовано свойство.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The property to serialize.</source>
          <target state="translated">Свойство для сериализации.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;propertyToSerialize&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;statements&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;propertyToSerialize&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Serializes the given object into a resource bundle using the given resource name.</source>
          <target state="translated">Выполняет сериализацию заданного объекта в набор ресурсов, используя заданное имя ресурса.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeResource method is a helper method that serializes a value to a resource bundle under the given name.</source>
          <target state="translated">Метод SerializeResource — это вспомогательный метод, который выполняет сериализацию значения для набора ресурсов под заданным именем.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The culture that the resource is written to is determined by searching the serialization manager’s &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A&gt; collection for a property called <ph id="ph1">`ResourceCulture`</ph>.</source>
          <target state="translated">Язык и региональные параметры, который записывается ресурса определяется путем поиска диспетчера сериализации с помощью &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A&gt;Коллекция для свойства с именем <ph id="ph1">`ResourceCulture`</ph>.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property exists, resources will be written to that culture.</source>
          <target state="translated">Если это свойство существует, ресурсы будут записаны для этого языка и региональных параметров.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, resources will be written to the invariant culture.</source>
          <target state="translated">В противном случае ресурсы будут записаны инвариантный язык и региональные параметры.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Параметр должен быть сериализуемым.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>SerializeResource requires an &lt;xref:System.ComponentModel.Design.IResourceService&gt; to obtain a &lt;xref:System.Resources.ResourceWriter&gt; to write resources for the correct culture.</source>
          <target state="translated">Требуется SerializeResource &lt;xref:System.ComponentModel.Design.IResourceService&gt;для получения &lt;xref:System.Resources.ResourceWriter&gt;для записи ресурсов для правильного языка и региональных параметров.&lt;/xref:System.Resources.ResourceWriter&gt; &lt;/xref:System.ComponentModel.Design.IResourceService&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this service is not available, SerializeResource will instead build a binary object in code that represents the resource.</source>
          <target state="translated">Если эта служба не доступна, SerializeResource вместо построит двоичный объект в коде, представляющий ресурс.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The name of the resource bundle into which <ph id="ph1">`value`</ph> will be serialized.</source>
          <target state="translated">Имя набора ресурсов, в который <ph id="ph1">`value`</ph> будут сериализованы.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Объект для сериализации.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Serializes the given object into a resource bundle using the given resource name.</source>
          <target state="translated">Выполняет сериализацию заданного объекта в набор ресурсов, используя заданное имя ресурса.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is always written to the invariant culture.</source>
          <target state="translated">Ресурс всегда записывается в инвариантного языка и региональных параметров.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Параметр должен быть сериализуемым.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeResourceInvariant method requires an &lt;xref:System.ComponentModel.Design.IResourceService&gt; to obtain a &lt;xref:System.Resources.ResourceWriter&gt; to write resources for the correct culture.</source>
          <target state="translated">Метод SerializeResourceInvariant требует &lt;xref:System.ComponentModel.Design.IResourceService&gt;для получения &lt;xref:System.Resources.ResourceWriter&gt;для записи ресурсов для правильного языка и региональных параметров.&lt;/xref:System.Resources.ResourceWriter&gt; &lt;/xref:System.ComponentModel.Design.IResourceService&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this service is not available, &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt; will instead build a binary object in code that represents the resource.</source>
          <target state="translated">Если эта служба недоступна, &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;вместо построит двоичный объект в коде, представляющий ресурс.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The name of the resource bundle into which <ph id="ph1">`value`</ph> will be serialized.</source>
          <target state="translated">Имя набора ресурсов, в который <ph id="ph1">`value`</ph> будут сериализованы.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Объект для сериализации.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Serializes the given object into an expression.</source>
          <target state="translated">Выполняет сериализацию заданного объекта в выражение.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter can be <ph id="ph2">`null`</ph>, in which case a primitive expression will be returned.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Параметр может быть <ph id="ph2">`null`</ph>, в этом случае возвращается элементарное выражение.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeToExpression method uses the following rules for serializing types:      1.</source>
          <target state="translated">Метод SerializeToExpression использует следующие правила для сериализации типов: 1.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>It first calls the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt; method to see if an expression has already been created for the object.</source>
          <target state="translated">Сначала вызывает &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;метод для просмотра, если выражение уже создан для объекта.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, it returns the existing expression.</source>
          <target state="translated">В этом случае он возвращает существующее выражение.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then locates the object’s serializer, and asks it to serialize.</source>
          <target state="translated">Находит сериализатора объекта и запрашивает его сериализацию.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the return value of the object’s serializer is a &lt;xref:System.CodeDom.CodeExpression&gt;, the expression is returned.</source>
          <target state="translated">Если возвращаемое значение сериализатора объекта является &lt;xref:System.CodeDom.CodeExpression&gt;, возвращается выражение.&lt;/xref:System.CodeDom.CodeExpression&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>It makes one last call to &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt; to see if the serializer added an expression.</source>
          <target state="translated">Он выполняет один последний вызов &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;ли сериализатор добавлен выражения.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Наконец, он возвращает <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no expression could be created and no suitable serializer could be found, an error will be reported through the serialization manager.</source>
          <target state="translated">Если выражение не может быть создан и не найден подходящий сериализатор, диспетчер сериализации будет сообщение об ошибке.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>No error will be reported if a serializer was found but it failed to produce an expression.</source>
          <target state="translated">Ошибка не будет отмечено, если сериализатор найден, но ему не удалось создать выражение.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, it is assumed that the serializer either already reported the error or it did not attempt to serialize the object.</source>
          <target state="translated">В этом случае предполагается, что сериализатор либо уже вернул ошибку, или она не была предпринята попытка сериализовать объект.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the serializer returned a statement or a collection of statements, those statements will not be discarded.</source>
          <target state="translated">Если сериализатор возвращает инструкцию или набор инструкций, эти инструкции не отменяются.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeToExpression method will first look for a &lt;xref:System.ComponentModel.Design.Serialization.StatementContext&gt; on the context stack and add statements to the statement context object's &lt;xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A&gt; property.</source>
          <target state="translated">Метод SerializeToExpression вначале будет искать &lt;xref:System.ComponentModel.Design.Serialization.StatementContext&gt;контекста стека и добавьте операторы объект контекста инструкции &lt;xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A&gt;свойство.&lt;/xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.StatementContext&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no statement context, the SerializeToExpression method will look in the context for a &lt;xref:System.CodeDom.CodeStatementCollection&gt; and add the statements there.</source>
          <target state="translated">Если нет контекста инструкции, метод SerializeToExpression будет выглядеть в контексте для &lt;xref:System.CodeDom.CodeStatementCollection&gt;и добавьте операторы существует.&lt;/xref:System.CodeDom.CodeStatementCollection&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no place can be found to add the statements, an error will be generated.</source>
          <target state="translated">Если нет удается найти место для добавления инструкций, возникнет ошибка.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should not call the SerializeToExpression method within &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A&gt; when serializing your own object.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек не следует вызывать метод SerializeToExpression в &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A&gt;при сериализации объекта.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you should call &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;.</source>
          <target state="translated">Вместо этого следует вызвать метод &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it returns <ph id="ph1">`null`</ph>, create your own expression and call &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;.</source>
          <target state="translated">Если он возвращает <ph id="ph1">`null`</ph>вызовите &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt; , создать свое собственное выражение</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then proceed with the rest of your serialization.</source>
          <target state="translated">Затем продолжите выполнение сериализации.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Объект для сериализации.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> can be serialized; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекта, если <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> можно сериализовать; в противном случае — <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Serializes the given object into an expression.</source>
          <target state="translated">Выполняет сериализацию заданного объекта в выражение.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt; method is a helper method that serializes a value to a resource expression.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;— Вспомогательный метод, который выполняет сериализацию значения для выражения ресурса.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is in contrast to the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt; method, which writes a value to a resource binary object.</source>
          <target state="translated">Это отличается от &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;метод, который записывает значение двоичного объекта ресурса.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt; goes one step further and returns an expression that can be used to recover the resource.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;Идет один шаг дальше и возвращает выражение, которое может использоваться для восстановления ресурса.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the return value might be "rm.GetValue("SomeBitmap");".</source>
          <target state="translated">Например возвращаемое значение может быть «надежного обмена сообщениями. GetValue("SomeBitmap");».</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name of the resource is calculated from the &lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;, if one can be found on the context stack.</source>
          <target state="translated">Имя ресурса, вычисленный на основе &lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;, если таковое в стеке контекста.&lt;/xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt; method will look on the &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt; for the following objects:      -   &lt;xref:System.CodeDom.CodeStatementCollection&gt;—a collection of statements to add a resource manager to, if one needs to be declared.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;Метода будет выглядеть на &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;для следующих объектов:- &lt;xref:System.CodeDom.CodeStatementCollection&gt;— это совокупность инструкции, чтобы добавить диспетчер ресурсов, если необходимо объявить один.&lt;/xref:System.CodeDom.CodeStatementCollection&gt; &lt;/xref:System.ComponentModel.Design.Serialization.ContextStack&gt; &lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;—the root expression, which is needed to create a resource manager.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;— корневой выражения, который необходим для создания диспетчера ресурсов.&lt;/xref:System.ComponentModel.Design.Serialization.RootContext&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;—used to fabricate a name for the resource and to decide what type of resource manager call to make.</source>
          <target state="translated">- &lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;— используется для создания имени ресурса и решить, какой тип вызов диспетчера ресурсов для создания.&lt;/xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Объект для сериализации.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> as a serialized expression.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> содержащий <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> как сериализованный выражение.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Serializes the given object into an expression appropriate for the invariant culture.</source>
          <target state="translated">Выполняет сериализацию заданного объекта в выражение, соответствующее для инвариантных региональных параметров.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`ensureInvariant`</ph> parameter is <ph id="ph2">`true`</ph>, the SerializeToResourceExpression method will also write the resource value into the invariant culture’s resource file if the current <ph id="ph3">`ResourceCulture`</ph> is not the invariant culture..</source>
          <target state="translated">Если <ph id="ph1">`ensureInvariant`</ph> параметр <ph id="ph2">`true`</ph>, метод SerializeToResourceExpression также написать значение ресурса в файл ресурсов инвариантного языка и региональных параметров, если текущий <ph id="ph3">`ResourceCulture`</ph> не инвариантного языка и региональных параметров...</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Объект для сериализации.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to serialize into the invariant culture; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>для сериализации в инвариантного языка и региональных параметров; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> as a serialized expression.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> содержащий <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> как сериализованный выражение.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Associates an object with an expression.</source>
          <target state="translated">Связывает объект с выражением.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetExpression method is a helper method that associates a &lt;xref:System.CodeDom.CodeExpression&gt; with an object.</source>
          <target state="translated">Метод SetExpression — это вспомогательный метод, который связывает &lt;xref:System.CodeDom.CodeExpression&gt;с объектом.&lt;/xref:System.CodeDom.CodeExpression&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects that have been associated with expressions in this way are accessible through the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt; method.</source>
          <target state="translated">Объекты, которые были связаны с выражениями, таким образом, доступны через &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>SetExpression stores its expression table as an appended object on the context stack so it is accessible by any serializer’s &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt; method.</source>
          <target state="translated">SetExpression хранит свою таблицу выражение как объект, добавленный в стек контекста, поэтому оно доступно для любого сериализатор &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Объект для сериализации.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with which to associate <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> С которым необходимо связать <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;expression&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;manager&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;expression&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Associates an object with an expression, optionally specifying a preset expression.</source>
          <target state="translated">Связывает объект с выражением, при необходимости задавая заранее установленного выражения.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetExpression method is a helper method that associates a &lt;xref:System.CodeDom.CodeExpression&gt; with an object.</source>
          <target state="translated">Метод SetExpression — это вспомогательный метод, который связывает &lt;xref:System.CodeDom.CodeExpression&gt;с объектом.&lt;/xref:System.CodeDom.CodeExpression&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects that have been associated with expressions in this way are accessible through the &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt; method.</source>
          <target state="translated">Объекты, которые были связаны с выражениями, таким образом, доступны через &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetExpression stores its expression table as an appended object on the context stack so it is accessible by any serializer’s &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt; method.</source>
          <target state="translated">SetExpression хранит свою таблицу выражение как объект, добавленный в стек контекста, поэтому оно доступно для любого сериализатор &lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для использования при выполнении сериализации.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Объект для сериализации.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with which to associate <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> С которым необходимо связать <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to specify a preset expression; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>для указания заранее установленного выражения; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>