<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">282e4a89a3653308e4dbe6830fc8fb79e56fe16f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.ISynchronizeInvoke.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d93c7dba07623ae60f3c07ef386f6d0088e77331</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">034095357185fb9c6d9767ab9eede0e54fe9c20e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way to synchronously or asynchronously execute a delegate.</source>
          <target state="translated">Предоставляет способ для синхронного или асинхронного выполнения делегата.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Asynchronously executes the delegate on the thread that created this object.</source>
          <target state="translated">Асинхронно выполняет делегат в потоке, который создал этот объект.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`method`</ph> delegate is executed on the thread that created the object, instead of the thread on which BeginInvoke was called.</source>
          <target state="translated"><ph id="ph1">`method`</ph> Делегат, выполняется в потоке, который создал объект вместо потока, для которого был вызван BeginInvoke.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The delegate is called asynchronously, and this method returns immediately.</source>
          <target state="translated">Делегат вызывается асинхронно, и этот метод возвращается немедленно.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call this method from any thread.</source>
          <target state="translated">Этот метод можно вызывать из любого потока.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need the return value from a process started with this method, call &lt;xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A&gt; to get the value.</source>
          <target state="translated">Если возвращаемое значение от процесса, запущенного с помощью этого метода следует вызвать &lt;xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A&gt;для получения значения.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to call the delegate synchronously, use the &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt; method instead.</source>
          <target state="translated">Если необходимо вызвать делегата синхронно, используйте &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;метод вместо.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Delegate&gt; to a method that takes parameters of the same number and type that are contained in <ph id="ph1">`args`</ph>.</source>
          <target state="translated">Объект &lt;xref:System.Delegate&gt;метода, принимающего параметры одно и то же количество и тип, который содержится в <ph id="ph1">`args`</ph>.&lt;/xref:System.Delegate&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Object&gt; to pass as arguments to the given method.</source>
          <target state="translated">Массив объектов типа &lt;xref:System.Object&gt;для передачи в качестве аргументов указанному методу.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no arguments are needed.</source>
          <target state="translated">Это может быть <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если аргументы не требуются.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; interface that represents the asynchronous operation started by calling this method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;Интерфейс, который представляет асинхронную операцию, запущенную вызовом этого метода.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Waits until the process started by calling &lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt; completes, and then returns the value generated by the process.</source>
          <target state="translated">Ожидает, пока процесс запущен с помощью вызова &lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt;завершения, а затем возвращает значение, созданное процессом.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method gets the return value of the asynchronous operation represented by the &lt;xref:System.IAsyncResult&gt; passed by this interface.</source>
          <target state="translated">Этот метод получает возвращаемое значение асинхронной операции, представленное &lt;xref:System.IAsyncResult&gt;переданным этим интерфейсом.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the asynchronous operation has not completed, this method will wait until the result is available.</source>
          <target state="translated">Если асинхронная операция не завершена, этот метод будет ожидать, пока не станет доступен результат.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; interface that represents the asynchronous operation started by calling &lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt;.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;Интерфейс, который представляет асинхронную операцию, запущенную вызовом &lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt;.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the return value generated by the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.Object&gt;, Представляющий возвращаемое значение, сформированное асинхронной операцией.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</source>
          <target state="translated">Синхронно выполняет делегат в потоке, который создал этот объект и выполняет маршалинг вызова в текущий поток.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike &lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A&gt;, this method operates synchronously, that is, it waits until the process completes before returning.</source>
          <target state="translated">В отличие от &lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A&gt;, этот метод работает синхронно, то есть ожидает завершения процесса перед возвратом.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions raised during the call are propagated back to the caller.</source>
          <target state="translated">Исключения, вызванные во время вызова передаются обратно в вызывающий объект.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when calling a method from a different thread to marshal the call to the proper thread.</source>
          <target state="translated">Используйте этот метод при вызове метода из другого потока, чтобы направить запрос в правильный поток.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Delegate&gt; that contains a method to call, in the context of the thread for the control.</source>
          <target state="translated">Объект &lt;xref:System.Delegate&gt;, содержащий метод, вызываемый в контексте потока элемента управления.&lt;/xref:System.Delegate&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Object&gt; that represents the arguments to pass to the given method.</source>
          <target state="translated">Массив объектов типа &lt;xref:System.Object&gt;, представляющий аргументы для передачи в заданный метод.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no arguments are needed.</source>
          <target state="translated">Это может быть <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если аргументы не требуются.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the return value from the delegate being invoked, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the delegate has no return value.</source>
          <target state="translated">&lt;xref:System.Object&gt;, Представляющий возвращаемое значение от вызываемого делегата, или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если делегат не имеет возвращаемого значения.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the caller must call &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt; when calling an object that implements this interface.</source>
          <target state="translated">Возвращает значение, указывающее, является ли вызывающему оператору обращаться &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;Когда вызов объекта, который реализует этот интерфейс.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property determines whether the caller must call &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt; when making method calls to an object that implements this interface.</source>
          <target state="translated">Это свойство определяет, является ли вызывающему оператору обращаться &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;при вызове метода объекта, реализующего этот интерфейс.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such objects are bound to a specific thread and are not thread-safe.</source>
          <target state="translated">Такие объекты привязаны к конкретному потоку и не являются потокобезопасными.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are calling a method from a different thread, you must use the &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt; method to marshal the call to the proper thread.</source>
          <target state="translated">При вызове метод из другого потока, необходимо использовать &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;метод выполнить маршалинг вызова в нужный поток.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the caller must call &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если вызывающий объект должен вызвать &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>