<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47b8e4b950129a21b4b1c99257bf151060f70c7b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.DesignerSerializationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">309e45a51d6c5f0fe91d220569a4e8b5b4ddd904</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3d10d95625110147c0bf5bb1d1f5dd295770667</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an implementation of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">Предоставляет реализацию <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> интерфейса.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; interface is designed to be a format-independent interface to an object that controls serialization.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;Интерфейс должен быть интерфейсом независимо от формата для объекта, который управляет сериализацией.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It essentially provides context and services to serializers, which actually perform the deserialization.</source>
          <target state="translated">По существу предоставляет контекст и службы для сериализаторов, которые фактически выполнить десериализацию.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; assists in the deserialization process by keeping track of objects.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;помогает в процессе десериализации, отслеживая объектов.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is similar in technique to the &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; interface: designers actually provide the user interface (UI), and &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; provides the glue that allows different designers to work together.</source>
          <target state="translated">Это аналогично способ &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;интерфейса: конструкторы фактически предоставляют пользовательский интерфейс (UI), и &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;, обеспечивает связь и позволяющая различных конструкторов могут работать вместе.&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DesignerSerializationManager class implements &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;.</source>
          <target state="translated">Этот класс реализует DesignerSerializationManager &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is designed to provide a generic form of deserialization that is similar to run-time serializers like the &lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;.</source>
          <target state="translated">Он предназначен для обеспечения стандартной формы десериализации, который аналогичен во время выполнения сериализаторов, таких как &lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;.&lt;/xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DesignerSerializationManager class achieves three goals:      -   It is a simple, turnkey object that can be used to deserialize a variety of formats.</source>
          <target state="translated">Класс DesignerSerializationManager достигает трех целей: — это простой, готовый к использованию объект, можно использовать для десериализации различных форматах.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   It is generic and not tied to any particular format.</source>
          <target state="translated">-Это универсален и не привязан к определенному формату.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used equally for CodeDOM deserialization as well as markup deserialization.</source>
          <target state="translated">Он может использоваться одинаково для десериализации CodeDOM при десериализации исправлений.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</source>
          <target state="translated">-Он является расширяемым и поддерживает сериализацию различные методы, используемые в копирования и вставки и отмены и повтора сценариев.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Design-time serialization has the following differences from run-time object serialization:      -   The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</source>
          <target state="translated">Сериализация времени разработки имеет следующие отличия от сериализации объектов во время выполнения:-объекта, выполняющего сериализацию обычно отделен от объекта во время выполнения, чтобы во время разработки логики можно удалить из компонента.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</source>
          <target state="translated">-Схема сериализации предполагает объект создается полностью инициализированным, а затем изменяется через свойство и вызовы методов во время десериализации.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</source>
          <target state="translated">-Свойства объекта, значения которых были заданы для объекта (свойства содержат значения по умолчанию), не сериализуются.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, the deserialization stream may have holes.</source>
          <target state="translated">И наоборот поток десериализации может содержать пустые элементы.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</source>
          <target state="translated">-Акцент делается на качестве содержимого в потоке сериализации, а не полный сериализации объекта.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</source>
          <target state="translated">Это означает, что если нет определенного способа сериализации объекта, этот объект может пропустить вместо создания исключения.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</source>
          <target state="translated">Модуль сериализации могут предоставить эвристику, чтобы определить, какие ошибки можно игнорировать, а какие — без возможности восстановления.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The serialization stream may have more data than is needed for deserialization.</source>
          <target state="translated">-В поток сериализации может иметь больше данных, чем необходимо для десериализации.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</source>
          <target state="translated">Например, сериализация исходного кода имеет код пользователя, смешанный с кодом, необходимым для десериализации графа объектов.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This user code must be ignored on deserialization and preserved on serialization.</source>
          <target state="translated">Этот пользовательский код должен быть пропущен при десериализации и сохранять в процессе сериализации.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of these differences, a different serialization model applies to design-time serialization.</source>
          <target state="translated">Из-за этих различий применяется другая модель сериализации во время разработки.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This model utilizes a separate serializer object for each data type being serialized.</source>
          <target state="translated">Эта модель использует отдельный объект сериализатора для каждого сериализуемого типа данных.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each serializer provides its small contribution to the problem as a whole.</source>
          <target state="translated">Каждый сериализатор делает свой небольшой вклад проблему в целом.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>These serializers are all coordinated through a common serialization manager.</source>
          <target state="translated">Все эти сериализаторы координируются через общий диспетчер сериализации.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization manager is responsible for maintaining state between these different serializers.</source>
          <target state="translated">Диспетчер сериализации отвечает за сохранение состояния между разными сериализаторами.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example, consider the following class:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_1.vb)</ept><ept id="p3">]</ept>       An instance of this class would utilize three different serializers: one for <ph id="ph1">`SampleObject`</ph>, one for strings, and another for integers.</source>
          <target state="translated">Например, рассмотрим следующий класс: <bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_1.vb)</ept> <ept id="p3">]</ept> экземпляр этого класса использует три разных сериализатора: один для <ph id="ph1">`SampleObject`</ph>, один для строк, а другой для целых чисел.  </target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serializer for <ph id="ph1">`SampleObject`</ph> is called the root serializer because <ph id="ph2">`SampleObject`</ph> is the root of the serialization graph.</source>
          <target state="translated">Сериализатор для <ph id="ph1">`SampleObject`</ph> называется корневым сериализатором, поскольку <ph id="ph2">`SampleObject`</ph> является корнем графа сериализации.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>More complex object graphs can be created as well.</source>
          <target state="translated">Также можно создать более сложных графов объектов.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, consider what would happen if <ph id="ph1">`SampleObject`</ph> were changed as follows:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_2.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_2.vb)</ept><ept id="p3">]</ept>       This allows <ph id="ph2">`SampleObject`</ph> to have a child that is another instance of itself.</source>
          <target state="translated">Предположим, что может произойти, если <ph id="ph1">`SampleObject`</ph> были изменены следующим образом: <bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_2.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_2.vb)</ept> <ept id="p3">]</ept> благодаря <ph id="ph2">`SampleObject`</ph> иметь дочерний элемент, который является другой экземпляр самого себя.  </target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code fills in the object graph:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_3.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_3.vb)</ept><ept id="p3">]</ept>       When <ph id="ph1">`root`</ph> is serialized, there will be four serializers used: one root serializer, one serializer for the child <ph id="ph2">`SampleObject`</ph>, one serializer for <ph id="ph3">`int`</ph>, and one serializer for <ph id="ph4">`string`</ph>.</source>
          <target state="translated">Следующий код заполняет графа объектов: <bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id="p2">](~/add/codesnippet/csharp/t-system.componentmodel._7_3.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id="p4">](~/add/codesnippet/visualbasic/t-system.componentmodel._7_3.vb)</ept> <ept id="p3">]</ept> при <ph id="ph1">`root`</ph> сериализуется, будет использоваться четыре сериализатора: один корневой сериализатор, один сериализатор для дочернего элемента <ph id="ph2">`SampleObject`</ph>, один сериализатор для <ph id="ph3">`int`</ph>и один сериализатор для <ph id="ph4">`string`</ph>.  </target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializers are cached based on type, so there is no need to create a serializer for each instance of <ph id="ph1">`SampleObject`</ph>.</source>
          <target state="translated">Сериализаторы кэшированы на основе типа, поэтому нет необходимости создавать сериализатор для каждого экземпляра <ph id="ph1">`SampleObject`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DesignerSerializationManager class is based on the idea of a serialization session.</source>
          <target state="translated">Класс DesignerSerializationManager основан на идее сеанс сериализации.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>A session maintains state that can be accessed by the various serializers.</source>
          <target state="translated">Сеанс сохраняет состояние, доступное для многих сериализаторов.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a session is disposed, this state is destroyed.</source>
          <target state="translated">При удалении сеанса состояние удаляется.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</source>
          <target state="translated">Это помогает обеспечить сериализаторов остаются без состояния, что помогает очистить сериализаторов, которые были повреждены.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following tables describe how state is managed in and among sessions.</source>
          <target state="translated">В следующих таблицах описаны управление состоянием во время и между сеансами.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Global State    This state is owned by the serialization manager object, but is independent of the current serialization session.</source>
          <target state="translated">Состояние Global это состояние принадлежит объект диспетчера сериализации, но не зависит от текущего сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Object|Usage|   |------------|-----------|   |Serialization providers|Objects can add themselves as custom serialization providers.</source>
          <target state="translated">| Объект | Использование |   |------------|-----------|   | Поставщики сериализации | Объекты можно добавить себя как поставщики пользовательской сериализации.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because these providers are used to locate serializers, they outlive a serialization session.|      ## Session-Owned State    This state is owned by a session and is destroyed when a session is destroyed.</source>
          <target state="translated">Так как эти поставщики используются сериализаторами, время их жизни превышает сеанс сериализации. |      ## Состояние, принадлежащее сеансу это состояние владеет сеанс и удаляется при удалении сеанса.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</source>
          <target state="translated">Следовательно попытке свойств или методов манипулировать это состояние возникает исключение, если диспетчер сериализации не находится в активном сеансе.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Object|Usage|   |------------|-----------|   |&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt; event|The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt; event is attached by a serializer to provide additional resolution of names.</source>
          <target state="translated">| Объект | Использование |   |------------|-----------|   | событие &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;| &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;Связано событие сериализатором, чтобы предоставить дополнительные разрешения имен.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>All handlers are detached from this event when a session terminates.|   |&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt; event|The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt; event is raised just before a session is disposed.</source>
          <target state="translated">Все обработчики отсоединяются от этого события при завершении сеанса. |   | событие &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;| &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;Событие возникает непосредственно перед завершении сеанса.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, all handlers are detached from this event.|   |Name table|The serialization manager maintains a table that maps between objects and their names.</source>
          <target state="translated">Затем все обработчики отсоединяются от этого события. |   | Имя таблицы | Диспетчер сериализации сохраняет таблицу, сопоставляющую объекты и их имена.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializers may give objects names for easy identification.</source>
          <target state="translated">Сериализаторы могут давать имена объектов для упрощения идентификации.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This name table is cleared when the session terminates.|   |Serializer cache|The serialization manager maintains a cache of serializers it has been asked to supply.</source>
          <target state="translated">Таблица имен очищается при прекращении сеанса. |   | Кэш сериализатора | Диспетчер сериализации поддерживает кэш попросила предоставить сериализаторов.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This cache is cleared when the session terminates.</source>
          <target state="translated">Этот кэш очищается при прекращении сеанса.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The public &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt; method can safely be called at any time, but its value is cached only if it is called from within a session.|   |Context stack|The serialization manager maintains an object called the context stack, which you can access with the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt; property.</source>
          <target state="translated">Открытый метод &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;можно безопасно вызывать в любое время, но его значение кэшируется только в том случае, если она вызывается из сеанса. |   | Стек контекстов | Диспетчер сериализации сохраняет объект с именем стек контекста, к которому можно получить с помощью &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;свойство.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializers can use this stack to store additional information that is available to other serializers.</source>
          <target state="translated">Сериализаторы используют этот стек для хранения дополнительной информации, которая доступна для других сериализаторов.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</source>
          <target state="translated">Например сериализатор, который сериализации значения свойства можно передать имя свойства в стек сериализации перед запросом значение для сериализации.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This stack is cleared when the session is terminated.|   |Error list|The serialization manager maintains a list of errors that occurred during serialization.</source>
          <target state="translated">Стек удаляется при завершении сеанса. |   | Список ошибок | Диспетчер сериализации сохраняет список ошибок, возникших во время сериализации.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This list, which is accessed through the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt; property, is cleared when the session is terminated.</source>
          <target state="translated">Этот список, доступный через &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;свойство очищается при завершении сеанса.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Accessing the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt; property between sessions will result in an exception.|</source>
          <target state="translated">Доступ к &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;свойство между сеансами приведет к возникновению исключения. |&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt; and &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; properties to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Этот конструктор задает &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;и &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;Свойства <ph id="ph1">`true`</ph>.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the given service provider.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с помощью данного поставщика услуг.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the <ph id="ph1">`provider`</ph> parameter.</source>
          <target state="translated">Если сериализатор вызывает службы, которые не могут быть удовлетворены диспетчер сериализации, реализация по умолчанию будет пересылать их <ph id="ph1">`provider`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt; and &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; properties to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Этот конструктор задает &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;и &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;Свойства <ph id="ph1">`true`</ph>.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IServiceProvider&gt;.</source>
          <target state="translated">An &lt;xref:System.IServiceProvider&gt;.&lt;/xref:System.IServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;provider&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;provider&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets to the container for this serialization manager.</source>
          <target state="translated">Возвращает или задает контейнер для этого диспетчера сериализации.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a container exists, all components that are created by the serialization manager will be added to the container.</source>
          <target state="translated">Если контейнер существует, все компоненты, которые создаются диспетчером сериализации добавляется в контейнер.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this property will search the service provider for an &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; and use the container provided by the designer host, should one exist.</source>
          <target state="translated">Реализация по умолчанию этого свойства будет выполнять поиск поставщика услуг для &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;и использовать контейнер, указанный узлом конструктора, он существует.&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this property will return <ph id="ph1">`null`</ph> and no components will be added to a container.</source>
          <target state="translated">В противном случае это свойство будет возвращать <ph id="ph1">`null`</ph> и компоненты не будут добавлены в контейнер.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the serialization manager will add components.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> К которому диспетчер сериализации будет добавлять компоненты.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The serialization manager has an active serialization session.</source>
          <target state="translated">У диспетчера сериализации есть активный сеанс сериализации.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Creates an instance of a type.</source>
          <target state="translated">Создает экземпляр типа.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by serializers when they attempt to create an instance of a type.</source>
          <target state="translated">Этот метод вызывается сериализаторами при попытке создать экземпляр типа.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt; and &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt; properties.</source>
          <target state="translated">Реализация по умолчанию создает новый экземпляр типа, а также может возвращать экземпляр в зависимости от значения &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;и &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;Свойства.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt; method uses reflection to create instances and will perform some generic &lt;xref:System.IConvertible&gt; transformations on parameters to find a matching constructor.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;Метод использует отражение для создания экземпляров и выполнит некоторые универсальные &lt;xref:System.IConvertible&gt;преобразования параметров с целью найти соответствующий конструктор.&lt;/xref:System.IConvertible&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The type to create an instance of.</source>
          <target state="translated">Тип создаваемого экземпляра.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The parameters of the type’s constructor.</source>
          <target state="translated">Параметры конструктора типа.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty collection to invoke the default constructor.</source>
          <target state="translated">Это может быть <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> или пустая коллекция для вызова конструктора по умолчанию.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A name to give the object.</source>
          <target state="translated">Имя объекта.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</source>
          <target state="translated">Если <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, объект не будет иметь имя, если объект добавляется в контейнер, и ему имя.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add the object to the container if the object implements <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Чтобы добавить объект в контейнер, если объект реализует <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; в противном случае <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A new instance of the type specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Новый экземпляр типа, заданного параметром <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> does not have a constructor that takes parameters contained in <ph id="ph2">&lt;code&gt;arguments&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>не имеет конструктор, который принимает параметры, содержащиеся в <ph id="ph2">&lt;code&gt;arguments&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Creates a new serialization session.</source>
          <target state="translated">Создает новый сеанс сериализации.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most data within the serialization manager is transient and only lives for the life of a serialization session.</source>
          <target state="translated">Большинство данных в диспетчер сериализации является временным и существует только в течение сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a session is disposed, serialization is considered to be complete and this transient state is cleared.</source>
          <target state="translated">При завершении сеанса, будет считаться завершенной сериализации, и это переходное состояние очищается.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows a single instance of a serialization manager to be used to serialize multiple object trees.</source>
          <target state="translated">Это позволяет использовать экземпляр диспетчера сериализации для сериализации нескольких деревьев объектов.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</source>
          <target state="translated">Некоторые состояния, включая поставщика служб и любых поставщиков пользовательской сериализации, которые были добавлены в диспетчер сериализации, заполняют сеансы.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; that represents a new serialization session.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;, Представляющий новый сеанс сериализации.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The serialization manager is already within a session.</source>
          <target state="translated">Диспетчер сериализации уже находится в сеансе.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This version of <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> does not support simultaneous sessions.</source>
          <target state="translated">Эта версия <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> не поддерживает одновременные сеансы.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets the list of errors that occurred during serialization or deserialization.</source>
          <target state="translated">Получает список ошибок, возникших во время сериализации или десериализации.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only read the error list while a serialization session is active.</source>
          <target state="translated">Доступен только для чтения список ошибок во время активного сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The list of errors that occurred during serialization or deserialization.</source>
          <target state="translated">Список ошибок, возникших во время сериализации или десериализации.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Доступ к этому свойству был вне сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets the type corresponding to the specified type name.</source>
          <target state="translated">Возвращает тип, соответствующий имени указанного типа.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The name of the type to get.</source>
          <target state="translated">Имя извлекаемого типа.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The specified type.</source>
          <target state="translated">Указанный тип.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets the serializer for the given object type.</source>
          <target state="translated">Возвращает сериализатор для данного типа объекта.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can request the type of serializer you would like.</source>
          <target state="translated">Можно запросить тип сериализатора, которой вы хотите создать.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`null`</ph> if there is no serializer of the requested type for the specified object type.</source>
          <target state="translated">Этот метод возвращает <ph id="ph1">`null`</ph> Если сериализатор запрошенного типа для указанного типа объекта.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The type of object for which to retrieve the serializer.</source>
          <target state="translated">Тип объекта, для которого необходимо получить сериализатор.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The type of serializer to retrieve.</source>
          <target state="translated">Тип получаемого сериализатора.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The serializer for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectType</ph><ept id="p1">&lt;/code&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if not found.</source>
          <target state="translated">Сериализатор для <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectType</ph> <ept id="p1">&lt;/code&gt;</ept>, или <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, если не найден.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;objectType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;serializerType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;objectType&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;serializerType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets the requested service.</source>
          <target state="translated">Возвращает запрашиваемую службу.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetService method provides access to the underlying container or service provider that was set in the constructor.</source>
          <target state="translated">Метод GetService предоставляет доступ к базового контейнера или поставщика услуг, который был задан в конструкторе.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The type of service to retrieve.</source>
          <target state="translated">Тип возвращаемой службы.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The requested service, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the service cannot be resolved.</source>
          <target state="translated">Запрошенную службу, или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если службу не удается разрешить.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets the requested type.</source>
          <target state="translated">Возвращает запрошенный тип.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt; method will search the service provider for an &lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt; and, if available, it will delegate to that service to resolve the type.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;Метод выполняет поиск поставщика услуг для &lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;и, при его наличии она будет Делегировать эту службу для разрешения типа.&lt;/xref:System.ComponentModel.Design.ITypeResolutionService&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an &lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt; is not available, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt; will call the &lt;xref:System.Object.GetType%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Если &lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;недоступно, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;вызовет &lt;xref:System.Object.GetType%2A?displayProperty=fullName&gt;метод.&lt;/xref:System.Object.GetType%2A?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt; &lt;/xref:System.ComponentModel.Design.ITypeResolutionService&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The name of the type to retrieve.</source>
          <target state="translated">Имя извлекаемого типа.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The requested type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type cannot be resolved.</source>
          <target state="translated">Запрошенный тип или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если тип не может быть разрешена.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события вызывается обработчик события в делегате.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>NIB: при возникновении события<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnResolveName method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Метод OnResolveName также позволяет производным классам обрабатывать событие, не присоединяя делегат.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Это предпочтительная методика обработки событий в производном классе.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ResolveNameEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ResolveNameEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , содержащий данные события.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события вызывается обработчик события в делегате.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>NIB: при возникновении события<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnSessionCreated method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Метод OnSessionCreated также позволяет производным классам обрабатывать событие, не присоединяя делегат.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Это предпочтительная методика обработки событий в производном классе.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;, Содержащий данные события.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Вызывает <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> событий.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события вызывается обработчик события в делегате.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>NIB: при возникновении события<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnSessionDisposed method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Метод OnSessionDisposed также позволяет производным классам обрабатывать событие, не присоединяя делегат.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Это предпочтительная методика обработки событий в производном классе.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;, Содержащий данные события.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt; method should check for the presence of the given name in the container.</source>
          <target state="translated">Возвращает или задает значение, указывающее, является ли &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;метод должен проверить наличие с заданным именем в контейнере.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreserveNames property determines the behavior of the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; method.</source>
          <target state="translated">Свойство PreserveNames определяет поведение &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`true`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will pass the given component name.</source>
          <target state="translated">Если <ph id="ph1">`true`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;передает имя данного компонента.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`false`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will check for the presence of the given name in the container.</source>
          <target state="translated">Если <ph id="ph1">`false`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;будет проверять наличие с заданным именем в контейнере.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the name does not exist in the container, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will use the given name.</source>
          <target state="translated">Если имя не существует в контейнере, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;будет использовать заданное имя.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the name does exist in the container, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</source>
          <target state="translated">Если имя существует в контейнере, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;при его добавлении к контейнеру, тем самым предоставляя ему новое имя будет передавать значение null как имя компонента.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</source>
          <target state="translated">Второй вариант полезен для реализации сериализатора, который всегда копирует объекты, а не при условии, что эти объекты не существуют.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Paste commands often use this type of serializer.</source>
          <target state="translated">Этот тип сериализатора часто используется командами вставки.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only change this property when you are not in a serialization session.</source>
          <target state="translated">Это свойство можно изменять только в том случае, когда вы находитесь не в сеанс сериализации.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance<bpt id="p2">*</bpt>&gt; will pass the given component name; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance<ept id="p2">*</ept>&gt; will check for the presence of the given name in the container.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>настроек передает имя данного компонента; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> Если &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>настроек проверит наличие с заданным именем в контейнере.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This property was changed from within a serialization session.</source>
          <target state="translated">Это свойство было изменено вне сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets the object that should be used to provide properties to the serialization manager's &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt; property.</source>
          <target state="translated">Возвращает объект, который должен использоваться для предоставления свойств диспетчера сериализации с помощью &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;свойство.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PropertyProvider property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</source>
          <target state="translated">Свойство PropertyProvider предоставляет способ для предоставления набор свойств сериализации, используемые сериализаторы вспомогательными их поведение диспетчера сериализации.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</source>
          <target state="translated">Открытые свойства этого объекта будет проверен и помещаются в новые дескрипторы свойств, имеющих целевой объект диспетчера сериализации.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The object that should be used to provide properties to the serialization manager's &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt; property.</source>
          <target state="translated">Объект, который должен использоваться для предоставления свойств диспетчера сериализации с помощью &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;свойство.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Gets or sets a flag indicating whether &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt; will always create a new instance of a type.</source>
          <target state="translated">Возвращает или задает флаг, указывающий, является ли &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;создаст новый экземпляр типа.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the RecycleInstances property is <ph id="ph1">`false`</ph>, the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; method will always create a new instance of a type.</source>
          <target state="translated">Если свойство RecycleInstances <ph id="ph1">`false`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;метод всегда создает новый экземпляр типа.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If RecycleInstances is <ph id="ph1">`true`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will first search the name table and container for an object of the same name.</source>
          <target state="translated">Если RecycleInstances <ph id="ph1">`true`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;сначала выполняет поиск таблицы имен и контейнер для объекта с таким же именем.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If such an object exists and is of the same type, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; will return the existing instance.</source>
          <target state="translated">Если такой объект существует и имеет тот же тип, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;возвращает существующий экземпляр.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</source>
          <target state="translated">Второй вариант полезен для реализации сериализатора, который применяет состояние сериализации к существующему набору объектов, а не всегда создавая новое дерево.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">**</bpt>Undo<ept id="p1">**</ept> command often uses this type of serializer.</source>
          <target state="translated"><bpt id="p1">**</bpt>Отменить<ept id="p1">**</ept> команда часто использует этот тип сериализатора.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case where the RecycleInstances property is <ph id="ph1">`true`</ph>, the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt; property will further modify the behavior of &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; depending on the types of the two objects.</source>
          <target state="translated">В случае, когда свойство RecycleInstances является <ph id="ph1">`true`</ph>, &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;свойство будет изменять поведение &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;в зависимости от типов двух объектов.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance<bpt id="p2">*</bpt>&gt; will return the existing instance; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance<ept id="p2">*</ept>&gt; will create a new instance of a type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>настроек вернет существующего экземпляра; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> Если &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>настроек создаст новый экземпляр типа.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The serialization manager has an active serialization session.</source>
          <target state="translated">У диспетчера сериализации есть активный сеанс сериализации.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Occurs when a session is created.</source>
          <target state="translated">Происходит при создании сеанса.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Occurs when a session is disposed.</source>
          <target state="translated">Происходит при завершении сеанса.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Adds a custom serialization provider to the serialization manager.</source>
          <target state="translated">Добавляет диспетчеру сериализации пользовательский поставщик сериализации.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt; method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</source>
          <target state="translated">Когда &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;метод используется для запроса поставщик сериализации, диспетчер сериализации вывод списка поставщиков пользовательской сериализации, сначала перед поиск в метаданных типа соответствующий сериализатор.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The serialization provider to add.</source>
          <target state="translated">Чтобы добавить поставщик сериализации.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets the context stack for this serialization session.</source>
          <target state="translated">Возвращает стек контекста для этого сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>A context stack provides a user-defined storage area, implemented as a stack.</source>
          <target state="translated">Стек контекстов предоставляет область памяти, определяемые пользователем, реализованную в виде стека.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</source>
          <target state="translated">Эта область памяти является удобным способом для обеспечения связи между сериализаторами является иерархическим процесса сериализации.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that stores data.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , сохраняет данные.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Доступ к этому свойству был вне сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*&gt; method.</source>
          <target state="translated">Реализует &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The data type to create.</source>
          <target state="translated">Чтобы создать тип данных.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The arguments to pass to the constructor for this type.</source>
          <target state="translated">Аргументы для передачи в конструктор для этого типа.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The name of the object.</source>
          <target state="translated">Имя объекта.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This name can be used to access the object later through &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.</source>
          <target state="translated">Это имя может использоваться для доступа к объекту позже через &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is passed, the object is still created but cannot be accessed by name.</source>
          <target state="translated">Если <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> будет передан, объект по-прежнему создается, но не может быть доступен по имени.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add this object to the design container.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>для добавления этого объекта в контейнер конструктора.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The object must implement <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this to have any effect.</source>
          <target state="translated">Объект должен реализовать <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> для этого в действие.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The newly created object instance.</source>
          <target state="translated">Вновь созданный экземпляр объекта.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Retrieves an instance of a created object of the specified name.</source>
          <target state="translated">Извлекает экземпляр созданного объекта с указанным именем.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The name of the object to retrieve.</source>
          <target state="translated">Имя извлекаемого объекта.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>An instance of the object with the given name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no object by that name can be found.</source>
          <target state="translated">Экземпляр объекта с заданным именем или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если ни один объект с таким именем не найден.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Доступ к этому свойству был вне сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Retrieves a name for the specified object.</source>
          <target state="translated">Возвращает имя указанного объекта.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the IDesignerSerializationManager.GetName method cannot find a corresponding name for the <ph id="ph1">`value`</ph> parameter, it raises the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt; event before it returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Если метод IDesignerSerializationManager.GetName не удается найти соответствующее имя для <ph id="ph1">`value`</ph> параметр, он выдает &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;событий, прежде чем вернуть <ph id="ph2">`null`</ph>.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The object for which to retrieve the name.</source>
          <target state="translated">Объект, для которого требуется получить имя.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The name of the object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is unnamed.</source>
          <target state="translated">Имя объекта, или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если у объекта нет имени.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Доступ к этому свойству был вне сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets a serializer of the requested type for the specified object type.</source>
          <target state="translated">Возвращает сериализатор запрошенного типа для указанного типа объекта.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The type of the object to get the serializer for.</source>
          <target state="translated">Тип объекта для получения сериализатора.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The type of the serializer to retrieve.</source>
          <target state="translated">Тип получаемого сериализатора.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>An instance of the requested serializer, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no appropriate serializer can be located.</source>
          <target state="translated">Экземпляр запрошенного типа или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если соответствующий сериализатор не может размещаться на компьютере.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Gets a type of the specified name.</source>
          <target state="translated">Возвращает тип с указанным именем.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the type to load.</source>
          <target state="translated">Полное имя типа для загрузки.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>An instance of the type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type cannot be loaded.</source>
          <target state="translated">Экземпляр типа, или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если невозможно загрузить тип.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Доступ к этому свойству был вне сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt; property.</source>
          <target state="translated">Реализует &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;свойство.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the properties to be serialized.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> содержащий свойства для сериализации.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Removes a previously added serialization provider.</source>
          <target state="translated">Удаляет ранее добавленный сериализации поставщика.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IDesignerSerializationManager.RemoveSerializationProvider method removes a custom serialization provider that was previously added by a call to the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A&gt; method.</source>
          <target state="translated">Метод IDesignerSerializationManager.RemoveSerializationProvider удаляет пользовательский поставщик сериализации, добавленной ранее с помощью вызова &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Для удаления.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Used to report a recoverable error in serialization.</source>
          <target state="translated">Используемый для передачи устранимая ошибка в сериализации.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializers can be written to handle recoverable errors gracefully by calling the IDesignerSerializationManager.ReportError method with the error information.</source>
          <target state="translated">Сериализаторы могут быть написаны правильно обработать устранимой ошибки путем вызова метода IDesignerSerializationManager.ReportError сведениями об ошибках.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</source>
          <target state="translated">Диспетчер сериализации поддерживает отчетов список ошибок, после ее завершения, или он может вызывать исключение из этого метода и прерывает процесс сериализации.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serializer should continue after calling this function.</source>
          <target state="translated">Сериализатор возобновляет работу после вызова этой функции.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>IDesignerSerializationManager.ReportError adds the <ph id="ph1">`errorInformation`</ph> parameter to the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt; collection.</source>
          <target state="translated">Добавляет IDesignerSerializationManager.ReportError <ph id="ph1">`errorInformation`</ph> параметр &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;коллекции.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`errorInformation`</ph> is <ph id="ph2">`null`</ph>, no action is taken.</source>
          <target state="translated">Если <ph id="ph1">`errorInformation`</ph> — <ph id="ph2">`null`</ph>, никакие действия не выполняются.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>An object containing the error information, usually of type &lt;xref:System.String&gt; or &lt;xref:System.Exception&gt;.</source>
          <target state="translated">Объект, содержащий сведения об ошибке, обычно из типа &lt;xref:System.String&gt;или &lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Доступ к этому свойству был вне сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Sets the name for the specified object.</source>
          <target state="translated">Задает имя для указанного объекта.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IDesignerSerializationManager.SetName method provides a way to set the name of an existing object.</source>
          <target state="translated">Метод IDesignerSerializationManager.SetName предоставляет способ задания имени существующего объекта.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables creation of an instance of the object through a call to the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A&gt; method, avoiding the overhead of the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; method.</source>
          <target state="translated">Это позволяет создать экземпляр объекта путем вызова &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A&gt;метод, что позволяет избежать &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;метод.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The object to set the name.</source>
          <target state="translated">Объект, чтобы задать имя.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; used as the name of the object.</source>
          <target state="translated">Объект &lt;xref:System.String&gt;используется в качестве имени объекта.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Один или оба параметра, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The object specified by instance already has a name, or <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> is already used by another named object.</source>
          <target state="translated">Объект, указанный экземпляр уже имеет имя, или <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> уже используется другим именованным объектом.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">Доступ к этому свойству был вне сеанса сериализации.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the &lt;xref:System.IServiceProvider.GetService*&gt; method.</source>
          <target state="translated">Описание этого члена см. в разделе &lt;xref:System.IServiceProvider.GetService*&gt;метод.&lt;/xref:System.IServiceProvider.GetService*&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Этот член представляет явную реализацию члена интерфейса.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt; instance is cast to an &lt;xref:System.IServiceProvider&gt; interface.</source>
          <target state="translated">Он может использоваться только если &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;экземпляр приводится к &lt;xref:System.IServiceProvider&gt;интерфейс.&lt;/xref:System.IServiceProvider&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>An object that specifies the type of service object to get.</source>
          <target state="translated">Объект, указывающий тип получаемого объекта службы.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A service object of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Объект службы типа <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no service object of type <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">- или - <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если отсутствует объект службы типа <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Gets or sets a flag indicating whether the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt; method will verify that matching names refer to the same type.</source>
          <target state="translated">Возвращает или задает флаг, указывающий, является ли &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;метод убедитесь, что соответствующие имена ссылаются на тот же тип.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ValidateRecycledTypes property modifies the behavior of the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt; method when the &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt; property is <ph id="ph1">`true`</ph>, as detailed in the following table.</source>
          <target state="translated">Свойство ValidateRecycledTypes изменяет поведение &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;метод при &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;свойство <ph id="ph1">`true`</ph>, как описано в следующей таблице.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>|<ph id="ph1">`RecycleInstances`</ph><ph id="ph2">|</ph><ph id="ph3">`ValidateRecycledTypes`</ph>|Behavior of <ph id="ph4">`CreateInstance`</ph>|   |------------------------|-----------------------------|----------------------------------|   |<ph id="ph5">`false`</ph><ph id="ph6">|</ph><ph id="ph7">`true`</ph> or <ph id="ph8">`false`</ph>|Always create a new instance of the specified type|   |<ph id="ph9">`true`</ph><ph id="ph10">|</ph><ph id="ph11">`false`</ph>|If a matching instance is found it is returned, regardless of its type.|   |<ph id="ph12">`true`</ph><ph id="ph13">|</ph><ph id="ph14">`true`</ph>|If a matching instance is found, it is returned only if its type is the same as specified in the method call.|       ValidateRecycledTypes is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</source>
          <target state="translated">| <ph id="ph1">`RecycleInstances`</ph><ph id="ph2">|</ph><ph id="ph3">`ValidateRecycledTypes`</ph>| Поведение <ph id="ph4">`CreateInstance`</ph>|   |------------------------|-----------------------------|----------------------------------|   | <ph id="ph5">`false`</ph><ph id="ph6">|</ph><ph id="ph7">`true`</ph> or <ph id="ph8">`false`</ph>| Всегда создавать новый экземпляр заданного типа |   | <ph id="ph9">`true`</ph><ph id="ph10">|</ph><ph id="ph11">`false`</ph>| Если найден подходящий экземпляр возвращается, независимо от его типа. |   | <ph id="ph12">`true`</ph><ph id="ph13">|</ph><ph id="ph14">`true`</ph>| Если найден соответствующий экземпляр, он возвращается только в том случае, если его тип является таким же, как указано в вызове метода. |       ValidateRecycledTypes полезен для трансформация одного типа к другому, если они имеют похожие свойства, но совместно использовать интерфейс ни одного родительского элемента.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt; verifies types; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it does not.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;проверяет типы; в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Если это не так.&lt;/xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The serialization manager has an active serialization session.</source>
          <target state="translated">У диспетчера сериализации есть активный сеанс сериализации.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>