<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65db54b6aded2204767c5f002b421546038b5b64</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34ac00c20b8cd7e451cb1b89db18ce04cd82e01d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8c4fbe60444b9def5d8dca3adee4c1ed087fba5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enumerates the elements of a collection of <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Enumera os elementos de uma coleção de <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Enumeradores podem ser usados para ler os dados na coleção, mas eles não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador está posicionado antes do primeiro elemento na coleção.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.</source>
          <target state="translated">Nesta posição, o valor de retorno de &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;é indefinido.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before calling &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;.</source>
          <target state="translated">Portanto, você deve chamar &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;para avançar o enumerador para o primeiro elemento da coleção antes de chamar &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; &lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; returns the same object until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;Retorna o mesmo objeto até &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;é chamado.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; sets the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;Define o valor de retorno &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;para o próximo elemento.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;retorna <ph id="ph1">`false`</ph>.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; &lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Quando o enumerador está nessa posição, chamadas subsequentes para &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;também retornam <ph id="ph1">`false`</ph>.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.</source>
          <target state="translated">Se a última chamada &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;retornado <ph id="ph1">`false`</ph>, o valor de retorno de &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;é indefinido.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; &lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção permaneça inalterada.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e seu comportamento é indefinido.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the collection at the current position of the enumerator.</source>
          <target state="translated">Retorna o <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> na coleção na posição atual do enumerador.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of GetCurrent is undefined under any of the following conditions:      -   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; is called.</source>
          <target state="translated">O valor de retorno de GetCurrent não está definido em qualquer uma das seguintes condições:-o enumerador está posicionado antes do primeiro elemento na coleção, imediatamente depois que o enumerador é criado ou &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;é chamado.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before calling GetCurrent.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de chamar GetCurrent.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The last call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">-A última chamada a &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;retornado <ph id="ph1">`false`</ph>, que indica o final da coleção.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</source>
          <target state="translated">-O enumerador é invalidado devido a alterações feitas na coleção, como adicionar, modificar ou excluir elementos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetCurrent returns the same object until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; is called.</source>
          <target state="translated">GetCurrent retorna o mesmo objeto até &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;é chamado.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; sets the return value of GetCurrent to the next element.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;Define o valor de retorno de GetCurrent para o próximo elemento.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the collection at the current position of the enumerator.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> na coleção na posição atual do enumerador.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Avança o enumerador para o próximo elemento da coleção.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after the &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; method is called, an enumerator is positioned before the first element of the collection.</source>
          <target state="translated">Após a criação de um enumerador ou depois do &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;método é chamado, um enumerador está posicionado antes do primeiro elemento da coleção.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first call to the MoveNext method moves the enumerator to the first element of the collection.</source>
          <target state="translated">A primeira chamada para o método MoveNext move o enumerador para o primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se MoveNext passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e retorna MoveNext <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to MoveNext also return <ph id="ph1">`false`</ph> until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; is called.</source>
          <target state="translated">Quando o enumerador está nessa posição, chamadas subsequentes para MoveNext também retornam <ph id="ph1">`false`</ph> até &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;é chamado.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção permaneça inalterada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para MoveNext ou &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;lança um &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o enumerador foi avançado com êxito para o próximo elemento; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se o enumerador tiver passado o final da coleção.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">A coleção foi modificada depois que o enumerador foi criado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Define o enumerador como sua posição inicial, que é antes do primeiro elemento na coleção.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you call Reset, the value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.</source>
          <target state="translated">Depois de chamar redefinir, o valor de &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;é indefinido.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; method to move the enumerator to the first element of the collection.</source>
          <target state="translated">Chamar o &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;método para mover o enumerador para o primeiro elemento da coleção.&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção permaneça inalterada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; or Reset throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;ou redefinição lança um &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">A coleção foi modificada depois que o enumerador foi criado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>