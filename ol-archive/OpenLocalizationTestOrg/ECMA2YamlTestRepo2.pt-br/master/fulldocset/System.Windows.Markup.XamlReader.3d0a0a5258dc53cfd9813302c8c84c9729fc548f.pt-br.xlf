<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6268fc94480a4936a59717d3dc614a6d4975ccec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.XamlReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">974ec307b3512b7e8acac3fc2c82475555d82dac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa63fc760c757e6f8ed203edf588d497bc9712ca</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reads XAML input and creates an object graph, using the WPF default XAML reader and an associated XAML object writer.</source>
          <target state="translated">Lê a entrada XAML e cria um gráfico de objeto, usando o leitor XAML WPF padrão e um gravador de XAML do objeto associado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronous &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; methods are static, but the asynchronous &lt;xref:System.Windows.Markup.XamlReader.LoadAsync%2A&gt; methods are not static and require an instance of the XamlReader class to use.</source>
          <target state="translated">Síncronos &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;métodos são estáticos, mas o assíncrona &lt;xref:System.Windows.Markup.XamlReader.LoadAsync%2A&gt;métodos não são estáticos e requer uma instância da classe XamlReader para uso.&lt;/xref:System.Windows.Markup.XamlReader.LoadAsync%2A&gt; &lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output of the <ph id="ph1">`Load`</ph> methods is a single object, which represents the root object of a created object tree or object graph.</source>
          <target state="translated">A saída de <ph id="ph1">`Load`</ph> métodos é um único objeto, que representa o objeto raiz de uma árvore de objeto criado ou um gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Object graphs that are created by XamlReader are typically added to the existing object tree of a WPF application at run time.</source>
          <target state="translated">Gráficos de objeto que são criados por XamlReader normalmente são adicionados à árvore de objetos existentes de um aplicativo do WPF no tempo de execução.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise the new object graph is considered disconnected for purposes of the WPF application model.</source>
          <target state="translated">Caso contrário, o novo gráfico de objeto é considerado desconectado para fins do modelo de aplicativo do WPF.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that it does not render, and cannot be accessed using any of the object tree techniques as applied to the WPF application's main object tree (for example, the APIs &lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;, &lt;xref:System.Windows.LogicalTreeHelper&gt;, &lt;xref:System.Windows.Media.VisualTreeHelper&gt;).</source>
          <target state="translated">Isso significa que ele não renderizar e não pode ser acessados usar as técnicas de árvore de objeto como aplicada à árvore de objeto principal do aplicativo do WPF (por exemplo, as APIs &lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;, &lt;xref:System.Windows.LogicalTreeHelper&gt;, &lt;xref:System.Windows.Media.VisualTreeHelper&gt;).&lt;/xref:System.Windows.Media.VisualTreeHelper&gt; &lt;/xref:System.Windows.LogicalTreeHelper&gt; &lt;/xref:System.Windows.FrameworkElement.FindName%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on object tree concepts, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre os conceitos de árvore de objeto, consulte <bpt id="p1">[</bpt>árvores no WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>XamlReader supports the following primary scenarios:      -   <bpt id="p1">**</bpt>Cloning/object factory<ept id="p1">**</ept>: Without additional mechanisms, a reference type generally cannot be included in more than one position in a WPF object tree.</source>
          <target state="translated">XamlReader suporta os seguintes cenários principais:- <bpt id="p1">**</bpt>clonagem/fábrica<ept id="p1">**</ept>: sem mecanismos adicionais, um tipo de referência geralmente não pode ser incluído em mais de uma posição em uma árvore de objetos do WPF.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>(Examples of additional mechanisms that offer support for sharing or re-use in WPF include objects that are based on &lt;xref:System.Windows.Freezable&gt;, or support for commonly shareable objects such as &lt;xref:System.Windows.Media.Brush&gt; that are referenced as an item from a &lt;xref:System.Windows.ResourceDictionary&gt;.) One way to clone an object that is already in the object tree is to serialize the object using &lt;xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">(Exemplos de mecanismos adicionais que oferecem suporte para o compartilhamento ou reutilizar em WPF objetos baseados em &lt;xref:System.Windows.Freezable&gt;, ou suporte para objetos normalmente podem ser compartilhados como &lt;xref:System.Windows.Media.Brush&gt;que são referenciados como um item de um &lt;xref:System.Windows.ResourceDictionary&gt;.)&lt;/xref:System.Windows.ResourceDictionary&gt; &lt;/xref:System.Windows.Media.Brush&gt; &lt;/xref:System.Windows.Freezable&gt; É uma maneira para clonar um objeto que já está na árvore de objetos serializar o objeto usando &lt;xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You then use the serialized string as input for a call to &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;, with a stream or &lt;xref:System.Xml.XmlReader&gt; as an intermediary.</source>
          <target state="translated">Em seguida, a cadeia de caracteres serializada é usada como entrada para uma chamada para &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;, com um fluxo ou &lt;xref:System.Xml.XmlReader&gt;como um intermediário.&lt;/xref:System.Xml.XmlReader&gt; &lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Constructing objects based on just-in-time information<ept id="p1">**</ept>: There are often other ways to have late-binding or user-supplied input change the state of existing objects.</source>
          <target state="translated">- <bpt id="p1">**</bpt>Construindo objetos com base nas informações de just-in-time<ept id="p1">**</ept>: frequentemente, há outras maneiras de ter entrada de associação tardia ou fornecido pelo usuário a alterar o estado de objetos existentes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example you could use the same value to set more than one property, or use data binding.</source>
          <target state="translated">Por exemplo você pode usar o mesmo valor para definir mais de uma propriedade ou usar associação de dados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>But if you have a scenario where even the type of object to create is only determinable at run time or with user interaction, then creating such an object by building up a string for &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; input is often a useful technique.</source>
          <target state="translated">Mas se você tiver um cenário em que até mesmo o tipo de objeto para criar só está determinável em tempo de execução ou a interação do usuário, criando esse tipo de objeto, criando uma cadeia de caracteres para &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;entrada geralmente é uma técnica útil.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Using existing resource techniques<ept id="p1">**</ept>: The &lt;xref:System.IO.Stream&gt; type is used frequently in other frameworks or technologies for transferring data or objects across application boundaries or for similar situations.</source>
          <target state="translated">- <bpt id="p1">**</bpt>Usando técnicas de recurso existente<ept id="p1">**</ept>: O &lt;xref:System.IO.Stream&gt;tipo é usado frequentemente em outras estruturas ou tecnologias para a transferência de dados ou objetos além dos limites do aplicativo ou em situações semelhantes.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then use the &lt;xref:System.IO.Stream&gt; techniques to store or obtain XAML-formatted data that you eventually use to create an object as part of your application.</source>
          <target state="translated">Você pode usar o &lt;xref:System.IO.Stream&gt;técnicas para armazenar ou obter dados formatados em XAML que você poderá usar para criar um objeto como parte do seu aplicativo.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Fixed documents:<ept id="p1">**</ept> Your application might load local or downloaded XPS documents for inclusion in a WPF application object tree and UI.</source>
          <target state="translated">- <bpt id="p1">**</bpt>Documentos fixos:<ept id="p1">**</ept> seu aplicativo pode carregar documentos XPS de local ou baixados para inclusão em uma árvore de objetos de aplicativo do WPF e a interface do usuário.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This documentation sometimes describes an object graph, as opposed to an object tree.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;, Às vezes, esta documentação descreve um gráfico de objeto, em vez de uma árvore de objetos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A strict parent-child relationship does not always exist in the run time object relationships of a run time WPF application, so an object graph is a more widely applicable terminology.</source>
          <target state="translated">Uma relação pai-filho estrita não sempre existem nas relações de objeto de tempo de execução de um aplicativo do WPF de tempo de execução, portanto, um gráfico de objeto é uma terminologia mais amplamente aplicável.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because WPF also includes two different tree conceptualization APIs (&lt;xref:System.Windows.LogicalTreeHelper&gt;, &lt;xref:System.Windows.Media.VisualTreeHelper&gt;) the tree metaphor still applies adequately to most real-world cases in WPF.</source>
          <target state="translated">No entanto, como WPF também inclui conceituação passando árvore diferente duas APIs (&lt;xref:System.Windows.LogicalTreeHelper&gt;, &lt;xref:System.Windows.Media.VisualTreeHelper&gt;) a metáfora de árvore ainda se aplica adequado para a maioria dos casos reais no WPF.&lt;/xref:System.Windows.Media.VisualTreeHelper&gt; &lt;/xref:System.Windows.LogicalTreeHelper&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>From the XAML language perspective however, the object graph is often the best way to think about how objects are created out of XAML, because the XAML language itself does not necessarily specify helper class methodologies that bring the relationships more into a tree structure again.</source>
          <target state="translated">Da perspectiva de linguagem XAML no entanto, o gráfico de objeto é geralmente a melhor maneira de pensar sobre como os objetos são criados fora do XAML, como a linguagem XAML em si não especifica necessariamente metodologias de classe auxiliar que trazem as relações mais em uma estrutura de árvore novamente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Code Access Security, Loose XAML, and XamlReader    XAML is a markup language that directly represents object instantiation and execution.</source>
          <target state="translated">Segurança de acesso do código XAML livre e XamlReader XAML é uma linguagem de marcação que representa diretamente a instanciação do objeto e execução.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, elements created in XAML have the same ability to interact with system resources (network access, file system IO, for example) as the equivalent generated code does.</source>
          <target state="translated">Portanto, elementos criados em XAML têm a mesma capacidade de interagir com recursos do sistema (acesso à rede, e/s com o sistema de arquivos, por exemplo) que o equivalente gerado código faz.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> supports the <ph id="ph2">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> security framework <ph id="ph3">[!INCLUDE[TLA#tla_cas](~/add/includes/tlasharptla-cas-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>oferece suporte a <ph id="ph2">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> estrutura de segurança <ph id="ph3">[!INCLUDE[TLA#tla_cas](~/add/includes/tlasharptla-cas-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> content running in the internet zone has reduced execution permissions.</source>
          <target state="translated">Isso significa que <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> conteúdo executado na zona da internet tem permissões de execução reduzidas.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Loose XAML" (pages of noncompiled XAML interpreted at load time by a XAML viewer) and <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph> are usually run in this internet zone and use the same permission set.</source>
          <target state="translated">"Perder XAML" (páginas de XAML não compilado interpretado em tempo de carregamento por um visualizador XAML) e <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph> geralmente são executados nesta zona da internet e usar o mesmo conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, XAML loaded in to a fully trusted application has the same access to the system resources as the hosting application does.</source>
          <target state="translated">No entanto, o XAML carregado em um aplicativo totalmente confiável tem o mesmo acesso aos recursos do sistema que o aplicativo de hospedagem.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>WPF Partial Trust Security<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>WPF Partial Trust Security<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implications of these statements for XamlReader is that your application design must make trust decisions about the XAML you decide to load.</source>
          <target state="translated">As implicações dessas instruções para XamlReader é que seu design de aplicativo deve fazer as decisões de confiança sobre o XAML decidir carregar.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are loading XAML that is not trusted, consider implementing your own sandboxing technique for how you load the resulting object graph.</source>
          <target state="translated">Se você estiver carregando XAML que não é confiável, considere implementar seu próprio técnica no modo seguro para como carregar o gráfico de objeto resultante.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>XamlReader can also be called by partial trust code.</source>
          <target state="translated">XamlReader também pode ser chamado por código parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, Internet security zone is applied for code access security.</source>
          <target state="translated">Nesse caso, a zona de segurança é aplicada para a segurança de acesso do código.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If anything in the loaded XAML is invalid under Internet security zone, a XAML parse exception is thrown.</source>
          <target state="translated">Se qualquer coisa no XAML carregado é inválida na zona de segurança da Internet, é gerada uma exceção de análise XAML.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under XBAP and other cases that are partial trust at the platform level, where XamlReader is part of the execution, you get the same exception behavior as with explicit partial trust calls.</source>
          <target state="translated">Em outros casos que são de confiança parcial no nível da plataforma, onde XamlReader faz parte da execução, e XBAP você obter o mesmo comportamento de exceção com chamadas explícitas de confiança parcial.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF XAML, XAML Readers/Writers, and XAML Language Versioning    <ph id="ph1">[!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]</ph> includes language features such as  and .</source>
          <target state="translated">WPF XAML, leitores de XAML/gravadores e controle de versão de linguagem XAML <ph id="ph1">[!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]</ph> inclui recursos de linguagem, como e.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use signatures of <ph id="ph1">`Load`</ph> or <ph id="ph2">`Parse`</ph> to load XAML that uses these features.</source>
          <target state="translated">Você pode usar assinaturas de <ph id="ph1">`Load`</ph> ou <ph id="ph2">`Parse`</ph> para carregar o XAML que usa esses recursos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, those language features are not supported for XAML that needs to be markup compiled (such as XAML for the <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> build action in a WPF application, or any XAML that involves the markup compile task in the build actions).</source>
          <target state="translated">No entanto, esses recursos de idioma não há suporte para XAML que deve ser compilada com marcação (como o XAML para o <bpt id="p1">**</bpt>página<ept id="p1">**</ept> ação em um aplicativo do WPF ou qualquer XAML que envolve a tarefa de compilação de marcação nas ações de compilação de compilação).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF types and the WPF technology in general support concepts that rely on access to WPF internals.</source>
          <target state="translated">Tipos WPF e a tecnologia WPF em geral oferecem suporte a conceitos que dependem do acesso aos recursos internos do WPF.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, how WPF implements dependency properties relies on internal techniques for efficient type-member lookup.</source>
          <target state="translated">Por exemplo, como o WPF implementa propriedades de dependência depende de técnicas internas para pesquisa de membro de tipo eficiente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to these internals is enabled by the XAML reading and writing APIs provided in &lt;xref:System.Windows.Markup.XamlWriter&gt; and XamlReader from the &lt;xref:System.Windows.Markup&gt; namespace and PresentationFramework assembly.</source>
          <target state="translated">Acesso a esses recursos internos é habilitado por XAML lendo e gravando APIs fornecidas em &lt;xref:System.Windows.Markup.XamlWriter&gt;e em XamlReader do &lt;xref:System.Windows.Markup&gt;namespace e assembly PresentationFramework.&lt;/xref:System.Windows.Markup&gt; &lt;/xref:System.Windows.Markup.XamlWriter&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the lower-level XAML readers and XAML writers from the System.Xaml assembly (classes based on &lt;xref:System.Xaml.XamlReader?displayProperty=fullName&gt;, &lt;xref:System.Xaml.XamlWriter?displayProperty=fullName&gt;) do not have access to the WPF internals.</source>
          <target state="translated">No entanto, os leitores XAML de nível inferior e autores de XAML do assembly System. XAML (classes com base em &lt;xref:System.Xaml.XamlReader?displayProperty=fullName&gt;, &lt;xref:System.Xaml.XamlWriter?displayProperty=fullName&gt;) não tem acesso para a parte interna do WPF.&lt;/xref:System.Xaml.XamlWriter?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no dependency from System.Xaml to any WPF-specific assembly.</source>
          <target state="translated">Não há nenhuma dependência de System. XAML para qualquer conjunto específico de WPF.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Without access to the WPF internals, System.Xaml readers and writers cannot correctly load or save all WPF types, or types based on WPF types.</source>
          <target state="translated">Sem acesso a itens internos WPF, gravadores e leitores de System. XAML não é possível carregar corretamente ou salvar WPF todos os tipos ou tipos com base nos tipos WPF.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, the System.Xaml readers and writers do not understand concepts such as the WPF dependency property backing property store, or all the specifics of how WPF uses styles, resource dictionaries and templates.</source>
          <target state="translated">Em particular, o System. XAML leitores e gravadores não entende conceitos como a propriedade de dependência do WPF fazendo o armazenamento de propriedades ou todas as especificações de como o WPF usa estilos, dicionários de recursos e modelos.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore you have a choice to make:      -   If you are loading WPF types, and/or you are using XAML in BAML form in any way, use the PresentationFramework XAML readers and XAML writers.</source>
          <target state="translated">Portanto, você pode escolher fazer: - se você estiver carregando tipos WPF e/ou você estiver usando o XAML em forma BAML de qualquer forma, use os leitores PresentationFramework XAML e gravadores XAML.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If you are not relying on any WPF types or the BAML form of XAML, and are not using another specific technology's XAML reader or XAML writer implementation for reasons that are specific to that framework, use the System.Xaml XAML readers and XAML writers.</source>
          <target state="translated">-Se você não depender de qualquer tipo WPF ou o formulário BAML de XAML e não estiver usando o leitor XAML ou a implementação de gravador XAML outra tecnologia específica por razões que são específicos para a essa estrutura, use os leitores de System XAML e gravadores XAML.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>System.Xaml Backing Implementation in .NET 4    XamlReader is the callable API surface for the WPF framework-level XAML parser.</source>
          <target state="translated">System. XAML fazendo implementação em XamlReader do .NET 4 é a superfície de API que pode ser chamada para o analisador XAML de nível de framework do WPF.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same underlying XAML parser also performs the run-time XAML loading and parsing for WPF applications that target <ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]</ph>.</source>
          <target state="translated">O analisador XAML subjacente mesmo também executa o XAML do tempo de execução, carregando e analisando o destino para aplicativos do WPF <ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph> e <ph id="ph2">[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are targeting <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, the external API is the same, but parts of the implementation are built on the <ph id="ph2">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> general XAML implementation in the System.Xaml assembly, which improves many of the technical and reporting aspects of parsing XAML.</source>
          <target state="translated">Se estiver direcionando <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, a API externa é o mesmo, mas partes da implementação baseiam-se no <ph id="ph2">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementação geral do XAML no assembly System. XAML, o que melhora a muitos aspectos técnicos e relatórios de análise de XAML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Targeting <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> necessarily entails including System.Xaml as a reference, and details of implementation such as the exceptions reported may come from System.Xaml defined types.</source>
          <target state="translated">Direcionamento <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> necessariamente tipos definidos de infere incluindo System. XAML como uma referência e os detalhes de implementação, como as exceções relatadas podem vir de System. XAML.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_XamlReader"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_XamlReader"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Uso de texto XAML</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Aborts the current asynchronous load operation, if there is an asynchronous load operation pending.</source>
          <target state="translated">Anula a operação de carregamento assíncrono atual, se houver uma operação de carregamento assíncrono pendente.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>CancelAsync is an asynchronous operation; therefore, some loading may occur before the operation is aborted.</source>
          <target state="translated">CancelAsync é uma operação assíncrona; Portanto, alguns carregamento pode ocorrer antes que a operação é anulada.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the WPF schema context settings for a <bpt id="p2">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna um <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que representa as configurações de contexto de esquema do WPF para um <bpt id="p2">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the WPF schema context settings for a <bpt id="p2">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que representa as configurações de contexto de esquema do WPF para um <bpt id="p2">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.IO.Stream&gt; and returns an &lt;xref:System.Object&gt; that is the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado na &lt;xref:System.IO.Stream&gt;e retorna um &lt;xref:System.Object&gt;que é a raiz da árvore de objetos correspondentes.&lt;/xref:System.Object&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The XAML to load, in stream form.</source>
          <target state="translated">O XAML para carregar, na forma de fluxo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The object at the root of the created object tree.</source>
          <target state="translated">O objeto na raiz da árvore de objeto criado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Reads the XAML input through a provided <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and returns an object that is the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML por meio de um fornecido <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e retorna um objeto que é a raiz da árvore de objetos correspondentes.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input &lt;xref:System.Xaml.XamlReader&gt; can be &lt;xref:System.Windows.Baml2006.Baml2006Reader&gt;.</source>
          <target state="translated">A entrada &lt;xref:System.Xaml.XamlReader&gt;pode ser &lt;xref:System.Windows.Baml2006.Baml2006Reader&gt;.&lt;/xref:System.Windows.Baml2006.Baml2006Reader&gt; &lt;/xref:System.Xaml.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is how you can load BAML at run time, or for localization tool purposes.</source>
          <target state="translated">Isso é como você pode carregar BAML em tempo de execução, ou para fins de ferramenta de localização.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This is expected to be initialized with input XAML.</source>
          <target state="translated">Isso deve ser inicializado com a entrada XAML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The object that is the root of the created object tree.</source>
          <target state="translated">O objeto que é a raiz da árvore de objeto criado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.Xml.XmlReader&gt; and returns an object that is the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado na &lt;xref:System.Xml.XmlReader&gt;e retorna um objeto que é a raiz da árvore de objetos correspondentes.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; that has already loaded the XAML input to load in XML form.</source>
          <target state="translated">O &lt;xref:System.Xml.XmlReader&gt;que já tenha carregado o XAML para carregar no formulário XML de entrada.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The object that is the root of the created object tree.</source>
          <target state="translated">O objeto que é a raiz da árvore de objeto criado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.IO.Stream&gt; and returns an object that is the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado na &lt;xref:System.IO.Stream&gt;e retorna um objeto que é a raiz da árvore de objetos correspondentes.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The stream that contains the XAML input to load.</source>
          <target state="translated">O fluxo que contém o XAML de entrada ao carregar.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Context information used by the parser.</source>
          <target state="translated">Informações de contexto usadas pelo analisador.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The object that is the root of the created object tree.</source>
          <target state="translated">O objeto que é a raiz da árvore de objeto criado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;parserContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;parserContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.IO.Stream&gt; and returns the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado na &lt;xref:System.IO.Stream&gt;e retorna a raiz da árvore de objetos correspondentes.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>An asynchronous XAML load operation will initially return an object that is purely the root object.</source>
          <target state="translated">Uma operação assíncrona de carregamento XAML inicialmente retornará um objeto que é exclusivamente o objeto raiz.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</source>
          <target state="translated">De forma assíncrona, análise de XAML, em seguida, continua e quaisquer objetos filho são preenchidos na raiz do.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</source>
          <target state="translated">Isso está em contraste com o XAML WPF típico processamento comportamento e sua interação com os conceitos do WPF do tempo de vida do objeto.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</source>
          <target state="translated">Na interação típica (não assíncronas), todas as propriedades de um objeto, incluindo todas as coleções filho são preenchidas antes de retornar um elemento e relatá-las como carregado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</source>
          <target state="translated">Esse comportamento é igual a uma metodologia de baixo para cima para criar a árvore de onde o objeto raiz é o último objeto se torne disponível.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically would assign the returned object to some location in your WPF application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</source>
          <target state="translated">Você normalmente atribua o objeto retornado para um local na árvore de objetos do aplicativo WPF, com o conhecimento de conteúdo pode ainda ser preencher e pode fazer com que as atualizações de layout incrementais se todo o conteúdo é exposto como parte da interface do usuário.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt; is handled.</source>
          <target state="translated">Por isso é típico para isolar ou virtualização de todos os objetos carregados de forma assíncrona do XAML e usar lógica específica do aplicativo ou o estado do aplicativo a ser notificado quando &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;é tratado.&lt;/xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for LoadAsync to load XAML input asynchronously, the root element in the XAML input must contain the attribute and value <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</source>
          <target state="translated">Para LoadAsync carregar a entrada XAML de forma assíncrona, o elemento raiz no XAML entrada deve conter o atributo e o valor <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value is treated as case sensitive.</source>
          <target state="translated">O valor é tratado como maiusculas e minúsculas.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XAML input root does not contain <ph id="ph1">`x:SynchronousMode="Async"`</ph>, no exception is thrown, and the call is processed as a synchronous load (see &lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29&gt;).</source>
          <target state="translated">Se a raiz de entrada de XAML não contém <ph id="ph1">`x:SynchronousMode="Async"`</ph>, nenhuma exceção é lançada e a chamada é processada como uma carga síncrona (consulte &lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29&gt;).&lt;/xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one asynchronous load operation per instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class can be performed at a time.</source>
          <target state="translated">Apenas uma operação de carregamento assíncrono por instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe pode ser executada por vez.&lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one asynchronous operation is attempted on the same instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">Se mais de uma operação assíncrona é tentada na mesma instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe um &lt;xref:System.InvalidOperationException&gt;é gerada.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The stream containing the XAML input to load.</source>
          <target state="translated">O fluxo que contém o XAML de entrada ao carregar.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The object that is the root of the created object tree.</source>
          <target state="translated">O objeto que é a raiz da árvore de objeto criado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Multiple load operations are pending concurrently with the same <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Várias operações de carregamento estão pendentes simultaneamente com o mesmo <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.Xml.XmlReader&gt; and returns the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado na &lt;xref:System.Xml.XmlReader&gt;e retorna a raiz da árvore de objetos correspondentes.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>An asynchronous XAML load operation will initially return an object that is purely the root object.</source>
          <target state="translated">Uma operação assíncrona de carregamento XAML inicialmente retornará um objeto que é exclusivamente o objeto raiz.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</source>
          <target state="translated">De forma assíncrona, análise de XAML, em seguida, continua e quaisquer objetos filho são preenchidos na raiz do.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</source>
          <target state="translated">Isso está em contraste com o XAML WPF típico processamento comportamento e sua interação com os conceitos do WPF do tempo de vida do objeto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</source>
          <target state="translated">Na interação típica (não assíncronas), todas as propriedades de um objeto, incluindo todas as coleções filho são preenchidas antes de retornar um elemento e relatá-las como carregado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</source>
          <target state="translated">Esse comportamento é igual a uma metodologia de baixo para cima para criar a árvore de onde o objeto raiz é o último objeto se torne disponível.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically would assign the returned object from LoadAsync to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</source>
          <target state="translated">Você normalmente deve atribuir o objeto retornado de LoadAsync em um local na árvore de objetos do aplicativo, com o conhecimento de conteúdo pode ainda ser preencher e pode fazer com que as atualizações de layout incrementais se todo o conteúdo é exposto como parte da interface do usuário.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt; is handled.</source>
          <target state="translated">Por isso é típico para isolar ou virtualização de todos os objetos carregados de forma assíncrona do XAML e usar lógica específica do aplicativo ou o estado do aplicativo a ser notificado quando &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;é tratado.&lt;/xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for LoadAsync to load XAML input asynchronously, the root element in the XAML markup must contain the attribute and value <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</source>
          <target state="translated">Para que LoadAsync carregar XAML de entrada de forma assíncrona, o elemento raiz na marcação XAML deve conter o atributo e o valor <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value is treated as case sensitive.</source>
          <target state="translated">O valor é tratado como maiusculas e minúsculas.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XAML markup root does not contain <ph id="ph1">`x:SynchronousMode="Async"`</ph>, no exception is thrown, and the call is instead processed as a synchronous load (see &lt;xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29&gt;).</source>
          <target state="translated">Se a raiz de marcação XAML não contém <ph id="ph1">`x:SynchronousMode="Async"`</ph>, nenhuma exceção é lançada e a chamada é processada em vez disso, como uma carga síncrona (consulte &lt;xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29&gt;).&lt;/xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one asynchronous load operation per instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class can be performed at a time.</source>
          <target state="translated">Apenas uma operação de carregamento assíncrono por instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe pode ser executada por vez.&lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one asynchronous operation is attempted on the same instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">Se mais de uma operação assíncrona é tentada na mesma instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe um &lt;xref:System.InvalidOperationException&gt;é gerada.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An existing  &lt;xref:System.Xml.XmlReader&gt; that has already loaded/read the XAML input.</source>
          <target state="translated">Um existente &lt;xref:System.Xml.XmlReader&gt;que tem já carregado/ler a entrada XAML.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The root of the created object tree.</source>
          <target state="translated">A raiz da árvore de objeto criado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Multiple load operations are performed concurrently with the same <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Várias operações de carga são executadas simultaneamente com o mesmo <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified &lt;xref:System.IO.Stream&gt; and returns the root of the corresponding object tree.</source>
          <target state="translated">Lê a entrada XAML especificado na &lt;xref:System.IO.Stream&gt;e retorna a raiz da árvore de objetos correspondentes.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>An asynchronous XAML load operation will initially return an object that is purely the root object.</source>
          <target state="translated">Uma operação assíncrona de carregamento XAML inicialmente retornará um objeto que é exclusivamente o objeto raiz.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</source>
          <target state="translated">De forma assíncrona, análise de XAML, em seguida, continua e quaisquer objetos filho são preenchidos na raiz do.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</source>
          <target state="translated">Isso está em contraste com o XAML WPF típico processamento comportamento e sua interação com os conceitos do WPF do tempo de vida do objeto.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</source>
          <target state="translated">Na interação típica (não assíncronas), todas as propriedades de um objeto, incluindo todas as coleções filho são preenchidas antes de retornar um elemento e relatá-las como carregado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</source>
          <target state="translated">Esse comportamento é igual a uma metodologia de baixo para cima para criar a árvore de onde o objeto raiz é o último objeto se torne disponível.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically would assign the returned object to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</source>
          <target state="translated">Você normalmente atribua o objeto retornado para um local na árvore de objetos do aplicativo, com o conhecimento de conteúdo pode ainda ser preencher e pode fazer com que as atualizações de layout incrementais se todo o conteúdo é exposto como parte da interface do usuário.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt; is handled.</source>
          <target state="translated">Por isso é típico para isolar ou virtualização de todos os objetos carregados de forma assíncrona do XAML e usar lógica específica do aplicativo ou o estado do aplicativo a ser notificado quando &lt;xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;é tratado.&lt;/xref:System.Windows.Markup.XamlReader.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for LoadAsync to load markup asynchronously, the root element in the XAML markup must contain the attribute and value <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</source>
          <target state="translated">Para LoadAsync carregar marcação de forma assíncrona, o elemento raiz na marcação XAML deve conter o atributo e o valor <ph id="ph1">`x:SynchronousMode="Async"`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value is treated as case sensitive.</source>
          <target state="translated">O valor é tratado como maiusculas e minúsculas.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XAML markup root does not contain <ph id="ph1">`x:SynchronousMode="Async"`</ph>, no exception is thrown, and the call is processed as a synchronous load (see &lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29&gt;).</source>
          <target state="translated">Se a raiz de marcação XAML não contém <ph id="ph1">`x:SynchronousMode="Async"`</ph>, nenhuma exceção é lançada e a chamada é processada como uma carga síncrona (consulte &lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29&gt;).&lt;/xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one asynchronous load operation per instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class can be performed at a time.</source>
          <target state="translated">Apenas uma operação de carregamento assíncrono por instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe pode ser executada por vez.&lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one asynchronous operation is attempted on the same instance of the &lt;xref:System.Windows.Markup.XamlReader&gt; class an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">Se mais de uma operação assíncrona é tentada na mesma instância do &lt;xref:System.Windows.Markup.XamlReader&gt;classe um &lt;xref:System.InvalidOperationException&gt;é gerada.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A stream containing the XAML input to load.</source>
          <target state="translated">Entrada de um fluxo que contém o XAML para carregar.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Context information used by the parser.</source>
          <target state="translated">Informações de contexto usadas pelo analisador.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The root of the created object tree.</source>
          <target state="translated">A raiz da árvore de objeto criado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Multiple load operations are performed concurrently with the same <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Várias operações de carga são executadas simultaneamente com o mesmo <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous load operation completes.</source>
          <target state="translated">Ocorre quando uma operação de carregamento assíncrono é concluído.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>LoadCompleted is also raised when an asynchronous load operation aborts.</source>
          <target state="translated">LoadCompleted também é gerado quando anula uma operação de carregamento assíncrono.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Reads the XAML input in the specified text string and returns an object that corresponds to the root of the specified markup.</source>
          <target state="translated">Lê a entrada XAML na cadeia de caracteres de texto especificado e retorna um objeto que corresponde à raiz da marcação especificada.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation calls &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; internally after creating a stream from the string.</source>
          <target state="translated">As chamadas de implementação &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;internamente após a criação de um fluxo de cadeia de caracteres.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; for additional information such as possible exceptions.</source>
          <target state="translated">Consulte &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;para obter informações adicionais, como possíveis exceções.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The input XAML, as a single text string.</source>
          <target state="translated">A entrada XAML, como uma cadeia de caracteres de texto simples.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The root of the created object tree.</source>
          <target state="translated">A raiz da árvore de objeto criado.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Reads the XAML markup in the specified text string (using a specified <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) and returns an object that corresponds to the root of the specified markup.</source>
          <target state="translated">Lê a marcação XAML na cadeia de caracteres de texto especificado (usando um especificado <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>) e retorna um objeto que corresponde à raiz da marcação especificada.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation calls &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; internally after creating a stream from the string.</source>
          <target state="translated">As chamadas de implementação &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;internamente após a criação de um fluxo de cadeia de caracteres.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; for additional information such as possible exceptions.</source>
          <target state="translated">Consulte &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;para obter informações adicionais, como possíveis exceções.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The input XAML, as a single text string.</source>
          <target state="translated">A entrada XAML, como uma cadeia de caracteres de texto simples.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Context information used by the parser.</source>
          <target state="translated">Informações de contexto usadas pelo analisador.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The root of the created object tree.</source>
          <target state="translated">A raiz da árvore de objeto criado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>