<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfd1a485c7cd423bac8fc1edeb446bfc906a0ac4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.XmlSchemaComplexType.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05aa106b872305607476746a07a68da6bc4defc8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">702a52072c38fb3df461125f5d44a8c7b43e67e6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element from XML Schema as specified by the World Wide Web Consortium (W3C).</source>
          <target state="translated">Representa o <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> elemento do esquema XML, conforme especificado pelo World Wide Web Consortium (W3C).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class defines a complex type that determines the set of attributes and content of an element.</source>
          <target state="translated">Essa classe define um tipo complexo que determina o conjunto de atributos e conteúdo de um elemento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element can be declared with a type attribute that refers to a <ph id="ph1">`complexType`</ph> element that defines the structure, content, and attributes of that element.</source>
          <target state="translated">Um elemento pode ser declarado com um atributo de tipo que se refere a um <ph id="ph1">`complexType`</ph> elemento que define a estrutura, conteúdo e atributos do elemento.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaComplexType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaComplexType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets the value for the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> component of the complex type.</source>
          <target state="translated">Obtém ou define o valor para o <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> componente do tipo complexo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is not null, the complex type can contain any attributes from the namespaces specified in the &lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;.</source>
          <target state="translated">Se essa propriedade não for null, o tipo complexo pode conter quaisquer atributos dos namespaces especificados em &lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> component of the complex type.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> componente do tipo complexo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the collection of attributes for the complex type.</source>
          <target state="translated">Obtém a coleção de atributos para o tipo complexo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Contains <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttributeGroupRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">Contém <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttributeGroupRef"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> classes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the collection of all the complied attributes of this complex type and its base types.</source>
          <target state="translated">Obtém a coleção de todos os atributos compiladas deste tipo complexo e seus tipos base.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a combination of all the attributes from the <ph id="ph1">`Attributes`</ph> property from each type in the hierarchy.</source>
          <target state="translated">Por exemplo, uma combinação de todos os atributos do <ph id="ph1">`Attributes`</ph> propriedade de cada tipo na hierarquia.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is read-only.</source>
          <target state="translated">O valor dessa propriedade é somente leitura.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has the value after the schema has been successfully compiled to determine the complete attribute set that is allowed in an instance document.</source>
          <target state="translated">Essa propriedade tem o valor depois que o esquema tiver sido compilado com êxito para determinar o conjunto completo de atributo que é permitido em um documento de instância.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The collection of all the attributes from this complex type and its base types.</source>
          <target state="translated">A coleção de todos os atributos deste tipo complexo e seus tipos base.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_AttributeUses" name="AttributeUses" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">O valor de pós-compilação do <bpt id="p1">&lt;xref uid="langword_csharp_AttributeUses" name="AttributeUses" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> propriedade.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the post-compilation value for <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this complex type and its base type(s).</source>
          <target state="translated">Obtém o valor de pós-compilação para <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para este tipo complexo e seus tipos base.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is read-only.</source>
          <target state="translated">O valor dessa propriedade é somente leitura.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has values after the schema has been successfully compiled to determine the complete attribute set of the complex type.</source>
          <target state="translated">Essa propriedade tem valores depois que o esquema tiver sido compilado com êxito para determinar o conjunto completo de atributo do tipo complexo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, it might be the <ph id="ph1">`anyAttribute`</ph> element from one of the base types.</source>
          <target state="translated">Por exemplo, ele pode ser o <ph id="ph1">`anyAttribute`</ph> elemento de um dos tipos de base.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">O valor de pós-compilação do <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> elemento.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute.</source>
          <target state="translated">Obtém ou define o <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> atributo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Indicates the type of derivation.</source>
          <target state="translated">Indica o tipo de derivação.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">Esse atributo pode conter os seguintes valores: | Enum | Descrição |   |----------|-----------------|   | <ph id="ph1">`None`</ph>| Use a restrição de derivação definida pelo <ph id="ph2">`BlockDefault`</ph> propriedade do esquema, se ele existir. |   | <ph id="ph3">`Extension`</ph>| Esse elemento não pode ser substituído por um tipo derivado por extensão. |   | <ph id="ph4">`Restriction`</ph>| Esse elemento não pode ser substituído por um tipo derivado por restrição. |   | <ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element cannot be replaced by any type regardless of derivation method.|       The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">Esse elemento não pode ser substituído por qualquer tipo, independentemente do método de derivação. |       O <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, e <ph id="ph3">`Union`</ph> não há suporte para métodos de derivação por esta propriedade.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute prevents a complex type from being used in the specified type of derivation.</source>
          <target state="translated">O <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> atributo impede que um tipo complexo que está sendo usado no tipo especificado de derivação.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the value after the type has been compiled to the post-schema-validation information set (infoset).</source>
          <target state="translated">Obtém o valor depois que o tipo foi compilado para o conjunto de informações de validação post-schema (infoset).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This value indicates how the type is enforced when <bpt id="p1">&lt;xref uid="langword_csharp_xsi:type" name="xsi:type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used in the instance document.</source>
          <target state="translated">Esse valor indica como o tipo é imposto quando <bpt id="p1">&lt;xref uid="langword_csharp_xsi:type" name="xsi:type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é usado no documento da instância.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is taken either from the type itself or, if not defined at the type level, it is taken from the <ph id="ph1">`schema`</ph> element.</source>
          <target state="translated">Esse valor é retirado do próprio tipo ou, se não definida no nível do tipo, ele será removido do <ph id="ph1">`schema`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the value is restricted, only the specifically defined type can be used, not types derived from the specifically defined type.</source>
          <target state="translated">Por exemplo, se o valor é restrito, apenas o tipo definido especificamente pode ser usado, não tipos derivados do tipo definido especificamente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">Esse atributo pode conter os seguintes valores: | Enum | Descrição |   |----------|-----------------|   | <ph id="ph1">`None`</ph>| Use a restrição de derivação definida pelo <ph id="ph2">`BlockDefault`</ph> propriedade do esquema, se ele existir. |   | <ph id="ph3">`Extension`</ph>| Esse elemento não pode ser substituído por um tipo derivado por extensão. |   | <ph id="ph4">`Restriction`</ph>| Esse elemento não pode ser substituído por um tipo derivado por restrição. |   | <ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element cannot be replaced by any type regardless of derivation method.|       The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">Esse elemento não pode ser substituído por qualquer tipo, independentemente do método de derivação. |       O <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, e <ph id="ph3">`Union`</ph> não há suporte para métodos de derivação por esta propriedade.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The post-schema-validated infoset value.</source>
          <target state="translated">O valor de infoset pós schema validado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value on the <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valor o <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> elemento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the post-compilation <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaContentModel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of this complex type.</source>
          <target state="translated">Obtém ou define a pós-compilação <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaContentModel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> deste tipo complexo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is mutually exclusive with the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt; property.</source>
          <target state="translated">Isso é mutuamente exclusivo com o &lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;propriedade.&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The content model type that is one of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSimpleContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaComplexContent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">O tipo de modelo de conteúdo que é um do <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSimpleContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaComplexContent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> classes.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the content model of the complex type which holds the post-compilation value.</source>
          <target state="translated">Obtém o modelo de conteúdo do tipo complexo que contém o valor de pós-compilação.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the content in the post-schema-validation infoset.</source>
          <target state="translated">Este é o conteúdo de infoset post-schema a validação.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is set to <ph id="ph2">`true`</ph> on the <ph id="ph3">`ContentModel`</ph> property that has the type <ph id="ph4">`XmlSchemaComplexContent`</ph>, the value returned is <ph id="ph5">`Mixed`</ph>.</source>
          <target state="translated">Se o <ph id="ph1">`IsMixed`</ph> está definida como <ph id="ph2">`true`</ph> no <ph id="ph3">`ContentModel`</ph> propriedade que tem o tipo <ph id="ph4">`XmlSchemaComplexContent`</ph>, o valor retornado é <ph id="ph5">`Mixed`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is <ph id="ph2">`false`</ph>, the value is either <ph id="ph3">`Empty`</ph> or <ph id="ph4">`ElementOnly`</ph>.</source>
          <target state="translated">Se o <ph id="ph1">`IsMixed`</ph> é de propriedade <ph id="ph2">`false`</ph>, o valor é <ph id="ph3">`Empty`</ph> ou <ph id="ph4">`ElementOnly`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type on the <ph id="ph1">`ContentModel`</ph> property has the type <ph id="ph2">`XmlSchemaSimpleContent`</ph>, then this value is always <ph id="ph3">`TextOnly`</ph>.</source>
          <target state="translated">Se o tipo de <ph id="ph1">`ContentModel`</ph> propriedade tem o tipo de <ph id="ph2">`XmlSchemaSimpleContent`</ph>, em seguida, esse valor é sempre <ph id="ph3">`TextOnly`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ContentType`</ph> property must have one of the values shown in the following table.</source>
          <target state="translated">O <ph id="ph1">`ContentType`</ph> propriedade deve ter um dos valores mostrados na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`TextOnly`</ph>|Text-only content.|   |<ph id="ph2">`Empty`</ph>|Empty content.|   |<ph id="ph3">`ElementOnly`</ph>|Element-only content.|   |<ph id="ph4">`Mixed`</ph>|Mixed content model.|</source>
          <target state="translated">| Enum | Descrição |   |----------|-----------------|   | <ph id="ph1">`TextOnly`</ph>| Conteúdo somente texto. |   | <ph id="ph2">`Empty`</ph>| Conteúdo vazio. |   | <ph id="ph3">`ElementOnly`</ph>| Conteúdo somente para elemento. |   | <ph id="ph4">`Mixed`</ph>| Modelo de conteúdo misto. |</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the content model for the complex type.</source>
          <target state="translated">O valor de pós-compilação do modelo de conteúdo para o tipo complexo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the particle that holds the post-compilation value of the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt; particle.</source>
          <target state="translated">Obtém a partícula que contém o valor de pós-compilação do &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;partícula.&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`ContentTypeParticle`</ph> is determined after the content models of the most derived types and the base complex type have been resolved according to the rules defined in the W3C XML Schema definition language (XSD) specification.</source>
          <target state="translated">Isso <ph id="ph1">`ContentTypeParticle`</ph> é determinada depois que os modelos de conteúdo do tipo base complexo e de tipos mais derivados foram resolvidos de acordo com as regras definidas na especificação W3C XML Schema definition language (XSD).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The particle for the content type.</source>
          <target state="translated">A partícula para o tipo de conteúdo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt; particle.</source>
          <target state="translated">O valor de pós-compilação do &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;partícula.&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the information that determines if the <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element can be used in the instance document.</source>
          <target state="translated">Obtém ou define as informações que determina se o <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> elemento pode ser usado no documento da instância.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an element cannot use this <bpt id="p2">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element directly and must use a complex type that is derived from this <bpt id="p3">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">Se <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, um elemento não pode usar isso <bpt id="p2">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> elemento diretamente e deve usar um tipo complexo que é derivado deste <bpt id="p3">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> elemento.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets information that determines if the complex type has a mixed content model (markup within the content).</source>
          <target state="translated">Obtém ou define as informações que determina se o tipo complexo tem um modelo de conteúdo misto (marcação dentro do conteúdo).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Indicates if character data can appear between the child elements of this <ph id="ph1">`complexType`</ph>.</source>
          <target state="translated">Indica se os dados de caractere podem aparecer entre os elementos filho desse <ph id="ph1">`complexType`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`simpleContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute is not allowed (<ph id="ph3">`false`</ph>).</source>
          <target state="translated">Se o <ph id="ph1">`simpleContent`</ph> é um elemento filho, o <ph id="ph2">`mixed`</ph> atributo não é permitido (<ph id="ph3">`false`</ph>).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`complexContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute can be overridden by the <ph id="ph3">`mixed`</ph> attribute on the <ph id="ph4">`complexContent`</ph> element.</source>
          <target state="translated">Se o <ph id="ph1">`complexContent`</ph> é um elemento filho, o <ph id="ph2">`mixed`</ph> atributo pode ser substituído pelo <ph id="ph3">`mixed`</ph> atributo no <ph id="ph4">`complexContent`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if character data can appear between child elements of this complex type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, se os dados de caractere podem aparecer entre os elementos filho deste tipo complexo; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O padrão é <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets or sets the compositor type as one of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaGroupRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaChoice"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAll"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaSequence"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">Obtém ou define o tipo de compositor como uma da <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaGroupRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaChoice"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAll"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, ou <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaSequence"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> classes.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Particles must be one of the following compositors:      |Element|Description|   |-------------|-----------------|   |<ph id="ph1">`group`</ph>|The complex type contains the elements defined in the referenced group.|   |<ph id="ph2">`sequence`</ph>|The complex type contains the elements defined in the specified sequence.|   |<ph id="ph3">`choice`</ph>|The complex type allows one of the elements specified in the <ph id="ph4">`choice`</ph> element.|   |<ph id="ph5">`all`</ph>|The complex type allows all of the elements specified in the <ph id="ph6">`all`</ph> element to appear once or not at all.|       This is mutually exclusive with the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt; property.</source>
          <target state="translated">Partículas devem ser os seguintes compositores: | Elemento | Descrição |   |-------------|-----------------|   | <ph id="ph1">`group`</ph>| O tipo complexo contém os elementos definidos no grupo de referência. |   | <ph id="ph2">`sequence`</ph>| O tipo complexo contém os elementos definidos na sequência especificada. |   | <ph id="ph3">`choice`</ph>| O tipo complexo permite que um dos elementos especificados no <ph id="ph4">`choice`</ph> elemento. |   | <ph id="ph5">`all`</ph>| O tipo complexo permite que todos os elementos especificados no <ph id="ph6">`all`</ph> elemento aparecer uma vez ou não. |       Isso é mutuamente exclusivo com o &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;propriedade.&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The compositor type.</source>
          <target state="translated">O tipo de compositor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>