<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b835a40b50c06db9b8c19c00f203ad3f06c203d7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9628459005af219182bdc877dc298d5d59b059f2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ebdf73d1da3aae6c33327f47fbff41785502137</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the enumerator for <bpt id="p1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in a <bpt id="p2">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Representa o enumerador para <bpt id="p1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objetos em um <bpt id="p2">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators allow only reading the data in the collection.</source>
          <target state="translated">Enumeradores permitem que os dados na coleção como somente leitura.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">Enumeradores não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador está posicionado antes do primeiro elemento na coleção.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; method also brings the enumerator back to this position.</source>
          <target state="translated">O &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;método também traz o enumerador de volta para essa posição.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, calling the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; property throws an exception.</source>
          <target state="translated">AT isso posicionar, chamando o &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;propriedade gera uma exceção.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; method to advance the enumerator to the first element of the collection before reading the value of the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; property.</source>
          <target state="translated">Portanto, você deve chamar o &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;método para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;propriedade.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;Retorna o mesmo objeto até que o &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;ou &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;é chamado.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;define &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;para o próximo elemento.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Após o final da coleção for passado, o enumerador está posicionado após o último elemento da coleção e chamada &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;retorna <ph id="ph1">`false`</ph>.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">Se a última chamada &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;retornado <ph id="ph1">`false`</ph>, chamar &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;lança uma exceção.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reset &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; to the first element of the collection, call &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; followed by a call to &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">Redefinir &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;para o primeiro elemento da coleção, chame &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;seguido por uma chamada para &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção permaneça inalterada.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada ou &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;gera um &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between calling &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; and &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; returns the element to which it is currently set, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre chamar &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;e &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;retorna o elemento ao qual ela está definida, mesmo se o enumerador já é invalidado.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de thread-safe.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções resultante de alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the current entry in the collection.</source>
          <target state="translated">Obtém a entrada atual na coleção.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is created, it does not point to an object, so the Current property is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Quando o enumerador é criado, ele não aponta para um objeto para a propriedade atual não é válida e lançará uma exceção se ele for acessado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must first call the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; method to position the cursor at the first object in the collection.</source>
          <target state="translated">Você deve primeiro chamar o &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;método para posicionar o cursor no primeiro objeto na coleção.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting the Current property multiple times with no intervening calls to &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; will return the same &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt; object each time.</source>
          <target state="translated">A obtenção da propriedade atual várias vezes com nenhuma chamada intermediária para &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;retornará o mesmo &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;objeto cada vez.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object in the collection.</source>
          <target state="translated">Atual <bpt id="p1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto na coleção.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The Current property is accessed before first calling the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext<bpt id="p1">*</bpt>&gt; method. The cursor is located before the first object in the collection.       -or-       The Current property is accessed after a call to the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext<ept id="p1">*</ept>&gt; method returns <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, which indicates that the cursor is located after the last object in the collection.</source>
          <target state="translated">A propriedade atual for acessada antes de chamar primeiro o &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; método. O cursor está localizado antes do primeiro objeto na coleção.       - ou - propriedade o atual é acessado após uma chamada para o &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; método <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, que indica que o cursor está localizado após o último objeto na coleção.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Moves to the next element in the collection.</source>
          <target state="translated">Move para o próximo elemento da coleção.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MoveNext method returns <ph id="ph1">`false`</ph> immediately if there are no objects in the collection.</source>
          <target state="translated">O método MoveNext retorna <ph id="ph1">`false`</ph> imediatamente se não houver nenhum objeto na coleção.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>MoveNext returns <ph id="ph1">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated">MoveNext retorna <ph id="ph1">`true`</ph> até que ele tenha atingido o final da coleção.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then returns <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">Ele então retorna <ph id="ph1">`false`</ph> para cada chamada sucessiva.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, once MoveNext has returned <ph id="ph1">`false`</ph>, accessing the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; property throws an exception.</source>
          <target state="translated">No entanto, uma vez MoveNext retornou <ph id="ph1">`false`</ph>, acessando o &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;propriedade gera uma exceção.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon creation, an enumerator is positioned before the first &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt; object in the collection, and the first call to MoveNext positions the enumerator to the first object in the collection.</source>
          <target state="translated">Após a criação, um enumerador está posicionado antes da primeira &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;objeto na coleção e a primeira chamada para MoveNext posiciona o enumerador para o primeiro objeto na coleção.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o enumerador foi avançado com êxito para o próximo elemento; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se o enumerador tiver passado o final da coleção.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Resets the enumerator to the beginning of the collection.</source>
          <target state="translated">Redefine o enumerador para o início da coleção.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">Um enumerador move em uma direção de somente avanço.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to return to the beginning of the collection.</source>
          <target state="translated">Use esse método para retornar ao início da coleção.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Reset method positions the cursor at the first object in the collection.</source>
          <target state="translated">O método Reset posiciona o cursor no primeiro objeto na coleção.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Reset, you do not need to call &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; to move the cursor forward to the first object.</source>
          <target state="translated">Depois de chamar redefinir, você não precisa chamar &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;para mover o cursor para frente para o primeiro objeto.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the current object in the collection.</source>
          <target state="translated">Obtém o objeto atual na coleção.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call this method; use the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; property instead.</source>
          <target state="translated">Não chame este método; Use o &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;propriedade em vez disso.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The current object in the collection.</source>
          <target state="translated">O objeto atual na coleção.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>