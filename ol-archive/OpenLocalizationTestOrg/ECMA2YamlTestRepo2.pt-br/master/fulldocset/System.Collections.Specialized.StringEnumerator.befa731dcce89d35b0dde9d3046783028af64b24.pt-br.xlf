<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c77c7c3e5516eaa1e8bf6511db9fab9f7b68189c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Specialized.StringEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb9f31e4e70b1811890d70e2c2bb276c6e97d5bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">438fa99f93782ab283df53c0001e4819aa7c9eb3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports a simple iteration over a <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Dá suporte a uma iteração simples sobre uma <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">O <ph id="ph1">`foreach`</ph> instrução de linguagem c# (<ph id="ph2">`for each`</ph> no Visual Basic) oculta a complexidade dos enumeradores.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Portanto, usando <ph id="ph1">`foreach`</ph> é recomendada, em vez de manipulação direta do enumerador.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Enumeradores podem ser usados para ler os dados na coleção, mas eles não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador está posicionado antes do primeiro elemento na coleção.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;também traz o enumerador de volta para essa posição.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, calling &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">AT isso posicionar, chamando &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;lança uma exceção.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.</source>
          <target state="translated">Portanto, você deve chamar &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;Retorna o mesmo objeto até que o &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;ou &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;é chamado.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;define &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;para o próximo elemento.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;retorna <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Quando o enumerador está nessa posição, chamadas subsequentes para &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;também retornam <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">Se a última chamada &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;retornado <ph id="ph1">`false`</ph>, chamar &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;lança uma exceção.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">Definir &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;para o primeiro elemento da coleção novamente, você pode chamar &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;seguido pelo &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção permaneça inalterada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada ou &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;gera um &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;, &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;e &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;, &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de thread-safe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções resultante de alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the current element in the collection.</source>
          <target state="translated">Obtém o elemento atual na coleção.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of Current; otherwise, Current is undefined.</source>
          <target state="translated">Após a criação de um enumerador ou depois de um &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;é chamado, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de Current; caso contrário, o atual é indefinido.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current also throws an exception if the last call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">Atual também gera uma exceção se a última chamada &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;retornado <ph id="ph1">`false`</ph>, que indica o final da coleção.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current does not move the position of the enumerator, and consecutive calls to Current return the same object until either &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">Atual não move a posição do enumerador e o mesmo objeto de retorno de chamadas consecutivas para atual até que o &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;ou &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;é chamado.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção permaneça inalterada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada ou &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;gera um &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;e &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The current element in the collection.</source>
          <target state="translated">O elemento atual na coleção.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">O enumerador está posicionado antes do primeiro elemento da coleção ou depois do último elemento.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Avança o enumerador para o próximo elemento da coleção.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called, an enumerator is positioned before the first element of the collection, and the first call to MoveNext moves the enumerator over the first element of the collection.</source>
          <target state="translated">Após a criação de um enumerador ou depois de um &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;é chamado, um enumerador está posicionado antes do primeiro elemento da coleção e a primeira chamada para MoveNext move o enumerador o primeiro elemento da coleção.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se MoveNext passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e retorna MoveNext <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to MoveNext also return <ph id="ph1">`false`</ph> until &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">Quando o enumerador está nessa posição, chamadas subsequentes para MoveNext também retornam <ph id="ph1">`false`</ph> até &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;é chamado.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção permaneça inalterada.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada ou &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;gera um &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;e &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o enumerador foi avançado com êxito para o próximo elemento; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se o enumerador tiver passado o final da coleção.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">A coleção foi modificada depois que o enumerador foi criado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Define o enumerador como sua posição inicial, que é antes do primeiro elemento na coleção.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reset moves the enumerator to the beginning of the collection, before the first element.</source>
          <target state="translated">Redefinição move o enumerador para o início da coleção, antes do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>After Reset, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.</source>
          <target state="translated">Após a redefinição, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">A coleção foi modificada depois que o enumerador foi criado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>