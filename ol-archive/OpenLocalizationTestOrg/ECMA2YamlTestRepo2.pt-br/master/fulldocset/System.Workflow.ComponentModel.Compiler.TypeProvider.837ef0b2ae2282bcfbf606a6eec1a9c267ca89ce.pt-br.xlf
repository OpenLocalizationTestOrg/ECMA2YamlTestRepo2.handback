<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6ed90a0fe823038e51bc4fe9b35414188e6b49a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.ComponentModel.Compiler.TypeProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80abea9844956a8824cccd78c731b0a17c84d894</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2e281bd53d3487828b72c5d073774b3a5c74629</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>An implementation of <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.ITypeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that acts as a container of types within the indicated assemblies and code compile units.</source>
          <target state="translated">Uma implementação de <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.ITypeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que age como um contêiner de tipos em assemblies indicados e o código compila unidades.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       This &lt;xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt; implementation, in addition to handling compiled assemblies (&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt; and &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt; methods), can handle types that have not been compiled yet (&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt;).</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>Isso &lt;xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt;implementação, além de manipular compilado assemblies (&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt; e &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;métodos), pode tratar tipos que ainda não foram compilados (&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt;).&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt; &lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt; &lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt; &lt;/xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The limited implementation of &lt;xref:System.Type?displayProperty=fullName&gt; is returned for types referenced using &lt;xref:System.CodeDom.CodeCompileUnit&gt;.</source>
          <target state="translated">A implementação limitada &lt;xref:System.Type?displayProperty=fullName&gt;é retornada para tipos referenciados usando &lt;xref:System.CodeDom.CodeCompileUnit&gt;.&lt;/xref:System.CodeDom.CodeCompileUnit&gt; &lt;/xref:System.Type?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  TypeProvider only returns public types from referenced assemblies, and both public and non-public types from local assemblies.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; TypeProvider retorna somente os tipos públicos de assemblies referenciados e tipos públicos e não-públicos de assemblies locais.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The encapsulated &lt;xref:System.IServiceProvider&gt; for this instance.</source>
          <target state="translated">O encapsulada &lt;xref:System.IServiceProvider&gt;para esta instância.&lt;/xref:System.IServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Adds an already-loaded assembly.</source>
          <target state="translated">Adiciona um assembly já carregado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It is the caller's responsibility to load the assembly, and <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> includes the types from this assembly for dispensing when &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt; is called.</source>
          <target state="translated">É responsabilidade do chamador ao carregar o assembly e <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> inclui os tipos a partir desse assembly para empregando quando &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt;é chamado.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type.Assembly*&gt; to add a reference for.</source>
          <target state="translated">&lt;xref:System.Type.Assembly*&gt;Para adicionar um loop de referência for&lt;/xref:System.Type.Assembly*&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph>é uma referência nula (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Adds a reference to the &lt;xref:System.Type.Assembly<bpt id="p1">*</bpt>&gt; to the internal list. This assembly is used for the &lt;xref:System.Type&gt; lookup in the &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType<ept id="p1">*</ept>&gt; method.</source>
          <target state="translated">Adiciona uma referência para o &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; para a lista interna. Este assembly é usado para o &lt;xref:System.Type&gt;pesquisa no &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; método.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The path of the &lt;xref:System.Type.Assembly*&gt; to add.</source>
          <target state="translated">O caminho a &lt;xref:System.Type.Assembly*&gt;ser adicionado.&lt;/xref:System.Type.Assembly*&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>é uma referência nula (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Adds a reference to the <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the internal list.</source>
          <target state="translated">Adiciona uma referência para o <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para a lista interna.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used for the &lt;xref:System.Type&gt; lookup in the &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt; method.</source>
          <target state="translated">Isso <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é usado para o &lt;xref:System.Type&gt;pesquisa no &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt;método.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph>é uma referência nula (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph> is already referenced in this instance.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph>já está referenciado nesta instância.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets the delegate that references a method with one parameter and one return value that returns the assembly display name in which a specified type belongs to.</source>
          <target state="translated">Obtém ou define o representante que faça referência um método com um parâmetro e um valor de retorno que retorna o assembly no qual um tipo especificado pertence a nome para exibição.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The delegate that references a method with one parameter and one return value that returns the assembly display name that a specified type belongs to.</source>
          <target state="translated">O representante que faz referência a um método com um parâmetro e um valor de retorno que retorna o assembly exibe o nome que um tipo especificado pertence.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Libera todos os recursos usados pelo <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Compiler.TypeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns the assembly display name of the assembly in which the specified type is declared.</source>
          <target state="translated">Retorna o assembly exibe nome do assembly no qual o tipo especificado é declarado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type whose assembly name to get.</source>
          <target state="translated">O tipo de nome cujo assembly para obter.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The assembly display name of the assembly in which the specified type is declared.</source>
          <target state="translated">O assembly exibe o nome do assembly no qual o tipo especificado é declarado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provides a string array that contains the names for the specified &lt;xref:System.Enum&gt; in indexed order.</source>
          <target state="translated">Fornece uma matriz de cadeia de caracteres que contém os nomes especificado &lt;xref:System.Enum&gt;na ordem indexada.&lt;/xref:System.Enum&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The type to obtain the names from.</source>
          <target state="translated">O tipo para obter os nomes de.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The names for the specified &lt;xref:System.Enum&gt; in indexed order.</source>
          <target state="translated">Os nomes especificado &lt;xref:System.Enum&gt;na ordem indexada.&lt;/xref:System.Enum&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;enumType&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;enumType&lt;/code&gt;</ph>é uma referência nula (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;enumType&lt;/code&gt;</ph> Is not an <ph id="ph2">&lt;xref:System.Enum&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;enumType&lt;/code&gt;</ph>Não é um <ph id="ph2">&lt;xref:System.Enum&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; of an &lt;xref:System.EventHandler&gt;, given a reference to an &lt;xref:System.Reflection.EventInfo&gt;.</source>
          <target state="translated">Obtém o &lt;xref:System.Type&gt;de um &lt;xref:System.EventHandler&gt;, de acordo com uma referência a um &lt;xref:System.Reflection.EventInfo&gt;.&lt;/xref:System.Reflection.EventInfo&gt; &lt;/xref:System.EventHandler&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo&gt; to obtain the &lt;xref:System.EventHandler&gt; type of.</source>
          <target state="translated">O &lt;xref:System.Reflection.EventInfo&gt;para obter o &lt;xref:System.EventHandler&gt;tipo de.&lt;/xref:System.EventHandler&gt; &lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of an &lt;xref:System.EventHandler&gt;, given a reference to an &lt;xref:System.Reflection.EventInfo&gt;.</source>
          <target state="translated">O &lt;xref:System.Type&gt;de um &lt;xref:System.EventHandler&gt;, de acordo com uma referência a um &lt;xref:System.Reflection.EventInfo&gt;.&lt;/xref:System.Reflection.EventInfo&gt; &lt;/xref:System.EventHandler&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventInfo&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;eventInfo&lt;/code&gt;</ph>é uma referência nula (Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Object&gt; that provides the designated service &lt;xref:System.Type&gt;.</source>
          <target state="translated">Obtém o &lt;xref:System.Object&gt;que fornece o serviço designado &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the encapsulated &lt;xref:System.IServiceProvider&gt; associated with this instance is a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) then a null reference (<ph id="ph2">`Nothing`</ph>) is returned.</source>
          <target state="translated">Se o encapsulada &lt;xref:System.IServiceProvider&gt;associado a esta instância é uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic), em seguida, uma referência nula (<ph id="ph2">`Nothing`</ph>) será retornado.&lt;/xref:System.IServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The service &lt;xref:System.Type&gt; that the &lt;xref:System.Object&gt; is to provide.</source>
          <target state="translated">O serviço &lt;xref:System.Type&gt;que o &lt;xref:System.Object&gt;é fornecer.&lt;/xref:System.Object&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; that provides the designated service &lt;xref:System.Type&gt;.</source>
          <target state="translated">O &lt;xref:System.Object&gt;que fornece o serviço designado &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets the type from the set of assemblies added to the <bpt id="p1">&lt;xref uid="langword_csharp_TypeProvider" name="TypeProvider" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly<bpt id="p2">*</bpt>&gt;, &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference<ept id="p2">*</ept>&gt;, or &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;.</source>
          <target state="translated">Obtém o tipo do conjunto de assemblies adicionados para o <bpt id="p1">&lt;xref uid="langword_csharp_TypeProvider" name="TypeProvider" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> usando &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt;, &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt;, ou &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (Visual Basic <ph id="ph1">`Nothing`</ph>) is returned.</source>
          <target state="translated">Se o nome não for resolvido em unidades compiladas desta instância e o cache de assemblies, uma referência nula (Visual Basic <ph id="ph1">`Nothing`</ph>) será retornado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoking this overload is the same as invoking the two parameter overloads with the value of the parameter <ph id="ph1">`throwOnError`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Chamar essa sobrecarga é o mesmo que chamar duas sobrecargas de parâmetro com o valor do parâmetro <ph id="ph1">`throwOnError`</ph> definido como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The type name.</source>
          <target state="translated">O nome do tipo.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The requested &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; Solicitada</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>é uma referência nula (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> no Visual Basic)</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the type from the set of assemblies added to the <bpt id="p1">&lt;xref uid="langword_csharp_TypeProvider" name="TypeProvider" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly<bpt id="p2">*</bpt>&gt;, &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference<ept id="p2">*</ept>&gt;, or &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;.</source>
          <target state="translated">Obtém o tipo do conjunto de assemblies adicionados para o <bpt id="p1">&lt;xref uid="langword_csharp_TypeProvider" name="TypeProvider" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> usando &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt;, &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt;, ou &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (<ph id="ph1">`Nothing`</ph>) is returned; in the case that <ph id="ph2">`throwOnError`</ph> is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se o nome não for resolvido em unidades compiladas desta instância e o cache de assemblies, uma referência nula (<ph id="ph1">`Nothing`</ph>) é retornado; no caso que <ph id="ph2">`throwOnError`</ph> é <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The type name.</source>
          <target state="translated">O nome do tipo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A value that indicates whether to throw an exception if <ph id="ph1">`name`</ph> is not resolvable.</source>
          <target state="translated">Um valor que indica se deve lançar uma exceção se <ph id="ph1">`name`</ph> não for resolvida.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The requested &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; Solicitada</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>é uma referência nula (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> no Visual Basic)</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is not resolvable and <ph id="ph2">&lt;code&gt;throwOnError&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>não pode ser resolvido e <ph id="ph2">&lt;code&gt;throwOnError&lt;/code&gt;</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creates an array that contains each &lt;xref:System.Type&gt; known to this instance.</source>
          <target state="translated">Cria uma matriz que contém cada &lt;xref:System.Type&gt;conhecido para essa instância.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An array that contains each &lt;xref:System.Type&gt; known to this instance.</source>
          <target state="translated">Uma matriz que contém cada &lt;xref:System.Type&gt;conhecido para essa instância.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Any &lt;xref:System.Type&gt; fails to load.</source>
          <target state="translated">Qualquer &lt;xref:System.Type&gt;Falha ao carregar.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Indicates whether one type can be safely assigned to another type.</source>
          <target state="translated">Indica se um tipo pode ser atribuído com segurança em outro tipo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The target &lt;xref:System.Type&gt; of the assignment.</source>
          <target state="translated">O destino &lt;xref:System.Type&gt;da atribuição.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The source &lt;xref:System.Type&gt; of the assignment.</source>
          <target state="translated">A fonte &lt;xref:System.Type&gt;da atribuição.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the assignment can be safely made; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se a atribuição pode ser feita com segurança; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Indicates whether a &lt;xref:System.Type&gt; is of type &lt;xref:System.Enum&gt; .</source>
          <target state="translated">Indica se uma &lt;xref:System.Type&gt;é do tipo &lt;xref:System.Enum&gt;.&lt;/xref:System.Enum&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to be tested.</source>
          <target state="translated">O &lt;xref:System.Type&gt;a ser testada.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Type&gt; is an &lt;xref:System.Enum&gt; ; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o &lt;xref:System.Type&gt;é um &lt;xref:System.Enum&gt;; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Enum&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>é uma referência nula (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Indicates whether a &lt;xref:System.Type&gt; is a derived class of another &lt;xref:System.Type&gt; .</source>
          <target state="translated">Indica se uma mensagem &lt;xref:System.Type&gt;é uma classe derivada de outro &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; being tested as a derived class.</source>
          <target state="translated">O &lt;xref:System.Type&gt;que está sendo testado como uma classe derivada&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; being tested as the class.</source>
          <target state="translated">O &lt;xref:System.Type&gt;que está sendo testado da classe.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the tested relationship is true; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se a relação testada for true; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns a value that determines whether the specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Retorna um valor que determina se a propriedade especificada é compatível com o destino <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The property to resolve.</source>
          <target state="translated">A propriedade para resolver.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The instance in which the specified property is declared.</source>
          <target state="translated">A instância na qual a propriedade especificada é declarada.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se a propriedade especificada é suportada no destino <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets the delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Obtém ou define o delegado que faz referência a um método com dois parâmetros e um valor de retorno que determina se uma propriedade especificada é compatível com o destino <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">O representante que faz referência a um método com dois parâmetros e um valor de retorno que determina se uma propriedade especificada é compatível com o destino <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets a value that represents the locally defined &lt;xref:System.Reflection.Assembly&gt; for this instance.</source>
          <target state="translated">Obtém um valor que representa o definidos localmente &lt;xref:System.Reflection.Assembly&gt;para esta instância.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The locally defined &lt;xref:System.Reflection.Assembly&gt; for this instance.</source>
          <target state="translated">Definida localmente &lt;xref:System.Reflection.Assembly&gt;para esta instância.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets a collection of all assemblies referenced by the &lt;xref:System.Type&gt;.</source>
          <target state="translated">Obtém uma coleção de todos os assemblies referenciados pelo &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A collection of all assemblies referenced by the &lt;xref:System.Type&gt;.</source>
          <target state="translated">Uma coleção de todos os assemblies referenciados pelo &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Updates the <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> reference associated with this instance.</source>
          <target state="translated">Atualizações de <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> referência associada a essa instância.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">O &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;é gerado quando esse método é invocado.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to refresh with.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para atualização de com.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.EventHandler&gt; to delegate this event to.</source>
          <target state="translated">O &lt;xref:System.EventHandler&gt;para delegar esse evento para.&lt;/xref:System.EventHandler&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph>é uma referência nula (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This instance already references the subject <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Esta instância já referencia o assunto <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Removes all references to the subject &lt;xref:System.Reflection.Assembly&gt; from this instance.</source>
          <target state="translated">Remove todas as referências ao assunto &lt;xref:System.Reflection.Assembly&gt;dessa instância.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">O &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;é gerado quando esse método é invocado.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Assembly&gt; to remove from this instance.</source>
          <target state="translated">O &lt;xref:System.Reflection.Assembly&gt;para remover dessa instância.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph>é uma referência nula (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> no Visual Basic)</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Removes a path-based &lt;xref:System.Reflection.Assembly&gt; reference from this instance.</source>
          <target state="translated">Remove um caminho com base em &lt;xref:System.Reflection.Assembly&gt;referência dessa instância.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">O &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;é gerado quando esse método é invocado.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The path of the &lt;xref:System.Reflection.Assembly&gt; to be removed.</source>
          <target state="translated">O caminho do &lt;xref:System.Reflection.Assembly&gt;a ser removido.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>é uma referência nula (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> no Visual Basic)</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Removes all references to the subject <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from this instance.</source>
          <target state="translated">Remove todas as referências ao assunto <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dessa instância.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">O &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;é gerado quando esse método é invocado.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be removed.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> a ser removido.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;codeCompileUnit&lt;/code&gt;</ph>é uma referência nula (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> no Visual Basic)</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Sets the value of the local &lt;xref:System.Reflection.Assembly&gt; to the referenced &lt;xref:System.Reflection.Assembly&gt; .</source>
          <target state="translated">Define o valor do local &lt;xref:System.Reflection.Assembly&gt;para o operador referenciado &lt;xref:System.Reflection.Assembly&gt;.&lt;/xref:System.Reflection.Assembly&gt; &lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt; is raised when this method is invoked.</source>
          <target state="translated">O &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;é gerado quando esse método é invocado.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call SetLocalAssembly before you call &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt; otherwise it has no affect on the &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;.</source>
          <target state="translated">Chame SetLocalAssembly antes de chamar &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt;caso contrário, ele não tem nenhum efeito em &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt; &lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Assembly&gt; used to set this value</source>
          <target state="translated">O é &lt;xref:System.Reflection.Assembly&gt;usado para definir esse valor&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.IDictionary&gt; of load error exceptions keyed by the &lt;xref:System.Object&gt; that causes the &lt;xref:System.Exception&gt;.</source>
          <target state="translated">Obtém uma &lt;xref:System.Collections.IDictionary&gt;carga de exceções de erro de chave, o &lt;xref:System.Object&gt;que faz com que o &lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt; &lt;/xref:System.Object&gt; &lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>An updated, detached &lt;xref:System.Collections.IDictionary&gt; is created at each reference to this property.</source>
          <target state="translated">Desanexado atualizada, &lt;xref:System.Collections.IDictionary&gt;é criado em cada referência a esta propriedade.&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; of load error exceptions keyed by the &lt;xref:System.Object&gt; that causes the &lt;xref:System.Exception&gt;.</source>
          <target state="translated">Uma &lt;xref:System.Collections.IDictionary&gt;carga de exceções de erro de chave, o &lt;xref:System.Object&gt;que faz com que o &lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt; &lt;/xref:System.Object&gt; &lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Occurs when the collection &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*&gt; is modified.</source>
          <target state="translated">Ocorre quando a coleção &lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*&gt;é modificado.&lt;/xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Occurs when the collection of defined types is modified.</source>
          <target state="translated">Ocorre quando a coleção de tipos definidos é modificada.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>