<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">097cd7321faac8cfa95104f9921f78e112607e48</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Dispatcher.IDispatchMessageInspector.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">686949b337aa3f2ff1fa35a76110ed0a9825053d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95d22f93135e82422ad1b50c6e2cfd9d255cb044</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the methods that enable custom inspection or modification of inbound and outbound application messages in service applications.</source>
          <target state="translated">Define os métodos que permitem personalizado inspecionar ou modificar as mensagens de aplicativo de entrada e saída em aplicativos de serviço.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement IDispatchMessageInspector to inspect or modify inbound or outbound application messages either prior to dispatching a request message to an operation or before returning a reply message to a caller.</source>
          <target state="translated">Implemente IDispatchMessageInspector para inspecionar ou modificar as mensagens de entrada ou saída de aplicativo antes de distribuir uma mensagem de solicitação para uma operação ou antes de retornar uma mensagem de resposta para um chamador.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are a large number of scenarios that require intercepting messages prior to invoking the operation for which it is destined.</source>
          <target state="translated">Há um grande número de cenários que exigem interceptar mensagens antes de invocar a operação para o qual ele é destinado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can log incoming application messages or perform some feature based on a message header.</source>
          <target state="translated">Por exemplo, você pode registrar em log mensagens de aplicativo de entrada ou executar algum recurso com base em um cabeçalho de mensagem.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, message inspectors are inserted by a service behavior (&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;), an endpoint behavior (&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt;), or a contract behavior (&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt;).</source>
          <target state="translated">Normalmente, os inspetores de mensagem são inseridas por um comportamento de serviço (&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;), um comportamento de ponto de extremidade (&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt;), ou um comportamento de contrato (&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt;).&lt;/xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior then adds the message inspector to the &lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=fullName&gt; collection.</source>
          <target state="translated">O comportamento, em seguida, adiciona o Inspetor de mensagem para o &lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=fullName&gt;coleção.&lt;/xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about extending the runtime using behaviors, see <bpt id="p1">[</bpt>Extending ServiceHost and the Service Model Layer<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como estender o tempo de execução usando comportamentos, consulte <bpt id="p1">[</bpt>estendendo ServiceHost e a camada de modelo de serviço<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt; method enables custom behavior after receiving the message but before dispatching it to the intended operation.</source>
          <target state="translated">-O &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt;método permite que o comportamento personalizado depois de receber a mensagem, mas antes de expedi-lo para a operação pretendida.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt; method enables custom behavior after the operation returns but before the reply is sent.</source>
          <target state="translated">-O &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt;método permite que o comportamento personalizado depois que a operação retorna, mas antes que a resposta será enviada.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  IDispatchMessageInspector objects are always called at the same point during message dispatch regardless of whether an operation is one-way or request-reply.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; IDispatchMessageInspector objetos sempre são chamados no mesmo momento durante a expedição de mensagem independentemente se uma operação é unidirecional ou solicitação-resposta.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Called after an inbound message has been received but before the message is dispatched to the intended operation.</source>
          <target state="translated">Chamado depois que uma mensagem de entrada recebida mas antes a mensagem é enviada para a operação pretendida.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AfterReceiveRequest method to inspect or modify the incoming message, the client channel that provided it, and the current service instance.</source>
          <target state="translated">Use o método AfterReceiveRequest para inspecionar ou modificar a mensagem de entrada, o canal de cliente fornecido e a instância de serviço atual.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value can be any object that you want to use for correlation purposes; it is returned to you as the <ph id="ph1">`correlationState`</ph> parameter in the &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt; method.</source>
          <target state="translated">O valor de retorno pode ser qualquer objeto que você deseja usar para fins de correlação; ele é retornado como o <ph id="ph1">`correlationState`</ph> parâmetro o &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt;método.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You cannot use the body of the message unless you buffer the entire message and make a copy.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Você não pode usar o corpo da mensagem, a menos que a mensagem inteira do buffer e faça uma cópia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, you must make two copies of the message: one to inspect, and the other to overwrite the <ph id="ph1">`request`</ph> parameter.</source>
          <target state="translated">Se você fizer isso, você deve fazer duas cópias da mensagem: um para inspecionar e o outro para substituir o <ph id="ph1">`request`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The request message.</source>
          <target state="translated">A mensagem de solicitação.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The incoming channel.</source>
          <target state="translated">O canal de entrada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The current service instance.</source>
          <target state="translated">A instância de serviço atual.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The object used to correlate state.</source>
          <target state="translated">O objeto usado para correlacionar o estado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This object is passed back in the &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply*&gt; method.</source>
          <target state="translated">Este objeto é passado de volta o &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply*&gt;método.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply*&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Called after the operation has returned but before the reply message is sent.</source>
          <target state="translated">Chamado depois que a operação foi retornado, mas antes da resposta de mensagem é enviada.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the BeforeSendReply method to perform custom behavior prior to sending the return message.</source>
          <target state="translated">Use o método BeforeSendReply para executar o comportamento personalizado antes de enviar a mensagem de retorno.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`correlationState`</ph> is the object returned from the &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt; method that you can use to perform correlation between inbound and outbound calls to support your behavior.</source>
          <target state="translated">O <ph id="ph1">`correlationState`</ph> é o objeto retornado do &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt;método que você pode usar para executar a correlação entre as chamadas de entrada e saídas para dar suporte a seu comportamento.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The reply message.</source>
          <target state="translated">A mensagem de resposta.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This value is null if the operation is one way.</source>
          <target state="translated">Esse valor será nulo se a operação é unidirecional.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The correlation object returned from the &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest*&gt; method.</source>
          <target state="translated">O objeto de correlação retornado do &lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest*&gt;método.&lt;/xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>