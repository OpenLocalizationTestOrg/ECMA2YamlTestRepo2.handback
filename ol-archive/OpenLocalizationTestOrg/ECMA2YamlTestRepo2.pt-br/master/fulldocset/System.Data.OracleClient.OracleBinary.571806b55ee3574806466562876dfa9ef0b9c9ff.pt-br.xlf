<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">698d2401c6e74ed8302db434ce80b0968a98b6a6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OracleClient.OracleBinary.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fd4662773689b638a6b411c0604cadf4fcdebc7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d505c5bf4c1647b9a59c85cb521ab891791b9abf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a variable-length stream of binary data to be stored in or retrieved from a database.</source>
          <target state="translated">Representa um fluxo de comprimento variável de dados binários a ser armazenado no ou recuperado de um banco de dados.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain an OracleBinary object, call the &lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A&gt; method.</source>
          <target state="translated">Para obter um objeto OracleBinary, chame o &lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A&gt;método.&lt;/xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure, setting the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property to the contents of the supplied byte array.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura, definindo o &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;propriedade para o conteúdo da matriz de bytes fornecido.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The byte array to be stored in the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property.</source>
          <target state="translated">A matriz de bytes a ser armazenado na &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;propriedade.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Compares this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the supplied object and returns an indication of their relative values.</source>
          <target state="translated">Compara este <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto para o objeto fornecido e retorna uma indicação de seus valores relativos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The object to be compared to this <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">O objeto a ser comparado a este <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A signed number indicating the relative values of this <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure and the object.</source>
          <target state="translated">Um número assinado que indica os valores relativos deste <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura e o objeto.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">Valor de retorno</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Condition</source>
          <target state="translated">Condição</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
          <target state="translated">Menor que zero</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The value of this <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is less than the object.</source>
          <target state="translated">O valor deste <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto é menor que o objeto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Zero</source>
          <target state="translated">Zero</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is the same as the object.</source>
          <target state="translated">Isso <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto é igual ao objeto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
          <target state="translated">Maior que zero</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is greater than the object.</source>
          <target state="translated">Isso <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto é maior que o objeto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-or-       The object is a null reference.</source>
          <target state="translated">- ou - o objeto é uma referência nula.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Concatenates two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to create a new <bpt id="p2">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Concatena duas <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para criar um novo <bpt id="p2">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure with the concatenated values of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p3">&lt;/code&gt;</ept> parameters.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura com os valores concatenados do <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">x</ph> <ept id="p2">&lt;/code&gt;</ept> e <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">y</ph> <ept id="p3">&lt;/code&gt;</ept> parâmetros.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Compares the supplied object parameter to the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Compara o parâmetro de objeto fornecido para o &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;propriedade o <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The object to be compared.</source>
          <target state="translated">O objeto a ser comparado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if object is an instance of <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the two are equal; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o objeto é uma instância de <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> e os dois são iguais; caso contrário <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if they are equal.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se eles são iguais.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the two instances are not equal.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se duas instâncias são iguais ou <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> se as duas instâncias não são iguais.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Retorna o código hash para este <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Um código de hash de inteiro de 32 bits.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is greater than the second.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se a primeira é maior que o segundo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is greater than the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se a primeira instância é maior que a segunda instância, caso contrário, <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is greater than or equal to the second.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se a primeira é maior que ou igual à segunda.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se a primeira instância é maior que ou igual à segunda instância, caso contrário, <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure is null.</source>
          <target state="translated">Obtém um valor que indica se o &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;propriedade o <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura é nula.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is null, otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se <bpt id="p2">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> for nulo, caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the single byte from the <bpt id="p1">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property located at the position indicated by the integer parameter, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Obtém um único byte do <bpt id="p1">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> propriedade localizada na posição indicada pelo parâmetro inteiro, <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> indicates a position beyond the end of the byte array, an exception is raised.</source>
          <target state="translated">Se <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p1">&lt;/code&gt;</ept> indica uma posição além do fim da matriz de bytes, uma exceção é gerada.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid raising an <ph id="ph1">`OracleNullValueException`</ph>, always check the &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt; property and the <ph id="ph2">`Length`</ph> property before reading <ph id="ph3">`this`</ph>.</source>
          <target state="translated">Para evitar gerar um <ph id="ph1">`OracleNullValueException`</ph>, sempre verifique o &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;propriedade e o <ph id="ph2">`Length`</ph> propriedade antes da leitura <ph id="ph3">`this`</ph>.&lt;/xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The position of the byte to be retrieved.</source>
          <target state="translated">A posição de bytes a serem recuperados.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The byte located at the position indicated by the integer parameter.</source>
          <target state="translated">O byte localizado na posição indicada pelo parâmetro inteiro.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets the length in bytes of the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property.</source>
          <target state="translated">Obtém o comprimento em bytes do &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;propriedade.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
          <target state="translated">Essa propriedade é somente leitura.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid raising an <ph id="ph1">`OracleNullValueException`</ph>, always check the &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt; property before reading the <ph id="ph2">`Length`</ph> property.</source>
          <target state="translated">Para evitar a geração um <ph id="ph1">`OracleNullValueException`</ph>, sempre verifique o &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;propriedade antes da leitura de <ph id="ph2">`Length`</ph> propriedade.&lt;/xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The length of the binary data in the <bpt id="p1">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">O comprimento dos dados binários no <bpt id="p1">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> propriedade.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is less than the second.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se a primeira for menor que o segundo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is less than the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se a primeira instância é menor que a segunda instância, caso contrário, <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is less than or equal to the second.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se a primeira é menor ou igual à segunda.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se a primeira instância é menor ou igual à segunda instância, caso contrário, <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if they are not equal.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se elas não forem iguais.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the two instances are equal.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se as duas instâncias não forem iguais ou <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> se duas instâncias são iguais.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Represents a null value that can be assigned to the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property of an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Representa um valor nulo que pode ser atribuído para o &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;propriedade de um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Null`</ph> functions as a constant for the <ph id="ph2">`OracleBinary`</ph> structure.</source>
          <target state="translated"><ph id="ph1">`Null`</ph>funciona como uma constante para o <ph id="ph2">`OracleBinary`</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Concatenates the two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameters to create a new <bpt id="p2">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Concatena dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> parâmetros para criar um novo <bpt id="p2">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> will appear first in the resulting <ph id="ph2">`OracleBinary`</ph>, followed by <ph id="ph3">`y`</ph>.</source>
          <target state="translated"><ph id="ph1">`x`</ph>aparecerão primeiro na resultante <ph id="ph2">`OracleBinary`</ph>, seguido por <ph id="ph3">`y`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic]       In Visual Basic, you can use the operators defined by a class, but you cannot override them or create your own.</source>
          <target state="translated">[Visual Basic]       No Visual Basic, você pode usar os operadores definidos por uma classe, mas você não pode substituí-los ou criar seus próprios.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The concatenated values of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept> parameters.</source>
          <target state="translated">Os valores concatenados do <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">x</ph> <ept id="p1">&lt;/code&gt;</ept> e <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">y</ph> <ept id="p2">&lt;/code&gt;</ept> parâmetros.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if they are equal.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se eles são iguais.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the two instances are not equal.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se duas instâncias são iguais ou <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> se as duas instâncias não são iguais.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is greater than the second.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se a primeira é maior que o segundo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is greater than the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se a primeira instância é maior que a segunda instância, caso contrário, <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is greater than or equal to the second.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se a primeira é maior que ou igual à segunda.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se a primeira instância é maior que ou igual à segunda instância, caso contrário, <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A ser adicionado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if they are equal.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se eles são iguais.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the two instances are equal.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se as duas instâncias não forem iguais ou <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> se duas instâncias são iguais.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is less than the second.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se a primeira for menor que o segundo.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is less than the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se a primeira instância é menor que a segunda instância, caso contrário, <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is less than or equal to the second.</source>
          <target state="translated">Compara dois <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estruturas para determinar se a primeira é menor ou igual à segunda.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que é <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se a primeira instância é menor ou igual à segunda instância, caso contrário, <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se qualquer instância de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for nulo, o &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;do <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> será <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets the value of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Obtém o valor da <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
          <target state="translated">Essa propriedade é somente leitura.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid raising an <ph id="ph1">`OracleNullValueException`</ph>, always check the &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt; property before reading the <ph id="ph2">`Value`</ph> property.</source>
          <target state="translated">Para evitar a geração um <ph id="ph1">`OracleNullValueException`</ph>, sempre verifique o &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;propriedade antes da leitura de <ph id="ph2">`Value`</ph> propriedade.&lt;/xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">O valor de <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> estrutura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>