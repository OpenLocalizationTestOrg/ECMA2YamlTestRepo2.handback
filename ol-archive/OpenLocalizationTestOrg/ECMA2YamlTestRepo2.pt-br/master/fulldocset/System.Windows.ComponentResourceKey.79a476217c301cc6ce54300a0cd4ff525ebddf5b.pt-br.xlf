<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b55420315afeb95c0db4f46e0e0d108b051e98dd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.ComponentResourceKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8312a68b75350b7e11d29c984e4fb2b47d2543c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc9948f370cf5b64dc9f9991eff2838fac36d5fc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</source>
          <target state="translated">Define ou referências com base em nomes de classe em assemblies externos, bem como um identificador adicional de chaves de recurso.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> informações, consulte <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier.</source>
          <target state="translated">Essa classe implementa um tipo de objeto que é útil para a criação de chaves que são baseadas nos tipos em assemblies mais de um identificador.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because you define or reference the type, you do not need to request a specific &lt;xref:System.Windows.ResourceDictionary&gt;, and more than one set of resources can exist in the assembly, each differentiated by the type of their ComponentResourceKey.</source>
          <target state="translated">Como definir ou o tipo de referência, você não é necessário solicitar um determinado &lt;xref:System.Windows.ResourceDictionary&gt;, e mais de um conjunto de recursos pode existir no assembly, cada diferenciado pelo tipo de seu ComponentResourceKey.&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to define a ComponentResourceKey.</source>
          <target state="translated">Há duas maneiras de definir ComponentResourceKey.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want an easily accessible key, you can define a static property on your control class code that returns a ComponentResourceKey, constructed with a &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt; that exists in the external resource assembly, and a &lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;.</source>
          <target state="translated">Se você quiser uma chave facilmente acessível, você pode definir uma propriedade estática em seu código de classe de controle que retorna ComponentResourceKey, construído com uma &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;que existe no assembly de recursos externos e &lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;.&lt;/xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt; &lt;/xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one.</source>
          <target state="translated">A chave pode ser usada para definir estilos de padrão alternativo para controles em um assembly, alternando o assembly original do recurso externo para um personalizado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also define a named resource part within a larger control style or template to expose a customization entry point.</source>
          <target state="translated">Você também pode definir uma parte de recurso nomeado dentro de um estilo de controle maior ou um modelo para expor um ponto de entrada de personalização.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is particularly useful if you are defining a theme resource dictionary for your control.</source>
          <target state="translated">Isso é particularmente útil se você estiver definindo um dicionário de recursos de tema para o seu controle.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](../Topic/ComponentResourceKey%20Markup%20Extension.md)</ept> in verbose syntax directly to create a loose instance of the key.</source>
          <target state="translated">Você também pode usar o <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](../Topic/ComponentResourceKey%20Markup%20Extension.md)</ept> na sintaxe detalhada diretamente para criar uma instância flexível da chave.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.</source>
          <target state="translated">Isso é útil se você quiser declarar recursos particulares de outros assemblies que são menos identificáveis personalizar.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    See Remarks</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML texto uso consulte comentários</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor is not generally used, because a &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt; value and &lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt; value are required for proper initialization.</source>
          <target state="translated">O construtor padrão não é geralmente usado, porque um &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;valor e &lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;valor são necessários para a inicialização adequada.&lt;/xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt; &lt;/xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor exists primarily to support <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> XAML usage in named parameter form.</source>
          <target state="translated">O construtor padrão existe principalmente para oferecer suporte a <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> uso XAML no formato do parâmetro nomeado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> , specifying the &lt;xref:System.Type&gt; that defines the key, and an object to use as an additional resource identifier.</source>
          <target state="translated">Inicializa uma nova instância de um <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , especificando o &lt;xref:System.Type&gt;que define a chave e um objeto a ser usado como um identificador de recurso adicional.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor exist for two scenarios, with the first scenario being the most important:      -   Supports creating a &lt;xref:System.Windows.ComponentResourceKey&gt; that is then exposed as a public static field on a custom control class.</source>
          <target state="translated">Este construtor existe para dois cenários, com o primeiro cenário, sendo o mais importante: - oferece suporte à criação de um &lt;xref:System.Windows.ComponentResourceKey&gt;que, em seguida, é exposto como um campo estático público em uma classe de controle personalizado.&lt;/xref:System.Windows.ComponentResourceKey&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This simplifies a control's access to its own defined resources in the template through <ph id="ph1">`{x:Static}`</ph> usages for template property values.</source>
          <target state="translated">Isso simplifica o acesso de um controle para seus próprios recursos definidos no modelo por meio de <ph id="ph1">`{x:Static}`</ph> usos para valores de propriedade do modelo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Supports <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.</source>
          <target state="translated">-Oferece suporte a <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> uso XAML em forma de parâmetro posicional, que é uma técnica disponível para parceiros que fazem referência a um recurso do componente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The type that defines the resource key.</source>
          <target state="translated">O tipo que define a chave de recurso.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A unique identifier to differentiate this <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from others associated with the <ph id="ph1">`typeInTargetAssembly`</ph> type.</source>
          <target state="translated">Um identificador exclusivo para diferenciar este <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de outros usuários associados a <ph id="ph1">`typeInTargetAssembly`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</source>
          <target state="translated">Obtém o objeto assembly que indica o dicionário do qual assembly para procurar o valor associado a essa chave.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The retrieved assembly, as a reflection class.</source>
          <target state="translated">O assembly recuperado, como uma classe de reflexão.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Determines whether the provided object is equal to the current <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Determina se o objeto fornecido é igual ao atual <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two keys are equal if they both have the same values for all their immediate settable properties (&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;, &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;).</source>
          <target state="translated">Duas chaves são iguais se tiverem os mesmos valores para todas as suas propriedades configuráveis imediatas (&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;, &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;).&lt;/xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt; &lt;/xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Object to compare with the current <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Objeto a ser comparado com o atual <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the objects are equal; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se os objetos forem iguais; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns a hash code for this <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retorna um código hash para este <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer value.</source>
          <target state="translated">Um valor inteiro de 32 bits com sinal.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets a unique identifier to differentiate this key from others associated with this type.</source>
          <target state="translated">Obtém ou define um identificador exclusivo para diferenciar esta chave de outros usuários associados a esse tipo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> informações, consulte <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the string used for a ResourceId value conforms to the <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Normalmente, a cadeia de caracteres usada para um valor de identificação de recurso está em conformidade com a <bpt id="p1">[</bpt>gramática XamlName<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_2"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    See Remarks</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_2"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML texto uso consulte comentários</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A unique identifier.</source>
          <target state="translated">Um identificador exclusivo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Typically this is a string.</source>
          <target state="translated">Normalmente, isso é uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the string representation of a <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Obtém a representação de cadeia de caracteres de um <bpt id="p1">&lt;xref href="System.Windows.ComponentResourceKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The string representation.</source>
          <target state="translated">A representação de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Type&gt; that defines the resource key.</source>
          <target state="translated">Obtém ou define o &lt;xref:System.Type&gt;que define a chave de recurso.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> informações, consulte <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.ComponentResourceKey&gt; element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type.</source>
          <target state="translated">O &lt;xref:System.Windows.ComponentResourceKey&gt;elemento é usado por componentes personalizados para definir as chaves para recursos que são acessados de assemblies externos, com base em um assembly que contém o tipo de direcionamento.&lt;/xref:System.Windows.ComponentResourceKey&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom components often define new types which must be in the assembly where the resource is located.</source>
          <target state="translated">Componentes personalizados geralmente definem novos tipos que devem ser no assembly em que o recurso está localizado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a &lt;xref:System.Windows.ComponentResourceKey&gt;.</source>
          <target state="translated">Esses tipos não têm nenhuma outra implementação em geral, os tipos existem somente para satisfazer os requisitos de pesquisa de &lt;xref:System.Windows.ComponentResourceKey&gt;.&lt;/xref:System.Windows.ComponentResourceKey&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_3"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    See Remarks</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_3"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML texto uso consulte comentários</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The type that defines the resource key.</source>
          <target state="translated">O tipo que define a chave de recurso.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>