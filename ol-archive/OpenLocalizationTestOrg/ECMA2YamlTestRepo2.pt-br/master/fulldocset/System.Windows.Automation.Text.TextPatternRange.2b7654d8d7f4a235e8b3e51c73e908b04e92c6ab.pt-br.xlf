<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ce462ec6d08f53e85ba17f2d1c8385fd5c72f20</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Automation.Text.TextPatternRange.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bc2543dafa7e3aeecb308c621e5fa929041bbf8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d4e5212b60b890f55de14778ddcb2b8d31f2f0a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a span of continuous text in a <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> container.</source>
          <target state="translated">Representa um intervalo de texto contínuo em uma <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contêiner.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A TextPatternRange can represent an insertion point, a subset, or all of the text in a &lt;xref:System.Windows.Automation.TextPattern&gt; container.</source>
          <target state="translated">Um TextPatternRange pode representar um ponto de inserção, um subconjunto ou todo o texto em uma &lt;xref:System.Windows.Automation.TextPattern&gt;contêiner.&lt;/xref:System.Windows.Automation.TextPattern&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A TextPatternRange will become invalid if one of the following occurs: the text in the &lt;xref:System.Windows.Automation.TextPattern&gt; container changes because of some user activity, or the &lt;xref:System.Windows.Automation.ValuePattern.SetValue%2A&gt; method of &lt;xref:System.Windows.Automation.ValuePattern&gt; is used to programmatically change the value of the text in the &lt;xref:System.Windows.Automation.TextPattern&gt; container.</source>
          <target state="translated">Um TextPatternRange se tornarão inválido se ocorrer um dos seguintes: o texto no &lt;xref:System.Windows.Automation.TextPattern&gt;alterações contêiner devido a alguma atividade de usuário, ou o &lt;xref:System.Windows.Automation.ValuePattern.SetValue%2A&gt;método &lt;xref:System.Windows.Automation.ValuePattern&gt;é usado para alterar programaticamente o valor do texto no &lt;xref:System.Windows.Automation.TextPattern&gt;contêiner.&lt;/xref:System.Windows.Automation.TextPattern&gt; &lt;/xref:System.Windows.Automation.ValuePattern&gt; &lt;/xref:System.Windows.Automation.ValuePattern.SetValue%2A&gt; &lt;/xref:System.Windows.Automation.TextPattern&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">Adiciona à coleção do texto realçado em um contêiner de texto que dá suporte a vários, seleções de separação.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text insertion point moves to the area of the new selection.</source>
          <target state="translated">Move o ponto de inserção de texto para a área da nova seleção.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Providing a degenerate text range moves the insertion point.</source>
          <target state="translated">Fornece um intervalo de texto degenerado move o ponto de inserção.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If text provider does not support multiple, disjoint selections (for example, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt; must have a value of <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Se o provedor de texto não oferece suporte a várias seleções de disjunção (por exemplo, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;deve ter um valor de <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).&lt;/xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Retrieves a new <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identical to the original <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and inheriting all properties of the original.</source>
          <target state="translated">Recupera um novo <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> idêntico ao valor original <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> e herança de todas as propriedades do original.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, create a new &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; from the &lt;xref:System.Windows.Automation.TextPattern&gt; and move the two endpoints to correspond with the endpoints of the original text range.</source>
          <target state="translated">Como alternativa, crie um novo &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;do &lt;xref:System.Windows.Automation.TextPattern&gt;e mover os dois pontos de extremidade para corresponder com os pontos de extremidade do intervalo de texto original.&lt;/xref:System.Windows.Automation.TextPattern&gt; &lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new range can be manipulated independently from the original.</source>
          <target state="translated">O novo intervalo de pode ser manipulado de forma independente do original.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The new text range.</source>
          <target state="translated">O novo intervalo de texto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) is never returned.</source>
          <target state="translated">Uma referência nula (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> em <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) nunca é retornada.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Boolean&gt; value indicating whether the span (the <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> endpoint to the <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint) of a text range is the same as another text range.</source>
          <target state="translated">Retorna um &lt;xref:System.Boolean&gt;valor que indica se o alcance (o <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ponto de extremidade para o <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ponto de extremidade) de um texto intervalo for igual a outro intervalo de texto.&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A text range to compare.</source>
          <target state="translated">Um intervalo de texto a ser comparado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the span of both text ranges is identical; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o alcance dos dois intervalos de texto é idêntico; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the range being compared does not come from the same text provider.</source>
          <target state="translated">Se o intervalo que estão sendo comparado não são provenientes do mesmo fornecedor de texto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Int32&gt; indicating whether two text ranges have identical endpoints.</source>
          <target state="translated">Retorna um &lt;xref:System.Int32&gt;que indica se dois intervalos de texto têm pontos de extremidade idênticos.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>By comparing the starting and ending endpoints of the same text range you can identify if a text range is degenerate or if the endpoints are in the order of logical text flow.</source>
          <target state="translated">Comparando os pontos de extremidade iniciais e final do mesmo intervalo de texto, você pode identificar se um intervalo de texto é degenerado ou se os pontos de extremidade estão na ordem de fluxo lógico de texto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint of the caller.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ponto de extremidade do chamador.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The target range for comparison.</source>
          <target state="translated">O intervalo de destino para comparação.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint of the target.</source>
          <target state="translated">O <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ponto de extremidade de destino.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</source>
          <target state="translated">Retorna um valor negativo se o ponto de extremidade do chamador ocorre anteriormente no texto que o ponto de extremidade de destino.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns zero if the caller's endpoint is at the same location as the target endpoint.</source>
          <target state="translated">Retorna zero se o ponto de extremidade do chamador está no mesmo local que o ponto de extremidade de destino.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</source>
          <target state="translated">Retorna um valor positivo se o ponto de extremidade do chamador ocorre posteriormente no texto que o ponto de extremidade de destino.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If range is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">Se o intervalo for uma referência nula (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> em <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If range is from another container.</source>
          <target state="translated">Se o intervalo é de outro contêiner.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Expands the text range to the specified <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Expande o intervalo de texto especificado <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the range is already an exact quantity of the specified units then it remains unchanged.</source>
          <target state="translated">Se o intervalo já tiver uma quantidade exata das unidades especificadas permanece inalterado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for the ExpandToEnclosingUnit method to execute successfully, a sequence of actions is performed behind the scenes.</source>
          <target state="translated">Em ordem para o método ExpandToEnclosingUnit será executada com êxito, uma sequência de ações é executada em segundo plano.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, making the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">O intervalo de texto é normalizado; ou seja, o intervalo de texto é recolhido para um intervalo degenerado no &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;ponto de extremidade, tornando o &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;supérfluo de ponto de extremidade.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">Essa etapa é necessária para remover ambiguidade em situações nas quais um intervalo de texto abrange <ph id="ph1">`unit`</ph> limites; por exemplo, "{a U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> é inserido no texto" onde "{" e "}" é pontos de extremidade do intervalo de texto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">O intervalo resultante é movido para trás no &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;para o início da solicitados <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is moved forward or backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; by the requested number of <ph id="ph1">`unit`</ph> boundaries.</source>
          <target state="translated">O intervalo é movido para frente ou para trás no &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;pelo número solicitado de <ph id="ph1">`unit`</ph> limites.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">O intervalo é expandido de um estado de intervalo degenerado movendo o &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;ponto de extremidade por solicitado <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</source>
          <target state="translated"><bpt id="p1">![</bpt>Ajustes de intervalo por Move ExpandToEnclosingUnit &amp;<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>ajustes de intervalo por Move ExpandToEnclosingUnit &amp;<ept id="p2">")</ept> exemplos de como um intervalo de texto é ajustado para Move () e ExpandToEnclosingUnit () &gt; <ph id="ph1">[!NOTE]</ph> &gt; essas etapas são necessárias porque é comum para leitores de tela ler uma palavra, frase ou todo o parágrafo em qualquer posição de cursor virtual ou o ponto de inserção.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>ExpandToEnclosingUnit respects both hidden and visible text.</source>
          <target state="translated">ExpandToEnclosingUnit respeita texto oculto e visível.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">O cliente de automação de interface do usuário pode verificar o &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;de visibilidade do texto.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>ExpandToEnclosingUnit defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">ExpandToEnclosingUnit transfere para o próximo maior &lt;xref:System.Windows.Automation.Text.TextUnit&gt;com suporte se o determinado &lt;xref:System.Windows.Automation.Text.TextUnit&gt;não é suportado pelo controle.&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">A ordem, da unidade menor ao maior, é listada abaixo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;</source>
          <target state="translated">-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The textual unit.</source>
          <target state="translated">A unidade textual.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns a text range subset that has the specified attribute value.</source>
          <target state="translated">Retorna um subconjunto do intervalo de texto que tem o valor de atributo especificado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">Não há nenhuma diferenciação entre texto oculto e visível.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>UI Automation clients can use &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; to check text visibility.</source>
          <target state="translated">Clientes de automação de interface do usuário podem usar &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;para verificar a visibilidade do texto.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to search the entire document.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Use &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;para pesquisar todo o documento.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The attribute to search for.</source>
          <target state="translated">O atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The attribute value to search for.</source>
          <target state="translated">O valor do atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This value must match the type specified for the attribute.</source>
          <target state="translated">Esse valor deve corresponder ao tipo especificado para o atributo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the last occurring text range should be returned instead of the first; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o último intervalo de texto que está ocorrendo deve ser retornado em vez da primeira. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A text range having a matching attribute and attribute value; otherwise null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">Um intervalo de texto com um atributo correspondente e um valor de atributo; Caso contrário, nulo (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> em <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns a text range subset that contains the specified text.</source>
          <target state="translated">Retorna um subconjunto do intervalo de texto que contém o texto especificado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">Não há nenhuma diferenciação entre texto oculto e visível.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>UI Automation clients can use &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; to check text visibility.</source>
          <target state="translated">Clientes de automação de interface do usuário podem usar &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;para verificar a visibilidade do texto.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to search the entire document.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Use &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;para pesquisar todo o documento.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The text string to search for.</source>
          <target state="translated">A cadeia de caracteres de texto a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the last occurring text range should be returned instead of the first; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o último intervalo de texto que está ocorrendo deve ser retornado em vez da primeira. Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if case should be ignored; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o caso deve ser ignorado; Caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A text range matching the specified text; otherwise null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">Um intervalo de texto o texto especificado; correspondente Caso contrário, nulo (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> em <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified attribute across the entire text range.</source>
          <target state="translated">Retorna o valor do atributo especificado no intervalo de texto completo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">Não há nenhuma diferenciação entre texto oculto e visível.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>UI Automation clients can use &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; to check text visibility.</source>
          <target state="translated">Clientes de automação de interface do usuário podem usar &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;para verificar a visibilidade do texto.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The text attribute.</source>
          <target state="translated">O atributo de texto.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified attribute.</source>
          <target state="translated">Retorna o valor do atributo especificado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, GetAttributeValue(TextPattern.FontNameAttribute) would return a string that represents the font name, if unique, of the text range while GetAttributeValue(TextPattern.IsItalicAttribute) would return a boolean.</source>
          <target state="translated">Por exemplo, GetAttributeValue(TextPattern.FontNameAttribute) retornaria uma cadeia de caracteres que representa o nome da fonte, se exclusivos, do intervalo de texto ao GetAttributeValue(TextPattern.IsItalicAttribute) retornaria um valor booleano.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern.MixedAttributeValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of the specified attribute varies over the text range.</source>
          <target state="translated">Retorna <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern.MixedAttributeValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se o valor do atributo especificado varia ao longo do intervalo de texto.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement.NotSupported"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified attribute is not supported by the provider or the control.</source>
          <target state="translated">Retorna <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement.NotSupported"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se o atributo especificado não é compatível com o provedor ou o controle.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the specified attribute is not valid.</source>
          <target state="translated">Se o atributo especificado não é válido.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</source>
          <target state="translated">Recupera uma coleção de delimitadora retângulos para cada linha total ou parcialmente visível de texto em um intervalo de texto.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An array of bounding rectangles for each full or partial line of text in a text range.</source>
          <target state="translated">Uma matriz de delimitadora retângulos para cada linha de total ou parcial de texto em um intervalo de texto.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An empty array for a degenerate text range.</source>
          <target state="translated">Uma matriz vazia para um intervalo de texto de degeneração.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</source>
          <target state="translated">Uma matriz vazia para um intervalo de texto que tem as coordenadas da tela colocá-lo completamente fora da tela, rolado para fora da exibição ou obscurecida por uma janela de sobreposição.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of all embedded objects that fall within the text range.</source>
          <target state="translated">Recupera uma coleção de todos os objetos inseridos que estão dentro do intervalo de texto.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A collection of all child objects that fall within the range.</source>
          <target state="translated">Uma coleção de todos os objetos filho que estão dentro do intervalo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Children that overlap with the range but are not entirely enclosed by it will also be included in the collection.</source>
          <target state="translated">Também serão incluídos na coleção de filhos que sobrepõem o intervalo, mas não são totalmente delimitados por ele.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns an empty collection if there are no child objects.</source>
          <target state="translated">Retorna uma coleção vazia se não houver nenhum objeto filho.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns the innermost <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that encloses the text range.</source>
          <target state="translated">Retorna o mais interno <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que inclui o intervalo de texto.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enclosing &lt;xref:System.Windows.Automation.AutomationElement&gt;, typically the text provider that supplies the text range.</source>
          <target state="translated">O delimitador &lt;xref:System.Windows.Automation.AutomationElement&gt;, normalmente o provedor de texto que fornece o intervalo de texto.&lt;/xref:System.Windows.Automation.AutomationElement&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</source>
          <target state="translated">No entanto, se o provedor de texto oferece suporte a elementos filho, como tabelas ou hiperlinks, o elemento de fechamento pode ser um descendente do provedor de texto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The innermost element enclosing the caller.</source>
          <target state="translated">O elemento interno colocar o chamador.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns the plain text of the text range.</source>
          <target state="translated">Retorna o texto sem formatação do intervalo de texto.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetText respects both hidden and visible text.</source>
          <target state="translated">GetText respeita texto oculto e visível.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">O cliente de automação de interface do usuário pode verificar o &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;de visibilidade do texto.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`maxLength`</ph> is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</source>
          <target state="translated">Se <ph id="ph1">`maxLength`</ph> for maior que o comprimento da extensão de texto do chamador, a cadeia de caracteres retornada será o texto sem formatação do intervalo de texto.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetText will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</source>
          <target state="translated">GetText não será afetado pela ordem de pontos de extremidade no fluxo de texto; sempre retornará o texto entre os pontos de extremidade de início e término do intervalo de texto na ordem de fluxo lógico de texto.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The maximum length of the string to return.</source>
          <target state="translated">O comprimento máximo da cadeia de caracteres para retornar.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`-1`</ph> if no limit is required.</source>
          <target state="translated">Use <ph id="ph1">`-1`</ph> se nenhum limite é necessário.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The plain text of the text range, possibly truncated at the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxLength</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">O texto sem formatação do intervalo de texto, possivelmente truncado em especificado <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxLength</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxLength</ph><ept id="p1">&lt;/code&gt;</ept> is less than -1.</source>
          <target state="translated">Se <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxLength</ph> <ept id="p1">&lt;/code&gt;</ept> é menor que -1.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Moves the text range the specified number of text units.</source>
          <target state="translated">Move o intervalo de texto, o número especificado de unidades de texto.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the Move method to execute successfully.</source>
          <target state="translated">Quando for necessário atravessar o conteúdo de um intervalo de texto, uma série de etapas envolvidas em segundo plano para que o método Move executar com êxito.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, which makes the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">O intervalo de texto é normalizado; ou seja, o intervalo de texto é recolhido para um intervalo degenerado no &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;ponto de extremidade, o que torna o &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;supérfluo de ponto de extremidade.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">Essa etapa é necessária para remover ambiguidade em situações nas quais um intervalo de texto abrange <ph id="ph1">`unit`</ph> limites; por exemplo, "{a U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> é inserido no texto" onde "{" e "}" é pontos de extremidade do intervalo de texto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">O intervalo resultante é movido para trás no &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;para o início da solicitados <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is moved forward or backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; by the requested number of <ph id="ph1">`unit`</ph> boundaries.</source>
          <target state="translated">O intervalo é movido para frente ou para trás no &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;pelo número solicitado de <ph id="ph1">`unit`</ph> limites.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">O intervalo é expandido de um estado de intervalo degenerado movendo o &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;ponto de extremidade por solicitado <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()       The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
          <target state="translated"><bpt id="p1">![</bpt>Ajustes de intervalo por Move ExpandToEnclosingUnit &amp;<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>ajustes de intervalo por Move ExpandToEnclosingUnit &amp;<ept id="p2">")</ept> exemplos de como um intervalo de texto é ajustado para Move () e ExpandToEnclosingUnit (), o conteúdo textual (ou texto interno) de um recipiente de texto e um objeto inserido, como um hiperlink ou célula de tabela, é exposto como um fluxo de texto único e contínuo em visualização de controle e exibição de conteúdo a <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> árvore; objeto limites são ignorados.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects.</source>
          <target state="translated">Se um cliente de automação de interface do usuário estiver recuperando o texto com a finalidade de citar, interpretar, ou analisar de alguma maneira, o intervalo de texto deve ser verificado para casos especiais, como uma tabela com textuais conteúdos ou outros objetos inseridos.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be accomplished by calling &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt; to obtain an &lt;xref:System.Windows.Automation.AutomationElement&gt; for each embedded object and then calling &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; to obtain a text range for each element; this is done recursively until all textual content has been retrieved.</source>
          <target state="translated">Isso pode ser conseguido chamando &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;para obter um &lt;xref:System.Windows.Automation.AutomationElement&gt;para cada embedded objeto e, em seguida, chamar &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;para obter um intervalo de texto para cada elemento; isso é feito de forma recursiva até que todo o conteúdo textual tiver sido recuperado.&lt;/xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; &lt;/xref:System.Windows.Automation.AutomationElement&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Text ranges spanned by embedded objects.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Intervalos de texto abrangidos por objetos inseridos. <ept id="p1">]</ept> <bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Intervalos de texto abrangidos por objetos inseridos.<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example of a text stream with embedded objects and their range spans       Move respects both hidden and visible text.</source>
          <target state="translated">Exemplo de um fluxo de texto com objetos inseridos e o intervalo abrange mover aspectos ambos ocultados e texto visível.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">O cliente de automação de interface do usuário pode verificar o &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;de visibilidade do texto.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Move defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">Mover transfere para o próximo maior &lt;xref:System.Windows.Automation.Text.TextUnit&gt;com suporte se o determinado &lt;xref:System.Windows.Automation.Text.TextUnit&gt;não é suportado pelo controle.&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">A ordem, da unidade menor ao maior, é listada abaixo.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  The text is not altered in any way as the text range just spans a different part of the text.</source>
          <target state="translated">- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&gt; <ph id="ph1">[!NOTE]</ph> &gt; O texto não é alterado de alguma forma, como o intervalo de texto abrange apenas uma parte diferente do texto.&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The text unit boundary.</source>
          <target state="translated">O limite de unidade de texto.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The number of text units to move.</source>
          <target state="translated">O número de unidades de texto para mover.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</source>
          <target state="translated">Um valor positivo avança o intervalo de texto, um valor negativo move o intervalo de texto com versões anteriores e 0 não tem nenhum efeito.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The number of units actually moved.</source>
          <target state="translated">O número de unidades realmente movido.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This can be less than the number requested if either of the new text range endpoints is greater than or less than the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange*&gt; endpoints.</source>
          <target state="translated">Isso pode ser menor que o número solicitado se qualquer um dos pontos de extremidade de intervalo de texto novo é maior ou menor do que o &lt;xref:System.Windows.Automation.TextPattern.DocumentRange*&gt;pontos de extremidade.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange*&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Moves one endpoint of a text range to the specified endpoint of a second text range.</source>
          <target state="translated">Move um ponto de extremidade de um intervalo de texto para o ponto de extremidade especificado de um segundo intervalo de texto.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; is always less than or equal to &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;).</source>
          <target state="translated">Se o ponto de extremidade que está sendo movido cruza o outro ponto de extremidade do mesmo intervalo de texto e outro ponto de extremidade é movido também, resultando em um intervalo degenerado e garantir que a ordenação correta dos pontos de extremidade (ou seja, &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;sempre é menor ou igual a &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;).&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The endpoint to move.</source>
          <target state="translated">O ponto de extremidade para mover.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Another range from the same text provider.</source>
          <target state="translated">Outro intervalo do mesmo provedor de texto.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An endpoint on the other range.</source>
          <target state="translated">Um ponto de extremidade no outro intervalo.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Moves one endpoint of the text range the specified number of <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>s within the document range.</source>
          <target state="translated">Move um ponto de extremidade do texto variar o número especificado de <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>s dentro do intervalo do documento.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the &lt;xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt; method to execute successfully.</source>
          <target state="translated">Quando for necessário atravessar o conteúdo de um intervalo de texto, uma série de etapas envolvidas em segundo plano para que o &lt;xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt;método seja executado com êxito.&lt;/xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, which makes the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">O intervalo de texto é normalizado; ou seja, o intervalo de texto é recolhido para um intervalo degenerado no &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;ponto de extremidade, o que torna o &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;supérfluo de ponto de extremidade.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">Essa etapa é necessária para remover ambiguidade em situações nas quais um intervalo de texto abrange <ph id="ph1">`unit`</ph> limites; por exemplo, "{a U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> é inserido no texto" onde "{" e "}" é pontos de extremidade do intervalo de texto.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">O intervalo resultante é movido para trás no &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;para o início da solicitados <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">O intervalo é expandido de um estado de intervalo degenerado movendo o &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;ponto de extremidade por solicitado <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()       The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
          <target state="translated"><bpt id="p1">![</bpt>Ajustes de intervalo por Move ExpandToEnclosingUnit &amp;<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>ajustes de intervalo por Move ExpandToEnclosingUnit &amp;<ept id="p2">")</ept> exemplos de como um intervalo de texto é ajustado para Move () e ExpandToEnclosingUnit (), o conteúdo textual (ou texto interno) de um recipiente de texto e um objeto inserido, como um hiperlink ou célula de tabela, é exposto como um fluxo de texto único e contínuo em visualização de controle e exibição de conteúdo a <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> árvore; objeto limites são ignorados.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects.</source>
          <target state="translated">Se um cliente de automação de interface do usuário estiver recuperando o texto com a finalidade de citar, interpretar, ou analisar de alguma maneira, o intervalo de texto deve ser verificado para casos especiais, como uma tabela com textuais conteúdos ou outros objetos inseridos.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be accomplished by calling &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt; to obtain an &lt;xref:System.Windows.Automation.AutomationElement&gt; for each embedded object and then calling &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; to obtain a text range for each element; this is done recursively until all textual content has been retrieved.</source>
          <target state="translated">Isso pode ser conseguido chamando &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;para obter um &lt;xref:System.Windows.Automation.AutomationElement&gt;para cada embedded objeto e, em seguida, chamar &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;para obter um intervalo de texto para cada elemento; isso é feito de forma recursiva até que todo o conteúdo textual tiver sido recuperado.&lt;/xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; &lt;/xref:System.Windows.Automation.AutomationElement&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Text ranges spanned by embedded objects.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Intervalos de texto abrangidos por objetos inseridos. <ept id="p1">]</ept> <bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Intervalos de texto abrangidos por objetos inseridos.<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example of a text stream with embedded objects and their range spans       MoveEndpointByUnit defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">Exemplo de um fluxo de texto com objetos inseridos e seus intervalos abrangentes MoveEndpointByUnit transfere para o próximo maior &lt;xref:System.Windows.Automation.Text.TextUnit&gt;com suporte se o determinado &lt;xref:System.Windows.Automation.Text.TextUnit&gt;não é suportado pelo controle.&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">A ordem, da unidade menor ao maior, é listada abaixo.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;</source>
          <target state="translated">-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The endpoint to move.</source>
          <target state="translated">O ponto de extremidade para mover.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The textual unit for moving.</source>
          <target state="translated">A unidade textual para mover.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The number of units to move.</source>
          <target state="translated">O número de unidades a serem movidas.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A positive count moves the endpoint forward.</source>
          <target state="translated">Uma contagem positiva avança o ponto de extremidade.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A negative count moves backward.</source>
          <target state="translated">Uma contagem negativa move para trás.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A count of 0 has no effect.</source>
          <target state="translated">Uma contagem de 0 não tem nenhum efeito.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</source>
          <target state="translated">O número de unidades realmente movidos, que pode ser menor que o número solicitado se mover que o ponto de extremidade é executado no início ou no final do documento.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Removes a highlighted section of text, corresponding to the calling text range <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoints, from an existing collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">Remove uma seção realçada de texto, correspondente ao intervalo de texto chamada <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> pontos de extremidade de uma coleção existente do texto realçado em um contêiner de texto que dá suporte a várias seleções de separação.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text insertion point will move to the area of the removed highlight.</source>
          <target state="translated">O ponto de inserção de texto será movido para a área do realce removido.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Providing a degenerate text range will move the insertion point.</source>
          <target state="translated">Fornece um intervalo de texto degenerado moverá o ponto de inserção.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If text provider does not support multiple, disjoint selections (for example, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt; must have a value of <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Se o provedor de texto não oferece suporte a várias seleções de disjunção (por exemplo, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;deve ter um valor de <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).&lt;/xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Causes the text control to scroll vertically until the text range is visible in the viewport.</source>
          <target state="translated">Faz com que o controle de texto rolar verticalmente até que o intervalo de texto é visível no visor.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>ScrollIntoView respects both hidden and visible text.</source>
          <target state="translated">ScrollIntoView respeita texto oculto e visível.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">O cliente de automação de interface do usuário pode verificar o &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;de visibilidade do texto.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</source>
          <target state="translated">Se o intervalo de texto está oculto, o controle de texto será rolada somente se o texto oculto tem uma âncora no visor.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the text control should be scrolled so the text range is flush with the top of the viewport; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it should be flush with the bottom of the viewport.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o controle de texto deve ser rolado para que o intervalo de texto é alinhado com a parte superior do visor; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se ele deve ser alinhado com a parte inferior do visor.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If scrolling is not supported by the control.</source>
          <target state="translated">Se o controle não tem suporte a rolagem.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Highlights text in the text control corresponding to the text range <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoints.</source>
          <target state="translated">Realça o texto no controle de texto correspondente ao intervalo de texto <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> pontos de extremidade.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a degenerate text range is provided, the text insertion point will move to the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint of the text range.</source>
          <target state="translated">Se um intervalo de texto degenerado for fornecido, o ponto de inserção de texto será movido para o &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;ponto de extremidade do intervalo de texto.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Occurs when text selection is not supported by the text control.</source>
          <target state="translated">Ocorre quando a seleção de texto não é suportada pelo controle de texto.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the text range.</source>
          <target state="translated">Obtém o <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> associada ao intervalo de texto.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The text provider.</source>
          <target state="translated">O provedor de texto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>