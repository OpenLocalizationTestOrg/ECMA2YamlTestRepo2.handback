<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4d15d3e6a4f89b6716cb6abc8621f0e7d232071</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.CompilerServices.IsLong.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba2a76fc35dfd3a3e1e4c456476653b2166bdec9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e0a2aaf2b40709702b0510bd2ffcac129895705</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates that a modified integer is a standard C++ <bpt id="p1">&lt;xref uid="langword_csharp_long" name="long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">Angir at en endrede heltall er en standard C++ <bpt id="p1">&lt;xref uid="langword_csharp_long" name="long" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> verdi.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Denne klassen kan ikke arves.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The C++ standard indicates that a <ph id="ph1">`long`</ph> value and an integer value are distinct types.</source>
          <target state="translated">C++ standard indikerer at en <ph id="ph1">`long`</ph> verdien og en heltallsverdi er forskjellige typer.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, they are both represented using <ph id="ph1">`ELEMENT_TYPE_I4`</ph> in an assembly.</source>
          <target state="translated">Imidlertid de begge representeres ved hjelp av <ph id="ph1">`ELEMENT_TYPE_I4`</ph> i en samling.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To distinguish a <ph id="ph1">`long`</ph> from an integer in C++, the Microsoft C++ compiler adds the IsLong modifier to any instance of a <ph id="ph2">`long`</ph> when the instance is emited.</source>
          <target state="translated">Til å skille mellom en <ph id="ph1">`long`</ph> fra et heltall i C++ Microsoft C++ kompilatoren legger til IsLong modifikatoren i noen forekomster av en <ph id="ph2">`long`</ph> når forekomsten er emited.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This process is critically important for maintaining language-level type safety.</source>
          <target state="translated">Denne prosessen er svært viktig for å vedlikeholde nivå språk typen sikkerhet.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</source>
          <target state="translated">Kompilatorer Send egendefinerte modifikatorer i metadata for å endre måten utelukkende tidsnok (JIT) kompilatoren håndterer verdier når standard virkemåte ikke er riktig.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</source>
          <target state="translated">Når JIT kompilatoren støter egendefinerte modifikatoren, behandler verdi som angir modifikatoren.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Compilers can apply custom modifiers to methods, parameters, and return values.</source>
          <target state="translated">Kompilatorer kan bruke egendefinerte modifikatorer metoder, parametere, og returnere verdier.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The JIT compiler must respond to required modifiers but can ignore optional modifiers.</source>
          <target state="translated">JIT kompilatoren må svare på obligatoriske modifikatorer, men kan ignorere valgfrie modifikatorer.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can emit custom modifiers into metadata using one of the following techniques:      -   Using methods in the &lt;xref:System.Reflection.Emit.TypeBuilder&gt; class such as &lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;, &lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;, &lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;, and &lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;.</source>
          <target state="translated">Du kan sende egendefinerte modifikatorer til metadata ved hjelp av én av disse metodene:-bruker metodene i den &lt;xref:System.Reflection.Emit.TypeBuilder&gt;klasse som &lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;, &lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;, &lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;, og &lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;.&lt;/xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to <ph id="ph1">`modopt`</ph> and <ph id="ph2">`modreq`</ph>, and assembling the file with the <bpt id="p1">[</bpt>Ilasm.exe (IL Assembler)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-Generering av en Microsoft mellomspråk (MSIL) instruksjonsfil som inneholder kall til <ph id="ph1">`modopt`</ph> og <ph id="ph2">`modreq`</ph>, og samle filen med den <bpt id="p1">[</bpt>Ilasm.exe (IL Assembler)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Using the unmanaged reflection API.</source>
          <target state="translated">-Bruker uforvaltede gjenspeilingen API.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>