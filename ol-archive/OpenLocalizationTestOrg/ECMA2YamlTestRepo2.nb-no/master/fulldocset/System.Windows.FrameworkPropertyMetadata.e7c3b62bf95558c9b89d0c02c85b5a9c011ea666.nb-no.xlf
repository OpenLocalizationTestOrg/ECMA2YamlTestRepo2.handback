<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d09a32cf05909536a9016c9613e848634f520d8b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.FrameworkPropertyMetadata.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ce04c5a688c1da3dcf0b9a592994f41fa7022c5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3d94579fab6a7da9eb09e2f1fbaa83afdfae263</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reports or applies metadata for a dependency property, specifically adding framework-specific property system characteristics.</source>
          <target state="translated">Rapporter eller gjelder metadata for en avhengighetsegenskapen, spesielt tillegging av framework-spesifikke egenskapen system egenskaper.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class derives from &lt;xref:System.Windows.PropertyMetadata&gt; (through &lt;xref:System.Windows.UIPropertyMetadata&gt;) .</source>
          <target state="translated">Denne klassen er avledet fra &lt;xref:System.Windows.PropertyMetadata&gt;(via &lt;xref:System.Windows.UIPropertyMetadata&gt;).&lt;/xref:System.Windows.UIPropertyMetadata&gt; &lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most WPF framework-level application development purposes, FrameworkPropertyMetadata is the type used for dependency property metadata, rather than the base metadata types &lt;xref:System.Windows.PropertyMetadata&gt; or &lt;xref:System.Windows.UIPropertyMetadata&gt;.</source>
          <target state="translated">For de fleste WPF framework program programutvikling er FrameworkPropertyMetadata brukt for avhengighet egenskapmetadata i stedet base metadataene typer &lt;xref:System.Windows.PropertyMetadata&gt;eller &lt;xref:System.Windows.UIPropertyMetadata&gt;.&lt;/xref:System.Windows.UIPropertyMetadata&gt; &lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is true both for existing dependency properties and for most custom dependency property scenarios.</source>
          <target state="translated">Dette gjelder for eksisterende avhengighetsegenskaper og for de fleste tilfeller for egendefinert avhengighet-egenskapen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The members declared by this class that supplement the &lt;xref:System.Windows.PropertyMetadata&gt; base class include various Boolean properties that specify or report WPF framework-level property system behavior such as property inheritance, data binding, and layout.</source>
          <target state="translated">Medlemmer som er deklarert av denne klassen som tillegget av &lt;xref:System.Windows.PropertyMetadata&gt;basisklassen inkluderer ulike boolske egenskaper som angir eller rapportere WPF framework nivå system egenskap for eksempel egenskapsarv, databinding og oppsett.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Several constructor signatures for creating a FrameworkPropertyMetadata instance take a &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt; parameter.</source>
          <target state="translated">Flere konstruktøren signaturer for å opprette en forekomst av FrameworkPropertyMetadata ta en &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;parameter.&lt;/xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt; enumeration is used only to specify initial behavior in the constructor, and is not otherwise exposed after FrameworkPropertyMetadata is constructed.</source>
          <target state="translated">Den &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;nummerering brukes bare til å angi første virkemåte i konstruktøren, og ellers vises ikke når FrameworkPropertyMetadata bygges.&lt;/xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>From a constructed instance, you can get or set the corresponding information through various properties that share the name of the enumeration values used in the constructor call.</source>
          <target state="translated">Du kan hente eller angi den tilsvarende informasjonen til ulike egenskaper som deler navnet på opplistingsverdiene som brukes i konstruktøren kallet fra en konstruerte forekomsten.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    This class is not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk som denne klassen ikke brukes vanligvis i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature initializes all values of FrameworkPropertyMetadata to their property defaults.</source>
          <target state="translated">Denne signaturen initialiserer alle verdier i FrameworkPropertyMetadata til standardverdiene egenskapen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; will be <ph id="ph1">`null`</ph>, and the various &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; Boolean properties will be <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;blir <ph id="ph1">`null`</ph>, og de ulike &lt;xref:System.Windows.FrameworkPropertyMetadata&gt;boolske egenskaper blir <ph id="ph2">`false`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified default value.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med en angitt standardverdi.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Typen for den angitte verdien for <ph id="ph1">`defaultValue`</ph> må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt; has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">Verdien &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The default value of the dependency property, usually provided as a value of a specific type.</source>
          <target state="translated">Standardverdien for avhengighetsegenskapen, vanligvis angitt som en verdi for en spesifikk type.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph>er satt til <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; se kommentarer.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> callback.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med den angitte <bpt id="p2">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> tilbakeringing.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the provided default value and framework-level metadata options.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse framework nivå metadata alternativer og angitt standardverdi.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Typen for den angitte verdien for <ph id="ph1">`defaultValue`</ph> må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt; has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">Verdien &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; properties that match that &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt; flag's name to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Verdier som er merket som sett flaggene i den <ph id="ph1">`flags`</ph> parameteren vil angi den boolske verdien av &lt;xref:System.Windows.FrameworkPropertyMetadata&gt;Egenskaper som samsvarer med &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;for navnet <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadataOptions&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can subsequently change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Du kan deretter endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The default value of the dependency property, usually provided as a value of a specific type.</source>
          <target state="translated">Standardverdien for avhengighetsegenskapen, vanligvis angitt som en verdi for en spesifikk type.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The metadata option flags (a combination of <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values).</source>
          <target state="translated">Metadata alternativet flaggene (en kombinasjon av <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> verdier).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph>er satt til <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; se kommentarer.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the provided default value and specified <bpt id="p2">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> callback.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse med en angitt standardverdi og angitt <bpt id="p2">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> tilbakeringing.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Typen for den angitte verdien for <ph id="ph1">`defaultValue`</ph> må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt; has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">Verdien &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value of the dependency property, usually provided as a value of a specific type.</source>
          <target state="translated">Standardverdien for avhengighetsegenskapen, vanligvis angitt som en verdi for en spesifikk type.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph>er satt til <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; se kommentarer.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified callbacks.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med de angitte tilbakeringinger.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation calls a base initializer and then adds the <ph id="ph1">`coerceValueCallback`</ph> by setting the property on the base instance.</source>
          <target state="translated">Denne implementeringen kaller base initialisering og deretter legger til den <ph id="ph1">`coerceValueCallback`</ph> ved å sette egenskapen på basis-forekomsten.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation will be called whenever the property system calls &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt; for this dependency property.</source>
          <target state="translated">En referanse til et behandlingsprogram implementering kalles når egenskapen systemet kaller &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt;for denne avhengighetsegenskapen.&lt;/xref:System.Windows.DependencyObject.CoerceValue*&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the provided default value and framework metadata options, and specified <bpt id="p2">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> callback.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse med de angitte verdien og framework metadata standardalternativene og angitt <bpt id="p2">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> tilbakeringing.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Typen for den angitte verdien for <ph id="ph1">`defaultValue`</ph> må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt; has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">Verdien &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; properties that match that &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt; flag's name to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Verdier som er merket som sett flaggene i den <ph id="ph1">`flags`</ph> parameteren vil angi den boolske verdien av &lt;xref:System.Windows.FrameworkPropertyMetadata&gt;Egenskaper som samsvarer med &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;for navnet <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadataOptions&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Du kan fortsatt endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default value of the dependency property, usually provided as a value of a specific type.</source>
          <target state="translated">Standardverdien for avhengighetsegenskapen, vanligvis angitt som en verdi for en spesifikk type.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The metadata option flags (a combination of <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values).</source>
          <target state="translated">Metadata alternativet flaggene (en kombinasjon av <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> verdier).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph>er satt til <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; se kommentarer.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the provided default value and specified callbacks.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med den angitte standardverdien og angitte tilbakeringinger.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Typen for den angitte verdien for <ph id="ph1">`defaultValue`</ph> må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt; has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">Verdien &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default value of the dependency property, usually provided as a specific type.</source>
          <target state="translated">Standardverdien for avhengighetsegenskapen, vanligvis angitt som en spesifikk type.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that will be called whenever the property system calls &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt; for this dependency property.</source>
          <target state="translated">En referanse til en behandlingsprogrammet implementering kalles når egenskapen systemet kaller &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt;for denne avhengighetsegenskapen.&lt;/xref:System.Windows.DependencyObject.CoerceValue*&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph>er satt til <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; se kommentarer.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the provided default value and framework metadata options, and specified callbacks.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse angitte standardverdien og framework metadata alternativene og angitte tilbakeringinger.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Typen for den angitte verdien for <ph id="ph1">`defaultValue`</ph> må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt; has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">Verdien &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; properties that match that &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt; flag's name to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Verdier som er merket som sett flaggene i den <ph id="ph1">`flags`</ph> parameteren vil angi den boolske verdien av &lt;xref:System.Windows.FrameworkPropertyMetadata&gt;Egenskaper som samsvarer med &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;for navnet <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadataOptions&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Du kan fortsatt endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default value of the dependency property, usually provided as a specific type.</source>
          <target state="translated">Standardverdien for avhengighetsegenskapen, vanligvis angitt som en spesifikk type.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The metadata option flags (a combination of <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values).</source>
          <target state="translated">Metadata alternativet flaggene (en kombinasjon av <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> verdier).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that will be called whenever the property system calls &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt; against this property.</source>
          <target state="translated">En referanse til en behandlingsprogrammet implementering kalles når egenskapen systemet kaller &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt;mot denne egenskapen.&lt;/xref:System.Windows.DependencyObject.CoerceValue*&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph>er satt til <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; se kommentarer.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the provided default value and framework metadata options, specified callbacks, and a Boolean that can be used to prevent animation of the property.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med de angitte verdien og framework metadata standardalternativene angitte tilbakeringinger og en boolsk verdi som kan brukes til å forhindre animasjonen for egenskapen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Typen for den angitte verdien for <ph id="ph1">`defaultValue`</ph> må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt; has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">Verdien &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`isAnimationProhibited`</ph> parameter sets the initial value of the &lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt; property declared by the immediate base &lt;xref:System.Windows.UIPropertyMetadata&gt; class.</source>
          <target state="translated">Den <ph id="ph1">`isAnimationProhibited`</ph> parameteren angir startverdien for &lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;egenskapen deklarert av umiddelbar base &lt;xref:System.Windows.UIPropertyMetadata&gt;klasse.&lt;/xref:System.Windows.UIPropertyMetadata&gt; &lt;/xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; properties that match that &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt; flag's name to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Verdier som er merket som sett flaggene i den <ph id="ph1">`flags`</ph> parameteren vil angi den boolske verdien av &lt;xref:System.Windows.FrameworkPropertyMetadata&gt;Egenskaper som samsvarer med &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;for navnet <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadataOptions&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Du kan fortsatt endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default value of the dependency property, usually provided as a specific type.</source>
          <target state="translated">Standardverdien for avhengighetsegenskapen, vanligvis angitt som en spesifikk type.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The metadata option flags (a combination of <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values).</source>
          <target state="translated">Metadata alternativet flaggene (en kombinasjon av <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> verdier).</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that will be called whenever the property system calls &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt; on this dependency property.</source>
          <target state="translated">En referanse til en behandlingsprogrammet implementering kalles når egenskapen systemet kaller &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt;på denne avhengighetsegenskapen.&lt;/xref:System.Windows.DependencyObject.CoerceValue*&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to prevent the property system from animating the property that this metadata is applied to.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>å hindre at systemet egenskapen animere egenskapen som disse metadataene er brukt.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Such properties will raise a run-time exception originating from the property system if animations of them are attempted.</source>
          <target state="translated">Egenskaper eksempel opphøyer et kjøretid unntak som stammer fra egenskapen systemet animasjoner av dem blir forsøkt.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to permit animating the property.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Tillat animere egenskapen.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph>er satt til <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; se kommentarer.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the provided default value and framework metadata options, specified callbacks, a Boolean that can be used to prevent animation of the property, and a data-binding update trigger default.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadata"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med de angitte standard verdi og framework metadataene alternativene, angitte tilbakeringinger en boolsk verdi som kan brukes til å forhindre animasjonen av egenskapen og standard databinding update-utløser.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Typen for den angitte verdien for <ph id="ph1">`defaultValue`</ph> må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt; has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">Verdien &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`isAnimationProhibited`</ph> parameter sets the initial value of the &lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt; property declared by the immediate base &lt;xref:System.Windows.UIPropertyMetadata&gt; class.</source>
          <target state="translated">Den <ph id="ph1">`isAnimationProhibited`</ph> parameteren angir startverdien for &lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;egenskapen deklarert av umiddelbar base &lt;xref:System.Windows.UIPropertyMetadata&gt;klasse.&lt;/xref:System.Windows.UIPropertyMetadata&gt; &lt;/xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the update source behavior for bindings, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Du finner mer informasjon om oppdateringen kilde virkemåten for bindinger <bpt id="p1">[</bpt>Data Binding oversikt over<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; properties that match that &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt; flag's name to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Verdier som er merket som sett flaggene i den <ph id="ph1">`flags`</ph> parameteren vil angi den boolske verdien av &lt;xref:System.Windows.FrameworkPropertyMetadata&gt;Egenskaper som samsvarer med &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;for navnet <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadataOptions&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Du kan fortsatt endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default value of the dependency property, usually provided as a specific type.</source>
          <target state="translated">Standardverdien for avhengighetsegenskapen, vanligvis angitt som en spesifikk type.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The metadata option flags (a combination of <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values).</source>
          <target state="translated">Metadata alternativet flaggene (en kombinasjon av <bpt id="p1">&lt;xref href="System.Windows.FrameworkPropertyMetadataOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> verdier).</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A reference to a handler implementation that will be called whenever the property system calls &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt; against this property.</source>
          <target state="translated">En referanse til en behandlingsprogrammet implementering kalles når egenskapen systemet kaller &lt;xref:System.Windows.DependencyObject.CoerceValue*&gt;mot denne egenskapen.&lt;/xref:System.Windows.DependencyObject.CoerceValue*&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to prevent the property system from animating the property that this metadata is applied to.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>å hindre at systemet egenskapen animere egenskapen som disse metadataene er brukt.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Such properties will raise a run-time exception originating from the property system if animations of them are attempted.</source>
          <target state="translated">Egenskaper eksempel opphøyer et kjøretid unntak som stammer fra egenskapen systemet animasjoner av dem blir forsøkt.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use when bindings for this property are applied that have their <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> set to <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> skal brukes når bindinger for denne egenskapen brukes som har de <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> satt til <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;defaultValue&lt;/code&gt;</ph>er satt til <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; se kommentarer.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass during layout engine operations.</source>
          <target state="translated">Henter eller angir en verdi som angir om en avhengighet potensielt påvirker ordne pass under Oppsett motoren operasjoner.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; and &lt;xref:System.Windows.FrameworkContentElement&gt; include an implementation of &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;og &lt;xref:System.Windows.FrameworkContentElement&gt;inkluderer en implementering av &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.&lt;/xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; &lt;/xref:System.Windows.FrameworkContentElement&gt;&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>As part of that logic, dependency properties that change effective value and have metadata with AffectsArrange set to <ph id="ph1">`true`</ph> will initiate a deferred request to invalidate the visuals for that element (a call to &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;).</source>
          <target state="translated">Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsArrange egenskapene til <ph id="ph1">`true`</ph> vil starte en utsatt forespørsel om å gjøre de visuelle effektene for dette elementet (et kall til &lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;).&lt;/xref:System.Windows.UIElement.InvalidateArrange%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with AffectsArrange unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsArrange før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt; implementations might choose to have similar behavior for dependency property changes where AffectsArrange is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Egendefinert &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsArrange er <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Med egenskapene i avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_AffectsArrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are either not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_AffectsArrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er enten ikke vanligvis brukt i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property on which this metadata exists potentially affects the arrange pass; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis avhengighetsegenskapen som disse metadataene finnes potensielt påvirker ordne pass; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the measure pass during layout engine operations.</source>
          <target state="translated">Henter eller angir en verdi som angir om en avhengighet potensielt påvirker målet pass under Oppsett motoren operasjoner.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; and &lt;xref:System.Windows.FrameworkContentElement&gt; include an implementation of &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;og &lt;xref:System.Windows.FrameworkContentElement&gt;inkluderer en implementering av &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.&lt;/xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; &lt;/xref:System.Windows.FrameworkContentElement&gt;&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>As part of that logic, dependency properties that change effective value and have metadata with AffectsMeasure set to <ph id="ph1">`true`</ph> will initiate a deferred request to invalidate the visuals for that element.</source>
          <target state="translated">Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsMeasure egenskapene til <ph id="ph1">`true`</ph> vil starte en utsatt forespørsel om å gjøre de visuelle effektene for dette elementet.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with AffectsMeasure unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsMeasure før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt; implementations might choose to have similar behavior for dependency property changes where AffectsMeasure is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Egendefinert &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsMeasure er <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Med egenskapene i avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_AffectsMeasure"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_AffectsMeasure"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property on which this metadata exists potentially affects the measure pass; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis avhengighetsegenskapen som disse metadataene finnes potensielt påvirker målet pass; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass of its parent element's layout during layout engine operations.</source>
          <target state="translated">Henter eller angir en verdi som angir om en avhengighet potensielt påvirker ordne pass på det overordnede elementets oppsettet under Oppsett motoren operasjoner.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; and &lt;xref:System.Windows.FrameworkContentElement&gt; include an implementation of &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;og &lt;xref:System.Windows.FrameworkContentElement&gt;inkluderer en implementering av &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.&lt;/xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; &lt;/xref:System.Windows.FrameworkContentElement&gt;&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>As part of that logic, dependency properties that change effective value and have metadata with AffectsParentArrange set to <ph id="ph1">`true`</ph> will initiate a deferred request to invalidate the visuals for the parent element.</source>
          <target state="translated">Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsParentArrange egenskapene til <ph id="ph1">`true`</ph> vil starte en utsatt forespørsel om å gjøre de visuelle effektene for det overordnede elementet.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, you do not need to report changes of a &lt;xref:System.Windows.FrameworkElement&gt; property to a parent element using AffectsParentArrange because the element itself would already have its own &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt; as <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Vanligvis du trenger ikke å rapportere endringer i en &lt;xref:System.Windows.FrameworkElement&gt;egenskapen til en overordnet element med AffectsParentArrange fordi elementet selve vil allerede har et eget &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;som <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is usually sufficient, because changes in the child element generally initiate a parent arrange when appropriate.</source>
          <target state="translated">Dette er vanligvis tilstrekkelig, fordi endringer i det underordnede elementet vanligvis starte overordnet ordne om nødvendig.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>AffectsParentArrange is sometimes used for a &lt;xref:System.Windows.FrameworkContentElement&gt; derived class.</source>
          <target state="translated">AffectsParentArrange brukes noen ganger til et &lt;xref:System.Windows.FrameworkContentElement&gt;avledet klasse.&lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the child element sets a property, but a &lt;xref:System.Windows.FrameworkContentElement&gt; derived class does not control its own rendering.</source>
          <target state="translated">I dette tilfellet underordnet element angir en egenskap, men en &lt;xref:System.Windows.FrameworkContentElement&gt;utledede klassen kontrollerer ikke sin egen gjengivelse.&lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rendering is handled by a &lt;xref:System.Windows.FrameworkElement&gt; parent element that serves as the content host.</source>
          <target state="translated">Håndteres gjengivelse av en &lt;xref:System.Windows.FrameworkElement&gt;overordnede elementet som fungerer som innhold verten.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a change to the value of the &lt;xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName&gt; attached property by a child element invalidates arrange of the parent, because the position of the child in the parent must be changed.</source>
          <target state="translated">For eksempel en endring i verdien for den &lt;xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName&gt;vedlagte egenskapen av et underordnet element ugyldiggjøres ordne av overordnet fordi posisjonen til underordnet i overordnet må endres.&lt;/xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the &lt;xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName&gt; attached property has metadata where AffectsParentArrange is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Derfor den &lt;xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName&gt;vedlagte egenskapen har metadata der AffectsParentArrange er <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another example is &lt;xref:System.Windows.Controls.Control.Padding%2A&gt;; when this property changes, the parent might change the positioning of the child, depending on available space.</source>
          <target state="translated">Et annet eksempel er &lt;xref:System.Windows.Controls.Control.Padding%2A&gt;; Når denne egenskapsendringer kan overordnet endre plasseringen av barnet, avhengig av tilgjengelig plass.&lt;/xref:System.Windows.Controls.Control.Padding%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with AffectsParentArrange unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsParentArrange før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt; implementations might choose to have similar behavior for dependency property changes where AffectsParentArrange is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Egendefinert &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsParentArrange er <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on any derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Egenskaper for noen avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_AffectsParentArrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_AffectsParentArrange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property on which this metadata exists potentially affects the arrange pass specifically on its parent element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis avhengighetsegenskapen som disse metadataene finnes potensielt påvirker ordne pass på det overordnede elementet; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the measure pass of its parent element's layout during layout engine operations.</source>
          <target state="translated">Henter eller angir en verdi som angir om en avhengighet potensielt påvirker målet pass på det overordnede elementets oppsettet under Oppsett motoren operasjoner.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; and &lt;xref:System.Windows.FrameworkContentElement&gt; include an implementation of &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;og &lt;xref:System.Windows.FrameworkContentElement&gt;inkluderer en implementering av &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.&lt;/xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; &lt;/xref:System.Windows.FrameworkContentElement&gt;&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>As part of that logic, dependency properties that change effective value and have metadata with AffectsParentMeasure set to <ph id="ph1">`true`</ph> will initiate a deferred request to invalidate the visuals for the parent element.</source>
          <target state="translated">Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsParentMeasure egenskapene til <ph id="ph1">`true`</ph> vil starte en utsatt forespørsel om å gjøre de visuelle effektene for det overordnede elementet.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with AffectsParentMeasure unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsParentMeasure før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, you do not need to report changes of a &lt;xref:System.Windows.FrameworkElement&gt; property to a parent element using AffectsParentMeasure because the element itself would already have its own &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; as <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Vanligvis du trenger ikke å rapportere endringer i en &lt;xref:System.Windows.FrameworkElement&gt;egenskapen til en overordnet element med AffectsParentMeasure fordi elementet selve vil allerede har et eget &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;som <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is usually sufficient, because changes in the child element generally initiate a parent measure pass when appropriate.</source>
          <target state="translated">Dette skyldes vanligvis tilstrekkelig endringer i det underordnede elementet vanligvis starte overordnede målet bestått om nødvendig.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>AffectsParentMeasure is sometimes used for a &lt;xref:System.Windows.FrameworkContentElement&gt; derived class.</source>
          <target state="translated">AffectsParentMeasure brukes noen ganger til et &lt;xref:System.Windows.FrameworkContentElement&gt;avledet klasse.&lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the child element sets a property, but a &lt;xref:System.Windows.FrameworkContentElement&gt; derived class does not control its own rendering.</source>
          <target state="translated">I dette tilfellet underordnet element angir en egenskap, men en &lt;xref:System.Windows.FrameworkContentElement&gt;utledede klassen kontrollerer ikke sin egen gjengivelse.&lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rendering is handled by a &lt;xref:System.Windows.FrameworkElement&gt; parent element that serves as the content host.</source>
          <target state="translated">Håndteres gjengivelse av en &lt;xref:System.Windows.FrameworkElement&gt;overordnede elementet som fungerer som innhold verten.&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a change to the value of the &lt;xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName&gt; property by a child element invalidates measure of the parent, because the relative spacing of paragraphs might change and might increase or decrease the content host size.</source>
          <target state="translated">For eksempel en endring i verdien for den &lt;xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName&gt;ved et underordnet element ugyldiggjøres mål av overordnet fordi relativ avstanden mellom avsnitt kan endre og kan øke eller redusere størrelsen på innholdet verten.&lt;/xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the &lt;xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName&gt; property has metadata where AffectsParentMeasure is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Derfor den &lt;xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName&gt;egenskapen har metadata der AffectsParentMeasure er <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Content host elements also frequently look for changes in dependency properties where AffectsParentMeasure is <ph id="ph1">`true`</ph>, as part of content host rendering logic.</source>
          <target state="translated">Innhold vert elementer også ofte søke etter endringer i avhengighetsegenskaper der AffectsParentMeasure er <ph id="ph1">`true`</ph>, som en del av innhold vert gjengivelse logic.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, the &lt;xref:System.Windows.Controls.TextBox&gt; element must respond to certain changes within text that might require that the bounding box of the &lt;xref:System.Windows.Controls.TextBox&gt; itself be changed.</source>
          <target state="translated">For eksempel den &lt;xref:System.Windows.Controls.TextBox&gt;elementet må svare til spesifikke endringer i tekst som kan kreve som avgrensende boksen for den &lt;xref:System.Windows.Controls.TextBox&gt;selve endres.&lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt; implementations might choose to have similar behavior for dependency property changes where AffectsParentMeasure is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Egendefinert &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsParentMeasure er <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on any derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Egenskaper for noen avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_AffectsParentMeasure"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_AffectsParentMeasure"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property on which this metadata exists potentially affects the measure pass specifically on its parent element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.The default is <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis avhengighetsegenskapen som disse metadataene finnes potensielt påvirker målet pass på det overordnede elementet; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>. Standard <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the general layout in some way that does not specifically influence arrangement or measurement, but would require a redraw.</source>
          <target state="translated">Henter eller angir en verdi som angir om en avhengighet potensielt påvirker generelle oppsettet på en måte som spesielt påvirker ikke sortering eller mål, men krever en tilbaketrekking.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; and &lt;xref:System.Windows.FrameworkContentElement&gt; include an implementation of &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;og &lt;xref:System.Windows.FrameworkContentElement&gt;inkluderer en implementering av &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.&lt;/xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt; &lt;/xref:System.Windows.FrameworkContentElement&gt;&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>As part of that logic, dependency properties that change effective value and have metadata with AffectsRender set to <ph id="ph1">`true`</ph> will initiate a deferred request to invalidate the visuals for that element.</source>
          <target state="translated">Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsRender egenskapene til <ph id="ph1">`true`</ph> vil starte en utsatt forespørsel om å gjøre de visuelle effektene for dette elementet.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with AffectsRender unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsRender før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt; implementations might choose to have similar behavior for dependency property changes where AffectsRender is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Egendefinert &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsRender er <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on any derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Egenskaper for noen avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_AffectsRender"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_AffectsRender"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property on which this metadata exists affects rendering; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis avhengighetsegenskapen som disse metadataene finnes påvirker gjengivelse; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the property binds two-way by default.</source>
          <target state="translated">Henter eller angir en verdi som angir om egenskapen binding toveis som standard.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>In absence of this property being <ph id="ph1">`true`</ph>, binding updates are one-way by default, based on the default behavior of the &lt;xref:System.Windows.Data.Binding&gt; constructors or equivalent <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated">Denne egenskapen blir ikke finnes <ph id="ph1">`true`</ph>, binding oppdateringer er enveis som standard, basert på standard virkemåte for den &lt;xref:System.Windows.Data.Binding&gt;konstruktører eller tilsvarende <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntaks.&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>In existing elements, you will usually find this property set to <ph id="ph1">`true`</ph> in metadata for dependency properties that both report state and are modifiable by user action, for example &lt;xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">I eksisterende elementer, vanligvis finner egenskapen satt til <ph id="ph1">`true`</ph> i metadataene for avhengighetsegenskaper som rapporterer tilstand og kan endres ved handling, for eksempel &lt;xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property only reports the default binding update characteristics of the dependency property in general.</source>
          <target state="translated">Bare rapporter standard bindingen oppdatere egenskaper for avhengighetsegenskapen Generelt i denne egenskapen.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any binding set to this property on an instance can locally set the &lt;xref:System.Windows.Data.Binding.Mode%2A&gt; property of the binding and change this default.</source>
          <target state="translated">En binding som er angitt for denne egenskapen til en forekomst lokalt kan angi den &lt;xref:System.Windows.Data.Binding.Mode%2A&gt;for bindingen og endre denne standarden.&lt;/xref:System.Windows.Data.Binding.Mode%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on any derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Egenskaper for noen avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_BindsTwoWayByDefault"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_BindsTwoWayByDefault"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property on which this metadata exists binds two-way by default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis avhengighetsegenskapen som disse metadataene finnes binding toveis som standard. Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Gets or sets the default for <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use when bindings for the property with this metadata are applied, which have their <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> set to <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Henter eller angir standarden for <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for å bruke bindinger for egenskapen med disse metadataene som brukes, som har de <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> satt til <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Med egenskapene i avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_DefaultUpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_DefaultUpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A value of the enumeration, other than <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En verdi for opplisting enn <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>This property is set to <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; the value you set is supposed to become the default when requested by bindings.</source>
          <target state="translated">Denne egenskapen er satt til <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; verdien du angir skal bli standard når du ber om bindinger.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the value of the dependency property is inheritable.</source>
          <target state="translated">Henter eller angir en verdi som angir om verdien for avhengighetsegenskapen er arvelig.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property value inheritance is a feature of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system at the WPF framework level, whereby certain dependency properties can be locally set on an element at or near the root of a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> element tree and then have their value inherited by all elements within the logical tree of child elements that also possess that property.</source>
          <target state="translated">Egenskapen value arv er en funksjon i den <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> egenskapen systemet på WPF framework-nivå, der bestemte avhengighetsegenskaper kan angis lokalt for et element på eller nær roten av et <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> elementet tre, og deretter etter verdien arves av alle elementer i rotens logiske tre underordnede elementer som de har også egenskapen.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property value inheritance is not enabled by default, and enabling it does have some performance implications.</source>
          <target state="translated">Egenskapen value arv er ikke aktivert som standard, og å aktivere den har en ytelseskonsekvensene.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Property Value Inheritance<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>egenskapen verdien arv<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although property value inheritance might appear to work for nonattached dependency properties, the inheritance behavior for a nonattached property through certain object-object divisions in the runtime tree is undefined.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Selv om egenskapen verdien arv kan vises til å fungere for ikke-vedlagt avhengighetsegenskaper, Arv virkemåten for ikke-vedlagt egenskapen via enkelte objekt fordelinger i treet runtime er ikke definert.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always use &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; to register properties where you specify Inherits in the metadata.</source>
          <target state="translated">Bruk alltid &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;til å registrere egenskapene der du angir Inherits i metadataene.&lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Med egenskapene i avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Inherits"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Inherits"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value is inheritable; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis egenskapsverdien er arvelig; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether data binding is supported for the dependency property.</source>
          <target state="translated">Henter en verdi som angir om databinding støttes for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property reports <ph id="ph1">`false`</ph> for one of two possible conditions: either data binding to a dependency property is not allowed because the dependency property is read-only (as reported in the dependency property identifier, not the metadata), or the value of another metadata property, &lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;, is set to <ph id="ph2">`true`</ph> in this metadata.</source>
          <target state="translated">Denne egenskapen rapporterer <ph id="ph1">`false`</ph> for en av to mulige årsaker: enten databinding til en avhengighetsegenskap er ikke tillatt fordi avhengighetsegenskapen er skrivebeskyttet (som rapporterte i avhengighet egenskapsidentifikator, ikke metadata), eller verdien for en annen metadataegenskapen &lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;, er satt til <ph id="ph2">`true`</ph> i metadataene.&lt;/xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is exposed as a convenience so that callers do not have to check both &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt; and &lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;.</source>
          <target state="translated">Denne egenskapen er eksponert som en tjeneste, slik at brukere ikke trenger å kontrollere begge &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;og &lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;.&lt;/xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt; &lt;/xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are attempting to create metadata that specifies that an otherwise read/write property should not support data binding, specify the flag &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt; (note the slight naming convention difference versus &lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;).</source>
          <target state="translated">Hvis du prøver å opprette metadataene som angir at en annen måte skrivetilgang-egenskap ikke må støtter databinding, angi flagget &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;(Vær oppmerksom på små naming convention forskjellen sammenlignet &lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;).&lt;/xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_IsDataBindingAllowed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_IsDataBindingAllowed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if data binding is supported on the dependency property to which this metadata applies; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis databinding støttes på avhengighetsegenskapen disse metadataene gjelder for; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the dependency property supports data binding.</source>
          <target state="translated">Henter eller angir en verdi som angir om avhengighetsegenskapen støtter databinding.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this metadata property is set to <ph id="ph1">`true`</ph> specifically for properties that should not support data binding, despite being read-write properties.</source>
          <target state="translated">Merk at denne metadataegenskapen er satt til <ph id="ph1">`true`</ph> spesielt for egenskaper som ikke skal støtter databinding, selv om skrivetilgang egenskaper.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expectation is that in most cases where a dependency property is declared, data binding is desired, because data binding is one of the key scenarios where a dependency property is useful.</source>
          <target state="translated">Forventningen skyldes at i de fleste tilfeller der en avhengighetsegenskapen er deklarert databinding ønskes, databinding inngår i nøkkelen scenarioer der en avhengighet er nyttig.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike &lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;, this does not merely change a default that can later be changed on a specific binding.</source>
          <target state="translated">I motsetning til &lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;, dette bare endrer ikke en standard senere kan endres på en spesifikk binding.&lt;/xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property <ph id="ph1">`true`</ph> in the metadata for a dependency property metadata will disable all bindings from applying their values through expressions to that dependency property.</source>
          <target state="translated">Angi denne egenskapen <ph id="ph1">`true`</ph> i metadataene for en avhengighetsegenskapen metadata deaktiverer alle bindinger i å bruke verdiene i uttrykk som avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties do not support data binding (because they have no setter that can apply changed values), but will still report <ph id="ph1">`false`</ph> for IsNotDataBindable.</source>
          <target state="translated">Egenskaper for skrivebeskyttet avhengighet støtter ikke databinding (fordi de har ingen setter som kan bruke endrede verdier), men vil fortsatt rapporten <ph id="ph1">`false`</ph> for IsNotDataBindable.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because properties that correspond to a &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt; values will report parity with how the metadata was actually established, rather than always reporting the end result behavior that the naming of the property might imply.</source>
          <target state="translated">Fordi egenskaper som samsvarer med en &lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;verdier vil rapportere paritet med hvordan metadataene ble faktisk opprettet, i stedet for reporting alltid end resultatet virkemåten som navngivning av egenskapen kan gi inntrykk.&lt;/xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether a given dependency property permits data binding, you should usually check &lt;xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt; instead.</source>
          <target state="translated">For å fastslå om en angitte avhengighetsegenskapen tillater databinding, bør du vanligvis kontrollere &lt;xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt;i stedet.&lt;/xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt; is a convenience for checking both &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt; and IsNotDataBindable as a single operation, yielding the expected result.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt;er en tjeneste for kontroll av både &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;og IsNotDataBindable som én enkelt operasjon, fører det forventede resultatet.&lt;/xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;&lt;/xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Med egenskapene i avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_IsNotDataBindable"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_IsNotDataBindable"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property does not support data binding; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis egenskapen ikke støtter databinding; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether this property contains journaling information that applications can or should store as part of a journaling implementation.</source>
          <target state="translated">Henter eller angir en verdi som angir om denne egenskapen inneholder loggføringsnivåene informasjon som programmer kan eller bør lagre som en del av en loggføringsnivåene implementering.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Med egenskapene i avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Journal"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Journal"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if journaling should be performed on the dependency property that this metadata is applied to; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis loggføringsnivåene må utføres på avhengighetsegenskapen disse metadataene gjelder; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Enables a merge of the source metadata with base metadata.</source>
          <target state="translated">Aktiverer en sammenslåing av metadata for kilde med grunntallet metadata.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used internally when metadata is being overridden.</source>
          <target state="translated">Denne metoden brukes internt når metadata overstyres.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The base metadata to merge.</source>
          <target state="translated">Grunnleggende metadataene til å slå sammen.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The dependency property this metadata is being applied to.</source>
          <target state="translated">Avhengighetsegenskapen disse metadataene brukes.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.</source>
          <target state="translated">Kalles når disse metadataene er brukt på en egenskap som indikerer at metadataene er blir lukket.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any mutability of the data structure of a &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; instance should be marked as immutable when this method is invoked.</source>
          <target state="translated">Mutability for datastrukturen for en &lt;xref:System.Windows.FrameworkPropertyMetadata&gt;forekomsten må være merket som uforanderlig når denne metoden startes.&lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The dependency property to which the metadata has been applied.</source>
          <target state="translated">Avhengighetsegenskapen metadataene er brukt.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The type associated with this metadata if this is type-specific metadata.</source>
          <target state="translated">Typen som er tilknyttet denne metadata Hvis dette er typespesifikke metadata.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>If this is default metadata, this value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hvis dette er standard metadata, denne verdien kan være <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the property value inheritance evaluation should span across certain content boundaries in the logical tree of elements.</source>
          <target state="translated">Henter eller angir en verdi som angir om egenskapen verdien arv evalueringen skal går over enkelte innhold grensene i det logiske treet elementer.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>This metadata reports a seldom-applied modification to property value inheritance behavior across special parent element-child element boundaries.</source>
          <target state="translated">Disse metadataene rapporter endringer brukes sjelden egenskapen verdien arv virkemåten på tvers av spesielle overordnet element-underordnet element grenser.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>The canonical example of such a boundary is the contents of a &lt;xref:System.Windows.Controls.Frame&gt;, where the &lt;xref:System.Windows.Controls.Frame&gt; content might get reloaded independently of the existence of the &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">Eksemplet kanoniske for eksempel en grense er innholdet i en &lt;xref:System.Windows.Controls.Frame&gt;, der &lt;xref:System.Windows.Controls.Frame&gt;innhold kan komme inn på nytt uavhengig av forekomsten av &lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Controls.Frame&gt;</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The desired property system behavior is that property value inheritance should not traverse into the contents of the &lt;xref:System.Windows.Controls.Frame&gt;, because these contents might be elements that the application hosting the frame does not own or control.</source>
          <target state="translated">Den ønskede egenskap system virkemåten er at egenskapen verdien arv ikke skal går over til innholdet i den &lt;xref:System.Windows.Controls.Frame&gt;fordi disse innholdet kanskje elementer som programmet vert rammen ikke eier eller kontrollere.&lt;/xref:System.Windows.Controls.Frame&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying metadata with OverridesInheritanceBehavior set to <ph id="ph1">`true`</ph>, as well as specifying &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; as <ph id="ph2">`true`</ph>, will cause the property on which the metadata is applied to be inheritable even across the &lt;xref:System.Windows.Controls.Frame&gt; boundary or similar boundaries.</source>
          <target state="translated">Angir metadataene med OverridesInheritanceBehavior satt til <ph id="ph1">`true`</ph>, samt angivelse &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;som <ph id="ph2">`true`</ph>, vil føre til at egenskapen hvor metadataene er aktivert for å være arvbare selv på tvers av &lt;xref:System.Windows.Controls.Frame&gt;grense eller lignende grensene.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Med egenskapene i avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, after the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid etter at metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_OverridesInheritanceBehavior"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_OverridesInheritanceBehavior"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value inheritance should span across certain content boundaries; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis egenskapen verdien arvingen må går over enkelte innhold grensene; Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether sub-properties of the dependency property do not affect the rendering of the containing object.</source>
          <target state="translated">Henter eller angir en verdi som angir om ikke påvirker undertype egenskapene for avhengighetsegenskapen gjengivelse av det inneholdende objektet.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>This metadata option is pertinent for dependency properties that are reference types, where that type has property values of its own.</source>
          <target state="translated">Dette alternativet for metadata er relevant for avhengighetsegenskaper referansetyper, der denne typen har egenskapsverdier for seg selv.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the layout system logic is to assume that any dependency property with sub-properties potentially will affect layout, because checking all sub-properties for changes is more time consuming than actually running another render pass.</source>
          <target state="translated">Oppsettet system logikken er vanligvis anta at alle avhengighetsegenskapen med undertype egenskaper potensielt påvirker oppsettet, fordi kontrollerer alle underordnede egenskaper for endringer mer tid enn faktisk kjører et annet gjengi pass.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this option to <ph id="ph1">`true`</ph> is useful for optimizing performance of the WPF framework level layout system implementation.</source>
          <target state="translated">Dette alternativet <ph id="ph1">`true`</ph> er nyttig for å optimalisere ytelsen til WPF framework nivå oppsettet system implementeringen.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties on derived classes of &lt;xref:System.Windows.PropertyMetadata&gt; are typically defined in the object model as read-write.</source>
          <target state="translated">Med egenskapene i avledede klasser for &lt;xref:System.Windows.PropertyMetadata&gt;defineres vanligvis i objektmodellen med lese-og skrivetilgang.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Dette er slik at de kan bli justert etter initialisering av forekomsten.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, once the metadata is consumed as part of a call to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Imidlertid når metadataene forbrukes som en del av et kall til &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;, &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;, eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property after &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt; is <ph id="ph1">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Forsøk på å angi denne egenskapen etter &lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;er <ph id="ph1">`true`</ph> forekomsten vil utløse et unntak i metadataene.&lt;/xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_SubPropertiesDoNotAffectRender"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_SubPropertiesDoNotAffectRender"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if changes to sub-property values do not affect rendering if changed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis undertype egenskapsverdiene ikke påvirker gjengivelse hvis endret. Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standard <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>