<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28b1e81979ebc849327a7bcfeaf3313aabfc00d2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.HostExecutionContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f47fac0d0b02050e8174984fad909e769ecae517</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad0dfa8499f5dc01731c0f78d674dd7bbbb60fd5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates and propagates the host execution context across threads.</source>
          <target state="translated">Innkapsler og overfører vert utføringskontekst på tvers av tråder.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HostExecutionContext is part of a larger &lt;xref:System.Threading.ExecutionContext&gt;.</source>
          <target state="translated">HostExecutionContext er en del av en større &lt;xref:System.Threading.ExecutionContext&gt;.&lt;/xref:System.Threading.ExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host context migrates, or flows, with the execution context.</source>
          <target state="translated">Vert-konteksten overfører eller flyter med utføringskontekst.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor creates a host execution context whose &lt;xref:System.Threading.HostExecutionContext.State%2A&gt; property value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Standardkonstruktøren oppretter en vert utføringskontekst der &lt;xref:System.Threading.HostExecutionContext.State%2A&gt;egenskapsverdi <ph id="ph1">`null`</ph>.&lt;/xref:System.Threading.HostExecutionContext.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified state.</source>
          <target state="translated">Initialiserer en ny forekomst av den <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse ved hjelp av den angitte tilstanden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.HostExecutionContext&gt; is included with the &lt;xref:System.Threading.ExecutionContext&gt;.</source>
          <target state="translated">&lt;xref:System.Threading.HostExecutionContext&gt;Er inkludert i &lt;xref:System.Threading.ExecutionContext&gt;.&lt;/xref:System.Threading.ExecutionContext&gt; &lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`state`</ph> represents a safe handle containing the <ph id="ph2">`IUnknown`</ph> pointer for the host.</source>
          <target state="translated">Den <ph id="ph1">`state`</ph> representerer en sikker referanse som inneholder den <ph id="ph2">`IUnknown`</ph> peker for verten.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An object representing the host execution context state.</source>
          <target state="translated">Et objekt som representerer tilstanden vert kjøring av konteksten.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current host execution context.</source>
          <target state="translated">Oppretter en kopi av utføringskontekst gjeldende verten.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The copy can be used as the parameter to a &lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=fullName&gt; method call.</source>
          <target state="translated">Kopien kan brukes som parameter for en &lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=fullName&gt;metodekallet.&lt;/xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the host context for the current thread.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -objekt som representerer vert konteksten for gjeldende tråd.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Frigir alle ressursene som brukes av den gjeldende forekomsten av den <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Threading.HostExecutionContext&gt;.</source>
          <target state="translated">Kall <ph id="ph1">`Dispose`</ph> når du er ferdig med &lt;xref:System.Threading.HostExecutionContext&gt;.&lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Threading.HostExecutionContext&gt; in an unusable state.</source>
          <target state="translated">Den <ph id="ph1">`Dispose`</ph> metoden forlater den &lt;xref:System.Threading.HostExecutionContext&gt;i en ubrukelig tilstand.&lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Threading.HostExecutionContext&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Threading.HostExecutionContext&gt; was occupying.</source>
          <target state="translated">Etter kall <ph id="ph1">`Dispose`</ph>, må du frigi alle referanser til den &lt;xref:System.Threading.HostExecutionContext&gt;Slik saneringsoppsamlingen kan gjenvinne minnet som den &lt;xref:System.Threading.HostExecutionContext&gt;ble bruker.&lt;/xref:System.Threading.HostExecutionContext&gt; &lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>Rydder opp uforvaltede ressurser<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> og <bpt id="p2">[</bpt>implementere metoden fjerne<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Threading.HostExecutionContext&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Alltid kall <ph id="ph2">`Dispose`</ph> før du slipper siste referanse til &lt;xref:System.Threading.HostExecutionContext&gt;.&lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Threading.HostExecutionContext&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">Ellers ressurser den bruker vil ikke bli frigjort før saneringsoppsamling kall av &lt;xref:System.Threading.HostExecutionContext&gt;objektets <ph id="ph1">`Finalize`</ph> metode.&lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, releases the unmanaged resources used by the &lt;xref:System.Threading.WaitHandle&gt;, and optionally releases the managed resources.</source>
          <target state="translated">Når overstyrt i en avledet klasse, frigir uforvaltede ressursene som brukes av den &lt;xref:System.Threading.WaitHandle&gt;, og eventuelt frigir administrerte ressurser.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the &lt;xref:System.Threading.HostExecutionContext.Dispose&gt; method overload and the finalizer.</source>
          <target state="translated">Denne metoden kalles av den &lt;xref:System.Threading.HostExecutionContext.Dispose&gt;overlasten for metoden og sluttbehandleren.&lt;/xref:System.Threading.HostExecutionContext.Dispose&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Threading.HostExecutionContext.Dispose&gt; invokes this protected method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Threading.HostExecutionContext.Dispose&gt;Aktiverer beskyttede metoden med den <ph id="ph1">`disposing`</ph> parameteren satt til <ph id="ph2">`true`</ph>.&lt;/xref:System.Threading.HostExecutionContext.Dispose&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The finalizer invokes this method with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Sluttbehandleren aktiverer metoden med <ph id="ph1">`disposing`</ph> satt til <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Threading.HostExecutionContext&gt; references.</source>
          <target state="translated">Når den <ph id="ph1">`disposing`</ph> parameteren er <ph id="ph2">`true`</ph>, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne &lt;xref:System.Threading.HostExecutionContext&gt;referanser.&lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Denne metoden starter den <ph id="ph1">`Dispose`</ph> metode for hver referert objekt.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called multiple times by other objects.</source>
          <target state="translated">Denne metoden kan kalles flere ganger av andre objekter.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call.</source>
          <target state="translated">Når denne metoden, pass ikke referere til objekter som tidligere har blitt fjernet i en tidligere kall.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>å frigjøre både administrerte og uforvaltede ressurser. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> frigi bare uforvaltede ressurser.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets the state of the host execution context.</source>
          <target state="translated">Henter eller angir tilstanden til utføringskontekst vert.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The State property value represents a safe handle containing the <ph id="ph1">`IUnknown`</ph> pointer for the host.</source>
          <target state="translated">Egenskapsverdien tilstand representerer en sikker referanse som inneholder den <ph id="ph1">`IUnknown`</ph> peker for verten.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An object representing the host execution context state.</source>
          <target state="translated">Et objekt som representerer tilstanden vert kjøring av konteksten.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>