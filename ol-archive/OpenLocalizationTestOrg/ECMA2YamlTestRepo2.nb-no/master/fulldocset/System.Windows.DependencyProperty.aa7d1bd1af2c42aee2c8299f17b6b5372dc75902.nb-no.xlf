<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad45d5350d7ce0512a3ddb042ebe116819840d05</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyProperty.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e25ae22b2d251a31c5b2f3a8b8c9809a6c5c95b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e77660bde0953d13f802b828789b2dd37b1699e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.</source>
          <target state="translated">Representerer en egenskap som kan angis via metoder som stiler, databinding, animasjonen og arv.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A DependencyProperty supports the following capabilities in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>:      -   The property can be set in a style.</source>
          <target state="translated">En DependencyProperty støtter følgende funksjoner i <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>:-egenskapen kan angis i en stil.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>stil og Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can be set through data binding.</source>
          <target state="translated">-Egenskapen kan settes til databinding.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about data binding dependency properties, see <bpt id="p1">[</bpt>How to: Bind the Properties of Two Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Du finner mer informasjon om egenskaper for databinding avhengighet <bpt id="p1">[</bpt>slik: binde egenskaper for to kontrollene<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can be set with a dynamic resource reference.</source>
          <target state="translated">-Egenskapen kan angis med dynamiske ressursreferanse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>XAML ressurser<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can inherit its value automatically from a parent element in the element tree.</source>
          <target state="translated">-Egenskapen kan arve verdien automatisk fra en overordnet element i treet for elementet.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Property Value Inheritance<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>egenskapen verdien arv<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can be animated.</source>
          <target state="translated">-Egenskapen kan være animerte.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Animation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>animasjonen oversikt over<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can report when the previous value of the property has been changed and the property value can be coerced.</source>
          <target state="translated">-Egenskapen kan rapportere når den forrige verdien for egenskapen er endret og egenskapsverdien kan konverteres.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>avhengighet egenskapen tilbakeringinger og validering<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property reports information to <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, such as whether changing a property value should require the layout system to recompose the visuals for an element.</source>
          <target state="translated">-Egenskapen rapporterer informasjon til <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, for eksempel om endring av et egenskapen skal krever oppsett systemet for å lage de visuelle effektene for et element.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property receives support in the <ph id="ph1">[!INCLUDE[wpfdesigner_current_long](~/add/includes/wpfdesigner-current-long-md.md)]</ph>.</source>
          <target state="translated">-Egenskapen mottar støtte i den <ph id="ph1">[!INCLUDE[wpfdesigner_current_long](~/add/includes/wpfdesigner-current-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the property can be edited in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window.</source>
          <target state="translated">For eksempel egenskapen kan redigeres i den <bpt id="p1">**</bpt>Egenskaper<ept id="p1">**</ept> vinduet.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn more about dependency properties, see <bpt id="p1">[</bpt>Dependency Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Du kan lære mer om egenskaper for avhengighet i <bpt id="p1">[</bpt>avhengighet egenskaper oversikt over<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want properties on your custom types to support the capabilities in the preceding list, you should create a dependency property.</source>
          <target state="translated">Hvis du vil egenskaper i de egendefinerte typene støtter de som finnes i listen ovenfor, må du opprette en avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn how to create custom dependency properties, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Du kan lære hvordan du oppretter egenskaper for egendefinert avhengighet i <bpt id="p1">[</bpt>egenskaper for egendefinert avhengighet<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attached property is a property that enables any object to report information to the type that defines the attached property.</source>
          <target state="translated">En vedlagte egenskapen er en egenskap som aktiverer et objekt til rapportinformasjon til typen som definerer den tilknyttede egenskapen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, any type that inherits from &lt;xref:System.Windows.DependencyObject&gt; can use an attached property regardless of whether the type inherits from the type that defines the property.</source>
          <target state="translated">I <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, noen type som arver fra &lt;xref:System.Windows.DependencyObject&gt;kan bruke en vedlagte egenskapen uansett om typen arver fra typen som definerer egenskapen.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attached property is a feature of the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> language.</source>
          <target state="translated">En vedlagte egenskapen er en funksjon i den <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> språk.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set an attached property in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, use the <bpt id="p1">*</bpt>ownerType<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> syntax.</source>
          <target state="translated">Angi en vedlagte egenskapen i <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, bruker du <bpt id="p1">*</bpt>ownerType<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> syntaks.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of an attached property is the &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">Er et eksempel på en egenskap som er tilknyttet den &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;egenskapen.&lt;/xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create a property that can be used on all &lt;xref:System.Windows.DependencyObject&gt; types, then you should create an attached property.</source>
          <target state="translated">Hvis du vil opprette en egenskap som kan brukes på alle &lt;xref:System.Windows.DependencyObject&gt;datatyper, og du må opprette en tilknyttede egenskapen.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn more about attached properties, including how to create them, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil vite mer om vedlagte egenskaper, inkludert hvordan du oppretter dem, kan du se <bpt id="p1">[</bpt>knyttet egenskaper oversikt over<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_DependencyProperty"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="dependencyPropertyName"/&gt;   - or -   &lt;object property="ownerType.dependencyPropertyName"/&gt;   - or -   &lt;object property="attachedPropertyOwnerType.attachedPropertyName"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_DependencyProperty"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <ph id="ph2">`dependencyPropertyName`</ph>    A string that specifies the &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt; of the desired dependency property.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_DependencyProperty"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML Attributtbruk <ph id="ph1">```   &lt;object property="dependencyPropertyName"/&gt;   - or -   &lt;object property="ownerType.dependencyPropertyName"/&gt;   - or -   &lt;object property="attachedPropertyOwnerType.attachedPropertyName"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_DependencyProperty"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML verdier <ph id="ph2">`dependencyPropertyName`</ph> en streng som angir den &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;for den ønskede avhengighetsegenskapen.&lt;/xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;      </target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be preceded by an XML namespace prefix if the property is not in the default XML namespace (for details, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.)       <ph id="ph1">`ownerType`</ph>.<ph id="ph2">`dependencyPropertyName`</ph></source>
          <target state="translated">Dette kan være med en XML-navneområdeprefikset Hvis egenskapen ikke er i standard XML-navneområdet (Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>XAML navneområder og Namespace tilordningen for WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.)       <ph id="ph1">`ownerType`</ph>.<ph id="ph2">`dependencyPropertyName`</ph></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A string that specifies an owner type of a dependency property, a dot (.), then the &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">En streng som angir en type for eieren av en avhengighetsegenskapen, punktum (.), og deretter &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ownerType`</ph> can also be preceded by an XML namespace prefix.</source>
          <target state="translated"><ph id="ph1">`ownerType`</ph>kan også komme etter en XML-navneområdeprefikset.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This usage is particular to late-bound styles and templates, where the owner of the dependency property must be specified for parsing context because the <ph id="ph1">`TargetType`</ph> is not yet known.</source>
          <target state="translated">Dette er spesielt for sent bundet stiler og maler, der eieren av avhengighetsegenskapen må være angitt for analyse konteksten fordi det <ph id="ph1">`TargetType`</ph> ennå ikke er kjent.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](../Topic/Styling%20and%20Templating.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>stil og Templating<ept id="p1">](../Topic/Styling%20and%20Templating.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`attachedPropertyOwnerType`</ph> <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`attachedPropertyOwnerType`</ph> <bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`attachedPropertyName`</ph>    A string that specifies  the owner of an attached property, a dot (.), then the attached property name.</source>
          <target state="translated"><ph id="ph1">`attachedPropertyName`</ph>En tekststreng som angir eieren av en vedlagte egenskap, punktum (.) og tilknyttede egenskapsnavnet.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`attachedPropertyOwnerType`</ph> can also be preceded by an XML namespace prefix.</source>
          <target state="translated"><ph id="ph1">`attachedPropertyOwnerType`</ph>kan også komme etter en XML-navneområdeprefikset.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adds another type as an owner of a dependency property that has already been registered.</source>
          <target state="translated">Legger til en annen type som en eier av en avhengighetsegenskap som er allerede registrert.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables the property system to recognize a dependency property on a type that did not register that particular dependency property initially.</source>
          <target state="translated">Denne metoden aktiverer egenskapen systemet ikke gjenkjenne en avhengighetsegenskapen for en type som ikke ble registrert at bestemt avhengighetsegenskapen i utgangspunktet.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, AddOwner is used to add dependency properties to classes that do not already expose that dependency property through managed class inheritance (class inheritance would cause the wrapper properties to be inherited by the derived class, and thus would provide general members-table access to the dependency property already).</source>
          <target state="translated">AddOwner brukes vanligvis til å legge til avhengighetsegenskaper klasser som ikke eksponerer allerede avhengighetsegenskapen via administrerte klassearv (klassearv vil forårsake egenskapene wrapper skal arves av den utledede klassen, og dermed har generelle medlemmer tabell-tilgang til avhengighetsegenskapen allerede).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>AddOwner enables the property system to recognize a dependency property on a type that did not register that dependency property initially.</source>
          <target state="translated">AddOwner aktiverer egenskapen systemet ikke gjenkjenne en avhengighetsegenskapen for en type som ikke opprinnelig ble registrert som avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature does not allow for specifying metadata.</source>
          <target state="translated">Denne signaturen tillater ikke at for å angi metadata.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this method, the metadata is automatically generated for the new &lt;xref:System.Windows.DependencyProperty&gt; and its owner type.</source>
          <target state="translated">Når du bruker denne metoden, metadataene genereres automatisk for den nye &lt;xref:System.Windows.DependencyProperty&gt;og filtypen eieren.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The auto-generated metadata is the result of the merged metadata from all of the base types that have this property defined.</source>
          <target state="translated">Metadataene som er automatisk generert er resultatet av den sammenslåtte metadata fra alle basistyper som har egenskapen definert.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no merged metadata is available, then the default metadata for the property is used.</source>
          <target state="translated">Hvis ingen sammenslåtte metadata er tilgjengelig, brukes standard metadataene for egenskapen.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is registered by using the &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; method, then the default metadata is the same as the metadata that is created when &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; was called.</source>
          <target state="translated">Hvis egenskapen er registrert ved hjelp av den &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;metoden og standard metadataene er identisk med metadataene som opprettes når &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;ble kalt.&lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the &lt;xref:System.Windows.PropertyMetadata&gt; object is created with the &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; property set to the property type's default and all other properties of the &lt;xref:System.Windows.PropertyMetadata&gt; is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Hvis ikke, den &lt;xref:System.Windows.PropertyMetadata&gt;objekt er opprettet med den &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;egenskapen satt til standard egenskaps-typen og alle andre egenskaper for det &lt;xref:System.Windows.PropertyMetadata&gt;er satt til <ph id="ph1">`null`</ph>.&lt;/xref:System.Windows.PropertyMetadata&gt; &lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; &lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt; signature if you want to provide metadata for the version of the dependency property as added to the provided type.</source>
          <target state="translated">Bruk av &lt;xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;signatur Hvis du vil angi metadata for versjonen av avhengighetsegenskapen som legges til i den angitte typen.&lt;/xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of this method is typically used to declare and expose the dependency property by storing a dependency property identifier.</source>
          <target state="translated">Verdien som returneres av denne metoden brukes vanligvis deklarere for å vise avhengighetsegenskapen ved å lagre en egenskapsidentifikator avhengighet.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The identifier provides access to the dependency property if you want to call property system <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> against the dependency property, particularly as it exists on the adding owner class.</source>
          <target state="translated">Identifikatoren gir tilgang til avhengighetsegenskapen Hvis du vil kalle egenskapen system <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> mot avhengighetsegenskapen, spesielt som finnes på klassen for å legge til eieren.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same property name for both original owner and added owner should be used to indicate the similar functionality.</source>
          <target state="translated">Samme egenskapsnavn for både opprinnelige eieren og tillagt eieren bør brukes til å angi lignende bruksområder.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use the &lt;xref:System.Windows.DependencyProperty&gt; return value of the AddOwner method to define the dependency property identifier, and also to declare <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrappers, for dependency properties that are added to types using AddOwner.</source>
          <target state="translated">Du må bruke den &lt;xref:System.Windows.DependencyProperty&gt;returverdi av AddOwner-metoden til å definere egenskapsidentifikator avhengighet, og du kan også deklarere <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> egenskapen-sikkerhetsgrupper for avhengighetsegenskaper som er lagt til bruk AddOwner.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddOwner methodology recommended above is used when creating the dependency properties that are declared within <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">AddOwner metoden som anbefales ovenfor brukes ved oppretting av egenskapene avhengighet som er angitt i <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, both &lt;xref:System.Windows.Controls.Border&gt; and &lt;xref:System.Windows.Controls.Control&gt; define a <ph id="ph1">`BorderBrush`</ph> dependency property, which have similar functionality.</source>
          <target state="translated">For eksempel både &lt;xref:System.Windows.Controls.Border&gt;og &lt;xref:System.Windows.Controls.Control&gt;definerer en <ph id="ph1">`BorderBrush`</ph> avhengighetsegenskapen som har lignende bruksområder.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Border&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.Control&gt; defines its <ph id="ph1">`BorderBrush`</ph> property to the property system by calling AddOwner based on the original owner &lt;xref:System.Windows.Controls.Border&gt; and its registered &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt; dependency property identifer.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Control&gt;definerer den <ph id="ph1">`BorderBrush`</ph> egenskapen egenskapen systemet ved å kalle AddOwner basert på den opprinnelige eieren &lt;xref:System.Windows.Controls.Border&gt;og den registrerte &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt;avhengighet egenskapen ID.&lt;/xref:System.Windows.Controls.Border.BorderBrushProperty&gt; &lt;/xref:System.Windows.Controls.Border&gt;&lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddOwner return value is then used to establish a new static &lt;xref:System.Windows.DependencyProperty&gt; field (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;) for that property on the added owner, and a <ph id="ph1">`BorderBrush`</ph> property wrapper is also declared.</source>
          <target state="translated">AddOwner returnere verdien deretter brukes til å opprette et nytt statisk &lt;xref:System.Windows.DependencyProperty&gt;felt (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;) for denne egenskapen i tillagt eieren, og en <ph id="ph1">`BorderBrush`</ph> egenskapen wrapper også er deklarert.&lt;/xref:System.Windows.Controls.Control.BorderBrushProperty&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The type to add as an owner of this dependency property.</source>
          <target state="translated">Skriv inn som en eier av dette avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A reference to the original <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier that identifies the dependency property.</source>
          <target state="translated">En referanse til opprinnelige <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identifikator som identifiserer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This identifier should be exposed by the adding class as a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field.</source>
          <target state="translated">Denne identifikatoren skal vises ved å legge til klassen som en <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> felt.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.</source>
          <target state="translated">Legger til en annen type som en eier av en avhengighetsegenskap som allerede er registrert, gir avhengighet egenskapmetadata for avhengighetsegenskapen som den skal finnes i den angitte eiertypen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables the property system to recognize a dependency property on a type that did not register that particular dependency property initially.</source>
          <target state="translated">Denne metoden aktiverer egenskapen systemet ikke gjenkjenne en avhengighetsegenskapen for en type som ikke ble registrert at bestemt avhengighetsegenskapen i utgangspunktet.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of this method is used to declare and expose the dependency property, particularly as it exists on the adding owner class.</source>
          <target state="translated">Verdien som returneres av denne metoden brukes til å deklarere og vise avhengighetsegenskapen, spesielt den finnes på klassen for å legge til eieren.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, the same property name for both original owner and added owner should be used to indicate the similar functionality.</source>
          <target state="translated">Vanligvis bør samme egenskapsnavn for både opprinnelige eieren og tillagt eieren brukes til å angi lignende bruksområder.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is good practice to expose the identifiers, as well as new <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrappers, for dependency properties that are added to types using &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;.</source>
          <target state="translated">Det er lurt å vise identifikatorer, i tillegg til nye <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> egenskapen-sikkerhetsgrupper for avhengighetsegenskaper som er lagt til bruk &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; methodology recommended above is used when creating <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> declared within <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">Den &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;metoden som anbefales ovenfor brukes ved oppretting av <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> deklarert i <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.&lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, both &lt;xref:System.Windows.Controls.Border&gt; and &lt;xref:System.Windows.Controls.Control&gt; define a <ph id="ph1">`BorderBrush`</ph> dependency property, which have similar functionality.</source>
          <target state="translated">For eksempel både &lt;xref:System.Windows.Controls.Border&gt;og &lt;xref:System.Windows.Controls.Control&gt;definerer en <ph id="ph1">`BorderBrush`</ph> avhengighetsegenskapen som har lignende bruksområder.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Border&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.Control&gt; defines its <ph id="ph1">`BorderBrush`</ph> property to the property system by calling &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; on original owner &lt;xref:System.Windows.Controls.Border&gt; and its registered &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt; dependency property identifer.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Control&gt;definerer den <ph id="ph1">`BorderBrush`</ph> egenskapen egenskapen systemet ved å kalle &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;på opprinnelige eieren &lt;xref:System.Windows.Controls.Border&gt;og den registrerte &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt;avhengighet egenskapen ID.&lt;/xref:System.Windows.Controls.Border.BorderBrushProperty&gt; &lt;/xref:System.Windows.Controls.Border&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;&lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; return value is then used to establish a static &lt;xref:System.Windows.DependencyProperty&gt; field (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;)for that property on the added owner, and a <ph id="ph1">`BorderBrush`</ph> property wrapper is also declared.</source>
          <target state="translated">Den &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;returnere verdien deretter brukes til å opprette et statisk &lt;xref:System.Windows.DependencyProperty&gt;felt (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;) for denne egenskapen i tillagt eieren, og en <ph id="ph1">`BorderBrush`</ph> egenskapen wrapper også er deklarert.&lt;/xref:System.Windows.Controls.Control.BorderBrushProperty&gt; &lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The added owner's dependency property identifier should be used for operations such as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.</source>
          <target state="translated">La til eieren av avhengighet egenskapsidentifikator skal brukes til operasjoner, for eksempel &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, type-specific operations involving either types or instances of the class that was added as owner with different metadata will still return the expected results even if the original (not the added owner's) dependency property identifier is specified in calls to methods such as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt; or &lt;xref:System.Windows.DependencyProperty.GetMetadata%2A&gt;.</source>
          <target state="translated">Imidlertid typespesifikke operasjoner som omfatter typer eller forekomster av klassen som er lagt til som eier med forskjellige metadata kan fortsatt ikke returnere den forventede resultater selv om opprinnelige (ikke lagt til eieren av) avhengighet egenskapsidentifikator er angitt i kall til metoder for eksempel &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;eller &lt;xref:System.Windows.DependencyProperty.GetMetadata%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.GetMetadata%2A&gt; &lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The metadata for the added owner is perpetuated by the AddOwner call itself, not necessarily referenced exclusively by the adding owner class identifier field.</source>
          <target state="translated">Metadataene for tillagt eieren perpetuated av AddOwner kalle seg selv, refererer ikke nødvendigvis utelukkende til å legge til feltet eier av klasse-IDen.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nevertheless, it is good practice to expose the  identifier, as well as new <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrappers, for dependency properties that are added to types using AddOwner, because failing to do so creates disparity between the <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> and <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> representations of your properties.</source>
          <target state="translated">Likevel det er lurt å vise identifikatoren for, i tillegg til nye <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> egenskapen-sikkerhetsgrupper for avhengighetsegenskaper som er lagt til bruk AddOwner, fordi ikke du gjør det. oppretter disparity mellom den <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> og <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> representasjoner av egenskapene dine.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied metadata is merged with the property metadata for the dependency property as it exists on the base owner.</source>
          <target state="translated">De angitte metadataene slås sammen med metadataene for egenskapen for avhengighetsegenskapen fordi det finnes i basistabellen eieren.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any characteristics that were specified in the original base metadata will persist.</source>
          <target state="translated">Egenskaper som ble angitt i den opprinnelige base metadata vil beholde.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only those characteristics that were specifically changed in the new metadata will override the characteristics of the base metadata.</source>
          <target state="translated">Bare egenskaper som spesielt ble endret i den nye metadata overstyrer egenskaper base metadata.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characteristics, such as &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;, are replaced if they are specified in the new metadata.</source>
          <target state="translated">Noen egenskaper som &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;, erstattes hvis de er angitt i de nye metadataene.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Others, such as &lt;xref:System.Windows.PropertyChangedCallback&gt;, are combined.</source>
          <target state="translated">Andre, slik som &lt;xref:System.Windows.PropertyChangedCallback&gt;, kombineres.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ultimately, the merge behavior depends on the property metadata type being used for the override, so the behavior described here is for the existing property metadata classes used by <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dependency properties.</source>
          <target state="translated">Merge-virkemåten avhenger av metadata egenskapstypen som brukes for overstyringen, og virkemåten her er for eksisterende egenskapen metadata klassene som brukes av <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> avhengighetsegenskaper.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Metadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Framework Property Metadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>avhengighet egenskapmetadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> og <bpt id="p2">[</bpt>Framework egenskapmetadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The type to add as owner of this dependency property.</source>
          <target state="translated">Skriv inn som eier av dette avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The metadata that qualifies the dependency property as it exists on the provided type.</source>
          <target state="translated">Metadataene som kvalifiserer avhengighetsegenskapen som den finnes på den angitte typen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A reference to the original <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier that identifies the dependency property.</source>
          <target state="translated">En referanse til opprinnelige <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identifikator som identifiserer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This identifier should be exposed by the adding class as a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field.</source>
          <target state="translated">Denne identifikatoren skal vises ved å legge til klassen som en <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> felt.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets the default metadata of the dependency property.</source>
          <target state="translated">Henter avhengighetsegenskapen standard metadataene.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default metadata is the property metadata that is available to that particular object or an object of a derived type where no alternative metadata was supplied by an explicit &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; call.</source>
          <target state="translated">Metadataene som standard er egenskapen metadataene som er tilgjengelig for dette bestemte objekt eller et objekt i en avledet type der ingen alternative metadata ble angitt av en eksplisitt &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;kall.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the original owner applied metadata to the first &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call that established the dependency property, then that metadata is returned as DefaultMetadata.</source>
          <target state="translated">Hvis den opprinnelige eieren brukes metadata på først &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;oppringing som opprettet avhengighetsegenskapen, returneres den metadataen som DefaultMetadata.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no metadata was applied in the original &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call, then default metadata is generated from within the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call and this value is returned as the DefaultMetadata.</source>
          <target state="translated">Hvis ingen metadata ble brukt i opprinnelige &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;ringe, og standard metadataene i den &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;samtale- og denne verdien returneres som DefaultMetadata.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The main purpose of having default metadata associated with a &lt;xref:System.Windows.DependencyProperty&gt; is to supply a default value for this property on any &lt;xref:System.Windows.DependencyObject&gt; or a derived type.</source>
          <target state="translated">Det primære formålet med med standard metadata som er knyttet til en &lt;xref:System.Windows.DependencyProperty&gt;er å angi en standardverdi for denne egenskapen noen &lt;xref:System.Windows.DependencyObject&gt;eller en avledet type.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For nonattached properties, the metadata type returned by this property cannot be cast to derived types of &lt;xref:System.Windows.PropertyMetadata&gt; type, even if the property was originally registered with a derived metadata type.</source>
          <target state="translated">For ikke-vedlagt egenskaper metadatatype som returneres av denne egenskapen kan ikke endres til avledede typer &lt;xref:System.Windows.PropertyMetadata&gt;skriver, selv om egenskapen opprinnelig ble registrert med en avledet metadatatype.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the originally registered metadata including its original possibly derived metadata type, call &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Type%29&gt; instead, passing the original registering type as a parameter.</source>
          <target state="translated">Hvis du vil opprinnelig registrerte metadataene inkludert filtypen kanskje avledede metadata, kaller &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Type%29&gt;i stedet sending av den opprinnelige under registrering av typen som en parameter.&lt;/xref:System.Windows.DependencyProperty.GetMetadata%28System.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For attached properties, the type of the metadata returned by this property will match the type given in the original &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; registration method.</source>
          <target state="translated">Hva slags metadata som returneres av denne egenskapen vil samsvare med typen som er angitt i opprinnelige for vedlagte Egenskaper &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;registrering-metoden.&lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default metadata of the dependency property.</source>
          <target state="translated">Standard-metadata for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns a hash code for this <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Returnerer en hash-kode for denne <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system uses its own unique identifier &lt;xref:System.Windows.DependencyProperty.GlobalIndex%2A&gt;, and the value of that property is returned by GetHashCode.</source>
          <target state="translated">Egenskapen systemet bruker sine egne Unik identifikator &lt;xref:System.Windows.DependencyProperty.GlobalIndex%2A&gt;, og verdien for denne egenskapen er returnert av GetHashCode.&lt;/xref:System.Windows.DependencyProperty.GlobalIndex%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The hash code for this <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hash-kode for denne <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the metadata for this dependency property as it exists on a specified existing type.</source>
          <target state="translated">Returnerer metadataene for denne avhengighetsegenskapen slik at den finnes i en eksisterende type som er angitt.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying either the type or an object reference to use as type is necessary because the metadata can vary from the original registration due either to &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; calls that alter the metadata of the dependency property as it exists on a type.</source>
          <target state="translated">Angir typen eller en objektreferanse skal brukes som type nødvendig fordi metadataene kan variere fra den opprinnelige registreringen grunn til &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;anrop som alter metadataene for avhengighetsegenskapen fordi det finnes for en type.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The specific type from which to retrieve the dependency property metadata.</source>
          <target state="translated">Bestemte typen som til å hente metadata for avhengighet-egenskapen.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A property metadata object.</source>
          <target state="translated">Et metadataobjekt for egenskapen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns the metadata for this dependency property as it exists on the specified object instance.</source>
          <target state="translated">Returnerer metadataene for denne avhengighetsegenskapen slik at den finnes i angitte objektforekomsten.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying either the type or an object reference is necessary because the metadata of any given dependency property can vary from the original registration due either to &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; calls that can refine the property metadata as it exists on a type.</source>
          <target state="translated">Angir typen eller en objektreferanse er nødvendig, ettersom metadataene for alle angitte avhengighetsegenskapen kan variere fra den opprinnelige registreringen grunn til &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;anrop som kan forbedre egenskapen metadataene fordi det finnes for en type.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you request property metadata based on an instance, you are really just passing the instance so that its type can be evaluated internally.</source>
          <target state="translated">Når du ber om egenskapen metadataene basert på en forekomst, sender du egentlig forekomsten slik at typen kan evalueres internt.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency property metadata does not vary per instance; it is always consistent for any given type-property combination.</source>
          <target state="translated">Avhengighet egenskapen metadataene varierer ikke per forekomst. Det er alltid konsekvent for alle angitte Typeegenskapen kombinasjoner.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.</source>
          <target state="translated">En Avhengighetsobjekt som er merket av for å finne ut hvilken typespesifikke versjon av avhengighetsegenskapen metadataene bør komme fra-typen.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A property metadata object.</source>
          <target state="translated">Et metadataobjekt for egenskapen.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Returns the metadata for this dependency property as it exists on a specified type.</source>
          <target state="translated">Returnerer metadataene for denne avhengighetsegenskapen slik at det finnes for en angitt type.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying either the type or an object reference is necessary because the metadata of any given dependency property can vary from the original registration due either to &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; calls that can refine the property metadata as it exists on a type.</source>
          <target state="translated">Angir typen eller en objektreferanse er nødvendig, ettersom metadataene for alle angitte avhengighetsegenskapen kan variere fra den opprinnelige registreringen grunn til &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;anrop som kan forbedre egenskapen metadataene fordi det finnes for en type.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A specific object that records the dependency object type from which the dependency property metadata is desired.</source>
          <target state="translated">Et bestemt objekt som registrerer objekttypen avhengighet som ønskes avhengighet egenskapmetadata.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A property metadata object.</source>
          <target state="translated">Et metadataobjekt for egenskapen.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets an internally generated value that uniquely identifies the dependency property.</source>
          <target state="translated">Henter en verdi for internt genererte som identifiserer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is an integer, not a <ph id="ph1">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">Denne verdien er et heltall, ikke en <ph id="ph1">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, using this index value is not required, and there is no index access to tables of all dependency properties.</source>
          <target state="translated">Vanligvis bruker denne indeksverdien er ikke obligatorisk, og det er ingen indeksen tilgang til tabellene for alle egenskaper for avhengighet.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency properties should instead be referenced by their identifier fields.</source>
          <target state="translated">Egenskaper for avhengighet må i stedet referert til av sine ID-felt.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>GlobalIndex is used internally for faster access to data structures that use the GlobalIndex as a zero-based array index.</source>
          <target state="translated">GlobalIndex brukes internt for rask tilgang til datastrukturer som bruker GlobalIndex som en nullbasert matrise-indeks.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>A similar usage might have applications for designers or tools.</source>
          <target state="translated">Et lignende bruksområde kan ha programmer for utviklere eller verktøy.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A unique numeric identifier.</source>
          <target state="translated">En unik, numerisk identifikator.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.</source>
          <target state="translated">Bestemmer om en angitt verdi godtas for dette avhengighetsegenskapen typen som kontrollert mot egenskapstype som er angitt i den opprinnelige avhengighet egenskap registreringen.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of <ph id="ph1">`null`</ph> is a valid type for reference type dependency properties, or for a &lt;xref:System.Nullable%601&gt; dependency property, and would return <ph id="ph2">`true`</ph> for these cases.</source>
          <target state="translated">Verdien <ph id="ph1">`null`</ph> er en gyldig type for referanse avhengighet typeegenskaper eller en &lt;xref:System.Nullable%601&gt;avhengighetsegenskapen, og returnerer <ph id="ph2">`true`</ph> for disse tilfellene.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where the dependency property is neither a reference nor a &lt;xref:System.Nullable%601&gt; type, IsValidType will return <ph id="ph1">`false`</ph> for a null value rather than raise an exception.</source>
          <target state="translated">I tilfeller der avhengighetsegenskapen er verken en referanse eller en &lt;xref:System.Nullable%601&gt;typen IsValidType tilbakestiller <ph id="ph1">`false`</ph> for en null-verdi i stedet for Hev et unntak.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The value to check.</source>
          <target state="translated">Verdien som skal se.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified value is the registered property type or an acceptable derived type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis den angitte verdien er registrert egenskapstypen eller en gyldig avledet type. Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.</source>
          <target state="translated">Bestemmer om den angitte verdien er godkjent for egenskapstypen via kontroll av enkel type, og også potensielt hvis den er i det tillatte verdiområdet for denne typen.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a dependency property, an allowed range of values for that type can be specified through a &lt;xref:System.Windows.ValidateValueCallback&gt; that is provided in the dependency property registration.</source>
          <target state="translated">Det tillatte verdiområdet for denne typen kan angis for en avhengighetsegenskapen, via en &lt;xref:System.Windows.ValidateValueCallback&gt;som er angitt i egenskapen registreringen avhengighet.&lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt; internally.</source>
          <target state="translated">Denne metoden kaller &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;internt.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the dependency property in question has no &lt;xref:System.Windows.ValidateValueCallback&gt;,then calling this method is effectively equivalent to calling &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;.</source>
          <target state="translated">Hvis den aktuelle avhengighetsegenskapen har ingen &lt;xref:System.Windows.ValidateValueCallback&gt;kaller denne metoden tilsvarer effektivt kaller &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt; &lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the dependency property does have a &lt;xref:System.Windows.ValidateValueCallback&gt;, and if &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt; would have returned <ph id="ph1">`true`</ph>, then the value returned will be as implemented in the callback.</source>
          <target state="translated">Hvis avhengighetsegenskapen, har en &lt;xref:System.Windows.ValidateValueCallback&gt;, og hvis &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;ville ha returnert <ph id="ph1">`true`</ph>, og deretter returverdien blir som implementert i tilbakeringing.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt; &lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null value is a valid value for reference type dependency properties, or for a &lt;xref:System.Nullable%601&gt; dependency property, and would return <ph id="ph1">`true`</ph> for these cases.</source>
          <target state="translated">En null-verdi er en gyldig verdi for referanse avhengighet typeegenskaper eller en &lt;xref:System.Nullable%601&gt;avhengighetsegenskapen, og returnerer <ph id="ph1">`true`</ph> for disse tilfellene.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where the dependency property is neither a reference nor a &lt;xref:System.Nullable%601&gt; type, &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt; will return <ph id="ph1">`false`</ph> for a null value rather than raise an exception.</source>
          <target state="translated">I tilfeller der avhengighetsegenskapen er verken en referanse eller en &lt;xref:System.Nullable%601&gt;typen &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;tilbakestiller <ph id="ph1">`false`</ph> for en null-verdi i stedet for Hev et unntak.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt; &lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The value to check.</source>
          <target state="translated">Verdien som skal se.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value is acceptable and is of the correct type or a derived type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis verdien er godkjent, og er av riktig type eller en avledet type. Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets the name of the dependency property.</source>
          <target state="translated">Henter navnet på avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gets the name provided as the <ph id="ph1">`name`</ph> parameter during dependency property registration.</source>
          <target state="translated">Denne egenskapen henter navnet som er angitt som den <ph id="ph1">`name`</ph> parameteren under avhengighet egenskapen registreringen.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This name is immutable, and cannot be <ph id="ph1">`null`</ph> or an empty string.</source>
          <target state="translated">Dette navnet er uforanderlig og kan ikke <ph id="ph1">`null`</ph> eller en tom streng.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duplicate name registrations on the same owner type are not permitted, and will throw an exception when you attempt to register the duplicate.</source>
          <target state="translated">Duplisert navneregistreringer på den samme eiertypen tillates ikke, og Iverksett et unntak når du prøver å registrere duplisert.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The Name of a dependency property must follow the convention of matching the name of its dependency property identifier minus the suffix "Property".</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; I navnet på en avhengighetsegenskap må følge convention av samsvarer med navnet på den avhengighet egenskapsidentifikator minus suffikset "Egenskapen".</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>egenskaper for egendefinert avhengighet<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">Navnet på egenskapen.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.</source>
          <target state="translated">Angir alternative metadata for denne avhengighetsegenskapen når det finnes på forekomster av angitt type, overstyrer metadataene som fantes for avhengighetsegenskapen som den er arvet fra basistyper.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency property metadata should be overridden before the property system uses the dependency property.</source>
          <target state="translated">Avhengighet egenskapmetadata skal overstyres før egenskapen systemet bruker avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This equates to the time that specific instances are created using the class that registers the dependency property.</source>
          <target state="translated">Dette lik klokkeslettet da bestemte forekomster er opprettet ved hjelp av klassen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to OverrideMetadata should only be performed within the static constructors of the type that provides itself as the <ph id="ph1">`forType`</ph> parameter of this method, or through similar instantiation.</source>
          <target state="translated">Kall til OverrideMetadata kan bare utføres i statiske konstruktører av typen som gir seg selv som den <ph id="ph1">`forType`</ph> parameteren av denne metoden eller via lignende objektforekomst.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to change metadata after instances of the owner type exist will not raise exceptions, but will result in inconsistent behaviors in the property system.</source>
          <target state="translated">Forsøk på å endre metadata etter forekomster av eieren finnes, vil ikke heve unntak, men vil føre til inkonsekvente virkemåter i egenskapen systemet.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>After metadata for a particular derived class override is established with this method, subsequent attempts to override metadata on this same derived class will raise an exception.</source>
          <target state="translated">Etter metadata for en bestemt utledede klassen overstyringen er opprettet med denne metoden, vise senere forsøk på å overstyre metadata på denne samme utledede klassen et unntak.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied metadata is merged with the property metadata for the dependency property as it exists on the base owner.</source>
          <target state="translated">De angitte metadataene slås sammen med metadataene for egenskapen for avhengighetsegenskapen fordi det finnes i basistabellen eieren.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any characteristics that were specified in the original base metadata will persist; only those characteristics that were specifically changed in the new metadata will override the characteristics of the base metadata.</source>
          <target state="translated">Egenskaper som ble angitt i den opprinnelige base metadata vil beholde; bare egenskaper som spesielt ble endret i den nye metadata overstyrer egenskaper base metadata.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characteristics such as &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; are replaced if specified in the new metadata.</source>
          <target state="translated">Noen egenskaper som &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;erstattes hvis angitt i de nye metadataene.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Others, such as &lt;xref:System.Windows.PropertyChangedCallback&gt;, are combined.</source>
          <target state="translated">Andre, slik som &lt;xref:System.Windows.PropertyChangedCallback&gt;, kombineres.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ultimately, the merge behavior depends on the property metadata type being used for the override, so the behavior described here is for the existing property metadata classes used by <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dependency properties.</source>
          <target state="translated">Merge-virkemåten avhenger av metadata egenskapstypen som brukes for overstyringen, og virkemåten her er for eksisterende egenskapen metadata klassene som brukes av <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> avhengighetsegenskaper.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Metadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Framework Property Metadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>avhengighet egenskapmetadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> og <bpt id="p2">[</bpt>Framework egenskapmetadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The type where this dependency property is inherited and where the provided alternate metadata will be applied.</source>
          <target state="translated">Typen der denne avhengighetsegenskapen arves og hvor de angitte metadataene for alternativ brukes.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The metadata to apply to the dependency property on the overriding type.</source>
          <target state="translated">Metadataene som skal brukes til avhengighetsegenskapen for overstyre typen.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).</source>
          <target state="translated">Forsøkte å overstyre metadata på en skrivebeskyttet avhengighetsegenskapen (operasjonen ikke kan utføres ved hjelp av denne signaturen).</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Metadata was already established for the dependency property as it exists on the provided type.</source>
          <target state="translated">Metadata ble allerede opprettet for avhengighetsegenskapen som den finnes på den angitte typen.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration.</source>
          <target state="translated">Utstyr alternativ metadata for en skrivebeskyttet avhengighetsegenskapen når det finnes i forekomster av angitt type, overstyrer metadataene som ble angitt i den første avhengighet egenskap registreringen.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>You must pass the <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the read-only dependency property to avoid raising an exception.</source>
          <target state="translated">Du må bestå av <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> for skrivebeskyttet avhengighetsegenskapen for å unngå å vise et unntak.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature provides underlying implementation for a read-only dependency property identifier (&lt;xref:System.Windows.DependencyPropertyKey&gt;) method.</source>
          <target state="translated">Denne signaturen gir underliggende implementering for en skrivebeskyttet avhengighet egenskapsidentifikator (&lt;xref:System.Windows.DependencyPropertyKey&gt;) metoden.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If overriding metadata for a read-write dependency property, use &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;.</source>
          <target state="translated">Hvis overstyrer metadata for en skrivebeskyttet avhengighetsegenskapen, kan du bruke &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency property metadata should be overridden before the property system uses the dependency property.</source>
          <target state="translated">Avhengighet egenskapmetadata skal overstyres før egenskapen systemet bruker avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This equates to the time that specific objects are created for the class that registers the dependency property.</source>
          <target state="translated">Dette lik klokkeslettet da bestemte objekter er opprettet for klassen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; should only be performed within the static constructors of the type that provides itself as the <ph id="ph1">`forType`</ph> parameter of this method, or through similar instantiation.</source>
          <target state="translated">Kall til &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;kan bare utføres i statiske konstruktører av typen som gir seg selv som den <ph id="ph1">`forType`</ph> parameteren av denne metoden eller via lignende objektforekomst.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to change metadata after instances of the owner type exist will not raise exceptions, but will result in inconsistent behaviors in the property system.</source>
          <target state="translated">Forsøk på å endre metadata etter forekomster av eieren finnes, vil ikke heve unntak, men vil føre til inkonsekvente virkemåter i egenskapen systemet.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>After metadata for a particular derived class override is established with this method, subsequent attempts to override metadata on this same derived class will raise an exception.</source>
          <target state="translated">Etter metadata for en bestemt utledede klassen overstyringen er opprettet med denne metoden, vise senere forsøk på å overstyre metadata på denne samme utledede klassen et unntak.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied metadata is merged with the property metadata for the dependency property as it exists on the base owner.</source>
          <target state="translated">De angitte metadataene slås sammen med metadataene for egenskapen for avhengighetsegenskapen fordi det finnes i basistabellen eieren.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any characteristics that were specified in the original base metadata will persist; only those characteristics that were specifically changed in the new metadata will override the characteristics of the base metadata.</source>
          <target state="translated">Egenskaper som ble angitt i den opprinnelige base metadata vil beholde; bare egenskaper som spesielt ble endret i den nye metadata overstyrer egenskaper base metadata.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characteristics such as &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; are replaced if specified in the new metadata.</source>
          <target state="translated">Noen egenskaper som &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;erstattes hvis angitt i de nye metadataene.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Others, such as &lt;xref:System.Windows.PropertyChangedCallback&gt;, are combined.</source>
          <target state="translated">Andre, slik som &lt;xref:System.Windows.PropertyChangedCallback&gt;, kombineres.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The merge behavior depends on the property metadata type being used for the override.</source>
          <target state="translated">Virkemåte for sammenslåing avhenger av metadata egenskapstypen som brukes for overstyringen.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Metadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Framework Property Metadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>avhengighet egenskapmetadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> og <bpt id="p2">[</bpt>Framework egenskapmetadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The type where this dependency property is inherited and where the provided alternate metadata will be applied.</source>
          <target state="translated">Typen der denne avhengighetsegenskapen arves og hvor de angitte metadataene for alternativ brukes.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The metadata to apply to the dependency property on the overriding type.</source>
          <target state="translated">Metadataene som skal brukes til avhengighetsegenskapen for overstyre typen.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The access key for a read-only dependency property.</source>
          <target state="translated">Hurtigtasten for en skrivebeskyttet avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.</source>
          <target state="translated">Henter objekttypen som registrert avhengighetsegenskapen med egenskapen systemet, eller legge til seg selv som eier av egenskapen.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value was provided during property registration.</source>
          <target state="translated">Denne verdien ble angitt under registrering av egenskapen.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owner will be either the original registering type in the case of a &lt;xref:System.Windows.DependencyProperty&gt; identifier generated from a &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call, or the type that added itself as owner in the case of a &lt;xref:System.Windows.DependencyProperty&gt; identifier generated from an &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; call.</source>
          <target state="translated">Eieren blir enten den opprinnelige registrering typen med en &lt;xref:System.Windows.DependencyProperty&gt;identifikator som er generert fra en &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;kall eller typen som legges til seg selv som eier med en &lt;xref:System.Windows.DependencyProperty&gt;identifikator som er generert fra en &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;kall.&lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OwnerType on any given &lt;xref:System.Windows.DependencyProperty&gt; is immutable, and cannot be <ph id="ph1">`null`</ph> in a valid &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">OwnerType noen angitt &lt;xref:System.Windows.DependencyProperty&gt;er uforanderlig og kan ikke <ph id="ph1">`null`</ph> i en gyldig &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The type of the object that registered the property or added itself as owner of the property.</source>
          <target state="translated">Typen for objektet som er registrert egenskapen eller legges til seg selv som eier av egenskapen.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets the type that the dependency property uses for its value.</source>
          <target state="translated">Henter typen som bruker avhengighetsegenskapen for verdien.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property reports the type of the property's value as declared by the original property registration, through the <ph id="ph1">`propertyType`</ph> parameter.</source>
          <target state="translated">Denne egenskapen rapporterer hva slags egenskapsverdien som deklarert av den opprinnelige egenskapen-registreringen via den <ph id="ph1">`propertyType`</ph> parameteren.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similar to the &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;, the property type of a dependency property is immutable after registration.</source>
          <target state="translated">Ligner den &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;, en avhengighetsegenskapen egenskapstype er uforanderlig etter registrering.&lt;/xref:System.Windows.DependencyProperty.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the property value.</source>
          <target state="translated">Den &lt;xref:System.Type&gt;på egenskapsverdien.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the dependency property identified by this <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance is a read-only dependency property.</source>
          <target state="translated">Henter en verdi som angir om avhengighetsegenskapen identifisert av dette <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> forekomsten er en skrivebeskyttet avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties are registered within the property system by calling the &lt;xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt; method as opposed to the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; method.</source>
          <target state="translated">Egenskaper for skrivebeskyttet avhengighet registreres i systemet egenskapen ved å kalle den &lt;xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt;metoden i stedet for den &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;metoden.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attached properties can also be registered as read-only; see &lt;xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;.</source>
          <target state="translated">Vedlagte egenskaper kan også være registrert som skrivebeskyttet. Se &lt;xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties require a &lt;xref:System.Windows.DependencyPropertyKey&gt; identifier rather than a &lt;xref:System.Windows.DependencyProperty&gt; identifier to perform metadata operations such as overriding the metadata or setting the value.</source>
          <target state="translated">Skrivebeskyttet avhengighetsegenskaper krever en &lt;xref:System.Windows.DependencyPropertyKey&gt;identifikator i stedet for en &lt;xref:System.Windows.DependencyProperty&gt;ID til å utføre metadata operasjoner, for eksempel overstyrer metadataene eller angivelse av verdien.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you obtained a collection of &lt;xref:System.Windows.DependencyProperty&gt; identifiers through a call to &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt; or another <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> that exposes identifiers, check the ReadOnly value before attempting to call &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; using that dependency property identifier as an input parameter, to verify that the dependency property that the identifier represents is not read-only.</source>
          <target state="translated">Hvis du kjøpte en samling av &lt;xref:System.Windows.DependencyProperty&gt;identifikatorer via et kall til &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;eller en annen <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> som viser identifikatorer, sjekk verdien for ReadOnly før du prøver å kalle &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;eller &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;bruker egenskapsidentifikator som avhengighet som en inndataparameter for å bekrefte at avhengighetsegenskapen identifikatoren representerer ikke er skrivebeskyttet.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyObject.SetValue%2A&gt; &lt;/xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of ReadOnly is <ph id="ph1">`true`</ph> on a dependency property, there is no programmatic way to obtain a reference to the &lt;xref:System.Windows.DependencyPropertyKey&gt; identifier of that dependency property, from the metadata or from the &lt;xref:System.Windows.DependencyProperty&gt; identifier; the identifier must be available as a static field in order to call &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt; against a read-only dependency property.</source>
          <target state="translated">Hvis verdien ReadOnly <ph id="ph1">`true`</ph> på en avhengighetsegenskapen det er ingen programmatisk mulighet til å hente en referanse til det &lt;xref:System.Windows.DependencyPropertyKey&gt;identifikatoren for den avhengighetsegenskapen fra metadataene eller den &lt;xref:System.Windows.DependencyProperty&gt;identifikator; identifikatoren må være tilgjengelige som et statisk felt for å kalle &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;mot en skrivebeskyttet avhengighetsegenskapen.&lt;/xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt; &lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a custom dependency property, and register it as read-only, you should define only a get accessor for the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> wrapper property.</source>
          <target state="translated">Når du oppretter en egendefinert avhengighetsegenskapen og registrere den som skrivebeskyttet, må du definere bare en get-aksessor for den <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> wrapper egenskapen.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, your class will have a confusing object model for the property wrapper as compared to the access to the backing dependency property.</source>
          <target state="translated">Klassen må ellers en forvirrende objektmodell for den egenskap wrapperen sammenlignet med tilgang til avhengighetsegenskapen sikkerhetskopiering.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Read-Only Dependency Properties<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>egenskaper for egendefinert avhengighet<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> eller <bpt id="p2">[</bpt>egenskaper for skrivebeskyttelse avhengighet<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property is read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Hvis avhengighetsegenskapen er skrivebeskyttet. Ellers <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Registers a dependency property with the specified property name, property type, and owner type.</source>
          <target state="translated">Registrerer en avhengighetsegenskapen med det angitte egenskapsnavnet egenskapstype og Eiertype.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">For mer informasjon om avhengighet egenskapen registrering, kan du se &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The name must be unique within the registration namespace of the owner type.</source>
          <target state="translated">Navnet må være unike innenfor navneområdet registrering av eiertypen.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">En egenskapsidentifikator for avhengighet som skal brukes til å angi verdien for en <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> i klassen.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Denne identifikatoren brukes deretter å referere til avhengighetsegenskapen senere for operasjoner, for eksempel angi verdien programmatisk eller henting av metadata.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Registers a dependency property with the specified property name, property type, owner type, and property metadata.</source>
          <target state="translated">Registrerer en avhengighetsegenskapen med det angitte egenskapsnavnet egenskapstype, Eiertype og egenskapmetadata.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">For mer informasjon om avhengighet egenskapen registrering, kan du se &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Egenskapmetadata for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">En egenskapsidentifikator for avhengighet som skal brukes til å angi verdien for en <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> i klassen.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Denne identifikatoren brukes deretter å referere til avhengighetsegenskapen senere for operasjoner, for eksempel angi verdien programmatisk eller henting av metadata.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.</source>
          <target state="translated">Registrerer en avhengighetsegenskapen med det angitte egenskapsnavnet egenskapstype, Eiertype, egenskapmetadata og en tilbakeringing for validering av verdien for egenskapen.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">For mer informasjon om avhengighet egenskapen registrering, kan du se &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Egenskapmetadata for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">En referanse til en tilbakeringing som må utføre en egendefinert validering på avhengighet egenskapsverdien utover validering vanlig type.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">En egenskapsidentifikator for avhengighet som skal brukes til å angi verdien for en <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> i klassen.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Denne identifikatoren brukes deretter å referere til avhengighetsegenskapen senere for operasjoner, for eksempel angi verdien programmatisk eller henting av metadata.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Registers an attached property with the specified property name, property type, and owner type.</source>
          <target state="translated">Registrerer en vedlagte egenskap med det angitte egenskapsnavnet egenskapstype og Eiertype.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attached property is a property concept defined by <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">En vedlagte egenskap er et egenskapen begrep som er definert av <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> implements attached properties as dependency properties.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>implementerer kobles egenskaper som avhengighetsegenskaper.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> attached properties are dependency properties, they can have metadata applied that can be used by the general property system for operations such as reporting layout characteristics.</source>
          <target state="translated">Fordi den <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> vedlagte er avhengighetsegenskaper, de kan ha metadataene som brukes som kan brukes av den generelle egenskapen for operasjoner, for eksempel reporting oppsettet egenskaper.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>knyttet egenskaper oversikt over<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">For mer informasjon om avhengighet egenskapen registrering, kan du se &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">En egenskapsidentifikator for avhengighet som skal brukes til å angi verdien for en <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> i klassen.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Denne identifikatoren brukes deretter å referere til avhengighetsegenskapen senere for operasjoner, for eksempel angi verdien programmatisk eller henting av metadata.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Registers an attached property with the specified property name, property type, owner type, and property metadata.</source>
          <target state="translated">Registrerer en vedlagte egenskap med det angitte egenskapsnavnet egenskapstype, Eiertype og egenskapmetadata.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Egenskapmetadata for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This can include the default value as well as other characteristics.</source>
          <target state="translated">Dette kan omfatte standardverdien, samt andre egenskaper.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">En egenskapsidentifikator for avhengighet som skal brukes til å angi verdien for en <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> i klassen.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Denne identifikatoren brukes deretter å referere til avhengighetsegenskapen senere for operasjoner, for eksempel angi verdien programmatisk eller henting av metadata.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.</source>
          <target state="translated">Registrerer en vedlagte egenskap med angitt egenskapstype, Eiertype, egenskapmetadata og verdien validering tilbakeringing for egenskapen.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Egenskapmetadata for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This can include the default value as well as other characteristics.</source>
          <target state="translated">Dette kan omfatte standardverdien, samt andre egenskaper.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">En referanse til en tilbakeringing som må utføre en egendefinert validering på avhengighet egenskapsverdien utover validering vanlig type.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">En egenskapsidentifikator for avhengighet som skal brukes til å angi verdien for en <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> i klassen.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Denne identifikatoren brukes deretter å referere til avhengighetsegenskapen senere for operasjoner, for eksempel angi verdien programmatisk eller henting av metadata.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Registers a read-only attached property, with the specified property type, owner type, and property metadata.</source>
          <target state="translated">Registrerer en skrivebeskyttet vedlagte egenskap med angitt egenskapstype, Eiertype og egenskapmetadata.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Egenskapmetadata for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.</source>
          <target state="translated">En avhengig egenskap nøkkel som skal brukes til å angi verdien for statiske skrivebeskyttet felt i klassen, som deretter brukes til å referere til avhengighetsegenskapen senere.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.</source>
          <target state="translated">Registrerer en skrivebeskyttet vedlagte egenskap med angitt egenskapstype, Eiertype, egenskapmetadata og tilbakeringing validering.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Egenskapmetadata for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">En referanse til en brukeropprettede tilbakeringing som må utføre en egendefinert validering på avhengighet egenskapsverdien utover validering vanlig type.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.</source>
          <target state="translated">En avhengig egenskap nøkkel som skal brukes til å angi verdien for statiske skrivebeskyttet felt i klassen, som deretter brukes til å referere til avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Registers a read-only dependency property, with the specified property type, owner type, and property metadata.</source>
          <target state="translated">Registrerer en skrivebeskyttet avhengighetsegenskapen med angitt egenskapstype, Eiertype og egenskapmetadata.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the type &lt;xref:System.Windows.DependencyPropertyKey&gt;, whereas &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; returns the type &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Denne metoden returnerer typen &lt;xref:System.Windows.DependencyPropertyKey&gt;, mens &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;returnerer typen &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the keys that represent read-only properties are not made public, because the keys can be used to set the dependency property value by calling &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.</source>
          <target state="translated">Vanligvis er nøkler som representerer skrivebeskyttede egenskaper ikke offentliggjort, fordi nøklene kan brukes til å angi egenskapsverdien avhengighet ved å kalle &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.&lt;/xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your class design will affect your requirements, but it is generally recommended to limit the access and visibility of any &lt;xref:System.Windows.DependencyPropertyKey&gt; to only those parts of your code that are necessary to set that dependency property as part of class or application logic.</source>
          <target state="translated">Klassen utformingen påvirker dine behov, men det anbefales vanligvis til å begrense tilgang og synligheten for noen &lt;xref:System.Windows.DependencyPropertyKey&gt;på de delene av koden som er nødvendig for å angi at avhengighetsegenskapen som en del av klasse eller en bestemt applikasjon logic.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also recommended that you expose a dependency property identifier for the read-only dependency property, by exposing the value of &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt; as a <ph id="ph1">`public static readonly`</ph> field on your class.</source>
          <target state="translated">Det anbefales at du viser en avhengighet egenskapsidentifikator for avhengighetsegenskapen skrivebeskyttet ved at verdien for &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;som en <ph id="ph1">`public static readonly`</ph> på din klasse.&lt;/xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties are a fairly typical scenario both in the existing <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> and for customization scenarios, because other <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> features might require a dependency property even if that property is not intended to be settable by callers.</source>
          <target state="translated">Skrivebeskyttet avhengighet er en ganske vanlige scenario begge i den eksisterende <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> og tilpassing scenarioer fordi andre <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> funksjoner kan krever en avhengighetsegenskap selv om denne egenskapen ikke er ment å være angis av brukere.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the value of a read-only dependency property as the basis for other property system operations that take a dependency property, such as basing a &lt;xref:System.Windows.Trigger&gt; on the dependency property in a style.</source>
          <target state="translated">Du kan bruke verdien til en skrivebeskyttet avhengighetsegenskapen som grunnlag for andre egenskapen system-operasjoner som tar en avhengighetsegenskapen, for eksempel basere en &lt;xref:System.Windows.Trigger&gt;på avhengighetsegenskapen i en stil.&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">For mer informasjon om avhengighet egenskapen registrering, kan du se &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Egenskapmetadata for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.</source>
          <target state="translated">En avhengig egenskap nøkkel som skal brukes til å angi verdien for statiske skrivebeskyttet felt i klassen, som deretter brukes til å referere til avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.</source>
          <target state="translated">Registrerer en skrivebeskyttet avhengighetsegenskapen med angitt egenskapstype, Eiertype, egenskapmetadata og tilbakeringing validering.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the type &lt;xref:System.Windows.DependencyPropertyKey&gt;, whereas &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; returns the type &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Denne metoden returnerer typen &lt;xref:System.Windows.DependencyPropertyKey&gt;, mens &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;returnerer typen &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the keys that represent read-only properties are not made public, because the keys can be used to set the dependency property value by calling &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.</source>
          <target state="translated">Vanligvis er nøkler som representerer skrivebeskyttede egenskaper ikke offentliggjort, fordi nøklene kan brukes til å angi egenskapsverdien avhengighet ved å kalle &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.&lt;/xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your class design will affect your requirements, but it is generally recommended to limit the access and visibility of any &lt;xref:System.Windows.DependencyPropertyKey&gt; to only those parts of your code that are necessary to set that dependency property as part of class or application logic.</source>
          <target state="translated">Klassen utformingen påvirker dine behov, men det anbefales vanligvis til å begrense tilgang og synligheten for noen &lt;xref:System.Windows.DependencyPropertyKey&gt;på de delene av koden som er nødvendig for å angi at avhengighetsegenskapen som en del av klasse eller en bestemt applikasjon logic.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also recommended that you expose a dependency property identifier for the read-only dependency property, by exposing the value of &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt; as a <ph id="ph1">`public static readonly`</ph> field on your class.</source>
          <target state="translated">Det anbefales at du viser en avhengighet egenskapsidentifikator for avhengighetsegenskapen skrivebeskyttet ved at verdien for &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;som en <ph id="ph1">`public static readonly`</ph> på din klasse.&lt;/xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties are a fairly typical scenario.</source>
          <target state="translated">Skrivebeskyttet avhengighet er en ganske vanlige scenarioet.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the value of a read-only dependency property as the basis for other property system operations that take a dependency property, such as basing a &lt;xref:System.Windows.Trigger&gt; on the dependency property in a style.</source>
          <target state="translated">Du kan bruke verdien til en skrivebeskyttet avhengighetsegenskapen som grunnlag for andre egenskapen system-operasjoner som tar en avhengighetsegenskapen, for eksempel basere en &lt;xref:System.Windows.Trigger&gt;på avhengighetsegenskapen i en stil.&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">For mer informasjon om avhengighet egenskapen registrering, kan du se &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validation on a read-only dependency property might be less important.</source>
          <target state="translated">Validering av en skrivebeskyttet avhengighetsegenskapen kanskje mindre viktige.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>The nonpublic access level you specify for the key reduces the likelihood for arbitrary invalid input.</source>
          <target state="translated">Ikke-offentlig tilgangsnivået du angir for nøkkelen reduserer sannsynligheten for tilfeldig ugyldige inndata.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">Navnet på avhengighetsegenskapen til å registrere.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Typen for egenskapen.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Eiertypen som registrerer avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Egenskapmetadata for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">En referanse til en brukeropprettede tilbakeringing som må utføre en egendefinert validering på avhengighet egenskapsverdien utover validering vanlig type.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.</source>
          <target state="translated">En avhengig egenskap nøkkel som skal brukes til å angi verdien for statiske skrivebeskyttet felt i klassen, som deretter brukes til å referere til avhengighetsegenskapen senere.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the dependency property.</source>
          <target state="translated">Returnerer strengrepresentasjon av avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation returns the &lt;xref:System.Windows.DependencyProperty.Name%2A&gt; property value.</source>
          <target state="translated">Returnerer for denne implementeringen av &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;egenskapsverdi.&lt;/xref:System.Windows.DependencyProperty.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The string representation of the dependency property.</source>
          <target state="translated">Strengrepresentasjon av avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Specifies a static value that is used by the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system rather than <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the property exists, but does not have its value set by the property system.</source>
          <target state="translated">Angir en statisk verdi som brukes av den <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> egenskapen system snarere enn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> til å angi at egenskapen finnes, men har ikke verdien som er angitt av egenskapen-systemet.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue is a sentinel value that is used for scenarios where the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system is unable to determine a requested &lt;xref:System.Windows.DependencyProperty&gt; value.</source>
          <target state="translated">UnsetValue er en sentinel-verdi som skal brukes for scenarioer der den <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> egenskapen systemet er kan ikke fastsette en forespurte &lt;xref:System.Windows.DependencyProperty&gt;verdi.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue is used rather than <ph id="ph1">`null`</ph>, because <ph id="ph2">`null`</ph> could be a valid property value, as well as a valid (and frequently used) &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;.</source>
          <target state="translated">UnsetValue brukes snarere enn <ph id="ph1">`null`</ph>fordi <ph id="ph2">`null`</ph> kan være en gyldig egenskapsverdi, i tillegg til en gyldig (og ofte brukte) &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue is never returned out of &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">UnsetValue returneres aldri utenfor &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt; on a dependency property on a &lt;xref:System.Windows.DependencyObject&gt; instance, one of the following applies:      -   A dependency property has a default value established in metadata and that value is returned.</source>
          <target state="translated">Når du kaller &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;på en avhengighetsegenskap i en &lt;xref:System.Windows.DependencyObject&gt;forekomsten gjelder én av følgende: – en avhengighetsegenskapen har en standardverdi som er opprettet i metadata, og denne verdien, returneres.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value might come from &lt;xref:System.Windows.DependencyProperty.DefaultMetadata%2A&gt;.</source>
          <target state="translated">Denne verdien kan komme fra &lt;xref:System.Windows.DependencyProperty.DefaultMetadata%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.DefaultMetadata%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Some other value was established by the property system, and the default value is no longer relevant.</source>
          <target state="translated">– En annen verdi ble opprettet av egenskapen systemet, og standardverdien er ikke lenger relevant.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>avhengighet egenskapen verdien prioriteten<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; of UnsetValue is specifically disallowed.</source>
          <target state="translated">Angi en &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;av UnsetValue er spesielt ikke tillatt.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.DependencyObject.ReadLocalValue%2A?displayProperty=fullName&gt; returns UnsetValue when the requested property has not been locally set.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyObject.ReadLocalValue%2A?displayProperty=fullName&gt;Returnerer UnsetValue når den forespurte egenskapen ikke ble angitt lokalt.&lt;/xref:System.Windows.DependencyObject.ReadLocalValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue has a special meaning when used as the return value of a &lt;xref:System.Windows.CoerceValueCallback&gt;.</source>
          <target state="translated">UnsetValue er en spesiell betydning når den brukes som verdien som returneres av en &lt;xref:System.Windows.CoerceValueCallback&gt;.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>avhengighet egenskapen tilbakeringinger og validering<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are binding to a database, note that UnsetValue is not equivalent to &lt;xref:System.DBNull.Value&gt;, in a similar way to how &lt;xref:System.DBNull.Value&gt; is not equivalent to a true null.</source>
          <target state="translated">Hvis du binder til en database, Vær oppmerksom på at UnsetValue ikke tilsvarer &lt;xref:System.DBNull.Value&gt;, på samme måten hvordan &lt;xref:System.DBNull.Value&gt;tilsvarer ikke en true null.&lt;/xref:System.DBNull.Value&gt; &lt;/xref:System.DBNull.Value&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Som skal legges til.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Gets the value validation callback for the dependency property.</source>
          <target state="translated">Henter validering tilbakeringing verdien for avhengighetsegenskapen.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property will contain <ph id="ph1">`null`</ph> for any dependency property with no registered validation callback.</source>
          <target state="translated">Denne egenskapen vil inneholde <ph id="ph1">`null`</ph> for alle avhengighetsegenskapen med tilbakeringing ingen registrerte validering.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validate value callbacks must act in a static sense: validation applied through the &lt;xref:System.Windows.ValidateValueCallback&gt; cannot determine whether the provided value is valid for any particular instance.</source>
          <target state="translated">Kontrollere verdi tilbakeringinger må utføre en handling i en statisk meningsløst: validering brukt gjennom den &lt;xref:System.Windows.ValidateValueCallback&gt;kan ikke avgjøre om den angitte verdien er ugyldig for en bestemt forekomst.&lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback can only determine whether all objects that possess the dependency property should or should not accept the provided value as valid.</source>
          <target state="translated">Tilbakeringing kan bare finne ut om alle objekter som har avhengighetsegenskapen må eller bør ikke godtar den angitte verdien som gyldig.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to perform validation that relies on knowing the values of other dependency properties on a particular instance, use a &lt;xref:System.Windows.CoerceValueCallback&gt; instead.</source>
          <target state="translated">Hvis du trenger å utføre validering som er avhengig vel vitende om verdiene i andre avhengighetsegenskaper på en bestemt forekomst, Bruk et &lt;xref:System.Windows.CoerceValueCallback&gt;i stedet.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.CoerceValueCallback&gt; is registered as part of dependency property metadata, rather than directly within the dependency property identifier.</source>
          <target state="translated">Den &lt;xref:System.Windows.CoerceValueCallback&gt;er registrert som en del av avhengighet egenskapmetadata i stedet for direkte i egenskapsidentifikator avhengighet.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Hvis du vil ha mer informasjon, se <bpt id="p1">[</bpt>avhengighet egenskapen tilbakeringinger og validering<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The value validation callback for this dependency property, as provided for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">validateValueCallback</ph><ept id="p1">&lt;/code&gt;</ept> parameter in the original dependency property registration.</source>
          <target state="translated">Verdien validering tilbakeringing for denne avhengighetsegenskapen, som er oppgitt den <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">validateValueCallback</ph> <ept id="p1">&lt;/code&gt;</ept> parameter i den opprinnelige avhengighet egenskap registreringen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>