<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nb-no">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee634ddf2e70e13eaf848262fa211ff6f3de6658</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.EnterpriseServices.IPlaybackControl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a36c027bfb40f64b135e6abdd37fb79846420b2a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0eaf0e8b91ab41a16371307438159c713a6199b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</source>
          <target state="translated">Funksjoner i komponenter i kø på unormal håndtering av serversiden avspilling feil og klientsiden feil Message Queuing levering mekanisme.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception class defined for the component in the COM+ catalog implements both IPlaybackControl and the interface for the original class.</source>
          <target state="translated">Unntaksklasse som er definert for komponenten i COM +-katalogen implementerer både IPlaybackControl og grensesnittet for opprinnelige klassen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method implementations of the original class interface are used to perform the exception handling for the failed methods in the class itself.</source>
          <target state="translated">Metoden implementeringer av grensesnittet klassen brukes til å utføre unntaksbehandling mislykket metodene i selve klassen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>They will be called after &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt; or &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt; to process exceptions for the method originally called.</source>
          <target state="translated">De vil kalles etter &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;eller &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;til å behandle unntak for metoden kalles opprinnelig.&lt;/xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt; &lt;/xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Queued Components Player calls the methods of IPlaybackControl to inform the exception-handler object that a message is about to be placed on the final resting or dead letter queue.</source>
          <target state="translated">Hver spiller i kø komponenter kaller metodene IPlaybackControl å informere unntak behandlingsprogrammet-objektet som en melding skal plasseres på den siste holde eller blindkø kø.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Queued Components Player then calls the same method in the exception-handler object that had failed in the original method call.</source>
          <target state="translated">Hver spiller i kø komponenter kaller deretter på samme måte i unntak behandlingsprogrammet-objektet som har mislyktes i det opprinnelige metodekallet.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception-handler object can implement an alternative, for example, by gathering problem diagnosis information or generating an object or message that informs the client of the problem.</source>
          <target state="translated">Unntak behandlingsprogrammet-objektet kan implementere et alternativ, for eksempel ved innsamling problemet diagnoseinformasjon eller generering av et objekt eller en melding om klienten om problemet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application does not implement IPlaybackControl, the poison message is placed on the final resting or dead letter queue when the Queued Components Player exhausts all retries.</source>
          <target state="translated">Hvis programmet ikke implementerer IPlaybackControl, plasseres i Giftmelding for endelig holde eller blindkø køen når i kø komponenter Player bruker opp alle gjentatte forsøk.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A poison message is a message that cannot be processed for some reason, perhaps because of a problem with the server or queuing system.</source>
          <target state="translated">En giftmelding er en melding som ikke kan behandles på grunn av noen kanskje på grunn av et problem med serveren eller queuing system.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction is rolled back, and the poison message goes to the top of the queue.</source>
          <target state="translated">Transaksjonen er rullet tilbake, og Giftmelding går til toppen av køen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the message is dequeued again, the same condition occurs.</source>
          <target state="translated">Når meldingen er tatt ut av kø på nytt, oppstår det samme betingelse.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This message can continue looping indefinitely until something is done to correct the problem.</source>
          <target state="translated">Meldingen kan fortsette løkker helt til noe gjøres for å løse problemet.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Queued Components service handles the poison message by using a series of retries.</source>
          <target state="translated">Lytteobjektet for komponenter-tjenesten behandler Giftmelding ved hjelp av en rekke nye forsøk.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>After several unsuccessful retries, the message is moved to a final resting queue.</source>
          <target state="translated">Meldingen er flyttet til en endelig vannrett kø etter gjentatte mislykkede forsøk.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Poison messages remain in the resting queue until manually moved by using the Queued Components Message Mover tool.</source>
          <target state="translated">Poison meldinger blir værende i vannrett køen før flyttet manuelt ved hjelp av verktøyet i kø komponenter meldingen Tuppelkilden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The poison message situation can also be resolved programmatically, using the &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt; method, which informs the server-side component author that all attempts to play back the deferred activation have failed.</source>
          <target state="translated">Giftmelding situasjonen kan også løses programmatisk, ved hjelp av den &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;metode, som forteller forfatteren av serversiden komponent som alle forsøk på å spille av utsatt aktiveringen mislyktes.&lt;/xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you discover a poison message, you might be able to solve the underlying cause of the problem quickly.</source>
          <target state="translated">Hvis du oppdager en giftmelding, kan du kanskje løse underliggende årsaken til problemet raskt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the server was offline for some reason, you can bring the server back online.</source>
          <target state="translated">Hvis serveren var frakoblet på grunn noen, kan du for eksempel få tilgjengelig igjen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you cannot solve the problem quickly, you can automatically generate another transaction that notifies the requestor that the transaction did not occur.</source>
          <target state="translated">Hvis du ikke å løse problemet raskt, kan du automatisk generere en annen transaksjon som varsler anmoder transaksjonen ikke forekomme i distribusjonsdatabasen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The requestor can then make a compensating transaction that reverses the effect of a transaction that has already committed.</source>
          <target state="translated">Personen som sendte forespørselen kan gjøre en kompenserende transaksjon som reverserer effekten av en transaksjon som allerede er utført.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</source>
          <target state="translated">Informerer klientsiden unntaksbehandling komponenten at alle Message Queuing forsøk på å levere meldingen til serveren ble avvist, og meldingen havnet på klientsiden Xact blindkøen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>As messages arrive in the Xact Dead Letter queue, COM+ attempts to invoke a client-side exception handler related to the server class to deliver this notification.</source>
          <target state="translated">Når meldinger som ankommer i Xact blindkøen, forsøker COM + å starte en klientsiden unntak behandlingsprogrammet som er relatert til server klassen for å levere denne meldingen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does so by first calling FinalClientRetry, then calling the exception-handling version of the failed method in the exception-handler object.</source>
          <target state="translated">Dette gjøres ved første kall til FinalClientRetry og kaller unntaksbehandling versjonen av metoden mislyktes i unntak behandlingsprogrammet-objektet.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</source>
          <target state="translated">Denne metoden for unntaket kan da et unntak, for eksempel registrere feilen, sender en e-postmelding til systemansvarlig eller tar klientsiden kompenseringshandling (tilbakeføring effekten av en tidligere transaksjon).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the exception method is not successful, the message is left on the Xact Dead Letter queue.</source>
          <target state="translated">Hvis metoden unntak ikke lykkes, værende meldingen på Xact blindkøen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Xact Dead Letter queue can be viewed in the Microsoft Message Queue (MSMQ) Explorer.</source>
          <target state="translated">Xact blindkøen kan vises i Microsoft Message Queue (MSMQ) Explorer.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</source>
          <target state="translated">Informerer serversiden unntak klassen implementeringen at alle forsøk på å spille av utsatt aktiveringen til serveren mislyktes, og meldingen til å flytte til den endelige vannrett kø.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>As messages arrive on the Xact Dead Letter queue, COM+ attempts to invoke a server-side exception handler related to the server class to deliver this notification.</source>
          <target state="translated">Når meldinger mottas på Xact blindkøen, forsøker COM + å starte et behandlingsprogram for serverside unntak relatert til server klassen for å levere denne meldingen.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does so by first calling FinalServerRetry, then calling the exception handling version of the failed method in the exception handler object.</source>
          <target state="translated">Dette gjøres ved først å kalle FinalServerRetry og kaller unntaksbehandling versjon av metoden mislyktes i unntak behandlingsprogrammet objektet.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</source>
          <target state="translated">Denne metoden for unntaket kan da et unntak, for eksempel registrere feilen, sender en e-postmelding til systemansvarlig eller tar klientsiden kompenseringshandling (tilbakeføring effekten av en tidligere transaksjon).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The server object should make every effort to complete this transaction successfully.</source>
          <target state="translated">Serverobjektet må du kontrollere god fullført denne transaksjonen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, manual intervention is required to reprocess the message.</source>
          <target state="translated">Ellers for manuell inngripen å behandle meldingen på nytt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the exception method is not successful, the message is moved to the final resting queue.</source>
          <target state="translated">Hvis metoden unntak ikke lykkes, flyttes meldingen til den endelige vannrett køen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>