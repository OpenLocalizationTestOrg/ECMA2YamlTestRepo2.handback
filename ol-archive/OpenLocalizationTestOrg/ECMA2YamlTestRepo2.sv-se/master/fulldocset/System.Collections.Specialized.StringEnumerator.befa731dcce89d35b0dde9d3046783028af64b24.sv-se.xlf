<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c77c7c3e5516eaa1e8bf6511db9fab9f7b68189c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Specialized.StringEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb9f31e4e70b1811890d70e2c2bb276c6e97d5bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">438fa99f93782ab283df53c0001e4819aa7c9eb3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports a simple iteration over a <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Stöder en enkel iteration via en <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Den <ph id="ph1">`foreach`</ph> satsen i C#-språk (<ph id="ph2">`for each`</ph> i Visual Basic) döljer komplexiteten i uppräknare.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Därför använder <ph id="ph1">`foreach`</ph> rekommenderas, i stället för direkt manipulering uppräknaren.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inledningsvis har uppräknaren placerats före det första elementet i mängden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;medför också uppräknaren tillbaka till den här positionen.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, calling &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">AT detta position, anropar &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;genererar ett undantag.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.</source>
          <target state="translated">Därför måste du anropa &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;att avancera uppräknaren till det första elementet i mängden innan du läser värdet för &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;returnerar samma objekt förrän antingen &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;eller &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;kallas.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;Anger &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;till nästa element.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Om &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;passerar slutet på mängden uppräknaren är placerad efter det sista elementet i mängden och &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;returnerar <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">När uppräknaren är på denna position efterföljande anrop till &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;också returnera <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">Om senast anropet till &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;returnerade <ph id="ph1">`false`</ph>, anropa &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;genererar ett undantag.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">Ange &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;att det första elementet i mängden igen, kan du anropa &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;följt av &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">En uppräknare är giltig så länge samlingen förblir oförändrad.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren inaktuella blir och nästa anropa eller &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;genererar &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;, &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Om samlingen har ändrats mellan &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;och &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;, &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en trådsäker procedur.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the current element in the collection.</source>
          <target state="translated">Hämtar det aktuella elementet i mängden.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of Current; otherwise, Current is undefined.</source>
          <target state="translated">När du har skapat en uppräknare eller efter en &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;anropas, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;måste anropas för att gå vidare uppräknaren till det första elementet i mängden innan du läser värdet på Current; annars är odefinierad.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current also throws an exception if the last call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">Aktuella också genererar ett undantag om senast anropet till &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;returnerade <ph id="ph1">`false`</ph>, vilket anger slutet av samlingen.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current does not move the position of the enumerator, and consecutive calls to Current return the same object until either &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">Aktuella inte flytta positionen för uppräknaren och efterföljande anrop till aktuella returnera samma objekt förrän antingen &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;eller &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;kallas.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">En uppräknare är giltig så länge samlingen förblir oförändrad.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren inaktuella blir och nästa anropa eller &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;genererar &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Om samlingen har ändrats mellan &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;och &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The current element in the collection.</source>
          <target state="translated">Det aktuella elementet i mängden.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">Uppräknaren har placerats före det första elementet i mängden eller efter det sista elementet.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Avancerar uppräknaren till nästa element i samlingen.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called, an enumerator is positioned before the first element of the collection, and the first call to MoveNext moves the enumerator over the first element of the collection.</source>
          <target state="translated">När du har skapat en uppräknare eller efter en &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;är kallas, en Uppräknaren står före det första elementet i mängden och det första anropet till MoveNext flyttar uppräknaren över det första elementet i mängden.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Om MoveNext passerar slutet av samlingen uppräknaren efter det sista elementet i mängden och MoveNext returnerar <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to MoveNext also return <ph id="ph1">`false`</ph> until &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">När uppräknaren är på denna position, efterföljande anrop till MoveNext också returnera <ph id="ph1">`false`</ph> tills &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;kallas.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">En uppräknare är giltig så länge samlingen förblir oförändrad.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren inaktuella blir och nästa anropa eller &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;genererar &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Om samlingen har ändrats mellan &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;och &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om uppräknaren har avancerade till nästa element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> om uppräknaren har passerat slutet av samlingen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Samlingen har ändrats efter att uppräknaren skapades.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Anger uppräknaren till sin ursprungliga position är före det första elementet i mängden.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reset moves the enumerator to the beginning of the collection, before the first element.</source>
          <target state="translated">Återställ flyttar uppräknaren till början av samlingen innan det första elementet.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>After Reset, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.</source>
          <target state="translated">Efter återställningen &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;måste anropas för att gå vidare till det första elementet i mängden innan du läser värdet för &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; uppräknaren&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Samlingen har ändrats efter att uppräknaren skapades.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>