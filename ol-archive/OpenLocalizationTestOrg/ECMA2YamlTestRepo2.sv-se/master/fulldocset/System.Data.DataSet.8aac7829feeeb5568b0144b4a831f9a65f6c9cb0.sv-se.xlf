<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">705003c6f689a2b4d0080db9ca21f5c5de2802c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.DataSet.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74010e0949011039899655bb1f89853766d73f76</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a3d97bb9d963824c560aaa35301932b8da2af76</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an in-memory cache of data.</source>
          <target state="translated">Representerar en minnescache av data.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DataSet, which is an in-memory cache of data retrieved from a data source, is a major component of the ADO.NET architecture.</source>
          <target state="translated">DataSet som är en minnescache för data som hämtats från en datakälla, är en viktig del i ADO.NET-arkitektur.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DataSet consists of a collection of &lt;xref:System.Data.DataTable&gt; objects that you can relate to each other with &lt;xref:System.Data.DataRelation&gt; objects.</source>
          <target state="translated">DataSet består av en samling &lt;xref:System.Data.DataTable&gt;objekt som du kan relatera till varandra med &lt;xref:System.Data.DataRelation&gt;objekt.&lt;/xref:System.Data.DataRelation&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also enforce data integrity in the DataSet by using the &lt;xref:System.Data.UniqueConstraint&gt; and &lt;xref:System.Data.ForeignKeyConstraint&gt; objects.</source>
          <target state="translated">Du kan även tillämpa dataintegriteten i datauppsättningen med den &lt;xref:System.Data.UniqueConstraint&gt;och &lt;xref:System.Data.ForeignKeyConstraint&gt;objekt.&lt;/xref:System.Data.ForeignKeyConstraint&gt; &lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For further details about working with DataSet objects, see <bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Mer information om hur du arbetar med DataSet-objekt finns i <bpt id="p1">[</bpt>datauppsättningar och DataTables DataViews<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whereas &lt;xref:System.Data.DataTable&gt; objects contain the data, the &lt;xref:System.Data.DataRelationCollection&gt; allows you to navigate though the table hierarchy.</source>
          <target state="translated">Medan &lt;xref:System.Data.DataTable&gt;objekt som innehåller data den &lt;xref:System.Data.DataRelationCollection&gt;gör att du kan navigera på tabell-hierarkin.&lt;/xref:System.Data.DataRelationCollection&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tables are contained in a &lt;xref:System.Data.DataTableCollection&gt; accessed through the &lt;xref:System.Data.DataSet.Tables%2A&gt; property.</source>
          <target state="translated">Tabellerna finns i en &lt;xref:System.Data.DataTableCollection&gt;nås via de &lt;xref:System.Data.DataSet.Tables%2A&gt;egenskap.&lt;/xref:System.Data.DataSet.Tables%2A&gt; &lt;/xref:System.Data.DataTableCollection&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When accessing &lt;xref:System.Data.DataTable&gt; objects, note that they are conditionally case sensitive.</source>
          <target state="translated">Vid åtkomst till &lt;xref:System.Data.DataTable&gt;objekt, Observera att de är villkorligt skiftlägeskänsliga.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if one &lt;xref:System.Data.DataTable&gt; is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</source>
          <target state="translated">Om exempelvis en &lt;xref:System.Data.DataTable&gt;heter "mydatatable" och en annan heter "Mydatatable", en sträng som används för att söka efter en av tabellerna betraktas som skiftlägeskänsligt.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</source>
          <target state="translated">Men om finns i "mydatatable" och "Mydatatable" inte, betraktas söksträngen som skiftlägesokänsligt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about working with &lt;xref:System.Data.DataTable&gt; objects, see <bpt id="p1">[</bpt>Creating a DataTable<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Mer information om hur du arbetar med &lt;xref:System.Data.DataTable&gt;objekt, se <bpt id="p1">[</bpt>skapar en DataTable<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A DataSet can read and write data and schema as XML documents.</source>
          <target state="translated">En DataSet kan läsa och skriva data och schema som XML-dokument.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data and schema can then be transported across HTTP and used by any application, on any platform that is XML-enabled.</source>
          <target state="translated">Data och schema kan sedan transporteras över HTTP och används av alla program på alla plattformar som är XML-aktiverad.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can save the schema as an XML schema with the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method, and both schema and data can be saved using the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">Du kan spara schemat som ett XML-schema med den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden och både schema- och data kan sparas med hjälp av den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXml%2A&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read an XML document that includes both schema and data, use the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method.</source>
          <target state="translated">Läs ett XML-dokument som innehåller både schema- och data genom att använda den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden.&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a typical multiple-tier implementation, the steps for creating and refreshing a DataSet, and in turn, updating the original data are to:      1.</source>
          <target state="translated">I en typisk flera nivåer implementering stegen för att skapa och uppdatera en datauppsättning och sedan uppdatera den ursprungliga data är att: 1.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Build and fill each &lt;xref:System.Data.DataTable&gt; in a DataSet with data from a data source using a &lt;xref:System.Data.Common.DataAdapter&gt;.</source>
          <target state="translated">Skapa och fylla varje &lt;xref:System.Data.DataTable&gt;i en datamängd med data från en datakälla med hjälp av en &lt;xref:System.Data.Common.DataAdapter&gt;.&lt;/xref:System.Data.Common.DataAdapter&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Change the data in individual &lt;xref:System.Data.DataTable&gt; objects by adding, updating, or deleting &lt;xref:System.Data.DataRow&gt; objects.</source>
          <target state="translated">Ändra data i enskilda &lt;xref:System.Data.DataTable&gt;objekt genom att lägga till, uppdatera eller ta bort &lt;xref:System.Data.DataRow&gt;objekt.&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method to create a second DataSet that features only the changes to the data.</source>
          <target state="translated">Anropa den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden för att skapa en andra datamängd som innehåller endast ändringar av data.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; method of the &lt;xref:System.Data.Common.DataAdapter&gt;, passing the second DataSet as an argument.</source>
          <target state="translated">Anropa den &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;metod för den &lt;xref:System.Data.Common.DataAdapter&gt;, skickar andra datamängden som ett argument.&lt;/xref:System.Data.Common.DataAdapter&gt; &lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke the &lt;xref:System.Data.DataSet.Merge%2A&gt; method to merge the changes from the second DataSet into the first.</source>
          <target state="translated">Anropa den &lt;xref:System.Data.DataSet.Merge%2A&gt;metod för att slå samman ändringar från andra datamängd i först.&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke the &lt;xref:System.Data.DataSet.AcceptChanges%2A&gt; on the DataSet.</source>
          <target state="translated">Anropa den &lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;för datamängden.&lt;/xref:System.Data.DataSet.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, invoke &lt;xref:System.Data.DataSet.RejectChanges%2A&gt; to cancel the changes.</source>
          <target state="translated">Du kan också anropa &lt;xref:System.Data.DataSet.RejectChanges%2A&gt;att avbryta ändringarna.&lt;/xref:System.Data.DataSet.RejectChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The DataSet and &lt;xref:System.Data.DataTable&gt; objects inherit from &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;, and support the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface for remoting.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; I datauppsättningen och &lt;xref:System.Data.DataTable&gt;objekt ärver från &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;, och stöd för den &lt;xref:System.Runtime.Serialization.ISerializable&gt;gränssnitt för fjärrkommunikation.&lt;/xref:System.Runtime.Serialization.ISerializable&gt; &lt;/xref:System.ComponentModel.MarshalByValueComponent&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are the only ADO.NET objects that can be remoted.</source>
          <target state="translated">Dessa är de enda ADO.NET-objekt som kan fjärrstyras.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Classes inherited from DataSet are not finalized by the garbage collector, because the finalizer has been suppressed in DataSet.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Klasser som ärvts från DataSet slutförs inte av skräpinsamlingen, eftersom slutföraren har inaktiverats i DataSet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The derived class can call the &lt;xref:System.GC.ReRegisterForFinalize%2A&gt; method in its constructor to allow the class to be finalized by the garbage collector.</source>
          <target state="translated">Den härledda klassen kan anropa den &lt;xref:System.GC.ReRegisterForFinalize%2A&gt;metoden i sin konstruktor så att klassen som ska slutföras av skräpinsamlingen.&lt;/xref:System.GC.ReRegisterForFinalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klass.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the &lt;xref:System.Data.DataSet&gt; constructor takes no parameters, and creates a default name, "NewDataSet," for the new instance.</source>
          <target state="translated">Den här implementeringen av den &lt;xref:System.Data.DataSet&gt;konstruktorn tar inga parametrar och skapar ett standardnamn, "NewDataSet" för den nya instansen.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>A name for the &lt;xref:System.Data.DataSet&gt; is required to ensure that the XML representation of the &lt;xref:System.Data.DataSet&gt; always has a name for the document element, which is the highest-level element in a schema definition.</source>
          <target state="translated">Ett namn för den &lt;xref:System.Data.DataSet&gt;krävs för att kontrollera att XML-representation av den &lt;xref:System.Data.DataSet&gt;alltid har ett namn för dokumentelementet, vilket är det högsta nivån elementet i schemadefinition.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the given name.</source>
          <target state="translated">Initierar en ny instans av en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klass med det angivna namnet.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>A name for the &lt;xref:System.Data.DataSet&gt; is required to ensure that the XML representation of the &lt;xref:System.Data.DataSet&gt; always has a name for the document element, which is the highest level element in a schema definition.</source>
          <target state="translated">Ett namn för den &lt;xref:System.Data.DataSet&gt;krävs för att kontrollera att XML-representation av den &lt;xref:System.Data.DataSet&gt;alltid har ett namn för dokumentelementet, vilket är det högsta nivån elementet i schemadefinition.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Namnet på den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that has the given serialization information and context.</source>
          <target state="translated">Initierar en ny instans av en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klass som har den angivna serialiseringsinformation och på snabbmenyn.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The data needed to serialize or deserialize an object.</source>
          <target state="translated">De data som behövs för att serialisera eller deserialisering av objekt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The source and destination of a given serialized stream.</source>
          <target state="translated">Källa och mål för en given serialiserad dataström.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klass.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object.</source>
          <target state="translated">Den &lt;xref:System.Runtime.Serialization.StreamingContext&gt;objekt.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The boolean value.</source>
          <target state="translated">Booleskt värde.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Commits all the changes made to this <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> since it was loaded or since the last time AcceptChanges was called.</source>
          <target state="translated">Genomför alla ändringar som gjorts till den här <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> sedan den lästes in eller sedan du senast AcceptChanges anropades.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the &lt;xref:System.Data.DataRow&gt; and &lt;xref:System.Data.DataTable&gt; classes have AcceptChanges methods.</source>
          <target state="translated">Både den &lt;xref:System.Data.DataRow&gt;och &lt;xref:System.Data.DataTable&gt;klasser har AcceptChanges metoder.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; at the &lt;xref:System.Data.DataTable&gt; level causes the &lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; method for each &lt;xref:System.Data.DataRow&gt; to be called.</source>
          <target state="translated">Anropar &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;på den &lt;xref:System.Data.DataTable&gt;nivå orsaker i &lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;metod för varje &lt;xref:System.Data.DataRow&gt;anropas.&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, invoking AcceptChanges on the &lt;xref:System.Data.DataSet&gt; causes &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; to be called on each table within the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">På liknande sätt, anropar AcceptChanges på &lt;xref:System.Data.DataSet&gt;förlorar &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;anropas för varje tabell i &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable.AcceptChanges%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this manner, you have multiple levels at which the method can be invoked.</source>
          <target state="translated">På så sätt kan ha du flera nivåer som metoden anropas.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the AcceptChanges of the &lt;xref:System.Data.DataSet&gt; enables you to invoke the method on all subordinate objects (for example, tables and rows) with one call.</source>
          <target state="translated">Anropar AcceptChanges av den &lt;xref:System.Data.DataSet&gt;kan du anropa metoden på alla underordnade objekt (till exempel tabeller och rader) med ett anrop.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">`AcceptChanges`</ph> on the <ph id="ph2">`DataSet`</ph>, any &lt;xref:System.Data.DataRow&gt; objects still in edit-mode end their edits successfully.</source>
          <target state="translated">När du anropar <ph id="ph1">`AcceptChanges`</ph> på den <ph id="ph2">`DataSet`</ph>, eventuella &lt;xref:System.Data.DataRow&gt;objekt i redigeringsläge avsluta sina ändringar har.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataRow.RowState%2A&gt; property of each &lt;xref:System.Data.DataRow&gt; also changes; <ph id="ph1">`Added`</ph> and <ph id="ph2">`Modified`</ph> rows become <ph id="ph3">`Unchanged`</ph>, and <ph id="ph4">`Deleted`</ph> rows are removed.</source>
          <target state="translated">Egenskapen &lt;xref:System.Data.DataRow.RowState%2A&gt;i varje &lt;xref:System.Data.DataRow&gt;ändras även; <ph id="ph1">`Added`</ph> och <ph id="ph2">`Modified`</ph> rader blir <ph id="ph3">`Unchanged`</ph>, och <ph id="ph4">`Deleted`</ph> rader tas bort.&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataRow.RowState%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`DataSet`</ph> contains &lt;xref:System.Data.ForeignKeyConstraint&gt; objects, invoking the <ph id="ph2">`AcceptChanges`</ph> method also causes the &lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt; to be enforced.</source>
          <target state="translated">Om den <ph id="ph1">`DataSet`</ph> innehåller &lt;xref:System.Data.ForeignKeyConstraint&gt;objekt, anropar den <ph id="ph2">`AcceptChanges`</ph> metoden även gör den &lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt;som ska framtvingas.&lt;/xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt; &lt;/xref:System.Data.ForeignKeyConstraint&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`AcceptChanges`</ph> and <ph id="ph4">`RejectChanges`</ph> only apply to <ph id="ph5">`DataRow`</ph> related changes (that is, Add, Remove, Delete, and Modify).</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> <ph id="ph2"> &gt;  </ph> <ph id="ph3">`AcceptChanges`</ph> och <ph id="ph4">`RejectChanges`</ph> gäller endast för <ph id="ph5">`DataRow`</ph> relaterade ändringar (dvs, Lägg till, ta bort, ta bort och ändra).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">De gäller inte schemat eller strukturella förändringar.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;    &gt;  Calling AcceptChanges will not replicate these changes back to the data source if the DataSet was filled using a DataAdapter.</source>
          <target state="translated">&gt;&gt; Anropar AcceptChanges replikeras inte ändringarna tillbaka till datakällan om datauppsättningen fylldes med hjälp av en DataAdapter.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that situation, call &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; instead.</source>
          <target state="translated">I så fall kan anropa &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;i stället.&lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept> for more information.</source>
          <target state="translated">Se <bpt id="p1">[</bpt>uppdatering datakällor med DataAdapters<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept> för mer information.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Begins the initialization of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or used by another component.</source>
          <target state="translated">Börjar initieringen av en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som används i ett formulär eller används av en annan komponent.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">Initieringen av inträffar vid körning.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio .NET-miljön för arbetsflödesdesign använder den här metoden för att starta initieringen av en komponent som används i ett formulär eller används av en annan komponent.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.EndInit%2A&gt; method ends the initialization.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.EndInit%2A&gt;metoden slutar initieringen.&lt;/xref:System.Data.DataSet.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the BeginInit and &lt;xref:System.Data.DataSet.EndInit%2A&gt; methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Med BeginInit och &lt;xref:System.Data.DataSet.EndInit%2A&gt;metoder som förhindrar att kontrollen används innan den har initierats.&lt;/xref:System.Data.DataSet.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether string comparisons within <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects are case-sensitive.</source>
          <target state="translated">Hämtar eller anger ett värde som anger om string jämförelser inom <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekt är skiftlägeskänsliga.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CaseSensitive property affects how sorting, searching, and filtering operations are performed on each &lt;xref:System.Data.DataTable&gt; object contained in a &lt;xref:System.Data.DataSet&gt; when using the &lt;xref:System.Data.DataTable.Select%2A&gt; method.</source>
          <target state="translated">Egenskapen CaseSensitive påverkar hur sortering, sökning och filtrering åtgärder utförs på varje &lt;xref:System.Data.DataTable&gt;objekt som finns i en &lt;xref:System.Data.DataSet&gt;när du använder den &lt;xref:System.Data.DataTable.Select%2A&gt;metoden.&lt;/xref:System.Data.DataTable.Select%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, setting the CaseSensitive property for a &lt;xref:System.Data.DataSet&gt; also sets the &lt;xref:System.Data.DataTable.CaseSensitive%2A&gt; property of each associated &lt;xref:System.Data.DataTable&gt; to the same value.</source>
          <target state="translated">Som standard ange egenskapen CaseSensitive för en &lt;xref:System.Data.DataSet&gt;anger också de &lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;-egenskapen för var och en associerad &lt;xref:System.Data.DataTable&gt;till samma värde.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.CaseSensitive%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if string comparisons are case-sensitive; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om strängjämförelser är skiftlägeskänsliga; Annars <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standardvärdet är <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Clears the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of any data by removing all rows in all tables.</source>
          <target state="translated">Tar bort den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> data genom att ta bort alla rader i alla tabeller.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.DataSet&gt; is bound to an &lt;xref:System.Xml.XmlDataDocument&gt;, calling Clear or &lt;xref:System.Data.DataTable.Clear%2A?displayProperty=fullName&gt; raises the &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">Om den &lt;xref:System.Data.DataSet&gt;är bunden till ett &lt;xref:System.Xml.XmlDataDocument&gt;anropar rensa eller &lt;xref:System.Data.DataTable.Clear%2A?displayProperty=fullName&gt;genererar &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Data.DataTable.Clear%2A?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlDataDocument&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this situation, traverse each table, removing each row one at a time.</source>
          <target state="translated">Om du vill undvika detta kan bläddra i varje tabell, ta bort varje rad en i taget.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Copies the structure of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, including all <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> schemas, relations, and constraints.</source>
          <target state="translated">Kopierar strukturen för de <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, inklusive alla <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> scheman, relationer och begränsningar.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Does not copy any data.</source>
          <target state="translated">Kopierar inte några data.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same schema as the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, but none of the data.</source>
          <target state="translated">En ny <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med samma schemat som aktuellt <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, men inga data.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Copies both the structure and data for this <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Kopierar både struktur och data för den här <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same structure (table schemas, relations, and constraints) and data as this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En ny <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med samma struktur (tabellscheman, relationer och begränsningar) och data som detta <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If these classes have been subclassed, the copy will also be of the same subclasses.</source>
          <target state="translated">Om du har fått en underklass till dessa klasser, vara kopian också av samma underklasser.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with one result set per <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, in the same sequence as the tables appear in the &lt;xref:System.Data.DataSet.Tables*&gt; collection.</source>
          <target state="translated">Returnerar en <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med en resultatmängd <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>i samma sekvens som tabellerna visas i den &lt;xref:System.Data.DataSet.Tables*&gt;samling.&lt;/xref:System.Data.DataSet.Tables*&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to ensure the order of the result sets within the returned &lt;xref:System.Data.DataTableReader&gt;, if a &lt;xref:System.Data.DataTable&gt; within the &lt;xref:System.Data.DataSet&gt; is empty, it is represented by an empty result set within the returned <ph id="ph1">`DataTableReader`</ph>.</source>
          <target state="translated">För att säkerställa att ordningen för resultatuppsättningar i den returnerade &lt;xref:System.Data.DataTableReader&gt;, om en &lt;xref:System.Data.DataTable&gt;inom den &lt;xref:System.Data.DataSet&gt;är tomt, representeras av en tom resultatuppsättning i den returnerade <ph id="ph1">`DataTableReader`</ph>.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTableReader&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing one or more result sets, corresponding to the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances contained within the source <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som innehåller en eller flera resultatmängder, motsvarar den <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> instanser som ingår i källan <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with one result set per <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Returnerar en <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med en resultatmängd <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to ensure that the order of the result sets within the returned &lt;xref:System.Data.DataTableReader&gt;, if a &lt;xref:System.Data.DataTable&gt; within the &lt;xref:System.Data.DataSet&gt; is empty, it is represented by an empty result set within the returned <ph id="ph1">`DataTableReader`</ph>.</source>
          <target state="translated">För att säkerställa att ordningen för resultatet anger i den returnerade &lt;xref:System.Data.DataTableReader&gt;, om en &lt;xref:System.Data.DataTable&gt;inom den &lt;xref:System.Data.DataSet&gt;är tomt, representeras av en tom resultatuppsättning i den returnerade <ph id="ph1">`DataTableReader`</ph>.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTableReader&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this overloaded version allows you to supply a list of <ph id="ph1">`DataTable`</ph> instances as parameters, you can specify the order in which the result sets appear within the returned <ph id="ph2">`DataTableReader`</ph>.</source>
          <target state="translated">Eftersom den här överbelastad versionen kan du ange en lista över <ph id="ph1">`DataTable`</ph> instanser som parametrar som du kan ange i vilken ordning som resultatuppsättningar visas i den returnerade <ph id="ph2">`DataTableReader`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An array of DataTables providing the order of the result sets to be returned in the <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En matris med DataTables tillhandahåller ordningen för resultatet anger för att returneras i den <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing one or more result sets, corresponding to the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances contained within the source <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som innehåller en eller flera resultatmängder, motsvarar den <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> instanser som ingår i källan <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The returned result sets are in the order specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataTables</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">Returnerade resultatmängder finns i den ordning som anges av den <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">dataTables</ph> <ept id="p1">&lt;/code&gt;</ept> parameter.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the current <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar eller anger namnet på aktuellt <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Namnet på den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets a custom view of the data contained in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to allow filtering, searching, and navigating using a custom <bpt id="p2">&lt;xref href="System.Data.DataViewManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar en anpassad vy av data i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> att filtrera, söka och navigera med hjälp av en anpassad <bpt id="p2">&lt;xref href="System.Data.DataViewManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataViewManager&gt; returned by the DefaultViewManager property allows you to create custom settings for each &lt;xref:System.Data.DataTable&gt; in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataViewManager&gt;Returnerades av DefaultViewManager egenskap kan du skapa anpassade inställningar för varje &lt;xref:System.Data.DataTable&gt;i &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataViewManager&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you obtain a &lt;xref:System.Data.DataView&gt; from a &lt;xref:System.Data.DataTable&gt;, the sort order, filtering, and &lt;xref:System.Data.DataViewRowState&gt; are configured according to the settings in the DefaultViewManager property.</source>
          <target state="translated">När du har fått en &lt;xref:System.Data.DataView&gt;från en &lt;xref:System.Data.DataTable&gt;, sorteringsordning, filtrering, och &lt;xref:System.Data.DataViewRowState&gt;är konfigurerade enligt inställningarna i egenskapen DefaultViewManager.&lt;/xref:System.Data.DataViewRowState&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataView&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataViewManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataViewManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Determines the &lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt; for a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Anger den &lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt;för en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.DataSet.SchemaSerializationMode*&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called when deserializing a typed &lt;xref:System.Data.DataSet&gt; to determine its &lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.</source>
          <target state="translated">Den här metoden kan anropas vid deserialisering av ett skrivna &lt;xref:System.Data.DataSet&gt;att fastställa dess &lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.&lt;/xref:System.Data.DataSet.SchemaSerializationMode%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; instance that is passed during deserialization of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Den &lt;xref:System.Xml.XmlReader&gt;-instans som har överförts under deserialisering av den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> uppräkning som anger om schemainformation har utelämnats från nyttolasten.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Determines the &lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt; for a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Anger den &lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt;för en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.DataSet.SchemaSerializationMode*&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called when deserializing a typed &lt;xref:System.Data.DataSet&gt; to determine its &lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.</source>
          <target state="translated">Den här metoden kan anropas vid deserialisering av ett skrivna &lt;xref:System.Data.DataSet&gt;att fastställa dess &lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.&lt;/xref:System.Data.DataSet.SchemaSerializationMode%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that a <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>’s protected constructor <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som en <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>är skyddad konstruktor <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph> anropas med under deserialisering i fjärrkommunikation scenarier.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that a <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>’s protected constructor <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated">Den &lt;xref:System.Runtime.Serialization.StreamingContext&gt;som en <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>är skyddad konstruktor <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph> anropas med under deserialisering i scenarier för fjärrkommunikation.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> uppräkning som anger om schemainformation har utelämnats från nyttolasten.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Ends the initialization of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or used by another component.</source>
          <target state="translated">Slutar initieringen av en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som används i ett formulär eller används av en annan komponent.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">Initieringen av inträffar vid körning.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio .NET-miljön för arbetsflödesdesign använder den här metoden för att avsluta initieringen av en komponent som används i ett formulär eller används av en annan komponent.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.BeginInit%2A&gt; method starts the initialization.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.BeginInit%2A&gt;metoden startar initieringen.&lt;/xref:System.Data.DataSet.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the &lt;xref:System.Data.DataSet.BeginInit%2A&gt; and EndInit methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Med hjälp av den &lt;xref:System.Data.DataSet.BeginInit%2A&gt;och EndInit metoder som förhindrar att kontrollen används innan den har initierats.&lt;/xref:System.Data.DataSet.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.</source>
          <target state="translated">Hämtar eller anger ett värde som anger om begränsningsregler följs vid försök update-åtgärden.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Constraints are set at the &lt;xref:System.Data.DataTable&gt; level (&lt;xref:System.Data.DataTable.Constraints%2A&gt; property).</source>
          <target state="translated">Begränsningar är inställda på den &lt;xref:System.Data.DataTable&gt;nivå (&lt;xref:System.Data.DataTable.Constraints%2A&gt; egenskap).&lt;/xref:System.Data.DataTable.Constraints%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about creating constraints, see <bpt id="p1">[</bpt>DataTable Constraints<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Mer information om hur du skapar begränsningar finns <bpt id="p1">[</bpt>DataTable begränsningar<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if rules are enforced; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om-regler tillämpas; Annars <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standardvärdet är <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>One or more constraints cannot be enforced.</source>
          <target state="translated">Ett eller flera villkor kan tillämpas.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets the collection of customized user information associated with the <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar mängden anpassad information som associeras med den <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ExtendedProperties property enables you to store custom information with the <ph id="ph1">`DataSet`</ph>.</source>
          <target state="translated">Egenskapen ExtendedProperties kan du lagra anpassad information med den <ph id="ph1">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might store a time when the data should be refreshed.</source>
          <target state="translated">Du kan till exempel lagra en tid när data ska uppdateras.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Extended properties must be of type &lt;xref:System.String&gt; if you want them persisted when the &lt;xref:System.Data.DataSet&gt; is written as XML.</source>
          <target state="translated">Utökade egenskaper måste vara av typen &lt;xref:System.String&gt;Om du vill att de beständiga när den &lt;xref:System.Data.DataSet&gt;skrivs som XML.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.PropertyCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with all custom user information.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.PropertyCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med alla anpassade användarinformation.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets a copy of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains all changes made to it since it was loaded or since &lt;xref:System.Data.DataSet.AcceptChanges*&gt; was last called.</source>
          <target state="translated">Hämtar en kopia av den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som innehåller alla ändringar som gjorts sedan den lästes in eller sedan &lt;xref:System.Data.DataSet.AcceptChanges*&gt;senast anropades.&lt;/xref:System.Data.DataSet.AcceptChanges*&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new &lt;xref:System.Data.DataSet&gt; that contains a copy of all rows in the original &lt;xref:System.Data.DataSet&gt; that have pending changes.</source>
          <target state="translated">Skapar en ny &lt;xref:System.Data.DataSet&gt;som innehåller en kopia av alla rader i ursprungligt &lt;xref:System.Data.DataSet&gt;som har väntande ändringar.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Relationship constraints can cause additional unchanged rows to be added to the new &lt;xref:System.Data.DataSet&gt; if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</source>
          <target state="translated">Relationen begränsningar kan orsaka ytterligare oförändrat rader som ska läggas till den nya &lt;xref:System.Data.DataSet&gt;om oförändrade rader innehåller primära nycklar som motsvarande sekundärnycklar i ändrade rader.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method returns <ph id="ph1">`null`</ph> if there are no rows in the original &lt;xref:System.Data.DataSet&gt; that have pending changes.</source>
          <target state="translated">Metoden returnerar <ph id="ph1">`null`</ph> om det inte finns några rader i ursprungligt &lt;xref:System.Data.DataSet&gt;som har väntande ändringar.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A copy of the changes from this <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can have actions performed on it and later be merged back in using &lt;xref:System.Data.DataSet.Merge*&gt;.</source>
          <target state="translated">En kopia av ändringarna från den här <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som kan ha åtgärder som utförs på den och senare sammanfogas igen med hjälp av &lt;xref:System.Data.DataSet.Merge*&gt;.&lt;/xref:System.Data.DataSet.Merge*&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If no changed rows are found, the method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Om några ändrade rader hittas, metoden returnerar <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets a copy of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing all changes made to it since it was last loaded, or since &lt;xref:System.Data.DataSet.AcceptChanges*&gt; was called, filtered by <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar en kopia av den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som innehåller alla ändringar som gjorts sedan den lästes senast eller sedan &lt;xref:System.Data.DataSet.AcceptChanges*&gt;var kallas, filtreras efter <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.DataSet.AcceptChanges*&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is used to produce a second &lt;xref:System.Data.DataSet&gt; object that contains only the changes introduced into the original.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden används för att skapa en andra &lt;xref:System.Data.DataSet&gt;objekt som innehåller endast ändringarna som introduceras i ursprungligt.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`rowStates`</ph> argument to specify the type of changes the new object should include.</source>
          <target state="translated">Använd den <ph id="ph1">`rowStates`</ph> argumentet att ange vilken typ av ändringar som ska innehålla det nya objektet.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This returned copy is designed to be merged back in to this original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Det returnerade kopia är utformat för att slås samman i tillbaka till den här ursprungliga &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Relationship constraints may cause parent rows marked <ph id="ph1">`Unchanged`</ph> to be included.</source>
          <target state="translated">Relationen begränsningar kan orsaka överordnade raderna markeras <ph id="ph1">`Unchanged`</ph> som ska inkluderas.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no rows of the desired &lt;xref:System.Data.DataRowState&gt; are found, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Om någon rad med den önskade &lt;xref:System.Data.DataRowState&gt;hittas, den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden returnerar <ph id="ph1">`null`</ph>.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt; &lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A filtered copy of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can have actions performed on it, and subsequently be merged back in using &lt;xref:System.Data.DataSet.Merge*&gt;.</source>
          <target state="translated">En filtrerad kopia av den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som kan ha åtgärder som utförs på den och därefter sammanfogas igen med hjälp av &lt;xref:System.Data.DataSet.Merge*&gt;.&lt;/xref:System.Data.DataSet.Merge*&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If no rows of the desired <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> are found, the method returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Om någon rad med den önskade <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> hittas metoden returnerar <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets a copy of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the DataSet.</source>
          <target state="translated">Hämtar en kopia av <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> för datauppsättningen.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The specified schema set.</source>
          <target state="translated">Ange det angivna schemat.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A copy of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A copy of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Populates a serialization information object with the data needed to serialize the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Fylls informationsobjekt för serialisering med de data som behövs för att serialisera den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the serialized data associated with the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som innehåller serialiserade data som är associerade med den <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En &lt;xref:System.Runtime.Serialization.StreamingContext&gt;som innehåller källan och målet för den serialiserade dataströmmen som är associerade med den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Returns a serializable &lt;xref:System.Xml.Schema.XMLSchema&gt; instance.</source>
          <target state="translated">Returnerar en serialiserbar &lt;xref:System.Xml.Schema.XMLSchema&gt;instans.&lt;/xref:System.Xml.Schema.XMLSchema&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XMLSchema&gt; instance.</source>
          <target state="translated">Den &lt;xref:System.Xml.Schema.XMLSchema&gt;instans.&lt;/xref:System.Xml.Schema.XMLSchema&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Deserializes the table data from the binary or XML stream.</source>
          <target state="translated">Deserializes tabelldata från binary eller XML-dataström.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> instans.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The streaming context.</source>
          <target state="translated">Direktuppspelningskontexten.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Returnerar XML-representation av data som lagras i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is identical to calling &lt;xref:System.Data.DataSet.WriteXml%2A&gt; with &lt;xref:System.Data.XmlWriteMode&gt; set to &lt;xref:System.Data.XmlWriteMode&gt;.</source>
          <target state="translated">Den här metoden anropas är identisk med att anropa &lt;xref:System.Data.DataSet.WriteXml%2A&gt;med &lt;xref:System.Data.XmlWriteMode&gt;värdet &lt;xref:System.Data.XmlWriteMode&gt;.&lt;/xref:System.Data.XmlWriteMode&gt; &lt;/xref:System.Data.XmlWriteMode&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetXml returns XML as a string, and therefore requires more overhead than &lt;xref:System.Data.DataSet.WriteXml%2A&gt; to write XML to a file.</source>
          <target state="translated">GetXml returnerar XML som en sträng och därför kräver mer arbete än &lt;xref:System.Data.DataSet.WriteXml%2A&gt;att skriva XML till en fil.&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you build a &lt;xref:System.Data.DataSet&gt; using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">Om du skapar en &lt;xref:System.Data.DataSet&gt;med schemahärledning och serialisera den med hjälp av XML-eller webbtjänster, kolumnordning ändras.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A string that is a representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">En sträng som är en representation av data som lagras i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Returns the XML Schema for the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Returnerar det XML-schemat för XML-representation av data som lagras i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is identical to calling &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;, except that only the primary schema is written.</source>
          <target state="translated">Den här metoden anropas är identisk med anropar &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;, förutom att endast primära schemat skrivs.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetXmlSchema returns XML as a string, and therefore requires more overhead than &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; to write XML to a file.</source>
          <target state="translated">GetXmlSchema returnerar XML som en sträng och därför kräver mer arbete än &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;att skriva XML till en fil.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you build a &lt;xref:System.Data.DataSet&gt; using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">Om du skapar en &lt;xref:System.Data.DataSet&gt;med schemahärledning och serialisera den med hjälp av XML-eller webbtjänster, kolumnordning ändras.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>String that is the XML Schema for the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Sträng som är XML-schemat för XML-representation av data som lagras i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has changes, including new, deleted, or modified rows.</source>
          <target state="translated">Hämtar ett värde som anger om den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> har ändringar, inklusive nya, borttagna eller ändrade rader.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has changes; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om den <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ändringar har, annars <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has changes, including new, deleted, or modified rows, filtered by <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar ett värde som anger om den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> har ändringar, inklusive nya, borttagna eller ändrade rader, filtreras efter <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examine the &lt;xref:System.Data.DataSet.HasChanges%2A&gt; property of the <ph id="ph1">`DataSet`</ph> before invoking the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method.</source>
          <target state="translated">Granska den &lt;xref:System.Data.DataSet.HasChanges%2A&gt;egenskapen för den <ph id="ph1">`DataSet`</ph> innan du anropar den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt; &lt;/xref:System.Data.DataSet.HasChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has changes; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om den <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ändringar har, annars <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether there are errors in any of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects within this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar ett värde som anger om det finns fel i någon av de <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekt inom detta <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each &lt;xref:System.Data.DataTable&gt; in a &lt;xref:System.Data.DataSet&gt; also has a &lt;xref:System.Data.DataTable.HasErrors%2A&gt; property.</source>
          <target state="translated">Varje &lt;xref:System.Data.DataTable&gt;i en &lt;xref:System.Data.DataSet&gt;har också en &lt;xref:System.Data.DataTable.HasErrors%2A&gt;egenskap.&lt;/xref:System.Data.DataTable.HasErrors%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`HasErrors`</ph> property of the <ph id="ph2">`DataSet`</ph> first, to determine if any table has errors, before checking individual &lt;xref:System.Data.DataTable&gt; objects.</source>
          <target state="translated">Använd den <ph id="ph1">`HasErrors`</ph> -egenskapen för den <ph id="ph2">`DataSet`</ph> först att avgöra om någon tabell som har fel, innan enskilda &lt;xref:System.Data.DataTable&gt;objekt.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">`DataTable`</ph> has errors, the &lt;xref:System.Data.DataTable.GetErrors%2A&gt; method returns an array of &lt;xref:System.Data.DataRow&gt; objects containing the errors.</source>
          <target state="translated">Om en <ph id="ph1">`DataTable`</ph> har fel, den &lt;xref:System.Data.DataTable.GetErrors%2A&gt;metoden returnerar en matris med &lt;xref:System.Data.DataRow&gt;objekt som innehåller fel.&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable.GetErrors%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if any table contains an error;otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om någon tabell som innehåller ett fel; annars <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified &lt;xref:System.IO.Stream&gt; to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Tillämpar XML-schemat från det angivna &lt;xref:System.IO.Stream&gt;till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som du vill läsa schemat.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">En strängmatris namnområde identifierare URI (Uniform Resource) som ska undantas från schemahärledning.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified &lt;xref:System.IO.TextReader&gt; to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Tillämpar XML-schemat från det angivna &lt;xref:System.IO.TextReader&gt;till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som du vill läsa schemat.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">En strängmatris namnområde identifierare URI (Uniform Resource) som ska undantas från schemahärledning.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified file to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Tillämpar XML-schemat från den angivna filen för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The name of the file (including the path) from which to read the schema.</source>
          <target state="translated">Namnet på filen (inklusive sökväg) som du vill läsa schemat.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">En strängmatris namnområde identifierare URI (Uniform Resource) som ska undantas från schemahärledning.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>är inte inställd på <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified &lt;xref:System.Xml.XmlReader&gt; to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Tillämpar XML-schemat från det angivna &lt;xref:System.Xml.XmlReader&gt;till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XMLReader" name="XMLReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_XMLReader" name="XMLReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som du vill läsa schemat.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">En strängmatris namnområde identifierare URI (Uniform Resource) som ska undantas från schemahärledning.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Occurs after the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">Inträffar efter den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> har initierats.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Data.DataSet.IsInitialized%2A&gt;.</source>
          <target state="translated">Mer information finns i &lt;xref:System.Data.DataSet.IsInitialized%2A&gt;.&lt;/xref:System.Data.DataSet.IsInitialized%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Som ska läggas till.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Deserialize all of the tables data of the DataSet from the binary or XML stream.</source>
          <target state="translated">Deserialisera alla tabeller data på en datamängd från binary eller XML-dataström.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Inspects the format of the serialized representation of the <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Kontrollerar om format för serialiserade representation av den <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Den här medlemmen stöder .NET Framework-infrastrukturen och är inte avsedd att användas direkt från din kod.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekt.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object.</source>
          <target state="translated">Den &lt;xref:System.Runtime.Serialization.StreamingContext&gt;objekt.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> serialized in its binary format, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> otherwise.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om den angivna <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> representerar en <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> serialiseras i dess binärformat <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> annars.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">Hämtar ett värde som anger om den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> har initierats.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns the status of the &lt;xref:System.Data.DataSet&gt; while it’s being constructed, for instance by Visual Studio.</source>
          <target state="translated">Returnera statusen för den &lt;xref:System.Data.DataSet&gt;medan det skapas för instansen av Visual Studio.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.BeginInit%2A&gt; method sets it to <ph id="ph1">`false`</ph> and &lt;xref:System.Data.DataSet.EndInit%2A&gt; method sets it to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.BeginInit%2A&gt;metoden anger det <ph id="ph1">`false`</ph> och &lt;xref:System.Data.DataSet.EndInit%2A&gt;metoden anger det <ph id="ph2">`true`</ph>.&lt;/xref:System.Data.DataSet.EndInit%2A&gt; &lt;/xref:System.Data.DataSet.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate the component has completed initialization; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>att ange komponenten har slutfört initiering; Annars <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using an array of <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> instances to supply the schema and namespace information.</source>
          <target state="translated">Fyller en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med värden från en datakälla med hjälp av den angivna <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, med hjälp av en matris med <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> instanser som du vill ange information för schemat och namnområde.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.Load%2A&gt; method provides a technique for filling a single &lt;xref:System.Data.DataTable&gt; with data, retrieved from an &lt;xref:System.Data.IDataReader&gt; instance.</source>
          <target state="translated">Den &lt;xref:System.Data.DataTable.Load%2A&gt;metoden är en teknik för att fylla i en enda &lt;xref:System.Data.DataTable&gt;med data som hämtats från en &lt;xref:System.Data.IDataReader&gt;instans.&lt;/xref:System.Data.IDataReader&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an &lt;xref:System.Data.IDataReader&gt; into multiple tables within a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här metoden fungerar på samma sätt, men du kan läsa in flera resultatmängder från en &lt;xref:System.Data.IDataReader&gt;till flera tabeller i en &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.IDataReader&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The load operation will fail with an &lt;xref:System.InvalidOperationException&gt; if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Åtgärden load misslyckas med ett &lt;xref:System.InvalidOperationException&gt;om något av källkolumner för data i inkommande <ph id="ph2">`reader`</ph> är beräknade kolumner.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the &lt;xref:System.Data.LoadOption&gt; enumeration.</source>
          <target state="translated">Den <ph id="ph1">`loadOption`</ph> parametern kan du ange hur du vill att importerade data ska interagera med befintliga data och kan vara något av värdena från den &lt;xref:System.Data.LoadOption&gt;uppräkningen.&lt;/xref:System.Data.LoadOption&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the documentation for the &lt;xref:System.Data.DataTable&gt;&lt;xref:System.Data.DataTable.Load%2A&gt; method for more information on using this parameter.</source>
          <target state="translated">Finns i dokumentationen för &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataTable.Load%2A&gt;metod för mer information om hur du använder den här parametern.&lt;/xref:System.Data.DataTable.Load%2A&gt;&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of &lt;xref:System.Data.DataTable&gt; instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated">Den <ph id="ph1">`tables`</ph> parametern kan du ange en matris med &lt;xref:System.Data.DataTable&gt;instanser, som anger ordningen på de tabeller som motsvarar varje resultatmängd läsas in från läsaren.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Loadmethod fills each supplied &lt;xref:System.Data.DataTable&gt; instance with data from a single result set from the source data reader.</source>
          <target state="translated">Den Loadmethod fyller varje angivna &lt;xref:System.Data.DataTable&gt;instans med data från en enda resultatmängd från källan dataläsare.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>After each result set, the Loadmethod moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">När varje resultatuppsättningen flyttar i Loadmethod till nästa resultat som anges i läsaren, tills det inte finns några fler resultatmängder.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name resolution scheme for this method is the same as that followed by the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method of the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">Name resolution schemat för den här metoden är samma som följt av- &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;metoden i &lt;xref:System.Data.Common.DbDataAdapter&gt;klassen.&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som innehåller en eller flera resultatmängder.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances within the <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">Ett värde från den <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> uppräkning som anger hur rader redan i den <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> instanser inom den <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> kombineras med inkommande rader som delar samma primärnyckel.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances, from which the Load method retrieves name and namespace information.</source>
          <target state="translated">En matris med <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> instanser där metoden Load hämtar information om namn och namnområde.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Each of these tables must be a member of the <bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contained by this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De här tabellerna måste vara medlem i den <bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> finns i <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using an array of strings to supply the names for the tables within the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Fyller en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med värden från en datakälla med hjälp av den angivna <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, med hjälp av en matris med strängar ange namnen för tabellerna i den <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.Load%2A&gt; method provides a technique for filling a single &lt;xref:System.Data.DataTable&gt; with data, retrieved from an &lt;xref:System.Data.IDataReader&gt; instance.</source>
          <target state="translated">Den &lt;xref:System.Data.DataTable.Load%2A&gt;metoden är en teknik för att fylla i en enda &lt;xref:System.Data.DataTable&gt;med data som hämtats från en &lt;xref:System.Data.IDataReader&gt;instans.&lt;/xref:System.Data.IDataReader&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">`IDataReader`</ph> into multiple tables within a <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">Den här metoden fungerar på samma sätt, men kan du läsa in flera resultatmängder från en <ph id="ph1">`IDataReader`</ph> till flera tabeller i en <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The load operation will fail with an &lt;xref:System.InvalidOperationException&gt; if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Åtgärden load misslyckas med ett &lt;xref:System.InvalidOperationException&gt;om något av källkolumner för data i inkommande <ph id="ph2">`reader`</ph> är beräknade kolumner.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the &lt;xref:System.Data.LoadOption&gt; enumeration.</source>
          <target state="translated">Den <ph id="ph1">`loadOption`</ph> parametern kan du ange hur du vill att importerade data ska interagera med befintliga data och kan vara något av värdena från den &lt;xref:System.Data.LoadOption&gt;uppräkningen.&lt;/xref:System.Data.LoadOption&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the documentation for the &lt;xref:System.Data.DataTable.Load%2A&gt; method for more information on using this parameter.</source>
          <target state="translated">Finns i dokumentationen för den &lt;xref:System.Data.DataTable.Load%2A&gt;metod för mer information om hur du använder den här parametern.&lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of table names, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated">Den <ph id="ph1">`tables`</ph> parametern kan du ange en matris med tabellnamn som anger ordningen på de tabeller som motsvarar varje resultatmängd läsas in från läsaren.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Load`</ph> method attempts to find a table within the <ph id="ph2">`DataSet`</ph> matching the name found in the array of table names, in order.</source>
          <target state="translated">Den <ph id="ph1">`Load`</ph> metoden försöker hitta en tabell i den <ph id="ph2">`DataSet`</ph> matchar namnet hittades i matrisen med tabellnamn i ordning.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a matching table is found, that table is loaded with the content of the current result set.</source>
          <target state="translated">Om en matchande tabell hittas läses tabellen med innehållet i den aktuella resultatmängden.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no matching table is found, a table is created using the name supplied in the array of table names, and the new table's schema is inferred from the result set.</source>
          <target state="translated">Om ingen matchande tabell hittas, skapas en tabell med hjälp av namnet i matrisen med tabellnamn och schemat för den nya tabellen härledas från resultatmängden.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>After each result set, the <ph id="ph1">`Load`</ph> method moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">Efter varje resultatmängd den <ph id="ph1">`Load`</ph> metoden flyttar till nästa resultat som anges i läsaren, tills det inte finns några fler resultatmängder.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default namespace associated with <ph id="ph1">`DataSet`</ph>, if any, is associated with each newly created <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">Standardnamnområde som är associerade med <ph id="ph1">`DataSet`</ph>, om någon, som är associerad med varje nyskapad <ph id="ph2">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name resolution scheme for this method is the same as that followed by the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method of the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">Name resolution schemat för den här metoden är samma som följt av- &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;metoden i &lt;xref:System.Data.Common.DbDataAdapter&gt;klassen.&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som innehåller en eller flera resultatmängder.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances within the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">Ett värde från den <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> uppräkning som anger hur rader redan i den <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> instanser inom den <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> kombineras med inkommande rader som delar samma primärnyckel.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>An array of strings, from which the <bpt id="p1">&lt;xref uid="langword_csharp_Load" name="Load" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method retrieves table name information.</source>
          <target state="translated">En matris med strängar som den <bpt id="p1">&lt;xref uid="langword_csharp_Load" name="Load" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> metoden hämtar tabellinformation som namn.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using an array of <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> instances to supply the schema and namespace information.</source>
          <target state="translated">Fyller en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med värden från en datakälla med hjälp av den angivna <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, med hjälp av en matris med <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> instanser som du vill ange information för schemat och namnområde.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataTable.Load%2A&gt; method provides a technique for filling a single &lt;xref:System.Data.DataTable&gt; with data, retrieved from an &lt;xref:System.Data.IDataReader&gt; instance.</source>
          <target state="translated">Den &lt;xref:System.Data.DataTable.Load%2A&gt;metoden är en teknik för att fylla i en enda &lt;xref:System.Data.DataTable&gt;med data som hämtats från en &lt;xref:System.Data.IDataReader&gt;instans.&lt;/xref:System.Data.IDataReader&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an &lt;xref:System.Data.IDataReader&gt; into multiple tables within a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här metoden fungerar på samma sätt, men du kan läsa in flera resultatmängder från en &lt;xref:System.Data.IDataReader&gt;till flera tabeller i en &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.IDataReader&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The load operation will fail with an &lt;xref:System.InvalidOperationException&gt; if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Åtgärden load misslyckas med ett &lt;xref:System.InvalidOperationException&gt;om något av källkolumner för data i inkommande <ph id="ph2">`reader`</ph> är beräknade kolumner.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the &lt;xref:System.Data.LoadOption&gt; enumeration.</source>
          <target state="translated">Den <ph id="ph1">`loadOption`</ph> parametern kan du ange hur du vill att importerade data ska interagera med befintliga data och kan vara något av värdena från den &lt;xref:System.Data.LoadOption&gt;uppräkningen.&lt;/xref:System.Data.LoadOption&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the documentation for the &lt;xref:System.Data.DataTable&gt;&lt;xref:System.Data.DataTable.Load%2A&gt; method for more information on using this parameter.</source>
          <target state="translated">Finns i dokumentationen för &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataTable.Load%2A&gt;metod för mer information om hur du använder den här parametern.&lt;/xref:System.Data.DataTable.Load%2A&gt;&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`errorHandler`</ph> parameter is a &lt;xref:System.Data.FillErrorEventHandler&gt; delegate that refers to a procedure that is called when an error occurs while loading data.</source>
          <target state="translated">Den <ph id="ph1">`errorHandler`</ph> parametern är en &lt;xref:System.Data.FillErrorEventHandler&gt;delegat som refererar till en procedur som anropas när det uppstår ett fel vid inläsning av data.&lt;/xref:System.Data.FillErrorEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.FillErrorEventArgs&gt; parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the &lt;xref:System.Data.DataTable&gt; being filled.</source>
          <target state="translated">Den &lt;xref:System.Data.FillErrorEventArgs&gt;parameter som överförs till proceduren ger egenskaper som gör att du kan hämta information om felet som uppstod, den aktuella raden i data, och &lt;xref:System.Data.DataTable&gt;som ska fyllas.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.FillErrorEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</source>
          <target state="translated">Med den här delegaten mekanismen i stället för ett enklare försök/catch-block kan du bestämma felet ska du hantera situationen och fortsätta att bearbeta om du vill.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.FillErrorEventArgs&gt; parameter supplies a &lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt; property: set this property to <ph id="ph1">`true`</ph> to indicate that you have handled the error and wish to continue processing; set the property to <ph id="ph2">`false`</ph> to indicate that you wish to halt processing.</source>
          <target state="translated">Den &lt;xref:System.Data.FillErrorEventArgs&gt;parametern anger en &lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;egenskap: den här egenskapen <ph id="ph1">`true`</ph> att indikera att du har hanteras fel och om du vill fortsätta bearbetningen; för egenskapen <ph id="ph2">`false`</ph> att indikera att du vill stoppa bearbetningen.&lt;/xref:System.Data.FillErrorEventArgs.Continue%2A&gt; &lt;/xref:System.Data.FillErrorEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be aware that setting the property to <ph id="ph1">`false`</ph> causes the code that triggered the problem to throw an exception.</source>
          <target state="translated">Tänk på att egenskapen <ph id="ph1">`false`</ph> orsakar den kod som utlöses problem för att utlösa ett undantag.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of &lt;xref:System.Data.DataTable&gt; instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated">Den <ph id="ph1">`tables`</ph> parametern kan du ange en matris med &lt;xref:System.Data.DataTable&gt;instanser, som anger ordningen på de tabeller som motsvarar varje resultatmängd läsas in från läsaren.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Loadmethod fills each supplied &lt;xref:System.Data.DataTable&gt; instance with data from a single result set from the source data reader.</source>
          <target state="translated">Den Loadmethod fyller varje angivna &lt;xref:System.Data.DataTable&gt;instans med data från en enda resultatmängd från källan dataläsare.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>After each result set, the Loadmethod moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">När varje resultatuppsättningen flyttar i Loadmethod till nästa resultat som anges i läsaren, tills det inte finns några fler resultatmängder.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name resolution scheme for this method is the same as that followed by the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method of the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">Name resolution schemat för den här metoden är samma som följt av- &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;metoden i &lt;xref:System.Data.Common.DbDataAdapter&gt;klassen.&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som innehåller en eller flera resultatmängder.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances within the <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">Ett värde från den <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> uppräkning som anger hur rader redan i den <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> instanser inom den <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> kombineras med inkommande rader som delar samma primärnyckel.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.FillErrorEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate to call when an error occurs while loading data.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.FillErrorEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ombud att anropa när ett fel uppstår när data läses in.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances, from which the Load method retrieves name and namespace information.</source>
          <target state="translated">En matris med <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> instanser där metoden Load hämtar information om namn och namnområde.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Gets or sets the locale information used to compare strings within the table.</source>
          <target state="translated">Hämtar eller Anger språkinformationen som används för att jämföra strängar i tabellen.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Locale property specifies the locale for which sorting applies.</source>
          <target state="translated">Egenskapen Locale anger språkinställningen för vilka sortering gäller.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, setting the Locale for a &lt;xref:System.Data.DataSet&gt; also sets the Locale for each &lt;xref:System.Data.DataTable&gt; object in that <ph id="ph1">`DataSet`</ph> to the same value.</source>
          <target state="translated">Som standard Ange språk för en &lt;xref:System.Data.DataSet&gt;anger också de nationella inställningarna för varje &lt;xref:System.Data.DataTable&gt;objekt i som <ph id="ph1">`DataSet`</ph> till samma värde.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In columns that contain expressions, the &lt;xref:System.StringComparison&gt; is used.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; I kolumner som innehåller uttryck, den &lt;xref:System.StringComparison&gt;används.&lt;/xref:System.StringComparison&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.StringComparison&gt; is ignored.</source>
          <target state="translated">Den &lt;xref:System.StringComparison&gt;ignoreras.&lt;/xref:System.StringComparison&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; that contains data about the user's machine locale.</source>
          <target state="translated">En &lt;xref:System.Globalization.CultureInfo&gt;som innehåller information om datorn Användarplats.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Standardvärdet är <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Merges an array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects into the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Sammanfogar en matris med <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekt till aktuellt <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden används för att sammanfoga två &lt;xref:System.Data.DataSet&gt;objekt som har i stort sett liknande scheman.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">En koppling används vanligtvis på ett klientprogram för att få de senaste ändringarna från en datakälla till en befintlig &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">Detta gör att klientprogrammet har en uppdateras &lt;xref:System.Data.DataSet&gt;med senaste data från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;Metoden anropas vanligtvis i slutet av en serie av procedurer som inbegriper verifierar ändringar, stämma av fel, Uppdatera datakällan med ändringarna, och slutligen uppdaterar befintliga &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">I ett klientprogram är det vanligt att ha en knapp som användaren kan klicka på som ändrade data ska samlas in och validerar den innan den skickas tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden anropas först.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">Att metoden returnerar en andra &lt;xref:System.Data.DataSet&gt;optimerade för verifiering och sammanslagning.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här andra &lt;xref:System.Data.DataSet&gt;objektet innehåller endast &lt;xref:System.Data.DataTable&gt;och &lt;xref:System.Data.DataRow&gt;objekt som har ändrats, vilket resulterar i en delmängd av ursprungligt &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Den här delmängden vanligtvis skickas mindre och därmed mer effektivt tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Komponenten mellannivå uppdaterar sedan den ursprungliga datakällan med ändringarna via lagrade procedurer.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Mellannivån kan sedan skicka tillbaka antingen en ny &lt;xref:System.Data.DataSet&gt;som innehåller ursprungliga data och den senaste informationen från datakällan (genom att köra den ursprungliga frågan igen), eller skicka tillbaka delmängden med eventuella ändringar som har gjorts till den från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">(Till exempel om datakällan skapas automatiskt unika primärnyckelvärden, dessa värden kan spridas till klientprogrammet.) I båda fallen den returnerade &lt;xref:System.Data.DataSet&gt;kan infogas i client-program ursprungliga &lt;xref:System.Data.DataSet&gt;med den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden.&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">När den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden anropas, scheman för två &lt;xref:System.Data.DataSet&gt;objekt jämförs eftersom det är möjligt att scheman kan ha ändrats.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Till exempel i ett scenario med business-to-business kan nya kolumner har lagts till ett XML-schema genom en automatisk process.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Om källan &lt;xref:System.Data.DataSet&gt;innehåller schemaelement (lägga till &lt;xref:System.Data.DataColumn&gt;objekt) som saknas i målet, schema-element kan läggas till målet genom att ange den <ph id="ph1">`missingSchemaAction`</ph> argument för <ph id="ph2">`MissingSchemaAction.Add`</ph>.&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">I så fall den sammanfogade &lt;xref:System.Data.DataSet&gt;innehåller extra schema och data.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Efter att slå samman scheman kopplas data.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Vid sammanfogning av en ny källa &lt;xref:System.Data.DataSet&gt;till mål, alla datakällor rader med en &lt;xref:System.Data.DataRowState&gt;värdet för <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, eller <ph id="ph3">`Deleted`</ph> matchas till målet rader med samma primärnyckelvärden.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Datakällan rader med en &lt;xref:System.Data.DataRowState&gt;värdet för <ph id="ph1">`Added`</ph> matchas mot den nya mål rader med samma primärnyckelvärden som nya källraderna.&lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Under en koppling har begränsningarna inaktiverats.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any constraints cannot be enabled at the end of a merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Om inga begränsningar inte kan aktiveras i slutet av en koppling en &lt;xref:System.Data.ConstraintException&gt;genereras och kopplade data sparas medan begränsningarna har inaktiverats.&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskap är inställd på <ph id="ph1">`false`</ph>, och alla rader som är ogiltiga har markerats med fel.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Felen måste åtgärdas innan du försöker återställa den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskapen <ph id="ph1">`true`</ph>.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The array of <bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects to be merged into the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Matris med <bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekt som ska kopplas till den <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Sammanfogar en angiven <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> och dess schema till aktuellt <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Merge method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">Merge-metoden används för att sammanfoga två &lt;xref:System.Data.DataSet&gt;objekt som har i stort sett liknande scheman.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">En koppling används vanligtvis på ett klientprogram för att få de senaste ändringarna från en datakälla till en befintlig &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">Detta gör att klientprogrammet har en uppdateras &lt;xref:System.Data.DataSet&gt;med senaste data från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Merge method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Merge-metoden anropas vanligtvis i slutet av en serie av procedurer som inbegriper verifierar ändringar, stämma av fel, Uppdatera datakällan med ändringarna och slutligen uppdaterar befintliga &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">I ett klientprogram är det vanligt att ha en knapp som användaren kan klicka på som ändrade data ska samlas in och validerar den innan den skickas tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden anropas först.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">Att metoden returnerar en andra &lt;xref:System.Data.DataSet&gt;optimerade för verifiering och sammanslagning.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här andra &lt;xref:System.Data.DataSet&gt;objektet innehåller endast &lt;xref:System.Data.DataTable&gt;och &lt;xref:System.Data.DataRow&gt;objekt som har ändrats, vilket resulterar i en delmängd av ursprungligt &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Den här delmängden är vanligtvis mindre och därmed mer skickas effektivt tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Komponenten mellannivå uppdaterar sedan den ursprungliga datakällan med ändringarna via lagrade procedurer.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Mellannivån kan sedan skicka tillbaka antingen en ny &lt;xref:System.Data.DataSet&gt;som innehåller ursprungliga data och den senaste informationen från datakällan (genom att köra den ursprungliga frågan igen), eller skicka tillbaka delmängden med eventuella ändringar som har gjorts till den från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the Merge method.</source>
          <target state="translated">(Till exempel om datakällan skapas automatiskt unika primärnyckelvärden, dessa värden kan spridas till klientprogrammet.) I båda fallen den returnerade &lt;xref:System.Data.DataSet&gt;kan infogas i client-program ursprungliga &lt;xref:System.Data.DataSet&gt;med metoden Merge.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the Merge method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">När Merge-metoden anropas, scheman för två &lt;xref:System.Data.DataSet&gt;objekt jämförs eftersom det är möjligt att scheman kan ha ändrats.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Till exempel i ett scenario med business-to-business kan nya kolumner har lagts till ett XML-schema genom en automatisk process.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Om källan &lt;xref:System.Data.DataSet&gt;innehåller schemaelement (lägga till &lt;xref:System.Data.DataColumn&gt;objekt) som saknas i målet, schema-element kan läggas till målet genom att ange den <ph id="ph1">`missingSchemaAction`</ph> argument för <ph id="ph2">`MissingSchemaAction.Add`</ph>.&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">I så fall den sammanfogade &lt;xref:System.Data.DataSet&gt;innehåller extra schema och data.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Efter att slå samman scheman kopplas data.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Vid sammanfogning av en ny källa &lt;xref:System.Data.DataSet&gt;till mål, alla datakällor rader med en &lt;xref:System.Data.DataRowState&gt;värdet för <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, eller <ph id="ph3">`Deleted`</ph> matchas till målet rader med samma primärnyckelvärden.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Datakällan rader med en <ph id="ph1">`DataRowState`</ph> värdet för <ph id="ph2">`Added`</ph> matchas mot den nya mål rader med samma primärnyckelvärden som nya källraderna.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Under en koppling har begränsningarna inaktiverats.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Om inga begränsningar inte kan aktiveras i slutet av dokument, en &lt;xref:System.Data.ConstraintException&gt;genereras och kopplade data sparas medan begränsningarna har inaktiverats.&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskap är inställd på <ph id="ph1">`false`</ph>, och alla rader som är ogiltiga har markerats med fel.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Felen måste åtgärdas innan du försöker återställa den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskapen <ph id="ph1">`true`</ph>.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vars data och schema sammanfogas.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>One or more constraints cannot be enabled.</source>
          <target state="translated">Ett eller flera villkor kan inte aktiveras.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Sammanfogar en angiven <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> och dess schema till aktuellt <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden används för att sammanfoga två &lt;xref:System.Data.DataSet&gt;objekt som har i stort sett liknande scheman.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">En koppling används vanligtvis på ett klientprogram för att få de senaste ändringarna från en datakälla till en befintlig &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">Detta gör att klientprogrammet har en uppdateras &lt;xref:System.Data.DataSet&gt;med senaste data från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;Metoden anropas vanligtvis i slutet av en serie av procedurer som inbegriper verifierar ändringar, stämma av fel, Uppdatera datakällan med ändringarna, och slutligen uppdaterar befintliga &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">I ett klientprogram är det vanligt att ha en knapp som användaren kan klicka på som ändrade data ska samlas in och validerar den innan den skickas tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden anropas först.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">Att metoden returnerar en andra &lt;xref:System.Data.DataSet&gt;optimerade för verifiering och sammanslagning.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här andra &lt;xref:System.Data.DataSet&gt;objektet innehåller endast &lt;xref:System.Data.DataTable&gt;och &lt;xref:System.Data.DataRow&gt;objekt som har ändrats, vilket resulterar i en delmängd av ursprungligt &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Den här delmängden är vanligtvis mindre och därmed mer skickas effektivt tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Komponenten mellannivå uppdaterar sedan den ursprungliga datakällan med ändringarna via lagrade procedurer.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Mellannivån kan sedan skicka tillbaka antingen en ny &lt;xref:System.Data.DataSet&gt;som innehåller ursprungliga data och den senaste informationen från datakällan (genom att köra den ursprungliga frågan igen), eller skicka tillbaka delmängden med eventuella ändringar som har gjorts till den från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">(Till exempel om datakällan skapas automatiskt unika primärnyckelvärden, dessa värden kan spridas till klientprogrammet.) I båda fallen den returnerade &lt;xref:System.Data.DataSet&gt;kan infogas i client-program ursprungliga &lt;xref:System.Data.DataSet&gt;med den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden.&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">När den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden anropas, scheman för två &lt;xref:System.Data.DataSet&gt;objekt jämförs eftersom det är möjligt att scheman kan ha ändrats.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Till exempel i ett scenario med business-to-business kan nya kolumner har lagts till ett XML-schema genom en automatisk process.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Om källan &lt;xref:System.Data.DataSet&gt;innehåller schemaelement (lägga till &lt;xref:System.Data.DataColumn&gt;objekt) som saknas i målet, schema-element kan läggas till målet genom att ange den <ph id="ph1">`missingSchemaAction`</ph> argument för <ph id="ph2">`MissingSchemaAction.Add`</ph>.&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">I så fall den sammanfogade &lt;xref:System.Data.DataSet&gt;innehåller extra schema och data.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Efter att slå samman scheman kopplas data.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Vid sammanfogning av en ny källa &lt;xref:System.Data.DataSet&gt;till mål, alla datakällor rader med en &lt;xref:System.Data.DataRowState&gt;värdet för <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, eller <ph id="ph3">`Deleted`</ph> matchas till målet rader med samma primärnyckelvärden.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Datakällan rader med en <ph id="ph1">`DataRowState`</ph> värdet för <ph id="ph2">`Added`</ph> matchas mot den nya mål rader med samma primärnyckelvärden som nya källraderna.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Under en koppling har begränsningarna inaktiverats.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Om inga begränsningar inte kan aktiveras i slutet av dokument, en &lt;xref:System.Data.ConstraintException&gt;genereras och kopplade data sparas medan begränsningarna har inaktiverats.&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskap är inställd på <ph id="ph1">`false`</ph>, och alla rader som är ogiltiga har markerats med fel.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Felen måste åtgärdas innan du försöker återställa den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskapen <ph id="ph1">`true`</ph>.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vars data och schema sammanfogas.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">table</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">table</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding any changes in this <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> according to the given argument.</source>
          <target state="translated">Sammanfogar en angiven <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> och dess schema till aktuellt <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, behåller eller ignorera eventuella ändringar i den här <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> enligt det angivna argumentet.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden används för att sammanfoga två &lt;xref:System.Data.DataSet&gt;objekt som har i stort sett liknande scheman.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">En koppling används vanligtvis på ett klientprogram för att få de senaste ändringarna från en datakälla till en befintlig &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">Detta gör att klientprogrammet har en uppdateras &lt;xref:System.Data.DataSet&gt;med senaste data från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;Metoden anropas vanligtvis i slutet av en serie av procedurer som inbegriper verifierar ändringar, stämma av fel, Uppdatera datakällan med ändringarna, och slutligen uppdaterar befintliga &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">I ett klientprogram är det vanligt att ha en knapp som användaren kan klicka på som ändrade data ska samlas in och validerar den innan den skickas tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden anropas först.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">Att metoden returnerar en andra &lt;xref:System.Data.DataSet&gt;optimerade för verifiering och sammanslagning.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här andra &lt;xref:System.Data.DataSet&gt;objektet innehåller endast &lt;xref:System.Data.DataTable&gt;och &lt;xref:System.Data.DataRow&gt;objekt som har ändrats, vilket resulterar i en delmängd av ursprungligt &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Den här delmängden är vanligtvis mindre och därmed mer skickas effektivt tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Komponenten mellannivå uppdaterar sedan den ursprungliga datakällan med ändringarna via lagrade procedurer.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Mellannivån kan sedan skicka tillbaka antingen en ny &lt;xref:System.Data.DataSet&gt;som innehåller ursprungliga data och den senaste informationen från datakällan (genom att köra den ursprungliga frågan igen), eller skicka tillbaka delmängden med eventuella ändringar som har gjorts till den från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">(Till exempel om datakällan skapas automatiskt unika primärnyckelvärden, dessa värden kan spridas till klientprogrammet.) I båda fallen den returnerade &lt;xref:System.Data.DataSet&gt;kan infogas i client-program ursprungliga &lt;xref:System.Data.DataSet&gt;med den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden.&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">När den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden anropas, scheman för två &lt;xref:System.Data.DataSet&gt;objekt jämförs eftersom det är möjligt att scheman kan ha ändrats.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Till exempel i ett scenario med business-to-business kan nya kolumner har lagts till ett XML-schema genom en automatisk process.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Om källan &lt;xref:System.Data.DataSet&gt;innehåller schemaelement (lägga till &lt;xref:System.Data.DataColumn&gt;objekt) som saknas i målet, schema-element kan läggas till målet genom att ange den <ph id="ph1">`missingSchemaAction`</ph> argument för <ph id="ph2">`MissingSchemaAction.Add`</ph>.&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">I så fall den sammanfogade &lt;xref:System.Data.DataSet&gt;innehåller extra schema och data.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Efter att slå samman scheman kopplas data.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Vid sammanfogning av en ny källa &lt;xref:System.Data.DataSet&gt;till mål, alla datakällor rader med en &lt;xref:System.Data.DataRowState&gt;värdet för <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, eller <ph id="ph3">`Deleted`</ph> matchas till målet rader med samma primärnyckelvärden.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Datakällan rader med en <ph id="ph1">`DataRowState`</ph> värdet för <ph id="ph2">`Added`</ph> matchas mot den nya mål rader med samma primärnyckelvärden som nya källraderna.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Under en koppling har begränsningarna inaktiverats.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Om inga begränsningar inte kan aktiveras i slutet av dokument, en &lt;xref:System.Data.ConstraintException&gt;genereras och kopplade data sparas medan begränsningarna har inaktiverats.&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskap är inställd på <ph id="ph1">`false`</ph>, och alla rader som är ogiltiga har markerats med fel.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Felen måste åtgärdas innan du försöker återställa den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskapen <ph id="ph1">`true`</ph>.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vars data och schema sammanfogas.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>att bevara ändringar i aktuellt <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, annars <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Merges an array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects into the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding changes in the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">Sammanfogar en matris med <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekt till aktuellt <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, behåller eller ignorera ändringar i den <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> och hantera ett inkompatibelt schema enligt de angivna argumenten.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden används för att sammanfoga två &lt;xref:System.Data.DataSet&gt;objekt som har i stort sett liknande scheman.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">En koppling används vanligtvis på ett klientprogram för att få de senaste ändringarna från en datakälla till en befintlig &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">Detta gör att klientprogrammet har en uppdateras &lt;xref:System.Data.DataSet&gt;med senaste data från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;Metoden anropas vanligtvis i slutet av en serie av procedurer som inbegriper verifierar ändringar, stämma av fel, Uppdatera datakällan med ändringarna, och slutligen uppdaterar befintliga &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">I ett klientprogram är det vanligt att ha en knapp som användaren kan klicka på som ändrade data ska samlas in och validerar den innan den skickas tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden anropas först.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">Att metoden returnerar en andra &lt;xref:System.Data.DataSet&gt;optimerade för verifiering och sammanslagning.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här andra &lt;xref:System.Data.DataSet&gt;objektet innehåller endast &lt;xref:System.Data.DataTable&gt;och &lt;xref:System.Data.DataRow&gt;objekt som har ändrats, vilket resulterar i en delmängd av ursprungligt &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Den här delmängden är vanligtvis mindre och därmed mer skickas effektivt tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Komponenten mellannivå uppdaterar sedan den ursprungliga datakällan med ändringarna via lagrade procedurer.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Mellannivån kan sedan skicka tillbaka antingen en ny &lt;xref:System.Data.DataSet&gt;som innehåller ursprungliga data och den senaste informationen från datakällan (genom att köra den ursprungliga frågan igen), eller skicka tillbaka delmängden med eventuella ändringar som har gjorts till den från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">(Till exempel om datakällan skapas automatiskt unika primärnyckelvärden, dessa värden kan spridas till klientprogrammet.) I båda fallen den returnerade &lt;xref:System.Data.DataSet&gt;kan infogas i client-program ursprungliga &lt;xref:System.Data.DataSet&gt;med den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden.&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>To facilitate explanation of the &lt;xref:System.Data.DataSet.Merge%2A&gt; method, we use "target" to signify the current &lt;xref:System.Data.DataSet&gt;, and "source" to name the second (parameter) &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Att underlätta förklaring av den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden vi använder "mål" för att ange aktuellt att &lt;xref:System.Data.DataSet&gt;, och "källa" för att namnge andra (parameter) &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target &lt;xref:System.Data.DataSet&gt; is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">Målet &lt;xref:System.Data.DataSet&gt;heter så eftersom det är det objekt som utförs av en åtgärd (merge).&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second &lt;xref:System.Data.DataSet&gt; is called a "source" because the information it contains does not change, but instead is merged into the current &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Andra &lt;xref:System.Data.DataSet&gt;kallas en "källa" eftersom information som den innehåller ändrar inte, utan i stället slås samman med aktuellt &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">När den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden anropas, scheman för två &lt;xref:System.Data.DataSet&gt;objekt jämförs eftersom det är möjligt att scheman kan ha ändrats.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Till exempel i ett scenario med business-to-business kan nya kolumner har lagts till ett XML-schema genom en automatisk process.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Om källan &lt;xref:System.Data.DataSet&gt;innehåller schemaelement (lägga till &lt;xref:System.Data.DataColumn&gt;objekt) som saknas i målet, schema-element kan läggas till målet genom att ange den <ph id="ph1">`missingSchemaAction`</ph> argument för <ph id="ph2">`MissingSchemaAction.Add`</ph>.&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">I så fall den sammanfogade &lt;xref:System.Data.DataSet&gt;innehåller extra schema och data.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Efter att slå samman scheman kopplas data.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Vid sammanfogning av en ny källa &lt;xref:System.Data.DataSet&gt;till mål, alla datakällor rader med en &lt;xref:System.Data.DataRowState&gt;värdet för <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, eller <ph id="ph3">`Deleted`</ph> matchas till målet rader med samma primärnyckelvärden.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Datakällan rader med en <ph id="ph1">`DataRowState`</ph> värdet för <ph id="ph2">`Added`</ph> matchas mot den nya mål rader med samma primärnyckelvärden som nya källraderna.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Under en koppling har begränsningarna inaktiverats.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Om inga begränsningar inte kan aktiveras i slutet av dokument, en &lt;xref:System.Data.ConstraintException&gt;genereras och kopplade data sparas medan begränsningarna har inaktiverats.&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskap är inställd på <ph id="ph1">`false`</ph>, och alla rader som är ogiltiga har markerats med fel.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Felen måste åtgärdas innan du försöker återställa den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskapen <ph id="ph1">`true`</ph>.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects to be merged into the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Matris med <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekt som ska kopplas till den <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>att bevara ändringar i den <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, annars <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema with the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding changes in the current <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">Sammanfogar en angiven <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> och dess schema med aktuellt <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, behåller eller ignorera ändringar i aktuellt <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> och hantera ett inkompatibelt schema enligt de angivna argumenten.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden används för att sammanfoga två &lt;xref:System.Data.DataSet&gt;objekt som har i stort sett liknande scheman.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">En koppling används vanligtvis på ett klientprogram för att få de senaste ändringarna från en datakälla till en befintlig &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">Detta gör att klientprogrammet har en uppdateras &lt;xref:System.Data.DataSet&gt;med senaste data från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;Metoden anropas vanligtvis i slutet av en serie av procedurer som inbegriper verifierar ändringar, stämma av fel, Uppdatera datakällan med ändringarna, och slutligen uppdaterar befintliga &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">I ett klientprogram är det vanligt att ha en knapp som användaren kan klicka på som ändrade data ska samlas in och validerar den innan den skickas tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden anropas först.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">Att metoden returnerar en andra &lt;xref:System.Data.DataSet&gt;optimerade för verifiering och sammanslagning.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här andra &lt;xref:System.Data.DataSet&gt;objektet innehåller endast &lt;xref:System.Data.DataTable&gt;och &lt;xref:System.Data.DataRow&gt;objekt som har ändrats, vilket resulterar i en delmängd av ursprungligt &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Den här delmängden är vanligtvis mindre och därmed mer skickas effektivt tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Komponenten mellannivå uppdaterar sedan den ursprungliga datakällan med ändringarna via lagrade procedurer.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Mellannivån kan sedan skicka tillbaka antingen en ny &lt;xref:System.Data.DataSet&gt;som innehåller ursprungliga data och den senaste informationen från datakällan (genom att köra den ursprungliga frågan igen), eller skicka tillbaka delmängden med eventuella ändringar som har gjorts till den från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">(Till exempel om datakällan skapas automatiskt unika primärnyckelvärden, dessa värden kan spridas till klientprogrammet.) I båda fallen den returnerade &lt;xref:System.Data.DataSet&gt;kan infogas i client-program ursprungliga &lt;xref:System.Data.DataSet&gt;med den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden.&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>To facilitate explanation of the &lt;xref:System.Data.DataSet.Merge%2A&gt; method, we use "target" to signify the current &lt;xref:System.Data.DataSet&gt;, and "source" to name the second (parameter) &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Att underlätta förklaring av den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden vi använder "mål" för att ange aktuellt att &lt;xref:System.Data.DataSet&gt;, och "källa" för att namnge andra (parameter) &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target &lt;xref:System.Data.DataSet&gt; is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">Målet &lt;xref:System.Data.DataSet&gt;heter så eftersom det är det objekt som utförs av en åtgärd (merge).&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second &lt;xref:System.Data.DataSet&gt; is called a "source" because the information it contains does not change, but instead is merged into the current &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Andra &lt;xref:System.Data.DataSet&gt;kallas en "källa" eftersom information som den innehåller ändrar inte, utan i stället slås samman med aktuellt &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">När den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden anropas, scheman för två &lt;xref:System.Data.DataSet&gt;objekt jämförs eftersom det är möjligt att scheman kan ha ändrats.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Till exempel i ett scenario med business-to-business kan nya kolumner har lagts till ett XML-schema genom en automatisk process.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Om källan &lt;xref:System.Data.DataSet&gt;innehåller schemaelement (lägga till &lt;xref:System.Data.DataColumn&gt;objekt) som saknas i målet, schema-element kan läggas till målet genom att ange den <ph id="ph1">`missingSchemaAction`</ph> argument för <ph id="ph2">`MissingSchemaAction.Add`</ph>.&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">I så fall den sammanfogade &lt;xref:System.Data.DataSet&gt;innehåller extra schema och data.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Efter att slå samman scheman kopplas data.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Vid sammanfogning av en ny källa &lt;xref:System.Data.DataSet&gt;till mål, alla datakällor rader med en &lt;xref:System.Data.DataRowState&gt;värdet för <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, eller <ph id="ph3">`Deleted`</ph> matchas till målet rader med samma primärnyckelvärden.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Datakällan rader med en <ph id="ph1">`DataRowState`</ph> värdet för <ph id="ph2">`Added`</ph> matchas mot den nya mål rader med samma primärnyckelvärden som nya källraderna.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Under en koppling har begränsningarna inaktiverats.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Om inga begränsningar inte kan aktiveras i slutet av dokument, en &lt;xref:System.Data.ConstraintException&gt;genereras och kopplade data sparas medan begränsningarna har inaktiverats.&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskap är inställd på <ph id="ph1">`false`</ph>, och alla rader som är ogiltiga har markerats med fel.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Felen måste åtgärdas innan du försöker återställa den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskapen <ph id="ph1">`true`</ph>.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vars data och schema sammanfogas.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>att bevara ändringar i aktuellt <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, annars <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding changes in the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">Sammanfogar en angiven <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> och dess schema till aktuellt <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, behåller eller ignorera ändringar i den <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> och hantera ett inkompatibelt schema enligt de angivna argumenten.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden används för att sammanfoga två &lt;xref:System.Data.DataSet&gt;objekt som har i stort sett liknande scheman.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">En koppling används vanligtvis på ett klientprogram för att få de senaste ändringarna från en datakälla till en befintlig &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">Detta gör att klientprogrammet har en uppdateras &lt;xref:System.Data.DataSet&gt;med senaste data från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;Metoden anropas vanligtvis i slutet av en serie av procedurer som inbegriper verifierar ändringar, stämma av fel, Uppdatera datakällan med ändringarna, och slutligen uppdaterar befintliga &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>iOn a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">Med ett klientprogram, är det vanligt att ha en knapp som användaren kan klicka på som ändrade data ska samlas in och validerar den innan den skickas tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.GetChanges%2A&gt;metoden anropas först.&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">Att metoden returnerar en andra &lt;xref:System.Data.DataSet&gt;optimerade för verifiering och sammanslagning.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här andra &lt;xref:System.Data.DataSet&gt;objektet innehåller endast &lt;xref:System.Data.DataTable&gt;och &lt;xref:System.Data.DataRow&gt;objekt som har ändrats, vilket resulterar i en delmängd av ursprungligt &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Den här delmängden är vanligtvis mindre och därmed mer skickas effektivt tillbaka till en komponent på mellannivå.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Komponenten mellannivå uppdaterar sedan den ursprungliga datakällan med ändringarna via lagrade procedurer.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Mellannivån kan sedan skicka tillbaka antingen en ny &lt;xref:System.Data.DataSet&gt;som innehåller ursprungliga data och den senaste informationen från datakällan (genom att köra den ursprungliga frågan igen), eller skicka tillbaka delmängden med eventuella ändringar som har gjorts till den från datakällan.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">(Till exempel om datakällan skapas automatiskt unika primärnyckelvärden, dessa värden kan spridas till klientprogrammet.) I båda fallen den returnerade &lt;xref:System.Data.DataSet&gt;kan infogas i client-program ursprungliga &lt;xref:System.Data.DataSet&gt;med den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden.&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">När den &lt;xref:System.Data.DataSet.Merge%2A&gt;metoden anropas, scheman för två &lt;xref:System.Data.DataSet&gt;objekt jämförs eftersom det är möjligt att scheman kan ha ändrats.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Till exempel i ett scenario med business-to-business kan nya kolumner har lagts till ett XML-schema genom en automatisk process.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Om källan &lt;xref:System.Data.DataSet&gt;innehåller schemaelement (lägga till &lt;xref:System.Data.DataColumn&gt;objekt) som saknas i målet, schema-element kan läggas till målet genom att ange den <ph id="ph1">`missingSchemaAction`</ph> argument för <ph id="ph2">`MissingSchemaAction.Add`</ph>.&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">I så fall den sammanfogade &lt;xref:System.Data.DataSet&gt;innehåller extra schema och data.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Efter att slå samman scheman kopplas data.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Vid sammanfogning av en ny källa &lt;xref:System.Data.DataSet&gt;till mål, alla datakällor rader med en &lt;xref:System.Data.DataRowState&gt;värdet för <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, eller <ph id="ph3">`Deleted`</ph> matchas till målet rader med samma primärnyckelvärden.&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Datakällan rader med en <ph id="ph1">`DataRowState`</ph> värdet för <ph id="ph2">`Added`</ph> matchas mot den nya mål rader med samma primärnyckelvärden som nya källraderna.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Under en koppling har begränsningarna inaktiverats.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Om inga begränsningar inte kan aktiveras i slutet av dokument, en &lt;xref:System.Data.ConstraintException&gt;genereras och kopplade data sparas medan begränsningarna har inaktiverats.&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">I det här fallet den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskap är inställd på <ph id="ph1">`false`</ph>, och alla rader som är ogiltiga har markerats med fel.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Felen måste åtgärdas innan du försöker återställa den &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;egenskapen <ph id="ph1">`true`</ph>.&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vars data och schema sammanfogas.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>att bevara ändringar i den <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, annars <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Occurs when a target and source <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> have the same primary key value, and &lt;xref:System.Data.DataSet.EnforceConstraints*&gt; is set to true.</source>
          <target state="translated">Inträffar när en mål- och <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> har det samma primärnyckelvärdet och &lt;xref:System.Data.DataSet.EnforceConstraints*&gt;har angetts till true.&lt;/xref:System.Data.DataSet.EnforceConstraints*&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Mer information om hur du hanterar händelser finns <bpt id="p1">[</bpt>NIB: förbrukar händelser<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Som ska läggas till.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar eller anger namnområdet för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Namespace property is used when reading and writing an XML document into the &lt;xref:System.Data.DataSet&gt; using the &lt;xref:System.Data.DataSet.ReadXml%2A&gt;, &lt;xref:System.Data.DataSet.WriteXml%2A&gt;, &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;, or &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods.</source>
          <target state="translated">Egenskapen Namespace används när läsning och skrivning av en XML-dokumentet i den &lt;xref:System.Data.DataSet&gt;med hjälp av den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;, &lt;xref:System.Data.DataSet.WriteXml%2A&gt;, &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;, eller &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoder.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>The namespace of an XML document is used to scope XML attributes and elements when read into a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Namnområdet för XML-dokument som används för att definiera omfattningen av XML-attribut och element när läsa till &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a &lt;xref:System.Data.DataSet&gt; contains a schema that was read from a document with the namespace "myCompany," and an attempt is made to read data only from a document with a different namespace, any data that does not correspond to the existing schema is ignored.</source>
          <target state="translated">Till exempel om en &lt;xref:System.Data.DataSet&gt;innehåller ett schema som lästes från ett dokument med namnområdet "mitt företag", och ett försök görs att läsa data från ett dokument med ett annat namnområde och alla data som inte motsvarar det befintliga schemat ignoreras.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The namespace of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Namnområdet för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The namespace already has data.</source>
          <target state="translated">Namnområdet har redan data.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Raises the OnPropertyChanging event.</source>
          <target state="translated">Aktiverar OnPropertyChanging-händelse.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Att en händelse utlöstes anropar händelsehanteraren via ett ombud.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">En översikt finns <bpt id="p1">[</bpt>NIB: att en händelse utlöstes<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt; that contains the event data.</source>
          <target state="translated">En &lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;som innehåller informationen om händelsen.&lt;/xref:System.ComponentModel.PropertyChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is removed from a <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Inträffar när en <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ta bort objektet från en <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should be overridden by subclasses to restrict tables being removed</source>
          <target state="translated">Den här metoden bör åsidosättas av underklasser att begränsa tabeller tas bort</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> being removed.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> tas bort.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is removed from a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Inträffar när en <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> tas bort från en <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by subclasses to restrict tables from being removed.</source>
          <target state="translated">Den här metoden kan åsidosättas av underklasser att begränsa tabeller tas bort.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> being removed.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> tas bort.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Gets or sets an XML prefix that aliases the namespace of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar eller anger en XML-prefix som alias namnområdet för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Prefix property is used throughout an XML document to identify elements which belong to the namespace of the &lt;xref:System.Data.DataSet&gt; object (as set by the &lt;xref:System.Data.DataSet.Namespace%2A&gt; property).</source>
          <target state="translated">Egenskapen Prefix används i ett XML-dokument för att identifiera element som tillhör namnområdet för den &lt;xref:System.Data.DataSet&gt;objekt (som anges av den &lt;xref:System.Data.DataSet.Namespace%2A&gt;egenskapen).&lt;/xref:System.Data.DataSet.Namespace%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The XML prefix for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> namespace.</source>
          <target state="translated">XML-prefix för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> namnområde.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Sends a notification that the specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property is about to change.</source>
          <target state="translated">Skickar ett meddelande som den angivna <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> egenskapen är att ändra.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The name of the property that is about to change.</source>
          <target state="translated">Namnet på den egenskap som ska ändras.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Läser XML-schemat och data till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med det angivna <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden ger ett sätt att läsa data, eller både data och schema i en &lt;xref:System.Data.DataSet&gt;från en XML-dokument, medan den &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden läser endast schemat.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Om du vill läsa både data och schema, kan du använda en av de <ph id="ph1">`ReadXML`</ph> överlagringar som innehåller den <ph id="ph2">`mode`</ph> parameter, och ange värdet till <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;och &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Att skriva XML-data, eller både schema- och data från den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`WriteXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Om du vill skriva bara schemat, använda den <ph id="ph1">`WriteXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Om en infogad-schemat har angetts används i rad schemat att utöka den befintliga relationella strukturen innan du läser in data.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Ett undantagsfel genereras om det finns några konflikter (till exempel i samma kolumn i samma tabell som definierats med olika datatyper).</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Om inget infogad schema har angetts utökas relationella strukturen genom härledning efter behov, enligt strukturen i XML-dokumentet.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Om schemat kan utökas genom härledning för att visa alla data, utlöses ett undantag.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Den <ph id="ph2">`DataSet`</ph> associeras inte ett XML-element med motsvarande <ph id="ph3">`DataColumn`</ph> eller <ph id="ph4">`DataTable`</ph> när juridiska XML-tecken, till exempel ("_") är undantagna i den serialiserade XML.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Den <ph id="ph1">`DataSet`</ph> själva hoppas bara den ogiltiga XML-tecken i XML-elementnamn och därför kan bara använda samma.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">När giltiga tecken i XML-elementnamn är undantagna ignoreras elementet under bearbetningen.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Om XML-schemat för en &lt;xref:System.Data.DataSet&gt;innehåller <ph id="ph1">`targetNamespace`</ph>data inte kan läsas och undantag kan uppstå när du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;att läsa in den &lt;xref:System.Data.DataSet&gt;med XML som innehåller element med inga kvalificerande namnområde.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema, as the following example demonstrates.</source>
          <target state="translated">Om du vill läsa okvalificerade element, ange <ph id="ph1">`elementFormDefault`</ph> lika med "kvalificerade" i XML-schemat som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag vid försök att läsa schema i den &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXml%2A&gt;genom att ange <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>An object that derives from &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">Ett objekt som härleds från &lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> används för att läsa data.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Läser XML-schemat och data till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med det angivna <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden ger ett sätt att läsa data, eller både data och schema i en &lt;xref:System.Data.DataSet&gt;från en XML-dokument, medan den &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden läser endast schemat.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Om du vill läsa både data och schema, kan du använda en av de <ph id="ph1">`ReadXML`</ph> överlagringar som innehåller den <ph id="ph2">`mode`</ph> parameter, och ange värdet till <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;och &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Att skriva XML-data, eller både schema- och data från den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`WriteXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Om du vill skriva bara schemat, använda den <ph id="ph1">`WriteXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Om en infogad-schemat har angetts används i rad schemat att utöka den befintliga relationella strukturen innan du läser in data.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Ett undantagsfel genereras om det finns några konflikter (till exempel i samma kolumn i samma tabell som definierats med olika datatyper).</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Om inget infogad schema har angetts utökas relationella strukturen genom härledning efter behov, enligt strukturen i XML-dokumentet.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Om schemat kan utökas genom härledning för att visa alla data, utlöses ett undantag.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Den <ph id="ph2">`DataSet`</ph> associeras inte ett XML-element med motsvarande <ph id="ph3">`DataColumn`</ph> eller <ph id="ph4">`DataTable`</ph> när juridiska XML-tecken, till exempel ("_") är undantagna i den serialiserade XML.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Den <ph id="ph1">`DataSet`</ph> själva hoppas bara den ogiltiga XML-tecken i XML-elementnamn och därför kan bara använda samma.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">När giltiga tecken i XML-elementnamn är undantagna ignoreras elementet under bearbetningen.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Om XML-schemat för en &lt;xref:System.Data.DataSet&gt;innehåller <ph id="ph1">`targetNamespace`</ph>data inte kan läsas och undantag kan uppstå när du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;att läsa in den &lt;xref:System.Data.DataSet&gt;med XML som innehåller element med inga kvalificerande namnområde.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Om du vill läsa okvalificerade element, ange <ph id="ph1">`elementFormDefault`</ph> lika med "kvalificerade" i XML-schemat som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>       Classes that inherit from the &lt;xref:System.IO.TextReader&gt; class include the &lt;xref:System.IO.StreamReader&gt; and &lt;xref:System.IO.StringReader&gt; classes.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>Klasser som ärver från den &lt;xref:System.IO.TextReader&gt;klassen innehåller den &lt;xref:System.IO.StreamReader&gt;och &lt;xref:System.IO.StringReader&gt;klasser.&lt;/xref:System.IO.StringReader&gt; &lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph2">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag vid försök att läsa schema i den &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXml%2A&gt;genom att ange <ph id="ph2">`XmlReadMode.ReadSchema`</ph>.&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema and data.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som ska läsas schema och data från.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> används för att läsa data.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified file.</source>
          <target state="translated">Läser XML-schemat och data till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med hjälp av den angivna filen.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden ger ett sätt att läsa data, eller både data och schema i en &lt;xref:System.Data.DataSet&gt;från en XML-dokument, medan den &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden läser endast schemat.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Om du vill läsa både data och schema, kan du använda en av de <ph id="ph1">`ReadXML`</ph> överlagringar som innehåller den <ph id="ph2">`mode`</ph> parameter, och ange värdet till <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;och &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Att skriva XML-data, eller både schema- och data från den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`WriteXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Om du vill skriva bara schemat, använda den <ph id="ph1">`WriteXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Om en infogad-schemat har angetts används i rad schemat att utöka den befintliga relationella strukturen innan du läser in data.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Ett undantagsfel genereras om det finns några konflikter (till exempel i samma kolumn i samma tabell som definierats med olika datatyper).</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Om inget infogad schema har angetts utökas relationella strukturen genom härledning efter behov, enligt strukturen i XML-dokumentet.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Om schemat kan utökas genom härledning för att visa alla data, utlöses ett undantag.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Den <ph id="ph2">`DataSet`</ph> associeras inte ett XML-element med motsvarande <ph id="ph3">`DataColumn`</ph> eller <ph id="ph4">`DataTable`</ph> när juridiska XML-tecken, till exempel ("_") är undantagna i den serialiserade XML.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Den <ph id="ph1">`DataSet`</ph> själva hoppas bara den ogiltiga XML-tecken i XML-elementnamn och därför kan bara använda samma.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">När giltiga tecken i XML-elementnamn är undantagna ignoreras elementet under bearbetningen.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Om XML-schemat för en &lt;xref:System.Data.DataSet&gt;innehåller en <ph id="ph1">`targetNamespace`</ph>data inte kan läsas och undantag kan uppstå när du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;att läsa in den &lt;xref:System.Data.DataSet&gt;med XML som innehåller element med inga kvalificerande namnområde.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Om du vill läsa okvalificerade element, ange <ph id="ph1">`elementFormDefault`</ph> lika med "kvalificerade" i XML-schemat som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag vid försök att läsa schema i den &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXml%2A&gt;genom att ange <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">Filnamnet (inklusive sökväg) som ska läsas från.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> används för att läsa data.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>är inte inställd på <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Läser XML-schemat och data till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med det angivna <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReadXml method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">Metoden ReadXml ger ett sätt att läsa data, eller både data och schema i en &lt;xref:System.Data.DataSet&gt;från en XML-dokument, medan den &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden läser endast schemat.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Om du vill läsa både data och schema, kan du använda en av de <ph id="ph1">`ReadXML`</ph> överlagringar som innehåller den <ph id="ph2">`mode`</ph> parameter, och ange värdet till <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;och &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Att skriva XML-data, eller både schema- och data från den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`WriteXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Om du vill skriva bara schemat, använda den <ph id="ph1">`WriteXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Om en infogad-schemat har angetts används i rad schemat att utöka den befintliga relationella strukturen innan du läser in data.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Ett undantagsfel genereras om det finns några konflikter (till exempel i samma kolumn i samma tabell som definierats med olika datatyper).</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Om inget infogad schema har angetts utökas relationella strukturen genom härledning efter behov, enligt strukturen i XML-dokumentet.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Om schemat kan utökas genom härledning för att visa alla data, utlöses ett undantag.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Den <ph id="ph2">`DataSet`</ph> associeras inte ett XML-element med motsvarande <ph id="ph3">`DataColumn`</ph> eller <ph id="ph4">`DataTable`</ph> när juridiska XML-tecken, till exempel ("_") är undantagna i den serialiserade XML.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Den <ph id="ph1">`DataSet`</ph> själva hoppas bara den ogiltiga XML-tecken i XML-elementnamn och därför kan bara använda samma.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">När giltiga tecken i XML-elementnamn är undantagna ignoreras elementet under bearbetningen.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling ReadXml to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Om XML-schemat för en &lt;xref:System.Data.DataSet&gt;innehåller en <ph id="ph1">`targetNamespace`</ph>data inte kan läsas och undantag kan uppstå när du anropar ReadXml att läsa in den &lt;xref:System.Data.DataSet&gt;med XML som innehåller element med inga kvalificerande namnområde.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Om du vill läsa okvalificerade element, ange <ph id="ph1">`elementFormDefault`</ph> lika med "kvalificerade" i XML-schemat som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>       &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt; inherits from &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>       &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;ärver från &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;&lt;/xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with ReadXml by specifying <ph id="ph2">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag vid försök att läsa schema i den &lt;xref:System.Data.DataSet&gt;med ReadXml genom att ange <ph id="ph2">`XmlReadMode.ReadSchema`</ph>.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; from which to read.</source>
          <target state="translated">Den &lt;xref:System.Xml.XmlReader&gt;som ska läsas från.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> används för att läsa data.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Läser XML-schemat och data till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med det angivna <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> och <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden ger ett sätt att läsa data, eller både data och schema i en &lt;xref:System.Data.DataSet&gt;från en XML-dokument, medan den &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden läser endast schemat.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Om du vill läsa både data och schema, kan du använda en av de <ph id="ph1">`ReadXML`</ph> överlagringar som innehåller den <ph id="ph2">`mode`</ph> parameter, och ange värdet till <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Detsamma gäller för den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;och &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Att skriva XML-data, eller både schema- och data från den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`WriteXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Om du vill skriva bara schemat, använda den <ph id="ph1">`WriteXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you use ReadXml and you set &lt;xref:System.Data.XmlReadMode&gt; to <ph id="ph2">`Diffgram`</ph>, the content of the target <ph id="ph3">`DataSet`</ph> and the original <ph id="ph4">`DataSet`</ph> may differ because of how the diffgram is generated and processed.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; När du använder ReadXml och du ställer in &lt;xref:System.Data.XmlReadMode&gt;till <ph id="ph2">`Diffgram`</ph>, innehållet i målet <ph id="ph3">`DataSet`</ph> och ursprungligt <ph id="ph4">`DataSet`</ph> kan skilja sig på grund av hur diffgram genereras och bearbetas.&lt;/xref:System.Data.XmlReadMode&gt;</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on diffgrams, see <bpt id="p1">[</bpt>DiffGrams<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Mer information om diffgrams finns <bpt id="p1">[</bpt>DiffGrams<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Om en infogad-schemat har angetts används i rad schemat att utöka den befintliga relationella strukturen innan du läser in data.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Ett undantagsfel genereras om det finns några konflikter (till exempel i samma kolumn i samma tabell som definierats med olika datatyper).</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Om inget infogad schema har angetts utökas relationella strukturen genom härledning efter behov, enligt strukturen i XML-dokumentet.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Om schemat kan utökas genom härledning för att visa alla data, utlöses ett undantag.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Den <ph id="ph2">`DataSet`</ph> associeras inte ett XML-element med motsvarande <ph id="ph3">`DataColumn`</ph> eller <ph id="ph4">`DataTable`</ph> när juridiska XML-tecken, till exempel ("_") är undantagna i den serialiserade XML.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Den <ph id="ph1">`DataSet`</ph> själva hoppas bara den ogiltiga XML-tecken i XML-elementnamn och därför kan bara använda samma.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">När giltiga tecken i XML-elementnamn är undantagna ignoreras elementet under bearbetningen.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Om XML-schemat för en &lt;xref:System.Data.DataSet&gt;innehåller <ph id="ph1">`targetNamespace`</ph>data inte kan läsas och undantag kan uppstå när du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;att läsa in den &lt;xref:System.Data.DataSet&gt;med XML som innehåller element med inga kvalificerande namnområde.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Om du vill läsa okvalificerade element, ange <ph id="ph1">`elementFormDefault`</ph> lika med "kvalificerade" i XML-schemat som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag vid försök att läsa schema i den &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXml%2A&gt;genom att ange <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; from which to read.</source>
          <target state="translated">Den &lt;xref:System.IO.Stream&gt;som ska läsas från.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> används för att läsa data.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Läser XML-schemat och data till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med det angivna <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> och <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden ger ett sätt att läsa data, eller både data och schema i en &lt;xref:System.Data.DataSet&gt;från en XML-dokument, medan den &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden läser endast schemat.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Om du vill läsa både data och schema, kan du använda en av de <ph id="ph1">`ReadXML`</ph> överlagringar som innehåller den <ph id="ph2">`mode`</ph> parameter, och ange värdet till <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;och &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Att skriva XML-data, eller både schema- och data från den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`WriteXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Om du vill skriva bara schemat, använda den <ph id="ph1">`WriteXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Om en infogad-schemat har angetts används i rad schemat att utöka den befintliga relationella strukturen innan du läser in data.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Ett undantagsfel genereras om det finns några konflikter (till exempel i samma kolumn i samma tabell som definierats med olika datatyper).</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Om inget infogad schema har angetts utökas relationella strukturen genom härledning efter behov, enligt strukturen i XML-dokumentet.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Om schemat kan utökas genom härledning för att visa alla data, utlöses ett undantag.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Den <ph id="ph2">`DataSet`</ph> associeras inte ett XML-element med motsvarande <ph id="ph3">`DataColumn`</ph> eller <ph id="ph4">`DataTable`</ph> när juridiska XML-tecken, till exempel ("_") är undantagna i den serialiserade XML.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Den <ph id="ph1">`DataSet`</ph> själva hoppas bara den ogiltiga XML-tecken i XML-elementnamn och därför kan bara använda samma.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">När giltiga tecken i XML-elementnamn är undantagna ignoreras elementet under bearbetningen.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Om XML-schemat för en &lt;xref:System.Data.DataSet&gt;innehåller <ph id="ph1">`targetNamespace`</ph>data inte kan läsas och undantag kan uppstå när du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;att läsa in den &lt;xref:System.Data.DataSet&gt;med XML som innehåller element med inga kvalificerande namnområde.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Om du vill läsa okvalificerade element, ange <ph id="ph1">`elementFormDefault`</ph> lika med "kvalificerade" i XML-schemat som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag vid försök att läsa schema i den &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXml%2A&gt;genom att ange <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; from which to read.</source>
          <target state="translated">Den &lt;xref:System.IO.TextReader&gt;som ska läsas från.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> används för att läsa data.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified file and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Läser XML-schemat och data till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med hjälp av den angivna filen och <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden ger ett sätt att läsa data, eller både data och schema i en &lt;xref:System.Data.DataSet&gt;från en XML-dokument, medan den &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden läser endast schemat.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Om du vill läsa både data och schema, kan du använda en av de <ph id="ph1">`ReadXML`</ph> överlagringar som innehåller den <ph id="ph2">`mode`</ph> parameter, och ange värdet till <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;och &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Att skriva XML-data, eller både schema- och data från den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`WriteXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Om du vill skriva bara schemat, använda den <ph id="ph1">`WriteXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Om en infogad-schemat har angetts används i rad schemat att utöka den befintliga relationella strukturen innan du läser in data.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Ett undantagsfel genereras om det finns några konflikter (till exempel i samma kolumn i samma tabell som definierats med olika datatyper).</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Om inget infogad schema har angetts utökas relationella strukturen genom härledning efter behov, enligt strukturen i XML-dokumentet.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Om schemat kan utökas genom härledning för att visa alla data, utlöses ett undantag.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Den <ph id="ph2">`DataSet`</ph> associeras inte ett XML-element med motsvarande <ph id="ph3">`DataColumn`</ph> eller <ph id="ph4">`DataTable`</ph> när juridiska XML-tecken, till exempel ("_") är undantagna i den serialiserade XML.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Den <ph id="ph1">`DataSet`</ph> själva hoppas bara den ogiltiga XML-tecken i XML-elementnamn och därför kan bara använda samma.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">När giltiga tecken i XML-elementnamn är undantagna ignoreras elementet under bearbetningen.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Om XML-schemat för en &lt;xref:System.Data.DataSet&gt;innehåller en <ph id="ph1">`targetNamespace`</ph>data inte kan läsas och undantag kan uppstå när du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;att läsa in den &lt;xref:System.Data.DataSet&gt;med XML som innehåller element med inga kvalificerande namnområde.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Om du vill läsa okvalificerade element, ange <ph id="ph1">`elementFormDefault`</ph> lika med "kvalificerade" i XML-schemat som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag vid försök att läsa schema i den &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXml%2A&gt;genom att ange <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">Filnamnet (inklusive sökväg) som ska läsas från.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> används för att läsa data.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>är inte inställd på <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Läser XML-schemat och data till den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med det angivna <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> och <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">Den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden ger ett sätt att läsa data, eller både data och schema i en &lt;xref:System.Data.DataSet&gt;från en XML-dokument, medan den &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden läser endast schemat.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Om du vill läsa både data och schema, kan du använda en av de <ph id="ph1">`ReadXML`</ph> överlagringar som innehåller den <ph id="ph2">`mode`</ph> parameter, och ange värdet till <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;och &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Att skriva XML-data, eller både schema- och data från den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`WriteXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Om du vill skriva bara schemat, använda den <ph id="ph1">`WriteXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Om en infogad-schemat har angetts används i rad schemat att utöka den befintliga relationella strukturen innan du läser in data.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Ett undantagsfel genereras om det finns några konflikter (till exempel i samma kolumn i samma tabell som definierats med olika datatyper).</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Om inget infogad schema har angetts utökas relationella strukturen genom härledning efter behov, enligt strukturen i XML-dokumentet.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Om schemat kan utökas genom härledning för att visa alla data, utlöses ett undantag.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Den <ph id="ph2">`DataSet`</ph> associeras inte ett XML-element med motsvarande <ph id="ph3">`DataColumn`</ph> eller <ph id="ph4">`DataTable`</ph> när juridiska XML-tecken, till exempel ("_") är undantagna i den serialiserade XML.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Den <ph id="ph1">`DataSet`</ph> själva hoppas bara den ogiltiga XML-tecken i XML-elementnamn och därför kan bara använda samma.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">När giltiga tecken i XML-elementnamn är undantagna ignoreras elementet under bearbetningen.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Om XML-schemat för en &lt;xref:System.Data.DataSet&gt;innehåller en <ph id="ph1">`targetNamespace`</ph>data inte kan läsas och undantag kan uppstå när du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;att läsa in den &lt;xref:System.Data.DataSet&gt;med XML som innehåller element med inga kvalificerande namnområde.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Om du vill läsa okvalificerade element, ange <ph id="ph1">`elementFormDefault`</ph> lika med "kvalificerade" i XML-schemat som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag vid försök att läsa schema i den &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXml%2A&gt;genom att ange <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; from which to read.</source>
          <target state="translated">Den &lt;xref:System.Xml.XmlReader&gt;som ska läsas från.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> används för att läsa data.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified &lt;xref:System.IO.Stream&gt; into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Läser XML-schemat från det angivna &lt;xref:System.IO.Stream&gt;i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Använd &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden för att skapa schemat för en &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Schemat innehåller definitioner av tabell, relation och begränsning.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">Om du vill skriva ett schema till en XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-schemat skrivs med hjälp av XSD-standard.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Data kan skadas om msdata:DataType och xs:type-typer inte matchar.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception will be thrown.</source>
          <target state="translated">Inget undantag genereras.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;Metoden anropas vanligtvis innan du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden som används för att fylla i &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the &lt;xref:System.IO.Stream&gt; class include &lt;xref:System.IO.BufferedStream&gt;, &lt;xref:System.IO.FileStream&gt;, &lt;xref:System.IO.MemoryStream&gt;, and &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">Klasser som härleds från den &lt;xref:System.IO.Stream&gt;klassen innehåller &lt;xref:System.IO.BufferedStream&gt;, &lt;xref:System.IO.FileStream&gt;, &lt;xref:System.IO.MemoryStream&gt;, och &lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.MemoryStream&gt; &lt;/xref:System.IO.FileStream&gt; &lt;/xref:System.IO.BufferedStream&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag är när du försöker läsa in schemat i &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; from which to read.</source>
          <target state="translated">Den &lt;xref:System.IO.Stream&gt;som ska läsas från.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified &lt;xref:System.IO.TextReader&gt; into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Läser XML-schemat från det angivna &lt;xref:System.IO.TextReader&gt;i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Använd &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden för att skapa schemat för en &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Schemat innehåller definitioner av tabell, relation och begränsning.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">Om du vill skriva ett schema till en XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-schemat skrivs med hjälp av XSD-standard.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Data kan skadas om msdata:DataType och xs:type-typer inte matchar.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception will be thrown.</source>
          <target state="translated">Inget undantag genereras.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;Metoden anropas vanligtvis innan du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden som används för att fylla i &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from the &lt;xref:System.IO.TextReader&gt; class include the &lt;xref:System.IO.StreamReader&gt; and &lt;xref:System.IO.StringReader&gt; classes.</source>
          <target state="translated">Klasser som ärver från den &lt;xref:System.IO.TextReader&gt;klassen innehåller den &lt;xref:System.IO.StreamReader&gt;och &lt;xref:System.IO.StringReader&gt;klasser.&lt;/xref:System.IO.StringReader&gt; &lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag är när du försöker läsa in schemat i &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; from which to read.</source>
          <target state="translated">Den &lt;xref:System.IO.TextReader&gt;som ska läsas från.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified file into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Läser XML-schemat från den angivna filen i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Använd &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoden för att skapa schemat för en &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Schemat innehåller definitioner av tabell, relation och begränsning.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">Om du vill skriva ett schema till en XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-schemat skrivs med hjälp av XSD-standard.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Data kan skadas om msdata:DataType och xs:type-typer inte matchar.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception will be thrown.</source>
          <target state="translated">Inget undantag genereras.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;Metoden anropas vanligtvis innan du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden som används för att fylla i &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag vid försök att läsa in schemat i &lt;xref:System.Data.DataSet&gt;med &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>The file name (including the path) from which to read.</source>
          <target state="translated">Filen namn (inklusive sökväg) som ska läsas från.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>är inte inställd på <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified &lt;xref:System.Xml.XmlReader&gt; into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Läser XML-schemat från det angivna &lt;xref:System.Xml.XmlReader&gt;i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ReadXmlSchema method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Använda ReadXmlSchema-metoden för att skapa schemat för en &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Schemat innehåller definitioner av tabell, relation och begränsning.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-schemat skrivs med hjälp av XSD-standard.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Data kan skadas om msdata:DataType och xs:type-typer inte matchar.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception will be thrown.</source>
          <target state="translated">Inget undantag genereras.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReadXmlSchema method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">ReadXmlSchema-metoden anropas vanligtvis innan du anropar &lt;xref:System.Data.DataSet.ReadXml%2A&gt;metoden som används för att fylla i &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xml.XmlReader?displayProperty=fullName&gt; class is abstract.</source>
          <target state="translated">Den &lt;xref:System.Xml.XmlReader?displayProperty=fullName&gt;klassen är abstrakt.&lt;/xref:System.Xml.XmlReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT">
          <source>A class that inherits from the <ph id="ph1">`XmlReader`</ph> is the &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt; class.</source>
          <target state="translated">En klass som ärver från den <ph id="ph1">`XmlReader`</ph> är &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;klass.&lt;/xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with ReadXmlSchema.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Om schemat för din &lt;xref:System.Data.DataSet&gt;innehåller element med samma namn, men med annan typ i samma namnområde, genereras ett undantag är när du försöker läsa schema i den &lt;xref:System.Data.DataSet&gt;med ReadXmlSchema.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Det här undantaget uppstår inte om du använder .NET Framework version 1.0.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; from which to read.</source>
          <target state="translated">Den &lt;xref:System.Xml.XmlReader&gt;som ska läsas från.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>Ignores attributes and returns an empty DataSet.</source>
          <target state="translated">Ignorerar attribut och returnerar en tom datauppsättning.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>The specified XML reader.</source>
          <target state="translated">Den angivna XML-läsaren.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>Rolls back all the changes made to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> since it was created, or since the last time <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.AcceptChanges%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> was called.</source>
          <target state="translated">Återställer alla ändringar som gjorts i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> sedan den skapades eller sedan du senast <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.AcceptChanges%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> anropades.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke the RejectChanges to call the &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; method on all &lt;xref:System.Data.DataTable&gt; objects contained by the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Anropa RejectChanges för att anropa &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;metoden på alla &lt;xref:System.Data.DataTable&gt;objekt som finns i &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow&gt; objects contained by the &lt;xref:System.Data.DataSet&gt; can each be set into edit mode by invoking the &lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">&lt;xref:System.Data.DataRow&gt;objekt som innehåller den &lt;xref:System.Data.DataSet&gt;kan varje anges i redigeringsläge genom att aktivera den &lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName&gt;metoden.&lt;/xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>After invoking the &lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName&gt; method, changes can be rejected by calling the &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; on the &lt;xref:System.Data.DataTable&gt; to which the &lt;xref:System.Data.DataRow&gt; objects belong.</source>
          <target state="translated">Efter att ha åberopat den &lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName&gt;metoden ändringar kan avvisas genom att anropa den &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;på den &lt;xref:System.Data.DataTable&gt;som den &lt;xref:System.Data.DataRow&gt;objekt tillhöra.&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; method is called, any rows still in edit-mode cancel their edits.</source>
          <target state="translated">När den &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;metoden anropas, några rader i redigeringsläge Avbryt sina ändringar.&lt;/xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>New rows are removed.</source>
          <target state="translated">Nya rader tas bort.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modified and deleted rows return back to their original state (<ph id="ph1">`DataRowState.Unchanged`</ph>).</source>
          <target state="translated">Ändrade och borttagna rader gå tillbaka till det ursprungliga tillståndet (<ph id="ph1">`DataRowState.Unchanged`</ph>).</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>AcceptChanges and RejectChanges only apply to &lt;xref:System.Data.DataRow&gt; related changes (that is, <ph id="ph1">`Add`</ph>, <ph id="ph2">`Remove`</ph>, <ph id="ph3">`Delete`</ph>, and <ph id="ph4">`Modify`</ph>).</source>
          <target state="translated">AcceptChanges och RejectChanges gäller endast för &lt;xref:System.Data.DataRow&gt;relaterade ändringar (det vill säga <ph id="ph1">`Add`</ph>, <ph id="ph2">`Remove`</ph>, <ph id="ph3">`Delete`</ph>, och <ph id="ph4">`Modify`</ph>).&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">De gäller inte schemat eller strukturella förändringar.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Get the collection of relations that link tables and allow navigation from parent tables to child tables.</source>
          <target state="translated">Hämta insamling av relationer som länka tabeller och Tillåt navigering från överordnade tabeller till underordnade tabeller.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a collection of <bpt id="p2">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">En <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som innehåller en samling <bpt id="p2">&lt;xref href="System.Data.DataRelation"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> objekt.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">En tom samling returneras om det finns ingen <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekten finns.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used during remoting.</source>
          <target state="translated">Hämtar eller anger en <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> för den <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> används under fjärrkommunikation.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Clears all tables and removes all relations, foreign constraints, and tables from the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Rensar alla tabeller och tar bort alla relationer främmande begränsningar och tabeller från den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Subclasses should override Reset to restore a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to its original state.</source>
          <target state="translated">Underklasser ska åsidosätta Återställ om du vill återställa en <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> till det ursprungliga tillståndet.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Data.DataSet&gt; serializes its schema and instance data by default in Web services and remoting scenarios.</source>
          <target state="translated">En &lt;xref:System.Data.DataSet&gt;Serialiserar dess schema och instans data som standard i webbtjänster och scenarier för fjärrkommunikation.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the SchemaSerializationMode property of a typed <ph id="ph1">`DataSet`</ph> to &lt;xref:System.Data.SchemaSerializationMode&gt; causes schema information to be excluded from the serialization payload.</source>
          <target state="translated">Ange egenskapen SchemaSerializationMode för en skrivna <ph id="ph1">`DataSet`</ph> till &lt;xref:System.Data.SchemaSerializationMode&gt;orsakar schemainformation som ska undantas från serialisering nyttolasten.&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.SchemaSerializationMode&gt; is supported only for a typed <ph id="ph1">`DataSet`</ph>.</source>
          <target state="translated">&lt;xref:System.Data.SchemaSerializationMode&gt;stöds endast för en skrivna <ph id="ph1">`DataSet`</ph>.&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an un-typed <ph id="ph1">`DataSet`</ph> this property can only be set to &lt;xref:System.Data.SchemaSerializationMode&gt;.</source>
          <target state="translated">För en otypat <ph id="ph1">`DataSet`</ph> den här egenskapen kan endast anges till &lt;xref:System.Data.SchemaSerializationMode&gt;.&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.SchemaSerializationMode&gt; should only be used in cases where the schema information of the underlying typed <ph id="ph1">`DataTables`</ph>, <ph id="ph2">`DataRelations`</ph> and <ph id="ph3">`Constraints`</ph> has not been modified.</source>
          <target state="translated">&lt;xref:System.Data.SchemaSerializationMode&gt;bör endast användas i fall där schemainformationen för den underliggande skrev <ph id="ph1">`DataTables`</ph>, <ph id="ph2">`DataRelations`</ph> och <ph id="ph3">`Constraints`</ph> har inte ändrats.&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>If modifications have occurred, complete schema information should be serialized with &lt;xref:System.Data.SchemaSerializationMode&gt;.</source>
          <target state="translated">Om ändringar har ska uppstod, fullständig schemainformation serialiseras med &lt;xref:System.Data.SchemaSerializationMode&gt;.&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.SchemaSerializationMode&gt; is supported in version 2.0 of the .NET Framework or later.</source>
          <target state="translated">&lt;xref:System.Data.SchemaSerializationMode&gt;stöds i version 2.0 av .NET Framework eller senare.&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Data.SchemaSerializationMode&gt; is set, only the top level runtime properties present on the &lt;xref:System.Data.DataSet&gt; are serialized.</source>
          <target state="translated">När &lt;xref:System.Data.SchemaSerializationMode&gt;anges endast de översta nivå runtime egenskaperna finns på den &lt;xref:System.Data.DataSet&gt;serialiseras.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, they are serialized only if they happen to be different from the default values.</source>
          <target state="translated">Dessutom kan serialiserade de endast om de råkar befinna sig från standardvärdena.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>None of the <ph id="ph1">`Tables`</ph>, <ph id="ph2">`Relations`</ph> or <ph id="ph3">`Constraints`</ph> are serialized.</source>
          <target state="translated">Ingen av de <ph id="ph1">`Tables`</ph>, <ph id="ph2">`Relations`</ph> eller <ph id="ph3">`Constraints`</ph> serialiseras.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialized runtime properties include &lt;xref:System.Data.DataSet.DataSetName%2A&gt;, &lt;xref:System.Data.DataSet.Namespace%2A&gt;, &lt;xref:System.Data.DataSet.Prefix%2A&gt;, &lt;xref:System.Data.DataSet.Locale%2A&gt;, &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;, and &lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;.</source>
          <target state="translated">Serialiserade runtime egenskaper innehåller &lt;xref:System.Data.DataSet.DataSetName%2A&gt;, &lt;xref:System.Data.DataSet.Namespace%2A&gt;, &lt;xref:System.Data.DataSet.Prefix%2A&gt;, &lt;xref:System.Data.DataSet.Locale%2A&gt;, &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;, och &lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;.&lt;/xref:System.Data.DataSet.CaseSensitive%2A&gt; &lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt; &lt;/xref:System.Data.DataSet.Locale%2A&gt; &lt;/xref:System.Data.DataSet.Prefix%2A&gt; &lt;/xref:System.Data.DataSet.Namespace%2A&gt; &lt;/xref:System.Data.DataSet.DataSetName%2A&gt;</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>These properties are serialized to make sure that overall runtime data integrity is preserved.</source>
          <target state="translated">De här egenskaperna serialiseras om du vill säkerställa att övergripande runtime informationens integritet bevaras.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether &lt;xref:System.Data.DataSet.Relations*&gt; property should be persisted.</source>
          <target state="translated">Hämtar ett värde som anger om &lt;xref:System.Data.DataSet.Relations*&gt;egenskapen ska sparas.&lt;/xref:System.Data.DataSet.Relations*&gt;</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use this method if you are either creating a designer for the &lt;xref:System.Data.DataSet&gt;, or creating your own control incorporating the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Du använder vanligtvis den här metoden om du antingen skapar en designer för den &lt;xref:System.Data.DataSet&gt;, eller skapa en egen kontroll införliva &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has been changed from its default; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om egenskapsvärdet har ändrats från sitt standardvärde. Annars <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether &lt;xref:System.Data.DataSet.Tables*&gt; property should be persisted.</source>
          <target state="translated">Hämtar ett värde som anger om &lt;xref:System.Data.DataSet.Tables*&gt;egenskapen ska sparas.&lt;/xref:System.Data.DataSet.Tables*&gt;</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use this method only if you are either creating a designer for the &lt;xref:System.Data.DataSet&gt;, or creating your own control incorporating the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Den här metoden använder vanligtvis bara om du antingen skapar en designer för den &lt;xref:System.Data.DataSet&gt;, eller skapa en egen kontroll införliva &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has been changed from its default; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om egenskapsvärdet har ändrats från sitt standardvärde. Annars <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar eller anger en <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> för den <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sites bind a &lt;xref:System.ComponentModel.Component&gt; to a &lt;xref:System.ComponentModel.Container&gt; and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">Platser binda ett &lt;xref:System.ComponentModel.Component&gt;till en &lt;xref:System.ComponentModel.Container&gt;och aktivera kommunikation mellan dem, samt ger dig ett sätt för behållaren att hantera dess komponenter.&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">En beskrivning av den här medlemmen finns <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Den här medlemmen är en implementering för medlem av explicit gränssnitt.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.ComponentModel.IListSource&gt; interface.</source>
          <target state="translated">Det kan användas endast när den &lt;xref:System.Data.DataSet&gt;instans omvandlas till ett &lt;xref:System.ComponentModel.IListSource&gt;gränssnitt.&lt;/xref:System.ComponentModel.IListSource&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">En beskrivning av den här medlemmen finns <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">En beskrivning av den här medlemmen finns <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Den här medlemmen är en implementering för medlem av explicit gränssnitt.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.ComponentModel.IListSource&gt; interface.</source>
          <target state="translated">Det kan användas endast när den &lt;xref:System.Data.DataSet&gt;instans omvandlas till ett &lt;xref:System.ComponentModel.IListSource&gt;gränssnitt.&lt;/xref:System.ComponentModel.IListSource&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">En beskrivning av den här medlemmen finns <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">En beskrivning av den här medlemmen finns <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Den här medlemmen är en implementering för medlem av explicit gränssnitt.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">Det kan användas endast när den &lt;xref:System.Data.DataSet&gt;instans omvandlas till ett &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;gränssnitt.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">En beskrivning av den här medlemmen finns <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">En beskrivning av den här medlemmen finns <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Den här medlemmen är en implementering för medlem av explicit gränssnitt.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">Det kan användas endast när den &lt;xref:System.Data.DataSet&gt;instans omvandlas till ett &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;gränssnitt.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">En beskrivning av den här medlemmen finns <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Den här medlemmen är en implementering för medlem av explicit gränssnitt.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">Det kan användas endast när den &lt;xref:System.Data.DataSet&gt;instans omvandlas till ett &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;gränssnitt.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Gets the collection of tables contained in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hämtar samlingen av tabellerna i den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add tables to the collection, use &lt;xref:System.Data.DataTableCollection.Add%2A&gt; method of the &lt;xref:System.Data.DataTableCollection&gt;.</source>
          <target state="translated">Om du vill lägga till tabeller i samlingen, använder du &lt;xref:System.Data.DataTableCollection.Add%2A&gt;metoden i &lt;xref:System.Data.DataTableCollection&gt;.&lt;/xref:System.Data.DataTableCollection&gt; &lt;/xref:System.Data.DataTableCollection.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>To remove tables, use the &lt;xref:System.Data.DataTableCollection.Remove%2A&gt; method.</source>
          <target state="translated">Ta bort tabeller med den &lt;xref:System.Data.DataTableCollection.Remove%2A&gt;metoden.&lt;/xref:System.Data.DataTableCollection.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contained by this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> finns i <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">En tom samling returneras om det finns ingen <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objekten finns.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Skriver den aktuella data för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med det angivna <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">Den <ph id="ph1">`WriteXml`</ph> metoden ger ett sätt att skriva data, eller både data och schema från en &lt;xref:System.Data.DataSet&gt;i ett XML-dokument, medan den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden skriver endast schemat.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Om du vill skriva både data och schema, kan du använda någon av överlagringar som innehåller den <ph id="ph1">`mode`</ph> parameter, och ange värdet till <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;och &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Att läsa XML-data, eller både schema- och data till den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`ReadXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Läs bara schemat genom att använda den <ph id="ph1">`ReadXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used to write to a file.</source>
          <target state="translated">En &lt;xref:System.IO.Stream&gt;objekt som används för att skriva till en fil.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">Skriver den aktuella data för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med hjälp av angivna &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">Den <ph id="ph1">`WriteXml`</ph> metoden ger ett sätt att skriva data, eller både data och schema från en &lt;xref:System.Data.DataSet&gt;i ett XML-dokument, medan den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden skriver endast schemat.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Om du vill skriva både data och schema, kan du använda någon av överlagringar som innehåller den <ph id="ph1">`mode`</ph> parameter, och ange värdet till <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;och &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Att läsa XML-data, eller både schema- och data till den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`ReadXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Läs bara schemat genom att använda den <ph id="ph1">`ReadXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; object with which to write.</source>
          <target state="translated">Den &lt;xref:System.IO.TextWriter&gt;objekt som du vill skriva.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file.</source>
          <target state="translated">Skriver den aktuella data för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> till den angivna filen.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">Den <ph id="ph1">`WriteXml`</ph> metoden ger ett sätt att skriva data, eller både data och schema från en &lt;xref:System.Data.DataSet&gt;i ett XML-dokument, medan den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden skriver endast schemat.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Om du vill skriva både data och schema, kan du använda någon av överlagringar som innehåller den <ph id="ph1">`mode`</ph> parameter, och ange värdet till <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;och &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Att läsa XML-data, eller både schema- och data till den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`ReadXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Läs bara schemat genom att använda den <ph id="ph1">`ReadXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">Filen namn (inklusive sökväg) som du vill skriva.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>är inte inställd på <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">Skriver den aktuella data för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> till den angivna &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">Den <ph id="ph1">`WriteXml`</ph> metoden ger ett sätt att skriva data, eller både data och schema från en &lt;xref:System.Data.DataSet&gt;i ett XML-dokument, medan den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden skriver endast schemat.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Om du vill skriva både data och schema, kan du använda någon av överlagringar som innehåller den <ph id="ph1">`mode`</ph> parameter, och ange värdet till <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;och &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Att läsa XML-data, eller både schema- och data till den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`ReadXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Läs bara schemat genom att använda den <ph id="ph1">`ReadXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; with which to write.</source>
          <target state="translated">Den &lt;xref:System.Xml.XmlWriter&gt;som du vill skriva.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Skriver den aktuella informationen och eventuellt schemat för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med det angivna <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> och <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Om du vill skriva schemat, ange värdet för den <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> parameter till <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">Den <ph id="ph1">`WriteXml`</ph> metoden ger ett sätt att skriva data, eller både data och schema från en &lt;xref:System.Data.DataSet&gt;i ett XML-dokument, medan den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden skriver endast schemat.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Om du vill skriva både data och schema, ange den <ph id="ph1">`mode`</ph> parameter till <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;och &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Att läsa XML-data, eller både schema- och data till den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`ReadXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Läs bara schemat genom att använda den <ph id="ph1">`ReadXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used to write to a file.</source>
          <target state="translated">En &lt;xref:System.IO.Stream&gt;objekt som används för att skriva till en fil.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Skriver den aktuella informationen och eventuellt schemat för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med hjälp av den angivna &lt;xref:System.IO.TextWriter&gt;och <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Om du vill skriva schemat, ange värdet för den <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> parameter till <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">Den <ph id="ph1">`WriteXml`</ph> metoden ger ett sätt att skriva data, eller både data och schema från en &lt;xref:System.Data.DataSet&gt;i ett XML-dokument, medan den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden skriver endast schemat.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Om du vill skriva både data och schema, ange den <ph id="ph1">`mode`</ph> parameter till <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;och &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Att läsa XML-data, eller både schema- och data till den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`ReadXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Läs bara schemat genom att använda den <ph id="ph1">`ReadXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextWriter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object used to write the document.</source>
          <target state="translated">En <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextWriter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objekt som används för att skriva dokumentet.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file using the specified <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Skriver den aktuella informationen och eventuellt schemat för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> till den angivna filen med den angivna <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Om du vill skriva schemat, ange värdet för den <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> parameter till <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">Den <ph id="ph1">`WriteXml`</ph> metoden ger ett sätt att skriva data, eller både data och schema från en &lt;xref:System.Data.DataSet&gt;i ett XML-dokument, medan den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden skriver endast schemat.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Om du vill skriva både data och schema, ange den <ph id="ph1">`mode`</ph> parameter till <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;och &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Att läsa XML-data, eller både schema- och data till den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`ReadXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Läs bara schemat genom att använda den <ph id="ph1">`ReadXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">Filen namn (inklusive sökväg) som du vill skriva.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>är inte inställd på <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.Xml.XmlWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Skriver den aktuella informationen och eventuellt schemat för den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> med hjälp av den angivna &lt;xref:System.Xml.XmlWriter&gt;och <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Om du vill skriva schemat, ange värdet för den <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> parameter till <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated">Den <ph id="ph1">`WriteXml`</ph> metoden ger ett sätt att skriva data, eller både data och schema från en &lt;xref:System.Data.DataSet&gt;i ett XML-dokument, medan den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden skriver endast schemat.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Om du vill skriva både data och schema, ange den <ph id="ph1">`mode`</ph> parameter till <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">Observera att samma sak gäller för den &lt;xref:System.Data.DataSet.ReadXml%2A&gt;och &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;metoder, respektive.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Att läsa XML-data, eller både schema- och data till den <ph id="ph1">`DataSet`</ph>, använda den <ph id="ph2">`ReadXml`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Läs bara schemat genom att använda den <ph id="ph1">`ReadXmlSchema`</ph> metoden.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; En &lt;xref:System.InvalidOperationException&gt;genereras om en kolumntyp i den <ph id="ph2">`DataRow`</ph> att läsa från eller skrivs till implementerar &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;och implementerar inte &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; with which to write.</source>
          <target state="translated">Den &lt;xref:System.Xml.XmlWriter&gt;som du vill skriva.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">En av de <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> värden.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object.</source>
          <target state="translated">Skriver den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktur som ett XML-schema till den angivna <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objekt.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the WriteXmlSchema method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">Använd metoden WriteXmlSchema för att skriva schemat för en &lt;xref:System.Data.DataSet&gt;ett XML-dokument.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Schemat innehåller definitioner av tabell, relation och begränsning.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the WriteXmlSchema method.</source>
          <target state="translated">Använd metoden WriteXmlSchema om du vill skriva ett schema till en XML-dokument.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-schemat skrivs med hjälp av XSD-standard.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">Om du vill skriva data till ett XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the &lt;xref:System.IO.Stream&gt; class include &lt;xref:System.IO.BufferedStream&gt;, &lt;xref:System.IO.FileStream&gt;, &lt;xref:System.IO.MemoryStream&gt;, and &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">Klasser som härleds från den &lt;xref:System.IO.Stream&gt;klassen innehåller &lt;xref:System.IO.BufferedStream&gt;, &lt;xref:System.IO.FileStream&gt;, &lt;xref:System.IO.MemoryStream&gt;, och &lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.MemoryStream&gt; &lt;/xref:System.IO.FileStream&gt; &lt;/xref:System.IO.BufferedStream&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used to write to a file.</source>
          <target state="translated">En &lt;xref:System.IO.Stream&gt;objekt som används för att skriva till en fil.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified &lt;xref:System.IO.TextWriter&gt; object.</source>
          <target state="translated">Skriver den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktur som ett XML-schema till den angivna &lt;xref:System.IO.TextWriter&gt;objektet.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">Använd den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metod för att skriva schemat för en &lt;xref:System.Data.DataSet&gt;ett XML-dokument.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Schemat innehåller definitioner av tabell, relation och begränsning.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">Om du vill skriva ett schema till en XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-schemat skrivs med hjälp av XSD-standard.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">Om du vill skriva data till ett XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes the derive from the &lt;xref:System.IO.TextWriter?displayProperty=fullName&gt; class include the &lt;xref:System.Web.HttpWriter?displayProperty=fullName&gt;, &lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName&gt;, &lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt;, &lt;xref:System.IO.StreamWriter?displayProperty=fullName&gt;, and &lt;xref:System.IO.StringWriter?displayProperty=fullName&gt;.</source>
          <target state="translated">Klasserna härledd från den &lt;xref:System.IO.TextWriter?displayProperty=fullName&gt;klassen innehåller den &lt;xref:System.Web.HttpWriter?displayProperty=fullName&gt;, &lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName&gt;, &lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt;, &lt;xref:System.IO.StreamWriter?displayProperty=fullName&gt;, och &lt;xref:System.IO.StringWriter?displayProperty=fullName&gt;.&lt;/xref:System.IO.StringWriter?displayProperty=fullName&gt; &lt;/xref:System.IO.StreamWriter?displayProperty=fullName&gt; &lt;/xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt; &lt;/xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName&gt; &lt;/xref:System.Web.HttpWriter?displayProperty=fullName&gt; &lt;/xref:System.IO.TextWriter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; object with which to write.</source>
          <target state="translated">Den &lt;xref:System.IO.TextWriter&gt;objekt som du vill skriva.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to a file.</source>
          <target state="translated">Skriver den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktur som ett XML-schema till en fil.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">Använd den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metod för att skriva schemat för en &lt;xref:System.Data.DataSet&gt;ett XML-dokument.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Schemat innehåller definitioner av tabell, relation och begränsning.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">Om du vill skriva ett schema till en XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-schemat skrivs med hjälp av XSD-standard.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">Om du vill skriva data till ett XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">Filen namn (inklusive sökväg) som du vill skriva.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>är inte inställd på <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to an &lt;xref:System.Xml.XmlWriter&gt; object.</source>
          <target state="translated">Skriver den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktur som ett XML-schema till en &lt;xref:System.Xml.XmlWriter&gt;objektet.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">Använd den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metod för att skriva schemat för en &lt;xref:System.Data.DataSet&gt;ett XML-dokument.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Schemat innehåller definitioner av tabell, relation och begränsning.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">Om du vill skriva ett schema till en XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-schemat skrivs med hjälp av XSD-standard.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">Om du vill skriva data till ett XML-dokument, använda den &lt;xref:System.Data.DataSet.WriteXml%2A&gt;metoden.&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT">
          <source>One class that inherits from the &lt;xref:System.Xml.XmlWriter?displayProperty=fullName&gt; class is the &lt;xref:System.Xml.XmlTextWriter?displayProperty=fullName&gt; class.</source>
          <target state="translated">En klass som ärvs från &lt;xref:System.Xml.XmlWriter?displayProperty=fullName&gt;klassen är &lt;xref:System.Xml.XmlTextWriter?displayProperty=fullName&gt;klass.&lt;/xref:System.Xml.XmlTextWriter?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlWriter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; to write to.</source>
          <target state="translated">Den &lt;xref:System.Xml.XmlWriter&gt;att skriva till.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object.</source>
          <target state="translated">Skriver den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktur som ett XML-schema till den angivna <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objekt.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object to write to.</source>
          <target state="translated">En <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objekt att skriva till.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">En delegat som används för att konvertera &lt;xref:System.Type&gt;till sträng.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">Skriver den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktur som ett XML-schema i den angivna &lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; object to write to.</source>
          <target state="translated">En &lt;xref:System.IO.TextWriter&gt;objekt att skriva till.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">En delegat som används för att konvertera &lt;xref:System.Type&gt;till sträng.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to a file.</source>
          <target state="translated">Skriver den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktur som ett XML-schema till en fil.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>The name of the file to write to.</source>
          <target state="translated">Namnet på filen för att skriva till.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">En delegat som används för att konvertera &lt;xref:System.Type&gt;till sträng.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">Skriver den <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktur som ett XML-schema i den angivna &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlWriter&gt; object to write to.</source>
          <target state="translated">En &lt;xref:System.Xml.XmlWriter&gt;objekt att skriva till.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">En delegat som används för att konvertera &lt;xref:System.Type&gt;till sträng.&lt;/xref:System.Type&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>