<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79c9715e211632f6a3de70423bb065f18cd30014</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Common.DbEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b06561fffd3a33a98c247f84311ed52b6e5c8150</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ecd93b3ea908d9c73d4d7808b00ca420fc20ae0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the &lt;xref:System.Collections.IEnumerable.GetEnumerator*&gt; method, which supports a simple iteration over a collection by a .NET Framework data provider.</source>
          <target state="translated">Visar den &lt;xref:System.Collections.IEnumerable.GetEnumerator*&gt;metod som stöder en enkel iteration via en samling av en .NET Framework-dataprovidern.&lt;/xref:System.Collections.IEnumerable.GetEnumerator*&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DbEnumerator class is implemented by a .NET Framework data provider to provide data binding support.</source>
          <target state="translated">Klassen DbEnumerator implementeras av en .NET Framework-dataprovider för att ge stöd för bindning av data.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>By design, the DbEnumerator object is intended for use with only one resultset.</source>
          <target state="translated">Objektet DbEnumerator är avsedd att användas med endast en resultset avsiktligt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema.</source>
          <target state="translated">Om du kör en batch-instruktion som innehåller två SQL SELECT-uttryck som returnerar olika scheman, kan den andra instruktionen inte returnera hela schemat.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this situation, obtain a DbEnumerator for each resultset, and then call the <ph id="ph1">`NextResult`</ph> method of a .NET Framework data provider DataReader object.</source>
          <target state="translated">Om du vill undvika detta kan få en DbEnumerator för varje resultset och sedan anropa den <ph id="ph1">`NextResult`</ph> metod i en .NET Framework data provider DataReader-objektet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the give n data reader.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klass med ge n dataläsaren.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">DataReader som iterera.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified <bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med hjälp av den angivna <bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> through which to iterate.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som iterera.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med hjälp av den angivna smartkortsläsaren och anger om du vill stänga automatiskt läsaren har gått igenom dess data.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">DataReader som iterera.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to automatically close the DataReader after iterating through its data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Stäng automatiskt DataReader-objektet har gått igenom dess data. Annars <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified <bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and indicates whether to automatically close the <bpt id="p3">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> after iterating through its data.</source>
          <target state="translated">Initierar en ny instans av den <bpt id="p1">&lt;xref href="System.Data.Common.DbEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klassen med hjälp av den angivna <bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, och anger om du vill stänga automatiskt den <bpt id="p3">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> har gått igenom dess data.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> through which to iterate.</source>
          <target state="translated">Den <bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> som iterera.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to automatically close the <bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> after iterating through its data; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Stäng automatiskt den <bpt id="p2">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> har gått igenom data; annars <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the current element in the collection.</source>
          <target state="translated">Hämtar det aktuella elementet i mängden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;, &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of Current; otherwise, Current is undefined.</source>
          <target state="translated">När du har skapat en uppräknare eller efter en &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;, &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;måste anropas för att gå vidare uppräknaren till det första elementet i mängden innan du läser värdet på Current; annars är odefinierad.&lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; &lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current also throws an exception if the last call to &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; returned false, which indicates the end of the collection.</source>
          <target state="translated">Aktuella också genererar ett undantag om senast anropet till &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;returnerade false, vilket anger slutet av samlingen.&lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current does not move the position of the enumerator and consecutive calls to Current return the same object until either &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; or &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">Aktuella inte flytta positionen för uppräknaren och efterföljande anrop till aktuella returnera samma objekt förrän antingen &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;eller &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;kallas.&lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt; &lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">En uppräknare är giltig så länge samlingen förblir oförändrad.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; or &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt; generates an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Om ändringar görs i samlingen, till exempel lägga till, ändra eller ta bort element uppräknaren är blir inaktuella och nästa anropa eller &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;genererar &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt; &lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; and Current, Current returns the element to which it is set, even if the enumerator is already invalidated.</source>
          <target state="translated">Om samlingen har ändrats mellan &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;och aktuella, aktuella returnerar elementet som anges, även om uppräknaren redan är ogiltiga.&lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The current element in the collection.</source>
          <target state="translated">Det aktuella elementet i mängden.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">Uppräknaren har placerats före det första elementet i mängden eller efter det sista elementet.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Avancerar uppräknaren till nästa element i samlingen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a call to &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;, an enumerator is positioned before the first element of the collection, and the first call to MoveNext moves the enumerator over the first element of the collection.</source>
          <target state="translated">När du har skapat en uppräknare eller efter ett anrop till &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;en Uppräknaren står före det första elementet i mängden och det första anropet till MoveNext flyttar uppräknaren över det första elementet i mängden.&lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the end of the collection is passed, subsequent calls to MoveNext return false until &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">Efter slutet av samlingen skickas efterföljande anrop till MoveNext returnerar false tills &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;kallas.&lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">En uppräknare är giltig så länge samlingen förblir oförändrad.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Om ändringar i samlingen, till exempel lägga till, ändra eller ta bort element uppräknaren är blir inaktuella och nästa anrop till MoveNext eller &lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;utlöser &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Om uppräknaren har avancerade till nästa element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> om uppräknaren har passerat slutet av samlingen.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Samlingen har ändrats efter att uppräknaren skapades.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Anger uppräknaren till sin ursprungliga position är före det första elementet i mängden.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">En uppräknare är giltig så länge samlingen förblir oförändrad.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt; or Reset throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Om ändringar görs i samlingen, till exempel lägga till, ändra eller ta bort element, uppräknaren blir inaktuella och nästa anrop till &lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;eller Återställ utlöser &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Samlingen har ändrats efter att uppräknaren skapades.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>