<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sv-se">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac9498873469daff17ad3b38bfa9cf967028530a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.ICustomMarshaler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">213a6099db9f52670cebea5a2dbbccb2b08631ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d826986e297e5e712358c7a49dc0ecaf8dc024fa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides custom wrappers for handling method calls.</source>
          <target state="translated">Ger anpassad omslutningar för hantering av metodanrop.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A marshaler provides a bridge between the functionality of old and new interfaces.</source>
          <target state="translated">En konverterare ger en brygga mellan funktionen gamla och nya gränssnitt.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom marshaling provides the following benefits:      -   It enables client applications that were designed to work with an old interface to also work with servers that implement a new interface.</source>
          <target state="translated">Anpassade omordning ger följande fördelar:-Det gör det möjligt för program som har utformats för att arbeta med ett gamla gränssnitt till också fungera med servrar som implementerar ett nytt gränssnitt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   It enables client applications built to work with a new interface to work with servers that implement an old interface.</source>
          <target state="translated">– Det gör det möjligt för program för att arbeta med ett nytt gränssnitt att arbeta med servrar som implementerar ett gamla gränssnitt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have an interface that introduces different marshaling behavior or that is exposed to the Component Object Model (COM) in a different way, you can design a custom marshaler instead of using the interop marshaler.</source>
          <target state="translated">Om du har ett gränssnitt som introducerar olika omordnande beteenden, eller som är exponerad för av Component Object Model (COM) på ett annat sätt kan utforma du en anpassad konverterare i stället för interop-konverteraren.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using a custom marshaler, you can minimize the distinction between new .NET Framework components and existing COM components.</source>
          <target state="translated">Du kan minimera åtskillnad mellan nya .NET Framework-komponenter och befintliga COM-komponenter med hjälp av en anpassad konverterare.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that you are developing a managed interface called <ph id="ph1">`INew`</ph>.</source>
          <target state="translated">Anta exempelvis att du utvecklar ett hanterade gränssnitt som heter <ph id="ph1">`INew`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this interface is exposed to COM through a standard COM callable wrapper (CCW), it has the same methods as the managed interface and uses the marshaling rules built into the interop marshaler.</source>
          <target state="translated">Om det här gränssnittet är exponerad för COM via en standard COM callable wrapper (CCW), har samma metoder som det hanterade gränssnittet och använder omordnande regler som är inbyggda i interop-konverteraren.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Now suppose that a well-known COM interface called <ph id="ph1">`IOld`</ph> already provides the same functionality as the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">Anta nu att ett välkänt COM-gränssnitt för <ph id="ph1">`IOld`</ph> redan fungerar på samma sätt som den <ph id="ph2">`INew`</ph> gränssnitt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>By designing a custom marshaler, you can provide an unmanaged implementation of <ph id="ph1">`IOld`</ph> that simply delegates the calls to the managed implementation of the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">Designa en anpassad konverterare får tillgång till en ohanterad implementering av <ph id="ph1">`IOld`</ph> som helt enkelt delegerar anrop till den hantera implementeringen av den <ph id="ph2">`INew`</ph> gränssnitt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the custom marshaler acts as a bridge between the managed and unmanaged interfaces.</source>
          <target state="translated">Den anpassade konverteraren fungerar därför som en brygga mellan hanterade och ohanterade gränssnitten.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Custom marshalers are not invoked when calling from managed code to unmanaged code on a dispatch-only interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Anpassad konverterare inte anropas när anrop från hanterad kod till ohanterad kod i en endast dispatch-gränssnitt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Defining the Marshaling Type    Before you can build a custom marshaler, you must define the managed and unmanaged interfaces that will be marshaled.</source>
          <target state="translated">Definiera den att konvertera typen innan du kan skapa en anpassad konverterare, måste du definiera hanterade och ohanterade gränssnitten som ska konverteras.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>These interfaces commonly perform the same function but are exposed differently to managed and unmanaged objects.</source>
          <target state="translated">Dessa gränssnitt ofta utför samma funktion, men exponeras inte på samma sätt för hanterade och ohanterade objekt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A managed compiler produces a managed interface from metadata, and the resulting interface looks like any other managed interface.</source>
          <target state="translated">En hanterad kompilator genererar ett hanterade gränssnitt från metadata och resulterande gränssnittet ser ut som hanterade gränssnittet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows a typical interface.</source>
          <target state="translated">I följande exempel visas en typisk gränssnitt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#1<ept id="p2">](~/add/codesnippet/cpp/t-system.runtime.interop_8_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#1<ept id="p4">](~/add/codesnippet/csharp/t-system.runtime.interop_8_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#1<ept id="p6">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_1.vb)</ept><ept id="p5">]</ept>       You define the unmanaged type in Interface Definition Language (IDL) and compile it with the Microsoft Interface Definition Language (MIDL) compiler.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#1<ept id="p2">](~/add/codesnippet/cpp/t-system.runtime.interop_8_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#1<ept id="p4">](~/add/codesnippet/csharp/t-system.runtime.interop_8_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#1<ept id="p6">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_1.vb)</ept> <ept id="p5">]</ept> du definierar den ohanterade typen i Interface Definition Language (IDL) och kompilera med Microsoft Interface Definition Language (MIDL)-kompilatorn.    </target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You define the interface within a library statement and assign it an interface ID with the universal unique identifier (UUID) attribute, as the following example demonstrates.</source>
          <target state="translated">Definiera gränssnittet i en instruktion i biblioteket och tilldela den ett gränssnitts-ID med attributet universal unik identifierare (UUID), som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```    [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library OldLib {        [uuid(9B2BAADD-0705-11D3-A0CD-00C04FA35826)]        interface IOld : IUnknown            HRESULT OldMethod();   }   ```</ph>       The MIDL compiler produces several output files.</source>
          <target state="translated"><ph id="ph1">```    [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library OldLib {        [uuid(9B2BAADD-0705-11D3-A0CD-00C04FA35826)]        interface IOld : IUnknown            HRESULT OldMethod();   }   ```</ph>Kompilatorn MIDL ger flera utgående filer.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interface is defined in Old.idl, the output file Old_i.c defines a <ph id="ph1">`const`</ph> variable with the interface identifier (IID) of the interface, as the following example demonstrates.</source>
          <target state="translated">Om gränssnittet är definierad i Old.idl, utdatafilen Old_i.c definierar en <ph id="ph1">`const`</ph> variabel med gränssnittet-ID (IID) för gränssnittet, som exemplet nedan visar.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   const IID IID_IOld = {0x9B2BAADD,0x0705,0x11D3,{0xA0,0xCD,0x00,0xC0,0x4F,0xA3,0x58,0x26}};   ```</ph>       The Old.h file is also produced by MIDL.</source>
          <target state="translated"><ph id="ph1">```   const IID IID_IOld = {0x9B2BAADD,0x0705,0x11D3,{0xA0,0xCD,0x00,0xC0,0x4F,0xA3,0x58,0x26}};   ```</ph>Filen Old.h skapas också av MIDL.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>It contains a C++ definition of the interface that can be included in your C++ source code.</source>
          <target state="translated">Den innehåller en definition av C++ på gränssnittet som kan ingå i källkoden C++.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementing the ICustomMarshaler Interface    Your custom marshaler must implement the ICustomMarshaler interface to provide the appropriate wrappers to the runtime.</source>
          <target state="translated">Implementera ICustomMarshaler gränssnittet din anpassade konverteraren måste implementera gränssnittet ICustomMarshaler för att tillhandahålla rätt omslutningar körningstillstånd.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code displays the base interface that must be implemented by all custom marshalers.</source>
          <target state="translated">Följande C#-kod visar det grundläggande gränssnittet som måste implementeras av alla anpassade konverterare.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#2<ept id="p2">](~/add/codesnippet/cpp/t-system.runtime.interop_8_2.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#2<ept id="p4">](~/add/codesnippet/csharp/t-system.runtime.interop_8_2.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_2.vb)</ept><ept id="p5">]</ept>       The ICustomMarshaler interface includes methods that provide conversion support, cleanup support, and information about the data to be marshaled.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#2<ept id="p2">](~/add/codesnippet/cpp/t-system.runtime.interop_8_2.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#2<ept id="p4">](~/add/codesnippet/csharp/t-system.runtime.interop_8_2.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_2.vb)</ept> <ept id="p5">]</ept> gränssnittet ICustomMarshaler som den innehåller metoder för att ge stöd för konvertering, stöd för rensning och information om data som ska konverteras.    </target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Type of operation|ICustomMarshaler method|Description|   |-----------------------|-----------------------------|-----------------|   |Conversion (from native to managed code)|&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;|Marshals a pointer to native data into a managed object.</source>
          <target state="translated">| Typ av åtgärd | ICustomMarshaler metoden | Beskrivning |   |-----------------------|-----------------------------|-----------------|   | Konvertering (från inbyggda till förvaltad kod) | &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;| Marshals en pekare till interna data till ett hanterat objekt.&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Den här metoden returnerar en anpassad runtime callable wrapper (RCW) som kan konvertera det ohanterade gränssnitt som skickas som ett argument.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The marshaler should return an instance of the custom RCW for that type.|   |Conversion (from managed to native code)|&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;|Marshals a managed object into a pointer to native data.</source>
          <target state="translated">Konverteraren ska returnera en instans av anpassade RCW för den typen. |   | Konvertera (Native kod) | &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;| Marshals ett hanterat objekt i en pekare till egna data.&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Den här metoden returnerar en anpassad COM callable wrapper (CCW) som kan konvertera det hanterade gränssnittet som skickas som ett argument.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The marshaler should return an instance of the custom CCW for that type.|   |Cleanup (of native code)|&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A&gt;|Enables the marshaler to clean up the native data (the CCW) that is returned by the &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt; method.|   |Cleanup (of managed code)|&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A&gt;|Enables the marshaler to clean up the managed data (the RCW) that is returned by the &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt; method.|   |Information (about native code)|&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A&gt;|Returns the size of the unmanaged data to be marshaled.|      ### Conversion    &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=fullName&gt;       Marshals a pointer to native data into a managed object.</source>
          <target state="translated">Konverteraren ska returnera en instans av anpassade CCW för den typen. |   | Rensa (för intern kod) | &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A&gt;| Aktiverar konverteraren att rensa upp egna data (CCW) som returneras av metoden &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;. |   | Rensa (av förvaltad kod) | &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A&gt;| Aktiverar konverteraren Rensa hanterade data (RCW) som returneras av metoden &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;. |   | Information (om maskinkod) | &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A&gt;| Returnerar storleken på ohanterade data som ska konverteras. |      ### Konvertering &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=fullName&gt;Marshals en pekare till interna data till ett hanterat objekt.&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A&gt; &lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt; &lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A&gt; &lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt; &lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Den här metoden returnerar en anpassad runtime callable wrapper (RCW) som kan konvertera det ohanterade gränssnitt som skickas som ett argument.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The marshaler should return an instance of the custom RCW for that type.</source>
          <target state="translated">Konverteraren ska returnera en instans av anpassade RCW för den typen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=fullName&gt;       Marshals a managed object into a pointer to native data.</source>
          <target state="translated">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=fullName&gt;Marshals ett hanterat objekt i en pekare till egna data.&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Den här metoden returnerar en anpassad COM callable wrapper (CCW) som kan konvertera det hanterade gränssnittet som skickas som ett argument.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The marshaler should return an instance of the custom CCW for that type.</source>
          <target state="translated">Konverteraren ska returnera en instans av anpassade CCW för den typen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cleanup    &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=fullName&gt;       Enables the marshaler to clean up the native data (the CCW) that is returned by the &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt; method.</source>
          <target state="translated">Rensa &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=fullName&gt;aktiverar konverteraren att rensa upp egna data (CCW) som returneras av den &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;metoden.&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt; &lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=fullName&gt;       Enables the marshaler to clean up the managed data (the RCW) that is returned by the &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=fullName&gt;Aktiverar konverteraren Rensa hanterade data (RCW) som returneras av den &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;metoden.&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Size Information    &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=fullName&gt;       Returns the size of the unmanaged data to be marshaled.</source>
          <target state="translated">Storleken Information &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=fullName&gt;returnerar storleken på ohanterade data som ska konverteras.&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementing the GetInstance Method    In addition to implementing the ICustomMarshaler interface, custom marshalers must implement a <ph id="ph1">`static`</ph> method called <ph id="ph2">`GetInstance`</ph> that accepts a &lt;xref:System.String&gt; as a parameter and has a return type of ICustomMarshaler.</source>
          <target state="translated">Implementera GetInstance-metod implementerar gränssnittet ICustomMarshaler anpassade konverterare måste implementera en <ph id="ph1">`static`</ph> anropade metoden <ph id="ph2">`GetInstance`</ph> som accepterar en &lt;xref:System.String&gt;som en parameter och har en returtyp av ICustomMarshaler.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`static`</ph> method is called by the common language runtime's COM interop layer to instantiate an instance of the custom marshaler.</source>
          <target state="translated">Detta <ph id="ph1">`static`</ph> metoden anropas av den CLR COM interop-lagret för att skapa en instans av en instans av den anpassade konverteraren.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string that is passed to <ph id="ph1">`GetInstance`</ph> is a cookie that the method can use to customize the returned custom marshaler.</source>
          <target state="translated">Strängen som skickas till <ph id="ph1">`GetInstance`</ph> är en cookie som använder metoden för att anpassa den returnerade anpassade konverteraren.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   static ICustomMarshaler *GetInstance(String *pstrCookie);   ```</ph>      ## Applying MarshalAsAttribute    To use a custom marshaler, you must apply the &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt; attribute to the parameter or field that is being marshaled.</source>
          <target state="translated"><ph id="ph1">```   static ICustomMarshaler *GetInstance(String *pstrCookie);   ```</ph>## Tillämpa MarshalAsAttribute att använda en anpassad konverterare, måste du installera den &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;attribut till parametern eller fält som är att konverteras.&lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must also pass the &lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt; enumeration value to the &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;constructor.</source>
          <target state="translated">Måste du också ange den &lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt;uppräkningsvärdet till den &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;konstruktor.&lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute&gt; &lt;/xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you must specify the &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt; field with one of the following named parameters:      -   &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt; (required): The assembly-qualified name of the custom marshaler.</source>
          <target state="translated">Dessutom måste du ange den &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;med något av följande namngivna parametrarna:- &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;(krävs): sammansättningen kvalificerade namnet på den anpassade konverteraren.&lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt; &lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name should include the namespace and class of the custom marshaler.</source>
          <target state="translated">Namnet får innehålla namnområde och klass för den anpassade konverteraren.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the custom marshaler is not defined in the assembly it is used in, you must specify the name of the assembly in which it is defined.</source>
          <target state="translated">Om den anpassade konverteraren inte har definierats i sammansättningen som den används i, måste du ange namnet på den sammansättning som den definieras.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  You can use the &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt; field instead of the &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt; field.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Du kan använda den &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;fältet i stället för den &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;fält.&lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt; &lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt; takes a type that is easier to specify.</source>
          <target state="translated">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;tar en typ som är enklare att ange.&lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt; (optional): A cookie that is passed to the custom marshaler.</source>
          <target state="translated">- &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;(valfritt): en cookie som skickas till den anpassade konverteraren.&lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the cookie to provide additional information to the marshaler.</source>
          <target state="translated">Du kan använda cookien för att ge ytterligare information till konverteraren.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the same marshaler is used to provide a number of wrappers, the cookie identifies a specific wrapper.</source>
          <target state="translated">Om samma konverteraren används för att tillhandahålla ett antal omslutningar, identifierar cookien en specifik omslutning.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cookie is passed to the <ph id="ph1">`GetInstance`</ph> method of the marshaler.</source>
          <target state="translated">Cookien skickas till den <ph id="ph1">`GetInstance`</ph> metod för konverteraren.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt; attribute identifies the custom marshaler so it can activate the appropriate wrapper.</source>
          <target state="translated">Den &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;attributet identifierar den anpassade konverteraren så att den kan aktivera lämpliga omslutning.&lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime's interop service then examines the attribute and creates the custom marshaler the first time the argument (parameter or field) needs to be marshaled.</source>
          <target state="translated">Den CLR-interop tjänsten sedan undersöker attributet och skapar anpassade konverteraren första gången argument (parameter eller fält) som behöver konverteras.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime then calls the &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt; and &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt; methods on the custom marshaler to activate the correct wrapper to handle the call.</source>
          <target state="translated">Körningen anropar sedan den &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;och &lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;metoderna för den anpassade konverteraren aktivera rätt Omslutning för att hantera anropet.&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt; &lt;/xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a Custom Marshaler    When the custom marshaler is complete, you can use it as a custom wrapper for a particular type.</source>
          <target state="translated">Använda en anpassad konverterare när den anpassade konverteraren är klar kan du använda den som en anpassad Omslutning för en viss typ.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows the definition of the <ph id="ph1">`IUserData`</ph> managed interface:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#3<ept id="p2">](~/add/codesnippet/cpp/t-system.runtime.interop_8_3.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#3<ept id="p4">](~/add/codesnippet/csharp/t-system.runtime.interop_8_3.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#3<ept id="p6">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_3.vb)</ept><ept id="p5">]</ept>       In the following example, the <ph id="ph2">`IUserData`</ph> interface uses the <ph id="ph3">`NewOldMarshaler`</ph> custom marshaler to enable unmanaged client applications to pass an <ph id="ph4">`IOld`</ph> interface to the <ph id="ph5">`DoSomeStuff`</ph> method.</source>
          <target state="translated">I följande exempel visas definitionen av den <ph id="ph1">`IUserData`</ph> hanterade gränssnittet: <bpt id="p1">[!code-cpp</bpt> <bpt id="p2">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#3<ept id="p2">](~/add/codesnippet/cpp/t-system.runtime.interop_8_3.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#3<ept id="p4">](~/add/codesnippet/csharp/t-system.runtime.interop_8_3.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#3<ept id="p6">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_3.vb)</ept> <ept id="p5">]</ept> i följande exempel på <ph id="ph2">`IUserData`</ph> gränssnitt använder den <ph id="ph3">`NewOldMarshaler`</ph> anpassad konverterare för att aktivera ohanterade klientprogram att skicka en <ph id="ph4">`IOld`</ph> gränssnitt till den <ph id="ph5">`DoSomeStuff`</ph> metoden.    </target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The managed description of the <ph id="ph1">`DoSomeStuff`</ph> method takes an <ph id="ph2">`INew`</ph> interface, as shown in the previous example, whereas the unmanaged version of <ph id="ph3">`DoSomeStuff`</ph> takes an <ph id="ph4">`IOld`</ph> interface pointer, as shown in the following example.</source>
          <target state="translated">Hanterade beskrivningen av den <ph id="ph1">`DoSomeStuff`</ph> metoden tar en <ph id="ph2">`INew`</ph> gränssnitt som visas i föregående exempel, medan den ohanterade versionen av <ph id="ph3">`DoSomeStuff`</ph> tar en <ph id="ph4">`IOld`</ph> gränssnittspekare som visas i följande exempel.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library UserLib {        [uuid(9B2BABCD-0705-11D3-A0CD-00C04FA35826)]        interface IUserData : IUnknown            HRESULT DoSomeStuff(IUnknown* pIOld);   }   ```</ph>       The type library that is generated by exporting the managed definition of <ph id="ph2">`IUserData`</ph> yields the unmanaged definition shown in this example instead of the standard definition.</source>
          <target state="translated"><ph id="ph1">```   [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library UserLib {        [uuid(9B2BABCD-0705-11D3-A0CD-00C04FA35826)]        interface IUserData : IUnknown            HRESULT DoSomeStuff(IUnknown* pIOld);   }   ```</ph>Typbiblioteket som skapas genom att exportera argumentets hanterade definition <ph id="ph2">`IUserData`</ph> ger ohanterade definitionen visas i det här exemplet i stället för standard definition.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt; attribute applied to the <ph id="ph1">`INew`</ph> argument in the managed definition of the <ph id="ph2">`DoSomeStuff`</ph> method indicates that the argument uses a custom marshaler, as the following example shows.</source>
          <target state="translated">Den &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;attribut som används i den <ph id="ph1">`INew`</ph> argumentet i hanterade definitionen av den <ph id="ph2">`DoSomeStuff`</ph> metoden anger att argumentet använder en anpassad konverterare som visas i följande exempel.&lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#4<ept id="p2">](~/add/codesnippet/cpp/t-system.runtime.interop_8_4.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#4<ept id="p4">](~/add/codesnippet/csharp/t-system.runtime.interop_8_4.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#4<ept id="p6">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_4.vb)</ept><ept id="p5">]</ept>       <bpt id="p7">[!code-cpp</bpt><bpt id="p8">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#5<ept id="p8">](~/add/codesnippet/cpp/t-system.runtime.interop_8_5.cpp)</ept><ept id="p7">]</ept>  <bpt id="p9">[!code-cs</bpt><bpt id="p10">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#5<ept id="p10">](~/add/codesnippet/csharp/t-system.runtime.interop_8_5.cs)</ept><ept id="p9">]</ept>  <bpt id="p11">[!code-vb</bpt><bpt id="p12">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#5<ept id="p12">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_5.vb)</ept><ept id="p11">]</ept>       In the previous examples, the first parameter provided to the &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt; attribute is the &lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt; enumeration value <ph id="ph1">`UnmanagedType.CustomMarshaler`</ph>.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#4<ept id="p2">](~/add/codesnippet/cpp/t-system.runtime.interop_8_4.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#4<ept id="p4">](~/add/codesnippet/csharp/t-system.runtime.interop_8_4.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#4<ept id="p6">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_4.vb)</ept><ept id="p5">]</ept><bpt id="p7">[!code-cpp</bpt><bpt id="p8">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#5<ept id="p8">](~/add/codesnippet/cpp/t-system.runtime.interop_8_5.cpp)</ept><ept id="p7">]</ept><bpt id="p9">[!code-cs</bpt><bpt id="p10">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#5<ept id="p10">](~/add/codesnippet/csharp/t-system.runtime.interop_8_5.cs)</ept><ept id="p9">]</ept><bpt id="p11">[!code-vb</bpt><bpt id="p12">[</bpt>System.Runtime.InteropServices.ICustomMarshaler#5<ept id="p12">](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_5.vb)</ept> <ept id="p11">]</ept> i föregående exempel kan den första parametern som angetts för den &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;attributet är den &lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt;uppräkningsvärdet <ph id="ph1">`UnmanagedType.CustomMarshaler`</ph>.&lt;/xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;               </target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second parameter is the &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt; field, which provides the assembly-qualified name of the custom marshaler.</source>
          <target state="translated">Den andra parametern är den &lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;som anger sammansättningen kvalificerade namnet på den anpassade konverteraren.&lt;/xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This name consists of the namespace and class of the custom marshaler (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</source>
          <target state="translated">Det här namnet består av namnområde och klass för den anpassade konverteraren (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Performs necessary cleanup of the managed data when it is no longer needed.</source>
          <target state="translated">Utför nödvändiga rensningen av hanterade data när den inte längre behövs.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The managed object to be destroyed.</source>
          <target state="translated">Hanterade objekt förstörs.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Performs necessary cleanup of the unmanaged data when it is no longer needed.</source>
          <target state="translated">Utför nödvändiga rensningen av ohanterade data när den inte längre behövs.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A pointer to the unmanaged data to be destroyed.</source>
          <target state="translated">En pekare till ohanterade data förstörs.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns the size of the native data to be marshaled.</source>
          <target state="translated">Returnerar storleken på interna data som ska konverteras.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the native data.</source>
          <target state="translated">Storlek i byte av ursprunglig data.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Converts the managed data to unmanaged data.</source>
          <target state="translated">Konverterar data hanterade till ohanterade data.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The managed object to be converted.</source>
          <target state="translated">Hanterade objekt som ska konverteras.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A pointer to the COM view of the managed object.</source>
          <target state="translated">En pekare till COM-vy över hanterade objekt.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Converts the unmanaged data to managed data.</source>
          <target state="translated">Konverterar data ohanterade till hanterade data.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A pointer to the unmanaged data to be wrapped.</source>
          <target state="translated">En pekare till ohanterade data som ska omslutas.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An object that represents the managed view of the COM data.</source>
          <target state="translated">Ett objekt som representerar hanterade visningen av COM-data.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>