<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">227bd46500f950d75c81bb57b4687ff107a4b899</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.SecurityElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67ccc5b6d53e1d9b3753e4fa2c24922cd68c8ab8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dcd1fb32ab85f861345775e9312b22f1ecc6340</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the XML object model for encoding security objects.</source>
          <target state="translated">Представляет модель объектов XML для кодирования объектов безопасности.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</source>
          <target state="translated">Этот класс должен быть облегченная реализация простой объектной модели XML для использования в системе безопасности, а не для использования в качестве общей объектной модели XML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This documentation assumes a basic knowledge of XML.</source>
          <target state="translated">В этой документации предполагается базовое представление об XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The simple XML object model for an element consists of the following parts:      -   The tag is the element name.</source>
          <target state="translated">Простой объектной модели XML для элемента состоит из следующих частей:-тег является имя элемента.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The attributes are zero or more name/value attribute pairs on the element.</source>
          <target state="translated">-Атрибуты имеют ноль или более пары имя значение атрибута в элементе.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The children are zero or more elements nested within <ph id="ph1">`&lt;tag&gt;`</ph> and <ph id="ph2">`&lt;/tag&gt;`</ph>.</source>
          <target state="translated">— Дочерние элементы — ноль или больше элементов, вложенные в <ph id="ph1">`&lt;tag&gt;`</ph> и <ph id="ph2">`&lt;/tag&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is strongly suggested that attribute based XML representation is used to express security elements and their values.</source>
          <target state="translated">Настоятельно рекомендуется использование XML-представление на основе атрибутов для описания элементов безопасности и их значений.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means properties of an element are expressed as attributes and property values are expressed as attribute values.</source>
          <target state="translated">Это означает, что свойства элемента выражаются в виде атрибутов и значений свойств выражаются в виде значения атрибута.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid nesting text within tags.</source>
          <target state="translated">Избегайте вложения текста внутри тегов.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> representation a representation of type <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> is usually available.</source>
          <target state="translated">Для любого <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> представление в представление типа <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> обычно доступен.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</source>
          <target state="translated">С помощью этого представления XML на основе атрибутов повышает удобочитаемость и облегчает переносимость WMI полученной сериализации XML.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attribute name must be one character or longer, and cannot be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Имя атрибута должен быть один или несколько знаков больше времени и не может быть <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If element-based value representation is used, elements with a text string that is <ph id="ph1">`null`</ph> are represented in the <ph id="ph2">`&lt;tag/&gt;`</ph> form; otherwise, text is delimited by the <ph id="ph3">`&lt;tag&gt;`</ph> and <ph id="ph4">`&lt;/tag&gt;`</ph> tokens.</source>
          <target state="translated">Если используется представление значений на основе элементов, элементы с текстом строка, являющаяся <ph id="ph1">`null`</ph> представлены в <ph id="ph2">`&lt;tag/&gt;`</ph> форме; в противном случае текст отделяется <ph id="ph3">`&lt;tag&gt;`</ph> и <ph id="ph4">`&lt;/tag&gt;`</ph> маркеров.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both forms can be combined with attributes, which are shown if present.</source>
          <target state="translated">Обе формы можно комбинировать с атрибутами, которые отображаются при его наличии.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tags, attributes, and text of elements, if present, are always case-sensitive.</source>
          <target state="translated">Теги, атрибуты и текст элементов, если он имеется, всегда с учетом регистра.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML form contains quotations and escapes where necessary.</source>
          <target state="translated">Форма XML содержит кавычки и escape-последовательности при необходимости.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>String values that include characters invalid for use in XML result in an &lt;xref:System.ArgumentException&gt;.</source>
          <target state="translated">Строковые значения, которые содержат символы, недопустимые для использования в результирующем XML в &lt;xref:System.ArgumentException&gt;.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>These rules apply to all properties and methods.</source>
          <target state="translated">Эти правила применяются ко всем свойствам и методам.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек для повышения производительности, допустимость знаков проверяется только при кодировании элемента в виде текста XML, а не для каждого набора, свойства или метода.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Static methods allow explicit checking where needed.</source>
          <target state="translated">Статические методы позволяют явную проверку по мере необходимости.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified tag.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с указанным тегом.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`tag`</ph> parameter must consist of a valid XML tag name.</source>
          <target state="translated"><ph id="ph1">`tag`</ph> Параметр должен содержать допустимое имя тега XML.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">Используйте &lt;xref:System.Security.SecurityElement.Escape%2A&gt;для удаления недопустимых символов из строки.&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The tag name of an XML element.</source>
          <target state="translated">Имя тега элемента XML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid in XML.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">tag</ph> <ept id="p1">&lt;/code&gt;</ept> Параметр недопустим в XML.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified tag and text.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса с указанного тега и текстом.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`text`</ph> parameter is <ph id="ph2">`null`</ph> this constructor produces an element identical to the default constructor.</source>
          <target state="translated">Если <ph id="ph1">`text`</ph> параметр <ph id="ph2">`null`</ph> этот конструктор создает тот же элемент, конструктор по умолчанию.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The tag name of the XML element.</source>
          <target state="translated">Имя тега элемента XML.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The text content within the element.</source>
          <target state="translated">Текстовое содержимое в элементе.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">text</ph><ept id="p2">&lt;/code&gt;</ept> parameter is invalid in XML.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">tag</ph> <ept id="p1">&lt;/code&gt;</ept> Параметр или <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">text</ph> <ept id="p2">&lt;/code&gt;</ept> параметр недопустим в XML.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Adds a name/value attribute to an XML element.</source>
          <target state="translated">Добавляет имя/значение атрибута XML-элемента.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Names and values in attributes should only contain valid XML attribute characters.</source>
          <target state="translated">Имена и значения атрибутов должны содержать только допустимые символы XML-атрибута.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>XML attribute names must be unique.</source>
          <target state="translated">Имена атрибутов XML должны быть уникальными.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">Используйте &lt;xref:System.Security.SecurityElement.Escape%2A&gt;для удаления недопустимых символов из строки.&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">Не поддерживается для строки в кавычках, поэтому строки для пары "имя значение" не должны содержать кавычки или другие символы, требующие заключения в кавычки.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name of the attribute.</source>
          <target state="translated">Имя атрибута.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The value of the attribute.</source>
          <target state="translated">Значение атрибута.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> parameter is invalid in XML.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> Параметр или <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p2">&lt;/code&gt;</ept> параметр недопустим в XML.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-or-       An attribute with the name specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter already exists.</source>
          <target state="translated">- или - атрибут с именем, заданным <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> уже существует.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Adds a child element to the XML element.</source>
          <target state="translated">Добавляет дочерний элемент в XML-элемент.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child element is added following any previously existing child elements.</source>
          <target state="translated">Дочерний элемент добавляется после всех существующих дочерних элементов.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The child element to add.</source>
          <target state="translated">Добавляемый дочерний элемент.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">child</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">child</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Finds an attribute by name in an XML element.</source>
          <target state="translated">Находит атрибут с заданным именем в элементе XML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>With XML as follows, <ph id="ph1">`Attribute("B")`</ph> would return "456".</source>
          <target state="translated">С помощью XML следующим образом: <ph id="ph1">`Attribute("B")`</ph> вернет значение «456».</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name of the attribute for which to search.</source>
          <target state="translated">Имя атрибута, который требуется найти.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The value associated with the named attribute, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no attribute with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p2">&lt;/code&gt;</ept> exists.</source>
          <target state="translated">Значение, связанное с именованного атрибута или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> если атрибута с <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p2">&lt;/code&gt;</ept> существует.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the attributes of an XML element as name/value pairs.</source>
          <target state="translated">Возвращает или задает атрибуты элемента XML в виде пар «имя значение».</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each attribute is stored in the &lt;xref:System.Collections.Hashtable&gt; as a name/value pair.</source>
          <target state="translated">Каждый атрибут хранится в &lt;xref:System.Collections.Hashtable&gt;как пара имя значение.&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Names and values in attributes should contain only valid XML attribute characters.</source>
          <target state="translated">Имена и значения атрибутов должны содержать только допустимые символы атрибута XML.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">Используйте &lt;xref:System.Security.SecurityElement.Escape%2A&gt;для удаления недопустимых символов из строки.&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">Не поддерживается для строки в кавычках, поэтому строки для пары "имя значение" не должны содержать кавычки или другие символы, требующие заключения в кавычки.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the attribute values of the XML element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Объекте и значения атрибута элемента XML.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The name or value of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is invalid.</source>
          <target state="translated">Имя или значение <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> недопустимый объект.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name is not a valid XML attribute name.</source>
          <target state="translated">Имя не является допустимым именем атрибута XML.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets the array of child elements of the XML element.</source>
          <target state="translated">Возвращает или задает массив дочерних элементов элемента XML.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.Security.SecurityElement&gt; contains both &lt;xref:System.Security.SecurityElement.Text%2A&gt; and Children, &lt;xref:System.Security.SecurityElement.Text%2A&gt; will appear first.</source>
          <target state="translated">Если &lt;xref:System.Security.SecurityElement&gt;содержит оба &lt;xref:System.Security.SecurityElement.Text%2A&gt;и дочерними элементами, &lt;xref:System.Security.SecurityElement.Text%2A&gt;будут отображаться первыми.&lt;/xref:System.Security.SecurityElement.Text%2A&gt; &lt;/xref:System.Security.SecurityElement.Text%2A&gt; &lt;/xref:System.Security.SecurityElement&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The ordered child elements of the XML element as security elements.</source>
          <target state="translated">Упорядоченные дочерние элементы элемента XML в виде элементов безопасности.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A child of the XML parent node is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Дочерний элемент родительского узла XML равен <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Creates and returns an identical copy of the current <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Создает и возвращает идентичную копию текущего <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекта.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The copy includes both the &lt;xref:System.Security.SecurityElement.Children%2A&gt; and &lt;xref:System.Security.SecurityElement.Attributes%2A&gt; properties.</source>
          <target state="translated">Копия включает в себя &lt;xref:System.Security.SecurityElement.Children%2A&gt;и &lt;xref:System.Security.SecurityElement.Attributes%2A&gt;Свойства.&lt;/xref:System.Security.SecurityElement.Attributes%2A&gt; &lt;/xref:System.Security.SecurityElement.Children%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A copy of the current <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Копия текущего <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекта.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Compares two XML element objects for equality.</source>
          <target state="translated">Сравнивает два объекта элементов XML, для проверки на равенство.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are child elements, comparison extends recursively to them.</source>
          <target state="translated">При наличии дочерних элементов сравнение распространяется рекурсивно к ним.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no support for comparing different XML representations of the same characters.</source>
          <target state="translated">Сравнение различных XML-представлений одинаковых знаков не поддерживается.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An XML element object to which to compare the current XML element object.</source>
          <target state="translated">Объект элемента XML с которым сравнивается текущий объект элемента XML.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p2">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если тег, имена атрибутов и значений, дочерние элементы и текстовые поля текущего элемента XML идентичны их аналогами в <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">other</ph> <ept id="p2">&lt;/code&gt;</ept> параметр; в противном случае <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Replaces invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">Заменяет недопустимые XML-символы в строке с их допустимыми эквивалентами в XML.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The string within which to escape invalid characters.</source>
          <target state="translated">Строка, в которой выполняется обработка недопустимых символов.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The input string with invalid characters replaced.</source>
          <target state="translated">Входная строка с замененными недопустимыми символами.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Creates a security element from an XML-encoded string.</source>
          <target state="translated">Создает элемент безопасности на основе строку в формате XML.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The XML-encoded string from which to create the security element.</source>
          <target state="translated">Строка XML-кодировке из которой нужно создать элемент безопасности.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> created from the XML.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Security.SecurityElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> создан из XML.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xml&lt;/code&gt;</ph> contains one or more single quotation mark characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xml&lt;/code&gt;</ph>содержит один или несколько знаков кавычек.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xml&lt;/code&gt;</ph> is<bpt id="p1">&lt;xref uid="langword_csharp_ null" name=" null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xml&lt;/code&gt;</ph>is<bpt id="p1">&lt;xref uid="langword_csharp_ null" name=" null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Determines whether a string is a valid attribute name.</source>
          <target state="translated">Определяет, является ли строка допустимым именем атрибута.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">Этот метод можно использовать для проверки атрибута перед его добавлением в элемент безопасности.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The attribute name to test for validity.</source>
          <target state="translated">Имя атрибута, допустимость которого требуется проверить.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p2">&lt;/code&gt;</ept> parameter is a valid XML attribute name; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p2">&lt;/code&gt;</ept> параметр является допустимым XML-атрибут именем; в противном случае — <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Determines whether a string is a valid attribute value.</source>
          <target state="translated">Определяет, является ли строка допустимым значением атрибута.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">Этот метод можно использовать для проверки атрибута перед его добавлением в элемент безопасности.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The attribute value to test for validity.</source>
          <target state="translated">Значение атрибута, допустимость которого требуется проверить.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> parameter is a valid XML attribute value; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> является допустимым значением атрибута XML; в противном случае <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Determines whether a string is a valid tag.</source>
          <target state="translated">Определяет, является ли строка допустимым тегом.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be used to test a &lt;xref:System.Security.SecurityElement.Tag%2A&gt; before setting it.</source>
          <target state="translated">Это может использоваться для тестирования, &lt;xref:System.Security.SecurityElement.Tag%2A&gt;Прежде чем устанавливать его.&lt;/xref:System.Security.SecurityElement.Tag%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The tag to test for validity.</source>
          <target state="translated">Тег, допустимость которого требуется проверить.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p2">&lt;/code&gt;</ept> parameter is a valid XML tag; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">tag</ph> <ept id="p2">&lt;/code&gt;</ept> параметр является допустимым тегом XML; в противном случае <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Determines whether a string is valid as text within an XML element.</source>
          <target state="translated">Определяет, является ли строка допустимым как текст внутри элемента XML.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used to test &lt;xref:System.Security.SecurityElement.Text%2A&gt; before setting it.</source>
          <target state="translated">Этот метод можно использовать для тестирования, &lt;xref:System.Security.SecurityElement.Text%2A&gt;Прежде чем устанавливать его.&lt;/xref:System.Security.SecurityElement.Text%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The text to test for validity.</source>
          <target state="translated">Текст, допустимость которого требуется проверить.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">text</ph><ept id="p2">&lt;/code&gt;</ept> parameter is a valid XML text element; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">text</ph> <ept id="p2">&lt;/code&gt;</ept> параметр является допустимым текстовым элементом XML; в противном случае <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Finds a child by its tag name.</source>
          <target state="translated">Находит дочерний элемент по имени тега.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>With XML as follows, <ph id="ph1">`SearchForChildByTag("second")`</ph> would return the child element <ph id="ph2">`&lt;second&gt;`</ph>.</source>
          <target state="translated">С помощью XML следующим образом: <ph id="ph1">`SearchForChildByTag("second")`</ph> возвращает дочерний элемент <ph id="ph2">`&lt;second&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">Тег, который требуется найти в его дочерних элементах.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The first child XML element with the specified tag value, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no child element with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p2">&lt;/code&gt;</ept> exists.</source>
          <target state="translated">Первый дочерний элемент XML с указанным значением тега, или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Если дочернего элемента с <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">tag</ph> <ept id="p2">&lt;/code&gt;</ept> существует.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tag</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Finds a child by its tag name and returns the contained text.</source>
          <target state="translated">Находит дочерний элемент по имени тега и возвращает содержащийся текст.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is equivalent to the following:       <bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Security.SecurityElement#1<ept id="p2">](~/add/codesnippet/visualbasic/m-system.security.securi_0_1.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Security.SecurityElement#1<ept id="p4">](~/add/codesnippet/cpp/m-system.security.securi_0_1.cpp)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>System.Security.SecurityElement#1<ept id="p6">](~/add/codesnippet/csharp/m-system.security.securi_0_1.cs)</ept><ept id="p5">]</ept>       With XML as follows, <ph id="ph1">`SearchForTextOfTag("second")`</ph> would return "text2".</source>
          <target state="translated">Этот метод эквивалентен следующему: <bpt id="p1">[!code-vb</bpt> <bpt id="p2">[</bpt>System.Security.SecurityElement#1<ept id="p2">](~/add/codesnippet/visualbasic/m-system.security.securi_0_1.vb)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Security.SecurityElement#1<ept id="p4">](~/add/codesnippet/cpp/m-system.security.securi_0_1.cpp)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>System.Security.SecurityElement#1<ept id="p6">](~/add/codesnippet/csharp/m-system.security.securi_0_1.cs)</ept> <ept id="p5">]</ept> с XML, как показано ниже, <ph id="ph1">`SearchForTextOfTag("second")`</ph> вернет «Текст2».    </target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">Тег, который требуется найти в его дочерних элементах.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The text contents of the first child element with the specified tag value.</source>
          <target state="translated">Текстовое содержимое первый дочерний элемент с указанным значением тега.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;tag&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;tag&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets or sets the tag name of an XML element.</source>
          <target state="translated">Возвращает или задает имя тега элемента XML.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>In XML, the tag appears in the script as appears below:      <ph id="ph1">```   &lt;tag attributes&gt;text&lt;/tag&gt;   ```</ph>       If this element has child elements, the children will replace <ph id="ph2">`text`</ph>.</source>
          <target state="translated">В XML-тег отображается в скрипте, как указано ниже: <ph id="ph1">```   &lt;tag attributes&gt;text&lt;/tag&gt;   ```</ph> Если этот элемент содержит дочерние элементы, последние заменяют <ph id="ph2">`text`</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assign only valid XML tag strings to this property.</source>
          <target state="translated">Присвойте этому свойству только допустимые строки тегов XML.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">Используйте &lt;xref:System.Security.SecurityElement.Escape%2A&gt;для удаления недопустимых символов из строки.&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The tag name of an XML element.</source>
          <target state="translated">Имя тега элемента XML.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The tag is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The tag is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The tag is not valid in XML.</source>
          <target state="translated">Тег не является допустимым в XML.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets the text within an XML element.</source>
          <target state="translated">Возвращает или задает текст внутри элемента XML.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text should not contain XML special characters.</source>
          <target state="translated">Текст не должен содержать специальные символы XML.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Security.SecurityElement.Escape%2A&gt; to remove invalid characters from the string.</source>
          <target state="translated">Используйте &lt;xref:System.Security.SecurityElement.Escape%2A&gt;для удаления недопустимых символов из строки.&lt;/xref:System.Security.SecurityElement.Escape%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.Security.SecurityElement&gt; contains both Text and &lt;xref:System.Security.SecurityElement.Children%2A&gt;, Text will appear first.</source>
          <target state="translated">Если &lt;xref:System.Security.SecurityElement&gt;оба текстом и &lt;xref:System.Security.SecurityElement.Children%2A&gt;, текст отобразится первым.&lt;/xref:System.Security.SecurityElement.Children%2A&gt; &lt;/xref:System.Security.SecurityElement&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The value of the text within an XML element.</source>
          <target state="translated">Значение текста внутри элемента XML.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The text is not valid in XML.</source>
          <target state="translated">Недопустимый текст в формате XML.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Produces a string representation of an XML element and its constituent attributes, child elements, and text.</source>
          <target state="translated">Создает строковое представление XML-элемента и его составляющие атрибуты, дочерние элементы и текст.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful in debugging to see the XML representation of the element.</source>
          <target state="translated">Этот метод полезен при отладке, чтобы увидеть XML-представление элемента.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The XML element and its contents.</source>
          <target state="translated">XML-элемент и его содержимое.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>