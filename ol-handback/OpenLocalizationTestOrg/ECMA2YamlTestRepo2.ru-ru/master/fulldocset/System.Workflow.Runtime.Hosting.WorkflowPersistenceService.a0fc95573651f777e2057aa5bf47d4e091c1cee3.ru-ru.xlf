<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5df3b73944a7d160edbd44b35970e6bd7f93cf90</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.Runtime.Hosting.WorkflowPersistenceService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">029237110e90b09222e7624b0b0d145bb806e6b5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f77726f53fd8bc45fbec79dccae467e3296eea89</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class from which all persistence services are derived.</source>
          <target state="translated">Абстрактный базовый класс, производными от которого все сохраняемости являются службы.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>При возникновении определенных условий во время выполнения рабочего процесса, механизм среды выполнения рабочих процессов сохраняет сведения о состоянии экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls &lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName&gt; on the workflow instance, or when a workflow instance is terminated or finishes.</source>
          <target state="translated">Постоянное хранение может возникнуть, например, при завершении атомарной транзакции при освобождении экземпляра рабочего процесса, когда основное приложение вызывает &lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName&gt;в экземпляре рабочего процесса или если экземпляр рабочего процесса, прерывании или завершении.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</source>
          <target state="translated">Когда семантика подсистемы среды выполнения рабочего процесса определяют, что необходимость появления постоянного хранения, подсистема среды выполнения рабочего процесса вызывает методы, предоставленные службой постоянного хранения, чтобы сохранить сведения о состоянии экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</source>
          <target state="translated">Аналогично когда механизм среды выполнения рабочего процесса требуется восстановление ранее сохраненного экземпляра рабочего процесса, он вызывает методы, предоставленные службой постоянного хранения, чтобы загрузить сведения о состоянии.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine handles all the semantics regarding when to perform persistence.</source>
          <target state="translated">Механизм среды выполнения рабочих процессов обрабатывает всю семантику относительно времени выполнения сохранения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The persistence service handles actually saving and loading the workflow state information to or from a data store.</source>
          <target state="translated">Служба постоянного хранения обрабатывает фактически сохранение и загрузка информации о состоянии рабочего процесса или из хранилища данных.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a persistence service by deriving a class from the WorkflowPersistenceService class.</source>
          <target state="translated">Службы постоянного хранения можно создать путем создания производного класса от класса служба WorkflowPersistenceService.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add your persistence service to the workflow runtime engine by calling &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; or by making an appropriate entry in the application configuration file.</source>
          <target state="translated">Служба постоянного хранения можно добавить в подсистему среды выполнения рабочих процессов путем вызова &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;или путем создания соответствующей записи в файле конфигурации приложения.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; should only contain one persistence service.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;Должна содержать только одну службу постоянного хранения.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Workflow Foundation provides the &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt; class, an out-of-box persistence service, which you can use as is or extend.</source>
          <target state="translated">Windows Workflow Foundation предоставляет &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;класса службы сохраняемости out-of-box, который можно использовать как есть или расширить.&lt;/xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</source>
          <target state="translated">Механизм среды выполнения рабочих процессов имеет семантику для блокировки сведений о состоянии рабочего процесса для использования в средах, где службы постоянного хранения, выполняемых в разных процессах, могут иметь доступ к одному хранилищу данных.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WorkflowPersistenceService class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt; to unlock previously locked workflow state information.</source>
          <target state="translated">Служба WorkflowPersistenceService класс предоставляет возможности для поддержки этой функции подсистемы среды выполнения рабочих процессов, предоставляя параметр для &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;, указывающее, следует ли разблокировать сведения о состоянии экземпляра рабочего процесса в хранилище данных и предоставление метода &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;для разблокирования ранее заблокированных сведений о состоянии рабочего процесса.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a persistence service that implements locking, a call to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt; should lock the state information for a workflow instance.</source>
          <target state="translated">В службы постоянного хранения, реализующей блокировку, вызов &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;должен заблокировать сведения о состоянии экземпляра рабочего процесса.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your persistence service should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; if it fails to save state information to its data store or load state information from its data store.</source>
          <target state="translated">Служба постоянного хранения должна создать исключение &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;Если ей не удается сохранить сведения о состоянии в хранилище данных или загрузить сведения о состоянии из хранилища данных.&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine expects this behavior.</source>
          <target state="translated">Механизм среды выполнения рабочих процессов предполагает следующее поведение.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A batching mechanism is provided for services that use a durable store to save workflow state information.</source>
          <target state="translated">Механизм пакетирования предоставляется для служб, использующих постоянное хранилище для сохранения сведений о состоянии рабочего процесса.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</source>
          <target state="translated">Очень важно в этих случаях для поддержания согласованности между постоянным хранилищем, используемый службой постоянного хранения и внутренним состоянием подсистемы среды выполнения рабочего процесса.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add functionality defined by the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface to your service, and then participate in workflow transaction batching provided by the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; by adding changes to your data store as work items to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;.</source>
          <target state="translated">Можно добавить функциональные возможности определяются &lt;xref:System.Workflow.Runtime.IPendingWork&gt;интерфейс к службе, а затем принять участие в пакетировании транзакции рабочего процесса, предоставляемые &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;путем добавления изменения в хранилище данных в виде рабочих элементов на &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; &lt;/xref:System.Workflow.Runtime.IPendingWork&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The durable store itself should implement the &lt;xref:System.Transactions.IEnlistmentNotification&gt; interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</source>
          <target state="translated">Само постоянное хранилище должно реализовать &lt;xref:System.Transactions.IEnlistmentNotification&gt;интерфейс, чтобы сведения о рабочем процессе не сохраняются неправильным образом в случае отката транзакции.&lt;/xref:System.Transactions.IEnlistmentNotification&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt; or &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;.</source>
          <target state="translated">Дополнительные сведения см. в разделе &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;или &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowPersistenceService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">При реализации в производном классе инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowPersistenceService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> класса.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves the serialized default form of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Извлекает сериализованные по умолчанию форме <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose serialized form is requested.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Сериализованная форма которого запрашивается.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The serialized default form of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">По умолчанию сериализованной форме <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Indicates whether the given activity is blocked.</source>
          <target state="translated">Указывает, заблокирован ли данное действие.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the given activity is blocked; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если данное действие блокируется. в противном случае <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Retrieves the termination or suspend information of the given activity.</source>
          <target state="translated">Извлекает завершение или приостановить сведения данного действия.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the termination or suspend information.</source>
          <target state="translated">Объект &lt;xref:System.String&gt;, содержащий завершение или приостановить сведения.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Retrieves the status of the workflow.</source>
          <target state="translated">Получает сведения о состоянии рабочего процесса.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowStatus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that denotes the status of the workflow.</source>
          <target state="translated">Объект <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowStatus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение перечисления, обозначающее состояние рабочего процесса.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, loads the specified completed scope back into memory.</source>
          <target state="translated">При реализации в производном классе загружает заданную завершенную область обратно в память.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine uses LoadCompletedContextActivity to implement compensation.</source>
          <target state="translated">Механизм среды выполнения рабочих процессов использует LoadCompletedContextActivity для реализации компенсации.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must restore an identical copy of the completed scope.</source>
          <target state="translated">Необходимо восстановить идентичную копию завершенной области.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, you must restore a valid &lt;xref:System.IO.Stream&gt; from your representation of the completed scope in the data store.</source>
          <target state="translated">Чтобы сделать это, необходимо восстановить допустимый &lt;xref:System.IO.Stream&gt;из представления завершенной области в данных хранения.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then you must pass this &lt;xref:System.IO.Stream&gt; to one of the overloaded methods of &lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; to perform deserialization of the scope.</source>
          <target state="translated">Затем необходимо передать этот &lt;xref:System.IO.Stream&gt;к одному из перегруженных методов &lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;для выполнения десериализации области.&lt;/xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your persistence service cannot load the completed scope from its data store, it should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate message.</source>
          <target state="translated">Если служба постоянного хранения не может загрузить завершенную область из хранилища данных, он должен вызывать &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;с соответствующим сообщением.&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the completed scope.</source>
          <target state="translated">&lt;xref:System.Guid&gt;Завершенной области.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the activity that encloses the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Представляющий действие, заключающее завершенную область.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Представляющий завершенную область.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, loads the specified state of the workflow instance back into memory.</source>
          <target state="translated">При реализации в производном классе загружает состояние заданного экземпляра рабочего процесса, обратно в память.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must restore an identical copy of the activity.</source>
          <target state="translated">Необходимо восстановить идентичную копию действия.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, you must restore a valid &lt;xref:System.IO.Stream&gt; from your representation of the workflow instance in the data store; then you must pass this &lt;xref:System.IO.Stream&gt; to one of the overloaded &lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; methods to deserialize the workflow instance state.</source>
          <target state="translated">Чтобы сделать это, необходимо восстановить допустимый &lt;xref:System.IO.Stream&gt;из представления экземпляра рабочего процесса в хранилище данных; затем необходимо передать этот &lt;xref:System.IO.Stream&gt;к одному из перегруженных &lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;методы для рабочего процесса десериализации состояния экземпляра.&lt;/xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; &lt;/xref:System.IO.Stream&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your persistence service cannot load the workflow instance state from its data store, it should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate message.</source>
          <target state="translated">Если служба постоянного хранения не может загрузить состояние экземпляра рабочего процесса из хранилища данных, он должен вызывать &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;с соответствующим сообщением.&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</source>
          <target state="translated">Механизм среды выполнения рабочих процессов реализует семантику блокировки для ограничения доступа к состоянию экземпляра рабочего процесса, который сохраняется в хранилище данных.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be accessed by persistence services that run in multiple processes.</source>
          <target state="translated">Это может осуществляться службы постоянного хранения, выполняемых в нескольких процессах.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">Семантика блокировки разработана, чтобы предотвратить службы постоянного хранения, выполняемых в двух разных процессах, от загрузки одного экземпляра рабочего процесса в память, в то же время.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</source>
          <target state="translated">В зависимости от типа среды, что служба сохраняемости разработана для поддержки, можно ли для поддержки этой функции.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a &lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.</source>
          <target state="translated">При выборе поддержки семантики блокировки среды выполнения, и это состояние экземпляра рабочего процесса ранее был заблокирован другим процессом, следует создать &lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, you should lock access to the workflow instance state in your data store.</source>
          <target state="translated">В противном случае необходимо заблокировать доступ к состоянию экземпляра рабочего процесса в хранилище данных.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow instance state can be unlocked by a call to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt; or a call to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; with the unlock parameter set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Состояние экземпляра рабочего процесса можно разблокировать с помощью вызова &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;или вызов &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;с параметром unlock в <ph id="ph1">`true`</ph>.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the root activity of the workflow instance.</source>
          <target state="translated">&lt;xref:System.Guid&gt;Корневого действия экземпляра рабочего процесса.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the root activity of the workflow instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Представляющий корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Restores the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from its serialized form.</source>
          <target state="translated">Восстанавливает <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> из сериализованной формы.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The serialized form of <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Сериализованная форма <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The outer <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, containing the <bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to restore.</source>
          <target state="translated">Внешний <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, который содержит <bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> для восстановления.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The restored <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Восстановленный <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, saves the specified completed scope to a data store.</source>
          <target state="translated">При реализации в производном классе сохраняет заданную завершенную область в хранилище данных.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</source>
          <target state="translated">Механизм среды выполнения рабочих процессов сохраняет состояние действий завершенной области для реализации компенсации.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call one of the overloaded &lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt; methods to serialize <ph id="ph1">`activity`</ph> into a &lt;xref:System.IO.Stream&gt;; you may then choose to additionally process the &lt;xref:System.IO.Stream&gt; before writing it to your data store.</source>
          <target state="translated">Следует вызвать одну из перегруженных &lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;методы для сериализации <ph id="ph1">`activity`</ph> в &lt;xref:System.IO.Stream&gt;; затем можно дополнительно обработать &lt;xref:System.IO.Stream&gt;перед записью в хранилище данных.&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.IO.Stream&gt; &lt;/xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when the workflow runtime engine calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;, you must restore an identical copy of the activity.</source>
          <target state="translated">Тем не менее, когда механизм среды выполнения рабочего процесса вызывает метод &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;, необходимо восстановить идентичную копию действия.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</source>
          <target state="translated">Необходимо связать завершенную область с его включающим экземпляром рабочего процесса, чтобы пометить области в качестве ненужной в хранилище данных, когда завершается экземпляр рабочего процесса, либо является символом.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should also save the &lt;xref:System.Guid&gt; of the workflow instance that is associated with the completed scope; this can be obtained from the &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt; property of the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with <ph id="ph1">`activity`</ph>.</source>
          <target state="translated">Таким образом, также необходимо сохранить &lt;xref:System.Guid&gt;экземпляра рабочего процесса, связанный с завершенной областью; это может быть получен из &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;свойство &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;связанных с <ph id="ph1">`activity`</ph>.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt; &lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt; takes the &lt;xref:System.Guid&gt; of the completed scope as a parameter.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;принимает &lt;xref:System.Guid&gt;завершенной области в качестве параметра.&lt;/xref:System.Guid&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must also save the &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt; property associated with <ph id="ph1">`activity`</ph>.</source>
          <target state="translated">Таким образом, необходимо также сохранить &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;свойство, связанное с <ph id="ph1">`activity`</ph>.&lt;/xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be referenced through the &lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt; field of <ph id="ph1">`activity`</ph>.</source>
          <target state="translated">Это свойство может ссылаться через &lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;поле <ph id="ph1">`activity`</ph>.&lt;/xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">При реализации службы постоянного хранения, использующей постоянное хранилище для поддержки целостности с внутренним состоянием подсистемы среды выполнения рабочих процессов необходимо принять участие в транзакции рабочего процесса пакетной обработки, чтобы отложить фактическую запись в постоянное хранилище до точки фиксации рабочего процесса.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>To participate in batching, add a work item to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt; property that represents the pending changes to the database, and implement the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface in your persistence service.</source>
          <target state="translated">Для участия в пакетировании добавьте рабочий элемент для &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;свойство, представляющее ожидающие изменения в базу данных и реализуйте &lt;xref:System.Workflow.Runtime.IPendingWork&gt;интерфейса в службе постоянного хранения.&lt;/xref:System.Workflow.Runtime.IPendingWork&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you cannot save the completed scope to your data store, you should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate error message.</source>
          <target state="translated">Если завершенную область невозможно сохранить в хранилище данных, то следует вызвать &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;с соответствующее сообщение об ошибке.&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Представляющий завершенную область.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, saves the workflow instance state to a data store.</source>
          <target state="translated">При реализации в производном классе сохраняет состояние экземпляра рабочего процесса в хранилище данных.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call one of the overloaded &lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt; methods to serialize <ph id="ph1">`rootActivity`</ph> into a &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">Следует вызвать одну из перегруженных &lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;методы для сериализации <ph id="ph1">`rootActivity`</ph> в &lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then choose to additionally process the &lt;xref:System.IO.Stream&gt; before writing it to your data store.</source>
          <target state="translated">Затем можно выбрать дополнительную обработку &lt;xref:System.IO.Stream&gt;перед записью в хранилище данных.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when the workflow runtime engine calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;, you must restore an identical copy of the root activity.</source>
          <target state="translated">Тем не менее, когда механизм среды выполнения рабочего процесса вызывает метод &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;, необходимо восстановить идентичную копию корневого действия.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you cannot save the workflow instance state to your data store, you should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate error message.</source>
          <target state="translated">Если не удается сохранить состояние экземпляра рабочего процесса в хранилище данных, то следует вызвать &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;с соответствующее сообщение об ошибке.&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</source>
          <target state="translated">Механизм среды выполнения рабочих процессов обеспечивает семантику блокировки для ограничения доступа к состоянию экземпляра рабочего процесса, который сохраняется в хранилище данных.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</source>
          <target state="translated">Это может осуществляться с помощью служб постоянного хранения, выполняемых в нескольких узлах и указывающих на одно хранилище данных.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">Семантика блокировки разработана, чтобы предотвратить службы постоянного хранения, выполняемых в двух средах выполнения другой рабочий процесс от загрузки одного экземпляра рабочего процесса в память в то же время.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</source>
          <target state="translated">В зависимости от типа среды, в которой служба постоянного хранения предназначен для поддержки можно ли для поддержки этой функции.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a &lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.</source>
          <target state="translated">При выборе поддержки семантики блокировки среды выполнения, если служба постоянного хранения пытается сохранить состояние экземпляра рабочего процесса, который ранее был заблокирован другой службой постоянного хранения, следует создать &lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`unlock`</ph> is <ph id="ph2">`true`</ph>, you should unlock access to the workflow instance state after you save it.</source>
          <target state="translated">Если <ph id="ph1">`unlock`</ph> — <ph id="ph2">`true`</ph>, необходимо разблокировать доступ к состоянию экземпляра рабочего процесса после его сохранения.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt; takes the &lt;xref:System.Guid&gt; of the workflow instance as a parameter.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;принимает &lt;xref:System.Guid&gt;экземпляра рабочего процесса в качестве параметра.&lt;/xref:System.Guid&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should save this &lt;xref:System.Guid&gt;.</source>
          <target state="translated">Таким образом следует сохранить &lt;xref:System.Guid&gt;.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use this &lt;xref:System.Guid&gt; to associate the workflow instance with the saved states of its completed scopes.</source>
          <target state="translated">Можно также использовать &lt;xref:System.Guid&gt;Чтобы связать экземпляр рабочего процесса с сохраненными состояниями завершенных областей.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</source>
          <target state="translated">Это необходимо сделать, поскольку необходимо иметь возможность пометить эти завершенные области в качестве ненужных при завершении экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine calls SaveWorkflowInstanceState a final time when the workflow instance is completed or terminated.</source>
          <target state="translated">Механизм среды выполнения рабочего процесса вызывает SaveWorkflowInstanceState последний раз при завершении или прерывании экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt; is equal to &lt;xref:System.Workflow.Runtime.WorkflowStatus&gt; or &lt;xref:System.Workflow.Runtime.WorkflowStatus&gt;, you can safely delete the workflow instance and all its associated completed scopes from your data store.</source>
          <target state="translated">Таким образом Если &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;равен &lt;xref:System.Workflow.Runtime.WorkflowStatus&gt;или &lt;xref:System.Workflow.Runtime.WorkflowStatus&gt;, можно безопасно удалить экземпляр рабочего процесса и все связанные завершенные области из хранилища данных.&lt;/xref:System.Workflow.Runtime.WorkflowStatus&gt; &lt;/xref:System.Workflow.Runtime.WorkflowStatus&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can subscribe to the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt; or &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt; events to determine when it is safe to delete records associated with the workflow instance.</source>
          <target state="translated">Кроме того, можно подписаться на &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;или &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;событий, чтобы определить, когда можно безопасно удалить записи, связанные с экземпляром рабочего процесса.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether you actually delete the records from your data store depends on your implementation.</source>
          <target state="translated">Фактическое удаление записей из хранилища данных зависит от реализации.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">При реализации службы постоянного хранения, использующей постоянное хранилище, затем для поддержания согласованности с внутренним состоянием подсистемы среды выполнения рабочих процессов необходимо принять участие в транзакции рабочего процесса пакетной обработки, чтобы отложить фактическую запись в постоянное хранилище до точки фиксации рабочего процесса.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>To participate in batching, add a work item that represents the pending changes to your durable store to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt; property, and implement the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface in your persistence service.</source>
          <target state="translated">Для участия в пакетировании добавьте рабочий элемент, представляющий ожидающие изменения в постоянное хранилище для &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;Свойства, а затем реализовать &lt;xref:System.Workflow.Runtime.IPendingWork&gt;интерфейса в службе постоянного хранения.&lt;/xref:System.Workflow.Runtime.IPendingWork&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the workflow instance should not be locked; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the workflow instance should be locked.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если экземпляр рабочего процесса не должен быть заблокирован; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> блокированный экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Determines whether a workflow should be unloaded when idle.</source>
          <target state="translated">Определяет, является ли рабочий процесс будет выгружен при ожидании.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , Представляющий завершенную область.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the workflow runtime engine unloads the specified workflow when it becomes idle.</source>
          <target state="translated">Если <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, механизм среды выполнения рабочих процессов Выгружает заданный тип рабочего процесса при его освобождении.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, unlocks the workflow instance state.</source>
          <target state="translated">При переопределении в производном классе разблокирует состояние экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is abstract, so it does not contain a default implementation on locking and unlocking.</source>
          <target state="translated">Этот метод является абстрактным, поэтому он не содержит реализацию по умолчанию для блокировки и разблокировки.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; method based on the value of the unlock parameter.</source>
          <target state="translated">При реализации пользовательской службы постоянного хранения, чтобы реализовать схему блокировки необходимо переопределить этот метод и предоставить механизм блокировки разблокировки в &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;метода, основанного на значении параметра разблокировки.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>