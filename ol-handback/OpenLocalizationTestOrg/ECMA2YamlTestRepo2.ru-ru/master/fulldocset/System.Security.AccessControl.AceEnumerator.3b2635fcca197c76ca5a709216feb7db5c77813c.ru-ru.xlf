<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4736c2735cf188d5cdcd8bf7d866c85b11e0817</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.AccessControl.AceEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78ee34c7a8ac94d63772b5add84e3ddea0cb184a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76922cfb96bd81241f747e491e4e10bf4012631c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the ability to iterate through the access control entries (ACEs) in an access control list (ACL).</source>
          <target state="translated">Предоставляет возможность перемещаться по записи управления доступом (ACE) в списке управления доступом (ACL).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Gets the current element in the <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">Получает текущий элемент <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> коллекции.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This property gets the type-friendly version of the object.</source>
          <target state="translated">Это свойство получает версию понятного имени типа объекта.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The current element in the <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">Текущий элемент в <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> коллекции.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">Перемещает перечислитель к следующему элементу <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> коллекции.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a call to the &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; method, an enumerator is positioned before the first element of the collection, and the first call to the MoveNext method moves the enumerator over the first element of the collection.</source>
          <target state="translated">После создания перечислителя или после вызова &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;метод перечислитель располагается перед первым элементом коллекции, и первый вызов в метод MoveNext перемещает перечислитель на первый элемент коллекции.&lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the end of the collection is passed, subsequent calls to MoveNext return <ph id="ph1">`false`</ph> until &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">После окончания коллекции последующие вызовы MoveNext возвращают <ph id="ph1">`false`</ph> до &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;называется.&lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция остается неизменной.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes, such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated and the next call to MoveNext or &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, и следующий вызов MoveNext и не &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;вызывает &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Если перечислитель был успешно перемещен к следующему элементу; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> , если перечислитель достиг конца коллекции.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Коллекция была изменена после создания перечислителя.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">Устанавливает перечислитель в его начальное положение, перед первым элементом в <bpt id="p1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> коллекции.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция остается неизменной.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If , such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated and the next call to the &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; method or the Reset method throws an &lt;xref:System.InvalidOperationException&gt;</source>
          <target state="translated">Если такие как добавление, изменение или удаление элементов, были внесены в коллекции, перечислитель становится необратимо недействительным, и при следующем вызове &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;вызывает метод или метод Reset &lt;xref:System.InvalidOperationException&gt;&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Коллекция была изменена после создания перечислителя.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the current element in the collection.</source>
          <target state="translated">Получает текущий элемент в коллекции.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a call to the &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; method, you must call the &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; method to advance the enumerator to the first element of the collection before reading the value of IEnumerator.Current; otherwise, IEnumerator.Current is undefined.</source>
          <target state="translated">После создания перечислителя или после вызова &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;метод, необходимо вызвать метод &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства IEnumerator.Current; в противном случае не определено IEnumerator.Current.&lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>IEnumerator.Current also throws an exception if the last call to &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">IEnumerator.Current также вызывает исключение, если последний вызов метода &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;возвращается <ph id="ph1">`false`</ph>, который указывает конец коллекции.&lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>IEnumerator.Current does not move the position of the enumerator, and consecutive calls to IEnumerator.Current return the same object until either &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">IEnumerator.Current не изменяет положение перечислителя и последовательных вызовов IEnumerator.Current возвращать тот же объект, пока не будет &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;или &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;называется.&lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция остается неизменной.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes, such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated, and the next call to &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, и при следующем вызове &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;или &lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;вызывает &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt; &lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt; and IEnumerator.Current, IEnumerator.Current returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Если коллекция изменяется в промежутке между &lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;и IEnumerator.Current, IEnumerator.Current возвращает элемент, для которого оно задано, даже если перечислитель уже недействителен.&lt;/xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns the current element in the collection.</source>
          <target state="translated">Возвращает текущий элемент в коллекции.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Коллекция была изменена после создания перечислителя.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>