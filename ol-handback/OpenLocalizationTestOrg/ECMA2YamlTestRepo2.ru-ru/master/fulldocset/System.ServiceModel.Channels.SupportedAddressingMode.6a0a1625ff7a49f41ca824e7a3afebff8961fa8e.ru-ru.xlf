<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6d505e1372f1767433510be81d62825314e6c3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Channels.SupportedAddressingMode.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a00d15df5b3c72058df74ef9798625eb7fd65a7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ca028ca3457b568b12684c308bcaf8b239d25bd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</source>
          <target state="translated">Указывает, поддерживает ли служба отправку ответов только на анонимные адреса, только только неанонимные адреса, или оба.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</source>
          <target state="translated">Это перечисление используется для задания возможностей сервера, который, в свою очередь, устанавливает требования для клиентов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> has a variety of addressing controls for specifying where messages should be sent.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>имеет широкий набор элементов управления адресации для указания, куда должны отправляться сообщения.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, there is the logical &lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt; address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the &lt;xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A&gt; address of the endpoint that provides the address of the client endpoint.</source>
          <target state="translated">Например, есть логический &lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;адрес назначения сообщения, физический («Via») адрес, используемый транспортом, по которому служба ожидает передачи данных, и &lt;xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A&gt;адрес конечной точки, предоставляющее адрес конечной точки клиента.&lt;/xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A&gt; &lt;/xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</source>
          <target state="translated">В большинстве случаев когда две стороны обмениваются сообщениями только между собой, это не нужно отдельно задавать эти адреса.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</source>
          <target state="translated">Но так, как обмен сообщениями могут быть задействованы другие пункты назначения, необходимо указать, когда адреса должен быть предоставлен явно.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</source>
          <target state="translated">Даже между только двух сторон эта возможность не иногда требуется, как с помощью двойных каналов HTTP где сервера необходимо создать собственный HTTP-запрос.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following kinds of relationships are defined by the SupportedAddressingMode enumeration to capture these messaging patterns:      -   Anonymous addresses are the most basic form of addressing.</source>
          <target state="translated">Следующие типы отношений определены перечислением SupportedAddressingMode для описания шаблонов обмена сообщениями:-анонимные адреса — это самая простая форма адресации.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous addressing is used when there is a default path for a response.</source>
          <target state="translated">Анонимная адресация используется, если есть путь ответа по умолчанию.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</source>
          <target state="translated">TCP — это двунаправленный транспорт, ответ на сообщение TCP может быть отправлен обратно на другой стороне сокет, с которого пришло исходное сообщение.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</source>
          <target state="translated">Аналогично модель запрос ответ HTTP отправляет ответы по каналу HTTP-ответа.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Neither of these responses requires specifying where the response messages are going.</source>
          <target state="translated">Ни один из этих ответов необходимо указать, где идут сообщения ответа.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</source>
          <target state="translated">Если сервер требует анонимных ответов от клиента, используется анонимный значение перечисления.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> system-provided &lt;xref:System.ServiceModel.NetTcpBinding&gt;, &lt;xref:System.ServiceModel.BasicHttpBinding&gt; and &lt;xref:System.ServiceModel.WSHttpBinding&gt; bindings always use Anonymous addresses.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> Системных &lt;xref:System.ServiceModel.NetTcpBinding&gt;, &lt;xref:System.ServiceModel.BasicHttpBinding&gt;и &lt;xref:System.ServiceModel.WSHttpBinding&gt;привязки всегда использовать анонимные адреса.&lt;/xref:System.ServiceModel.WSHttpBinding&gt; &lt;/xref:System.ServiceModel.BasicHttpBinding&gt; &lt;/xref:System.ServiceModel.NetTcpBinding&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</source>
          <target state="translated">-Неанонимные адреса будут использоваться при отправке ответа требует создания нового канала связи.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> system-provided &lt;xref:System.ServiceModel.WSDualHttpBinding&gt; binding uses a NonAnonymous address.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> Системных &lt;xref:System.ServiceModel.WSDualHttpBinding&gt;Привязка использует неанонимный адрес.&lt;/xref:System.ServiceModel.WSDualHttpBinding&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</source>
          <target state="translated">С помощью двойных каналов HTTP клиент создает запрос HTTP для отправки сообщения и затем сервер должен создавать собственный HTTP-запрос для отправки ответа.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the server is initiating the send, it must have a specific endpoint to establish the connection.</source>
          <target state="translated">Поскольку сервер инициирует отправку, он должен иметь определенную конечную точку для установления соединения.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must provide the server the address of an endpoint for its response.</source>
          <target state="translated">Необходимо указать адрес конечной точки сервера для ответа.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</source>
          <target state="translated">Аналогично Если служба должна ответить на одностороннее сообщение, полученное, необходимо также неанонимных адресов, поскольку нет обратного канала для обмена данными.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the server sends a message back, a completely separate operation from that used to send the first message is required.</source>
          <target state="translated">Если сервер отправляет сообщение обратно, требуется отдельной операции от используемого для отправки первого сообщения.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</source>
          <target state="translated">-Смешанного — третий вид адресации, который объединяет в себе анонимный доступ и неанонимных адреса в зависимости от того, который отправляется сообщение.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</source>
          <target state="translated">Типичный пример адресации в смешанном режиме является использование выделенного компьютера для обработки сообщений об ошибках и подтверждений.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</source>
          <target state="translated">Если в стандартной последовательности обмена для ответов — HTTP или TCP, для ответных сообщений используется анонимная адресация, но ошибок используется адресация non-anonymous.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>While <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</source>
          <target state="translated">Во время <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> не поддерживает смешанный адресации функции в какой-либо стандартной привязке, можно создать канал, позволяющий службе отправлять ответы напрямую по обратному каналу (если адрес ответа является анонимный) или по отдельному канал (когда обратный адрес неанонимных).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such a case, the binding element of the channel is used to setSupportedAddressingMode to Mixed.</source>
          <target state="translated">В этом случае элемент привязки канала используется для setSupportedAddressingMode смешанный режим.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The server only supports anonymous addresses and clients must provide an anonymous response address.</source>
          <target state="translated">Сервер поддерживает только анонимные адреса и клиенты должны предоставлять анонимный обратный адрес.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</source>
          <target state="translated">Сервер поддерживает анонимные и неанонимные адреса и клиенты могут выбрать для использования одной или обеих.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</source>
          <target state="translated">Сервер поддерживает только неанонимные адреса и клиенты должны предоставлять неанонимный обратный адрес.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Для добавления.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>