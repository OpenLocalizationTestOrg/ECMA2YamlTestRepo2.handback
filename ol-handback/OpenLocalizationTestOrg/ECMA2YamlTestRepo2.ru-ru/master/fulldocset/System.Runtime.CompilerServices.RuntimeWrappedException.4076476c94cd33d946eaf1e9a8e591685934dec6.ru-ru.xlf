<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e25f02a9132243b302856fca33cad93657b70d3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.CompilerServices.RuntimeWrappedException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9933fb91db68defc79d59aaf7e1525d6772b141</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91f9f2b4bef3eb1bc1fe1040d3214bc5d3eccf9a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Wraps an exception that does not derive from the &lt;xref:System.Exception&gt; class.</source>
          <target state="translated">Заключает в оболочку исключение, которое не является производным от &lt;xref:System.Exception&gt;класса.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some languages, such as C++, allow you to throw exceptions of any managed type.</source>
          <target state="translated">Некоторые языки, например C++, позволяют выдавать исключения любого управляемого типа.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other languages, such as Microsoft C# and Visual Basic, require that every thrown exception be derived from the &lt;xref:System.Exception&gt; class.</source>
          <target state="translated">Другие языки, например Microsoft C# и Visual Basic, требуют, что каждый исключения быть производным от &lt;xref:System.Exception&gt;класса.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain compatibility between languages, the common language runtime (CLR) wraps objects that do not derive from &lt;xref:System.Exception&gt; in a RuntimeWrappedException object.</source>
          <target state="translated">Для обеспечения совместимости между языками, общеязыковой среды выполнения (CLR) инкапсулирует объекты, которые не являются производными от &lt;xref:System.Exception&gt;в объекте RuntimeWrappedException.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt; class to specify whether exceptions should appear wrapped inside catch blocks and exception filters for an assembly.</source>
          <target state="translated">Можно использовать &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;класса для указания исключений должен ли отображаться перенесенного в блоках catch и фильтры исключений для сборки.&lt;/xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many language compilers, including the Microsoft C# and Visual Basic compilers, apply this attribute by default to specify the wrapping behavior.</source>
          <target state="translated">Многие языковые компиляторы, включая компиляторы Microsoft C# и Visual Basic, этот атрибут применяется по умолчанию, чтобы указать поведение при переносе.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the runtime still wraps exceptions even if you use the &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt; class to specify that you do not want them wrapped.</source>
          <target state="translated">Обратите внимание, что среда выполнения по-прежнему упаковывает исключения, даже если вы используете &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;класс, чтобы указать, что требуется отключить их в оболочку.&lt;/xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, exceptions are unwrapped only inside catch blocks or exception filters.</source>
          <target state="translated">В этом случае исключения не создается только внутри блоков catch или фильтров исключений.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with information about the exception.</source>
          <target state="translated">Наборы <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объект со сведениями об исключении.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetObjectData method sets a &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; object with all the exception object data targeted for serialization.</source>
          <target state="translated">Задает метод GetObjectData &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;все данные объекта исключения, предназначенные для сериализации объекта.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>During deserialization, the exception is reconstituted from the <ph id="ph1">`SerializationInfo`</ph> transmitted over the stream.</source>
          <target state="translated">В процессе десериализации исключение воссоздается из <ph id="ph1">`SerializationInfo`</ph> переданного в потоке.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that holds the serialized object data about the exception being thrown.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Объект, содержащий сериализованные данные объекта о вызываемом исключении.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object that contains contextual information about the source or destination.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;Объект, содержащий контекстные сведения об источнике или назначении.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the object that was wrapped by the <bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Возвращает объект, который был оболочкой <bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекта.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WrappedException property gets an object that was thrown as an exception from a language that allows exceptions that do not derive from the &lt;xref:System.Exception&gt; class.</source>
          <target state="translated">Свойство WrappedException возвращает объект, которое было порождено исключение с помощью другого языка, позволяющий исключения, которые не являются производными от &lt;xref:System.Exception&gt;класса.&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The object that was wrapped by the <bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Объект, который был оболочкой <bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> объекта.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>