<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f0a1ffadd71d493352c3b31cbd18cbdfad9b5f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Versioning.ComponentGuaranteesAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d7e42f82f691d9a53995eac5b22e520eea2b8ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b024fdb8038671b172ae0c7d52704808105644f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the compatibility guarantee of a component, type, or type member that may span multiple versions.</source>
          <target state="translated">Определяет гарантированную совместимость компонента, типа или члена типа, который может охватывать несколько версий.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ComponentGuaranteesAttribute is used by developers of components and class libraries to indicate the level of compatibility that consumers of their libraries can expect across multiple versions.</source>
          <target state="translated">ComponentGuaranteesAttribute используется разработчиками, компоненты и библиотеки классов, чтобы показать уровень совместимости, при котором объекты-получатели их библиотеки можно ожидать, что в различных версиях.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It indicates the level of guarantee that a future version of the library or component will not break an existing client.</source>
          <target state="translated">Он указывает уровень гарантии, что будущей версии библиотеки или компонента не нарушит работу существующего клиента.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clients can then use the ComponentGuaranteesAttribute as an aid in designing their own interfaces to ensure stability across versions.</source>
          <target state="translated">Клиенты могут использовать ComponentGuaranteesAttribute для помощи в разработке собственных интерфейсов для обеспечения стабильности всех версий.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The common language runtime (CLR) does not use this attribute in any way.</source>
          <target state="translated">Настроек <ph id="ph1">[!NOTE]</ph> настроек общеязыковой среды выполнения (CLR) не использует этот атрибут каким-либо образом.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its value lies in formally documenting the intent of the component author.</source>
          <target state="translated">Его значение заключается в формальном документировании намерением автор компонента.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Compile-time tools can also use these declarations to detect compile-time errors that would otherwise break the declared guarantee.</source>
          <target state="translated">Во время компиляции средства также могут использовать эти объявления для обнаружения ошибок во время компиляции, в противном случае нарушат объявленную гарантию.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Levels of Compatibility    The ComponentGuaranteesAttribute supports the following levels of compatibility, which are represented by members of the &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; enumeration:      -   No version-to-version compatibility (&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;).</source>
          <target state="translated">Уровни совместимости ComponentGuaranteesAttribute поддерживает следующие уровни совместимости, которые представлены члены &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;перечисления:-совместимость не до версии (&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;).&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client can expect that future versions will break the existing client.</source>
          <target state="translated">Клиент может ожидать, что с будущими версиями будет работать существующего клиента.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>No Compatibility<ept id="p1">](#None)</ept> section later in this topic.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>совместимости нет<ept id="p1">](#None)</ept> далее в этом разделе.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Side-by-side version-to-version compatibility (&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;).</source>
          <target state="translated">Совместимость до версии side-by-side (&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;).&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The component has been tested to work when more than one version of the assembly is loaded in the same application domain.</source>
          <target state="translated">Компонент был протестирован для работы при загрузке более одной версии сборки в том же домене приложения.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, future versions can break compatibility.</source>
          <target state="translated">Как правило будущие версии могут нарушить совместимость.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when breaking changes are made, the old version is not modified but exists alongside the new version.</source>
          <target state="translated">Однако при критических изменений, старая версия не изменяется, но вместе с новой версией.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Side-by-side execution is the expected way to make existing clients work when breaking changes are made.</source>
          <target state="translated">Выполнение Side-by-side — ожидаемый способ обеспечить работу при критических изменений существующих клиентов.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>Side-by-Side Compatibility<ept id="p1">](#SideBySide)</ept> section later in this topic.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>совместимости Side-by-Side<ept id="p1">](#SideBySide)</ept> далее в этом разделе.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Stable version-to-version compatibility (&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;).</source>
          <target state="translated">-Стабильной версии к версии совместимости (&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;).&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Future versions should not break the client, and side-by-side execution should not be needed.</source>
          <target state="translated">Будущие версии не должны нарушать клиента и side-by-side выполнения не требуется.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the client is inadvertently broken, it may be possible to use side-by-side execution to fix the problem.</source>
          <target state="translated">Тем не менее если клиент случайно поврежден, возможно, можно использовать для устранения проблемы с одновременным выполнением.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>Stable Compatibility<ept id="p1">](#Standard)</ept> section.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>устойчивую совместимость<ept id="p1">](#Standard)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Exchange version-to-version compatibility (&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;).</source>
          <target state="translated">-Совместимости до версии exchange (&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;).&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Extraordinary care is taken to ensure that future versions will not break the client.</source>
          <target state="translated">Принять дополнительные меры, чтобы убедиться, что будущие версии не нарушит работу клиента.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client should use only these types in the signature of interfaces that are used for communication with other assemblies that are deployed independently of one another.</source>
          <target state="translated">Клиент должен использовать только эти типы в сигнатуре интерфейсов, которые используются для взаимодействия с другими сборками, которые развертываются независимо друг от друга.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one version of these types is expected to be in a given application domain, which means that if a client breaks, side-by-side execution cannot fix the compatibility problem.</source>
          <target state="translated">Предполагается, что только одна версия этих типов в домене приложения, это означает, что если клиент выдает ошибку, с одновременным выполнением не может устранить проблему совместимости.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>Exchange Type Compatibility<ept id="p1">](#Exchange)</ept> section.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>совместимость типа обмена<ept id="p1">](#Exchange)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following sections discuss each level of guarantee in greater detail.</source>
          <target state="translated">Каждый уровень гарантии более подробно в следующих разделах.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="None"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ### No Compatibility    Marking a component as &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt; indicates that the provider makes no guarantees about compatibility.</source>
          <target state="translated"><bpt id="p1">&lt;a name="None"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>### Не пометку компонент как совместимости &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;Указывает, что поставщик не гарантирует совместимости.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clients should avoid taking any dependencies on the exposed interfaces.</source>
          <target state="translated">Клиенты должны избежать любых зависимостей на предоставляемых интерфейсах.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This level of compatibility is useful for types that are experimental or that are publicly exposed but are intended only for components that are always updated at the same time.</source>
          <target state="translated">Этот уровень совместимости полезен для типов, которые экспериментальном или публично доступны, однако предназначены только для компонентов, которые всегда обновляются одновременно.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; explicitly indicates that this component should not be used by external components.</source>
          <target state="translated">&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;явным образом указывает, что этот компонент не должен использоваться внешними компонентами.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="SideBySide"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ### Side-by-Side Compatibility    Marking a component as &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt; indicates that the component has been tested to work when more than one version of the assembly is loaded into the same application domain.</source>
          <target state="translated"><bpt id="p1">&lt;a name="SideBySide"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>### Side-by-Side совместимости Пометка компонент как &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;Указывает, что компонент был протестирован работать при загрузке более одной версии сборки в том же домене приложений.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Breaking changes are allowed as long as they are made to the assembly that has the greater version number.</source>
          <target state="translated">Критические изменения разрешены при условии, что они были сделаны в сборку, которая имеет больший номер версии.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Components that are bound to an old version of the assembly are expected to continue to bind to the old version, and other components can bind to the new version.</source>
          <target state="translated">Компоненты, которые привязаны к старой версии сборки должны продолжать привязку к старой версии и другие компоненты можно привязать к новой версии.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also possible to update a component that is declared to be &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; by destructively modifying the old version.</source>
          <target state="translated">Можно также обновить компонент, который объявлен как &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;путем внесения необратимых изменений изменения старую версию.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="Standard"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ### Stable Compatibility    Marking a type as &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt; indicates that the type should remain stable across versions.</source>
          <target state="translated"><bpt id="p1">&lt;a name="Standard"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>### Стабильной совместимости пометить тип как &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;Указывает, что тип должны оставаться стабильными разных версий.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it may also be possible for side-by-side versions of a stable type to exist in the same application domain.</source>
          <target state="translated">Тем не менее он может стать возможным для версий side-by-side стабильного типа существует в том же домене приложения.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stable types maintain a high binary compatibility bar.</source>
          <target state="translated">Устойчивые типы поддерживают высокую совместимость двоичной панели.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, providers should avoid making breaking changes to stable types.</source>
          <target state="translated">По этой причине поставщики следует избегать критических изменений для stable типов.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following kinds of changes are acceptable:      -   Adding private instance fields to, or removing fields from, a type, as long as this does not break the serialization format.</source>
          <target state="translated">Допустимы следующие виды изменений: - закрытых поля экземпляра для добавления или удаления полей из типа, при условии, что это не нарушает формат сериализации.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Changing a non-serializable type to a serializable type.</source>
          <target state="translated">-Изменение несериализуемый тип сериализуемый тип.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>(However, a serializable type cannot be changed to a non-serializable type.)      -   Throwing new, more derived exceptions from a method.</source>
          <target state="translated">(Однако сериализуемый тип не может изменяться для сериализуемого типа.)      -Формирования новых, более исключения, унаследованные из метода.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Improving the performance of a method.</source>
          <target state="translated">-Повышение производительности метод.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Changing the range of return values, as long as the change does not adversely affect the majority of clients.</source>
          <target state="translated">-Изменение диапазона возвращаемых значений, при условии, что изменения не сказывается отрицательно на большинство клиентов.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Fixing serious bugs, if the business justification is high and the number of adversely affected clients is low.</source>
          <target state="translated">-Если коммерческое обоснование велико, а число клиентов, оказывается негативное влияние не хватает Устранение серьезных ошибок.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because new versions of stable components are not expected to break existing clients, generally only one version of a stable component is needed in an application domain.</source>
          <target state="translated">Поскольку новые версии стабильных компонентов не должны разрушать существующие клиенты, обычно только одна версия стабильного компонента необходима в домене приложения.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this is not a requirement, because stable types are not used as well-known exchange types that all components agree upon.</source>
          <target state="translated">Однако это не жесткое требование, поскольку стабильные типы не используются как типы известного обмена, согласованные всеми компонентами.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if a new version of a stable component does inadvertently break some component, and if other components need the new version, it may be possible to fix the problem by loading both the old and new component.</source>
          <target state="translated">Таким образом Если новая версия стабильного компонента случайно нарушит некоторые компоненты, и для других компонентов требуется новая версия, ее можно устранить проблему, загрузив старый и новый компонент.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; provides a stronger version compatibility guarantee than &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;предоставляет более надежные гарантии совместимости версии, чем &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is a common default for multi-version components.</source>
          <target state="translated">Это значение по умолчанию, общие для нескольких версий компонентов.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; can be combined with &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;, which states that the component will not break compatibility but is tested to work when more than one version is loaded in a given application domain.</source>
          <target state="translated">&lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;можно сочетать с &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;, который в том, что компонент не нарушает совместимость, но его проверка работать при загрузке более одной версии в домене приложения.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a type or method is marked as &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;, it can be upgraded to &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.</source>
          <target state="translated">После тип или метод помечены как &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;, ее можно обновить до &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it cannot be downgraded to &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.</source>
          <target state="translated">Однако он не может быть изменена &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="Exchange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ### Exchange Type Compatibility    Marking a type as &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt; provides a stronger version compatibility guarantee than &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;, and should be applied to the most stable of all types.</source>
          <target state="translated"><bpt id="p1">&lt;a name="Exchange"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>### Тип Exchange совместимости пометить тип как &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;дает более надежные гарантии совместимости версии чем &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;и должны применяться к наиболее стабильной всех типов.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>These types are intended to be used for interchange between independently built components across all component boundaries in both time (any version of the CLR or any version of a component or application) and space (cross-process, cross-CLR in one process, cross-application domain in one CLR).</source>
          <target state="translated">Эти типы предназначены для обмена данными между независимо построенными компонентами через все границы компонентов во времени (любая версия среды CLR) или любую версию компонента или приложения и пространство (между процессами кросс CLR в одном процессе, нескольких приложений домена в одной среде CLR).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a breaking change is made to an exchange type, it is impossible to fix the issue by loading multiple versions of the type.</source>
          <target state="translated">Критические изменения в тип обмена, невозможно исправить проблему с помощью загрузки нескольких версий типа.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exchange types should be changed only when a problem is very serious (such as a severe security issue) or the probability of breakage is very low (that is, if the behavior was already broken in a random way that code could not have conceivably taken a dependency on).</source>
          <target state="translated">Типы обмена должны изменяться только в том случае, если проблема очень серьезная (например, серьезная уязвимость безопасности) или вероятность сбоя очень низкий (то есть, если поведение уже было нарушено случайным образом, код может не иметь возможной зависимости на).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can make the following kinds of changes to an exchange type:      -   Add inheritance of new interface definitions.</source>
          <target state="translated">Тип обмена можно внести следующие виды изменений:-Добавьте наследование новых определений интерфейса.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Add new private methods that implement the methods of newly inherited interface definitions.</source>
          <target state="translated">-Добавьте новые закрытые методы, реализующие методы вновь наследуемых определений интерфейса.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Add new static fields.</source>
          <target state="translated">-Добавьте новые статические поля.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Add new static methods.</source>
          <target state="translated">-Добавление новых статических методов.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Add new non-virtual instance methods.</source>
          <target state="translated">-Добавьте новые методы невиртуальный экземпляра.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are considered breaking changes and are not allowed for primitive types:      -   Changing serialization formats.</source>
          <target state="translated">Ниже рассматриваются существенные изменения и не разрешены для типов-примитивов:-изменение форматов сериализации.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version-tolerant serialization is required.</source>
          <target state="translated">Независимой от версий сериализации является обязательным.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Adding or removing private instance fields.</source>
          <target state="translated">-Добавление или удаление закрытых поля экземпляра.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>This risks changing the serialization format of the type and breaking client code that uses reflection.</source>
          <target state="translated">Это вызывает риск изменения формата сериализации типа и прекращение выполнения клиентского кода, который использует отражение.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Changing the serializability of a type.</source>
          <target state="translated">-Изменение возможности сериализации типа.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>A non-serializable type may not be made serializable, and vice versa.</source>
          <target state="translated">Несериализуемый тип нельзя сделать сериализуемым и наоборот.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Throwing different exceptions from a method.</source>
          <target state="translated">-Создание различных исключений из метода.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Changing the range of a method's return values, unless the member definition raises this possibility and clearly indicates how clients should handle unknown values.</source>
          <target state="translated">-Изменение диапазона возвращаемых значений метода, если только определение элемента вызывает эту возможность и четко показывает, как клиенты должны обрабатывать неизвестные значения.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Fixing most bugs.</source>
          <target state="translated">-Исправление большинства ошибок.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consumers of the type will rely on the existing behavior.</source>
          <target state="translated">Потребители типа будет полагаться на существующее поведение.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a component, type, or member is marked with the &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; guarantee, it cannot be changed to either &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; or &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.</source>
          <target state="translated">После компонент помечается &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;гарантировать, что его нельзя добавить &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;или &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; типа или члена</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, exchange types are the basic types (such as &lt;xref:System.Int32&gt; and &lt;xref:System.String&gt; in the .NET Framework) and interfaces (such as &lt;xref:System.Collections.Generic.IList%601&gt;, &lt;xref:System.Collections.Generic.IEnumerable%601&gt;, and &lt;xref:System.IComparable%601&gt;) that are commonly used in public interfaces.</source>
          <target state="translated">Как правило, типы exchange — это основные типы (такие как &lt;xref:System.Int32&gt;и &lt;xref:System.String&gt;в платформе .NET Framework) и интерфейсы (такие как &lt;xref:System.Collections.Generic.IList%601&gt;, &lt;xref:System.Collections.Generic.IEnumerable%601&gt;, и &lt;xref:System.IComparable%601&gt;), которые часто используются в общих интерфейсов.&lt;/xref:System.IComparable%601&gt; &lt;/xref:System.Collections.Generic.IEnumerable%601&gt; &lt;/xref:System.Collections.Generic.IList%601&gt; &lt;/xref:System.String&gt; &lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exchange types may publicly expose only other types that are also marked with &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; compatibility.</source>
          <target state="translated">Типы обмена предоставит могут только другие типы, которые также отмечены &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;совместимости.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, exchange types cannot depend on the behavior of Windows APIs that are prone to change.</source>
          <target state="translated">Кроме того типы обмена не может зависеть от поведения Windows API, которые часто меняются.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Component Guarantees: A Summary    The following table indicates how a component's characteristics and usage affect its compatibility guarantee.</source>
          <target state="translated">Гарантии компонента: Сводка следующей таблице указывает, как характеристики компонента и его использования на гарантию его совместимости.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Component characteristics|Exchange|Stable|Side-by-Side|None|   |-------------------------------|--------------|------------|--------------------|----------|   |Can be used in interfaces between components that version independently.|Y|N|N|N|   |Can be used (privately) by an assembly that versions independently.|Y|Y|Y|N|   |Can have multiple versions in a single application domain.|N|Y|Y|Y|   |Can make breaking changes|N|N|Y|Y|   |Tested to make certain multiple versions of the assembly can be loaded together.|N|N|Y|N|   |Can make breaking changes in place.|N|N|N|Y|   |Can make very safe non-breaking servicing changes in place.|Y|Y|Y|Y|      ## Applying the Attribute    You can apply the ComponentGuaranteesAttribute to an assembly, a type, or a type member.</source>
          <target state="translated">| Характеристики компонента | Exchange | Стабильные | Side-by-Side | None |   |-------------------------------|--------------|------------|--------------------|----------|   | Можно использовать в интерфейсах между компонентами этой версии независимо друг от друга. | Y | N | N | N |   | Может быть использован (закрыто) сборкой, версии независимо друг от друга. | Y | Y | Y | N |   | Может иметь несколько версий в одном домене приложения. | N | Y | Y | Y |   | Может привести к значительным изменениям | N | N | Y | Y |   | Тестирование вносить определенные несколько версий сборки может быть загружена вместе. | N | N | Y | N |   | Может привести к значительным изменениям на месте. | N | N | N | Y |   | Может осуществить безопасное неразрывные обслуживания на месте. | Y | Y | Y | Y |      ## Применение атрибута вы ComponentGuaranteesAttribute можно применять к сборки, типа или члена типа.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its application is hierarchical.</source>
          <target state="translated">Приложение является иерархическим.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, by default, the guarantee defined by the &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A&gt; property of the attribute at the assembly level defines the guarantee of all types in the assembly and all members in those types.</source>
          <target state="translated">То есть, по умолчанию гарантия определяется &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A&gt;атрибута на уровне сборки определяет гарантии всех типов в сборку и все члены в этих типах.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, if the guarantee is applied to the type, by default it also applies to each member of the type.</source>
          <target state="translated">Аналогичным образом Если гарантия применяется к типу, по умолчанию он также применяется к каждому члену типа.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This inherited guarantee can be overridden by applying the ComponentGuaranteesAttribute to individual types and type members.</source>
          <target state="translated">Эта гарантия наследуемые можно переопределить путем применения ComponentGuaranteesAttribute отдельные типы и члены типов.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, guarantees that override the default can only weaken the guarantee; they cannot strengthen it.</source>
          <target state="translated">Тем не менее гарантирует, что переопределение по умолчанию можно только ослабить гарантии; они не может повысить его.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if an assembly is marked with the &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; guarantee, its types and members have no compatibility guarantee, and any other guarantee that is applied to types or members in the assembly is ignored.</source>
          <target state="translated">Например, если сборка отмечена с &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;гарантировать ее типы и члены иметь никакой гарантии совместимости и другие гарантии, который применяется к типам и членам в сборке пропускается.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Testing the Guarantee    The &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A&gt; property returns a member of the &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; enumeration, which is marked with the &lt;xref:System.FlagsAttribute&gt; attribute.</source>
          <target state="translated">Тестирование гарантии &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A&gt;свойство возвращает член &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;перечисления, который помечен &lt;xref:System.FlagsAttribute&gt;атрибут.&lt;/xref:System.FlagsAttribute&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that you should test for the flag that you are interested in by masking away potentially unknown flags.</source>
          <target state="translated">Это означает, что требуется проверка флаг, который вас интересует, маскируя потенциально неизвестных флагов.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following example tests whether a type is marked as &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.</source>
          <target state="translated">Например в следующем примере проверяется, является ли тип помечен как &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.runtime.version_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.runtime.version_1.vb)</ept><ept id="p3">]</ept>       The following example tests whether a type is marked as &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; or &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.runtime.version_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.runtime.version_1.vb)</ept> <ept id="p3">]</ept> в следующем примере проверяется, является ли тип помечен как &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;или &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;  </target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2<ept id="p2">](~/add/codesnippet/csharp/t-system.runtime.version_2.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.runtime.version_2.vb)</ept><ept id="p3">]</ept>       The following example tests wither a type is marked as &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; (that is, neither &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; nor &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;).</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2<ept id="p2">](~/add/codesnippet/csharp/t-system.runtime.version_2.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.runtime.version_2.vb)</ept> <ept id="p3">]</ept> следующие пример тесты устранить тип помечен как &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;(то есть, ни &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;, ни &lt;xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;).&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesOptions&gt;  </target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3<ept id="p2">](~/add/codesnippet/csharp/t-system.runtime.version_3.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3<ept id="p4">](~/add/codesnippet/visualbasic/t-system.runtime.version_3.vb)</ept><ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3<ept id="p2">](~/add/codesnippet/csharp/t-system.runtime.version_3.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3  <ept id="p4">](~/add/codesnippet/visualbasic/t-system.runtime.version_3.vb)</ept><ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Versioning.ComponentGuaranteesAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a value that indicates a library, type, or member's guaranteed level of compatibility across multiple versions.</source>
          <target state="translated">Инициализирует новый экземпляр <bpt id="p1">&lt;xref href="System.Runtime.Versioning.ComponentGuaranteesAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> значение, указывающее, библиотеки, типа или члена класса гарантируется уровень совместимости для нескольких версий.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute&gt; class is instantiated, the value of the <ph id="ph1">`guarantees`</ph> parameter is assigned to the &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A&gt; property.</source>
          <target state="translated">Когда &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute&gt;создается экземпляр класса, значение <ph id="ph1">`guarantees`</ph> присваивается параметр &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A&gt;свойство.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A&gt; &lt;/xref:System.Runtime.Versioning.ComponentGuaranteesAttribute&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the level of compatibility that is guaranteed across multiple versions.</source>
          <target state="translated">Одно из значений перечисления, указывающее уровень совместимости, которое гарантированно для нескольких версий.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the guaranteed level of compatibility of a library, type, or type member that spans multiple versions.</source>
          <target state="translated">Возвращает значение, указывающее гарантированный уровень совместимости библиотеки, типа или члена типа с несколькими версиями.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the Guarantees property corresponds to the <ph id="ph1">`guarantees`</ph> parameter of the &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A&gt; constructor.</source>
          <target state="translated">Значение свойства гарантии соответствует <ph id="ph1">`guarantees`</ph> параметр &lt;xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A&gt;конструктор.&lt;/xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the level of compatibility that is guaranteed across multiple versions.</source>
          <target state="translated">Одно из значений перечисления, указывающее уровень совместимости, которое гарантированно для нескольких версий.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>