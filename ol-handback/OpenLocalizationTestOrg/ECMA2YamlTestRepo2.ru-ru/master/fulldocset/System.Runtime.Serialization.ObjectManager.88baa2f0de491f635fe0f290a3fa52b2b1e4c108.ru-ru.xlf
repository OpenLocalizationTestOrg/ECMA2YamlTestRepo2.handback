<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73eade37beedd3799e27434ce7c93d78bbaad9f1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.ObjectManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc1a902c6336fe6dc6c2f24417c18fde0755d325</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">793fe101653f32f5211f48489b432cedfd20a496</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Keeps track of objects as they are deserialized.</source>
          <target state="translated">Сохраняет сведения о объекты при их десериализации.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>During deserialization, the &lt;xref:System.Runtime.Serialization.Formatter&gt; queries the ObjectManager to determine whether a reference to an object in the serialized stream refers to an object that has already been deserialized (a backward reference), or to an object that has not yet been deserialized (a forward reference).</source>
          <target state="translated">Во время десериализации &lt;xref:System.Runtime.Serialization.Formatter&gt;запрашивает ObjectManager, чтобы определить, является ли ссылка на объект в сериализованном потоке ссылается на объект, который уже был десериализованный (обратная ссылка), или объект, который еще не был десериализован (прямая ссылка).&lt;/xref:System.Runtime.Serialization.Formatter&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the reference in the serialized stream is a forward reference, then the &lt;xref:System.Runtime.Serialization.Formatter&gt; can register a fixup with the ObjectManager.</source>
          <target state="translated">Если ссылка в сериализованном потоке является прямой ссылкой, то &lt;xref:System.Runtime.Serialization.Formatter&gt;можно зарегистрировать адресная привязка ObjectManager.&lt;/xref:System.Runtime.Serialization.Formatter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the reference in the serialized stream is a backward reference, the &lt;xref:System.Runtime.Serialization.Formatter&gt; immediately completes the reference.</source>
          <target state="translated">Если ссылка в сериализованном потоке является обратной, &lt;xref:System.Runtime.Serialization.Formatter&gt;немедленно завершает ссылку.&lt;/xref:System.Runtime.Serialization.Formatter&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Fixup refers to the process of finalizing object references not already completed during the object deserialization process.</source>
          <target state="translated">Адресная привязка ссылается на обработку завершающихся ссылок на объекты, которые еще не завершено во время десериализации объекта.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the required object has been deserialized, the ObjectManager will complete the reference.</source>
          <target state="translated">После десериализации объекта требуется ObjectManager завершает ссылку.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectManager follows a set of rules that dictate the fixup order.</source>
          <target state="translated">ObjectManager выполняет набор правил, которые порядка адресной привязки.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>All objects that implement &lt;xref:System.Runtime.Serialization.ISerializable&gt; or have a &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt; can expect to have all the objects that they transmitted through &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; available when the object tree is deserialized.</source>
          <target state="translated">Все объекты, которые реализуют &lt;xref:System.Runtime.Serialization.ISerializable&gt;или иметь &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;предполагается, что для всех объектов, которые они передаются через &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;доступно при десериализации дерева объектов.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; &lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt; &lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a parent object cannot presume that all its child objects will be fully completed when it is fully deserialized.</source>
          <target state="translated">Родительский объект не может предположить, все его дочерние объекты полностью завершается, когда он полностью десериализуется.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>All child objects will be present but not all the grandchild objects will necessarily be present.</source>
          <target state="translated">Все дочерние объекты будут присутствовать, но не все внучатые объекты обязательно будут присутствовать.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object needs to take certain actions that depend on executing code on its child objects, it can delay these actions, implement the &lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt; interface, and execute the code only when it is called back on this interface.</source>
          <target state="translated">Если объект должен выполнить определенные действия, зависящие от выполнения кода с его дочерними объектами, можно отложить эти действия, реализуйте &lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;интерфейсов и выполнить код только после обратного вызова на этом интерфейсе.&lt;/xref:System.Runtime.Serialization.IDeserializationCallback&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The surrogate selector to use.</source>
          <target state="translated">Суррогатный селектор.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> determines the correct surrogate to use when deserializing objects of a given type.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Определяет соответствующий суррогат для использования при десериализации объектов данного типа.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.</source>
          <target state="translated">Во время десериализации суррогатный селектор создает новый экземпляр объекта из данных, передаваемых в потоке.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The streaming context.</source>
          <target state="translated">Контекст потоковой передачи.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; is not used by <bpt id="p1">&lt;xref uid="langword_csharp_ObjectManager" name="ObjectManager" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but is passed as a parameter to any objects implementing <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or having a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;Не используется <bpt id="p1">&lt;xref uid="langword_csharp_ObjectManager" name="ObjectManager" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, но передается как параметр объектами, реализующими <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> или having <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These objects can take specific actions depending on the source of the information to deserialize.</source>
          <target state="translated">Эти объекты могут выполнять определенные действия в зависимости от источника данных для десериализации.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Вызывающий объект не имеет необходимых разрешений.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Performs all the recorded fixups.</source>
          <target state="translated">Выполняет все записанные адресные привязки.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fixups are carried out by any appropriate surrogate, the object itself (if it implements &lt;xref:System.Runtime.Serialization.ISerializable&gt;), or the default implementation.</source>
          <target state="translated">Адресные привязки выполняются любым соответствующим суррогатом самого объекта (если он реализует &lt;xref:System.Runtime.Serialization.ISerializable&gt;), или реализация по умолчанию.&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A fixup was not successfully completed.</source>
          <target state="translated">Адресная привязка не было успешно завершено.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns the object with the specified object ID.</source>
          <target state="translated">Возвращает объект с идентификатором указанного объекта.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>An object can be registered and issued an object ID with a call to the &lt;xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A&gt; method.</source>
          <target state="translated">Можно зарегистрировать объект и выдать ID объекта с помощью вызова &lt;xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A&gt;метод.&lt;/xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The ID of the requested object.</source>
          <target state="translated">Идентификатор запрашиваемого объекта.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The object with the specified object ID if it has been previously stored or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no such object has been registered.</source>
          <target state="translated">Объект с заданным Идентификатором объекта, если он был ранее сохранен или <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , если объект не был зарегистрирован.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept> Меньше или равно нулю.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Raises the deserialization event to any registered object that implements <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDeserializationCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Вызывает событие десериализации для любого зарегистрированного объекта, который реализует <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDeserializationCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Invokes the method marked with the &lt;xref:System.Runtime.Serialization.OnDeserializingAttribute&gt;.</source>
          <target state="translated">Вызывает метод, помеченный атрибутом &lt;xref:System.Runtime.Serialization.OnDeserializingAttribute&gt;.&lt;/xref:System.Runtime.Serialization.OnDeserializingAttribute&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The instance of the type that contains the method to be invoked.</source>
          <target state="translated">Экземпляр типа, содержащего вызываемый метод.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Records a fixup for one element in an array.</source>
          <target state="translated">Записывает адресную привязку для одного элемента в массиве.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fixup is for a specified element of a specified array.</source>
          <target state="translated">Исправление предназначено для указанного элемента указанного массива.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value used during the fixup process is provided in the <ph id="ph1">`objectRequired`</ph> parameter.</source>
          <target state="translated">Значение, используемое при обработке адресной привязки, предоставляется в <ph id="ph1">`objectRequired`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The ID of the array used to record a fixup.</source>
          <target state="translated">Идентификатор массива, используемого для записи адресной привязки.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The index within <ph id="ph1">`arrayFixup`</ph> that a fixup is requested for.</source>
          <target state="translated">Индекс в <ph id="ph1">`arrayFixup`</ph> , запрашиваются адресную привязку.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The ID of the object that the current array element will point to after fixup is completed.</source>
          <target state="translated">Идентификатор объекта, который будет указывать на текущий элемент массива после завершения адресной привязки.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">arrayToBeFixed</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">objectRequired</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">arrayToBeFixed</ph> <ept id="p1">&lt;/code&gt;</ept> Или <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">objectRequired</ph> <ept id="p2">&lt;/code&gt;</ept> меньше или равно нулю.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Records fixups for the specified elements in an array, to be executed later.</source>
          <target state="translated">Записывает адресные привязки заданных элементов в массиве, который будет выполнен позже.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fixup is for specified elements of a specified array.</source>
          <target state="translated">Исправление предназначено для указанные элементы указанного массива.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value used during the fixup process is provided in the <ph id="ph1">`objectRequired`</ph> parameter.</source>
          <target state="translated">Значение, используемое при обработке адресной привязки, предоставляется в <ph id="ph1">`objectRequired`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The ID of the array used to record a fixup.</source>
          <target state="translated">Идентификатор массива, используемого для записи адресной привязки.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The indexes within the multidimensional array that a fixup is requested for.</source>
          <target state="translated">Индексы в многомерном массиве, запрашиваются адресную привязку.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The ID of the object the array elements will point to after fixup is completed.</source>
          <target state="translated">Идентификатор объекта элементы массива будет указывать после завершения адресной привязки.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">arrayToBeFixed</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">objectRequired</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">arrayToBeFixed</ph> <ept id="p1">&lt;/code&gt;</ept> Или <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">objectRequired</ph> <ept id="p2">&lt;/code&gt;</ept> меньше или равно нулю.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">indices</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">indices</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Records a fixup for an object member, to be executed later.</source>
          <target state="translated">Записывает адресную привязку для элемента объекта, который будет выполнен позже.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fixup is for a specified member of a specified object.</source>
          <target state="translated">Адресная привязка — для указанного элемента из указанного объекта.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value to be used during the fixup process is provided as the <ph id="ph1">`objectRequired`</ph> argument.</source>
          <target state="translated">Значение для использования в процессе исправления предоставляется как <ph id="ph1">`objectRequired`</ph> аргумент.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The ID of the object that needs the reference to <ph id="ph1">`objectRequired`</ph>.</source>
          <target state="translated">Идентификатор объекта, которому требуется ссылка на <ph id="ph1">`objectRequired`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The member name of <ph id="ph1">`objectToBeFixed`</ph> where the fixup will be performed.</source>
          <target state="translated">Имя члена <ph id="ph1">`objectToBeFixed`</ph> где исправление должно быть выполнено.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The ID of the object required by <ph id="ph1">`objectToBeFixed`</ph>.</source>
          <target state="translated">Идентификатор объекта, предусмотренного <ph id="ph1">`objectToBeFixed`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;objectToBeFixed&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;objectRequired&lt;/code&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;objectToBeFixed&lt;/code&gt;</ph>или <ph id="ph2">&lt;code&gt;objectRequired&lt;/code&gt;</ph> меньше или равно нулю.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">memberName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">memberName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Records a fixup for a member of an object, to be executed later.</source>
          <target state="translated">Записывает адресную привязку для элемента объекта, который будет выполнен позже.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fixup is for a specified member of a specified object.</source>
          <target state="translated">Адресная привязка — для указанного элемента из указанного объекта.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value to be used during the fixup process is provided as the <ph id="ph1">`objectRequired`</ph> parameter.</source>
          <target state="translated">Значение для использования в процессе исправления предоставляется как <ph id="ph1">`objectRequired`</ph> параметр.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The ID of the object that needs the reference to the <ph id="ph1">`objectRequired`</ph> object.</source>
          <target state="translated">Идентификатор объекта, которому требуется ссылка на <ph id="ph1">`objectRequired`</ph> объекта.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The member of <ph id="ph1">`objectToBeFixed`</ph> where the fixup will be performed.</source>
          <target state="translated">Элемент <ph id="ph1">`objectToBeFixed`</ph> где исправление должно быть выполнено.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The ID of the object required by <ph id="ph1">`objectToBeFixed`</ph>.</source>
          <target state="translated">Идентификатор объекта, предусмотренного <ph id="ph1">`objectToBeFixed`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectToBeFixed</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">objectRequired</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectToBeFixed</ph> <ept id="p1">&lt;/code&gt;</ept> Или <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">objectRequired</ph> <ept id="p2">&lt;/code&gt;</ept> меньше или равно нулю.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Registers an object as it is deserialized, associating it with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Регистрирует объект при его десериализации, сопоставляя его с <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains information about both the object and its ID.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;хранит информацию об объекте и его идентификатор.&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Later during deserialization, &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt; can be used to determine whether a particular object ID has already been deserialized, or whether it is a forward reference to an object that has not yet been deserialized.</source>
          <target state="translated">Далее в процессе десериализации &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;может использоваться для определения ли уже был десериализован идентификатор конкретного объекта, и является ли он прямая ссылка на объект, который не был десериализован.&lt;/xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">Регистрируемый объект.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The ID of the object to register.</source>
          <target state="translated">Идентификатор объекта для регистрации.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept> Меньше или равно нулю.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept> Уже зарегистрирован для объекта, отличного от <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">obj</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Registers an object as it is deserialized, associating it with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept>, and recording the <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used with it.</source>
          <target state="translated">Регистрирует объект при его десериализации, сопоставляя его с <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>, запись и <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> используется вместе с ним.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains the information about both the object and its ID.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;хранит информацию об объекте и его идентификатор.&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Later during deserialization, you can use &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt; to discover whether a particular object ID has already been deserialized, or if it is a forward reference to an object that has not yet been deserialized.</source>
          <target state="translated">Позднее, во время десериализации, можно использовать &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;Обнаружение ли определенный объект уже был десериализован идентификатор, или если это прямая ссылка на объект, который не был десериализован.&lt;/xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">Регистрируемый объект.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The ID of the object to register.</source>
          <target state="translated">Идентификатор объекта для регистрации.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`info`</ph> will be completed with any required fixup information and then passed to the required object when that object is completed.</source>
          <target state="translated"><ph id="ph1">`info`</ph>завершится с любой информации о необходимые исправления, а затем передается необходимому объекту, когда объект завершается.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept> Меньше или равно нулю.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept> Уже зарегистрирован для объекта, отличного от <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">obj</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Registers a member of an object as it is deserialized, associating it with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept>, and recording the <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Регистрирует является членом объекта при его десериализации, сопоставляя его с <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>, запись и <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>You need to provide the <ph id="ph1">`member`</ph> and <ph id="ph2">`idOfContainingObj`</ph> parameters if <ph id="ph3">`obj`</ph> is a &lt;xref:System.ValueType&gt; because of the way fixups are performed on &lt;xref:System.ValueType&gt; objects.</source>
          <target state="translated">Необходимо указать <ph id="ph1">`member`</ph> и <ph id="ph2">`idOfContainingObj`</ph> параметры Если <ph id="ph3">`obj`</ph> — &lt;xref:System.ValueType&gt;из-за того, выполняются исправления &lt;xref:System.ValueType&gt;объектов.&lt;/xref:System.ValueType&gt; &lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The space to store the information for a &lt;xref:System.ValueType&gt; is allocated inline with its containing object.</source>
          <target state="translated">Место для хранения информации о &lt;xref:System.ValueType&gt;размещаются вместе с его содержащего объекта.&lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when the &lt;xref:System.ValueType&gt; is boxed to be registered with the &lt;xref:System.Runtime.Serialization.ObjectManager&gt;, it loses the connection with its containing object.</source>
          <target state="translated">Тем не менее, когда &lt;xref:System.ValueType&gt;упаковывается регистрация &lt;xref:System.Runtime.Serialization.ObjectManager&gt;, он теряет соединение с его содержащего объекта.&lt;/xref:System.Runtime.Serialization.ObjectManager&gt; &lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee that fixups occur in the instance of the &lt;xref:System.ValueType&gt; stored in the containing object and not in the boxed instance, the &lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains some additional information.</source>
          <target state="translated">Чтобы гарантировать, что адресные привязки осуществляются в экземпляре &lt;xref:System.ValueType&gt;сохраняется вмещающего объекта и не в упакованном экземпляре, &lt;xref:System.Runtime.Serialization.ObjectManager&gt;сохраняет некоторые дополнительные сведения.&lt;/xref:System.Runtime.Serialization.ObjectManager&gt; &lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains information about both the object and its ID.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;хранит информацию об объекте и его идентификатор.&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Later during deserialization, &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt; can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.</source>
          <target state="translated">Далее в процессе десериализации &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;может использоваться для обнаружения ли уже был десериализован идентификатор определенного объекта или является ли он не прямая ссылка на объект еще десериализуются.&lt;/xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">Регистрируемый объект.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The ID of the object to register.</source>
          <target state="translated">Идентификатор объекта для регистрации.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`info`</ph> will be completed with any required fixup information and then passed to the required object when that object is completed.</source>
          <target state="translated"><ph id="ph1">`info`</ph>завершится с любой информации о необходимые исправления, а затем передается необходимому объекту, когда объект завершается.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The ID of the object that contains <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">Идентификатор объекта, который содержит <ph id="ph1">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This parameter is required only if <ph id="ph1">`obj`</ph> is a value type.</source>
          <target state="translated">Этот параметр является обязательным только в том случае, если <ph id="ph1">`obj`</ph> является типом значения.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The field in the containing object where <ph id="ph1">`obj`</ph> exists.</source>
          <target state="translated">Поле в вмещающего объекта где <ph id="ph1">`obj`</ph> существует.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter has meaning only if <ph id="ph1">`obj`</ph> is a value type.</source>
          <target state="translated">Этот параметр имеет смысл только в том случае, если <ph id="ph1">`obj`</ph> является типом значения.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept> Меньше или равно нулю.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">member</ph><ept id="p3">&lt;/code&gt;</ept> is not a &lt;xref:System.Reflection.FieldInfo&gt; and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">member</ph><ept id="p4">&lt;/code&gt;</ept> is not <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">member</ph><ept id="p3">&lt;/code&gt;</ept> is not a &lt;xref:System.Reflection.FieldInfo&gt; and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">member</ph><ept id="p4">&lt;/code&gt;</ept> is not <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.FieldInfo&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Registers a member of an array contained in an object while it is deserialized, associating it with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept>, and recording the <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Регистрирует член массива, содержащийся в объекте при его десериализации, сопоставляя его с <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>, запись и <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>You need to provide the <ph id="ph1">`member`</ph> and <ph id="ph2">`idOfContainingObj`</ph> parameters if <ph id="ph3">`obj`</ph> is a &lt;xref:System.ValueType&gt; because of the way fixups are performed on &lt;xref:System.ValueType&gt; objects.</source>
          <target state="translated">Необходимо указать <ph id="ph1">`member`</ph> и <ph id="ph2">`idOfContainingObj`</ph> параметры Если <ph id="ph3">`obj`</ph> — &lt;xref:System.ValueType&gt;из-за того, выполняются исправления &lt;xref:System.ValueType&gt;объектов.&lt;/xref:System.ValueType&gt; &lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The space to store the information for a &lt;xref:System.ValueType&gt; is allocated inline with its containing object.</source>
          <target state="translated">Место для хранения информации о &lt;xref:System.ValueType&gt;размещаются вместе с его содержащего объекта.&lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when the &lt;xref:System.ValueType&gt; is boxed to be registered with the &lt;xref:System.Runtime.Serialization.ObjectManager&gt;, it loses the connection with its containing object.</source>
          <target state="translated">Тем не менее, когда &lt;xref:System.ValueType&gt;упаковывается регистрация &lt;xref:System.Runtime.Serialization.ObjectManager&gt;, он теряет соединение с его содержащего объекта.&lt;/xref:System.Runtime.Serialization.ObjectManager&gt; &lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee that fixups occur in the instance of the &lt;xref:System.ValueType&gt; stored in the containing object and not in the boxed instance, the &lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains some additional information.</source>
          <target state="translated">Чтобы гарантировать, что адресные привязки осуществляются в экземпляре &lt;xref:System.ValueType&gt;сохраняется вмещающего объекта и не в упакованном экземпляре, &lt;xref:System.Runtime.Serialization.ObjectManager&gt;сохраняет некоторые дополнительные сведения.&lt;/xref:System.Runtime.Serialization.ObjectManager&gt; &lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains information about both the object and its ID.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;хранит информацию об объекте и его идентификатор.&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Later during deserialization, &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt; can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.</source>
          <target state="translated">Далее в процессе десериализации &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;может использоваться для обнаружения ли уже был десериализован идентификатор определенного объекта или является ли он не прямая ссылка на объект еще десериализуются.&lt;/xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">Регистрируемый объект.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The ID of the object to register.</source>
          <target state="translated">Идентификатор объекта для регистрации.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`info`</ph> will be completed with any required fixup information and then passed to the required object when that object is completed.</source>
          <target state="translated"><ph id="ph1">`info`</ph>завершится с любой информации о необходимые исправления, а затем передается необходимому объекту, когда объект завершается.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The ID of the object that contains <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">Идентификатор объекта, который содержит <ph id="ph1">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This parameter is required only if <ph id="ph1">`obj`</ph> is a value type.</source>
          <target state="translated">Этот параметр является обязательным только в том случае, если <ph id="ph1">`obj`</ph> является типом значения.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The field in the containing object where <ph id="ph1">`obj`</ph> exists.</source>
          <target state="translated">Поле в вмещающего объекта где <ph id="ph1">`obj`</ph> существует.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This parameter has meaning only if <ph id="ph1">`obj`</ph> is a value type.</source>
          <target state="translated">Этот параметр имеет смысл только в том случае, если <ph id="ph1">`obj`</ph> является типом значения.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`obj`</ph> is a &lt;xref:System.ValueType&gt; and a member of an array, <ph id="ph2">`arrayIndex`</ph> contains the index within that array where <ph id="ph3">`obj`</ph> exists.</source>
          <target state="translated">Если <ph id="ph1">`obj`</ph> — &lt;xref:System.ValueType&gt;и элемента массива, <ph id="ph2">`arrayIndex`</ph> содержит индекс в этом массиве где <ph id="ph3">`obj`</ph> существует.&lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`arrayIndex`</ph> is ignored if <ph id="ph2">`obj`</ph> is not both a &lt;xref:System.ValueType&gt; and a member of an array.</source>
          <target state="translated"><ph id="ph1">`arrayIndex`</ph>учитывается, если <ph id="ph2">`obj`</ph> не является ни &lt;xref:System.ValueType&gt;и элемента массива.&lt;/xref:System.ValueType&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept> Меньше или равно нулю.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">member</ph><ept id="p3">&lt;/code&gt;</ept> is not a &lt;xref:System.Reflection.FieldInfo&gt; and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">member</ph><ept id="p4">&lt;/code&gt;</ept> isn't <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">member</ph><ept id="p3">&lt;/code&gt;</ept> is not a &lt;xref:System.Reflection.FieldInfo&gt; and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">member</ph><ept id="p4">&lt;/code&gt;</ept> isn't <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.FieldInfo&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>