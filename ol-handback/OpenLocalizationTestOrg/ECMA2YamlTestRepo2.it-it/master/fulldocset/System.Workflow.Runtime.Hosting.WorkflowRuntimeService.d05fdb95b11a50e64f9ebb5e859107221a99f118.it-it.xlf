<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0ea2cc3d70d31ea2b618485cb1cc69efee45358</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.Runtime.Hosting.WorkflowRuntimeService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a17340b147f684bab395979662a3c1a6c352cc95</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e866d941252268361f63c1128395e15319ffa83c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class from which the workflow runtime engine core services are derived.</source>
          <target state="translated">Rappresenta la classe base astratta dalla quale vengono derivati i servizi di base del motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       Services that derive from the WorkflowRuntimeService class can be started and stopped by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>Servizi che derivano dalla classe WorkflowRuntimeService possono essere avviati e interrotto dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order in which the services are started or stopped, however, is indeterminate, and services may require the support of other services in order to properly initialize themselves when they are started, and, conversely, may require the to support of other services in order to properly shut down when they are stopped.</source>
          <target state="translated">L'ordine in cui i servizi di avvio o l'arresto, tuttavia, è indeterminato e i servizi possono richiedere il supporto di altri servizi per correttamente l'inizializzazione quando vengono avviati e, al contrario, possono richiedere il supporto di altri servizi al fine di correttamente la chiusura quando vengono arrestati.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To address this problem, the workflow runtime engine provides two-phase mechanisms for starting and stopping services.</source>
          <target state="translated">Per risolvere questo problema, il motore di runtime del flusso di lavoro fornisce meccanismi a due fasi per l'avvio e arresto di servizi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; is called, the workflow runtime engine invokes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method for each of its services that derive from the WorkflowRuntimeService class.</source>
          <target state="translated">Quando &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;viene chiamato, il flusso di lavoro motore di runtime richiama il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;metodo per ognuno dei servizi che derivano dalla classe WorkflowRuntimeService.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>After all of these services have been started, the workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event, which causes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; method to be invoked for each workflow runtime engine service.</source>
          <target state="translated">Dopo l'avvio di tutti questi servizi, il motore di runtime del flusso di lavoro genera il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;evento che determina il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;metodo da richiamare per ogni servizio motore di runtime del flusso di lavoro.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your service can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; method to participate in this two phase process.</source>
          <target state="translated">Il servizio può eseguire l'override di &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;(metodo) deve far parte di questo processo in due fasi.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; is called, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method, the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event, and the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; method provide this two-phase mechanism.</source>
          <target state="translated">Analogamente, quando &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;viene chiamato, il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;(metodo), il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;evento e &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;metodo forniscono questo meccanismo a due fasi.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The State property contains a &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; value that indicates whether the service is in the process of starting or stopping or is completely started or stopped.</source>
          <target state="translated">La proprietà State contiene un &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;valore che indica se il servizio è in corso l'avvio o l'arresto o completamente avviato o arrestato.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Services that derive from the WorkflowRuntimeService class can raise the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt; event when they encounter a condition that causes an unhandled exception by calling &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;.</source>
          <target state="translated">Servizi che derivano dalla classe WorkflowRuntimeService possono generare l' &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;evento quando si verifica una condizione che provoca un'eccezione non gestita chiamando &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Services derived from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class, and the &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt; class ultimately derives from the WorkflowRuntimeService class.</source>
          <target state="translated">Servizi derivati dalla &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;classe, &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;classe, la &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;classe e la &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;classe deriva dalla classe WorkflowRuntimeService.&lt;/xref:System.Workflow.Runtime.Tracking.TrackingService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Quando viene implementato in una classe derivata, Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt; is initialized to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;viene inizializzato su &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Started"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, rappresenta il metodo che verrà chiamato quando il motore di runtime del flusso di lavoro genera il <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Started"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class implements a two-phase starting mechanism so that workflow runtime engine services may perform any initialization that depends on other services after the workflow runtime engine has invoked the  &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method for all of its workflow runtime engine services.</source>
          <target state="translated">Il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;implementa un meccanismo di avvio a due fasi in modo che i servizi motore di runtime del flusso di lavoro possono eseguire qualsiasi inizializzazione che dipende da altri servizi dopo che il motore di runtime del flusso di lavoro ha richiamato il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;metodo per tutti i relativi servizi motore di runtime del flusso di lavoro.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the workflow runtime engine has called the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method of all of its workflow runtime engine services, it raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event.</source>
          <target state="translated">Dopo l'esecuzione del flusso di lavoro è stato chiamato motore il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;metodo di tutti i relativi servizi motore di runtime del flusso di lavoro, genera il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;evento.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the OnStarted method to provide any final startup functionality required by your service when the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">È possibile eseguire l'override del metodo OnStarted per fornire qualsiasi funzionalità di avvio conclusiva richiesta del servizio quando il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;viene generato l'evento.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mechanics of subscribing and unsubscribing from the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event is handled internally.</source>
          <target state="translated">Il meccanismo di sottoscrizione e annullamento della sottoscrizione di &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;internamente viene gestito l'evento.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your service is added to the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; after the workflow runtime engine has already been started, the workflow runtime engine will call &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Se il servizio viene aggiunto al motore di runtime del flusso di lavoro da una chiamata a &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;dopo che il motore di runtime del flusso di lavoro è già stato avviato, il motore di runtime del flusso di lavoro chiamerà &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;sul servizio.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in this situation, the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in OnStarted from inside the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method.</source>
          <target state="translated">Tuttavia, in questo caso, il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;già verificato l'evento, di conseguenza, il servizio debba eseguire qualsiasi inizializzazione che normalmente eseguirebbe in OnStarted all'interno di &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;(metodo).&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">È possibile testare &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;per determinare se il motore di runtime del flusso di lavoro è stato avviato.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt; is set to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; before OnStarted is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;è impostato su &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;prima che venga richiamato OnStarted.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of OnStarted performs no action.</source>
          <target state="translated">L'implementazione predefinita di OnStarted non esegue alcuna azione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Stopped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, rappresenta il metodo che verrà chiamato quando il motore di runtime del flusso di lavoro genera il <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Stopped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class implements a two-phase stopping mechanism so that workflow runtime engine services may retain some functionality after their &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method is invoked by the workflow runtime engine in order that they may, if necessary, support the shutdown of other services.</source>
          <target state="translated">Il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;implementa un meccanismo di arresto a due fasi in modo che i servizi motore di runtime del flusso di lavoro di mantenere alcune funzionalità dopo la loro &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;metodo viene richiamato dal motore di runtime del flusso di lavoro in modo che possano, se necessario, supportare la chiusura di altri servizi.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the workflow runtime engine has called the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method of all of its workflow runtime engine services, it raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event.</source>
          <target state="translated">Dopo l'esecuzione del flusso di lavoro è stato chiamato motore il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;metodo di tutti i relativi servizi motore di runtime del flusso di lavoro, genera il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;evento.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the OnStopped method to provide any final shutdown functionality required by your service when the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">È possibile eseguire l'override del metodo OnStopped per fornire qualsiasi funzionalità di chiusura conclusiva richiesta del servizio quando il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;viene generato l'evento.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mechanics of subscribing and unsubscribing from the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event is handled internally.</source>
          <target state="translated">Il meccanismo di sottoscrizione e annullamento della sottoscrizione di &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;internamente viene gestito l'evento.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; is removed from the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; while the workflow runtime engine is running, the workflow runtime engine will call &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Se il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;viene rimosso dal motore di runtime del flusso di lavoro mediante una chiamata a &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;mentre è in esecuzione il motore di runtime del flusso di lavoro, il motore di runtime del flusso di lavoro chiamerà &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;sul servizio.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in this situation, the OnStopped method will not be called for your service.</source>
          <target state="translated">Tuttavia, in questo caso, il metodo OnStopped non essere chiamato per il servizio.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, your service may have to perform any final shutdown that it would ordinarily perform in OnStopped from inside the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method.</source>
          <target state="translated">Pertanto, il servizio debba eseguire operazioni di chiusura conclusive che normalmente eseguirebbe in OnStopped all'interno di &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;metodo.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine is running.</source>
          <target state="translated">È possibile testare &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;per determinare se il motore di runtime del flusso di lavoro è in esecuzione.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt; is set to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; before OnStopped is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;è impostato su &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;prima che venga richiamato OnStopped.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of OnStopped performs no action.</source>
          <target state="translated">L'implementazione predefinita di OnStopped non esegue alcuna azione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Genera il <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your service can call RaiseServicesExceptionNotHandledEvent to raise the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt; event when it encounters an exception that it cannot handle during its execution.</source>
          <target state="translated">Il servizio può chiamare RaiseServicesExceptionNotHandledEvent per generare il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;evento quando viene rilevata un'eccezione che non può gestire durante l'esecuzione.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.Guid&gt; of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">È necessario passare il &lt;xref:System.Guid&gt;dell'istanza del flusso di lavoro associato all'eccezione non gestita.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a timer service might pass the &lt;xref:System.Guid&gt; associated with the timer for which the exception occurred.</source>
          <target state="translated">Ad esempio, è possibile passare un servizio timer di &lt;xref:System.Guid&gt;associato al timer per il quale si è verificata l'eccezione.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The exception that could not be handled.</source>
          <target state="translated">Eccezione non gestita.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">Il &lt;xref:System.Guid&gt;dell'istanza del flusso di lavoro associato all'eccezione non gestita.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this service.</source>
          <target state="translated">Ottiene il <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> per questo servizio.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine sets this property before it calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; on the service.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro imposta questa proprietà prima di chiamare &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;nel servizio.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, starts the service and changes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt; to <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, avvia il servizio e modifica di &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;a <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Start is invoked by the workflow runtime engine on all of its services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; is called.</source>
          <target state="translated">Inizio viene richiamato dal motore di runtime del flusso di lavoro in tutti i servizi che derivano dalla &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;classe quando &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;viene chiamato.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Start is also invoked by the workflow runtime engine when a workflow runtime engine service is added to the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; after the workflow runtime engine has already started.</source>
          <target state="translated">Inizio viene anche richiamato dal motore di runtime del flusso di lavoro quando un servizio motore di runtime del flusso di lavoro viene aggiunto al motore di runtime del flusso di lavoro da una chiamata a &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;dopo l'avvio del motore di runtime del flusso di lavoro.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of Start tracks whether the service has been started and uses this information to throw the appropriate exception if the service is started while it is already running.</source>
          <target state="translated">L'implementazione predefinita di inizio rileva se il servizio è stato avviato e utilizza queste informazioni per generare l'eccezione adatta se il servizio viene avviato mentre è già in esecuzione.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide additional functionality necessary to have your service started by the workflow runtime engine by overriding this method.</source>
          <target state="translated">È possibile fornire funzionalità aggiuntive per il servizio venga avviato dal motore di runtime del flusso di lavoro eseguendo l'override di questo metodo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no guarantee about which, if any, services will be running when the workflow runtime engine calls Start on your service.</source>
          <target state="translated">Non c'è garanzia su quale, se presente, servizi verranno eseguito quando il motore di runtime del flusso di lavoro chiama l'avvio del servizio.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, in the Start method, you should only perform any initialization that does not depend on functionality provided by other services.</source>
          <target state="translated">Pertanto, in metodo di avvio, è necessario eseguire solo un'inizializzazione che non dipende da funzionalità fornite da altri servizi.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes functionality provided by core services such as the scheduler service.</source>
          <target state="translated">Ciò include la funzionalità fornita da servizi di base, ad esempio il servizio Utilità di pianificazione.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event after it has called the Start method of all of its workflow runtime engine services.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;evento dopo aver chiamato il metodo di avvio di tutti i relativi flussi di lavoro servizi motore di runtime.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your service requires additional initialization after all of the workflow runtime engine services have been started, you can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; method in order to perform this initialization when the Start event is raised.</source>
          <target state="translated">Se il servizio richiede ulteriori inizializzazioni dopo l'avvio di tutti i servizi motore di runtime del flusso di lavoro, è possibile eseguire l'override di &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;metodo per eseguire tale inizializzazione quando viene generato l'evento di inizio.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your service is added to the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; after the workflow runtime engine has already been started, the workflow runtime engine will call Start on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Se il servizio viene aggiunto al motore di runtime del flusso di lavoro da una chiamata a &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;dopo che il motore di runtime del flusso di lavoro è già stato avviato, il motore di runtime del flusso di lavoro chiamerà l'avvio del servizio.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in this situation, the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; from inside the Start method.</source>
          <target state="translated">Tuttavia, in questo caso, il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;già verificato l'evento, di conseguenza, il servizio debba eseguire qualsiasi inizializzazione che normalmente eseguirebbe in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;all'interno del metodo di avvio.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">È possibile testare &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;per determinare se il motore di runtime del flusso di lavoro è stato avviato.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Start should only be called by the workflow runtime engine.</source>
          <target state="translated">Inizio deve essere chiamato solo dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt; is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)       -or-       The service has already been started.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;è un riferimento null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) - oppure - il servizio è già stato avviato.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the state of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Ottiene lo stato del <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class implements two-phase mechanisms for both starting and stopping a workflow runtime engine service.</source>
          <target state="translated">Il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;implementa meccanismi a due fasi per l'avvio e arresto del servizio motore di runtime del flusso di lavoro.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first phase of the start mechanism begins when the workflow runtime engine calls the implementation of the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method for the service.</source>
          <target state="translated">La prima fase del meccanismo di avvio inizia quando il motore di runtime del flusso di lavoro chiama l'implementazione del &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;metodo per il servizio.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should call the base implementation of &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;, which sets State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">Questo metodo deve chiamare l'implementazione di base di &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;, che imposta lo stato per &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second phase occurs after the workflow runtime engine starts all of its workflow runtime engine services when it raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event.</source>
          <target state="translated">La seconda fase si verifica dopo l'avvio del motore di runtime del flusso di lavoro tutti i relativi servizi motore di runtime del flusso di lavoro quando genera il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;evento.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; internally manages a subscription to this event and its handler will set State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">Il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;gestisce internamente una sottoscrizione a questo evento e il relativo gestore imposterà lo stato su &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two-phase mechanism for stopping a workflow runtime engine service begins when the workflow runtime engine calls the implementation of the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method for the service.</source>
          <target state="translated">Il meccanismo a due fasi per l'arresto del servizio motore di runtime del flusso di lavoro inizia quando il motore di runtime del flusso di lavoro chiama l'implementazione del &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;metodo per il servizio.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should call the base implementation of &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;, which sets State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">Questo metodo deve chiamare l'implementazione di base di &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;, che imposta lo stato per &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>After it has stopped all of its workflow runtime engine services, the workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt; event.</source>
          <target state="translated">Dopo aver arrestato tutti i relativi servizi motore di runtime del flusso di lavoro, il motore di runtime del flusso di lavoro genera il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;evento.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; internally manages a subscription to this event and its handler will set State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">Il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;gestisce internamente una sottoscrizione a questo evento e il relativo gestore imposterà lo stato su &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Uno del <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valori.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, stops the service and changes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt; to <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, arresta il servizio e modifica di &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;a <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stop is invoked by the workflow runtime engine on all of its services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; is called.</source>
          <target state="translated">Arresto viene richiamato dal motore di runtime del flusso di lavoro in tutti i servizi che derivano dalla &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;classe quando &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;viene chiamato.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stop is also invoked by the workflow runtime engine when a workflow runtime engine service is removed from the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;.</source>
          <target state="translated">Arresto viene anche richiamato dal motore di runtime del flusso di lavoro quando un servizio motore di runtime del flusso di lavoro viene rimosso dal motore di runtime del flusso di lavoro da una chiamata a &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of Stop tracks whether the service has been started and uses this information to throw the appropriate exception if the service is stopped before it is started.</source>
          <target state="translated">L'implementazione predefinita di arresto rileva se il servizio è stato avviato e utilizza queste informazioni per generare l'eccezione adatta se il servizio viene arrestato prima che venga avviato.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide additional functionality necessary to have your service stopped by the workflow runtime engine by overriding this method.</source>
          <target state="translated">È possibile fornire funzionalità aggiuntive per il servizio venga arrestato dal motore di runtime del flusso di lavoro eseguendo l'override di questo metodo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no guarantee about which, if any, services will be stopped or running when Stop is called on your service.</source>
          <target state="translated">Non c'è garanzia su quale, se disponibile, venga arrestato o eseguito quando viene chiamato sul servizio.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event after it has called the Stop method of all of its workflow runtime engine services.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;evento dopo aver chiamato il metodo di arresto di tutti i relativi flussi di lavoro servizi motore di runtime.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your service may need to retain some residual functionality to support other services until all the workflow runtime engine services have had their stop methods invoked by the workflow runtime engine.</source>
          <target state="translated">Il servizio debba mantenere alcune funzionalità residue per supportare altri servizi fino a quando tutti i servizi di motore runtime del flusso di lavoro sono stati i metodi stop richiamati dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your service must retain such functionality, you can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; method to perform any additional action required to finish stopping your service when the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">Se il servizio deve mantenere tali funzionalità, è possibile eseguire l'override di &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;metodo per eseguire operazioni aggiuntive necessarie per completare l'arresto del servizio quando il &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;viene generato l'evento.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; is removed from the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; while the workflow runtime engine is running, the workflow runtime engine will call Stop on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Se il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;viene rimosso dal motore di runtime del flusso di lavoro mediante una chiamata a &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;mentre è in esecuzione il motore di runtime del flusso di lavoro, il motore di runtime del flusso di lavoro chiamerà arresto del servizio.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in this situation, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; method will not be called for your service.</source>
          <target state="translated">Tuttavia, in questo caso, il &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;(metodo) non verrà chiamato per il servizio.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, your service may have to perform any additional shutdown functionality that it would ordinarily perform in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; from inside the Stop method.</source>
          <target state="translated">Pertanto, il servizio debba eseguire qualsiasi funzionalità di chiusura aggiuntiva che normalmente eseguirebbe in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;all'interno del metodo di arresto.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine is running.</source>
          <target state="translated">È possibile testare &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;per determinare se il motore di runtime del flusso di lavoro è in esecuzione.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stop should only be called by the workflow runtime engine.</source>
          <target state="translated">Arresto deve essere chiamato solo dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt; is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;è un riferimento null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-or-       The service has not yet been started.</source>
          <target state="translated">- oppure - il servizio non è ancora stato avviato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>