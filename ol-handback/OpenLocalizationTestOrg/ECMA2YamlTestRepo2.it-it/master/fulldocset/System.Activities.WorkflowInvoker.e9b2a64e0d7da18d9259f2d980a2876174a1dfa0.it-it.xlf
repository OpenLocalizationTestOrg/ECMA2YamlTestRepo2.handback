<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8750490bc611dc59fa90f85012465006f36a32c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Activities.WorkflowInvoker.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">433be08ee107c2e6bc19510647cd019ca055a479</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bf8a2f4785a09ff6c880528e2883d18ccc62a2e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a means for invoking a workflow as if it were a method call.</source>
          <target state="translated">Fornisce un mezzo per richiamare un flusso di lavoro come se fosse una chiamata al metodo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>WorkflowInvoker contains both instance and static methods for invoking workflows synchronously, and instance methods for invoking workflows asynchronously.</source>
          <target state="translated">WorkflowInvoker contiene l'istanza che metodi statici per il richiamo in modo sincrono di flussi di lavoro e metodi di istanza per il richiamo di flussi di lavoro in modo asincrono.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>WorkflowInvoker does not allow instance control such as persisting, unloading, or resuming bookmarks.</source>
          <target state="translated">WorkflowInvoker non consente il controllo dell'istanza, ad esempio la persistenza, lo scaricamento o ripresa di segnalibri.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If instance control is desired, use &lt;xref:System.Activities.WorkflowApplication&gt; instead.</source>
          <target state="translated">Se si desidera il controllo dell'istanza, utilizzare &lt;xref:System.Activities.WorkflowApplication&gt;invece.&lt;/xref:System.Activities.WorkflowApplication&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To execute workflows synchronously with no instance control, call the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; method.</source>
          <target state="translated">Per eseguire flussi di lavoro in modo sincrono con nessun controllo dell'istanza, chiamare il &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;metodo.&lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To execute a workflow asynchronously with no instance control, use the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt; and &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; method pairs, or the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; method.</source>
          <target state="translated">Per eseguire un flusso di lavoro in modo asincrono con nessun controllo dell'istanza, utilizzare il &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;e &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;coppie di metodi o &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;metodo.&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; &lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; &lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Activities.WorkflowInvoker&gt; contains both instance and static methods for invoking workflows synchronously, and instance methods for invoking workflows asynchronously.</source>
          <target state="translated">&lt;xref:System.Activities.WorkflowInvoker&gt;contiene l'istanza che metodi statici per il richiamo in modo sincrono di flussi di lavoro e metodi di istanza per il richiamo di flussi di lavoro in modo asincrono.&lt;/xref:System.Activities.WorkflowInvoker&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to be invoked by this instance of the <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">La definizione del flusso di lavoro di essere richiamato da questa istanza del flusso di lavoro di <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified &lt;xref:System.AsyncCallback&gt; and user-provided state.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono utilizzando l'oggetto specificato &lt;xref:System.AsyncCallback&gt;e lo stato fornito dall'utente.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; from the <ph id="ph1">`callback`</ph> method.</source>
          <target state="translated">Per ricevere una notifica quando il flusso di lavoro è completo e recuperare i parametri di output del flusso di lavoro, chiamare &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;dal <ph id="ph1">`callback`</ph> metodo.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">Se &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;viene chiamato prima che venga completato il flusso di lavoro, si blocca fino a quando non viene completato il flusso di lavoro.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il &lt;xref:System.IAsyncResult&gt;modello di struttura asincrono.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The method to be called when the workflow has completed.</source>
          <target state="translated">Il metodo da chiamare quando il flusso di lavoro è stata completata.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A reference to the asynchronous invoke operation.</source>
          <target state="translated">Un riferimento a asincrona operazione invoke.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters, &lt;xref:System.AsyncCallback&gt;, and user-provided state.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono utilizzando l'oggetto specificato <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> dei parametri di input, &lt;xref:System.AsyncCallback&gt;e lo stato fornito dall'utente.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; from the <ph id="ph1">`callback`</ph> method.</source>
          <target state="translated">Per ricevere una notifica quando il flusso di lavoro è completo e recuperare i parametri di output del flusso di lavoro, chiamare &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;dal <ph id="ph1">`callback`</ph> metodo.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">Se &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;viene chiamato prima che venga completato il flusso di lavoro, si blocca fino a quando non viene completato il flusso di lavoro.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il &lt;xref:System.IAsyncResult&gt;modello di struttura asincrono.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The method to be called when the workflow has completed.</source>
          <target state="translated">Il metodo da chiamare quando il flusso di lavoro è stata completata.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A reference to the asynchronous invoke operation.</source>
          <target state="translated">Un riferimento a asincrona operazione invoke.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified time-out interval, &lt;xref:System.AsyncCallback&gt;, and user-provided state.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono usando l'intervallo di timeout specificato, &lt;xref:System.AsyncCallback&gt;e lo stato fornito dall'utente.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; from the <ph id="ph1">`callback`</ph> method.</source>
          <target state="translated">Per ricevere una notifica quando il flusso di lavoro è completo e recuperare i parametri di output del flusso di lavoro, chiamare &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;dal <ph id="ph1">`callback`</ph> metodo.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">Se &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;viene chiamato prima che venga completato il flusso di lavoro, si blocca fino a quando non viene completato il flusso di lavoro.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown when the &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; method is called.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata quando il &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;metodo viene chiamato.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; &lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il &lt;xref:System.IAsyncResult&gt;modello di struttura asincrono.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The method to be called when the workflow has completed.</source>
          <target state="translated">Il metodo da chiamare quando il flusso di lavoro è stata completata.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A reference to the asynchronous invoke operation.</source>
          <target state="translated">Un riferimento a asincrona operazione invoke.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters, time-out interval, &lt;xref:System.AsyncCallback&gt;, and user-provided state.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono utilizzando l'oggetto specificato <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> dei parametri di input, intervallo di timeout, &lt;xref:System.AsyncCallback&gt;e lo stato fornito dall'utente.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; from the <ph id="ph1">`callback`</ph> method.</source>
          <target state="translated">Per ricevere una notifica quando il flusso di lavoro è completo e recuperare i parametri di output del flusso di lavoro, chiamare &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;dal <ph id="ph1">`callback`</ph> metodo.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">Se &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;viene chiamato prima che venga completato il flusso di lavoro, si blocca fino a quando non viene completato il flusso di lavoro.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown when &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata quando &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;viene chiamato.&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; &lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il &lt;xref:System.IAsyncResult&gt;modello di struttura asincrono.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The method to be called when the workflow has completed.</source>
          <target state="translated">Il metodo da chiamare quando il flusso di lavoro è stata completata.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Oggetto facoltativo specifico dell'applicazione che contiene informazioni sull'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A reference to the asynchronous invoke operation.</source>
          <target state="translated">Un riferimento a asincrona operazione invoke.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Attempts to cancel the workflow that was invoked with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">userState</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Tenta di annullare il flusso di lavoro che è stato richiamato con l'oggetto specificato <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">userState</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only a workflow invoked by one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that takes a <ph id="ph1">`userState`</ph> parameter can be canceled.</source>
          <target state="translated">Solo un flusso di lavoro richiamato da uno del &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;overload che accetta un <ph id="ph1">`userState`</ph> parametro può essere annullato.&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cancellation succeeds, the &lt;xref:System.ComponentModel.Cancelled%2A&gt; property of the &lt;xref:System.Activities.InvokeCompletedEventArgs&gt; passed to the &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt; handler is set to <ph id="ph1">`true`</ph>; otherwise, it is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Se l'annullamento ha esito positivo, il &lt;xref:System.ComponentModel.Cancelled%2A&gt;proprietà del &lt;xref:System.Activities.InvokeCompletedEventArgs&gt;passato al &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;gestore è impostato su <ph id="ph1">`true`</ph>; in caso contrario, viene impostato su <ph id="ph2">`false`</ph>.&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt; &lt;/xref:System.Activities.InvokeCompletedEventArgs&gt; &lt;/xref:System.ComponentModel.Cancelled%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The token for the workflow to cancel.</source>
          <target state="translated">Il token per annullare il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns the results of a workflow that was invoked using one of the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt; overloads.</source>
          <target state="translated">Restituisce i risultati di un flusso di lavoro richiamati utilizzando uno del &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt;Overload.&lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call EndInvoke from the <ph id="ph1">`callback`</ph> method specified by &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;.</source>
          <target state="translated">Per ricevere una notifica quando il flusso di lavoro è completo e recuperare i parametri di output del flusso di lavoro, chiamare EndInvoke dal <ph id="ph1">`callback`</ph> specificato da &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt; (metodo)</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If EndInvoke is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">Se EndInvoke viene chiamato prima che venga completato il flusso di lavoro, si blocca fino a quando non viene completato il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the result of a workflow invoked asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">Questo metodo restituisce il risultato di un flusso di lavoro richiamato in modo asincrono utilizzando il &lt;xref:System.IAsyncResult&gt;modello di struttura asincrono.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Cenni preliminari sulla programmazione asincrona<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt; operation that started the workflow.</source>
          <target state="translated">Il &lt;xref:System.IAsyncResult&gt;che fa riferimento il &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt;operazione che ha avviato il flusso di lavoro.&lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">Un dizionario dell'attività radice <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valori codificati da un argomento il nome che rappresentano gli output del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> of extensions that are available to workflows invoked by a <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">Ottiene il <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> delle estensioni disponibili per i flussi di lavoro richiamati da un <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> istanza.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used by workflow host authors to add extensions to the &lt;xref:System.Activities.WorkflowInvoker&gt; instance so they will be available to workflows invoked by it.</source>
          <target state="translated">Questa proprietà viene utilizzata dagli autori dell'host del flusso di lavoro per aggiungere estensioni all' &lt;xref:System.Activities.WorkflowInvoker&gt;istanza in modo da renderle disponibili ai flussi di lavoro richiamati da tale&lt;/xref:System.Activities.WorkflowInvoker&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> of extensions that are available to workflows invoked by a <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">Il <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> delle estensioni disponibili per i flussi di lavoro richiamati da un <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> istanza.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the workflow definition passed to the <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph> constructor.</source>
          <target state="translated">Richiama un flusso di lavoro in modo sincrono usando la definizione del flusso di lavoro passata al <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">Questo metodo si blocca fino a quando il flusso di lavoro è stata completata, incluso il tempo di inattività.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">Ogni esecuzione del flusso di lavoro è garantita per essere eseguita sul thread di chiamata.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">Un dizionario dell'attività radice <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valori codificati da un argomento il nome che rappresentano gli output del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the specified workflow definition.</source>
          <target state="translated">Richiama un flusso di lavoro in modo sincrono usando la definizione di flusso di lavoro specificata.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">Questo metodo si blocca fino a quando il flusso di lavoro è stata completata, incluso il tempo di inattività.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">Ogni esecuzione del flusso di lavoro è garantita per essere eseguita sul thread di chiamata.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to invoke.</source>
          <target state="translated">La definizione del flusso di lavoro del flusso di lavoro da richiamare.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">Un dizionario dell'attività radice <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valori codificati da un argomento il nome che rappresentano gli output del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Invokes the activity passed to the <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph> constructor synchronously with the specified <ph id="ph3">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph4">&amp;gt;</ph> of input parameters.</source>
          <target state="translated">Richiama l'attività passata per il <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph> costruttore in modo sincrono con l'oggetto specificato <ph id="ph3">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph4">&amp;gt;</ph> dei parametri di input.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">Questo metodo si blocca fino a quando il flusso di lavoro è stata completata, incluso il tempo di inattività.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">Ogni esecuzione del flusso di lavoro è garantita per essere eseguita sul thread di chiamata.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">Un dizionario dell'attività radice <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valori codificati da un argomento il nome che rappresentano gli output del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously with the specified time-out interval.</source>
          <target state="translated">Richiama un flusso di lavoro in modo sincrono con l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">Questo metodo si blocca fino a quando il flusso di lavoro è stata completata, incluso il tempo di inattività.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">Ogni esecuzione del flusso di lavoro è garantita per essere eseguita sul thread di chiamata.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">Un dizionario dell'attività radice <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valori codificati da un argomento il nome che rappresentano gli output del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the specified workflow definition and <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters.</source>
          <target state="translated">Richiama un flusso di lavoro in modo sincrono usando la definizione di flusso di lavoro specificata e <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> dei parametri di input.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">Questo metodo si blocca fino a quando il flusso di lavoro è stata completata, incluso il tempo di inattività.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">Ogni esecuzione del flusso di lavoro è garantita per essere eseguita sul thread di chiamata.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to invoke.</source>
          <target state="translated">La definizione del flusso di lavoro del flusso di lavoro da richiamare.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">Un dizionario dell'attività radice <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valori codificati da un argomento il nome che rappresentano gli output del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the specified workflow definition and time-out interval.</source>
          <target state="translated">Richiama un flusso di lavoro in modo sincrono usando la definizione di flusso di lavoro specificata e l'intervallo di timeout.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">Questo metodo si blocca fino a quando il flusso di lavoro è stata completata, incluso il tempo di inattività.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">Ogni esecuzione del flusso di lavoro è garantita per essere eseguita sul thread di chiamata.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to invoke.</source>
          <target state="translated">La definizione del flusso di lavoro del flusso di lavoro da richiamare.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">Un dizionario dell'attività radice <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valori codificati da un argomento il nome che rappresentano gli output del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Invokes the activity passed to the <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph> constructor synchronously with the specified <ph id="ph3">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph4">&amp;gt;</ph> of input parameters and the specified time-out interval.</source>
          <target state="translated">Richiama l'attività passata per il <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph> costruttore in modo sincrono con l'oggetto specificato <ph id="ph3">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph4">&amp;gt;</ph> di parametri di input e l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">Questo metodo si blocca fino a quando il flusso di lavoro è stata completata, incluso il tempo di inattività.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">Ogni esecuzione del flusso di lavoro è garantita per essere eseguita sul thread di chiamata.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">Un dizionario dell'attività radice <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valori codificati da un argomento il nome che rappresentano gli output del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the specified workflow definition, <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters, and time-out interval.</source>
          <target state="translated">Richiama un flusso di lavoro in modo sincrono usando la definizione di flusso di lavoro specificata, <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> dei parametri di input e l'intervallo di timeout.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">Questo metodo si blocca fino a quando il flusso di lavoro è stata completata, incluso il tempo di inattività.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">Ogni esecuzione del flusso di lavoro è garantita per essere eseguita sul thread di chiamata.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to invoke.</source>
          <target state="translated">La definizione del flusso di lavoro del flusso di lavoro da richiamare.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">Un dizionario dell'attività radice <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valori codificati da un argomento il nome che rappresentano gli output del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously.</source>
          <target state="translated">Richiama in modo asincrono un flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">Per essere notificato quando il flusso di lavoro è completo, gestire &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono basato su eventi.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Panoramica del modello asincrono basato su eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono utilizzando l'oggetto specificato <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> dei parametri di input.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">Per essere notificato quando il flusso di lavoro è completo, gestire &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono basato su eventi.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Panoramica del modello asincrono basato su eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified unique identifier.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono utilizzando l'identificatore univoco specificato.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`userState`</ph> parameter must be unique across all currently running &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; operations for the current activity.</source>
          <target state="translated">Il <ph id="ph1">`userState`</ph> parametro deve essere univoco tra tutti attualmente in esecuzione &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;operazioni per l'attività corrente.&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`userState`</ph> parameter is not unique, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">Se il <ph id="ph1">`userState`</ph> parametro non è univoco, un &lt;xref:System.ArgumentException&gt;viene generata un'eccezione.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`userState`</ph> is used to identify the workflow in &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;, and to cancel the workflow using &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>viene utilizzato per identificare il flusso di lavoro &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;e annullare il flusso di lavoro &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt; &lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">Per essere notificato quando il flusso di lavoro è completo, gestire &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono basato su eventi.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Panoramica del modello asincrono basato su eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A user-provided object used to distinguish this particular asynchronous invoke operation from other current asynchronous invoke operations.</source>
          <target state="translated">Un oggetto fornito dall'utente utilizzato per distinguere questa particolare asincrona operazione invoke dalle altre asincrone correnti richiamare le operazioni.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously with the specified time-out interval.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono con l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">Per essere notificato quando il flusso di lavoro è completo, gestire &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono basato su eventi.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Panoramica del modello asincrono basato su eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters and a unique identifier.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono utilizzando l'oggetto specificato <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> di parametri di input e un identificatore univoco.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`userState`</ph> parameter must be unique across all currently running &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; operations for the current activity.</source>
          <target state="translated">Il <ph id="ph1">`userState`</ph> parametro deve essere univoco tra tutti attualmente in esecuzione &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;operazioni per l'attività corrente.&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`userState`</ph> is not unique, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">Se <ph id="ph1">`userState`</ph> non è univoco, un &lt;xref:System.ArgumentException&gt;viene generata un'eccezione.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`userState`</ph> is used to identify the workflow in &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;, and to cancel the workflow using &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>viene utilizzato per identificare il flusso di lavoro &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;e annullare il flusso di lavoro &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt; &lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">Per essere notificato quando il flusso di lavoro è completo, gestire &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">Per configurare un intervallo di timeout, in cui è necessario completare il flusso di lavoro, usare uno degli &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;overload che accettano un &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono basato su eventi.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Panoramica del modello asincrono basato su eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A user-provided object used to distinguish this particular asynchronous invoke operation from other current asynchronous invoke operations.</source>
          <target state="translated">Un oggetto fornito dall'utente utilizzato per distinguere questa particolare asincrona operazione invoke dalle altre asincrone correnti richiamare le operazioni.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously with the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters and the specified time-out interval.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono con il parametro specificato <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> di parametri di input e l'intervallo di timeout specificato.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">Per essere notificato quando il flusso di lavoro è completo, gestire &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono basato su eventi.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Panoramica del modello asincrono basato su eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously with the specified time-out interval and a unique identifier.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono con l'intervallo di timeout specificato e un identificatore univoco.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`userState`</ph> parameter must be unique across all currently running &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; operations for the current activity.</source>
          <target state="translated">Il <ph id="ph1">`userState`</ph> parametro deve essere univoco tra tutti attualmente in esecuzione &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;operazioni per l'attività corrente.&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`userState`</ph> is not unique, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">Se <ph id="ph1">`userState`</ph> non è univoco, un &lt;xref:System.ArgumentException&gt;viene generata un'eccezione.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`userState`</ph> is used to identify the workflow in &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;, and to cancel the workflow using &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>viene utilizzato per identificare il flusso di lavoro &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;e annullare il flusso di lavoro &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt; &lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">Per essere notificato quando il flusso di lavoro è completo, gestire &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono basato su eventi.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Panoramica del modello asincrono basato su eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A user-provided object used to distinguish this particular asynchronous invoke operation from other current asynchronous invoke operations.</source>
          <target state="translated">Un oggetto fornito dall'utente utilizzato per distinguere questa particolare asincrona operazione invoke dalle altre asincrone correnti richiamare le operazioni.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously with the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters, the specified time-out interval, and a unique identifier.</source>
          <target state="translated">Richiama un flusso di lavoro in modo asincrono con il parametro specificato <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> di parametri di input, l'intervallo di timeout specificato e un identificatore univoco.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`userState`</ph> parameter must be unique across all currently running &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; operations for the current activity.</source>
          <target state="translated">Il <ph id="ph1">`userState`</ph> parametro deve essere univoco tra tutti attualmente in esecuzione &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;operazioni per l'attività corrente.&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`userState`</ph> is not unique, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">Se <ph id="ph1">`userState`</ph> non è univoco, un &lt;xref:System.ArgumentException&gt;viene generata un'eccezione.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`userState`</ph> is used to identify the workflow in &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;, and to cancel the workflow using &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>viene utilizzato per identificare il flusso di lavoro &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;e annullare il flusso di lavoro &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt; &lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">Per essere notificato quando il flusso di lavoro è completo, gestire &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Se il flusso di lavoro non viene completata entro l'intervallo di timeout specificato il flusso di lavoro viene interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il &lt;xref:System.TimeoutException&gt;viene generata solo se l'intervallo di timeout scade e il flusso di lavoro diventa inattivo durante l'esecuzione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">Un flusso di lavoro che richiede più tempo rispetto all'intervallo di timeout specificato viene completato correttamente se il flusso di lavoro non diventa inattivo.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">Questo metodo richiama un flusso di lavoro in modo asincrono utilizzando il modello di struttura asincrono basato su eventi.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Panoramica del modello asincrono basato su eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Il dizionario di parametri di input per il flusso di lavoro codificati dal nome dell'argomento.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">Intervallo in cui il flusso di lavoro deve essere completata prima che sia interrotto e un &lt;xref:System.TimeoutException&gt;viene generata un'eccezione.&lt;/xref:System.TimeoutException&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A user-provided object used to distinguish this particular asynchronous invoke operation from other current asynchronous invoke operations.</source>
          <target state="translated">Un oggetto fornito dall'utente utilizzato per distinguere questa particolare asincrona operazione invoke dalle altre asincrone correnti richiamare le operazioni.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Occurs when the workflow invoked by one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync*&gt; overloads is completed or canceled.</source>
          <target state="translated">Si verifica quando il flusso di lavoro richiamato da uno del &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync*&gt;overload è stata completata o annullata.&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync*&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle this to determine whether a workflow invoked with one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads completed successfully and to retrieve the output arguments of the completed workflow.</source>
          <target state="translated">Gestirlo per determinare se un flusso di lavoro richiamato con uno del &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;Overload completato correttamente e per recuperare gli argomenti di output del flusso di lavoro completato.&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>