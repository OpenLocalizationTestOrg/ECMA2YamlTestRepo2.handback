<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3babf752cda1959b9fe1dc4066dab91e524618cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.WeakEventManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">405ac814751751e817156a9b131a12310f85f791</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea2a89fc5ac37f0d3a6ebf9c4b7068aa0c1bba2a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class for the event manager that is used in the <bpt id="p1">*</bpt>weak event pattern<ept id="p1">*</ept>.</source>
          <target state="translated">Fornisce una classe base per il gestore di evento che viene utilizzato la <bpt id="p1">*</bpt>modello di eventi deboli<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The manager adds and removes listeners for events (or callbacks) that also use the pattern.</source>
          <target state="translated">Il gestore aggiunge e rimuove i listener di eventi (o callback) che utilizzano il modello.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use the weak event pattern when the event source has an object lifetime that is independent of the event listeners.</source>
          <target state="translated">Quando l'origine eventi ha una durata dell'oggetto che è indipendente dal listener di eventi, in genere utilizzato lo schema di eventi deboli.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the central event dispatching capability of a WeakEventManager allows the listener's handlers to be garbage collected even if the source object persists.</source>
          <target state="translated">Utilizzando la funzionalità di invio evento centrale di un WeakEventManager consente ai gestori del listener da sottoporre a garbage collection anche se l'oggetto di origine viene mantenuto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>By contrast, a regular event hookup using the <ph id="ph1">`+=`</ph> operator causes the potentially disconnected source to hold a reference to the listeners.</source>
          <target state="translated">Al contrario, un associazione dell'evento normale utilizzando il <ph id="ph1">`+=`</ph> operatore fa sì che l'origine potenzialmente disconnessa mantenere un riferimento di listener di traccia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This prevents the receiver from being garbage collected in a timely fashion.</source>
          <target state="translated">Ciò impedisce che il destinatario di garbage collection in modo tempestivo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>One common situation where the lifetime relationships between sources and listeners should use of the weak event pattern is the handling of update events coming from data bindings.</source>
          <target state="translated">Una situazione comune in cui è necessario utilizzare le relazioni di durata tra origini e listener del modello di evento debole è la gestione degli eventi di aggiornamento provenienti da associazioni di dati.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The weak event pattern can also be used for callbacks and regular events.</source>
          <target state="translated">Il modello di eventi deboli nonché per eventi regolari e i callback.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes base class values when it is used as the initializer by the constructor of a derived class.</source>
          <target state="translated">Inizializza valori della classe base quando viene utilizzato come inizializzatore dal costruttore di una classe derivata.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Delivers the event being managed to each listener.</source>
          <target state="translated">Consente di recapitare l'evento gestito a ogni listener.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the DeliverEvent method from within the event handlers that are added or removed by the &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt; and &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt; implementations of subclasses.</source>
          <target state="translated">Chiamare il metodo DeliverEvent all'interno dei gestori degli eventi vengono aggiunti o rimossi dal &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt;e &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt;le implementazioni delle sottoclassi.&lt;/xref:System.Windows.WeakEventManager.StopListening%2A&gt; &lt;/xref:System.Windows.WeakEventManager.StartListening%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call the &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; method in your <ph id="ph1">`AddListener`</ph> implementation of your class, the list of listeners receiving the event is kept in an underlying collection.</source>
          <target state="translated">Se si chiama il &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;metodo i <ph id="ph1">`AddListener`</ph> implementazione della classe, l'elenco di listener che riceve l'evento è memorizzato in una raccolta sottostante.&lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>(<ph id="ph1">`AddListener`</ph> is not part of an interface or class contract.</source>
          <target state="translated">(<ph id="ph1">`AddListener`</ph> non fa parte di un contratto di interfaccia o classe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AddListener`</ph> is the suggested name for the method of your manager class that calls &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; and adds weak event pattern listeners for the event.)       &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; adds listeners to a single list.</source>
          <target state="translated"><ph id="ph1">`AddListener`</ph>è il nome suggerito per il metodo della classe del gestore che chiama &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;e aggiunge i listener di eventi deboli modello per l'evento).       &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;aggiunge listener a un unico elenco.&lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your manager implementation maintains more than one list of listeners per event, do not use DeliverEvent or &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;.</source>
          <target state="translated">Se l'implementazione del gestore gestisce più di un elenco di listener per ogni evento, non utilizzare DeliverEvent o &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;.&lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, your implementation should create its own &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; instances, <ph id="ph1">`AddListener`</ph> should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;.</source>
          <target state="translated">Al contrario, l'implementazione deve creare proprie &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;istanze, <ph id="ph1">`AddListener`</ph> deve aggiungere listener all'elenco appropriato e gli eventi devono essere consegnati all'elenco di listener appropriato chiamando &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;.&lt;/xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The object on which the event is being handled.</source>
          <target state="translated">L'oggetto in cui viene gestito l'evento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data for the event to deliver.</source>
          <target state="translated">Un &lt;xref:System.EventArgs&gt;che contiene i dati dell'evento per l'evento per il recapito.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is used for the provided type.</source>
          <target state="translated">Restituisce il <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementazione che viene utilizzata per il tipo fornito.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt; implementations call this method using their passed <ph id="ph1">`managerType`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt;implementazioni di chiamano questo metodo tramite i relativi passato <ph id="ph1">`managerType`</ph>.&lt;/xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Windows.WeakEventManager&gt; is then used as the differentiator that determines which event was received, and which private class handler to invoke.</source>
          <target state="translated">L'oggetto restituito &lt;xref:System.Windows.WeakEventManager&gt;viene quindi utilizzato come differenziatore che determina l'evento ricevuto e il gestore di classe privata da richiamare.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The type to obtain the <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for.</source>
          <target state="translated">Tipo da cui ottenere il <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> per.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The matching <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">La corrispondenza <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementazione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets or sets the data being stored for the specified source.</source>
          <target state="translated">Ottiene o imposta i dati archiviati per l'origine specificata.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can choose what data and type to store in this indexer.</source>
          <target state="translated">Le classi derivate è possono scegliere i dati e il tipo da memorizzare in questo indicizzatore.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically this is implemented as a &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;, which is a list of weak references to listeners.</source>
          <target state="translated">In genere viene implementato come un &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;, ovvero un elenco di riferimenti deboli ai listener.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would only have to change this type if the &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; type cannot contain your required information.</source>
          <target state="translated">È necessario modificare questo tipo se solo il &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;tipo non può contenere le informazioni necessarie.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, you will have to override the &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt; method so that all cleanup of the underlying type is performed correctly.</source>
          <target state="translated">Se in tal caso, sarà necessario eseguire l'override di &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt;metodo in modo che la pulitura completa del tipo sottostante venga eseguita correttamente.&lt;/xref:System.Windows.WeakEventManager.Purge%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The zero-based index of the requested source.</source>
          <target state="translated">Indice in base zero dell'origine richiesta.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Data being stored by the manager for this source.</source>
          <target state="translated">Dati archiviati dal gestore per questa origine.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns a new object to contain listeners to an event.</source>
          <target state="translated">Restituisce un nuovo oggetto per contenere i listener per un evento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A new object to contain listeners to an event.</source>
          <target state="translated">Nuovo oggetto per contenere i listener per un evento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adds the specified delegate as an event handler of the specified source.</source>
          <target state="translated">Aggiunge il delegato specificato come gestore eventi dell'origine specificata.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The source object that the handler delegate subscribes to.</source>
          <target state="translated">Oggetto di origine che sottoscrive il delegato del gestore.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The delegate that handles the event that is raised by <ph id="ph1">`source`</ph>.</source>
          <target state="translated">Il delegato che gestisce l'evento generato da <ph id="ph1">`source`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Adds the provided listener to the provided source for the event being managed.</source>
          <target state="translated">Aggiunge il listener fornito per l'origine specificata per l'evento gestito.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method within your manager class <ph id="ph1">`AddListener`</ph> methods on &lt;xref:System.Windows.WeakEventManager&gt; implementations.</source>
          <target state="translated">Chiamare questo metodo nella classe di gestione <ph id="ph1">`AddListener`</ph> metodi su &lt;xref:System.Windows.WeakEventManager&gt;implementazioni.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AddListener`</ph> is the suggested name for the static method you define on your manager class to enable other classes to add a listener for your weak event pattern.</source>
          <target state="translated"><ph id="ph1">`AddListener`</ph>è il nome suggerito per il metodo statico definite nella classe del gestore per consentire alle altre classi aggiungere un listener per il modello di eventi deboli.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AddListener`</ph> should take two parameters: the <ph id="ph2">`source`</ph> where the listener is attached, and the <ph id="ph3">`listener`</ph> instance.</source>
          <target state="translated"><ph id="ph1">`AddListener`</ph>deve accettare due parametri: il <ph id="ph2">`source`</ph> in cui è associato il listener e <ph id="ph3">`listener`</ph> istanza.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For your <ph id="ph1">`AddListener`</ph> implementation, call the ProtectedAddListener method on the current manager and pass the same two parameters.</source>
          <target state="translated">Per i <ph id="ph1">`AddListener`</ph> implementazione, chiamare il metodo ProtectedAddListener nel gestore corrente e passare gli stessi due parametri.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list of listeners was previously empty, ProtectedAddListener calls the &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt; method internally, which will call your specific &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt; override through polymorphism.</source>
          <target state="translated">Se l'elenco di listener in precedenza era vuoto, ProtectedAddListener chiama il &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt;metodo internamente, specifico che verrà chiamato &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt;override tramite polimorfismo.&lt;/xref:System.Windows.WeakEventManager.StartListening%2A&gt; &lt;/xref:System.Windows.WeakEventManager.StartListening%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProtectedAddListener adds listeners to a single internal &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; per <ph id="ph1">`source`</ph>.</source>
          <target state="translated">ProtectedAddListener aggiunge listener a una singola interna &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;per <ph id="ph1">`source`</ph>.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedAddListener.</source>
          <target state="translated">Se l'implementazione del gestore gestisce più di un elenco di listener per ogni combinazione evento-origine, non utilizzare ProtectedAddListener.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, your implementation should create its own &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; instances, <ph id="ph1">`AddListener`</ph> should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling the &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; event instead of the &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; method.</source>
          <target state="translated">Al contrario, l'implementazione deve creare proprie &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;istanze, <ph id="ph1">`AddListener`</ph> deve aggiungere listener all'elenco appropriato e gli eventi devono essere consegnati all'elenco di listener appropriato chiamando il &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;invece dell'evento di &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt;(metodo).&lt;/xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; &lt;/xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The source to attach listeners to.</source>
          <target state="translated">Per allegare i listener di origine.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The listening class (which must implement <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Classe in ascolto (che deve implementare <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Removes the previously added handler from the specified source.</source>
          <target state="translated">Rimuove il gestore precedentemente aggiunto dall'origine specificata.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The source to remove the handler from.</source>
          <target state="translated">Origine da cui rimuovere il gestore.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The delegate to remove from <ph id="ph1">`source`</ph>.</source>
          <target state="translated">Delegato da rimuovere dal <ph id="ph1">`source`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Removes a previously added listener from the provided source.</source>
          <target state="translated">Rimuove un listener precedentemente aggiunto dall'origine specificata.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method within your manager class <ph id="ph1">`RemoveListener`</ph> methods on &lt;xref:System.Windows.WeakEventManager&gt; implementations.</source>
          <target state="translated">Chiamare questo metodo nella classe di gestione <ph id="ph1">`RemoveListener`</ph> metodi su &lt;xref:System.Windows.WeakEventManager&gt;implementazioni.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`RemoveListener`</ph> is the suggested name for the static method you define on your manager class to enable other classes to remove a listener for your weak event pattern.</source>
          <target state="translated"><ph id="ph1">`RemoveListener`</ph>è il nome suggerito per il metodo statico definite nella classe del gestore per consentire alle altre classi rimuovere un listener per il modello di eventi deboli.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`RemoveListener`</ph> should take two parameters: the <ph id="ph2">`source`</ph> where the listener is removed, and the <ph id="ph3">`listener`</ph> class.</source>
          <target state="translated"><ph id="ph1">`RemoveListener`</ph>deve accettare due parametri: il <ph id="ph2">`source`</ph> in cui il listener viene rimosso e <ph id="ph3">`listener`</ph> classe.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For your <ph id="ph1">`RemoveListener`</ph> implementation, call the ProtectedRemoveListener method on the current manager and pass the same two parameters.</source>
          <target state="translated">Per i <ph id="ph1">`RemoveListener`</ph> implementazione, chiamare il metodo ProtectedRemoveListener nel gestore corrente e passare gli stessi due parametri.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a call to ProtectedRemoveListener removes the last listener in the list, ProtectedRemoveListener calls the &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt; method internally, which will call your specific &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt; override through polymorphism.</source>
          <target state="translated">Se la chiamata a ProtectedRemoveListener rimuove l'ultimo listener nell'elenco, ProtectedRemoveListener chiama il &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt;metodo internamente, specifico che verrà chiamato &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt;override tramite polimorfismo.&lt;/xref:System.Windows.WeakEventManager.StopListening%2A&gt; &lt;/xref:System.Windows.WeakEventManager.StopListening%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProtectedRemoveListener removes listeners from a single internal &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; per <ph id="ph1">`source`</ph>.</source>
          <target state="translated">ProtectedRemoveListener rimuove listener da un singolo interno &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;per <ph id="ph1">`source`</ph>.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedRemoveListener.</source>
          <target state="translated">Se l'implementazione del gestore gestisce più di un elenco di listener per ogni combinazione evento-origine, non utilizzare ProtectedRemoveListener.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, your implementation should create its own &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; instances, <ph id="ph1">`RemoveListener`</ph> should remove listeners from the appropriate list, and events should be delivered to the appropriate listener list by calling the &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; method instead of the &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; method.</source>
          <target state="translated">Al contrario, l'implementazione deve creare proprie &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;istanze, <ph id="ph1">`RemoveListener`</ph> deve rimuovere listener dall'elenco appropriato e gli eventi devono essere consegnati all'elenco di listener appropriato chiamando il &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;anziché il &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt;(metodo).&lt;/xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; &lt;/xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The source to remove listeners from.</source>
          <target state="translated">Origine da cui rimuovere i listener.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The listening class (which must implement <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Classe in ascolto (che deve implementare <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Removes inactive listener entries from the data list for the provided source.</source>
          <target state="translated">Rimuove le voci di listener inattivi dall'elenco dei dati per l'origine specificata.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if some entries were actually removed from the list.</source>
          <target state="translated">Restituisce <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se alcune voci sono stati effettivamente rimossi dall'elenco.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Purge method has a default implementation that will remove all entries when data is a &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;.</source>
          <target state="translated">Il metodo di eliminazione è un'implementazione predefinita che rimuoverà tutte le voci quando i dati sono un &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The source for events being listened to.</source>
          <target state="translated">L'origine per gli eventi attesi.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The data to check.</source>
          <target state="translated">Dati da verificare.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This object is expected to be a &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; implementation.</source>
          <target state="translated">Questo oggetto deve essere un &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;implementazione.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to stop listening to <ph id="ph1">`source`</ph>, and completely remove all entries from <ph id="ph2">`data`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Per interrompere l'ascolto di <ph id="ph1">`source`</ph>e rimuovere completamente tutte le voci da <ph id="ph2">`data`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if some entries were actually removed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se alcune voci sono stati effettivamente rimossi. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Establishes a read-lock on the underlying data table, and returns an &lt;xref:System.IDisposable&gt;.</source>
          <target state="translated">Stabilisce un blocco di lettura nella tabella di dati sottostante e restituisce un &lt;xref:System.IDisposable&gt;.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, queries to the table contained in &lt;xref:System.Windows.WeakEventManager.Item%2A&gt; should always occur within a <ph id="ph1">`using (ReadLock) { ... }`</ph> clause, except for queries that are already within a write lock.</source>
          <target state="translated">Nelle classi derivate, esegue una query alla tabella contenuta &lt;xref:System.Windows.WeakEventManager.Item%2A&gt;devono essere sempre eseguiti all'interno di un <ph id="ph1">`using (ReadLock) { ... }`</ph> clausola, ad eccezione delle query già all'interno di un blocco di scrittura.&lt;/xref:System.Windows.WeakEventManager.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>These queries may be necessary if your class supports a more sophisticated <ph id="ph1">`AddListener`</ph> implementation that requires more data beyond the <ph id="ph2">`source`</ph> and the <ph id="ph3">`listener`</ph>, and uses the &lt;xref:System.Windows.WeakEventManager.Item%2A&gt; collection to store the extra information.</source>
          <target state="translated">Queste query potrebbero essere necessarie se la classe supporta più sofisticate <ph id="ph1">`AddListener`</ph> implementazione che richiede più dati oltre il <ph id="ph2">`source`</ph> e <ph id="ph3">`listener`</ph>e utilizza il &lt;xref:System.Windows.WeakEventManager.Item%2A&gt;raccolta in cui archiviare le informazioni aggiuntive.&lt;/xref:System.Windows.WeakEventManager.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An object that can be used to establish a lock on the data table members and then be appropriately disposed with a <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> construct.</source>
          <target state="translated">Oggetto che può essere utilizzato per stabilire un blocco per i membri dati della tabella e quindi eliminata in modo appropriato con un <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> costruire.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Removes all listeners for the specified source.</source>
          <target state="translated">Rimuove tutti i listener per l'origine specificata.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The source to remove listener information for.</source>
          <target state="translated">Origine da cui rimuovere le informazioni del listener.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.</source>
          <target state="translated">Richieste che un'eliminazione delle voci inutilizzate nell'elenco di listener sottostante deve essere eseguita in un thread con priorità inferiore.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the ScheduleCleanup method is similar to calling the &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt; method on the current manager's list, at lower thread priority, with the <ph id="ph1">`purgeAll`</ph> parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">La chiamata al metodo ScheduleCleanup è simile alla chiamata di &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt;metodo nell'elenco del gestore corrente al thread con priorità inferiore, con la <ph id="ph1">`purgeAll`</ph> parametro impostato su <ph id="ph2">`false`</ph>.&lt;/xref:System.Windows.WeakEventManager.Purge%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Sets the current manager for the specified manager type.</source>
          <target state="translated">Imposta il gestore corrente per il tipo di gestione specificato.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the SetCurrentManager method to initialize a manager, if that is required by a call to your <ph id="ph1">`CurrentManager`</ph> property on a &lt;xref:System.Windows.WeakEventManager&gt; implementation.</source>
          <target state="translated">Chiamare il metodo SetCurrentManager per inizializzare un gestore, se richiesto da una chiamata ai <ph id="ph1">`CurrentManager`</ph> proprietà in un &lt;xref:System.Windows.WeakEventManager&gt;implementazione.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The type to set the new event manager.</source>
          <target state="translated">Tipo su cui impostare la gestione degli eventi.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The new event manager.</source>
          <target state="translated">La gestione degli eventi.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, starts listening for the event being managed.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, avvia l'ascolto per l'evento che si sta gestendo.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>After the StartListening method is first called, the manager should be in the state of calling &lt;xref:System.Windows.WeakEventManager.DeliverEvent<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Windows.WeakEventManager.DeliverEventToList<ept id="p1">*</ept>&gt; whenever the relevant event from the provided source is handled.</source>
          <target state="translated">Dopo che viene chiamato il metodo StartListening, il gestore deve essere nello stato della chiamata al metodo &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; o &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; ogni volta che in cui viene gestito l'evento rilevante dall'origine specificata.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The source to begin listening on.</source>
          <target state="translated">Origine da cui iniziare l'attesa su.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, stops listening on the provided source for the event being managed.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, interrompe l'ascolto sull'origine fornita per l'evento che si sta gestendo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The source to stop listening on.</source>
          <target state="translated">L'origine per arrestare l'ascolto.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Establishes a write-lock on the underlying data table, and returns an&lt;xref:System.IDisposable&gt;.</source>
          <target state="translated">Stabilisce un blocco di scrittura nella tabella dati sottostante e restituisce un&lt;xref:System.IDisposable&gt;.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, all modifications to the underlying data table should occur within a <ph id="ph1">`using (WriteLock) { ... }`</ph> clause.</source>
          <target state="translated">Nelle classi derivate, tutte le modifiche apportate alla tabella di dati sottostante devono verificarsi all'interno di un <ph id="ph1">`using (WriteLock) { ... }`</ph> clausola.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>These modifications may be necessary if your class supports a more sophisticated <ph id="ph1">`AddListener`</ph> implementation that requires more data beyond the <ph id="ph2">`source`</ph> and the <ph id="ph3">`listener`</ph>, and uses the &lt;xref:System.Windows.WeakEventManager.Item%2A&gt; collection to store the extra information.</source>
          <target state="translated">Queste modifiche potrebbero essere necessarie se la classe supporta più sofisticate <ph id="ph1">`AddListener`</ph> implementazione che richiede più dati oltre il <ph id="ph2">`source`</ph> e <ph id="ph3">`listener`</ph>e utilizza il &lt;xref:System.Windows.WeakEventManager.Item%2A&gt;raccolta in cui archiviare le informazioni aggiuntive.&lt;/xref:System.Windows.WeakEventManager.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An object that can be used to establish a lock on the data table members and then be appropriately disposed with a <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> construct.</source>
          <target state="translated">Oggetto che può essere utilizzato per stabilire un blocco per i membri dati della tabella e quindi eliminata in modo appropriato con un <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> costruire.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>