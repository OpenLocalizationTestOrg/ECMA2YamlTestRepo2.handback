<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47318ef78c00c6b7d9b5ac5cb331571267f6b0cc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.Overlapped.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a5ed76f8339304584b7097bb4fd0f8e8d63c6fa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1aa8c5188cc422b014bf1c0bcc83be07b14e3d0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a managed representation of a Win32 <ph id="ph1">`OVERLAPPED`</ph> structure, including methods to transfer information from an Overlapped instance to a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Fornisce una rappresentazione gestita di Win32 <ph id="ph1">`OVERLAPPED`</ph> struttura, inclusi metodi per il trasferimento di informazioni da un'istanza di Overlapped a un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.Overlapped.Pack%2A&gt; and &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt; methods transfer information from an Overlapped object to a &lt;xref:System.Threading.NativeOverlapped&gt; structure that can be passed to Win32 API functions for asynchronous file I/O.</source>
          <target state="translated">Il &lt;xref:System.Threading.Overlapped.Pack%2A&gt;e &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt;metodi trasferiscono le informazioni da un oggetto Overlapped per un &lt;xref:System.Threading.NativeOverlapped&gt;struttura che può essere passato alle funzioni API Win32 per asincrona file i/o.&lt;/xref:System.Threading.NativeOverlapped&gt; &lt;/xref:System.Threading.Overlapped.UnsafePack%2A&gt; &lt;/xref:System.Threading.Overlapped.Pack%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.Overlapped.Unpack%2A&gt; method transfers information from a &lt;xref:System.Threading.NativeOverlapped&gt; structure to an instance of the Overlapped class.</source>
          <target state="translated">Le &lt;xref:System.Threading.Overlapped.Unpack%2A&gt;informazioni sul metodo di trasferimento da una &lt;xref:System.Threading.NativeOverlapped&gt;struttura a un'istanza della classe Overlapped.&lt;/xref:System.Threading.NativeOverlapped&gt; &lt;/xref:System.Threading.Overlapped.Unpack%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to the properties of an Overlapped object affect its associated &lt;xref:System.Threading.NativeOverlapped&gt; structure, and vice versa.</source>
          <target state="translated">Le modifiche alle proprietà di un oggetto Overlapped influiscono associato &lt;xref:System.Threading.NativeOverlapped&gt;struttura e viceversa.&lt;/xref:System.Threading.NativeOverlapped&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inizializza una nuova istanza vuota del <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> posizionare classe con il file specificato, l'handle di intero a 32 bit a un evento che viene segnalato quando l'operazione dei / o è stata completata e un'interfaccia tramite cui si desidera restituire i risultati dell'operazione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName&gt; property to get the handle of any managed synchronization event that derives from the &lt;xref:System.Threading.WaitHandle&gt; class.</source>
          <target state="translated">Utilizzare la &lt;xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName&gt;proprietà da ottenere l'handle di qualsiasi evento di sincronizzazione gestito che deriva dalla &lt;xref:System.Threading.WaitHandle&gt;classe.&lt;/xref:System.Threading.WaitHandle&gt; &lt;/xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your implementation of &lt;xref:System.IAsyncResult&gt; provides status information on the I/O operation.</source>
          <target state="translated">L'implementazione di &lt;xref:System.IAsyncResult&gt;fornisce informazioni sullo stato dell'operazione dei / o.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass it to the constructor in the <ph id="ph1">`ar`</ph> parameter, and retrieve it later with the &lt;xref:System.Threading.Overlapped.AsyncResult%2A&gt; property.</source>
          <target state="translated">Passarlo al costruttore nel <ph id="ph1">`ar`</ph> parametro e recuperarli in un secondo momento con la &lt;xref:System.Threading.Overlapped.AsyncResult%2A&gt;proprietà.&lt;/xref:System.Threading.Overlapped.AsyncResult%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a callback method is specified for the &lt;xref:System.Threading.Overlapped.Pack%2A&gt; or &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt; method, the callback can retrieve your &lt;xref:System.IAsyncResult&gt; by unpacking the &lt;xref:System.Threading.NativeOverlapped&gt; structure it receives.</source>
          <target state="translated">Se viene specificato un metodo di callback per il &lt;xref:System.Threading.Overlapped.Pack%2A&gt;o &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt;metodo, il callback può recuperare il &lt;xref:System.IAsyncResult&gt;per decomprimere il &lt;xref:System.Threading.NativeOverlapped&gt;struttura riceve.&lt;/xref:System.Threading.NativeOverlapped&gt; &lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.Threading.Overlapped.UnsafePack%2A&gt; &lt;/xref:System.Threading.Overlapped.Pack%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The low word of the file position at which to start the transfer.</source>
          <target state="translated">La parola bassa della posizione del file da cui iniziare il trasferimento.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The high word of the file position at which to start the transfer.</source>
          <target state="translated">La parola elevata della posizione del file da cui iniziare il trasferimento.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The handle to an event that is signaled when the I/O operation is complete.</source>
          <target state="translated">Handle a un evento che viene segnalato quando l'operazione dei / o è stata completata.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;xref:System.IAsyncResult&gt; interface and provides status information on the I/O operation.</source>
          <target state="translated">Oggetto che implementa il &lt;xref:System.IAsyncResult&gt;l'interfaccia e fornisce informazioni sullo stato dell'operazione dei / o.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> posizionare classe con il file specificato, l'handle per un evento che viene segnalato quando l'operazione dei / o è stata completata e un'interfaccia tramite cui si desidera restituire i risultati dell'operazione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the handle of a managed synchronization object that derives from the &lt;xref:System.Threading.WaitHandle&gt; class, use the &lt;xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName&gt; property to get a &lt;xref:Microsoft.Win32.SafeHandles.SafeWaitHandle&gt; object, and then call the &lt;xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A&gt; method.</source>
          <target state="translated">Per ottenere l'handle di un oggetto di sincronizzazione gestito che deriva dal &lt;xref:System.Threading.WaitHandle&gt;, utilizzare il &lt;xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName&gt;proprietà da ottenere un &lt;xref:Microsoft.Win32.SafeHandles.SafeWaitHandle&gt;dell'oggetto e quindi chiamare il &lt;xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A&gt;metodo.&lt;/xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A&gt; &lt;/xref:Microsoft.Win32.SafeHandles.SafeWaitHandle&gt; &lt;/xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName&gt; &lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your implementation of &lt;xref:System.IAsyncResult&gt; provides status information on the I/O operation.</source>
          <target state="translated">L'implementazione di &lt;xref:System.IAsyncResult&gt;fornisce informazioni sullo stato dell'operazione dei / o.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass it to the constructor in the <ph id="ph1">`ar`</ph> parameter, and retrieve it later with the &lt;xref:System.Threading.Overlapped.AsyncResult%2A&gt; property.</source>
          <target state="translated">Passarlo al costruttore nel <ph id="ph1">`ar`</ph> parametro e recuperarli in un secondo momento con la &lt;xref:System.Threading.Overlapped.AsyncResult%2A&gt;proprietà.&lt;/xref:System.Threading.Overlapped.AsyncResult%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a callback method is specified for the &lt;xref:System.Threading.Overlapped.Pack%2A&gt; or &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt; method, the callback can retrieve your &lt;xref:System.IAsyncResult&gt; by unpacking the &lt;xref:System.Threading.NativeOverlapped&gt; structure it receives.</source>
          <target state="translated">Se viene specificato un metodo di callback per il &lt;xref:System.Threading.Overlapped.Pack%2A&gt;o &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt;metodo, il callback può recuperare il &lt;xref:System.IAsyncResult&gt;per decomprimere il &lt;xref:System.Threading.NativeOverlapped&gt;struttura riceve.&lt;/xref:System.Threading.NativeOverlapped&gt; &lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.Threading.Overlapped.UnsafePack%2A&gt; &lt;/xref:System.Threading.Overlapped.Pack%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The low word of the file position at which to start the transfer.</source>
          <target state="translated">La parola bassa della posizione del file da cui iniziare il trasferimento.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The high word of the file position at which to start the transfer.</source>
          <target state="translated">La parola elevata della posizione del file da cui iniziare il trasferimento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The handle to an event that is signaled when the I/O operation is complete.</source>
          <target state="translated">Handle a un evento che viene segnalato quando l'operazione dei / o è stata completata.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;xref:System.IAsyncResult&gt; interface and provides status information on the I/O operation.</source>
          <target state="translated">Oggetto che implementa il &lt;xref:System.IAsyncResult&gt;l'interfaccia e fornisce informazioni sullo stato dell'operazione dei / o.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that provides status information on the I/O operation.</source>
          <target state="translated">Ottiene o imposta l'oggetto che fornisce informazioni sullo stato dell'operazione dei / o.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;xref:System.IAsyncResult&gt; interface.</source>
          <target state="translated">Oggetto che implementa il &lt;xref:System.IAsyncResult&gt;interfaccia.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.</source>
          <target state="translated">Ottiene o imposta l'handle di intero a 32 bit a un evento di sincronizzazione segnalata quando l'operazione dei / o è stata completata.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be used on 64-bit platforms.</source>
          <target state="translated">Questa proprietà non può essere utilizzata in piattaforme a 64 bit.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Threading.Overlapped.EventHandleIntPtr%2A&gt; property instead.</source>
          <target state="translated">Utilizzare il &lt;xref:System.Threading.Overlapped.EventHandleIntPtr%2A&gt;proprietà invece.&lt;/xref:System.Threading.Overlapped.EventHandleIntPtr%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName&gt; property to get the handle of any managed synchronization event that derives from the &lt;xref:System.Threading.WaitHandle&gt; class.</source>
          <target state="translated">Utilizzare la &lt;xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName&gt;proprietà da ottenere l'handle di qualsiasi evento di sincronizzazione gestito che deriva dalla &lt;xref:System.Threading.WaitHandle&gt;classe.&lt;/xref:System.Threading.WaitHandle&gt; &lt;/xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value representing the handle of the synchronization event.</source>
          <target state="translated">Un &lt;xref:System.Int32&gt;valore che rappresenta l'handle dell'evento di sincronizzazione.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.</source>
          <target state="translated">Ottiene o imposta l'handle per l'evento di sincronizzazione segnalata quando l'operazione dei / o è stata completata.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the handle of a managed synchronization object that derives from the &lt;xref:System.Threading.WaitHandle&gt; class, use the &lt;xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName&gt; property to get a &lt;xref:Microsoft.Win32.SafeHandles.SafeWaitHandle&gt; object, and then call the &lt;xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A&gt; method.</source>
          <target state="translated">Per ottenere l'handle di un oggetto di sincronizzazione gestito che deriva dal &lt;xref:System.Threading.WaitHandle&gt;, utilizzare il &lt;xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName&gt;proprietà da ottenere un &lt;xref:Microsoft.Win32.SafeHandles.SafeWaitHandle&gt;dell'oggetto e quindi chiamare il &lt;xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A&gt;metodo.&lt;/xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A&gt; &lt;/xref:Microsoft.Win32.SafeHandles.SafeWaitHandle&gt; &lt;/xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName&gt; &lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; representing the handle of the event.</source>
          <target state="translated">Un &lt;xref:System.IntPtr&gt;che rappresenta l'handle dell'evento.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Frees the unmanaged memory associated with a native overlapped structure allocated by the &lt;xref:System.Threading.Overlapped.Pack*&gt; method.</source>
          <target state="translated">Libera la memoria non gestita associata a una struttura sovrapposta nativa allocata dal &lt;xref:System.Threading.Overlapped.Pack*&gt;metodo.&lt;/xref:System.Threading.Overlapped.Pack*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call the Free method exactly once on every &lt;xref:System.Threading.NativeOverlapped&gt; pointer you receive from the &lt;xref:System.Threading.Overlapped.Pack%2A&gt; method.</source>
          <target state="translated">È necessario chiamare il metodo Free esattamente una volta nell'ogni &lt;xref:System.Threading.NativeOverlapped&gt;puntatore ricevere il &lt;xref:System.Threading.Overlapped.Pack%2A&gt;metodo.&lt;/xref:System.Threading.Overlapped.Pack%2A&gt; &lt;/xref:System.Threading.NativeOverlapped&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you don't call the Free method, you will leak memory.</source>
          <target state="translated">Se non si chiama il metodo Free, si verificherà una perdita di memoria.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call the Free method more than once, memory will be corrupted.</source>
          <target state="translated">Se si chiama il metodo Free più volte, la memoria verrà danneggiata.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A pointer to the <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure to be freed.</source>
          <target state="translated">Un puntatore al <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura da liberare.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;nativeOverlappedPtr&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;nativeOverlappedPtr&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets the high-order word of the file position at which to start the transfer.</source>
          <target state="translated">Ottiene o imposta la parola più significativa della posizione del file da cui iniziare il trasferimento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The file position is a byte offset from the start of the file.</source>
          <target state="translated">La posizione del file è un offset di byte dall'inizio del file.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value representing the high word of the file position.</source>
          <target state="translated">Un &lt;xref:System.Int32&gt;valore che rappresenta la parola elevata della posizione del file.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets the low-order word of the file position at which to start the transfer.</source>
          <target state="translated">Ottiene o imposta la parola meno significativa della posizione del file da cui iniziare il trasferimento.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The file position is a byte offset from the start of the file.</source>
          <target state="translated">La posizione del file è un offset di byte dall'inizio del file.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value representing the low word of the file position.</source>
          <target state="translated">Un &lt;xref:System.Int32&gt;valore che rappresenta la parola bassa della posizione del file.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Packs the current instance into a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.</source>
          <target state="translated">Comprime l'istanza corrente in un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura, specificando il delegato da richiamare quando è stata completata l'operazione dei / o asincrona.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</source>
          <target state="translated">Il puntatore non gestito restituito da questo metodo può essere passato al sistema operativo in operazioni dei / o sovrapposte.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.NativeOverlapped&gt; structure is fixed in physical memory until &lt;xref:System.Threading.Overlapped.Unpack%2A&gt; is called.</source>
          <target state="translated">Il &lt;xref:System.Threading.NativeOverlapped&gt;struttura è fissa nella memoria fisica finché &lt;xref:System.Threading.Overlapped.Unpack%2A&gt;viene chiamato.&lt;/xref:System.Threading.Overlapped.Unpack%2A&gt; &lt;/xref:System.Threading.NativeOverlapped&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The caller is responsible for pinning the buffer.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Il chiamante è responsabile del blocco del buffer.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address.</source>
          <target state="translated">Se il dominio applicazione viene scaricato, tuttavia, l'handle al buffer bloccato viene eliminato e il buffer viene rilasciato, lasciando l'operazione dei / o scrivere all'indirizzo liberato.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, it is better to use the &lt;xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29&gt; method overload, in which the runtime pins the buffer.</source>
          <target state="translated">Per questo motivo, è preferibile utilizzare il &lt;xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29&gt;overload del metodo, in cui il runtime blocca il buffer.&lt;/xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.IOCompletionCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Threading.IOCompletionCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> delegato che rappresenta il metodo di callback richiamato al completamento dell'operazione dei / o asincrona.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An unmanaged pointer to a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Un puntatore non gestito a un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has already been packed.</source>
          <target state="translated">Corrente <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è già stato compresso.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Packs the current instance into a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.</source>
          <target state="translated">Comprime l'istanza corrente in un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura, specificando un delegato che viene richiamato quando l'operazione dei / o asincrona è stata completata e un oggetto gestito che funge da buffer.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</source>
          <target state="translated">Il puntatore non gestito restituito da questo metodo può essere passato al sistema operativo in operazioni dei / o sovrapposte.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.NativeOverlapped&gt; structure is fixed in physical memory until &lt;xref:System.Threading.Overlapped.Unpack%2A&gt; is called.</source>
          <target state="translated">Il &lt;xref:System.Threading.NativeOverlapped&gt;struttura è fissa nella memoria fisica finché &lt;xref:System.Threading.Overlapped.Unpack%2A&gt;viene chiamato.&lt;/xref:System.Threading.Overlapped.Unpack%2A&gt; &lt;/xref:System.Threading.NativeOverlapped&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The buffer or buffers specified in <ph id="ph1">`userData`</ph> must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.</source>
          <target state="translated">Il buffer o buffer specificato in <ph id="ph1">`userData`</ph> deve corrispondere a quelli passati alla funzione non gestita del sistema operativo che esegue il / o asincrona.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The runtime pins the buffer or buffers specified in <ph id="ph2">`userData`</ph> for the duration of the I/O operation.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il runtime blocca il buffer o buffer specificato in <ph id="ph2">`userData`</ph> per la durata dell'operazione dei / o.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.</source>
          <target state="translated">Se il dominio applicazione viene scaricato, il runtime mantiene la memoria bloccata fino al completamento dell'operazione dei / o.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.IOCompletionCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Threading.IOCompletionCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> delegato che rappresenta il metodo di callback richiamato al completamento dell'operazione dei / o asincrona.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An object or array of objects representing the input or output buffer for the operation.</source>
          <target state="translated">Un oggetto o una matrice di oggetti che rappresenta il buffer di input o output per l'operazione.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Each object represents a buffer, for example an array of bytes.</source>
          <target state="translated">Ogni oggetto rappresenta un buffer, ad esempio una matrice di byte.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An unmanaged pointer to a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Un puntatore non gestito a un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has already been packed.</source>
          <target state="translated">Corrente <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è già stato compresso.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Unpacks the specified unmanaged <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure into a managed <bpt id="p2">&lt;xref href="System.Threading.Overlapped"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Decomprime non gestita specificato <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura in un oggetto gestito <bpt id="p2">&lt;xref href="System.Threading.Overlapped"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> oggetto.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.NativeOverlapped&gt; structure is not freed from physical memory until you call the &lt;xref:System.Threading.Overlapped.Free%2A&gt; method.</source>
          <target state="translated">Il &lt;xref:System.Threading.NativeOverlapped&gt;struttura non viene liberata dalla memoria fisica finché non si chiama il &lt;xref:System.Threading.Overlapped.Free%2A&gt;metodo.&lt;/xref:System.Threading.Overlapped.Free%2A&gt; &lt;/xref:System.Threading.NativeOverlapped&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An unmanaged pointer to a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Un puntatore non gestito a un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the information unpacked from the native structure.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto contenente le informazioni decompresse dalla struttura nativa.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;nativeOverlappedPtr&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;nativeOverlappedPtr&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Packs the current instance into a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure specifying the delegate to invoke when the asynchronous I/O operation is complete.</source>
          <target state="translated">Comprime l'istanza corrente in un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura specificando il delegato da richiamare al completamento dell'operazione dei / o asincrona.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Does not propagate the calling stack.</source>
          <target state="translated">Non propaga lo stack di chiamate.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</source>
          <target state="translated">Il puntatore non gestito restituito da questo metodo può essere passato al sistema operativo in operazioni dei / o sovrapposte.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.NativeOverlapped&gt; structure is fixed in physical memory until &lt;xref:System.Threading.Overlapped.Unpack%2A&gt; is called.</source>
          <target state="translated">Il &lt;xref:System.Threading.NativeOverlapped&gt;struttura è fissa nella memoria fisica finché &lt;xref:System.Threading.Overlapped.Unpack%2A&gt;viene chiamato.&lt;/xref:System.Threading.Overlapped.Unpack%2A&gt; &lt;/xref:System.Threading.NativeOverlapped&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller is responsible for pinning the buffer.</source>
          <target state="translated">Il chiamante è responsabile del blocco del buffer.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address.</source>
          <target state="translated">Se il dominio applicazione viene scaricato, tuttavia, l'handle al buffer bloccato viene eliminato e il buffer viene rilasciato, lasciando l'operazione dei / o scrivere all'indirizzo liberato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, it is better to use the &lt;xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29&gt; method overload, in which the runtime pins the buffer.</source>
          <target state="translated">Per questo motivo, è preferibile utilizzare il &lt;xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29&gt;overload del metodo, in cui il runtime blocca il buffer.&lt;/xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Using the &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt; method could inadvertently open up a security hole.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; Tramite il &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt;metodo è stato possibile aprire inavvertitamente un problema di sicurezza.&lt;/xref:System.Threading.Overlapped.UnsafePack%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Code access security bases its permission checks on the permissions of all the callers on the stack.</source>
          <target state="translated">Sicurezza dall'accesso di codice si basa i controlli di autorizzazione sulle autorizzazioni di tutti i chiamanti nello stack.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt; method does not propagate the calling stack.</source>
          <target state="translated">Il &lt;xref:System.Threading.Overlapped.UnsafePack%2A&gt;metodo non propaga lo stack di chiamate.&lt;/xref:System.Threading.Overlapped.UnsafePack%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Malicious code might be able to exploit this to avoid permission checks.</source>
          <target state="translated">Codice dannoso potrebbe essere in grado di sfruttare questa vulnerabilità per evitare i controlli di autorizzazione.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.IOCompletionCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Threading.IOCompletionCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> delegato che rappresenta il metodo di callback richiamato al completamento dell'operazione dei / o asincrona.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>An unmanaged pointer to a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Un puntatore non gestito a un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has already been packed.</source>
          <target state="translated">Corrente <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è già stato compresso.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Packs the current instance into a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer.</source>
          <target state="translated">Comprime l'istanza corrente in un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura, specificando il delegato da richiamare quando l'operazione dei / o asincrona è stata completata e un oggetto gestito che funge da buffer.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Does not propagate the calling stack.</source>
          <target state="translated">Non propaga lo stack di chiamate.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</source>
          <target state="translated">Il puntatore non gestito restituito da questo metodo può essere passato al sistema operativo in operazioni dei / o sovrapposte.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.NativeOverlapped&gt; structure is fixed in physical memory until &lt;xref:System.Threading.Overlapped.Unpack%2A&gt; is called.</source>
          <target state="translated">Il &lt;xref:System.Threading.NativeOverlapped&gt;struttura è fissa nella memoria fisica finché &lt;xref:System.Threading.Overlapped.Unpack%2A&gt;viene chiamato.&lt;/xref:System.Threading.Overlapped.Unpack%2A&gt; &lt;/xref:System.Threading.NativeOverlapped&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The buffer or buffers specified in <ph id="ph1">`userData`</ph> must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.</source>
          <target state="translated">Il buffer o buffer specificato in <ph id="ph1">`userData`</ph> deve corrispondere a quelli passati alla funzione non gestita del sistema operativo che esegue il / o asincrona.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime pins the buffer or buffers specified in<ph id="ph1">`userData`</ph> for the duration of the I/O operation.</source>
          <target state="translated">Il runtime blocca il buffer o buffer specificato in<ph id="ph1">`userData`</ph> per la durata dell'operazione dei / o.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.</source>
          <target state="translated">Se il dominio applicazione viene scaricato, il runtime mantiene la memoria bloccata fino al completamento dell'operazione dei / o.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Using the UnsafePack method could inadvertently open up a security hole.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; Utilizzando il UnsafePack metodo inavvertitamente può provocare un problema di sicurezza.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Code access security bases its permission checks on the permissions of all the callers on the stack.</source>
          <target state="translated">Sicurezza dall'accesso di codice si basa i controlli di autorizzazione sulle autorizzazioni di tutti i chiamanti nello stack.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UnsafePack method does not propagate the calling stack.</source>
          <target state="translated">Il metodo UnsafePack non propaga lo stack di chiamate.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Malicious code might be able to exploit this to avoid permission checks.</source>
          <target state="translated">Codice dannoso potrebbe essere in grado di sfruttare questa vulnerabilità per evitare i controlli di autorizzazione.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.IOCompletionCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Threading.IOCompletionCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> delegato che rappresenta il metodo di callback richiamato al completamento dell'operazione dei / o asincrona.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An object or array of objects representing the input or output buffer for the operation.</source>
          <target state="translated">Un oggetto o una matrice di oggetti che rappresenta il buffer di input o output per l'operazione.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Each object represents a buffer, for example an array of bytes.</source>
          <target state="translated">Ogni oggetto rappresenta un buffer, ad esempio una matrice di byte.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An unmanaged pointer to a <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Un puntatore non gestito a un <bpt id="p1">&lt;xref href="System.Threading.NativeOverlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struttura.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Il chiamante non dispone dell'autorizzazione richiesta.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is already packed.</source>
          <target state="translated">Corrente <bpt id="p1">&lt;xref href="System.Threading.Overlapped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è già compresso.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>