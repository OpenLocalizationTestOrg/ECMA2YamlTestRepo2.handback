<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d86a014a28c7d85d71d3be809df53d48b1c0214</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Stack.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90ed17a4862ac4e84d8d89967db114dbed325069</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cb911518e52431583334a585119d2d8e10ee71f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a simple last-in-first-out (LIFO) non-generic collection of objects.</source>
          <target state="translated">Rappresenta una raccolta di last-in-first-out (LIFO) non generico semplice degli oggetti.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the generic version of this collection, see &lt;xref:System.Collections.Generic.Stack%601?displayProperty=fullName&gt;.</source>
          <target state="translated">Per la versione generica di questa raccolta, vedere &lt;xref:System.Collections.Generic.Stack%601?displayProperty=fullName&gt;.&lt;/xref:System.Collections.Generic.Stack%601?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a Stack is the number of elements the Stack can hold.</source>
          <target state="translated">La capacità di uno Stack è il numero di elementi che dello Stack può contenere.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a Stack, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Se gli elementi vengono aggiunti a uno Stack, la capacità viene aumentata automaticamente in base alle necessità, tramite riallocazione.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Stack.Count%2A&gt; is less than the capacity of the stack, &lt;xref:System.Collections.Stack.Push%2A&gt; is an O(1) operation.</source>
          <target state="translated">Se &lt;xref:System.Collections.Stack.Count%2A&gt;è inferiore alla capacità dello stack, &lt;xref:System.Collections.Stack.Push%2A&gt;è un'operazione o (1).&lt;/xref:System.Collections.Stack.Push%2A&gt; &lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the capacity needs to be increased to accommodate the new element, &lt;xref:System.Collections.Stack.Push%2A&gt; becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Se la capacità deve essere incrementata per far posto al nuovo elemento &lt;xref:System.Collections.Stack.Push%2A&gt;diventa un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt; &lt;/xref:System.Collections.Stack.Push%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Stack.Pop%2A&gt; is an O(1) operation.</source>
          <target state="translated">&lt;xref:System.Collections.Stack.Pop%2A&gt;è un'operazione o (1).&lt;/xref:System.Collections.Stack.Pop%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stack accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">Stack accetta <ph id="ph1">`null`</ph> come un valore valido e consente elementi duplicati.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the default initial capacity.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe vuota e con capacità iniziale predefinita.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Stack&gt; is the number of elements that the &lt;xref:System.Collections.Stack&gt; can hold.</source>
          <target state="translated">La capacità di un &lt;xref:System.Collections.Stack&gt;è il numero di elementi che la &lt;xref:System.Collections.Stack&gt;può contenere.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Stack&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un &lt;xref:System.Collections.Stack&gt;, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale si elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi a &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Questo costruttore è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe che contiene gli elementi copiati dalla raccolta specificata e ha la stessa capacità iniziale come numero di elementi copiati.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Stack&gt; is the number of elements that the &lt;xref:System.Collections.Stack&gt; can hold.</source>
          <target state="translated">La capacità di un &lt;xref:System.Collections.Stack&gt;è il numero di elementi che la &lt;xref:System.Collections.Stack&gt;può contenere.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Stack&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un &lt;xref:System.Collections.Stack&gt;, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale si elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi a &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied onto the &lt;xref:System.Collections.Stack&gt; in the same order they are read by the &lt;xref:System.Collections.IEnumerator&gt; of the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">Gli elementi vengono copiati nello &lt;xref:System.Collections.Stack&gt;nello stesso ordine in cui vengono letti dalla &lt;xref:System.Collections.IEnumerator&gt; &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`col`</ph>.</source>
          <target state="translated">Questo costruttore è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è il numero di elementi in <ph id="ph3">`col`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; to copy elements from.</source>
          <target state="translated">Il &lt;xref:System.Collections.ICollection&gt;per copiare gli elementi.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;col&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;col&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe che è vuota e ha la capacità iniziale specificata o la capacità iniziale predefinita, a seconda del valore maggiore.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of a &lt;xref:System.Collections.Stack&gt; is the number of elements that the &lt;xref:System.Collections.Stack&gt; can hold.</source>
          <target state="translated">La capacità di un &lt;xref:System.Collections.Stack&gt;è il numero di elementi che la &lt;xref:System.Collections.Stack&gt;può contenere.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to a &lt;xref:System.Collections.Stack&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un &lt;xref:System.Collections.Stack&gt;, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale si elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi a &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">Questo costruttore è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">`initialCapacity`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">Il numero iniziale di elementi che la <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> può contenere.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph>è minore di zero.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Removes all objects from the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Rimuove tutti gli oggetti dal <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Stack.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.Stack.Count%2A&gt;è impostato su zero e vengono rilasciati anche i riferimenti ad altri oggetti da elementi della raccolta.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Crea una copia superficiale del <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">Una copia superficiale di un insieme copia solo gli elementi della raccolta, indipendentemente che siano tipi riferimento o tipi di valore, ma non copia gli oggetti che fanno riferimento i riferimenti a.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">I riferimenti nella nuova raccolta puntano agli stessi oggetti che puntano i riferimenti nella raccolta originale.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Al contrario, una copia completa di una raccolta copia gli elementi e tutti gli elementi direttamente o indirettamente a cui fa riferimento gli elementi.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Una copia dei riferimenti di <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Determines whether an element is in the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Determina se un elemento è incluso il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling the &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Questo metodo determina l'uguaglianza chiamando il &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;metodo.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method tests for equality by passing the <ph id="ph1">`obj`</ph> argument to the &lt;xref:System.Object.Equals%2A&gt; method of individual objects in the collection.</source>
          <target state="translated">A partire da .NET Framework 2.0, questo metodo testa l'uguaglianza passando il <ph id="ph1">`obj`</ph> argomento per il &lt;xref:System.Object.Equals%2A&gt;metodo dei singoli oggetti nella raccolta.&lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using passing the individual items in the collection to the &lt;xref:System.Object.Equals%2A&gt; method of the <ph id="ph1">`obj`</ph> argument.</source>
          <target state="translated">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando passa i singoli elementi della raccolta per il &lt;xref:System.Object.Equals%2A&gt;metodo il <ph id="ph1">`obj`</ph> argomento.&lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The object to locate in the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Oggetto da individuare nel <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il valore può essere <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to an existing one-dimensional &lt;xref:System.Array&gt;, starting at the specified array index.</source>
          <target state="translated">Copie di <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> unidimensionale esistente &lt;xref:System.Array&gt;, a partire dall'indice di matrice specificato.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to &lt;xref:System.Collections.Stack.Pop%2A&gt;.</source>
          <target state="translated">Gli elementi vengono copiati nella matrice last-in-first-out (LIFO) ordinamento, analogamente agli elementi restituiti da una sequenza di chiamate a &lt;xref:System.Collections.Stack.Pop%2A&gt;.&lt;/xref:System.Collections.Stack.Pop%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Oggetto unidimensionale &lt;xref:System.Array&gt;che rappresenta la destinazione degli elementi copiati da <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">Il &lt;xref:System.Array&gt;deve avere un'indicizzazione in base zero.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">Indice in base zero <ph id="ph1">`array`</ph> da cui avviare la copia.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>è minore di zero.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>è multidimensionale.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">- oppure - il numero di elementi nell'origine <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è maggiore dello spazio disponibile da <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> alla fine della destinazione <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Il tipo di origine <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> non può essere eseguire automaticamente il cast al tipo della destinazione <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Ottiene il numero di elementi contenuti nella <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity is the number of elements that the &lt;xref:System.Collections.Stack&gt; can store.</source>
          <target state="translated">La capacità è il numero di elementi che la &lt;xref:System.Collections.Stack&gt;archiviabili.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Conteggio indica il numero di elementi effettivamente contenuti nella &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity is always greater than or equal to Count.</source>
          <target state="translated">La capacità è sempre maggiore di o uguale al numero specificato.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Count exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Se il conteggio supera la capacità durante l'aggiunta di elementi, la capacità viene automaticamente aumentata tramite la riallocazione della matrice interna prima di copiare gli elementi e aggiunta di nuovi elementi.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il numero di elementi contenuti nella <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Restituisce un &lt;xref:System.Collections.IEnumerator&gt;per il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic, c#]       Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, l'utilizzo <ph id="ph1">`foreach`</ph> è consigliabile, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non possono essere utilizzati per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato prima del primo elemento nella raccolta.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;riporta l'enumeratore in questa posizione.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">In questa posizione, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;è definito.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">Pertanto, è necessario chiamare &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;Restituisce lo stesso oggetto finché non &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;o &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;viene chiamato.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;imposta &lt;xref:System.Collections.IEnumerator.Current%2A&gt;all'elemento successivo.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;restituisce <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;restituire anche <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">Se l'ultima chiamata a &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;restituito <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;è definito.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">Per impostare &lt;xref:System.Collections.IEnumerator.Current%2A&gt;il primo elemento della raccolta, è possibile chiamare il metodo &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;seguito dal &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta rimane invariata.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato e il relativo comportamento sarà indefinito.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. Pertanto, l'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire la raccolta a cui accedere da più thread per la lettura e scrittura, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">Ottiene un valore che indica se l'accesso per il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è sincronizzato (thread-safe).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.Stack&gt;, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.Stack.Synchronized%2A&gt; method.</source>
          <target state="translated">Per garantire la thread-safe di &lt;xref:System.Collections.Stack&gt;, tutte le operazioni devono essere eseguite tramite il wrapper restituito dal &lt;xref:System.Collections.Stack.Synchronized%2A&gt;metodo.&lt;/xref:System.Collections.Stack.Synchronized%2A&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Anche se una raccolta è sincronizzata, altri thread possa comunque modificare la raccolta, che determina l'enumeratore generare un'eccezione.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Per garantire la protezione dei thread durante l'enumerazione, bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.Stack.SyncRoot%2A&gt; during the entire enumeration.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la &lt;xref:System.Collections.Stack.SyncRoot%2A&gt;durante l'intera enumerazione.&lt;/xref:System.Collections.Stack.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.sta_0_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/csharp/p-system.collections.sta_0_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.sta_0_1.vb)</ept><ept id="p5">]</ept>       Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classico Stack.IsSynchronized esempio n.&amp;2;<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.sta_0_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>classico Stack.IsSynchronized esempio n.&amp;2;<ept id="p4">](~/add/codesnippet/csharp/p-system.collections.sta_0_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>classico Stack.IsSynchronized esempio n.&amp;2;<ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.sta_0_1.vb)</ept> <ept id="p5">]</ept> il recupero del valore di questa proprietà è un'operazione o (1).    </target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if access to the <bpt id="p2">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, se l'accesso al <bpt id="p2">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> è sincronizzato (thread-safe); in caso contrario, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il valore predefinito è <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the object at the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> without removing it.</source>
          <target state="translated">Restituisce l'oggetto in cima il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> senza rimuoverlo.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the &lt;xref:System.Collections.Stack.Pop%2A&gt; method, but Peek does not modify the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Questo metodo è analogo al &lt;xref:System.Collections.Stack.Pop%2A&gt;metodo, ma l'anteprima non modifica la &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack.Pop%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph> can be pushed onto the &lt;xref:System.Collections.Stack&gt; as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph>può essere inserito il &lt;xref:System.Collections.Stack&gt;come segnaposto, se necessario.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>To distinguish between a null value and the end of the stack, check the &lt;xref:System.Collections.Stack.Count%2A&gt; property or catch the &lt;xref:System.InvalidOperationException&gt;, which is thrown when the &lt;xref:System.Collections.Stack&gt; is empty.</source>
          <target state="translated">Per distinguere tra un valore null e la fine dello stack, controllare il &lt;xref:System.Collections.Stack.Count%2A&gt;proprietà o intercettare il &lt;xref:System.InvalidOperationException&gt;, che viene generato quando il &lt;xref:System.Collections.Stack&gt;è vuoto.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; at the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il &lt;xref:System.Object&gt;in cima il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is empty.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è vuoto.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Removes and returns the object at the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Rimuove e restituisce l'oggetto in cima il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the &lt;xref:System.Collections.Stack.Peek%2A&gt; method, but &lt;xref:System.Collections.Stack.Peek%2A&gt; does not modify the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Questo metodo è analogo al &lt;xref:System.Collections.Stack.Peek%2A&gt;metodo, ma &lt;xref:System.Collections.Stack.Peek%2A&gt;non modifica la &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack.Peek%2A&gt; &lt;/xref:System.Collections.Stack.Peek%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph> can be pushed onto the &lt;xref:System.Collections.Stack&gt; as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph>può essere inserito il &lt;xref:System.Collections.Stack&gt;come segnaposto, se necessario.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>To distinguish between a null value and the end of the stack, check the &lt;xref:System.Collections.Stack.Count%2A&gt; property or catch the &lt;xref:System.InvalidOperationException&gt;, which is thrown when the &lt;xref:System.Collections.Stack&gt; is empty.</source>
          <target state="translated">Per distinguere tra un valore null e la fine dello stack, controllare il &lt;xref:System.Collections.Stack.Count%2A&gt;proprietà o intercettare il &lt;xref:System.InvalidOperationException&gt;, che viene generato quando il &lt;xref:System.Collections.Stack&gt;è vuoto.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; removed from the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il &lt;xref:System.Object&gt;rimosso dalla parte superiore del <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is empty.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è vuoto.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Inserts an object at the top of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Inserisce un oggetto in cima il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Stack.Count%2A&gt; already equals the capacity, the capacity of the &lt;xref:System.Collections.Stack&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Se &lt;xref:System.Collections.Stack.Count%2A&gt;è già pari alla capacità, la capacità del &lt;xref:System.Collections.Stack&gt;viene aumentata automaticamente la riallocazione della matrice interna e gli elementi esistenti vengono copiati nella nuova matrice prima che venga aggiunto il nuovo elemento.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph> can be pushed onto the &lt;xref:System.Collections.Stack&gt; as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph>può essere inserito il &lt;xref:System.Collections.Stack&gt;come segnaposto, se necessario.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>It occupies a slot in the stack and is treated like any object.</source>
          <target state="translated">Occupa uno slot nello stack e viene trattato come qualsiasi altro oggetto.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Stack.Count%2A&gt; is less than the capacity of the stack, Push is an O(1) operation.</source>
          <target state="translated">Se &lt;xref:System.Collections.Stack.Count%2A&gt;è minore della capacità dello stack, Push è un'operazione o (1).&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the capacity needs to be increased to accommodate the new element, Push becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Se la capacità deve essere incrementata per far posto al nuovo elemento, Push diventa un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to push onto the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il &lt;xref:System.Object&gt;da inserire nel <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il valore può essere <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns a synchronized (thread safe) wrapper for the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Restituisce un oggetto sincronizzato wrapper (thread-safe) per il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.Stack&gt;, all operations must be done through this wrapper.</source>
          <target state="translated">Per garantire la thread-safe di &lt;xref:System.Collections.Stack&gt;, tutte le operazioni devono essere eseguite tramite questo wrapper.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Anche se una raccolta è sincronizzata, altri thread possa comunque modificare la raccolta, che determina l'enumeratore generare un'eccezione.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Per garantire la protezione dei thread durante l'enumerazione, bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.Stack.SyncRoot%2A&gt; during the entire enumeration.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la &lt;xref:System.Collections.Stack.SyncRoot%2A&gt;durante l'intera enumerazione.&lt;/xref:System.Collections.Stack.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/m-system.collections.sta_3_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/csharp/m-system.collections.sta_3_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/visualbasic/m-system.collections.sta_3_1.vb)</ept><ept id="p5">]</ept>       This method is an O(1) operation.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classico Stack.IsSynchronized esempio n.&amp;2;<ept id="p2">](~/add/codesnippet/cpp/m-system.collections.sta_3_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>classico Stack.IsSynchronized esempio n.&amp;2;<ept id="p4">](~/add/codesnippet/csharp/m-system.collections.sta_3_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>classico Stack.IsSynchronized esempio n.&amp;2;<ept id="p6">](~/add/codesnippet/visualbasic/m-system.collections.sta_3_1.vb)</ept> <ept id="p5">]</ept> questo metodo è un'operazione o (1).    </target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to synchronize.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> per la sincronizzazione.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A synchronized wrapper around the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Un wrapper di sincronizzazione per il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stack&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stack&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso al <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a synchronized version of the &lt;xref:System.Collections.Stack&gt;, use the &lt;xref:System.Collections.Stack.Synchronized%2A&gt; method.</source>
          <target state="translated">Per creare una versione sincronizzata del &lt;xref:System.Collections.Stack&gt;, utilizzare il &lt;xref:System.Collections.Stack.Synchronized%2A&gt;metodo.&lt;/xref:System.Collections.Stack.Synchronized%2A&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.Stack&gt; using the SyncRoot property.</source>
          <target state="translated">Tuttavia, le classi derivate possono fornire una propria versione sincronizzata del &lt;xref:System.Collections.Stack&gt;utilizzando la proprietà SyncRoot.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.Stack&gt;, not directly on the &lt;xref:System.Collections.Stack&gt;.</source>
          <target state="translated">Il codice di sincronizzazione deve essere eseguite nella radice di sincronizzazione del &lt;xref:System.Collections.Stack&gt;, non direttamente sulla &lt;xref:System.Collections.Stack&gt;.&lt;/xref:System.Collections.Stack&gt; &lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.Stack&gt; object.</source>
          <target state="translated">In particolare, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente il &lt;xref:System.Collections.Stack&gt;oggetto.&lt;/xref:System.Collections.Stack&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Anche se una raccolta è sincronizzata, altri thread possa comunque modificare la raccolta, che determina l'enumeratore generare un'eccezione.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Per garantire la protezione dei thread durante l'enumerazione, bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows how to lock the collection using the SyncRoot during the entire enumeration.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando SyncRoot durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.sta_1_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/csharp/p-system.collections.sta_1_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic Stack.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.sta_1_1.vb)</ept><ept id="p5">]</ept>       Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classico Stack.IsSynchronized esempio n.&amp;2;<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.sta_1_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>classico Stack.IsSynchronized esempio n.&amp;2;<ept id="p4">](~/add/codesnippet/csharp/p-system.collections.sta_1_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>classico Stack.IsSynchronized esempio n.&amp;2;<ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.sta_1_1.vb)</ept> <ept id="p5">]</ept> il recupero del valore di questa proprietà è un'operazione o (1).    </target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Un &lt;xref:System.Object&gt;che può essere utilizzato per sincronizzare l'accesso per il <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a new array.</source>
          <target state="translated">Copie di <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in una nuova matrice.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to &lt;xref:System.Collections.Stack.Pop%2A&gt;.</source>
          <target state="translated">Gli elementi vengono copiati nella matrice last-in-first-out (LIFO) ordinamento, analogamente agli elementi restituiti da una sequenza di chiamate a &lt;xref:System.Collections.Stack.Pop%2A&gt;.&lt;/xref:System.Collections.Stack.Pop%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Stack.Count%2A&gt;.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è &lt;xref:System.Collections.Stack.Count%2A&gt;.&lt;/xref:System.Collections.Stack.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A new array containing copies of the elements of the <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Nuova matrice che contiene copie degli elementi del <bpt id="p1">&lt;xref href="System.Collections.Stack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>